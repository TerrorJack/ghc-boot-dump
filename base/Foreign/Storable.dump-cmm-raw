
==================== Raw Cmm ====================
2018-03-16 15:59:31.278250656 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:59:31.28024102 UTC

[section ""data" . Foreign.Storable.sizeOf_closure" {
     Foreign.Storable.sizeOf_closure:
         const Foreign.Storable.sizeOf_info;
 },
 Foreign.Storable.sizeOf_entry() //  [R2]
         { []
         }
     {offset
       c4H4x: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4H4y; else goto c4H4z;
       c4H4y: // global
           R2 = R2;
           R1 = Foreign.Storable.sizeOf_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4H4z: // global
           I64[Sp - 8] = block_c4H4u_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4H4D; else goto c4H4v;
       u4H4D: // global
           call _c4H4u(R1) args: 0, res: 0, upd: 0;
       c4H4v: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.sizeOf_info" {
     Foreign.Storable.sizeOf_info:
         const Foreign.Storable.sizeOf_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c4H4u() //  [R1]
         { []
         }
     {offset
       c4H4u: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4H4u_info" {
     block_c4H4u_info:
         const _c4H4u;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.288131978 UTC

[section ""data" . Foreign.Storable.alignment_closure" {
     Foreign.Storable.alignment_closure:
         const Foreign.Storable.alignment_info;
 },
 Foreign.Storable.alignment_entry() //  [R2]
         { []
         }
     {offset
       c4H4U: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4H4V; else goto c4H4W;
       c4H4V: // global
           R2 = R2;
           R1 = Foreign.Storable.alignment_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4H4W: // global
           I64[Sp - 8] = block_c4H4R_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4H50; else goto c4H4S;
       u4H50: // global
           call _c4H4R(R1) args: 0, res: 0, upd: 0;
       c4H4S: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.alignment_info" {
     Foreign.Storable.alignment_info:
         const Foreign.Storable.alignment_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c4H4R() //  [R1]
         { []
         }
     {offset
       c4H4R: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4H4R_info" {
     block_c4H4R_info:
         const _c4H4R;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.293920734 UTC

[section ""data" . Foreign.Storable.peekElemOff_closure" {
     Foreign.Storable.peekElemOff_closure:
         const Foreign.Storable.peekElemOff_info;
 },
 Foreign.Storable.peekElemOff_entry() //  [R2]
         { []
         }
     {offset
       c4H5h: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4H5i; else goto c4H5j;
       c4H5i: // global
           R2 = R2;
           R1 = Foreign.Storable.peekElemOff_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4H5j: // global
           I64[Sp - 8] = block_c4H5e_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4H5n; else goto c4H5f;
       u4H5n: // global
           call _c4H5e(R1) args: 0, res: 0, upd: 0;
       c4H5f: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.peekElemOff_info" {
     Foreign.Storable.peekElemOff_info:
         const Foreign.Storable.peekElemOff_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c4H5e() //  [R1]
         { []
         }
     {offset
       c4H5e: // global
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4H5e_info" {
     block_c4H5e_info:
         const _c4H5e;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.299806722 UTC

[section ""data" . Foreign.Storable.pokeElemOff_closure" {
     Foreign.Storable.pokeElemOff_closure:
         const Foreign.Storable.pokeElemOff_info;
 },
 Foreign.Storable.pokeElemOff_entry() //  [R2]
         { []
         }
     {offset
       c4H5E: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4H5F; else goto c4H5G;
       c4H5F: // global
           R2 = R2;
           R1 = Foreign.Storable.pokeElemOff_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4H5G: // global
           I64[Sp - 8] = block_c4H5B_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4H5K; else goto c4H5C;
       u4H5K: // global
           call _c4H5B(R1) args: 0, res: 0, upd: 0;
       c4H5C: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.pokeElemOff_info" {
     Foreign.Storable.pokeElemOff_info:
         const Foreign.Storable.pokeElemOff_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c4H5B() //  [R1]
         { []
         }
     {offset
       c4H5B: // global
           R1 = P64[R1 + 31];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4H5B_info" {
     block_c4H5B_info:
         const _c4H5B;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.305473838 UTC

[section ""data" . Foreign.Storable.peekByteOff_closure" {
     Foreign.Storable.peekByteOff_closure:
         const Foreign.Storable.peekByteOff_info;
 },
 Foreign.Storable.peekByteOff_entry() //  [R2]
         { []
         }
     {offset
       c4H61: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4H62; else goto c4H63;
       c4H62: // global
           R2 = R2;
           R1 = Foreign.Storable.peekByteOff_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4H63: // global
           I64[Sp - 8] = block_c4H5Y_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4H67; else goto c4H5Z;
       u4H67: // global
           call _c4H5Y(R1) args: 0, res: 0, upd: 0;
       c4H5Z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.peekByteOff_info" {
     Foreign.Storable.peekByteOff_info:
         const Foreign.Storable.peekByteOff_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c4H5Y() //  [R1]
         { []
         }
     {offset
       c4H5Y: // global
           R1 = P64[R1 + 39];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4H5Y_info" {
     block_c4H5Y_info:
         const _c4H5Y;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.311198193 UTC

[section ""data" . Foreign.Storable.pokeByteOff_closure" {
     Foreign.Storable.pokeByteOff_closure:
         const Foreign.Storable.pokeByteOff_info;
 },
 Foreign.Storable.pokeByteOff_entry() //  [R2]
         { []
         }
     {offset
       c4H6o: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4H6p; else goto c4H6q;
       c4H6p: // global
           R2 = R2;
           R1 = Foreign.Storable.pokeByteOff_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4H6q: // global
           I64[Sp - 8] = block_c4H6l_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4H6u; else goto c4H6m;
       u4H6u: // global
           call _c4H6l(R1) args: 0, res: 0, upd: 0;
       c4H6m: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.pokeByteOff_info" {
     Foreign.Storable.pokeByteOff_info:
         const Foreign.Storable.pokeByteOff_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c4H6l() //  [R1]
         { []
         }
     {offset
       c4H6l: // global
           R1 = P64[R1 + 47];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4H6l_info" {
     block_c4H6l_info:
         const _c4H6l;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.317083147 UTC

[section ""data" . Foreign.Storable.peek_closure" {
     Foreign.Storable.peek_closure:
         const Foreign.Storable.peek_info;
 },
 Foreign.Storable.peek_entry() //  [R2]
         { []
         }
     {offset
       c4H6L: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4H6M; else goto c4H6N;
       c4H6M: // global
           R2 = R2;
           R1 = Foreign.Storable.peek_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4H6N: // global
           I64[Sp - 8] = block_c4H6I_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4H6R; else goto c4H6J;
       u4H6R: // global
           call _c4H6I(R1) args: 0, res: 0, upd: 0;
       c4H6J: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.peek_info" {
     Foreign.Storable.peek_info:
         const Foreign.Storable.peek_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c4H6I() //  [R1]
         { []
         }
     {offset
       c4H6I: // global
           R1 = P64[R1 + 55];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4H6I_info" {
     block_c4H6I_info:
         const _c4H6I;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.327026231 UTC

[section ""data" . Foreign.Storable.poke_closure" {
     Foreign.Storable.poke_closure:
         const Foreign.Storable.poke_info;
 },
 Foreign.Storable.poke_entry() //  [R2]
         { []
         }
     {offset
       c4H78: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4H79; else goto c4H7a;
       c4H79: // global
           R2 = R2;
           R1 = Foreign.Storable.poke_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4H7a: // global
           I64[Sp - 8] = block_c4H75_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4H7e; else goto c4H76;
       u4H7e: // global
           call _c4H75(R1) args: 0, res: 0, upd: 0;
       c4H76: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.poke_info" {
     Foreign.Storable.poke_info:
         const Foreign.Storable.poke_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c4H75() //  [R1]
         { []
         }
     {offset
       c4H75: // global
           R1 = P64[R1 + 63];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4H75_info" {
     block_c4H75_info:
         const _c4H75;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.334210086 UTC

[section ""data" . Foreign.Storable.$fStorable()7_closure" {
     Foreign.Storable.$fStorable()7_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.337449345 UTC

[section ""data" . Foreign.Storable.$fStorable()_$calignment_closure" {
     Foreign.Storable.$fStorable()_$calignment_closure:
         const Foreign.Storable.$fStorable()_$calignment_info;
 },
 Foreign.Storable.$fStorable()_$calignment_entry() //  []
         { []
         }
     {offset
       c4H7t: // global
           R1 = Foreign.Storable.$fStorable()7_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorable()_$calignment_info" {
     Foreign.Storable.$fStorable()_$calignment_info:
         const Foreign.Storable.$fStorable()_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.342185104 UTC

[section ""data" . Foreign.Storable.$fStorable()8_closure" {
     Foreign.Storable.$fStorable()8_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.345361009 UTC

[section ""data" . Foreign.Storable.$fStorable()_$csizeOf_closure" {
     Foreign.Storable.$fStorable()_$csizeOf_closure:
         const Foreign.Storable.$fStorable()_$csizeOf_info;
 },
 Foreign.Storable.$fStorable()_$csizeOf_entry() //  []
         { []
         }
     {offset
       c4H7G: // global
           R1 = Foreign.Storable.$fStorable()8_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorable()_$csizeOf_info" {
     Foreign.Storable.$fStorable()_$csizeOf_info:
         const Foreign.Storable.$fStorable()_$csizeOf_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.350302479 UTC

[section ""data" . Foreign.Storable.$fStorableBool7_closure" {
     Foreign.Storable.$fStorableBool7_closure:
         const GHC.Types.I#_con_info;
         const 4;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.353591795 UTC

[section ""data" . Foreign.Storable.$fStorableChar_$calignment_closure" {
     Foreign.Storable.$fStorableChar_$calignment_closure:
         const Foreign.Storable.$fStorableChar_$calignment_info;
 },
 Foreign.Storable.$fStorableChar_$calignment_entry() //  []
         { []
         }
     {offset
       c4H7T: // global
           R1 = Foreign.Storable.$fStorableBool7_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableChar_$calignment_info" {
     Foreign.Storable.$fStorableChar_$calignment_info:
         const Foreign.Storable.$fStorableChar_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.358988285 UTC

[section ""data" . Foreign.Storable.$fStorableDouble5_closure" {
     Foreign.Storable.$fStorableDouble5_closure:
         const GHC.Types.I#_con_info;
         const 8;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.362172613 UTC

[section ""data" . Foreign.Storable.$fStorableInt_$calignment_closure" {
     Foreign.Storable.$fStorableInt_$calignment_closure:
         const Foreign.Storable.$fStorableInt_$calignment_info;
 },
 Foreign.Storable.$fStorableInt_$calignment_entry() //  []
         { []
         }
     {offset
       c4H86: // global
           R1 = Foreign.Storable.$fStorableDouble5_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt_$calignment_info" {
     Foreign.Storable.$fStorableInt_$calignment_info:
         const Foreign.Storable.$fStorableInt_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.368132807 UTC

[section ""data" . Foreign.Storable.$fStorableWord_$calignment_closure" {
     Foreign.Storable.$fStorableWord_$calignment_closure:
         const Foreign.Storable.$fStorableWord_$calignment_info;
 },
 Foreign.Storable.$fStorableWord_$calignment_entry() //  []
         { []
         }
     {offset
       c4H8i: // global
           R1 = Foreign.Storable.$fStorableDouble5_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord_$calignment_info" {
     Foreign.Storable.$fStorableWord_$calignment_info:
         const Foreign.Storable.$fStorableWord_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.374162379 UTC

[section ""data" . Foreign.Storable.$fStorablePtr_$calignment_closure" {
     Foreign.Storable.$fStorablePtr_$calignment_closure:
         const Foreign.Storable.$fStorablePtr_$calignment_info;
 },
 Foreign.Storable.$fStorablePtr_$calignment_entry() //  []
         { []
         }
     {offset
       c4H8u: // global
           R1 = Foreign.Storable.$fStorableDouble5_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorablePtr_$calignment_info" {
     Foreign.Storable.$fStorablePtr_$calignment_info:
         const Foreign.Storable.$fStorablePtr_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.379646764 UTC

[section ""data" . Foreign.Storable.$fStorableFunPtr_$calignment_closure" {
     Foreign.Storable.$fStorableFunPtr_$calignment_closure:
         const Foreign.Storable.$fStorableFunPtr_$calignment_info;
 },
 Foreign.Storable.$fStorableFunPtr_$calignment_entry() //  []
         { []
         }
     {offset
       c4H8G: // global
           R1 = Foreign.Storable.$fStorableDouble5_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFunPtr_$calignment_info" {
     Foreign.Storable.$fStorableFunPtr_$calignment_info:
         const Foreign.Storable.$fStorableFunPtr_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.38523021 UTC

[section ""data" . Foreign.Storable.$fStorableStablePtr_$calignment_closure" {
     Foreign.Storable.$fStorableStablePtr_$calignment_closure:
         const Foreign.Storable.$fStorableStablePtr_$calignment_info;
 },
 Foreign.Storable.$fStorableStablePtr_$calignment_entry() //  []
         { []
         }
     {offset
       c4H8S: // global
           R1 = Foreign.Storable.$fStorableDouble5_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableStablePtr_$calignment_info" {
     Foreign.Storable.$fStorableStablePtr_$calignment_info:
         const Foreign.Storable.$fStorableStablePtr_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.390204678 UTC

[section ""data" . Foreign.Storable.$fStorableFloat_$calignment_closure" {
     Foreign.Storable.$fStorableFloat_$calignment_closure:
         const Foreign.Storable.$fStorableFloat_$calignment_info;
 },
 Foreign.Storable.$fStorableFloat_$calignment_entry() //  []
         { []
         }
     {offset
       c4H94: // global
           R1 = Foreign.Storable.$fStorableBool7_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFloat_$calignment_info" {
     Foreign.Storable.$fStorableFloat_$calignment_info:
         const Foreign.Storable.$fStorableFloat_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.394319449 UTC

[section ""data" . Foreign.Storable.$fStorableDouble_$calignment_closure" {
     Foreign.Storable.$fStorableDouble_$calignment_closure:
         const Foreign.Storable.$fStorableDouble_$calignment_info;
 },
 Foreign.Storable.$fStorableDouble_$calignment_entry() //  []
         { []
         }
     {offset
       c4H9g: // global
           R1 = Foreign.Storable.$fStorableDouble5_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableDouble_$calignment_info" {
     Foreign.Storable.$fStorableDouble_$calignment_info:
         const Foreign.Storable.$fStorableDouble_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.397960191 UTC

[section ""data" . Foreign.Storable.$fStorableWord8_$calignment_closure" {
     Foreign.Storable.$fStorableWord8_$calignment_closure:
         const Foreign.Storable.$fStorableWord8_$calignment_info;
 },
 Foreign.Storable.$fStorableWord8_$calignment_entry() //  []
         { []
         }
     {offset
       c4H9s: // global
           R1 = Foreign.Storable.$fStorable()7_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord8_$calignment_info" {
     Foreign.Storable.$fStorableWord8_$calignment_info:
         const Foreign.Storable.$fStorableWord8_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.401138076 UTC

[section ""data" . Foreign.Storable.$fStorableInt10_closure" {
     Foreign.Storable.$fStorableInt10_closure:
         const GHC.Types.I#_con_info;
         const 2;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.40342952 UTC

[section ""data" . Foreign.Storable.$fStorableWord16_$calignment_closure" {
     Foreign.Storable.$fStorableWord16_$calignment_closure:
         const Foreign.Storable.$fStorableWord16_$calignment_info;
 },
 Foreign.Storable.$fStorableWord16_$calignment_entry() //  []
         { []
         }
     {offset
       c4H9F: // global
           R1 = Foreign.Storable.$fStorableInt10_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord16_$calignment_info" {
     Foreign.Storable.$fStorableWord16_$calignment_info:
         const Foreign.Storable.$fStorableWord16_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.407734308 UTC

[section ""data" . Foreign.Storable.$fStorableWord32_$calignment_closure" {
     Foreign.Storable.$fStorableWord32_$calignment_closure:
         const Foreign.Storable.$fStorableWord32_$calignment_info;
 },
 Foreign.Storable.$fStorableWord32_$calignment_entry() //  []
         { []
         }
     {offset
       c4H9R: // global
           R1 = Foreign.Storable.$fStorableBool7_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord32_$calignment_info" {
     Foreign.Storable.$fStorableWord32_$calignment_info:
         const Foreign.Storable.$fStorableWord32_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.411928274 UTC

[section ""data" . Foreign.Storable.$fStorableWord64_$calignment_closure" {
     Foreign.Storable.$fStorableWord64_$calignment_closure:
         const Foreign.Storable.$fStorableWord64_$calignment_info;
 },
 Foreign.Storable.$fStorableWord64_$calignment_entry() //  []
         { []
         }
     {offset
       c4Ha3: // global
           R1 = Foreign.Storable.$fStorableDouble5_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord64_$calignment_info" {
     Foreign.Storable.$fStorableWord64_$calignment_info:
         const Foreign.Storable.$fStorableWord64_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.415542976 UTC

[section ""data" . Foreign.Storable.$fStorableInt8_$calignment_closure" {
     Foreign.Storable.$fStorableInt8_$calignment_closure:
         const Foreign.Storable.$fStorableInt8_$calignment_info;
 },
 Foreign.Storable.$fStorableInt8_$calignment_entry() //  []
         { []
         }
     {offset
       c4Haf: // global
           R1 = Foreign.Storable.$fStorable()7_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt8_$calignment_info" {
     Foreign.Storable.$fStorableInt8_$calignment_info:
         const Foreign.Storable.$fStorableInt8_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.419155353 UTC

[section ""data" . Foreign.Storable.$fStorableInt16_$calignment_closure" {
     Foreign.Storable.$fStorableInt16_$calignment_closure:
         const Foreign.Storable.$fStorableInt16_$calignment_info;
 },
 Foreign.Storable.$fStorableInt16_$calignment_entry() //  []
         { []
         }
     {offset
       c4Har: // global
           R1 = Foreign.Storable.$fStorableInt10_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt16_$calignment_info" {
     Foreign.Storable.$fStorableInt16_$calignment_info:
         const Foreign.Storable.$fStorableInt16_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.422817751 UTC

[section ""data" . Foreign.Storable.$fStorableInt32_$calignment_closure" {
     Foreign.Storable.$fStorableInt32_$calignment_closure:
         const Foreign.Storable.$fStorableInt32_$calignment_info;
 },
 Foreign.Storable.$fStorableInt32_$calignment_entry() //  []
         { []
         }
     {offset
       c4HaD: // global
           R1 = Foreign.Storable.$fStorableBool7_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt32_$calignment_info" {
     Foreign.Storable.$fStorableInt32_$calignment_info:
         const Foreign.Storable.$fStorableInt32_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.426499669 UTC

[section ""data" . Foreign.Storable.$fStorableInt64_$calignment_closure" {
     Foreign.Storable.$fStorableInt64_$calignment_closure:
         const Foreign.Storable.$fStorableInt64_$calignment_info;
 },
 Foreign.Storable.$fStorableInt64_$calignment_entry() //  []
         { []
         }
     {offset
       c4HaP: // global
           R1 = Foreign.Storable.$fStorableDouble5_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt64_$calignment_info" {
     Foreign.Storable.$fStorableInt64_$calignment_info:
         const Foreign.Storable.$fStorableInt64_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.429581201 UTC

[section ""cstring" . lvl_r4Ff9_bytes" {
     lvl_r4Ff9_bytes:
         I8[] [117,110,100,101,102,105,110,101,100]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.43190177 UTC

[section ""data" . lvl1_r4Ffa_closure" {
     lvl1_r4Ffa_closure:
         const lvl1_r4Ffa_info;
         const 0;
         const 0;
         const 0;
 },
 lvl1_r4Ffa_entry() //  [R1]
         { []
         }
     {offset
       c4Hb4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4Hb5; else goto c4Hb6;
       c4Hb5: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4Hb6: // global
           (_c4Hb1::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c4Hb1::I64 == 0) goto c4Hb3; else goto c4Hb2;
       c4Hb3: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c4Hb2: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c4Hb1::I64;
           R2 = lvl_r4Ff9_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl1_r4Ffa_info" {
     lvl1_r4Ffa_info:
         const lvl1_r4Ffa_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.435582848 UTC

[section ""cstring" . Foreign.Storable.$trModule4_bytes" {
     Foreign.Storable.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.438574311 UTC

[section ""data" . lvl2_r4Ffb_closure" {
     lvl2_r4Ffb_closure:
         const lvl2_r4Ffb_info;
         const 0;
         const 0;
         const 0;
 },
 lvl2_r4Ffb_entry() //  [R1]
         { []
         }
     {offset
       c4Hbl: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4Hbm; else goto c4Hbn;
       c4Hbm: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4Hbn: // global
           (_c4Hbi::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c4Hbi::I64 == 0) goto c4Hbk; else goto c4Hbj;
       c4Hbk: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c4Hbj: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c4Hbi::I64;
           R2 = Foreign.Storable.$trModule4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl2_r4Ffb_info" {
     lvl2_r4Ffb_info:
         const lvl2_r4Ffb_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.442284626 UTC

[section ""cstring" . Foreign.Storable.$trModule2_bytes" {
     Foreign.Storable.$trModule2_bytes:
         I8[] [70,111,114,101,105,103,110,46,83,116,111,114,97,98,108,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.444694369 UTC

[section ""data" . lvl3_r4Ffc_closure" {
     lvl3_r4Ffc_closure:
         const lvl3_r4Ffc_info;
         const 0;
         const 0;
         const 0;
 },
 lvl3_r4Ffc_entry() //  [R1]
         { []
         }
     {offset
       c4HbC: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HbD; else goto c4HbE;
       c4HbD: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4HbE: // global
           (_c4Hbz::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c4Hbz::I64 == 0) goto c4HbB; else goto c4HbA;
       c4HbB: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c4HbA: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c4Hbz::I64;
           R2 = Foreign.Storable.$trModule2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl3_r4Ffc_info" {
     lvl3_r4Ffc_info:
         const lvl3_r4Ffc_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.448322001 UTC

[section ""cstring" . lvl4_r4Ffd_bytes" {
     lvl4_r4Ffd_bytes:
         I8[] [46,47,70,111,114,101,105,103,110,47,83,116,111,114,97,98,108,101,46,104,115]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.45161452 UTC

[section ""data" . lvl5_r4Ffe_closure" {
     lvl5_r4Ffe_closure:
         const lvl5_r4Ffe_info;
         const 0;
         const 0;
         const 0;
 },
 lvl5_r4Ffe_entry() //  [R1]
         { []
         }
     {offset
       c4HbT: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HbU; else goto c4HbV;
       c4HbU: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4HbV: // global
           (_c4HbQ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c4HbQ::I64 == 0) goto c4HbS; else goto c4HbR;
       c4HbS: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c4HbR: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c4HbQ::I64;
           R2 = lvl4_r4Ffd_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl5_r4Ffe_info" {
     lvl5_r4Ffe_info:
         const lvl5_r4Ffe_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.455408263 UTC

[section ""data" . lvl6_r4Fff_closure" {
     lvl6_r4Fff_closure:
         const GHC.Types.I#_con_info;
         const 238;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.457068873 UTC

[section ""data" . lvl7_r4Ffg_closure" {
     lvl7_r4Ffg_closure:
         const GHC.Types.I#_con_info;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.45886453 UTC

[section ""data" . lvl8_r4Ffh_closure" {
     lvl8_r4Ffh_closure:
         const GHC.Types.I#_con_info;
         const 39;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.460616863 UTC

[section ""data" . lvl9_r4Ffi_closure" {
     lvl9_r4Ffi_closure:
         const GHC.Stack.Types.SrcLoc_con_info;
         const lvl2_r4Ffb_closure;
         const lvl3_r4Ffc_closure;
         const lvl5_r4Ffe_closure;
         const lvl6_r4Fff_closure+1;
         const lvl7_r4Ffg_closure+1;
         const lvl6_r4Fff_closure+1;
         const lvl8_r4Ffh_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.462483282 UTC

[section ""data" . lvl10_r4Ffj_closure" {
     lvl10_r4Ffj_closure:
         const GHC.Stack.Types.PushCallStack_con_info;
         const lvl1_r4Ffa_closure;
         const lvl9_r4Ffi_closure+1;
         const GHC.Stack.Types.EmptyCallStack_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.46492493 UTC

[section ""data" . Foreign.Storable.$fStorableRatio8_closure" {
     Foreign.Storable.$fStorableRatio8_closure:
         const Foreign.Storable.$fStorableRatio8_info;
         const 0;
         const 0;
         const 0;
 },
 Foreign.Storable.$fStorableRatio8_entry() //  [R1]
         { []
         }
     {offset
       c4Hce: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4Hcf; else goto c4Hcg;
       c4Hcf: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4Hcg: // global
           (_c4Hcb::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c4Hcb::I64 == 0) goto c4Hcd; else goto c4Hcc;
       c4Hcd: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c4Hcc: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c4Hcb::I64;
           R2 = lvl10_r4Ffj_closure+2;
           Sp = Sp - 16;
           call GHC.Err.undefined_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio8_info" {
     Foreign.Storable.$fStorableRatio8_info:
         const Foreign.Storable.$fStorableRatio8_entry;
         const 0;
         const 12884901909;
         const S4FBN_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.470474553 UTC

[section ""data" . Foreign.Storable.$fStorableRatio_$calignment_closure" {
     Foreign.Storable.$fStorableRatio_$calignment_closure:
         const Foreign.Storable.$fStorableRatio_$calignment_info;
         const 0;
 },
 lvl20_s4Fh7_entry() //  [R1]
         { []
         }
     {offset
       c4Hcw: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4Hcx; else goto c4Hcy;
       c4Hcx: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4Hcy: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.Storable.$fStorableRatio8_closure;
           Sp = Sp - 32;
           call Foreign.Storable.alignment_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl20_s4Fh7_info" {
     lvl20_s4Fh7_info:
         const lvl20_s4Fh7_entry;
         const 1;
         const 4294967312;
         const S4FBN_srt+16;
 },
 sat_s4Fh9_entry() //  [R1]
         { []
         }
     {offset
       c4HcE: // global
           R1 = P64[R1 + 7] & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s4Fh9_info" {
     sat_s4Fh9_info:
         const sat_s4Fh9_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Foreign.Storable.$fStorableRatio_$calignment_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HcH: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c4HcL; else goto c4HcK;
       c4HcL: // global
           HpAlloc = 40;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableRatio_$calignment_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HcK: // global
           I64[Hp - 32] = lvl20_s4Fh7_info;
           P64[Hp - 16] = R2;
           I64[Hp - 8] = sat_s4Fh9_info;
           P64[Hp] = Hp - 32;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio_$calignment_info" {
     Foreign.Storable.$fStorableRatio_$calignment_info:
         const Foreign.Storable.$fStorableRatio_$calignment_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S4FBN_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.478214329 UTC

[section ""data" . Foreign.Storable.$fStorableFingerprint_$calignment_closure" {
     Foreign.Storable.$fStorableFingerprint_$calignment_closure:
         const Foreign.Storable.$fStorableFingerprint_$calignment_info;
 },
 Foreign.Storable.$fStorableFingerprint_$calignment_entry() //  []
         { []
         }
     {offset
       c4Hd5: // global
           R1 = Foreign.Storable.$fStorableDouble5_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFingerprint_$calignment_info" {
     Foreign.Storable.$fStorableFingerprint_$calignment_info:
         const Foreign.Storable.$fStorableFingerprint_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.481501636 UTC

[section ""data" . Foreign.Storable.$fStorableFingerprint7_closure" {
     Foreign.Storable.$fStorableFingerprint7_closure:
         const GHC.Types.I#_con_info;
         const 16;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.483614999 UTC

[section ""data" . Foreign.Storable.$fStorableFingerprint_$csizeOf_closure" {
     Foreign.Storable.$fStorableFingerprint_$csizeOf_closure:
         const Foreign.Storable.$fStorableFingerprint_$csizeOf_info;
 },
 Foreign.Storable.$fStorableFingerprint_$csizeOf_entry() //  []
         { []
         }
     {offset
       c4Hdi: // global
           R1 = Foreign.Storable.$fStorableFingerprint7_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFingerprint_$csizeOf_info" {
     Foreign.Storable.$fStorableFingerprint_$csizeOf_info:
         const Foreign.Storable.$fStorableFingerprint_$csizeOf_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.487853153 UTC

[section ""data" . Foreign.Storable.$dmpoke_closure" {
     Foreign.Storable.$dmpoke_closure:
         const Foreign.Storable.$dmpoke_info;
 },
 Foreign.Storable.$dmpoke_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Hdu: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4Hdv; else goto c4Hdw;
       c4Hdv: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$dmpoke_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Hdw: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = Foreign.Storable.$fStorable()8_closure+1;
           Sp = Sp - 24;
           call Foreign.Storable.pokeElemOff_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$dmpoke_info" {
     Foreign.Storable.$dmpoke_info:
         const Foreign.Storable.$dmpoke_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.492064258 UTC

[section ""data" . Foreign.Storable.$dmpeek_closure" {
     Foreign.Storable.$dmpeek_closure:
         const Foreign.Storable.$dmpeek_info;
 },
 Foreign.Storable.$dmpeek_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HdG: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4HdH; else goto c4HdI;
       c4HdH: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$dmpeek_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HdI: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = Foreign.Storable.$fStorable()8_closure+1;
           Sp = Sp - 24;
           call Foreign.Storable.peekElemOff_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$dmpeek_info" {
     Foreign.Storable.$dmpeek_info:
         const Foreign.Storable.$dmpeek_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.497860502 UTC

[section ""data" . Foreign.Storable.$dmpokeByteOff_closure" {
     Foreign.Storable.$dmpokeByteOff_closure:
         const Foreign.Storable.$dmpokeByteOff_info;
 },
 sat_s4Fho_entry() //  [R1]
         { []
         }
     {offset
       c4HdZ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4Heb; else goto c4Hec;
       c4Heb: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4Hec: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c4HdW_info;
           _s4Fhi::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s4Fhi::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4Hei; else goto c4HdX;
       u4Hei: // global
           call _c4HdW(R1) args: 0, res: 0, upd: 0;
       c4HdX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4Fho_info" {
     sat_s4Fho_info:
         const sat_s4Fho_entry;
         const 2;
         const 18;
 },
 _c4HdW() //  [R1]
         { []
         }
     {offset
       c4HdW: // global
           I64[Sp] = block_c4He2_info;
           _s4Fhk::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fhk::I64;
           if (R1 & 7 != 0) goto u4Heh; else goto c4He3;
       u4Heh: // global
           call _c4He2(R1) args: 0, res: 0, upd: 0;
       c4He3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4HdW_info" {
     block_c4HdW_info:
         const _c4HdW;
         const 1;
         const 30;
 },
 _c4He2() //  [R1]
         { []
         }
     {offset
       c4He2: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Heg; else goto c4Hef;
       c4Heg: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4Hef: // global
           _s4Fhn::I64 = I64[Sp + 8] + I64[R1 + 7];
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4Fhn::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4He2_info" {
     block_c4He2_info:
         const _c4He2;
         const 65;
         const 30;
 },
 Foreign.Storable.$dmpokeByteOff_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4Hej: // global
           _s4Fhi::P64 = R4;
           _s4Fhh::P64 = R3;
           _s4Fhg::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto c4Hek; else goto c4Hel;
       c4Hel: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c4Hen; else goto c4Hem;
       c4Hen: // global
           HpAlloc = 32;
           goto c4Hek;
       c4Hek: // global
           R4 = _s4Fhi::P64;
           R3 = _s4Fhh::P64;
           R2 = _s4Fhg::P64;
           R1 = Foreign.Storable.$dmpokeByteOff_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Hem: // global
           I64[Hp - 24] = sat_s4Fho_info;
           P64[Hp - 8] = _s4Fhh::P64;
           P64[Hp] = _s4Fhi::P64;
           R2 = _s4Fhg::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call Foreign.Storable.poke_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$dmpokeByteOff_info" {
     Foreign.Storable.$dmpokeByteOff_info:
         const Foreign.Storable.$dmpokeByteOff_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.509078581 UTC

[section ""data" . Foreign.Storable.$dmpeekByteOff_closure" {
     Foreign.Storable.$dmpeekByteOff_closure:
         const Foreign.Storable.$dmpeekByteOff_info;
 },
 sat_s4Fhx_entry() //  [R1]
         { []
         }
     {offset
       c4HeU: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4Hf6; else goto c4Hf7;
       c4Hf6: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4Hf7: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c4HeR_info;
           _s4Fhr::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s4Fhr::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4Hfd; else goto c4HeS;
       u4Hfd: // global
           call _c4HeR(R1) args: 0, res: 0, upd: 0;
       c4HeS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4Fhx_info" {
     sat_s4Fhx_info:
         const sat_s4Fhx_entry;
         const 2;
         const 18;
 },
 _c4HeR() //  [R1]
         { []
         }
     {offset
       c4HeR: // global
           I64[Sp] = block_c4HeX_info;
           _s4Fht::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fht::I64;
           if (R1 & 7 != 0) goto u4Hfc; else goto c4HeY;
       u4Hfc: // global
           call _c4HeX(R1) args: 0, res: 0, upd: 0;
       c4HeY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4HeR_info" {
     block_c4HeR_info:
         const _c4HeR;
         const 1;
         const 30;
 },
 _c4HeX() //  [R1]
         { []
         }
     {offset
       c4HeX: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Hfb; else goto c4Hfa;
       c4Hfb: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4Hfa: // global
           _s4Fhw::I64 = I64[Sp + 8] + I64[R1 + 7];
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4Fhw::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4HeX_info" {
     block_c4HeX_info:
         const _c4HeX;
         const 65;
         const 30;
 },
 Foreign.Storable.$dmpeekByteOff_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4Hfe: // global
           _s4Fhr::P64 = R4;
           _s4Fhq::P64 = R3;
           _s4Fhp::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto c4Hff; else goto c4Hfg;
       c4Hfg: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c4Hfi; else goto c4Hfh;
       c4Hfi: // global
           HpAlloc = 32;
           goto c4Hff;
       c4Hff: // global
           R4 = _s4Fhr::P64;
           R3 = _s4Fhq::P64;
           R2 = _s4Fhp::P64;
           R1 = Foreign.Storable.$dmpeekByteOff_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Hfh: // global
           I64[Hp - 24] = sat_s4Fhx_info;
           P64[Hp - 8] = _s4Fhq::P64;
           P64[Hp] = _s4Fhr::P64;
           R2 = _s4Fhp::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call Foreign.Storable.peek_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$dmpeekByteOff_info" {
     Foreign.Storable.$dmpeekByteOff_info:
         const Foreign.Storable.$dmpeekByteOff_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.519592445 UTC

[section ""data" . Foreign.Storable.$fStorableInt17_closure" {
     Foreign.Storable.$fStorableInt17_closure:
         const Foreign.Storable.$fStorableInt17_info;
 },
 Foreign.Storable.$fStorableInt17_entry() //  [R2]
         { []
         }
     {offset
       c4HfL: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4HfP; else goto c4HfQ;
       c4HfP: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt17_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4HfQ: // global
           I64[Sp - 8] = block_c4HfI_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4HfU; else goto c4HfJ;
       u4HfU: // global
           call _c4HfI(R1) args: 0, res: 0, upd: 0;
       c4HfJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt17_info" {
     Foreign.Storable.$fStorableInt17_info:
         const Foreign.Storable.$fStorableInt17_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4HfI() //  [R1]
         { []
         }
     {offset
       c4HfI: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HfT; else goto c4HfS;
       c4HfT: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HfS: // global
           _s4FhE::I64 = I64[I64[R1 + 7]];
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s4FhE::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HfI_info" {
     block_c4HfI_info:
         const _c4HfI;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.526582552 UTC

[section ""data" . Foreign.Storable.$fStorableInt19_closure" {
     Foreign.Storable.$fStorableInt19_closure:
         const Foreign.Storable.$fStorableInt19_info;
 },
 Foreign.Storable.$fStorableInt19_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Hgd: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4Hgp; else goto c4Hgq;
       c4Hgp: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt19_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Hgq: // global
           I64[Sp - 16] = block_c4Hga_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4Hgw; else goto c4Hgb;
       u4Hgw: // global
           call _c4Hga(R1) args: 0, res: 0, upd: 0;
       c4Hgb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt19_info" {
     Foreign.Storable.$fStorableInt19_info:
         const Foreign.Storable.$fStorableInt19_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4Hga() //  [R1]
         { []
         }
     {offset
       c4Hga: // global
           I64[Sp] = block_c4Hgg_info;
           _s4FhK::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FhK::I64;
           if (R1 & 7 != 0) goto u4Hgv; else goto c4Hgh;
       u4Hgv: // global
           call _c4Hgg(R1) args: 0, res: 0, upd: 0;
       c4Hgh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hga_info" {
     block_c4Hga_info:
         const _c4Hga;
         const 1;
         const 30;
 },
 _c4Hgg() //  [R1]
         { []
         }
     {offset
       c4Hgg: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Hgu; else goto c4Hgt;
       c4Hgu: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Hgt: // global
           _s4FhQ::I64 = I64[I64[Sp + 8] + I64[R1 + 7]];
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s4FhQ::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hgg_info" {
     block_c4Hgg_info:
         const _c4Hgg;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.534530719 UTC

[section ""data" . Foreign.Storable.$fStorableInt15_closure" {
     Foreign.Storable.$fStorableInt15_closure:
         const Foreign.Storable.$fStorableInt15_info;
 },
 Foreign.Storable.$fStorableInt15_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HgU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HgY; else goto c4HgZ;
       c4HgY: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt15_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HgZ: // global
           I64[Sp - 16] = block_c4HgR_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4Hh7; else goto c4HgS;
       u4Hh7: // global
           call _c4HgR(R1) args: 0, res: 0, upd: 0;
       c4HgS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt15_info" {
     Foreign.Storable.$fStorableInt15_info:
         const Foreign.Storable.$fStorableInt15_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HgR() //  [R1]
         { []
         }
     {offset
       c4HgR: // global
           I64[Sp] = block_c4HgX_info;
           _s4FhW::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FhW::I64;
           if (R1 & 7 != 0) goto u4Hh6; else goto c4Hh1;
       u4Hh6: // global
           call _c4HgX(R1) args: 0, res: 0, upd: 0;
       c4Hh1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HgR_info" {
     block_c4HgR_info:
         const _c4HgR;
         const 1;
         const 30;
 },
 _c4HgX() //  [R1]
         { []
         }
     {offset
       c4HgX: // global
           I64[I64[Sp + 8]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HgX_info" {
     block_c4HgX_info:
         const _c4HgX;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.542885611 UTC

[section ""data" . Foreign.Storable.$fStorableInt18_closure" {
     Foreign.Storable.$fStorableInt18_closure:
         const Foreign.Storable.$fStorableInt18_info;
 },
 Foreign.Storable.$fStorableInt18_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4Hhv: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4HhE; else goto c4HhF;
       c4HhE: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt18_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HhF: // global
           I64[Sp - 24] = block_c4Hhs_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4HhP; else goto c4Hht;
       u4HhP: // global
           call _c4Hhs(R1) args: 0, res: 0, upd: 0;
       c4Hht: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt18_info" {
     Foreign.Storable.$fStorableInt18_info:
         const Foreign.Storable.$fStorableInt18_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4Hhs() //  [R1]
         { []
         }
     {offset
       c4Hhs: // global
           I64[Sp] = block_c4Hhy_info;
           _s4Fi5::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fi5::I64;
           if (R1 & 7 != 0) goto u4HhO; else goto c4Hhz;
       u4HhO: // global
           call _c4Hhy(R1) args: 0, res: 0, upd: 0;
       c4Hhz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hhs_info" {
     block_c4Hhs_info:
         const _c4Hhs;
         const 2;
         const 30;
 },
 _c4Hhy() //  [R1]
         { []
         }
     {offset
       c4Hhy: // global
           I64[Sp] = block_c4HhD_info;
           _s4Fi7::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Fi7::I64;
           if (R1 & 7 != 0) goto u4HhQ; else goto c4HhI;
       u4HhQ: // global
           call _c4HhD(R1) args: 0, res: 0, upd: 0;
       c4HhI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hhy_info" {
     block_c4Hhy_info:
         const _c4Hhy;
         const 66;
         const 30;
 },
 _c4HhD() //  [R1]
         { []
         }
     {offset
       c4HhD: // global
           I64[I64[Sp + 8] + I64[Sp + 16]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HhD_info" {
     block_c4HhD_info:
         const _c4HhD;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.552293982 UTC

[section ""data" . Foreign.Storable.$fStorableInt64_closure" {
     Foreign.Storable.$fStorableInt64_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableInt64_$calignment_closure+1;
         const Foreign.Storable.$fStorableInt64_$calignment_closure+1;
         const GHC.Storable.readInt64OffPtr1_closure+3;
         const GHC.Storable.writeInt64OffPtr1_closure+4;
         const Foreign.Storable.$fStorableInt19_closure+3;
         const Foreign.Storable.$fStorableInt18_closure+4;
         const Foreign.Storable.$fStorableInt17_closure+2;
         const Foreign.Storable.$fStorableInt15_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.555507401 UTC

[section ""data" . Foreign.Storable.$fStorableInt12_closure" {
     Foreign.Storable.$fStorableInt12_closure:
         const Foreign.Storable.$fStorableInt12_info;
 },
 Foreign.Storable.$fStorableInt12_entry() //  [R2]
         { []
         }
     {offset
       c4Hik: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4Hio; else goto c4Hip;
       c4Hio: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt12_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4Hip: // global
           I64[Sp - 8] = block_c4Hih_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4Hit; else goto c4Hii;
       u4Hit: // global
           call _c4Hih(R1) args: 0, res: 0, upd: 0;
       c4Hii: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt12_info" {
     Foreign.Storable.$fStorableInt12_info:
         const Foreign.Storable.$fStorableInt12_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4Hih() //  [R1]
         { []
         }
     {offset
       c4Hih: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4His; else goto c4Hir;
       c4His: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Hir: // global
           _s4Fii::I64 = %MO_SS_Conv_W32_W64(I32[I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = _s4Fii::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hih_info" {
     block_c4Hih_info:
         const _c4Hih;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.56283596 UTC

[section ""data" . Foreign.Storable.$fStorableInt14_closure" {
     Foreign.Storable.$fStorableInt14_closure:
         const Foreign.Storable.$fStorableInt14_info;
 },
 Foreign.Storable.$fStorableInt14_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HiM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HiY; else goto c4HiZ;
       c4HiY: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt14_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HiZ: // global
           I64[Sp - 16] = block_c4HiJ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4Hj5; else goto c4HiK;
       u4Hj5: // global
           call _c4HiJ(R1) args: 0, res: 0, upd: 0;
       c4HiK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt14_info" {
     Foreign.Storable.$fStorableInt14_info:
         const Foreign.Storable.$fStorableInt14_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HiJ() //  [R1]
         { []
         }
     {offset
       c4HiJ: // global
           I64[Sp] = block_c4HiP_info;
           _s4Fio::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fio::I64;
           if (R1 & 7 != 0) goto u4Hj4; else goto c4HiQ;
       u4Hj4: // global
           call _c4HiP(R1) args: 0, res: 0, upd: 0;
       c4HiQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HiJ_info" {
     block_c4HiJ_info:
         const _c4HiJ;
         const 1;
         const 30;
 },
 _c4HiP() //  [R1]
         { []
         }
     {offset
       c4HiP: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Hj3; else goto c4Hj2;
       c4Hj3: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Hj2: // global
           _s4Fiu::I64 = %MO_SS_Conv_W32_W64(I32[I64[Sp + 8] + I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = _s4Fiu::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HiP_info" {
     block_c4HiP_info:
         const _c4HiP;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.570984317 UTC

[section ""data" . Foreign.Storable.$fStorableInt11_closure" {
     Foreign.Storable.$fStorableInt11_closure:
         const Foreign.Storable.$fStorableInt11_info;
 },
 Foreign.Storable.$fStorableInt11_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Hjt: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4Hjx; else goto c4Hjy;
       c4Hjx: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt11_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Hjy: // global
           I64[Sp - 16] = block_c4Hjq_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HjG; else goto c4Hjr;
       u4HjG: // global
           call _c4Hjq(R1) args: 0, res: 0, upd: 0;
       c4Hjr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt11_info" {
     Foreign.Storable.$fStorableInt11_info:
         const Foreign.Storable.$fStorableInt11_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4Hjq() //  [R1]
         { []
         }
     {offset
       c4Hjq: // global
           I64[Sp] = block_c4Hjw_info;
           _s4FiA::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FiA::I64;
           if (R1 & 7 != 0) goto u4HjF; else goto c4HjA;
       u4HjF: // global
           call _c4Hjw(R1) args: 0, res: 0, upd: 0;
       c4HjA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hjq_info" {
     block_c4Hjq_info:
         const _c4Hjq;
         const 1;
         const 30;
 },
 _c4Hjw() //  [R1]
         { []
         }
     {offset
       c4Hjw: // global
           I32[I64[Sp + 8]] = %MO_UU_Conv_W64_W32(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hjw_info" {
     block_c4Hjw_info:
         const _c4Hjw;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.579557284 UTC

[section ""data" . Foreign.Storable.$fStorableInt13_closure" {
     Foreign.Storable.$fStorableInt13_closure:
         const Foreign.Storable.$fStorableInt13_info;
 },
 Foreign.Storable.$fStorableInt13_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4Hk4: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4Hkd; else goto c4Hke;
       c4Hkd: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt13_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Hke: // global
           I64[Sp - 24] = block_c4Hk1_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4Hko; else goto c4Hk2;
       u4Hko: // global
           call _c4Hk1(R1) args: 0, res: 0, upd: 0;
       c4Hk2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt13_info" {
     Foreign.Storable.$fStorableInt13_info:
         const Foreign.Storable.$fStorableInt13_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4Hk1() //  [R1]
         { []
         }
     {offset
       c4Hk1: // global
           I64[Sp] = block_c4Hk7_info;
           _s4FiJ::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FiJ::I64;
           if (R1 & 7 != 0) goto u4Hkn; else goto c4Hk8;
       u4Hkn: // global
           call _c4Hk7(R1) args: 0, res: 0, upd: 0;
       c4Hk8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hk1_info" {
     block_c4Hk1_info:
         const _c4Hk1;
         const 2;
         const 30;
 },
 _c4Hk7() //  [R1]
         { []
         }
     {offset
       c4Hk7: // global
           I64[Sp] = block_c4Hkc_info;
           _s4FiL::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4FiL::I64;
           if (R1 & 7 != 0) goto u4Hkp; else goto c4Hkh;
       u4Hkp: // global
           call _c4Hkc(R1) args: 0, res: 0, upd: 0;
       c4Hkh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hk7_info" {
     block_c4Hk7_info:
         const _c4Hk7;
         const 66;
         const 30;
 },
 _c4Hkc() //  [R1]
         { []
         }
     {offset
       c4Hkc: // global
           I32[I64[Sp + 8] + I64[Sp + 16]] = %MO_UU_Conv_W64_W32(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hkc_info" {
     block_c4Hkc_info:
         const _c4Hkc;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.589069006 UTC

[section ""data" . Foreign.Storable.$fStorableInt32_closure" {
     Foreign.Storable.$fStorableInt32_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableInt32_$calignment_closure+1;
         const Foreign.Storable.$fStorableInt32_$calignment_closure+1;
         const GHC.Storable.readInt32OffPtr1_closure+3;
         const GHC.Storable.writeInt32OffPtr1_closure+4;
         const Foreign.Storable.$fStorableInt14_closure+3;
         const Foreign.Storable.$fStorableInt13_closure+4;
         const Foreign.Storable.$fStorableInt12_closure+2;
         const Foreign.Storable.$fStorableInt11_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.591793381 UTC

[section ""data" . Foreign.Storable.$fStorableBool_$csizeOf_closure" {
     Foreign.Storable.$fStorableBool_$csizeOf_closure:
         const Foreign.Storable.$fStorableBool_$csizeOf_info;
 },
 Foreign.Storable.$fStorableBool_$csizeOf_entry() //  []
         { []
         }
     {offset
       c4HkQ: // global
           R1 = Foreign.Storable.$fStorableBool7_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableBool_$csizeOf_info" {
     Foreign.Storable.$fStorableBool_$csizeOf_info:
         const Foreign.Storable.$fStorableBool_$csizeOf_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.596802044 UTC

[section ""data" . Foreign.Storable.$fStorableBool5_closure" {
     Foreign.Storable.$fStorableBool5_closure:
         const Foreign.Storable.$fStorableBool5_info;
 },
 Foreign.Storable.$fStorableBool5_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4Hl5: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4Hl9; else goto c4Hla;
       c4Hl9: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableBool5_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Hla: // global
           I64[Sp - 24] = block_c4Hl2_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4Hlv; else goto c4Hl3;
       u4Hlv: // global
           call _c4Hl2(R1) args: 0, res: 0, upd: 0;
       c4Hl3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableBool5_info" {
     Foreign.Storable.$fStorableBool5_info:
         const Foreign.Storable.$fStorableBool5_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4Hl2() //  [R1]
         { []
         }
     {offset
       c4Hl2: // global
           I64[Sp] = block_c4Hl8_info;
           _s4FiW::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FiW::I64;
           if (R1 & 7 != 0) goto u4Hlu; else goto c4Hlc;
       u4Hlu: // global
           call _c4Hl8(R1) args: 0, res: 0, upd: 0;
       c4Hlc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hl2_info" {
     block_c4Hl2_info:
         const _c4Hl2;
         const 2;
         const 30;
 },
 _c4Hl8() //  [R1]
         { []
         }
     {offset
       c4Hl8: // global
           I64[Sp] = block_c4Hlg_info;
           _s4FiY::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4FiY::I64;
           if (R1 & 7 != 0) goto u4Hlw; else goto c4Hli;
       u4Hlw: // global
           call _c4Hlg(R1) args: 0, res: 0, upd: 0;
       c4Hli: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hl8_info" {
     block_c4Hl8_info:
         const _c4Hl8;
         const 66;
         const 30;
 },
 _c4Hlg() //  [R1]
         { []
         }
     {offset
       c4Hlg: // global
           _s4FiW::I64 = I64[Sp + 8];
           _s4FiY::I64 = I64[Sp + 16];
           if (R1 & 7 == 1) goto c4Hlo; else goto c4Hls;
       c4Hlo: // global
           I32[_s4FiW::I64 + (_s4FiY::I64 << 2)] = 0 :: W32;
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c4Hls: // global
           I32[_s4FiW::I64 + (_s4FiY::I64 << 2)] = 1 :: W32;
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hlg_info" {
     block_c4Hlg_info:
         const _c4Hlg;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.606482446 UTC

[section ""data" . Foreign.Storable.$fStorableInt6_closure" {
     Foreign.Storable.$fStorableInt6_closure:
         const Foreign.Storable.$fStorableInt6_info;
 },
 Foreign.Storable.$fStorableInt6_entry() //  [R2]
         { []
         }
     {offset
       c4HlZ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4Hm3; else goto c4Hm4;
       c4Hm3: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt6_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4Hm4: // global
           I64[Sp - 8] = block_c4HlW_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4Hm8; else goto c4HlX;
       u4Hm8: // global
           call _c4HlW(R1) args: 0, res: 0, upd: 0;
       c4HlX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt6_info" {
     Foreign.Storable.$fStorableInt6_info:
         const Foreign.Storable.$fStorableInt6_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4HlW() //  [R1]
         { []
         }
     {offset
       c4HlW: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Hm7; else goto c4Hm6;
       c4Hm7: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Hm6: // global
           _s4Fj8::I64 = %MO_SS_Conv_W16_W64(I16[I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Int.I16#_con_info;
           I64[Hp] = _s4Fj8::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HlW_info" {
     block_c4HlW_info:
         const _c4HlW;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.613994343 UTC

[section ""data" . Foreign.Storable.$fStorableInt9_closure" {
     Foreign.Storable.$fStorableInt9_closure:
         const Foreign.Storable.$fStorableInt9_info;
 },
 Foreign.Storable.$fStorableInt9_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Hmr: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HmD; else goto c4HmE;
       c4HmD: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt9_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HmE: // global
           I64[Sp - 16] = block_c4Hmo_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HmK; else goto c4Hmp;
       u4HmK: // global
           call _c4Hmo(R1) args: 0, res: 0, upd: 0;
       c4Hmp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt9_info" {
     Foreign.Storable.$fStorableInt9_info:
         const Foreign.Storable.$fStorableInt9_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4Hmo() //  [R1]
         { []
         }
     {offset
       c4Hmo: // global
           I64[Sp] = block_c4Hmu_info;
           _s4Fje::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fje::I64;
           if (R1 & 7 != 0) goto u4HmJ; else goto c4Hmv;
       u4HmJ: // global
           call _c4Hmu(R1) args: 0, res: 0, upd: 0;
       c4Hmv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hmo_info" {
     block_c4Hmo_info:
         const _c4Hmo;
         const 1;
         const 30;
 },
 _c4Hmu() //  [R1]
         { []
         }
     {offset
       c4Hmu: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HmI; else goto c4HmH;
       c4HmI: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HmH: // global
           _s4Fjk::I64 = %MO_SS_Conv_W16_W64(I16[I64[Sp + 8] + I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Int.I16#_con_info;
           I64[Hp] = _s4Fjk::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hmu_info" {
     block_c4Hmu_info:
         const _c4Hmu;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.622461152 UTC

[section ""data" . Foreign.Storable.$fStorableInt5_closure" {
     Foreign.Storable.$fStorableInt5_closure:
         const Foreign.Storable.$fStorableInt5_info;
 },
 Foreign.Storable.$fStorableInt5_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Hn8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4Hnc; else goto c4Hnd;
       c4Hnc: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt5_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Hnd: // global
           I64[Sp - 16] = block_c4Hn5_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4Hnl; else goto c4Hn6;
       u4Hnl: // global
           call _c4Hn5(R1) args: 0, res: 0, upd: 0;
       c4Hn6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt5_info" {
     Foreign.Storable.$fStorableInt5_info:
         const Foreign.Storable.$fStorableInt5_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4Hn5() //  [R1]
         { []
         }
     {offset
       c4Hn5: // global
           I64[Sp] = block_c4Hnb_info;
           _s4Fjq::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fjq::I64;
           if (R1 & 7 != 0) goto u4Hnk; else goto c4Hnf;
       u4Hnk: // global
           call _c4Hnb(R1) args: 0, res: 0, upd: 0;
       c4Hnf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hn5_info" {
     block_c4Hn5_info:
         const _c4Hn5;
         const 1;
         const 30;
 },
 _c4Hnb() //  [R1]
         { []
         }
     {offset
       c4Hnb: // global
           I16[I64[Sp + 8]] = %MO_UU_Conv_W64_W16(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hnb_info" {
     block_c4Hnb_info:
         const _c4Hnb;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.632104637 UTC

[section ""data" . Foreign.Storable.$fStorableInt7_closure" {
     Foreign.Storable.$fStorableInt7_closure:
         const Foreign.Storable.$fStorableInt7_info;
 },
 Foreign.Storable.$fStorableInt7_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4HnJ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4HnS; else goto c4HnT;
       c4HnS: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt7_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HnT: // global
           I64[Sp - 24] = block_c4HnG_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4Ho3; else goto c4HnH;
       u4Ho3: // global
           call _c4HnG(R1) args: 0, res: 0, upd: 0;
       c4HnH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt7_info" {
     Foreign.Storable.$fStorableInt7_info:
         const Foreign.Storable.$fStorableInt7_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4HnG() //  [R1]
         { []
         }
     {offset
       c4HnG: // global
           I64[Sp] = block_c4HnM_info;
           _s4Fjz::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fjz::I64;
           if (R1 & 7 != 0) goto u4Ho2; else goto c4HnN;
       u4Ho2: // global
           call _c4HnM(R1) args: 0, res: 0, upd: 0;
       c4HnN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HnG_info" {
     block_c4HnG_info:
         const _c4HnG;
         const 2;
         const 30;
 },
 _c4HnM() //  [R1]
         { []
         }
     {offset
       c4HnM: // global
           I64[Sp] = block_c4HnR_info;
           _s4FjB::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4FjB::I64;
           if (R1 & 7 != 0) goto u4Ho4; else goto c4HnW;
       u4Ho4: // global
           call _c4HnR(R1) args: 0, res: 0, upd: 0;
       c4HnW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HnM_info" {
     block_c4HnM_info:
         const _c4HnM;
         const 66;
         const 30;
 },
 _c4HnR() //  [R1]
         { []
         }
     {offset
       c4HnR: // global
           I16[I64[Sp + 8] + I64[Sp + 16]] = %MO_UU_Conv_W64_W16(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HnR_info" {
     block_c4HnR_info:
         const _c4HnR;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.640723933 UTC

[section ""data" . Foreign.Storable.$fStorableInt16_closure" {
     Foreign.Storable.$fStorableInt16_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableInt16_$calignment_closure+1;
         const Foreign.Storable.$fStorableInt16_$calignment_closure+1;
         const GHC.Storable.readInt16OffPtr1_closure+3;
         const GHC.Storable.writeInt16OffPtr1_closure+4;
         const Foreign.Storable.$fStorableInt9_closure+3;
         const Foreign.Storable.$fStorableInt7_closure+4;
         const Foreign.Storable.$fStorableInt6_closure+2;
         const Foreign.Storable.$fStorableInt5_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.643817673 UTC

[section ""data" . Foreign.Storable.$fStorableInt21_closure" {
     Foreign.Storable.$fStorableInt21_closure:
         const Foreign.Storable.$fStorableInt21_info;
 },
 Foreign.Storable.$fStorableInt21_entry() //  [R2]
         { []
         }
     {offset
       c4Hoy: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4HoC; else goto c4HoD;
       c4HoC: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt21_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4HoD: // global
           I64[Sp - 8] = block_c4Hov_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4HoH; else goto c4How;
       u4HoH: // global
           call _c4Hov(R1) args: 0, res: 0, upd: 0;
       c4How: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt21_info" {
     Foreign.Storable.$fStorableInt21_info:
         const Foreign.Storable.$fStorableInt21_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4Hov() //  [R1]
         { []
         }
     {offset
       c4Hov: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HoG; else goto c4HoF;
       c4HoG: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HoF: // global
           _s4FjM::I64 = %MO_SS_Conv_W8_W64(I8[I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Int.I8#_con_info;
           I64[Hp] = _s4FjM::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hov_info" {
     block_c4Hov_info:
         const _c4Hov;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.65110665 UTC

[section ""data" . Foreign.Storable.$fStorableInt23_closure" {
     Foreign.Storable.$fStorableInt23_closure:
         const Foreign.Storable.$fStorableInt23_info;
 },
 Foreign.Storable.$fStorableInt23_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Hp0: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4Hpc; else goto c4Hpd;
       c4Hpc: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt23_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Hpd: // global
           I64[Sp - 16] = block_c4HoX_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4Hpj; else goto c4HoY;
       u4Hpj: // global
           call _c4HoX(R1) args: 0, res: 0, upd: 0;
       c4HoY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt23_info" {
     Foreign.Storable.$fStorableInt23_info:
         const Foreign.Storable.$fStorableInt23_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HoX() //  [R1]
         { []
         }
     {offset
       c4HoX: // global
           I64[Sp] = block_c4Hp3_info;
           _s4FjS::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FjS::I64;
           if (R1 & 7 != 0) goto u4Hpi; else goto c4Hp4;
       u4Hpi: // global
           call _c4Hp3(R1) args: 0, res: 0, upd: 0;
       c4Hp4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HoX_info" {
     block_c4HoX_info:
         const _c4HoX;
         const 1;
         const 30;
 },
 _c4Hp3() //  [R1]
         { []
         }
     {offset
       c4Hp3: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Hph; else goto c4Hpg;
       c4Hph: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Hpg: // global
           _s4FjY::I64 = %MO_SS_Conv_W8_W64(I8[I64[Sp + 8] + I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Int.I8#_con_info;
           I64[Hp] = _s4FjY::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hp3_info" {
     block_c4Hp3_info:
         const _c4Hp3;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.659483021 UTC

[section ""data" . Foreign.Storable.$fStorableInt20_closure" {
     Foreign.Storable.$fStorableInt20_closure:
         const Foreign.Storable.$fStorableInt20_info;
 },
 Foreign.Storable.$fStorableInt20_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HpH: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HpL; else goto c4HpM;
       c4HpL: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt20_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HpM: // global
           I64[Sp - 16] = block_c4HpE_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HpU; else goto c4HpF;
       u4HpU: // global
           call _c4HpE(R1) args: 0, res: 0, upd: 0;
       c4HpF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt20_info" {
     Foreign.Storable.$fStorableInt20_info:
         const Foreign.Storable.$fStorableInt20_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HpE() //  [R1]
         { []
         }
     {offset
       c4HpE: // global
           I64[Sp] = block_c4HpK_info;
           _s4Fk4::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fk4::I64;
           if (R1 & 7 != 0) goto u4HpT; else goto c4HpO;
       u4HpT: // global
           call _c4HpK(R1) args: 0, res: 0, upd: 0;
       c4HpO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HpE_info" {
     block_c4HpE_info:
         const _c4HpE;
         const 1;
         const 30;
 },
 _c4HpK() //  [R1]
         { []
         }
     {offset
       c4HpK: // global
           I8[I64[Sp + 8]] = %MO_UU_Conv_W64_W8(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HpK_info" {
     block_c4HpK_info:
         const _c4HpK;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.668871052 UTC

[section ""data" . Foreign.Storable.$fStorableInt22_closure" {
     Foreign.Storable.$fStorableInt22_closure:
         const Foreign.Storable.$fStorableInt22_info;
 },
 Foreign.Storable.$fStorableInt22_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4Hqi: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4Hqr; else goto c4Hqs;
       c4Hqr: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt22_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Hqs: // global
           I64[Sp - 24] = block_c4Hqf_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4HqC; else goto c4Hqg;
       u4HqC: // global
           call _c4Hqf(R1) args: 0, res: 0, upd: 0;
       c4Hqg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt22_info" {
     Foreign.Storable.$fStorableInt22_info:
         const Foreign.Storable.$fStorableInt22_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4Hqf() //  [R1]
         { []
         }
     {offset
       c4Hqf: // global
           I64[Sp] = block_c4Hql_info;
           _s4Fkd::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fkd::I64;
           if (R1 & 7 != 0) goto u4HqB; else goto c4Hqm;
       u4HqB: // global
           call _c4Hql(R1) args: 0, res: 0, upd: 0;
       c4Hqm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hqf_info" {
     block_c4Hqf_info:
         const _c4Hqf;
         const 2;
         const 30;
 },
 _c4Hql() //  [R1]
         { []
         }
     {offset
       c4Hql: // global
           I64[Sp] = block_c4Hqq_info;
           _s4Fkf::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Fkf::I64;
           if (R1 & 7 != 0) goto u4HqD; else goto c4Hqv;
       u4HqD: // global
           call _c4Hqq(R1) args: 0, res: 0, upd: 0;
       c4Hqv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hql_info" {
     block_c4Hql_info:
         const _c4Hql;
         const 66;
         const 30;
 },
 _c4Hqq() //  [R1]
         { []
         }
     {offset
       c4Hqq: // global
           I8[I64[Sp + 8] + I64[Sp + 16]] = %MO_UU_Conv_W64_W8(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hqq_info" {
     block_c4Hqq_info:
         const _c4Hqq;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.677228555 UTC

[section ""data" . Foreign.Storable.$fStorableInt8_closure" {
     Foreign.Storable.$fStorableInt8_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableInt8_$calignment_closure+1;
         const Foreign.Storable.$fStorableInt8_$calignment_closure+1;
         const GHC.Storable.readInt8OffPtr1_closure+3;
         const GHC.Storable.writeInt8OffPtr1_closure+4;
         const Foreign.Storable.$fStorableInt23_closure+3;
         const Foreign.Storable.$fStorableInt22_closure+4;
         const Foreign.Storable.$fStorableInt21_closure+2;
         const Foreign.Storable.$fStorableInt20_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.680190279 UTC

[section ""data" . Foreign.Storable.$fStorableWord15_closure" {
     Foreign.Storable.$fStorableWord15_closure:
         const Foreign.Storable.$fStorableWord15_info;
 },
 Foreign.Storable.$fStorableWord15_entry() //  [R2]
         { []
         }
     {offset
       c4Hr7: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4Hrb; else goto c4Hrc;
       c4Hrb: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord15_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4Hrc: // global
           I64[Sp - 8] = block_c4Hr4_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4Hrg; else goto c4Hr5;
       u4Hrg: // global
           call _c4Hr4(R1) args: 0, res: 0, upd: 0;
       c4Hr5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord15_info" {
     Foreign.Storable.$fStorableWord15_info:
         const Foreign.Storable.$fStorableWord15_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4Hr4() //  [R1]
         { []
         }
     {offset
       c4Hr4: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Hrf; else goto c4Hre;
       c4Hrf: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Hre: // global
           _s4Fkq::I64 = I64[I64[R1 + 7]];
           I64[Hp - 8] = GHC.Word.W64#_con_info;
           I64[Hp] = _s4Fkq::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hr4_info" {
     block_c4Hr4_info:
         const _c4Hr4;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.687393394 UTC

[section ""data" . Foreign.Storable.$fStorableWord18_closure" {
     Foreign.Storable.$fStorableWord18_closure:
         const Foreign.Storable.$fStorableWord18_info;
 },
 Foreign.Storable.$fStorableWord18_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Hrz: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HrL; else goto c4HrM;
       c4HrL: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord18_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HrM: // global
           I64[Sp - 16] = block_c4Hrw_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HrS; else goto c4Hrx;
       u4HrS: // global
           call _c4Hrw(R1) args: 0, res: 0, upd: 0;
       c4Hrx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord18_info" {
     Foreign.Storable.$fStorableWord18_info:
         const Foreign.Storable.$fStorableWord18_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4Hrw() //  [R1]
         { []
         }
     {offset
       c4Hrw: // global
           I64[Sp] = block_c4HrC_info;
           _s4Fkw::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fkw::I64;
           if (R1 & 7 != 0) goto u4HrR; else goto c4HrD;
       u4HrR: // global
           call _c4HrC(R1) args: 0, res: 0, upd: 0;
       c4HrD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hrw_info" {
     block_c4Hrw_info:
         const _c4Hrw;
         const 1;
         const 30;
 },
 _c4HrC() //  [R1]
         { []
         }
     {offset
       c4HrC: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HrQ; else goto c4HrP;
       c4HrQ: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HrP: // global
           _s4FkC::I64 = I64[I64[Sp + 8] + I64[R1 + 7]];
           I64[Hp - 8] = GHC.Word.W64#_con_info;
           I64[Hp] = _s4FkC::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HrC_info" {
     block_c4HrC_info:
         const _c4HrC;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.695587235 UTC

[section ""data" . Foreign.Storable.$fStorableWord14_closure" {
     Foreign.Storable.$fStorableWord14_closure:
         const Foreign.Storable.$fStorableWord14_info;
 },
 Foreign.Storable.$fStorableWord14_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Hsg: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4Hsk; else goto c4Hsl;
       c4Hsk: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord14_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Hsl: // global
           I64[Sp - 16] = block_c4Hsd_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4Hst; else goto c4Hse;
       u4Hst: // global
           call _c4Hsd(R1) args: 0, res: 0, upd: 0;
       c4Hse: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord14_info" {
     Foreign.Storable.$fStorableWord14_info:
         const Foreign.Storable.$fStorableWord14_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4Hsd() //  [R1]
         { []
         }
     {offset
       c4Hsd: // global
           I64[Sp] = block_c4Hsj_info;
           _s4FkI::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FkI::I64;
           if (R1 & 7 != 0) goto u4Hss; else goto c4Hsn;
       u4Hss: // global
           call _c4Hsj(R1) args: 0, res: 0, upd: 0;
       c4Hsn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hsd_info" {
     block_c4Hsd_info:
         const _c4Hsd;
         const 1;
         const 30;
 },
 _c4Hsj() //  [R1]
         { []
         }
     {offset
       c4Hsj: // global
           I64[I64[Sp + 8]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hsj_info" {
     block_c4Hsj_info:
         const _c4Hsj;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.704161547 UTC

[section ""data" . Foreign.Storable.$fStorableWord17_closure" {
     Foreign.Storable.$fStorableWord17_closure:
         const Foreign.Storable.$fStorableWord17_info;
 },
 Foreign.Storable.$fStorableWord17_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4HsR: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4Ht0; else goto c4Ht1;
       c4Ht0: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord17_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Ht1: // global
           I64[Sp - 24] = block_c4HsO_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4Htb; else goto c4HsP;
       u4Htb: // global
           call _c4HsO(R1) args: 0, res: 0, upd: 0;
       c4HsP: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord17_info" {
     Foreign.Storable.$fStorableWord17_info:
         const Foreign.Storable.$fStorableWord17_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4HsO() //  [R1]
         { []
         }
     {offset
       c4HsO: // global
           I64[Sp] = block_c4HsU_info;
           _s4FkR::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FkR::I64;
           if (R1 & 7 != 0) goto u4Hta; else goto c4HsV;
       u4Hta: // global
           call _c4HsU(R1) args: 0, res: 0, upd: 0;
       c4HsV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HsO_info" {
     block_c4HsO_info:
         const _c4HsO;
         const 2;
         const 30;
 },
 _c4HsU() //  [R1]
         { []
         }
     {offset
       c4HsU: // global
           I64[Sp] = block_c4HsZ_info;
           _s4FkT::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4FkT::I64;
           if (R1 & 7 != 0) goto u4Htc; else goto c4Ht4;
       u4Htc: // global
           call _c4HsZ(R1) args: 0, res: 0, upd: 0;
       c4Ht4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HsU_info" {
     block_c4HsU_info:
         const _c4HsU;
         const 66;
         const 30;
 },
 _c4HsZ() //  [R1]
         { []
         }
     {offset
       c4HsZ: // global
           I64[I64[Sp + 8] + I64[Sp + 16]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HsZ_info" {
     block_c4HsZ_info:
         const _c4HsZ;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.713201352 UTC

[section ""data" . Foreign.Storable.$fStorableWord64_closure" {
     Foreign.Storable.$fStorableWord64_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableWord64_$calignment_closure+1;
         const Foreign.Storable.$fStorableWord64_$calignment_closure+1;
         const GHC.Storable.readWord64OffPtr1_closure+3;
         const GHC.Storable.writeWord64OffPtr1_closure+4;
         const Foreign.Storable.$fStorableWord18_closure+3;
         const Foreign.Storable.$fStorableWord17_closure+4;
         const Foreign.Storable.$fStorableWord15_closure+2;
         const Foreign.Storable.$fStorableWord14_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.716438736 UTC

[section ""data" . Foreign.Storable.$fStorableWord11_closure" {
     Foreign.Storable.$fStorableWord11_closure:
         const Foreign.Storable.$fStorableWord11_info;
 },
 Foreign.Storable.$fStorableWord11_entry() //  [R2]
         { []
         }
     {offset
       c4HtG: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4HtK; else goto c4HtL;
       c4HtK: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord11_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4HtL: // global
           I64[Sp - 8] = block_c4HtD_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4HtP; else goto c4HtE;
       u4HtP: // global
           call _c4HtD(R1) args: 0, res: 0, upd: 0;
       c4HtE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord11_info" {
     Foreign.Storable.$fStorableWord11_info:
         const Foreign.Storable.$fStorableWord11_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4HtD() //  [R1]
         { []
         }
     {offset
       c4HtD: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HtO; else goto c4HtN;
       c4HtO: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HtN: // global
           _s4Fl4::I64 = %MO_UU_Conv_W32_W64(I32[I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Word.W32#_con_info;
           I64[Hp] = _s4Fl4::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HtD_info" {
     block_c4HtD_info:
         const _c4HtD;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.723203463 UTC

[section ""data" . Foreign.Storable.$fStorableWord13_closure" {
     Foreign.Storable.$fStorableWord13_closure:
         const Foreign.Storable.$fStorableWord13_info;
 },
 Foreign.Storable.$fStorableWord13_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Hu8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4Huk; else goto c4Hul;
       c4Huk: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord13_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Hul: // global
           I64[Sp - 16] = block_c4Hu5_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4Hur; else goto c4Hu6;
       u4Hur: // global
           call _c4Hu5(R1) args: 0, res: 0, upd: 0;
       c4Hu6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord13_info" {
     Foreign.Storable.$fStorableWord13_info:
         const Foreign.Storable.$fStorableWord13_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4Hu5() //  [R1]
         { []
         }
     {offset
       c4Hu5: // global
           I64[Sp] = block_c4Hub_info;
           _s4Fla::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fla::I64;
           if (R1 & 7 != 0) goto u4Huq; else goto c4Huc;
       u4Huq: // global
           call _c4Hub(R1) args: 0, res: 0, upd: 0;
       c4Huc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hu5_info" {
     block_c4Hu5_info:
         const _c4Hu5;
         const 1;
         const 30;
 },
 _c4Hub() //  [R1]
         { []
         }
     {offset
       c4Hub: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Hup; else goto c4Huo;
       c4Hup: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Huo: // global
           _s4Flg::I64 = %MO_UU_Conv_W32_W64(I32[I64[Sp + 8] + I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Word.W32#_con_info;
           I64[Hp] = _s4Flg::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hub_info" {
     block_c4Hub_info:
         const _c4Hub;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.73208868 UTC

[section ""data" . Foreign.Storable.$fStorableWord10_closure" {
     Foreign.Storable.$fStorableWord10_closure:
         const Foreign.Storable.$fStorableWord10_info;
 },
 Foreign.Storable.$fStorableWord10_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HuP: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HuT; else goto c4HuU;
       c4HuT: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord10_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HuU: // global
           I64[Sp - 16] = block_c4HuM_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4Hv2; else goto c4HuN;
       u4Hv2: // global
           call _c4HuM(R1) args: 0, res: 0, upd: 0;
       c4HuN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord10_info" {
     Foreign.Storable.$fStorableWord10_info:
         const Foreign.Storable.$fStorableWord10_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HuM() //  [R1]
         { []
         }
     {offset
       c4HuM: // global
           I64[Sp] = block_c4HuS_info;
           _s4Flm::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Flm::I64;
           if (R1 & 7 != 0) goto u4Hv1; else goto c4HuW;
       u4Hv1: // global
           call _c4HuS(R1) args: 0, res: 0, upd: 0;
       c4HuW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HuM_info" {
     block_c4HuM_info:
         const _c4HuM;
         const 1;
         const 30;
 },
 _c4HuS() //  [R1]
         { []
         }
     {offset
       c4HuS: // global
           I32[I64[Sp + 8]] = %MO_UU_Conv_W64_W32(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HuS_info" {
     block_c4HuS_info:
         const _c4HuS;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.740242554 UTC

[section ""data" . Foreign.Storable.$fStorableWord12_closure" {
     Foreign.Storable.$fStorableWord12_closure:
         const Foreign.Storable.$fStorableWord12_info;
 },
 Foreign.Storable.$fStorableWord12_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4Hvq: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4Hvz; else goto c4HvA;
       c4Hvz: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord12_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HvA: // global
           I64[Sp - 24] = block_c4Hvn_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4HvK; else goto c4Hvo;
       u4HvK: // global
           call _c4Hvn(R1) args: 0, res: 0, upd: 0;
       c4Hvo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord12_info" {
     Foreign.Storable.$fStorableWord12_info:
         const Foreign.Storable.$fStorableWord12_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4Hvn() //  [R1]
         { []
         }
     {offset
       c4Hvn: // global
           I64[Sp] = block_c4Hvt_info;
           _s4Flv::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Flv::I64;
           if (R1 & 7 != 0) goto u4HvJ; else goto c4Hvu;
       u4HvJ: // global
           call _c4Hvt(R1) args: 0, res: 0, upd: 0;
       c4Hvu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hvn_info" {
     block_c4Hvn_info:
         const _c4Hvn;
         const 2;
         const 30;
 },
 _c4Hvt() //  [R1]
         { []
         }
     {offset
       c4Hvt: // global
           I64[Sp] = block_c4Hvy_info;
           _s4Flx::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Flx::I64;
           if (R1 & 7 != 0) goto u4HvL; else goto c4HvD;
       u4HvL: // global
           call _c4Hvy(R1) args: 0, res: 0, upd: 0;
       c4HvD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hvt_info" {
     block_c4Hvt_info:
         const _c4Hvt;
         const 66;
         const 30;
 },
 _c4Hvy() //  [R1]
         { []
         }
     {offset
       c4Hvy: // global
           I32[I64[Sp + 8] + I64[Sp + 16]] = %MO_UU_Conv_W64_W32(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hvy_info" {
     block_c4Hvy_info:
         const _c4Hvy;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.750648627 UTC

[section ""data" . Foreign.Storable.$fStorableWord32_closure" {
     Foreign.Storable.$fStorableWord32_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableWord32_$calignment_closure+1;
         const Foreign.Storable.$fStorableWord32_$calignment_closure+1;
         const GHC.Storable.readWord32OffPtr1_closure+3;
         const GHC.Storable.writeWord32OffPtr1_closure+4;
         const Foreign.Storable.$fStorableWord13_closure+3;
         const Foreign.Storable.$fStorableWord12_closure+4;
         const Foreign.Storable.$fStorableWord11_closure+2;
         const Foreign.Storable.$fStorableWord10_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.755150994 UTC

[section ""data" . Foreign.Storable.$fStorableWord6_closure" {
     Foreign.Storable.$fStorableWord6_closure:
         const Foreign.Storable.$fStorableWord6_info;
 },
 Foreign.Storable.$fStorableWord6_entry() //  [R2]
         { []
         }
     {offset
       c4Hwf: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4Hwj; else goto c4Hwk;
       c4Hwj: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord6_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4Hwk: // global
           I64[Sp - 8] = block_c4Hwc_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4Hwo; else goto c4Hwd;
       u4Hwo: // global
           call _c4Hwc(R1) args: 0, res: 0, upd: 0;
       c4Hwd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord6_info" {
     Foreign.Storable.$fStorableWord6_info:
         const Foreign.Storable.$fStorableWord6_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4Hwc() //  [R1]
         { []
         }
     {offset
       c4Hwc: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Hwn; else goto c4Hwm;
       c4Hwn: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Hwm: // global
           _s4FlI::I64 = %MO_UU_Conv_W16_W64(I16[I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Word.W16#_con_info;
           I64[Hp] = _s4FlI::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hwc_info" {
     block_c4Hwc_info:
         const _c4Hwc;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.76216526 UTC

[section ""data" . Foreign.Storable.$fStorableWord9_closure" {
     Foreign.Storable.$fStorableWord9_closure:
         const Foreign.Storable.$fStorableWord9_info;
 },
 Foreign.Storable.$fStorableWord9_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HwH: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HwT; else goto c4HwU;
       c4HwT: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord9_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HwU: // global
           I64[Sp - 16] = block_c4HwE_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4Hx0; else goto c4HwF;
       u4Hx0: // global
           call _c4HwE(R1) args: 0, res: 0, upd: 0;
       c4HwF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord9_info" {
     Foreign.Storable.$fStorableWord9_info:
         const Foreign.Storable.$fStorableWord9_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HwE() //  [R1]
         { []
         }
     {offset
       c4HwE: // global
           I64[Sp] = block_c4HwK_info;
           _s4FlO::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FlO::I64;
           if (R1 & 7 != 0) goto u4HwZ; else goto c4HwL;
       u4HwZ: // global
           call _c4HwK(R1) args: 0, res: 0, upd: 0;
       c4HwL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HwE_info" {
     block_c4HwE_info:
         const _c4HwE;
         const 1;
         const 30;
 },
 _c4HwK() //  [R1]
         { []
         }
     {offset
       c4HwK: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HwY; else goto c4HwX;
       c4HwY: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HwX: // global
           _s4FlU::I64 = %MO_UU_Conv_W16_W64(I16[I64[Sp + 8] + I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Word.W16#_con_info;
           I64[Hp] = _s4FlU::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HwK_info" {
     block_c4HwK_info:
         const _c4HwK;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.770666048 UTC

[section ""data" . Foreign.Storable.$fStorableWord5_closure" {
     Foreign.Storable.$fStorableWord5_closure:
         const Foreign.Storable.$fStorableWord5_info;
 },
 Foreign.Storable.$fStorableWord5_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Hxo: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4Hxs; else goto c4Hxt;
       c4Hxs: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord5_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Hxt: // global
           I64[Sp - 16] = block_c4Hxl_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HxB; else goto c4Hxm;
       u4HxB: // global
           call _c4Hxl(R1) args: 0, res: 0, upd: 0;
       c4Hxm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord5_info" {
     Foreign.Storable.$fStorableWord5_info:
         const Foreign.Storable.$fStorableWord5_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4Hxl() //  [R1]
         { []
         }
     {offset
       c4Hxl: // global
           I64[Sp] = block_c4Hxr_info;
           _s4Fm0::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fm0::I64;
           if (R1 & 7 != 0) goto u4HxA; else goto c4Hxv;
       u4HxA: // global
           call _c4Hxr(R1) args: 0, res: 0, upd: 0;
       c4Hxv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hxl_info" {
     block_c4Hxl_info:
         const _c4Hxl;
         const 1;
         const 30;
 },
 _c4Hxr() //  [R1]
         { []
         }
     {offset
       c4Hxr: // global
           I16[I64[Sp + 8]] = %MO_UU_Conv_W64_W16(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hxr_info" {
     block_c4Hxr_info:
         const _c4Hxr;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.779276538 UTC

[section ""data" . Foreign.Storable.$fStorableWord7_closure" {
     Foreign.Storable.$fStorableWord7_closure:
         const Foreign.Storable.$fStorableWord7_info;
 },
 Foreign.Storable.$fStorableWord7_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4HxZ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4Hy8; else goto c4Hy9;
       c4Hy8: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord7_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Hy9: // global
           I64[Sp - 24] = block_c4HxW_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4Hyj; else goto c4HxX;
       u4Hyj: // global
           call _c4HxW(R1) args: 0, res: 0, upd: 0;
       c4HxX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord7_info" {
     Foreign.Storable.$fStorableWord7_info:
         const Foreign.Storable.$fStorableWord7_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4HxW() //  [R1]
         { []
         }
     {offset
       c4HxW: // global
           I64[Sp] = block_c4Hy2_info;
           _s4Fm9::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fm9::I64;
           if (R1 & 7 != 0) goto u4Hyi; else goto c4Hy3;
       u4Hyi: // global
           call _c4Hy2(R1) args: 0, res: 0, upd: 0;
       c4Hy3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HxW_info" {
     block_c4HxW_info:
         const _c4HxW;
         const 2;
         const 30;
 },
 _c4Hy2() //  [R1]
         { []
         }
     {offset
       c4Hy2: // global
           I64[Sp] = block_c4Hy7_info;
           _s4Fmb::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Fmb::I64;
           if (R1 & 7 != 0) goto u4Hyk; else goto c4Hyc;
       u4Hyk: // global
           call _c4Hy7(R1) args: 0, res: 0, upd: 0;
       c4Hyc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hy2_info" {
     block_c4Hy2_info:
         const _c4Hy2;
         const 66;
         const 30;
 },
 _c4Hy7() //  [R1]
         { []
         }
     {offset
       c4Hy7: // global
           I16[I64[Sp + 8] + I64[Sp + 16]] = %MO_UU_Conv_W64_W16(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hy7_info" {
     block_c4Hy7_info:
         const _c4Hy7;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.788852356 UTC

[section ""data" . Foreign.Storable.$fStorableWord16_closure" {
     Foreign.Storable.$fStorableWord16_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableWord16_$calignment_closure+1;
         const Foreign.Storable.$fStorableWord16_$calignment_closure+1;
         const GHC.Storable.readWord16OffPtr1_closure+3;
         const GHC.Storable.writeWord16OffPtr1_closure+4;
         const Foreign.Storable.$fStorableWord9_closure+3;
         const Foreign.Storable.$fStorableWord7_closure+4;
         const Foreign.Storable.$fStorableWord6_closure+2;
         const Foreign.Storable.$fStorableWord5_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.79223367 UTC

[section ""data" . Foreign.Storable.$fStorableDouble2_closure" {
     Foreign.Storable.$fStorableDouble2_closure:
         const Foreign.Storable.$fStorableDouble2_info;
 },
 Foreign.Storable.$fStorableDouble2_entry() //  [R2]
         { []
         }
     {offset
       c4HyO: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4HyS; else goto c4HyT;
       c4HyS: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableDouble2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4HyT: // global
           I64[Sp - 8] = block_c4HyL_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4HyX; else goto c4HyM;
       u4HyX: // global
           call _c4HyL(R1) args: 0, res: 0, upd: 0;
       c4HyM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableDouble2_info" {
     Foreign.Storable.$fStorableDouble2_info:
         const Foreign.Storable.$fStorableDouble2_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4HyL() //  [R1]
         { []
         }
     {offset
       c4HyL: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HyW; else goto c4HyV;
       c4HyW: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HyV: // global
           _s4Fmm::F64 = F64[I64[R1 + 7]];
           I64[Hp - 8] = GHC.Types.D#_con_info;
           F64[Hp] = _s4Fmm::F64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HyL_info" {
     block_c4HyL_info:
         const _c4HyL;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.799009761 UTC

[section ""data" . Foreign.Storable.$fStorableDouble4_closure" {
     Foreign.Storable.$fStorableDouble4_closure:
         const Foreign.Storable.$fStorableDouble4_info;
 },
 Foreign.Storable.$fStorableDouble4_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Hzg: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4Hzs; else goto c4Hzt;
       c4Hzs: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableDouble4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Hzt: // global
           I64[Sp - 16] = block_c4Hzd_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4Hzz; else goto c4Hze;
       u4Hzz: // global
           call _c4Hzd(R1) args: 0, res: 0, upd: 0;
       c4Hze: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableDouble4_info" {
     Foreign.Storable.$fStorableDouble4_info:
         const Foreign.Storable.$fStorableDouble4_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4Hzd() //  [R1]
         { []
         }
     {offset
       c4Hzd: // global
           I64[Sp] = block_c4Hzj_info;
           _s4Fms::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fms::I64;
           if (R1 & 7 != 0) goto u4Hzy; else goto c4Hzk;
       u4Hzy: // global
           call _c4Hzj(R1) args: 0, res: 0, upd: 0;
       c4Hzk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hzd_info" {
     block_c4Hzd_info:
         const _c4Hzd;
         const 1;
         const 30;
 },
 _c4Hzj() //  [R1]
         { []
         }
     {offset
       c4Hzj: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Hzx; else goto c4Hzw;
       c4Hzx: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Hzw: // global
           _s4Fmy::F64 = F64[I64[Sp + 8] + I64[R1 + 7]];
           I64[Hp - 8] = GHC.Types.D#_con_info;
           F64[Hp] = _s4Fmy::F64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Hzj_info" {
     block_c4Hzj_info:
         const _c4Hzj;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.807418976 UTC

[section ""data" . Foreign.Storable.$fStorableDouble1_closure" {
     Foreign.Storable.$fStorableDouble1_closure:
         const Foreign.Storable.$fStorableDouble1_info;
 },
 Foreign.Storable.$fStorableDouble1_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HzX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HA1; else goto c4HA2;
       c4HA1: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableDouble1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HA2: // global
           I64[Sp - 16] = block_c4HzU_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HAa; else goto c4HzV;
       u4HAa: // global
           call _c4HzU(R1) args: 0, res: 0, upd: 0;
       c4HzV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableDouble1_info" {
     Foreign.Storable.$fStorableDouble1_info:
         const Foreign.Storable.$fStorableDouble1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HzU() //  [R1]
         { []
         }
     {offset
       c4HzU: // global
           I64[Sp] = block_c4HA0_info;
           _s4FmE::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FmE::I64;
           if (R1 & 7 != 0) goto u4HA9; else goto c4HA4;
       u4HA9: // global
           call _c4HA0(R1) args: 0, res: 0, upd: 0;
       c4HA4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HzU_info" {
     block_c4HzU_info:
         const _c4HzU;
         const 1;
         const 30;
 },
 _c4HA0() //  [R1]
         { []
         }
     {offset
       c4HA0: // global
           F64[I64[Sp + 8]] = F64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HA0_info" {
     block_c4HA0_info:
         const _c4HA0;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.818237821 UTC

[section ""data" . Foreign.Storable.$fStorableDouble3_closure" {
     Foreign.Storable.$fStorableDouble3_closure:
         const Foreign.Storable.$fStorableDouble3_info;
 },
 Foreign.Storable.$fStorableDouble3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4HAy: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4HAH; else goto c4HAI;
       c4HAH: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableDouble3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HAI: // global
           I64[Sp - 24] = block_c4HAv_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4HAS; else goto c4HAw;
       u4HAS: // global
           call _c4HAv(R1) args: 0, res: 0, upd: 0;
       c4HAw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableDouble3_info" {
     Foreign.Storable.$fStorableDouble3_info:
         const Foreign.Storable.$fStorableDouble3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4HAv() //  [R1]
         { []
         }
     {offset
       c4HAv: // global
           I64[Sp] = block_c4HAB_info;
           _s4FmN::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FmN::I64;
           if (R1 & 7 != 0) goto u4HAR; else goto c4HAC;
       u4HAR: // global
           call _c4HAB(R1) args: 0, res: 0, upd: 0;
       c4HAC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HAv_info" {
     block_c4HAv_info:
         const _c4HAv;
         const 2;
         const 30;
 },
 _c4HAB() //  [R1]
         { []
         }
     {offset
       c4HAB: // global
           I64[Sp] = block_c4HAG_info;
           _s4FmP::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4FmP::I64;
           if (R1 & 7 != 0) goto u4HAT; else goto c4HAL;
       u4HAT: // global
           call _c4HAG(R1) args: 0, res: 0, upd: 0;
       c4HAL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HAB_info" {
     block_c4HAB_info:
         const _c4HAB;
         const 66;
         const 30;
 },
 _c4HAG() //  [R1]
         { []
         }
     {offset
       c4HAG: // global
           F64[I64[Sp + 8] + I64[Sp + 16]] = F64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HAG_info" {
     block_c4HAG_info:
         const _c4HAG;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.827082628 UTC

[section ""data" . Foreign.Storable.$fStorableDouble_closure" {
     Foreign.Storable.$fStorableDouble_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableDouble_$calignment_closure+1;
         const Foreign.Storable.$fStorableDouble_$calignment_closure+1;
         const GHC.Storable.readDoubleOffPtr1_closure+3;
         const GHC.Storable.writeDoubleOffPtr1_closure+4;
         const Foreign.Storable.$fStorableDouble4_closure+3;
         const Foreign.Storable.$fStorableDouble3_closure+4;
         const Foreign.Storable.$fStorableDouble2_closure+2;
         const Foreign.Storable.$fStorableDouble1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.83099149 UTC

[section ""data" . Foreign.Storable.$fStorableFloat2_closure" {
     Foreign.Storable.$fStorableFloat2_closure:
         const Foreign.Storable.$fStorableFloat2_info;
 },
 Foreign.Storable.$fStorableFloat2_entry() //  [R2]
         { []
         }
     {offset
       c4HBn: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4HBr; else goto c4HBs;
       c4HBr: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFloat2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4HBs: // global
           I64[Sp - 8] = block_c4HBk_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4HBw; else goto c4HBl;
       u4HBw: // global
           call _c4HBk(R1) args: 0, res: 0, upd: 0;
       c4HBl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFloat2_info" {
     Foreign.Storable.$fStorableFloat2_info:
         const Foreign.Storable.$fStorableFloat2_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4HBk() //  [R1]
         { []
         }
     {offset
       c4HBk: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HBv; else goto c4HBu;
       c4HBv: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HBu: // global
           _s4Fn0::F32 = F32[I64[R1 + 7]];
           I64[Hp - 8] = GHC.Types.F#_con_info;
           F32[Hp] = _s4Fn0::F32;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HBk_info" {
     block_c4HBk_info:
         const _c4HBk;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.837527002 UTC

[section ""data" . Foreign.Storable.$fStorableFloat4_closure" {
     Foreign.Storable.$fStorableFloat4_closure:
         const Foreign.Storable.$fStorableFloat4_info;
 },
 Foreign.Storable.$fStorableFloat4_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HBP: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HC1; else goto c4HC2;
       c4HC1: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFloat4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HC2: // global
           I64[Sp - 16] = block_c4HBM_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HC8; else goto c4HBN;
       u4HC8: // global
           call _c4HBM(R1) args: 0, res: 0, upd: 0;
       c4HBN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFloat4_info" {
     Foreign.Storable.$fStorableFloat4_info:
         const Foreign.Storable.$fStorableFloat4_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HBM() //  [R1]
         { []
         }
     {offset
       c4HBM: // global
           I64[Sp] = block_c4HBS_info;
           _s4Fn6::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fn6::I64;
           if (R1 & 7 != 0) goto u4HC7; else goto c4HBT;
       u4HC7: // global
           call _c4HBS(R1) args: 0, res: 0, upd: 0;
       c4HBT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HBM_info" {
     block_c4HBM_info:
         const _c4HBM;
         const 1;
         const 30;
 },
 _c4HBS() //  [R1]
         { []
         }
     {offset
       c4HBS: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HC6; else goto c4HC5;
       c4HC6: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HC5: // global
           _s4Fnc::F32 = F32[I64[Sp + 8] + I64[R1 + 7]];
           I64[Hp - 8] = GHC.Types.F#_con_info;
           F32[Hp] = _s4Fnc::F32;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HBS_info" {
     block_c4HBS_info:
         const _c4HBS;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.845915812 UTC

[section ""data" . Foreign.Storable.$fStorableFloat1_closure" {
     Foreign.Storable.$fStorableFloat1_closure:
         const Foreign.Storable.$fStorableFloat1_info;
 },
 Foreign.Storable.$fStorableFloat1_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HCw: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HCA; else goto c4HCB;
       c4HCA: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFloat1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HCB: // global
           I64[Sp - 16] = block_c4HCt_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HCJ; else goto c4HCu;
       u4HCJ: // global
           call _c4HCt(R1) args: 0, res: 0, upd: 0;
       c4HCu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFloat1_info" {
     Foreign.Storable.$fStorableFloat1_info:
         const Foreign.Storable.$fStorableFloat1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HCt() //  [R1]
         { []
         }
     {offset
       c4HCt: // global
           I64[Sp] = block_c4HCz_info;
           _s4Fni::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fni::I64;
           if (R1 & 7 != 0) goto u4HCI; else goto c4HCD;
       u4HCI: // global
           call _c4HCz(R1) args: 0, res: 0, upd: 0;
       c4HCD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HCt_info" {
     block_c4HCt_info:
         const _c4HCt;
         const 1;
         const 30;
 },
 _c4HCz() //  [R1]
         { []
         }
     {offset
       c4HCz: // global
           F32[I64[Sp + 8]] = F32[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HCz_info" {
     block_c4HCz_info:
         const _c4HCz;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.854415948 UTC

[section ""data" . Foreign.Storable.$fStorableFloat3_closure" {
     Foreign.Storable.$fStorableFloat3_closure:
         const Foreign.Storable.$fStorableFloat3_info;
 },
 Foreign.Storable.$fStorableFloat3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4HD7: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4HDg; else goto c4HDh;
       c4HDg: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFloat3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HDh: // global
           I64[Sp - 24] = block_c4HD4_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4HDr; else goto c4HD5;
       u4HDr: // global
           call _c4HD4(R1) args: 0, res: 0, upd: 0;
       c4HD5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFloat3_info" {
     Foreign.Storable.$fStorableFloat3_info:
         const Foreign.Storable.$fStorableFloat3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4HD4() //  [R1]
         { []
         }
     {offset
       c4HD4: // global
           I64[Sp] = block_c4HDa_info;
           _s4Fnr::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fnr::I64;
           if (R1 & 7 != 0) goto u4HDq; else goto c4HDb;
       u4HDq: // global
           call _c4HDa(R1) args: 0, res: 0, upd: 0;
       c4HDb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HD4_info" {
     block_c4HD4_info:
         const _c4HD4;
         const 2;
         const 30;
 },
 _c4HDa() //  [R1]
         { []
         }
     {offset
       c4HDa: // global
           I64[Sp] = block_c4HDf_info;
           _s4Fnt::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Fnt::I64;
           if (R1 & 7 != 0) goto u4HDs; else goto c4HDk;
       u4HDs: // global
           call _c4HDf(R1) args: 0, res: 0, upd: 0;
       c4HDk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HDa_info" {
     block_c4HDa_info:
         const _c4HDa;
         const 66;
         const 30;
 },
 _c4HDf() //  [R1]
         { []
         }
     {offset
       c4HDf: // global
           F32[I64[Sp + 8] + I64[Sp + 16]] = F32[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HDf_info" {
     block_c4HDf_info:
         const _c4HDf;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.862960785 UTC

[section ""data" . Foreign.Storable.$fStorableFloat_closure" {
     Foreign.Storable.$fStorableFloat_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableFloat_$calignment_closure+1;
         const Foreign.Storable.$fStorableFloat_$calignment_closure+1;
         const GHC.Storable.readFloatOffPtr1_closure+3;
         const GHC.Storable.writeFloatOffPtr1_closure+4;
         const Foreign.Storable.$fStorableFloat4_closure+3;
         const Foreign.Storable.$fStorableFloat3_closure+4;
         const Foreign.Storable.$fStorableFloat2_closure+2;
         const Foreign.Storable.$fStorableFloat1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.866172753 UTC

[section ""data" . Foreign.Storable.$fStorableStablePtr2_closure" {
     Foreign.Storable.$fStorableStablePtr2_closure:
         const Foreign.Storable.$fStorableStablePtr2_info;
 },
 Foreign.Storable.$fStorableStablePtr2_entry() //  [R2]
         { []
         }
     {offset
       c4HDW: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4HE0; else goto c4HE1;
       c4HE0: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableStablePtr2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4HE1: // global
           I64[Sp - 8] = block_c4HDT_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4HE5; else goto c4HDU;
       u4HE5: // global
           call _c4HDT(R1) args: 0, res: 0, upd: 0;
       c4HDU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableStablePtr2_info" {
     Foreign.Storable.$fStorableStablePtr2_info:
         const Foreign.Storable.$fStorableStablePtr2_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4HDT() //  [R1]
         { []
         }
     {offset
       c4HDT: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HE4; else goto c4HE3;
       c4HE4: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HE3: // global
           _s4FnE::I64 = I64[I64[R1 + 7]];
           I64[Hp - 8] = GHC.Stable.StablePtr_con_info;
           I64[Hp] = _s4FnE::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HDT_info" {
     block_c4HDT_info:
         const _c4HDT;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.874015715 UTC

[section ""data" . Foreign.Storable.$fStorableStablePtr4_closure" {
     Foreign.Storable.$fStorableStablePtr4_closure:
         const Foreign.Storable.$fStorableStablePtr4_info;
 },
 Foreign.Storable.$fStorableStablePtr4_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HEo: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HEA; else goto c4HEB;
       c4HEA: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableStablePtr4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HEB: // global
           I64[Sp - 16] = block_c4HEl_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HEH; else goto c4HEm;
       u4HEH: // global
           call _c4HEl(R1) args: 0, res: 0, upd: 0;
       c4HEm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableStablePtr4_info" {
     Foreign.Storable.$fStorableStablePtr4_info:
         const Foreign.Storable.$fStorableStablePtr4_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HEl() //  [R1]
         { []
         }
     {offset
       c4HEl: // global
           I64[Sp] = block_c4HEr_info;
           _s4FnK::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FnK::I64;
           if (R1 & 7 != 0) goto u4HEG; else goto c4HEs;
       u4HEG: // global
           call _c4HEr(R1) args: 0, res: 0, upd: 0;
       c4HEs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HEl_info" {
     block_c4HEl_info:
         const _c4HEl;
         const 1;
         const 30;
 },
 _c4HEr() //  [R1]
         { []
         }
     {offset
       c4HEr: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HEF; else goto c4HEE;
       c4HEF: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HEE: // global
           _s4FnQ::I64 = I64[I64[Sp + 8] + I64[R1 + 7]];
           I64[Hp - 8] = GHC.Stable.StablePtr_con_info;
           I64[Hp] = _s4FnQ::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HEr_info" {
     block_c4HEr_info:
         const _c4HEr;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.883661442 UTC

[section ""data" . Foreign.Storable.$fStorableStablePtr1_closure" {
     Foreign.Storable.$fStorableStablePtr1_closure:
         const Foreign.Storable.$fStorableStablePtr1_info;
 },
 Foreign.Storable.$fStorableStablePtr1_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HF5: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HF9; else goto c4HFa;
       c4HF9: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableStablePtr1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HFa: // global
           I64[Sp - 16] = block_c4HF2_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HFi; else goto c4HF3;
       u4HFi: // global
           call _c4HF2(R1) args: 0, res: 0, upd: 0;
       c4HF3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableStablePtr1_info" {
     Foreign.Storable.$fStorableStablePtr1_info:
         const Foreign.Storable.$fStorableStablePtr1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HF2() //  [R1]
         { []
         }
     {offset
       c4HF2: // global
           I64[Sp] = block_c4HF8_info;
           _s4FnW::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FnW::I64;
           if (R1 & 7 != 0) goto u4HFh; else goto c4HFc;
       u4HFh: // global
           call _c4HF8(R1) args: 0, res: 0, upd: 0;
       c4HFc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HF2_info" {
     block_c4HF2_info:
         const _c4HF2;
         const 1;
         const 30;
 },
 _c4HF8() //  [R1]
         { []
         }
     {offset
       c4HF8: // global
           I64[I64[Sp + 8]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HF8_info" {
     block_c4HF8_info:
         const _c4HF8;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.893177035 UTC

[section ""data" . Foreign.Storable.$fStorableStablePtr3_closure" {
     Foreign.Storable.$fStorableStablePtr3_closure:
         const Foreign.Storable.$fStorableStablePtr3_info;
 },
 Foreign.Storable.$fStorableStablePtr3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4HFG: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4HFP; else goto c4HFQ;
       c4HFP: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableStablePtr3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HFQ: // global
           I64[Sp - 24] = block_c4HFD_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4HG0; else goto c4HFE;
       u4HG0: // global
           call _c4HFD(R1) args: 0, res: 0, upd: 0;
       c4HFE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableStablePtr3_info" {
     Foreign.Storable.$fStorableStablePtr3_info:
         const Foreign.Storable.$fStorableStablePtr3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4HFD() //  [R1]
         { []
         }
     {offset
       c4HFD: // global
           I64[Sp] = block_c4HFJ_info;
           _s4Fo5::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fo5::I64;
           if (R1 & 7 != 0) goto u4HFZ; else goto c4HFK;
       u4HFZ: // global
           call _c4HFJ(R1) args: 0, res: 0, upd: 0;
       c4HFK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HFD_info" {
     block_c4HFD_info:
         const _c4HFD;
         const 2;
         const 30;
 },
 _c4HFJ() //  [R1]
         { []
         }
     {offset
       c4HFJ: // global
           I64[Sp] = block_c4HFO_info;
           _s4Fo7::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Fo7::I64;
           if (R1 & 7 != 0) goto u4HG1; else goto c4HFT;
       u4HG1: // global
           call _c4HFO(R1) args: 0, res: 0, upd: 0;
       c4HFT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HFJ_info" {
     block_c4HFJ_info:
         const _c4HFJ;
         const 66;
         const 30;
 },
 _c4HFO() //  [R1]
         { []
         }
     {offset
       c4HFO: // global
           I64[I64[Sp + 8] + I64[Sp + 16]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HFO_info" {
     block_c4HFO_info:
         const _c4HFO;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.90485601 UTC

[section ""data" . Foreign.Storable.$fStorableStablePtr_closure" {
     Foreign.Storable.$fStorableStablePtr_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableStablePtr_$calignment_closure+1;
         const Foreign.Storable.$fStorableStablePtr_$calignment_closure+1;
         const GHC.Storable.readStablePtrOffPtr1_closure+3;
         const GHC.Storable.writeStablePtrOffPtr1_closure+4;
         const Foreign.Storable.$fStorableStablePtr4_closure+3;
         const Foreign.Storable.$fStorableStablePtr3_closure+4;
         const Foreign.Storable.$fStorableStablePtr2_closure+2;
         const Foreign.Storable.$fStorableStablePtr1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.908152886 UTC

[section ""data" . Foreign.Storable.$fStorableFunPtr2_closure" {
     Foreign.Storable.$fStorableFunPtr2_closure:
         const Foreign.Storable.$fStorableFunPtr2_info;
 },
 Foreign.Storable.$fStorableFunPtr2_entry() //  [R2]
         { []
         }
     {offset
       c4HGv: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4HGz; else goto c4HGA;
       c4HGz: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFunPtr2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4HGA: // global
           I64[Sp - 8] = block_c4HGs_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4HGE; else goto c4HGt;
       u4HGE: // global
           call _c4HGs(R1) args: 0, res: 0, upd: 0;
       c4HGt: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFunPtr2_info" {
     Foreign.Storable.$fStorableFunPtr2_info:
         const Foreign.Storable.$fStorableFunPtr2_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4HGs() //  [R1]
         { []
         }
     {offset
       c4HGs: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HGD; else goto c4HGC;
       c4HGD: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HGC: // global
           _s4Foi::I64 = I64[I64[R1 + 7]];
           I64[Hp - 8] = GHC.Ptr.FunPtr_con_info;
           I64[Hp] = _s4Foi::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HGs_info" {
     block_c4HGs_info:
         const _c4HGs;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.916086885 UTC

[section ""data" . Foreign.Storable.$fStorableFunPtr4_closure" {
     Foreign.Storable.$fStorableFunPtr4_closure:
         const Foreign.Storable.$fStorableFunPtr4_info;
 },
 Foreign.Storable.$fStorableFunPtr4_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HGX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HH9; else goto c4HHa;
       c4HH9: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFunPtr4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HHa: // global
           I64[Sp - 16] = block_c4HGU_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HHg; else goto c4HGV;
       u4HHg: // global
           call _c4HGU(R1) args: 0, res: 0, upd: 0;
       c4HGV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFunPtr4_info" {
     Foreign.Storable.$fStorableFunPtr4_info:
         const Foreign.Storable.$fStorableFunPtr4_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HGU() //  [R1]
         { []
         }
     {offset
       c4HGU: // global
           I64[Sp] = block_c4HH0_info;
           _s4Foo::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Foo::I64;
           if (R1 & 7 != 0) goto u4HHf; else goto c4HH1;
       u4HHf: // global
           call _c4HH0(R1) args: 0, res: 0, upd: 0;
       c4HH1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HGU_info" {
     block_c4HGU_info:
         const _c4HGU;
         const 1;
         const 30;
 },
 _c4HH0() //  [R1]
         { []
         }
     {offset
       c4HH0: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HHe; else goto c4HHd;
       c4HHe: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HHd: // global
           _s4Fou::I64 = I64[I64[Sp + 8] + I64[R1 + 7]];
           I64[Hp - 8] = GHC.Ptr.FunPtr_con_info;
           I64[Hp] = _s4Fou::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HH0_info" {
     block_c4HH0_info:
         const _c4HH0;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.924339843 UTC

[section ""data" . Foreign.Storable.$fStorableFunPtr1_closure" {
     Foreign.Storable.$fStorableFunPtr1_closure:
         const Foreign.Storable.$fStorableFunPtr1_info;
 },
 Foreign.Storable.$fStorableFunPtr1_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HHE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HHI; else goto c4HHJ;
       c4HHI: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFunPtr1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HHJ: // global
           I64[Sp - 16] = block_c4HHB_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HHR; else goto c4HHC;
       u4HHR: // global
           call _c4HHB(R1) args: 0, res: 0, upd: 0;
       c4HHC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFunPtr1_info" {
     Foreign.Storable.$fStorableFunPtr1_info:
         const Foreign.Storable.$fStorableFunPtr1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HHB() //  [R1]
         { []
         }
     {offset
       c4HHB: // global
           I64[Sp] = block_c4HHH_info;
           _s4FoA::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FoA::I64;
           if (R1 & 7 != 0) goto u4HHQ; else goto c4HHL;
       u4HHQ: // global
           call _c4HHH(R1) args: 0, res: 0, upd: 0;
       c4HHL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HHB_info" {
     block_c4HHB_info:
         const _c4HHB;
         const 1;
         const 30;
 },
 _c4HHH() //  [R1]
         { []
         }
     {offset
       c4HHH: // global
           I64[I64[Sp + 8]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HHH_info" {
     block_c4HHH_info:
         const _c4HHH;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.932745668 UTC

[section ""data" . Foreign.Storable.$fStorableFunPtr3_closure" {
     Foreign.Storable.$fStorableFunPtr3_closure:
         const Foreign.Storable.$fStorableFunPtr3_info;
 },
 Foreign.Storable.$fStorableFunPtr3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4HIf: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4HIo; else goto c4HIp;
       c4HIo: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFunPtr3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HIp: // global
           I64[Sp - 24] = block_c4HIc_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4HIz; else goto c4HId;
       u4HIz: // global
           call _c4HIc(R1) args: 0, res: 0, upd: 0;
       c4HId: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFunPtr3_info" {
     Foreign.Storable.$fStorableFunPtr3_info:
         const Foreign.Storable.$fStorableFunPtr3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4HIc() //  [R1]
         { []
         }
     {offset
       c4HIc: // global
           I64[Sp] = block_c4HIi_info;
           _s4FoJ::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FoJ::I64;
           if (R1 & 7 != 0) goto u4HIy; else goto c4HIj;
       u4HIy: // global
           call _c4HIi(R1) args: 0, res: 0, upd: 0;
       c4HIj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HIc_info" {
     block_c4HIc_info:
         const _c4HIc;
         const 2;
         const 30;
 },
 _c4HIi() //  [R1]
         { []
         }
     {offset
       c4HIi: // global
           I64[Sp] = block_c4HIn_info;
           _s4FoL::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4FoL::I64;
           if (R1 & 7 != 0) goto u4HIA; else goto c4HIs;
       u4HIA: // global
           call _c4HIn(R1) args: 0, res: 0, upd: 0;
       c4HIs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HIi_info" {
     block_c4HIi_info:
         const _c4HIi;
         const 66;
         const 30;
 },
 _c4HIn() //  [R1]
         { []
         }
     {offset
       c4HIn: // global
           I64[I64[Sp + 8] + I64[Sp + 16]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HIn_info" {
     block_c4HIn_info:
         const _c4HIn;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.944562162 UTC

[section ""data" . Foreign.Storable.$fStorableFunPtr_closure" {
     Foreign.Storable.$fStorableFunPtr_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableFunPtr_$calignment_closure+1;
         const Foreign.Storable.$fStorableFunPtr_$calignment_closure+1;
         const GHC.Storable.readFunPtrOffPtr1_closure+3;
         const GHC.Storable.writeFunPtrOffPtr1_closure+4;
         const Foreign.Storable.$fStorableFunPtr4_closure+3;
         const Foreign.Storable.$fStorableFunPtr3_closure+4;
         const Foreign.Storable.$fStorableFunPtr2_closure+2;
         const Foreign.Storable.$fStorableFunPtr1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.947824665 UTC

[section ""data" . Foreign.Storable.$fStorablePtr2_closure" {
     Foreign.Storable.$fStorablePtr2_closure:
         const Foreign.Storable.$fStorablePtr2_info;
 },
 Foreign.Storable.$fStorablePtr2_entry() //  [R2]
         { []
         }
     {offset
       c4HJ4: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4HJ8; else goto c4HJ9;
       c4HJ8: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorablePtr2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4HJ9: // global
           I64[Sp - 8] = block_c4HJ1_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4HJd; else goto c4HJ2;
       u4HJd: // global
           call _c4HJ1(R1) args: 0, res: 0, upd: 0;
       c4HJ2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorablePtr2_info" {
     Foreign.Storable.$fStorablePtr2_info:
         const Foreign.Storable.$fStorablePtr2_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4HJ1() //  [R1]
         { []
         }
     {offset
       c4HJ1: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HJc; else goto c4HJb;
       c4HJc: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HJb: // global
           _s4FoW::I64 = I64[I64[R1 + 7]];
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4FoW::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HJ1_info" {
     block_c4HJ1_info:
         const _c4HJ1;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.95622056 UTC

[section ""data" . Foreign.Storable.$fStorablePtr4_closure" {
     Foreign.Storable.$fStorablePtr4_closure:
         const Foreign.Storable.$fStorablePtr4_info;
 },
 Foreign.Storable.$fStorablePtr4_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HJw: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HJI; else goto c4HJJ;
       c4HJI: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorablePtr4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HJJ: // global
           I64[Sp - 16] = block_c4HJt_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HJP; else goto c4HJu;
       u4HJP: // global
           call _c4HJt(R1) args: 0, res: 0, upd: 0;
       c4HJu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorablePtr4_info" {
     Foreign.Storable.$fStorablePtr4_info:
         const Foreign.Storable.$fStorablePtr4_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HJt() //  [R1]
         { []
         }
     {offset
       c4HJt: // global
           I64[Sp] = block_c4HJz_info;
           _s4Fp2::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fp2::I64;
           if (R1 & 7 != 0) goto u4HJO; else goto c4HJA;
       u4HJO: // global
           call _c4HJz(R1) args: 0, res: 0, upd: 0;
       c4HJA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HJt_info" {
     block_c4HJt_info:
         const _c4HJt;
         const 1;
         const 30;
 },
 _c4HJz() //  [R1]
         { []
         }
     {offset
       c4HJz: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HJN; else goto c4HJM;
       c4HJN: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HJM: // global
           _s4Fp8::I64 = I64[I64[Sp + 8] + I64[R1 + 7]];
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4Fp8::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HJz_info" {
     block_c4HJz_info:
         const _c4HJz;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.965900272 UTC

[section ""data" . Foreign.Storable.$fStorablePtr1_closure" {
     Foreign.Storable.$fStorablePtr1_closure:
         const Foreign.Storable.$fStorablePtr1_info;
 },
 Foreign.Storable.$fStorablePtr1_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HKd: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HKh; else goto c4HKi;
       c4HKh: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorablePtr1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HKi: // global
           I64[Sp - 16] = block_c4HKa_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HKq; else goto c4HKb;
       u4HKq: // global
           call _c4HKa(R1) args: 0, res: 0, upd: 0;
       c4HKb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorablePtr1_info" {
     Foreign.Storable.$fStorablePtr1_info:
         const Foreign.Storable.$fStorablePtr1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HKa() //  [R1]
         { []
         }
     {offset
       c4HKa: // global
           I64[Sp] = block_c4HKg_info;
           _s4Fpe::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fpe::I64;
           if (R1 & 7 != 0) goto u4HKp; else goto c4HKk;
       u4HKp: // global
           call _c4HKg(R1) args: 0, res: 0, upd: 0;
       c4HKk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HKa_info" {
     block_c4HKa_info:
         const _c4HKa;
         const 1;
         const 30;
 },
 _c4HKg() //  [R1]
         { []
         }
     {offset
       c4HKg: // global
           I64[I64[Sp + 8]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HKg_info" {
     block_c4HKg_info:
         const _c4HKg;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.975091803 UTC

[section ""data" . Foreign.Storable.$fStorablePtr3_closure" {
     Foreign.Storable.$fStorablePtr3_closure:
         const Foreign.Storable.$fStorablePtr3_info;
 },
 Foreign.Storable.$fStorablePtr3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4HKO: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4HKX; else goto c4HKY;
       c4HKX: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorablePtr3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HKY: // global
           I64[Sp - 24] = block_c4HKL_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4HL8; else goto c4HKM;
       u4HL8: // global
           call _c4HKL(R1) args: 0, res: 0, upd: 0;
       c4HKM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorablePtr3_info" {
     Foreign.Storable.$fStorablePtr3_info:
         const Foreign.Storable.$fStorablePtr3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4HKL() //  [R1]
         { []
         }
     {offset
       c4HKL: // global
           I64[Sp] = block_c4HKR_info;
           _s4Fpn::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fpn::I64;
           if (R1 & 7 != 0) goto u4HL7; else goto c4HKS;
       u4HL7: // global
           call _c4HKR(R1) args: 0, res: 0, upd: 0;
       c4HKS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HKL_info" {
     block_c4HKL_info:
         const _c4HKL;
         const 2;
         const 30;
 },
 _c4HKR() //  [R1]
         { []
         }
     {offset
       c4HKR: // global
           I64[Sp] = block_c4HKW_info;
           _s4Fpp::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Fpp::I64;
           if (R1 & 7 != 0) goto u4HL9; else goto c4HL1;
       u4HL9: // global
           call _c4HKW(R1) args: 0, res: 0, upd: 0;
       c4HL1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HKR_info" {
     block_c4HKR_info:
         const _c4HKR;
         const 66;
         const 30;
 },
 _c4HKW() //  [R1]
         { []
         }
     {offset
       c4HKW: // global
           I64[I64[Sp + 8] + I64[Sp + 16]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HKW_info" {
     block_c4HKW_info:
         const _c4HKW;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.98427693 UTC

[section ""data" . Foreign.Storable.$fStorablePtr_closure" {
     Foreign.Storable.$fStorablePtr_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorablePtr_$calignment_closure+1;
         const Foreign.Storable.$fStorablePtr_$calignment_closure+1;
         const GHC.Storable.readPtrOffPtr1_closure+3;
         const GHC.Storable.writePtrOffPtr1_closure+4;
         const Foreign.Storable.$fStorablePtr4_closure+3;
         const Foreign.Storable.$fStorablePtr3_closure+4;
         const Foreign.Storable.$fStorablePtr2_closure+2;
         const Foreign.Storable.$fStorablePtr1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.987302261 UTC

[section ""data" . Foreign.Storable.$fStorableWord2_closure" {
     Foreign.Storable.$fStorableWord2_closure:
         const Foreign.Storable.$fStorableWord2_info;
 },
 Foreign.Storable.$fStorableWord2_entry() //  [R2]
         { []
         }
     {offset
       c4HLD: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4HLH; else goto c4HLI;
       c4HLH: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4HLI: // global
           I64[Sp - 8] = block_c4HLA_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4HLM; else goto c4HLB;
       u4HLM: // global
           call _c4HLA(R1) args: 0, res: 0, upd: 0;
       c4HLB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord2_info" {
     Foreign.Storable.$fStorableWord2_info:
         const Foreign.Storable.$fStorableWord2_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4HLA() //  [R1]
         { []
         }
     {offset
       c4HLA: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HLL; else goto c4HLK;
       c4HLL: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HLK: // global
           _s4FpA::I64 = I64[I64[R1 + 7]];
           I64[Hp - 8] = GHC.Types.W#_con_info;
           I64[Hp] = _s4FpA::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HLA_info" {
     block_c4HLA_info:
         const _c4HLA;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:31.994296427 UTC

[section ""data" . Foreign.Storable.$fStorableWord4_closure" {
     Foreign.Storable.$fStorableWord4_closure:
         const Foreign.Storable.$fStorableWord4_info;
 },
 Foreign.Storable.$fStorableWord4_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HM5: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HMh; else goto c4HMi;
       c4HMh: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HMi: // global
           I64[Sp - 16] = block_c4HM2_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HMo; else goto c4HM3;
       u4HMo: // global
           call _c4HM2(R1) args: 0, res: 0, upd: 0;
       c4HM3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord4_info" {
     Foreign.Storable.$fStorableWord4_info:
         const Foreign.Storable.$fStorableWord4_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HM2() //  [R1]
         { []
         }
     {offset
       c4HM2: // global
           I64[Sp] = block_c4HM8_info;
           _s4FpG::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FpG::I64;
           if (R1 & 7 != 0) goto u4HMn; else goto c4HM9;
       u4HMn: // global
           call _c4HM8(R1) args: 0, res: 0, upd: 0;
       c4HM9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HM2_info" {
     block_c4HM2_info:
         const _c4HM2;
         const 1;
         const 30;
 },
 _c4HM8() //  [R1]
         { []
         }
     {offset
       c4HM8: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HMm; else goto c4HMl;
       c4HMm: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HMl: // global
           _s4FpM::I64 = I64[I64[Sp + 8] + I64[R1 + 7]];
           I64[Hp - 8] = GHC.Types.W#_con_info;
           I64[Hp] = _s4FpM::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HM8_info" {
     block_c4HM8_info:
         const _c4HM8;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.003297073 UTC

[section ""data" . Foreign.Storable.$fStorableWord1_closure" {
     Foreign.Storable.$fStorableWord1_closure:
         const Foreign.Storable.$fStorableWord1_info;
 },
 Foreign.Storable.$fStorableWord1_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HMM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HMQ; else goto c4HMR;
       c4HMQ: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HMR: // global
           I64[Sp - 16] = block_c4HMJ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HMZ; else goto c4HMK;
       u4HMZ: // global
           call _c4HMJ(R1) args: 0, res: 0, upd: 0;
       c4HMK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord1_info" {
     Foreign.Storable.$fStorableWord1_info:
         const Foreign.Storable.$fStorableWord1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HMJ() //  [R1]
         { []
         }
     {offset
       c4HMJ: // global
           I64[Sp] = block_c4HMP_info;
           _s4FpS::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FpS::I64;
           if (R1 & 7 != 0) goto u4HMY; else goto c4HMT;
       u4HMY: // global
           call _c4HMP(R1) args: 0, res: 0, upd: 0;
       c4HMT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HMJ_info" {
     block_c4HMJ_info:
         const _c4HMJ;
         const 1;
         const 30;
 },
 _c4HMP() //  [R1]
         { []
         }
     {offset
       c4HMP: // global
           I64[I64[Sp + 8]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HMP_info" {
     block_c4HMP_info:
         const _c4HMP;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.012376405 UTC

[section ""data" . Foreign.Storable.$fStorableWord3_closure" {
     Foreign.Storable.$fStorableWord3_closure:
         const Foreign.Storable.$fStorableWord3_info;
 },
 Foreign.Storable.$fStorableWord3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4HNn: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4HNw; else goto c4HNx;
       c4HNw: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HNx: // global
           I64[Sp - 24] = block_c4HNk_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4HNH; else goto c4HNl;
       u4HNH: // global
           call _c4HNk(R1) args: 0, res: 0, upd: 0;
       c4HNl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord3_info" {
     Foreign.Storable.$fStorableWord3_info:
         const Foreign.Storable.$fStorableWord3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4HNk() //  [R1]
         { []
         }
     {offset
       c4HNk: // global
           I64[Sp] = block_c4HNq_info;
           _s4Fq1::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fq1::I64;
           if (R1 & 7 != 0) goto u4HNG; else goto c4HNr;
       u4HNG: // global
           call _c4HNq(R1) args: 0, res: 0, upd: 0;
       c4HNr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HNk_info" {
     block_c4HNk_info:
         const _c4HNk;
         const 2;
         const 30;
 },
 _c4HNq() //  [R1]
         { []
         }
     {offset
       c4HNq: // global
           I64[Sp] = block_c4HNv_info;
           _s4Fq3::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Fq3::I64;
           if (R1 & 7 != 0) goto u4HNI; else goto c4HNA;
       u4HNI: // global
           call _c4HNv(R1) args: 0, res: 0, upd: 0;
       c4HNA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HNq_info" {
     block_c4HNq_info:
         const _c4HNq;
         const 66;
         const 30;
 },
 _c4HNv() //  [R1]
         { []
         }
     {offset
       c4HNv: // global
           I64[I64[Sp + 8] + I64[Sp + 16]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HNv_info" {
     block_c4HNv_info:
         const _c4HNv;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.020548918 UTC

[section ""data" . Foreign.Storable.$fStorableWord_closure" {
     Foreign.Storable.$fStorableWord_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableWord_$calignment_closure+1;
         const Foreign.Storable.$fStorableWord_$calignment_closure+1;
         const GHC.Storable.readWordOffPtr1_closure+3;
         const GHC.Storable.writeWordOffPtr1_closure+4;
         const Foreign.Storable.$fStorableWord4_closure+3;
         const Foreign.Storable.$fStorableWord3_closure+4;
         const Foreign.Storable.$fStorableWord2_closure+2;
         const Foreign.Storable.$fStorableWord1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.023558003 UTC

[section ""data" . Foreign.Storable.$fStorableInt2_closure" {
     Foreign.Storable.$fStorableInt2_closure:
         const Foreign.Storable.$fStorableInt2_info;
 },
 Foreign.Storable.$fStorableInt2_entry() //  [R2]
         { []
         }
     {offset
       c4HOc: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4HOg; else goto c4HOh;
       c4HOg: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4HOh: // global
           I64[Sp - 8] = block_c4HO9_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4HOl; else goto c4HOa;
       u4HOl: // global
           call _c4HO9(R1) args: 0, res: 0, upd: 0;
       c4HOa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt2_info" {
     Foreign.Storable.$fStorableInt2_info:
         const Foreign.Storable.$fStorableInt2_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4HO9() //  [R1]
         { []
         }
     {offset
       c4HO9: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HOk; else goto c4HOj;
       c4HOk: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HOj: // global
           _s4Fqe::I64 = I64[I64[R1 + 7]];
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s4Fqe::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HO9_info" {
     block_c4HO9_info:
         const _c4HO9;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.030633947 UTC

[section ""data" . Foreign.Storable.$fStorableInt4_closure" {
     Foreign.Storable.$fStorableInt4_closure:
         const Foreign.Storable.$fStorableInt4_info;
 },
 Foreign.Storable.$fStorableInt4_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HOE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HOQ; else goto c4HOR;
       c4HOQ: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HOR: // global
           I64[Sp - 16] = block_c4HOB_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HOX; else goto c4HOC;
       u4HOX: // global
           call _c4HOB(R1) args: 0, res: 0, upd: 0;
       c4HOC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt4_info" {
     Foreign.Storable.$fStorableInt4_info:
         const Foreign.Storable.$fStorableInt4_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HOB() //  [R1]
         { []
         }
     {offset
       c4HOB: // global
           I64[Sp] = block_c4HOH_info;
           _s4Fqk::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fqk::I64;
           if (R1 & 7 != 0) goto u4HOW; else goto c4HOI;
       u4HOW: // global
           call _c4HOH(R1) args: 0, res: 0, upd: 0;
       c4HOI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HOB_info" {
     block_c4HOB_info:
         const _c4HOB;
         const 1;
         const 30;
 },
 _c4HOH() //  [R1]
         { []
         }
     {offset
       c4HOH: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HOV; else goto c4HOU;
       c4HOV: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HOU: // global
           _s4Fqq::I64 = I64[I64[Sp + 8] + I64[R1 + 7]];
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s4Fqq::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HOH_info" {
     block_c4HOH_info:
         const _c4HOH;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.039622024 UTC

[section ""data" . Foreign.Storable.$fStorableInt1_closure" {
     Foreign.Storable.$fStorableInt1_closure:
         const Foreign.Storable.$fStorableInt1_info;
 },
 Foreign.Storable.$fStorableInt1_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HPl: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HPp; else goto c4HPq;
       c4HPp: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HPq: // global
           I64[Sp - 16] = block_c4HPi_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HPy; else goto c4HPj;
       u4HPy: // global
           call _c4HPi(R1) args: 0, res: 0, upd: 0;
       c4HPj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt1_info" {
     Foreign.Storable.$fStorableInt1_info:
         const Foreign.Storable.$fStorableInt1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HPi() //  [R1]
         { []
         }
     {offset
       c4HPi: // global
           I64[Sp] = block_c4HPo_info;
           _s4Fqw::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fqw::I64;
           if (R1 & 7 != 0) goto u4HPx; else goto c4HPs;
       u4HPx: // global
           call _c4HPo(R1) args: 0, res: 0, upd: 0;
       c4HPs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HPi_info" {
     block_c4HPi_info:
         const _c4HPi;
         const 1;
         const 30;
 },
 _c4HPo() //  [R1]
         { []
         }
     {offset
       c4HPo: // global
           I64[I64[Sp + 8]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HPo_info" {
     block_c4HPo_info:
         const _c4HPo;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.047723322 UTC

[section ""data" . Foreign.Storable.$fStorableInt3_closure" {
     Foreign.Storable.$fStorableInt3_closure:
         const Foreign.Storable.$fStorableInt3_info;
 },
 Foreign.Storable.$fStorableInt3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4HPW: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4HQ5; else goto c4HQ6;
       c4HQ5: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HQ6: // global
           I64[Sp - 24] = block_c4HPT_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4HQg; else goto c4HPU;
       u4HQg: // global
           call _c4HPT(R1) args: 0, res: 0, upd: 0;
       c4HPU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt3_info" {
     Foreign.Storable.$fStorableInt3_info:
         const Foreign.Storable.$fStorableInt3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4HPT() //  [R1]
         { []
         }
     {offset
       c4HPT: // global
           I64[Sp] = block_c4HPZ_info;
           _s4FqF::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FqF::I64;
           if (R1 & 7 != 0) goto u4HQf; else goto c4HQ0;
       u4HQf: // global
           call _c4HPZ(R1) args: 0, res: 0, upd: 0;
       c4HQ0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HPT_info" {
     block_c4HPT_info:
         const _c4HPT;
         const 2;
         const 30;
 },
 _c4HPZ() //  [R1]
         { []
         }
     {offset
       c4HPZ: // global
           I64[Sp] = block_c4HQ4_info;
           _s4FqH::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4FqH::I64;
           if (R1 & 7 != 0) goto u4HQh; else goto c4HQ9;
       u4HQh: // global
           call _c4HQ4(R1) args: 0, res: 0, upd: 0;
       c4HQ9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HPZ_info" {
     block_c4HPZ_info:
         const _c4HPZ;
         const 66;
         const 30;
 },
 _c4HQ4() //  [R1]
         { []
         }
     {offset
       c4HQ4: // global
           I64[I64[Sp + 8] + I64[Sp + 16]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HQ4_info" {
     block_c4HQ4_info:
         const _c4HQ4;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.05653847 UTC

[section ""data" . Foreign.Storable.$fStorableInt_closure" {
     Foreign.Storable.$fStorableInt_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableInt_$calignment_closure+1;
         const Foreign.Storable.$fStorableInt_$calignment_closure+1;
         const GHC.Storable.readIntOffPtr1_closure+3;
         const GHC.Storable.writeIntOffPtr1_closure+4;
         const Foreign.Storable.$fStorableInt4_closure+3;
         const Foreign.Storable.$fStorableInt3_closure+4;
         const Foreign.Storable.$fStorableInt2_closure+2;
         const Foreign.Storable.$fStorableInt1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.059489564 UTC

[section ""data" . Foreign.Storable.$fStorableChar2_closure" {
     Foreign.Storable.$fStorableChar2_closure:
         const Foreign.Storable.$fStorableChar2_info;
 },
 Foreign.Storable.$fStorableChar2_entry() //  [R2]
         { []
         }
     {offset
       c4HQL: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4HQP; else goto c4HQQ;
       c4HQP: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableChar2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4HQQ: // global
           I64[Sp - 8] = block_c4HQI_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4HQU; else goto c4HQJ;
       u4HQU: // global
           call _c4HQI(R1) args: 0, res: 0, upd: 0;
       c4HQJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableChar2_info" {
     Foreign.Storable.$fStorableChar2_info:
         const Foreign.Storable.$fStorableChar2_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4HQI() //  [R1]
         { []
         }
     {offset
       c4HQI: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HQT; else goto c4HQS;
       c4HQT: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HQS: // global
           _s4FqS::I64 = %MO_UU_Conv_W32_W64(I32[I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Types.C#_con_info;
           I64[Hp] = _s4FqS::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HQI_info" {
     block_c4HQI_info:
         const _c4HQI;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.066445537 UTC

[section ""data" . Foreign.Storable.$fStorableChar4_closure" {
     Foreign.Storable.$fStorableChar4_closure:
         const Foreign.Storable.$fStorableChar4_info;
 },
 Foreign.Storable.$fStorableChar4_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HRd: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HRp; else goto c4HRq;
       c4HRp: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableChar4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HRq: // global
           I64[Sp - 16] = block_c4HRa_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HRw; else goto c4HRb;
       u4HRw: // global
           call _c4HRa(R1) args: 0, res: 0, upd: 0;
       c4HRb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableChar4_info" {
     Foreign.Storable.$fStorableChar4_info:
         const Foreign.Storable.$fStorableChar4_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HRa() //  [R1]
         { []
         }
     {offset
       c4HRa: // global
           I64[Sp] = block_c4HRg_info;
           _s4FqY::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FqY::I64;
           if (R1 & 7 != 0) goto u4HRv; else goto c4HRh;
       u4HRv: // global
           call _c4HRg(R1) args: 0, res: 0, upd: 0;
       c4HRh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HRa_info" {
     block_c4HRa_info:
         const _c4HRa;
         const 1;
         const 30;
 },
 _c4HRg() //  [R1]
         { []
         }
     {offset
       c4HRg: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HRu; else goto c4HRt;
       c4HRu: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HRt: // global
           _s4Fr4::I64 = %MO_UU_Conv_W32_W64(I32[I64[Sp + 8] + I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Types.C#_con_info;
           I64[Hp] = _s4Fr4::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HRg_info" {
     block_c4HRg_info:
         const _c4HRg;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.076235448 UTC

[section ""data" . Foreign.Storable.$fStorableChar1_closure" {
     Foreign.Storable.$fStorableChar1_closure:
         const Foreign.Storable.$fStorableChar1_info;
 },
 Foreign.Storable.$fStorableChar1_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HRU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HRY; else goto c4HRZ;
       c4HRY: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableChar1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HRZ: // global
           I64[Sp - 16] = block_c4HRR_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HS7; else goto c4HRS;
       u4HS7: // global
           call _c4HRR(R1) args: 0, res: 0, upd: 0;
       c4HRS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableChar1_info" {
     Foreign.Storable.$fStorableChar1_info:
         const Foreign.Storable.$fStorableChar1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HRR() //  [R1]
         { []
         }
     {offset
       c4HRR: // global
           I64[Sp] = block_c4HRX_info;
           _s4Fra::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fra::I64;
           if (R1 & 7 != 0) goto u4HS6; else goto c4HS1;
       u4HS6: // global
           call _c4HRX(R1) args: 0, res: 0, upd: 0;
       c4HS1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HRR_info" {
     block_c4HRR_info:
         const _c4HRR;
         const 1;
         const 30;
 },
 _c4HRX() //  [R1]
         { []
         }
     {offset
       c4HRX: // global
           I32[I64[Sp + 8]] = %MO_UU_Conv_W64_W32(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HRX_info" {
     block_c4HRX_info:
         const _c4HRX;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.08853827 UTC

[section ""data" . Foreign.Storable.$fStorableChar3_closure" {
     Foreign.Storable.$fStorableChar3_closure:
         const Foreign.Storable.$fStorableChar3_info;
 },
 Foreign.Storable.$fStorableChar3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4HSv: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4HSE; else goto c4HSF;
       c4HSE: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableChar3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HSF: // global
           I64[Sp - 24] = block_c4HSs_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4HSP; else goto c4HSt;
       u4HSP: // global
           call _c4HSs(R1) args: 0, res: 0, upd: 0;
       c4HSt: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableChar3_info" {
     Foreign.Storable.$fStorableChar3_info:
         const Foreign.Storable.$fStorableChar3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4HSs() //  [R1]
         { []
         }
     {offset
       c4HSs: // global
           I64[Sp] = block_c4HSy_info;
           _s4Frj::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Frj::I64;
           if (R1 & 7 != 0) goto u4HSO; else goto c4HSz;
       u4HSO: // global
           call _c4HSy(R1) args: 0, res: 0, upd: 0;
       c4HSz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HSs_info" {
     block_c4HSs_info:
         const _c4HSs;
         const 2;
         const 30;
 },
 _c4HSy() //  [R1]
         { []
         }
     {offset
       c4HSy: // global
           I64[Sp] = block_c4HSD_info;
           _s4Frl::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Frl::I64;
           if (R1 & 7 != 0) goto u4HSQ; else goto c4HSI;
       u4HSQ: // global
           call _c4HSD(R1) args: 0, res: 0, upd: 0;
       c4HSI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HSy_info" {
     block_c4HSy_info:
         const _c4HSy;
         const 66;
         const 30;
 },
 _c4HSD() //  [R1]
         { []
         }
     {offset
       c4HSD: // global
           I32[I64[Sp + 8] + I64[Sp + 16]] = %MO_UU_Conv_W64_W32(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HSD_info" {
     block_c4HSD_info:
         const _c4HSD;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.096760268 UTC

[section ""data" . Foreign.Storable.$fStorableChar_closure" {
     Foreign.Storable.$fStorableChar_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableChar_$calignment_closure+1;
         const Foreign.Storable.$fStorableChar_$calignment_closure+1;
         const GHC.Storable.readWideCharOffPtr1_closure+3;
         const GHC.Storable.writeWideCharOffPtr1_closure+4;
         const Foreign.Storable.$fStorableChar4_closure+3;
         const Foreign.Storable.$fStorableChar3_closure+4;
         const Foreign.Storable.$fStorableChar2_closure+2;
         const Foreign.Storable.$fStorableChar1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.098556296 UTC

[section ""data" . Foreign.Storable.$trModule3_closure" {
     Foreign.Storable.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.Storable.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.100200621 UTC

[section ""data" . Foreign.Storable.$trModule1_closure" {
     Foreign.Storable.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.Storable.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.102025814 UTC

[section ""data" . Foreign.Storable.$trModule_closure" {
     Foreign.Storable.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Foreign.Storable.$trModule3_closure+1;
         const Foreign.Storable.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.103772156 UTC

[section ""data" . $krep_r4Ffk_closure" {
     $krep_r4Ffk_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.105841588 UTC

[section ""data" . Foreign.Storable.$tcStorable1_closure" {
     Foreign.Storable.$tcStorable1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*_closure;
         const $krep_r4Ffk_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.107655493 UTC

[section ""cstring" . Foreign.Storable.$tcStorable3_bytes" {
     Foreign.Storable.$tcStorable3_bytes:
         I8[] [83,116,111,114,97,98,108,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.109395103 UTC

[section ""data" . Foreign.Storable.$tcStorable2_closure" {
     Foreign.Storable.$tcStorable2_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.Storable.$tcStorable3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.111667733 UTC

[section ""data" . Foreign.Storable.$tcStorable_closure" {
     Foreign.Storable.$tcStorable_closure:
         const GHC.Types.TyCon_con_info;
         const Foreign.Storable.$trModule_closure+1;
         const Foreign.Storable.$tcStorable2_closure+1;
         const Foreign.Storable.$tcStorable1_closure+4;
         const 9192657549155052097;
         const 13909834202100645491;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.114777824 UTC

[section ""data" . Foreign.Storable.$fStorableWord20_closure" {
     Foreign.Storable.$fStorableWord20_closure:
         const Foreign.Storable.$fStorableWord20_info;
 },
 Foreign.Storable.$fStorableWord20_entry() //  [R2]
         { []
         }
     {offset
       c4HTs: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4HTw; else goto c4HTx;
       c4HTw: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord20_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4HTx: // global
           I64[Sp - 8] = block_c4HTp_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4HTB; else goto c4HTq;
       u4HTB: // global
           call _c4HTp(R1) args: 0, res: 0, upd: 0;
       c4HTq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord20_info" {
     Foreign.Storable.$fStorableWord20_info:
         const Foreign.Storable.$fStorableWord20_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4HTp() //  [R1]
         { []
         }
     {offset
       c4HTp: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HTA; else goto c4HTz;
       c4HTA: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HTz: // global
           _s4Frw::I64 = %MO_UU_Conv_W8_W64(I8[I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Word.W8#_con_info;
           I64[Hp] = _s4Frw::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HTp_info" {
     block_c4HTp_info:
         const _c4HTp;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.121126365 UTC

[section ""data" . Foreign.Storable.$fStorableWord22_closure" {
     Foreign.Storable.$fStorableWord22_closure:
         const Foreign.Storable.$fStorableWord22_info;
 },
 Foreign.Storable.$fStorableWord22_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HTU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HU6; else goto c4HU7;
       c4HU6: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord22_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HU7: // global
           I64[Sp - 16] = block_c4HTR_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HUd; else goto c4HTS;
       u4HUd: // global
           call _c4HTR(R1) args: 0, res: 0, upd: 0;
       c4HTS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord22_info" {
     Foreign.Storable.$fStorableWord22_info:
         const Foreign.Storable.$fStorableWord22_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HTR() //  [R1]
         { []
         }
     {offset
       c4HTR: // global
           I64[Sp] = block_c4HTX_info;
           _s4FrC::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FrC::I64;
           if (R1 & 7 != 0) goto u4HUc; else goto c4HTY;
       u4HUc: // global
           call _c4HTX(R1) args: 0, res: 0, upd: 0;
       c4HTY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HTR_info" {
     block_c4HTR_info:
         const _c4HTR;
         const 1;
         const 30;
 },
 _c4HTX() //  [R1]
         { []
         }
     {offset
       c4HTX: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4HUb; else goto c4HUa;
       c4HUb: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HUa: // global
           _s4FrI::I64 = %MO_UU_Conv_W8_W64(I8[I64[Sp + 8] + I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Word.W8#_con_info;
           I64[Hp] = _s4FrI::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HTX_info" {
     block_c4HTX_info:
         const _c4HTX;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.128936756 UTC

[section ""data" . Foreign.Storable.$fStorableWord19_closure" {
     Foreign.Storable.$fStorableWord19_closure:
         const Foreign.Storable.$fStorableWord19_info;
 },
 Foreign.Storable.$fStorableWord19_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HUB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HUF; else goto c4HUG;
       c4HUF: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord19_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HUG: // global
           I64[Sp - 16] = block_c4HUy_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HUO; else goto c4HUz;
       u4HUO: // global
           call _c4HUy(R1) args: 0, res: 0, upd: 0;
       c4HUz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord19_info" {
     Foreign.Storable.$fStorableWord19_info:
         const Foreign.Storable.$fStorableWord19_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HUy() //  [R1]
         { []
         }
     {offset
       c4HUy: // global
           I64[Sp] = block_c4HUE_info;
           _s4FrO::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FrO::I64;
           if (R1 & 7 != 0) goto u4HUN; else goto c4HUI;
       u4HUN: // global
           call _c4HUE(R1) args: 0, res: 0, upd: 0;
       c4HUI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HUy_info" {
     block_c4HUy_info:
         const _c4HUy;
         const 1;
         const 30;
 },
 _c4HUE() //  [R1]
         { []
         }
     {offset
       c4HUE: // global
           I8[I64[Sp + 8]] = %MO_UU_Conv_W64_W8(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HUE_info" {
     block_c4HUE_info:
         const _c4HUE;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.137954698 UTC

[section ""data" . Foreign.Storable.$fStorableWord21_closure" {
     Foreign.Storable.$fStorableWord21_closure:
         const Foreign.Storable.$fStorableWord21_info;
 },
 Foreign.Storable.$fStorableWord21_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4HVc: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4HVl; else goto c4HVm;
       c4HVl: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord21_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HVm: // global
           I64[Sp - 24] = block_c4HV9_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4HVw; else goto c4HVa;
       u4HVw: // global
           call _c4HV9(R1) args: 0, res: 0, upd: 0;
       c4HVa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord21_info" {
     Foreign.Storable.$fStorableWord21_info:
         const Foreign.Storable.$fStorableWord21_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4HV9() //  [R1]
         { []
         }
     {offset
       c4HV9: // global
           I64[Sp] = block_c4HVf_info;
           _s4FrX::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FrX::I64;
           if (R1 & 7 != 0) goto u4HVv; else goto c4HVg;
       u4HVv: // global
           call _c4HVf(R1) args: 0, res: 0, upd: 0;
       c4HVg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HV9_info" {
     block_c4HV9_info:
         const _c4HV9;
         const 2;
         const 30;
 },
 _c4HVf() //  [R1]
         { []
         }
     {offset
       c4HVf: // global
           I64[Sp] = block_c4HVk_info;
           _s4FrZ::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4FrZ::I64;
           if (R1 & 7 != 0) goto u4HVx; else goto c4HVp;
       u4HVx: // global
           call _c4HVk(R1) args: 0, res: 0, upd: 0;
       c4HVp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HVf_info" {
     block_c4HVf_info:
         const _c4HVf;
         const 66;
         const 30;
 },
 _c4HVk() //  [R1]
         { []
         }
     {offset
       c4HVk: // global
           I8[I64[Sp + 8] + I64[Sp + 16]] = %MO_UU_Conv_W64_W8(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HVk_info" {
     block_c4HVk_info:
         const _c4HVk;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.146328683 UTC

[section ""data" . Foreign.Storable.$fStorableWord8_closure" {
     Foreign.Storable.$fStorableWord8_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableWord8_$calignment_closure+1;
         const Foreign.Storable.$fStorableWord8_$calignment_closure+1;
         const GHC.Storable.readWord8OffPtr1_closure+3;
         const GHC.Storable.writeWord8OffPtr1_closure+4;
         const Foreign.Storable.$fStorableWord22_closure+3;
         const Foreign.Storable.$fStorableWord21_closure+4;
         const Foreign.Storable.$fStorableWord20_closure+2;
         const Foreign.Storable.$fStorableWord19_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.151347087 UTC

[section ""data" . Foreign.Storable.$fStorableRatio2_closure" {
     Foreign.Storable.$fStorableRatio2_closure:
         const Foreign.Storable.$fStorableRatio2_info;
         const 0;
 },
 sat_s4Fse_entry() //  [R1]
         { []
         }
     {offset
       c4HW6: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HW7; else goto c4HW8;
       c4HW7: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4HW8: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Real.%_entry(R4, R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4Fse_info" {
     sat_s4Fse_info:
         const sat_s4Fse_entry;
         const 3;
         const 4294967311;
         const S4FBN_srt+32;
 },
 Foreign.Storable.$fStorableRatio2_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4HW9: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c4HWa; else goto c4HWb;
       c4HWa: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableRatio2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HWb: // global
           I64[Sp - 32] = block_c4HVY_info;
           _s4Fs4::P64 = R2;
           R2 = R2;
           I64[Sp - 48] = stg_ap_pv_info;
           P64[Sp - 40] = R4;
           P64[Sp - 24] = _s4Fs4::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 48;
           call Foreign.Storable.peek_entry(R2) args: 24, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio2_info" {
     Foreign.Storable.$fStorableRatio2_info:
         const Foreign.Storable.$fStorableRatio2_entry;
         const 0;
         const 12884901902;
         const 17179869207;
         const S4FBN_srt+32;
 },
 _c4HVY() //  [R1]
         { []
         }
     {offset
       c4HVY: // global
           _s4Fs4::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c4HW0_info;
           R2 = _s4Fs4::P64;
           I64[Sp - 16] = stg_ap_ppv_info;
           P64[Sp - 8] = P64[Sp + 24];
           P64[Sp] = Foreign.Storable.$fStorable()7_closure+1;
           P64[Sp + 24] = R1;
           Sp = Sp - 16;
           call Foreign.Storable.peekElemOff_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HVY_info" {
     block_c4HVY_info:
         const _c4HVY;
         const 3;
         const 4294967326;
         const S4FBN_srt+32;
 },
 _c4HW0() //  [R1]
         { []
         }
     {offset
       c4HW0: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c4HWf; else goto c4HWe;
       c4HWf: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HWe: // global
           I64[Hp - 32] = sat_s4Fse_info;
           P64[Hp - 16] = P64[Sp + 8];
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = R1;
           R1 = Hp - 32;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HW0_info" {
     block_c4HW0_info:
         const _c4HW0;
         const 2;
         const 4294967326;
         const S4FBN_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.161118189 UTC

[section ""data" . Foreign.Storable.$fStorableRatio1_closure" {
     Foreign.Storable.$fStorableRatio1_closure:
         const Foreign.Storable.$fStorableRatio1_info;
 },
 Foreign.Storable.$fStorableRatio1_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c4HWG: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c4HWK; else goto c4HWL;
       c4HWK: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableRatio1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HWL: // global
           I64[Sp - 24] = block_c4HWD_info;
           R1 = R5;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4HWP; else goto c4HWE;
       u4HWP: // global
           call _c4HWD(R1) args: 0, res: 0, upd: 0;
       c4HWE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio1_info" {
     Foreign.Storable.$fStorableRatio1_info:
         const Foreign.Storable.$fStorableRatio1_entry;
         const 0;
         const 14;
         const 21474836504;
 },
 _c4HWD() //  [R1]
         { []
         }
     {offset
       c4HWD: // global
           I64[Sp - 8] = block_c4HWJ_info;
           R2 = P64[Sp + 8];
           I64[Sp - 32] = stg_ap_ppv_info;
           P64[Sp - 24] = P64[Sp + 16];
           P64[Sp - 16] = P64[R1 + 7];
           P64[Sp] = P64[R1 + 15];
           Sp = Sp - 32;
           call Foreign.Storable.poke_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HWD_info" {
     block_c4HWD_info:
         const _c4HWD;
         const 2;
         const 30;
 },
 _c4HWJ() //  []
         { []
         }
     {offset
       c4HWJ: // global
           R2 = P64[Sp + 16];
           I64[Sp] = stg_ap_pppv_info;
           _s4Fsm::P64 = P64[Sp + 8];
           P64[Sp + 8] = P64[Sp + 24];
           P64[Sp + 16] = Foreign.Storable.$fStorable()7_closure+1;
           P64[Sp + 24] = _s4Fsm::P64;
           call Foreign.Storable.pokeElemOff_entry(R2) args: 40, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HWJ_info" {
     block_c4HWJ_info:
         const _c4HWJ;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.170247546 UTC

[section ""data" . Foreign.Storable.$fStorableBool6_closure" {
     Foreign.Storable.$fStorableBool6_closure:
         const Foreign.Storable.$fStorableBool6_info;
 },
 sat_s4FsB_entry() //  [R1]
         { []
         }
     {offset
       c4HXs: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HXt; else goto c4HXu;
       c4HXt: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4HXu: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 16] == 0) goto c4HXr; else goto c4HXq;
       c4HXr: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c4HXq: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4FsB_info" {
     sat_s4FsB_info:
         const sat_s4FsB_entry;
         const 4294967296;
         const 17;
 },
 Foreign.Storable.$fStorableBool6_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HXv: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HXw; else goto c4HXx;
       c4HXw: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableBool6_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HXx: // global
           I64[Sp - 16] = block_c4HXa_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HXD; else goto c4HXb;
       u4HXD: // global
           call _c4HXa(R1) args: 0, res: 0, upd: 0;
       c4HXb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableBool6_info" {
     Foreign.Storable.$fStorableBool6_info:
         const Foreign.Storable.$fStorableBool6_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HXa() //  [R1]
         { []
         }
     {offset
       c4HXa: // global
           I64[Sp] = block_c4HXf_info;
           _s4Fsu::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fsu::I64;
           if (R1 & 7 != 0) goto u4HXC; else goto c4HXg;
       u4HXC: // global
           call _c4HXf(R1) args: 0, res: 0, upd: 0;
       c4HXg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HXa_info" {
     block_c4HXa_info:
         const _c4HXa;
         const 1;
         const 30;
 },
 _c4HXf() //  [R1]
         { []
         }
     {offset
       c4HXf: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c4HXB; else goto c4HXA;
       c4HXB: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HXA: // global
           _s4Fsz::I64 = %MO_SS_Conv_W32_W64(I32[I64[Sp + 8] + (I64[R1 + 7] << 2)]);
           I64[Hp - 16] = sat_s4FsB_info;
           I64[Hp] = _s4Fsz::I64;
           R1 = Hp - 16;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HXf_info" {
     block_c4HXf_info:
         const _c4HXf;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.18085819 UTC

[section ""data" . Foreign.Storable.$fStorableBool2_closure" {
     Foreign.Storable.$fStorableBool2_closure:
         const Foreign.Storable.$fStorableBool2_info;
 },
 sat_s4FsK_entry() //  [R1]
         { []
         }
     {offset
       c4HYh: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HYi; else goto c4HYj;
       c4HYi: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4HYj: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 16] == 0) goto c4HYg; else goto c4HYf;
       c4HYg: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c4HYf: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4FsK_info" {
     sat_s4FsK_info:
         const sat_s4FsK_entry;
         const 4294967296;
         const 17;
 },
 Foreign.Storable.$fStorableBool2_entry() //  [R2]
         { []
         }
     {offset
       c4HYk: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4HYl; else goto c4HYm;
       c4HYl: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableBool2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4HYm: // global
           I64[Sp - 8] = block_c4HY4_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4HYq; else goto c4HY5;
       u4HYq: // global
           call _c4HY4(R1) args: 0, res: 0, upd: 0;
       c4HY5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableBool2_info" {
     Foreign.Storable.$fStorableBool2_info:
         const Foreign.Storable.$fStorableBool2_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4HY4() //  [R1]
         { []
         }
     {offset
       c4HY4: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c4HYp; else goto c4HYo;
       c4HYp: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HYo: // global
           _s4FsI::I64 = %MO_SS_Conv_W32_W64(I32[I64[R1 + 7]]);
           I64[Hp - 16] = sat_s4FsK_info;
           I64[Hp] = _s4FsI::I64;
           R1 = Hp - 16;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HY4_info" {
     block_c4HY4_info:
         const _c4HY4;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.191124465 UTC

[section ""data" . Foreign.Storable.$fStorableBool4_closure" {
     Foreign.Storable.$fStorableBool4_closure:
         const Foreign.Storable.$fStorableBool4_info;
 },
 sat_s4FsX_entry() //  [R1]
         { []
         }
     {offset
       c4HZ7: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HZ8; else goto c4HZ9;
       c4HZ8: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4HZ9: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 16] == 0) goto c4HZ6; else goto c4HZ5;
       c4HZ6: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c4HZ5: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4FsX_info" {
     sat_s4FsX_info:
         const sat_s4FsX_entry;
         const 4294967296;
         const 17;
 },
 Foreign.Storable.$fStorableBool4_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HZa: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HZb; else goto c4HZc;
       c4HZb: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableBool4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HZc: // global
           I64[Sp - 16] = block_c4HYM_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4HZi; else goto c4HYN;
       u4HZi: // global
           call _c4HYM(R1) args: 0, res: 0, upd: 0;
       c4HYN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableBool4_info" {
     Foreign.Storable.$fStorableBool4_info:
         const Foreign.Storable.$fStorableBool4_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HYM() //  [R1]
         { []
         }
     {offset
       c4HYM: // global
           I64[Sp] = block_c4HYR_info;
           _s4FsP::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FsP::I64;
           if (R1 & 7 != 0) goto u4HZh; else goto c4HYS;
       u4HZh: // global
           call _c4HYR(R1) args: 0, res: 0, upd: 0;
       c4HYS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HYM_info" {
     block_c4HYM_info:
         const _c4HYM;
         const 1;
         const 30;
 },
 _c4HYR() //  [R1]
         { []
         }
     {offset
       c4HYR: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c4HZg; else goto c4HZf;
       c4HZg: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4HZf: // global
           _s4FsV::I64 = %MO_SS_Conv_W32_W64(I32[I64[Sp + 8] + I64[R1 + 7]]);
           I64[Hp - 16] = sat_s4FsX_info;
           I64[Hp] = _s4FsV::I64;
           R1 = Hp - 16;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HYR_info" {
     block_c4HYR_info:
         const _c4HYR;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.20133188 UTC

[section ""data" . Foreign.Storable.$fStorableBool1_closure" {
     Foreign.Storable.$fStorableBool1_closure:
         const Foreign.Storable.$fStorableBool1_info;
 },
 Foreign.Storable.$fStorableBool1_entry() //  [R2, R3]
         { []
         }
     {offset
       c4HZM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4HZN; else goto c4HZO;
       c4HZN: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableBool1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4HZO: // global
           I64[Sp - 16] = block_c4HZJ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4I06; else goto c4HZK;
       u4I06: // global
           call _c4HZJ(R1) args: 0, res: 0, upd: 0;
       c4HZK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableBool1_info" {
     Foreign.Storable.$fStorableBool1_info:
         const Foreign.Storable.$fStorableBool1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4HZJ() //  [R1]
         { []
         }
     {offset
       c4HZJ: // global
           I64[Sp] = block_c4HZR_info;
           _s4Ft2::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Ft2::I64;
           if (R1 & 7 != 0) goto u4I05; else goto c4HZT;
       u4I05: // global
           call _c4HZR(R1) args: 0, res: 0, upd: 0;
       c4HZT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HZJ_info" {
     block_c4HZJ_info:
         const _c4HZJ;
         const 1;
         const 30;
 },
 _c4HZR() //  [R1]
         { []
         }
     {offset
       c4HZR: // global
           _s4Ft2::I64 = I64[Sp + 8];
           if (R1 & 7 == 1) goto c4HZZ; else goto c4I03;
       c4HZZ: // global
           I32[_s4Ft2::I64] = 0 :: W32;
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c4I03: // global
           I32[_s4Ft2::I64] = 1 :: W32;
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4HZR_info" {
     block_c4HZR_info:
         const _c4HZR;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.210048602 UTC

[section ""data" . Foreign.Storable.$fStorableBool3_closure" {
     Foreign.Storable.$fStorableBool3_closure:
         const Foreign.Storable.$fStorableBool3_info;
 },
 Foreign.Storable.$fStorableBool3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4I0v: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4I0z; else goto c4I0A;
       c4I0z: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableBool3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4I0A: // global
           I64[Sp - 24] = block_c4I0s_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4I0X; else goto c4I0t;
       u4I0X: // global
           call _c4I0s(R1) args: 0, res: 0, upd: 0;
       c4I0t: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableBool3_info" {
     Foreign.Storable.$fStorableBool3_info:
         const Foreign.Storable.$fStorableBool3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4I0s() //  [R1]
         { []
         }
     {offset
       c4I0s: // global
           I64[Sp] = block_c4I0y_info;
           _s4Ftb::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Ftb::I64;
           if (R1 & 7 != 0) goto u4I0W; else goto c4I0C;
       u4I0W: // global
           call _c4I0y(R1) args: 0, res: 0, upd: 0;
       c4I0C: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4I0s_info" {
     block_c4I0s_info:
         const _c4I0s;
         const 2;
         const 30;
 },
 _c4I0y() //  [R1]
         { []
         }
     {offset
       c4I0y: // global
           I64[Sp] = block_c4I0G_info;
           _s4Ftd::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Ftd::I64;
           if (R1 & 7 != 0) goto u4I0Y; else goto c4I0I;
       u4I0Y: // global
           call _c4I0G(R1) args: 0, res: 0, upd: 0;
       c4I0I: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4I0y_info" {
     block_c4I0y_info:
         const _c4I0y;
         const 66;
         const 30;
 },
 _c4I0G() //  [R1]
         { []
         }
     {offset
       c4I0G: // global
           _s4Ftb::I64 = I64[Sp + 8];
           _s4Ftd::I64 = I64[Sp + 16];
           if (R1 & 7 == 1) goto c4I0O; else goto c4I0S;
       c4I0O: // global
           I32[_s4Ftb::I64 + _s4Ftd::I64] = 0 :: W32;
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c4I0S: // global
           I32[_s4Ftb::I64 + _s4Ftd::I64] = 1 :: W32;
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4I0G_info" {
     block_c4I0G_info:
         const _c4I0G;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.219219793 UTC

[section ""data" . Foreign.Storable.$fStorableBool_closure" {
     Foreign.Storable.$fStorableBool_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableBool_$csizeOf_closure+1;
         const Foreign.Storable.$fStorableBool_$csizeOf_closure+1;
         const Foreign.Storable.$fStorableBool6_closure+3;
         const Foreign.Storable.$fStorableBool5_closure+4;
         const Foreign.Storable.$fStorableBool4_closure+3;
         const Foreign.Storable.$fStorableBool3_closure+4;
         const Foreign.Storable.$fStorableBool2_closure+2;
         const Foreign.Storable.$fStorableBool1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.221641158 UTC

[section ""data" . Foreign.Storable.$fStorable()2_closure" {
     Foreign.Storable.$fStorable()2_closure:
         const Foreign.Storable.$fStorable()2_info;
 },
 Foreign.Storable.$fStorable()2_entry() //  []
         { []
         }
     {offset
       c4I1p: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorable()2_info" {
     Foreign.Storable.$fStorable()2_info:
         const Foreign.Storable.$fStorable()2_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.225187983 UTC

[section ""data" . Foreign.Storable.$fStorable()1_closure" {
     Foreign.Storable.$fStorable()1_closure:
         const Foreign.Storable.$fStorable()1_info;
 },
 Foreign.Storable.$fStorable()1_entry() //  []
         { []
         }
     {offset
       c4I1B: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorable()1_info" {
     Foreign.Storable.$fStorable()1_info:
         const Foreign.Storable.$fStorable()1_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.229189708 UTC

[section ""data" . lvl11_r4Ffl_closure" {
     lvl11_r4Ffl_closure:
         const GHC.Types.I#_con_info;
         const 137;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.231010743 UTC

[section ""data" . lvl12_r4Ffm_closure" {
     lvl12_r4Ffm_closure:
         const GHC.Types.I#_con_info;
         const 31;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.23266904 UTC

[section ""data" . lvl13_r4Ffn_closure" {
     lvl13_r4Ffn_closure:
         const GHC.Types.I#_con_info;
         const 40;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.23509985 UTC

[section ""data" . lvl14_r4Ffo_closure" {
     lvl14_r4Ffo_closure:
         const GHC.Stack.Types.SrcLoc_con_info;
         const lvl2_r4Ffb_closure;
         const lvl3_r4Ffc_closure;
         const lvl5_r4Ffe_closure;
         const lvl11_r4Ffl_closure+1;
         const lvl12_r4Ffm_closure+1;
         const lvl11_r4Ffl_closure+1;
         const lvl13_r4Ffn_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.236905375 UTC

[section ""data" . lvl15_r4Ffp_closure" {
     lvl15_r4Ffp_closure:
         const GHC.Stack.Types.PushCallStack_con_info;
         const lvl1_r4Ffa_closure;
         const lvl14_r4Ffo_closure+1;
         const GHC.Stack.Types.EmptyCallStack_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.239489979 UTC

[section ""data" . lvl16_r4Ffq_closure" {
     lvl16_r4Ffq_closure:
         const lvl16_r4Ffq_info;
         const 0;
         const 0;
         const 0;
 },
 lvl16_r4Ffq_entry() //  [R1]
         { []
         }
     {offset
       c4I1U: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4I1V; else goto c4I1W;
       c4I1V: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4I1W: // global
           (_c4I1R::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c4I1R::I64 == 0) goto c4I1T; else goto c4I1S;
       c4I1T: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c4I1S: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c4I1R::I64;
           R2 = lvl15_r4Ffp_closure+2;
           Sp = Sp - 16;
           call GHC.Err.undefined_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl16_r4Ffq_info" {
     lvl16_r4Ffq_info:
         const lvl16_r4Ffq_entry;
         const 0;
         const 279172874261;
         const S4FBN_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.245788677 UTC

[section ""data" . Foreign.Storable.$dmpeekElemOff_closure" {
     Foreign.Storable.$dmpeekElemOff_closure:
         const Foreign.Storable.$dmpeekElemOff_info;
         const 0;
 },
 sat_s4Ftw_entry() //  [R1]
         { []
         }
     {offset
       c4I2f: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c4I2q; else goto c4I2r;
       c4I2q: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4I2r: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c4I2c_info;
           _s4Fto::P64 = P64[R1 + 16];
           R1 = P64[R1 + 24];
           P64[Sp - 24] = _s4Fto::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4I2w; else goto c4I2d;
       u4I2w: // global
           call _c4I2c(R1) args: 0, res: 0, upd: 0;
       c4I2d: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4Ftw_info" {
     sat_s4Ftw_info:
         const sat_s4Ftw_entry;
         const 2;
         const 4294967314;
         const S4FBN_srt+56;
 },
 _c4I2c() //  [R1]
         { []
         }
     {offset
       c4I2c: // global
           I64[Sp] = block_c4I2i_info;
           R2 = P64[Sp + 8];
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = lvl16_r4Ffq_closure;
           I64[Sp + 8] = I64[R1 + 7];
           Sp = Sp - 16;
           call Foreign.Storable.sizeOf_entry(R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4I2c_info" {
     block_c4I2c_info:
         const _c4I2c;
         const 1;
         const 4294967326;
         const S4FBN_srt+56;
 },
 _c4I2i() //  [R1]
         { []
         }
     {offset
       c4I2i: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4I2v; else goto c4I2u;
       c4I2v: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4I2u: // global
           _s4Ftv::I64 = I64[Sp + 8] * I64[R1 + 7];
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s4Ftv::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4I2i_info" {
     block_c4I2i_info:
         const _c4I2i;
         const 65;
         const 30;
 },
 Foreign.Storable.$dmpeekElemOff_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4I2x: // global
           _s4Ftq::P64 = R4;
           _s4Ftp::P64 = R3;
           _s4Fto::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto c4I2y; else goto c4I2z;
       c4I2z: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c4I2B; else goto c4I2A;
       c4I2B: // global
           HpAlloc = 32;
           goto c4I2y;
       c4I2y: // global
           R4 = _s4Ftq::P64;
           R3 = _s4Ftp::P64;
           R2 = _s4Fto::P64;
           R1 = Foreign.Storable.$dmpeekElemOff_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4I2A: // global
           I64[Hp - 24] = sat_s4Ftw_info;
           P64[Hp - 8] = _s4Fto::P64;
           P64[Hp] = _s4Ftq::P64;
           R2 = _s4Fto::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s4Ftp::P64;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 24;
           call Foreign.Storable.peekByteOff_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$dmpeekElemOff_info" {
     Foreign.Storable.$dmpeekElemOff_info:
         const Foreign.Storable.$dmpeekElemOff_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S4FBN_srt+56;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.257605638 UTC

[section ""data" . Foreign.Storable.$dmpokeElemOff_closure" {
     Foreign.Storable.$dmpokeElemOff_closure:
         const Foreign.Storable.$dmpokeElemOff_info;
 },
 sat_s4FtG_entry() //  [R1]
         { []
         }
     {offset
       c4I38: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c4I3j; else goto c4I3k;
       c4I3j: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4I3k: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 40] = block_c4I35_info;
           _s4Ftx::P64 = P64[R1 + 16];
           _s4FtA::P64 = P64[R1 + 32];
           R1 = P64[R1 + 24];
           P64[Sp - 32] = _s4Ftx::P64;
           P64[Sp - 24] = _s4FtA::P64;
           Sp = Sp - 40;
           if (R1 & 7 != 0) goto u4I3p; else goto c4I36;
       u4I3p: // global
           call _c4I35(R1) args: 0, res: 0, upd: 0;
       c4I36: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4FtG_info" {
     sat_s4FtG_info:
         const sat_s4FtG_entry;
         const 3;
         const 15;
 },
 _c4I35() //  [R1]
         { []
         }
     {offset
       c4I35: // global
           _s4Ftx::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c4I3b_info;
           R2 = _s4Ftx::P64;
           I64[Sp - 8] = stg_ap_p_info;
           P64[Sp] = P64[Sp + 16];
           I64[Sp + 16] = I64[R1 + 7];
           Sp = Sp - 8;
           call Foreign.Storable.sizeOf_entry(R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4I35_info" {
     block_c4I35_info:
         const _c4I35;
         const 2;
         const 30;
 },
 _c4I3b() //  [R1]
         { []
         }
     {offset
       c4I3b: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4I3o; else goto c4I3n;
       c4I3o: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4I3n: // global
           _s4FtF::I64 = I64[Sp + 8] * I64[R1 + 7];
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s4FtF::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4I3b_info" {
     block_c4I3b_info:
         const _c4I3b;
         const 65;
         const 30;
 },
 Foreign.Storable.$dmpokeElemOff_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c4I3q: // global
           _s4FtA::P64 = R5;
           _s4Ftz::P64 = R4;
           _s4Fty::P64 = R3;
           _s4Ftx::P64 = R2;
           if ((Sp + -32) < SpLim) (likely: False) goto c4I3r; else goto c4I3s;
       c4I3s: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c4I3u; else goto c4I3t;
       c4I3u: // global
           HpAlloc = 40;
           goto c4I3r;
       c4I3r: // global
           R5 = _s4FtA::P64;
           R4 = _s4Ftz::P64;
           R3 = _s4Fty::P64;
           R2 = _s4Ftx::P64;
           R1 = Foreign.Storable.$dmpokeElemOff_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4I3t: // global
           I64[Hp - 32] = sat_s4FtG_info;
           P64[Hp - 16] = _s4Ftx::P64;
           P64[Hp - 8] = _s4Ftz::P64;
           P64[Hp] = _s4FtA::P64;
           R2 = _s4Ftx::P64;
           I64[Sp - 32] = stg_ap_ppp_info;
           P64[Sp - 24] = _s4Fty::P64;
           P64[Sp - 16] = Hp - 32;
           P64[Sp - 8] = _s4FtA::P64;
           Sp = Sp - 32;
           call Foreign.Storable.pokeByteOff_entry(R2) args: 40, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$dmpokeElemOff_info" {
     Foreign.Storable.$dmpokeElemOff_info:
         const Foreign.Storable.$dmpokeElemOff_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.268578045 UTC

[section ""data" . Foreign.Storable.$fStorable()4_closure" {
     Foreign.Storable.$fStorable()4_closure:
         const Foreign.Storable.$fStorable()4_info;
 },
 Foreign.Storable.$fStorable()4_entry() //  []
         { []
         }
     {offset
       c4I3V: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorable()4_info" {
     Foreign.Storable.$fStorable()4_info:
         const Foreign.Storable.$fStorable()4_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.272393579 UTC

[section ""data" . Foreign.Storable.$fStorable()6_closure" {
     Foreign.Storable.$fStorable()6_closure:
         const Foreign.Storable.$fStorable()6_info;
 },
 Foreign.Storable.$fStorable()6_entry() //  []
         { []
         }
     {offset
       c4I47: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorable()6_info" {
     Foreign.Storable.$fStorable()6_info:
         const Foreign.Storable.$fStorable()6_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.276046168 UTC

[section ""data" . Foreign.Storable.$fStorable()3_closure" {
     Foreign.Storable.$fStorable()3_closure:
         const Foreign.Storable.$fStorable()3_info;
 },
 Foreign.Storable.$fStorable()3_entry() //  []
         { []
         }
     {offset
       c4I4j: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorable()3_info" {
     Foreign.Storable.$fStorable()3_info:
         const Foreign.Storable.$fStorable()3_entry;
         const 0;
         const 14;
         const 17179869207;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.279625191 UTC

[section ""data" . Foreign.Storable.$fStorable()5_closure" {
     Foreign.Storable.$fStorable()5_closure:
         const Foreign.Storable.$fStorable()5_info;
 },
 Foreign.Storable.$fStorable()5_entry() //  []
         { []
         }
     {offset
       c4I4v: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorable()5_info" {
     Foreign.Storable.$fStorable()5_info:
         const Foreign.Storable.$fStorable()5_entry;
         const 0;
         const 14;
         const 17179869207;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.283329186 UTC

[section ""data" . Foreign.Storable.$fStorable()_closure" {
     Foreign.Storable.$fStorable()_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorable()_$csizeOf_closure+1;
         const Foreign.Storable.$fStorable()_$calignment_closure+1;
         const Foreign.Storable.$fStorable()6_closure+3;
         const Foreign.Storable.$fStorable()5_closure+4;
         const Foreign.Storable.$fStorable()4_closure+3;
         const Foreign.Storable.$fStorable()3_closure+4;
         const Foreign.Storable.$fStorable()2_closure+2;
         const Foreign.Storable.$fStorable()1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.285165328 UTC

[section ""data" . lvl17_r4Ffr_closure" {
     lvl17_r4Ffr_closure:
         const GHC.Types.I#_con_info;
         const 237;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.287071287 UTC

[section ""data" . lvl18_r4Ffs_closure" {
     lvl18_r4Ffs_closure:
         const GHC.Stack.Types.SrcLoc_con_info;
         const lvl2_r4Ffb_closure;
         const lvl3_r4Ffc_closure;
         const lvl5_r4Ffe_closure;
         const lvl17_r4Ffr_closure+1;
         const lvl12_r4Ffm_closure+1;
         const lvl17_r4Ffr_closure+1;
         const lvl13_r4Ffn_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.288916919 UTC

[section ""data" . lvl19_r4Fft_closure" {
     lvl19_r4Fft_closure:
         const GHC.Stack.Types.PushCallStack_con_info;
         const lvl1_r4Ffa_closure;
         const lvl18_r4Ffs_closure+1;
         const GHC.Stack.Types.EmptyCallStack_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.291531699 UTC

[section ""data" . Foreign.Storable.$fStorableRatio6_closure" {
     Foreign.Storable.$fStorableRatio6_closure:
         const Foreign.Storable.$fStorableRatio6_info;
         const 0;
         const 0;
         const 0;
 },
 Foreign.Storable.$fStorableRatio6_entry() //  [R1]
         { []
         }
     {offset
       c4I4N: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4I4O; else goto c4I4P;
       c4I4O: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4I4P: // global
           (_c4I4K::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c4I4K::I64 == 0) goto c4I4M; else goto c4I4L;
       c4I4M: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c4I4L: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c4I4K::I64;
           R2 = lvl19_r4Fft_closure+2;
           Sp = Sp - 16;
           call GHC.Err.undefined_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio6_info" {
     Foreign.Storable.$fStorableRatio6_info:
         const Foreign.Storable.$fStorableRatio6_entry;
         const 0;
         const 2203318222869;
         const S4FBN_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.297372261 UTC

[section ""data" . Foreign.Storable.$fStorableRatio_$csizeOf_closure" {
     Foreign.Storable.$fStorableRatio_$csizeOf_closure:
         const Foreign.Storable.$fStorableRatio_$csizeOf_info;
         const 0;
 },
 lvl20_s4FtX_entry() //  [R1]
         { []
         }
     {offset
       c4I55: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4I56; else goto c4I57;
       c4I56: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4I57: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.Storable.$fStorableRatio6_closure;
           Sp = Sp - 32;
           call Foreign.Storable.sizeOf_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl20_s4FtX_info" {
     lvl20_s4FtX_info:
         const lvl20_s4FtX_entry;
         const 1;
         const 4294967312;
         const S4FBN_srt+80;
 },
 sat_s4Fu2_entry() //  [R1, R2]
         { []
         }
     {offset
       c4I5g: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4I5n; else goto c4I5o;
       c4I5n: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4I5o: // global
           I64[Sp - 8] = block_c4I5d_info;
           R1 = P64[R1 + 7];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4I5s; else goto c4I5e;
       u4I5s: // global
           call _c4I5d(R1) args: 0, res: 0, upd: 0;
       c4I5e: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s4Fu2_info" {
     sat_s4Fu2_info:
         const sat_s4Fu2_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c4I5d() //  [R1]
         { []
         }
     {offset
       c4I5d: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4I5r; else goto c4I5q;
       c4I5r: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4I5q: // global
           _s4Fu1::I64 = I64[R1 + 7] << 1;
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s4Fu1::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4I5d_info" {
     block_c4I5d_info:
         const _c4I5d;
         const 0;
         const 30;
 },
 Foreign.Storable.$fStorableRatio_$csizeOf_entry() //  [R2, R3]
         { []
         }
     {offset
       c4I5t: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c4I5x; else goto c4I5w;
       c4I5x: // global
           HpAlloc = 40;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableRatio_$csizeOf_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4I5w: // global
           I64[Hp - 32] = lvl20_s4FtX_info;
           P64[Hp - 16] = R2;
           I64[Hp - 8] = sat_s4Fu2_info;
           P64[Hp] = Hp - 32;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio_$csizeOf_info" {
     Foreign.Storable.$fStorableRatio_$csizeOf_info:
         const Foreign.Storable.$fStorableRatio_$csizeOf_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S4FBN_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.309489267 UTC

[section ""data" . Foreign.Storable.$fStorableRatio4_closure" {
     Foreign.Storable.$fStorableRatio4_closure:
         const Foreign.Storable.$fStorableRatio4_info;
         const 0;
 },
 sat_s4Fud_entry() //  [R1]
         { []
         }
     {offset
       c4I62: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4I6e; else goto c4I6f;
       c4I6e: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4I6f: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c4I5Z_info;
           _s4Fu6::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s4Fu6::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4I6l; else goto c4I60;
       u4I6l: // global
           call _c4I5Z(R1) args: 0, res: 0, upd: 0;
       c4I60: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4Fud_info" {
     sat_s4Fud_info:
         const sat_s4Fud_entry;
         const 2;
         const 18;
 },
 _c4I5Z() //  [R1]
         { []
         }
     {offset
       c4I5Z: // global
           I64[Sp] = block_c4I65_info;
           _s4Fu9::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fu9::I64;
           if (R1 & 7 != 0) goto u4I6k; else goto c4I66;
       u4I6k: // global
           call _c4I65(R1) args: 0, res: 0, upd: 0;
       c4I66: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4I5Z_info" {
     block_c4I5Z_info:
         const _c4I5Z;
         const 1;
         const 30;
 },
 _c4I65() //  [R1]
         { []
         }
     {offset
       c4I65: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4I6j; else goto c4I6i;
       c4I6j: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4I6i: // global
           _s4Fuc::I64 = I64[Sp + 8] + I64[R1 + 7];
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4Fuc::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4I65_info" {
     block_c4I65_info:
         const _c4I65;
         const 65;
         const 30;
 },
 Foreign.Storable.$fStorableRatio4_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c4I6m: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c4I6q; else goto c4I6p;
       c4I6q: // global
           HpAlloc = 32;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableRatio4_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4I6p: // global
           I64[Hp - 24] = sat_s4Fud_info;
           P64[Hp - 8] = R4;
           P64[Hp] = R5;
           R4 = Hp - 24;
           R3 = R3;
           R2 = R2;
           call Foreign.Storable.$fStorableRatio2_entry(R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio4_info" {
     Foreign.Storable.$fStorableRatio4_info:
         const Foreign.Storable.$fStorableRatio4_entry;
         const 0;
         const 554050781198;
         const 21474836504;
         const S4FBN_srt+40;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.320701708 UTC

[section ""data" . Foreign.Storable.$fStorableRatio7_closure" {
     Foreign.Storable.$fStorableRatio7_closure:
         const Foreign.Storable.$fStorableRatio7_info;
         const 0;
 },
 sat_s4Fus_entry() //  [R1]
         { []
         }
     {offset
       c4I6V: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c4I7h; else goto c4I7i;
       c4I7h: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4I7i: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 40] = block_c4I6S_info;
           _s4Fue::P64 = P64[R1 + 16];
           _s4Fuh::P64 = P64[R1 + 32];
           R1 = P64[R1 + 24];
           P64[Sp - 32] = _s4Fue::P64;
           P64[Sp - 24] = _s4Fuh::P64;
           Sp = Sp - 40;
           if (R1 & 7 != 0) goto u4I7p; else goto c4I6T;
       u4I7p: // global
           call _c4I6S(R1) args: 0, res: 0, upd: 0;
       c4I6T: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4Fus_info" {
     sat_s4Fus_info:
         const sat_s4Fus_entry;
         const 3;
         const 4294967311;
         const S4FBN_srt+80;
 },
 _c4I6S() //  [R1]
         { []
         }
     {offset
       c4I6S: // global
           I64[Sp] = block_c4I6Y_info;
           _s4Fuk::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Fuk::I64;
           if (R1 & 7 != 0) goto u4I7o; else goto c4I6Z;
       u4I7o: // global
           call _c4I6Y(R1) args: 0, res: 0, upd: 0;
       c4I6Z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4I6S_info" {
     block_c4I6S_info:
         const _c4I6S;
         const 2;
         const 4294967326;
         const S4FBN_srt+80;
 },
 _c4I6Y() //  [R1]
         { []
         }
     {offset
       c4I6Y: // global
           I64[Sp] = block_c4I73_info;
           R2 = P64[Sp + 8];
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Foreign.Storable.$fStorableRatio6_closure;
           I64[Sp + 8] = I64[R1 + 7];
           Sp = Sp - 16;
           call Foreign.Storable.sizeOf_entry(R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4I6Y_info" {
     block_c4I6Y_info:
         const _c4I6Y;
         const 130;
         const 4294967326;
         const S4FBN_srt+80;
 },
 _c4I73() //  [R1]
         { []
         }
     {offset
       c4I73: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4I7n; else goto c4I7m;
       c4I7n: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4I7m: // global
           _s4Fur::I64 = I64[Sp + 16] + I64[Sp + 8] * (I64[R1 + 7] << 1);
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4Fur::I64;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4I73_info" {
     block_c4I73_info:
         const _c4I73;
         const 194;
         const 30;
 },
 Foreign.Storable.$fStorableRatio7_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c4I7q: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c4I7u; else goto c4I7t;
       c4I7u: // global
           HpAlloc = 40;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableRatio7_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4I7t: // global
           I64[Hp - 32] = sat_s4Fus_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R4;
           P64[Hp] = R5;
           R4 = Hp - 32;
           R3 = R3;
           R2 = R2;
           call Foreign.Storable.$fStorableRatio2_entry(R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio7_info" {
     Foreign.Storable.$fStorableRatio7_info:
         const Foreign.Storable.$fStorableRatio7_entry;
         const 0;
         const 1241245548558;
         const 21474836504;
         const S4FBN_srt+40;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.335104949 UTC

[section ""data" . Foreign.Storable.$w$cpokeByteOff_closure" {
     Foreign.Storable.$w$cpokeByteOff_closure:
         const Foreign.Storable.$w$cpokeByteOff_info;
 },
 p_s4Fuz_entry() //  [R1]
         { []
         }
     {offset
       c4I85: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4I8h; else goto c4I8i;
       c4I8h: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4I8i: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c4I82_info;
           _s4Fuv::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s4Fuv::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4I8o; else goto c4I83;
       u4I8o: // global
           call _c4I82(R1) args: 0, res: 0, upd: 0;
       c4I83: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . p_s4Fuz_info" {
     p_s4Fuz_info:
         const p_s4Fuz_entry;
         const 2;
         const 18;
 },
 _c4I82() //  [R1]
         { []
         }
     {offset
       c4I82: // global
           I64[Sp] = block_c4I88_info;
           _s4FuB::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FuB::I64;
           if (R1 & 7 != 0) goto u4I8n; else goto c4I89;
       u4I8n: // global
           call _c4I88(R1) args: 0, res: 0, upd: 0;
       c4I89: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4I82_info" {
     block_c4I82_info:
         const _c4I82;
         const 1;
         const 30;
 },
 _c4I88() //  [R1]
         { []
         }
     {offset
       c4I88: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4I8m; else goto c4I8l;
       c4I8m: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4I8l: // global
           _s4FuE::I64 = I64[Sp + 8] + I64[R1 + 7];
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4FuE::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4I88_info" {
     block_c4I88_info:
         const _c4I88;
         const 65;
         const 30;
 },
 Foreign.Storable.$w$cpokeByteOff_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c4I8r: // global
           _s4Fux::P64 = R6;
           _s4Fuw::P64 = R5;
           _s4Fuv::P64 = R4;
           _s4Fuu::P64 = R3;
           _s4Fut::P64 = R2;
           if ((Sp + -56) < SpLim) (likely: False) goto c4I8s; else goto c4I8t;
       c4I8t: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c4I8v; else goto c4I8u;
       c4I8v: // global
           HpAlloc = 32;
           goto c4I8s;
       c4I8s: // global
           R6 = _s4Fux::P64;
           R5 = _s4Fuw::P64;
           R4 = _s4Fuv::P64;
           R3 = _s4Fuu::P64;
           R2 = _s4Fut::P64;
           R1 = Foreign.Storable.$w$cpokeByteOff_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4I8u: // global
           I64[Hp - 24] = p_s4Fuz_info;
           P64[Hp - 8] = _s4Fuu::P64;
           P64[Hp] = _s4Fuv::P64;
           I64[Sp - 32] = block_c4I8p_info;
           R2 = _s4Fut::P64;
           I64[Sp - 56] = stg_ap_ppv_info;
           _c4I7Y::P64 = Hp - 24;
           P64[Sp - 48] = _c4I7Y::P64;
           P64[Sp - 40] = _s4Fuw::P64;
           P64[Sp - 24] = _c4I7Y::P64;
           P64[Sp - 16] = _s4Fut::P64;
           P64[Sp - 8] = _s4Fux::P64;
           Sp = Sp - 56;
           call Foreign.Storable.poke_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$w$cpokeByteOff_info" {
     Foreign.Storable.$w$cpokeByteOff_info:
         const Foreign.Storable.$w$cpokeByteOff_entry;
         const 0;
         const 14;
         const 25769803801;
 },
 _c4I8p() //  []
         { []
         }
     {offset
       c4I8p: // global
           R2 = P64[Sp + 16];
           I64[Sp] = stg_ap_pppv_info;
           P64[Sp + 16] = Foreign.Storable.$fStorable()7_closure+1;
           call Foreign.Storable.pokeElemOff_entry(R2) args: 40, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4I8p_info" {
     block_c4I8p_info:
         const _c4I8p;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.348490512 UTC

[section ""data" . Foreign.Storable.$fStorableRatio3_closure" {
     Foreign.Storable.$fStorableRatio3_closure:
         const Foreign.Storable.$fStorableRatio3_info;
 },
 Foreign.Storable.$fStorableRatio3_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c4I91: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4I92; else goto c4I93;
       c4I92: // global
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableRatio3_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4I93: // global
           I64[Sp - 32] = block_c4I8Y_info;
           R1 = R6;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4I97; else goto c4I8Z;
       u4I97: // global
           call _c4I8Y(R1) args: 0, res: 0, upd: 0;
       c4I8Z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio3_info" {
     Foreign.Storable.$fStorableRatio3_info:
         const Foreign.Storable.$fStorableRatio3_entry;
         const 0;
         const 14;
         const 25769803801;
 },
 _c4I8Y() //  [R1]
         { []
         }
     {offset
       c4I8Y: // global
           R6 = P64[R1 + 15];
           R5 = P64[R1 + 7];
           R4 = P64[Sp + 24];
           R3 = P64[Sp + 16];
           R2 = P64[Sp + 8];
           Sp = Sp + 32;
           call Foreign.Storable.$w$cpokeByteOff_entry(R6,
                                                       R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4I8Y_info" {
     block_c4I8Y_info:
         const _c4I8Y;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.356673718 UTC

[section ""data" . Foreign.Storable.$w$cpokeElemOff_closure" {
     Foreign.Storable.$w$cpokeElemOff_closure:
         const Foreign.Storable.$w$cpokeElemOff_info;
         const 0;
 },
 p_s4FuX_entry() //  [R1]
         { []
         }
     {offset
       c4I9s: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c4I9O; else goto c4I9P;
       c4I9O: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4I9P: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 40] = block_c4I9p_info;
           _s4FuR::P64 = P64[R1 + 16];
           _s4FuT::P64 = P64[R1 + 32];
           R1 = P64[R1 + 24];
           P64[Sp - 32] = _s4FuR::P64;
           P64[Sp - 24] = _s4FuT::P64;
           Sp = Sp - 40;
           if (R1 & 7 != 0) goto u4I9W; else goto c4I9q;
       u4I9W: // global
           call _c4I9p(R1) args: 0, res: 0, upd: 0;
       c4I9q: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . p_s4FuX_info" {
     p_s4FuX_info:
         const p_s4FuX_entry;
         const 3;
         const 4294967311;
         const S4FBN_srt+80;
 },
 _c4I9p() //  [R1]
         { []
         }
     {offset
       c4I9p: // global
           I64[Sp] = block_c4I9v_info;
           _s4FuZ::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4FuZ::I64;
           if (R1 & 7 != 0) goto u4I9V; else goto c4I9w;
       u4I9V: // global
           call _c4I9v(R1) args: 0, res: 0, upd: 0;
       c4I9w: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4I9p_info" {
     block_c4I9p_info:
         const _c4I9p;
         const 2;
         const 4294967326;
         const S4FBN_srt+80;
 },
 _c4I9v() //  [R1]
         { []
         }
     {offset
       c4I9v: // global
           I64[Sp] = block_c4I9A_info;
           R2 = P64[Sp + 8];
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Foreign.Storable.$fStorableRatio6_closure;
           I64[Sp + 8] = I64[R1 + 7];
           Sp = Sp - 16;
           call Foreign.Storable.sizeOf_entry(R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4I9v_info" {
     block_c4I9v_info:
         const _c4I9v;
         const 130;
         const 4294967326;
         const S4FBN_srt+80;
 },
 _c4I9A() //  [R1]
         { []
         }
     {offset
       c4I9A: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4I9U; else goto c4I9T;
       c4I9U: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4I9T: // global
           _s4Fv6::I64 = I64[Sp + 16] + I64[Sp + 8] * (I64[R1 + 7] << 1);
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4Fv6::I64;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4I9A_info" {
     block_c4I9A_info:
         const _c4I9A;
         const 194;
         const 30;
 },
 Foreign.Storable.$w$cpokeElemOff_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c4I9Z: // global
           _s4FuV::P64 = R6;
           _s4FuU::P64 = R5;
           _s4FuT::P64 = R4;
           _s4FuS::P64 = R3;
           _s4FuR::P64 = R2;
           if ((Sp + -56) < SpLim) (likely: False) goto c4Ia0; else goto c4Ia1;
       c4Ia1: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c4Ia3; else goto c4Ia2;
       c4Ia3: // global
           HpAlloc = 40;
           goto c4Ia0;
       c4Ia0: // global
           R6 = _s4FuV::P64;
           R5 = _s4FuU::P64;
           R4 = _s4FuT::P64;
           R3 = _s4FuS::P64;
           R2 = _s4FuR::P64;
           R1 = Foreign.Storable.$w$cpokeElemOff_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Ia2: // global
           I64[Hp - 32] = p_s4FuX_info;
           P64[Hp - 16] = _s4FuR::P64;
           P64[Hp - 8] = _s4FuS::P64;
           P64[Hp] = _s4FuT::P64;
           I64[Sp - 32] = block_c4I9X_info;
           R2 = _s4FuR::P64;
           I64[Sp - 56] = stg_ap_ppv_info;
           _c4I9l::P64 = Hp - 32;
           P64[Sp - 48] = _c4I9l::P64;
           P64[Sp - 40] = _s4FuU::P64;
           P64[Sp - 24] = _c4I9l::P64;
           P64[Sp - 16] = _s4FuR::P64;
           P64[Sp - 8] = _s4FuV::P64;
           Sp = Sp - 56;
           call Foreign.Storable.poke_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$w$cpokeElemOff_info" {
     Foreign.Storable.$w$cpokeElemOff_info:
         const Foreign.Storable.$w$cpokeElemOff_entry;
         const 0;
         const 73014444046;
         const 25769803801;
         const S4FBN_srt+80;
 },
 _c4I9X() //  []
         { []
         }
     {offset
       c4I9X: // global
           R2 = P64[Sp + 16];
           I64[Sp] = stg_ap_pppv_info;
           P64[Sp + 16] = Foreign.Storable.$fStorable()7_closure+1;
           call Foreign.Storable.pokeElemOff_entry(R2) args: 40, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4I9X_info" {
     block_c4I9X_info:
         const _c4I9X;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.370197649 UTC

[section ""data" . Foreign.Storable.$fStorableRatio5_closure" {
     Foreign.Storable.$fStorableRatio5_closure:
         const Foreign.Storable.$fStorableRatio5_info;
         const 0;
 },
 Foreign.Storable.$fStorableRatio5_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c4IaF: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4IaG; else goto c4IaH;
       c4IaG: // global
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableRatio5_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4IaH: // global
           I64[Sp - 32] = block_c4IaC_info;
           R1 = R6;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4IaL; else goto c4IaD;
       u4IaL: // global
           call _c4IaC(R1) args: 0, res: 0, upd: 0;
       c4IaD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio5_info" {
     Foreign.Storable.$fStorableRatio5_info:
         const Foreign.Storable.$fStorableRatio5_entry;
         const 0;
         const 12884901902;
         const 25769803801;
         const S4FBN_srt+112;
 },
 _c4IaC() //  [R1]
         { []
         }
     {offset
       c4IaC: // global
           R6 = P64[R1 + 15];
           R5 = P64[R1 + 7];
           R4 = P64[Sp + 24];
           R3 = P64[Sp + 16];
           R2 = P64[Sp + 8];
           Sp = Sp + 32;
           call Foreign.Storable.$w$cpokeElemOff_entry(R6,
                                                       R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IaC_info" {
     block_c4IaC_info:
         const _c4IaC;
         const 3;
         const 4294967326;
         const S4FBN_srt+112;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.379502955 UTC

[section ""data" . Foreign.Storable.$fStorableRatio_closure" {
     Foreign.Storable.$fStorableRatio_closure:
         const Foreign.Storable.$fStorableRatio_info;
         const 0;
 },
 sat_s4Fvs_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c4Ib4: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 13];
           R2 = P64[R1 + 5];
           call Foreign.Storable.$fStorableRatio1_entry(R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s4Fvs_info" {
     sat_s4Fvs_info:
         const sat_s4Fvs_entry;
         const 2;
         const 11;
         const 12884901903;
 },
 sat_s4Fvr_entry() //  [R1, R2]
         { []
         }
     {offset
       c4Ibc: // global
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Foreign.Storable.$fStorableRatio2_entry(R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s4Fvr_info" {
     sat_s4Fvr_info:
         const sat_s4Fvr_entry;
         const 2;
         const 4294967307;
         const 8589934597;
         const S4FBN_srt+40;
 },
 sat_s4Fvq_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c4Ibk: // global
           R6 = R4;
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 12];
           R2 = P64[R1 + 4];
           call Foreign.Storable.$fStorableRatio3_entry(R6,
                                                        R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s4Fvq_info" {
     sat_s4Fvq_info:
         const sat_s4Fvq_entry;
         const 2;
         const 11;
         const 17179869207;
 },
 sat_s4Fvp_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c4Ibs: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 13];
           R2 = P64[R1 + 5];
           call Foreign.Storable.$fStorableRatio4_entry(R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s4Fvp_info" {
     sat_s4Fvp_info:
         const sat_s4Fvp_entry;
         const 2;
         const 4294967307;
         const 12884901903;
         const S4FBN_srt+96;
 },
 sat_s4Fvo_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c4IbA: // global
           R6 = R4;
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 12];
           R2 = P64[R1 + 4];
           call Foreign.Storable.$fStorableRatio5_entry(R6,
                                                        R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s4Fvo_info" {
     sat_s4Fvo_info:
         const sat_s4Fvo_entry;
         const 2;
         const 4294967307;
         const 17179869207;
         const S4FBN_srt+120;
 },
 sat_s4Fvn_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c4IbI: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 13];
           R2 = P64[R1 + 5];
           call Foreign.Storable.$fStorableRatio7_entry(R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s4Fvn_info" {
     sat_s4Fvn_info:
         const sat_s4Fvn_entry;
         const 2;
         const 4294967307;
         const 12884901903;
         const S4FBN_srt+104;
 },
 sat_s4Fvm_entry() //  [R1]
         { []
         }
     {offset
       c4IbP: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4IbQ; else goto c4IbR;
       c4IbQ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4IbR: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Foreign.Storable.$fStorableRatio_$calignment_entry(R3,
                                                                   R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4Fvm_info" {
     sat_s4Fvm_info:
         const sat_s4Fvm_entry;
         const 2;
         const 4294967314;
         const S4FBN_srt+24;
 },
 sat_s4Fvl_entry() //  [R1]
         { []
         }
     {offset
       c4IbW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4IbX; else goto c4IbY;
       c4IbX: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4IbY: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Foreign.Storable.$fStorableRatio_$csizeOf_entry(R3,
                                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4Fvl_info" {
     sat_s4Fvl_info:
         const sat_s4Fvl_entry;
         const 2;
         const 4294967314;
         const S4FBN_srt+88;
 },
 Foreign.Storable.$fStorableRatio_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Ic0: // global
           Hp = Hp + 280;
           if (Hp > HpLim) (likely: False) goto c4Ic4; else goto c4Ic3;
       c4Ic4: // global
           HpAlloc = 280;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableRatio_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Ic3: // global
           I64[Hp - 272] = sat_s4Fvs_info;
           P64[Hp - 264] = R2;
           P64[Hp - 256] = R3;
           I64[Hp - 248] = sat_s4Fvr_info;
           P64[Hp - 240] = R2;
           P64[Hp - 232] = R3;
           I64[Hp - 224] = sat_s4Fvq_info;
           P64[Hp - 216] = R2;
           P64[Hp - 208] = R3;
           I64[Hp - 200] = sat_s4Fvp_info;
           P64[Hp - 192] = R2;
           P64[Hp - 184] = R3;
           I64[Hp - 176] = sat_s4Fvo_info;
           P64[Hp - 168] = R2;
           P64[Hp - 160] = R3;
           I64[Hp - 152] = sat_s4Fvn_info;
           P64[Hp - 144] = R2;
           P64[Hp - 136] = R3;
           I64[Hp - 128] = sat_s4Fvm_info;
           P64[Hp - 112] = R2;
           P64[Hp - 104] = R3;
           I64[Hp - 96] = sat_s4Fvl_info;
           P64[Hp - 80] = R2;
           P64[Hp - 72] = R3;
           I64[Hp - 64] = Foreign.Storable.C:Storable_con_info;
           P64[Hp - 56] = Hp - 96;
           P64[Hp - 48] = Hp - 128;
           P64[Hp - 40] = Hp - 149;
           P64[Hp - 32] = Hp - 172;
           P64[Hp - 24] = Hp - 197;
           P64[Hp - 16] = Hp - 220;
           P64[Hp - 8] = Hp - 246;
           P64[Hp] = Hp - 269;
           R1 = Hp - 63;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio_info" {
     Foreign.Storable.$fStorableRatio_info:
         const Foreign.Storable.$fStorableRatio_entry;
         const 0;
         const 60494614364174;
         const 8589934607;
         const S4FBN_srt+24;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.399703229 UTC

[section ""data" . Foreign.Storable.$wpokeW64_closure" {
     Foreign.Storable.$wpokeW64_closure:
         const Foreign.Storable.$wpokeW64_info;
 },
 Foreign.Storable.$wpokeW64_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4Idb: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4Idc; else goto u4Idj;
       c4Idc: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$wpokeW64_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u4Idj: // global
           P64[Sp - 24] = R2;
           I64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c4IcJ() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Foreign.Storable.$wpokeW64_info" {
     Foreign.Storable.$wpokeW64_info:
         const Foreign.Storable.$wpokeW64_entry;
         const 0;
         const 14;
         const 17179869205;
 },
 _c4IcJ() //  []
         { []
         }
     {offset
       c4IcJ: // global
           _s4Fvx::I64 = I64[Sp + 8];
           if (_s4Fvx::I64 != 0) goto c4Id9; else goto c4Ida;
       c4Id9: // global
           I64[Sp - 8] = block_c4IcO_info;
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Fvx::I64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4Idl; else goto c4IcP;
       u4Idl: // global
           call _c4IcO(R1) args: 0, res: 0, upd: 0;
       c4IcP: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c4Ida: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c4IcO() //  [R1]
         { []
         }
     {offset
       c4IcO: // global
           _s4Fvt::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c4IcT_info;
           _s4Fvz::I64 = I64[R1 + 7];
           R1 = _s4Fvt::P64;
           I64[Sp + 16] = _s4Fvz::I64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u4Idm; else goto c4IcU;
       u4Idm: // global
           call _c4IcT(R1) args: 0, res: 0, upd: 0;
       c4IcU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IcO_info" {
     block_c4IcO_info:
         const _c4IcO;
         const 387;
         const 30;
 },
 _c4IcT() //  [R1]
         { []
         }
     {offset
       c4IcT: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Idh; else goto c4Idg;
       c4Idh: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Idg: // global
           _s4Fvx::I64 = I64[Sp + 16];
           _s4Fvz::I64 = I64[Sp + 8];
           I8[I64[R1 + 7] + (_s4Fvx::I64 + -1)] = %MO_UU_Conv_W64_W8(_s4Fvz::I64);
           I64[Hp - 8] = GHC.Word.W64#_con_info;
           I64[Hp] = _s4Fvz::I64 >> 8;
           P64[Sp] = R1;
           I64[Sp + 8] = _s4Fvx::I64 - 1;
           P64[Sp + 16] = Hp - 7;
           call _c4IcJ() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c4IcT_info" {
     block_c4IcT_info:
         const _c4IcT;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.410684463 UTC

[section ""data" . Foreign.Storable.$w$cpoke_closure" {
     Foreign.Storable.$w$cpoke_closure:
         const Foreign.Storable.$w$cpoke_info;
 },
 sat_s4FvT_entry() //  [R1]
         { []
         }
     {offset
       c4Ie0: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4Ie7; else goto c4Ie8;
       c4Ie7: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4Ie8: // global
           I64[Sp - 8] = block_c4IdX_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4Iec; else goto c4IdY;
       u4Iec: // global
           call _c4IdX(R1) args: 0, res: 0, upd: 0;
       c4IdY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s4FvT_info" {
     sat_s4FvT_info:
         const sat_s4FvT_entry;
         const 1;
         const 16;
 },
 _c4IdX() //  [R1]
         { []
         }
     {offset
       c4IdX: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Ieb; else goto c4Iea;
       c4Ieb: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Iea: // global
           _s4FvS::I64 = I64[R1 + 7] + 8;
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4FvS::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IdX_info" {
     block_c4IdX_info:
         const _c4IdX;
         const 0;
         const 30;
 },
 Foreign.Storable.$w$cpoke_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4Ied: // global
           _s4FvK::I64 = R4;
           _s4FvJ::I64 = R3;
           _s4FvI::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto c4Iee; else goto c4Ief;
       c4Ief: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Ieh; else goto c4Ieg;
       c4Ieh: // global
           HpAlloc = 16;
           goto c4Iee;
       c4Iee: // global
           R4 = _s4FvK::I64;
           R3 = _s4FvJ::I64;
           R2 = _s4FvI::P64;
           R1 = Foreign.Storable.$w$cpoke_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Ieg: // global
           I64[Hp - 8] = GHC.Word.W64#_con_info;
           I64[Hp] = _s4FvJ::I64;
           I64[Sp - 24] = block_c4IdQ_info;
           R4 = Hp - 7;
           R3 = 8;
           R2 = _s4FvI::P64;
           P64[Sp - 16] = _s4FvI::P64;
           I64[Sp - 8] = _s4FvK::I64;
           Sp = Sp - 24;
           call Foreign.Storable.$wpokeW64_entry(R4,
                                                 R3,
                                                 R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$w$cpoke_info" {
     Foreign.Storable.$w$cpoke_info:
         const Foreign.Storable.$w$cpoke_entry;
         const 0;
         const 14;
         const 17179869204;
 },
 _c4IdQ() //  [R1]
         { []
         }
     {offset
       c4IdQ: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c4Iek; else goto c4Iej;
       c4Iek: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Iej: // global
           I64[Hp - 32] = GHC.Word.W64#_con_info;
           I64[Hp - 24] = I64[Sp + 16];
           I64[Hp - 16] = sat_s4FvT_info;
           P64[Hp] = P64[Sp + 8];
           R4 = Hp - 31;
           R3 = 8;
           R2 = Hp - 16;
           Sp = Sp + 24;
           call Foreign.Storable.$wpokeW64_entry(R4,
                                                 R3,
                                                 R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IdQ_info" {
     block_c4IdQ_info:
         const _c4IdQ;
         const 130;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.422463253 UTC

[section ""data" . Foreign.Storable.$fStorableFingerprint1_closure" {
     Foreign.Storable.$fStorableFingerprint1_closure:
         const Foreign.Storable.$fStorableFingerprint1_info;
 },
 Foreign.Storable.$fStorableFingerprint1_entry() //  [R2, R3]
         { []
         }
     {offset
       c4IeM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4IeN; else goto c4IeO;
       c4IeN: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFingerprint1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4IeO: // global
           I64[Sp - 16] = block_c4IeJ_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4IeS; else goto c4IeK;
       u4IeS: // global
           call _c4IeJ(R1) args: 0, res: 0, upd: 0;
       c4IeK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFingerprint1_info" {
     Foreign.Storable.$fStorableFingerprint1_info:
         const Foreign.Storable.$fStorableFingerprint1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4IeJ() //  [R1]
         { []
         }
     {offset
       c4IeJ: // global
           R4 = I64[R1 + 15];
           R3 = I64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call Foreign.Storable.$w$cpoke_entry(R4,
                                                R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IeJ_info" {
     block_c4IeJ_info:
         const _c4IeJ;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.434587112 UTC

[section ""data" . Foreign.Storable.$wpeekW64_closure" {
     Foreign.Storable.$wpeekW64_closure:
         const Foreign.Storable.$wpeekW64_info;
 },
 Foreign.Storable.$wpeekW64_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4Ift: // global
           if ((Sp + -24) < SpLim) (likely: False) goto u4IfE; else goto u4IfD;
       u4IfE: // global
           P64[Sp - 24] = R2;
           I64[Sp - 16] = R3;
           I64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c4Ifu() args: 0, res: 0, upd: 0;
       u4IfD: // global
           P64[Sp - 24] = R2;
           I64[Sp - 16] = R3;
           I64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c4If3() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Foreign.Storable.$wpeekW64_info" {
     Foreign.Storable.$wpeekW64_info:
         const Foreign.Storable.$wpeekW64_entry;
         const 0;
         const 14;
         const 17179869204;
 },
 _c4If3() //  []
         { []
         }
     {offset
       c4If3: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Ifx; else goto c4Ifw;
       c4Ifx: // global
           HpAlloc = 16;
           call _c4Ifu() args: 0, res: 0, upd: 0;
       c4Ifw: // global
           _s4Fw5::I64 = I64[Sp + 8];
           if (_s4Fw5::I64 != 0) goto c4Ifr; else goto c4Ifs;
       c4Ifr: // global
           Hp = Hp - 16;
           _s4Fw1::P64 = P64[Sp];
           I64[Sp] = block_c4If8_info;
           R1 = _s4Fw1::P64;
           I64[Sp + 8] = _s4Fw5::I64;
           if (R1 & 7 != 0) goto u4IfG; else goto c4If9;
       u4IfG: // global
           call _c4If8(R1) args: 0, res: 0, upd: 0;
       c4If9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c4Ifs: // global
           I64[Hp - 8] = GHC.Word.W64#_con_info;
           I64[Hp] = I64[Sp + 16];
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c4Ifu() //  []
         { []
         }
     {offset
       c4Ifu: // global
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = Foreign.Storable.$wpeekW64_closure;
           Sp = Sp + 24;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 _c4If8() //  [R1]
         { []
         }
     {offset
       c4If8: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4IfA; else goto c4Ifz;
       c4IfA: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Ifz: // global
           _s4Fw7::I64 = I64[R1 + 7];
           _s4Fwf::I64 = (I64[Sp + 16] << 8) | %MO_UU_Conv_W8_W64(I8[_s4Fw7::I64]);
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4Fw7::I64 + 1;
           P64[Sp] = Hp - 7;
           I64[Sp + 8] = I64[Sp + 8] - 1;
           I64[Sp + 16] = _s4Fwf::I64;
           call _c4If3() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c4If8_info" {
     block_c4If8_info:
         const _c4If8;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.450254051 UTC

[section ""data" . Foreign.Storable.$fStorableFingerprint2_closure" {
     Foreign.Storable.$fStorableFingerprint2_closure:
         const Foreign.Storable.$fStorableFingerprint2_info;
 },
 sat_s4Fwp_entry() //  [R1]
         { []
         }
     {offset
       c4Igh: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4Igo; else goto c4Igp;
       c4Igo: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4Igp: // global
           I64[Sp - 8] = block_c4Ige_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4Igt; else goto c4Igf;
       u4Igt: // global
           call _c4Ige(R1) args: 0, res: 0, upd: 0;
       c4Igf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s4Fwp_info" {
     sat_s4Fwp_info:
         const sat_s4Fwp_entry;
         const 1;
         const 16;
 },
 _c4Ige() //  [R1]
         { []
         }
     {offset
       c4Ige: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Igs; else goto c4Igr;
       c4Igs: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Igr: // global
           _s4Fwo::I64 = I64[R1 + 7] + 8;
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4Fwo::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Ige_info" {
     block_c4Ige_info:
         const _c4Ige;
         const 0;
         const 30;
 },
 sat_s4Fwt_entry() //  [R1]
         { []
         }
     {offset
       c4IgA: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4IgB; else goto c4IgC;
       c4IgB: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4IgC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Fingerprint.Type.$WFingerprint_entry(R3,
                                                         R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4Fwt_info" {
     sat_s4Fwt_info:
         const sat_s4Fwt_entry;
         const 2;
         const 18;
 },
 Foreign.Storable.$fStorableFingerprint2_entry() //  [R2]
         { []
         }
     {offset
       c4IgD: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4IgE; else goto c4IgF;
       c4IgE: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFingerprint2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4IgF: // global
           I64[Sp - 16] = block_c4Ig8_info;
           R4 = 0;
           R3 = 8;
           _s4Fwh::P64 = R2;
           R2 = R2;
           P64[Sp - 8] = _s4Fwh::P64;
           Sp = Sp - 16;
           call Foreign.Storable.$wpeekW64_entry(R4,
                                                 R3,
                                                 R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFingerprint2_info" {
     Foreign.Storable.$fStorableFingerprint2_info:
         const Foreign.Storable.$fStorableFingerprint2_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4Ig8() //  [R1]
         { []
         }
     {offset
       c4Ig8: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c4IgI; else goto c4IgH;
       c4IgI: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4IgH: // global
           I64[Hp - 16] = sat_s4Fwp_info;
           P64[Hp] = P64[Sp + 8];
           I64[Sp] = block_c4Igu_info;
           R4 = 0;
           R3 = 8;
           R2 = Hp - 16;
           P64[Sp + 8] = R1;
           call Foreign.Storable.$wpeekW64_entry(R4,
                                                 R3,
                                                 R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Ig8_info" {
     block_c4Ig8_info:
         const _c4Ig8;
         const 1;
         const 30;
 },
 _c4Igu() //  [R1]
         { []
         }
     {offset
       c4Igu: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c4IgL; else goto c4IgK;
       c4IgL: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4IgK: // global
           I64[Hp - 24] = sat_s4Fwt_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = R1;
           R1 = Hp - 24;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Igu_info" {
     block_c4Igu_info:
         const _c4Igu;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.465896222 UTC

[section ""data" . Foreign.Storable.$fStorableFingerprint4_closure" {
     Foreign.Storable.$fStorableFingerprint4_closure:
         const Foreign.Storable.$fStorableFingerprint4_info;
 },
 sat_s4FwC_entry() //  [R1]
         { []
         }
     {offset
       c4Ihp: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4IhB; else goto c4IhC;
       c4IhB: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4IhC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c4Ihm_info;
           _s4Fwv::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s4Fwv::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4IhI; else goto c4Ihn;
       u4IhI: // global
           call _c4Ihm(R1) args: 0, res: 0, upd: 0;
       c4Ihn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4FwC_info" {
     sat_s4FwC_info:
         const sat_s4FwC_entry;
         const 2;
         const 18;
 },
 _c4Ihm() //  [R1]
         { []
         }
     {offset
       c4Ihm: // global
           I64[Sp] = block_c4Ihs_info;
           _s4Fwy::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fwy::I64;
           if (R1 & 7 != 0) goto u4IhH; else goto c4Iht;
       u4IhH: // global
           call _c4Ihs(R1) args: 0, res: 0, upd: 0;
       c4Iht: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4Ihm_info" {
     block_c4Ihm_info:
         const _c4Ihm;
         const 1;
         const 30;
 },
 _c4Ihs() //  [R1]
         { []
         }
     {offset
       c4Ihs: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4IhG; else goto c4IhF;
       c4IhG: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4IhF: // global
           _s4FwB::I64 = I64[Sp + 8] + I64[R1 + 7];
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4FwB::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4Ihs_info" {
     block_c4Ihs_info:
         const _c4Ihs;
         const 65;
         const 30;
 },
 Foreign.Storable.$fStorableFingerprint4_entry() //  [R2, R3]
         { []
         }
     {offset
       c4IhJ: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c4IhN; else goto c4IhM;
       c4IhN: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFingerprint4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4IhM: // global
           I64[Hp - 24] = sat_s4FwC_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R2 = Hp - 24;
           call Foreign.Storable.$fStorableFingerprint2_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFingerprint4_info" {
     Foreign.Storable.$fStorableFingerprint4_info:
         const Foreign.Storable.$fStorableFingerprint4_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.480277244 UTC

[section ""data" . Foreign.Storable.$fStorableFingerprint6_closure" {
     Foreign.Storable.$fStorableFingerprint6_closure:
         const Foreign.Storable.$fStorableFingerprint6_info;
 },
 sat_s4FwM_entry() //  [R1]
         { []
         }
     {offset
       c4Iii: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4Iix; else goto c4Iiy;
       c4Iix: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4Iiy: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c4Iif_info;
           _s4FwE::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s4FwE::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4IiE; else goto c4Iig;
       u4IiE: // global
           call _c4Iif(R1) args: 0, res: 0, upd: 0;
       c4Iig: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4FwM_info" {
     sat_s4FwM_info:
         const sat_s4FwM_entry;
         const 2;
         const 18;
 },
 _c4Iif() //  [R1]
         { []
         }
     {offset
       c4Iif: // global
           I64[Sp] = block_c4Iil_info;
           _s4FwH::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FwH::I64;
           if (R1 & 7 != 0) goto u4IiD; else goto c4Iim;
       u4IiD: // global
           call _c4Iil(R1) args: 0, res: 0, upd: 0;
       c4Iim: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4Iif_info" {
     block_c4Iif_info:
         const _c4Iif;
         const 1;
         const 30;
 },
 _c4Iil() //  [R1]
         { []
         }
     {offset
       c4Iil: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4IiC; else goto c4IiB;
       c4IiC: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4IiB: // global
           _s4FwL::I64 = I64[Sp + 8] + (I64[R1 + 7] << 4);
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4FwL::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4Iil_info" {
     block_c4Iil_info:
         const _c4Iil;
         const 65;
         const 30;
 },
 Foreign.Storable.$fStorableFingerprint6_entry() //  [R2, R3]
         { []
         }
     {offset
       c4IiF: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c4IiJ; else goto c4IiI;
       c4IiJ: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFingerprint6_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4IiI: // global
           I64[Hp - 24] = sat_s4FwM_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R2 = Hp - 24;
           call Foreign.Storable.$fStorableFingerprint2_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFingerprint6_info" {
     Foreign.Storable.$fStorableFingerprint6_info:
         const Foreign.Storable.$fStorableFingerprint6_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.495189418 UTC

[section ""data" . Foreign.Storable.$fStorableFingerprint3_closure" {
     Foreign.Storable.$fStorableFingerprint3_closure:
         const Foreign.Storable.$fStorableFingerprint3_info;
 },
 sat_s4FwZ_entry() //  [R1]
         { []
         }
     {offset
       c4Ijj: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4Ijv; else goto c4Ijw;
       c4Ijv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4Ijw: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c4Ijg_info;
           _s4FwO::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s4FwO::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4IjC; else goto c4Ijh;
       u4IjC: // global
           call _c4Ijg(R1) args: 0, res: 0, upd: 0;
       c4Ijh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4FwZ_info" {
     sat_s4FwZ_info:
         const sat_s4FwZ_entry;
         const 2;
         const 18;
 },
 _c4Ijg() //  [R1]
         { []
         }
     {offset
       c4Ijg: // global
           I64[Sp] = block_c4Ijm_info;
           _s4FwV::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4FwV::I64;
           if (R1 & 7 != 0) goto u4IjB; else goto c4Ijn;
       u4IjB: // global
           call _c4Ijm(R1) args: 0, res: 0, upd: 0;
       c4Ijn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4Ijg_info" {
     block_c4Ijg_info:
         const _c4Ijg;
         const 1;
         const 30;
 },
 _c4Ijm() //  [R1]
         { []
         }
     {offset
       c4Ijm: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4IjA; else goto c4Ijz;
       c4IjA: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4Ijz: // global
           _s4FwY::I64 = I64[Sp + 8] + I64[R1 + 7];
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4FwY::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4Ijm_info" {
     block_c4Ijm_info:
         const _c4Ijm;
         const 65;
         const 30;
 },
 Foreign.Storable.$fStorableFingerprint3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4IjD: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4IjE; else goto c4IjF;
       c4IjE: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFingerprint3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4IjF: // global
           I64[Sp - 24] = block_c4Ij7_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4IjJ; else goto c4Ij8;
       u4IjJ: // global
           call _c4Ij7(R1) args: 0, res: 0, upd: 0;
       c4Ij8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFingerprint3_info" {
     Foreign.Storable.$fStorableFingerprint3_info:
         const Foreign.Storable.$fStorableFingerprint3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4Ij7() //  [R1]
         { []
         }
     {offset
       c4Ij7: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c4IjI; else goto c4IjH;
       c4IjI: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4IjH: // global
           _s4FwS::I64 = I64[R1 + 7];
           _s4FwT::I64 = I64[R1 + 15];
           I64[Hp - 24] = sat_s4FwZ_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = P64[Sp + 16];
           R4 = _s4FwT::I64;
           R3 = _s4FwS::I64;
           R2 = Hp - 24;
           Sp = Sp + 24;
           call Foreign.Storable.$w$cpoke_entry(R4,
                                                R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Ij7_info" {
     block_c4Ij7_info:
         const _c4Ij7;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.512686936 UTC

[section ""data" . Foreign.Storable.$fStorableFingerprint5_closure" {
     Foreign.Storable.$fStorableFingerprint5_closure:
         const Foreign.Storable.$fStorableFingerprint5_info;
 },
 sat_s4Fxd_entry() //  [R1]
         { []
         }
     {offset
       c4Ikq: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4IkF; else goto c4IkG;
       c4IkF: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4IkG: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c4Ikn_info;
           _s4Fx1::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s4Fx1::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4IkM; else goto c4Iko;
       u4IkM: // global
           call _c4Ikn(R1) args: 0, res: 0, upd: 0;
       c4Iko: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4Fxd_info" {
     sat_s4Fxd_info:
         const sat_s4Fxd_entry;
         const 2;
         const 18;
 },
 _c4Ikn() //  [R1]
         { []
         }
     {offset
       c4Ikn: // global
           I64[Sp] = block_c4Ikt_info;
           _s4Fx8::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Fx8::I64;
           if (R1 & 7 != 0) goto u4IkL; else goto c4Iku;
       u4IkL: // global
           call _c4Ikt(R1) args: 0, res: 0, upd: 0;
       c4Iku: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4Ikn_info" {
     block_c4Ikn_info:
         const _c4Ikn;
         const 1;
         const 30;
 },
 _c4Ikt() //  [R1]
         { []
         }
     {offset
       c4Ikt: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4IkK; else goto c4IkJ;
       c4IkK: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4IkJ: // global
           _s4Fxc::I64 = I64[Sp + 8] + (I64[R1 + 7] << 4);
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4Fxc::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4Ikt_info" {
     block_c4Ikt_info:
         const _c4Ikt;
         const 65;
         const 30;
 },
 Foreign.Storable.$fStorableFingerprint5_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4IkN: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4IkO; else goto c4IkP;
       c4IkO: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFingerprint5_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4IkP: // global
           I64[Sp - 24] = block_c4Ike_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4IkT; else goto c4Ikf;
       u4IkT: // global
           call _c4Ike(R1) args: 0, res: 0, upd: 0;
       c4Ikf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFingerprint5_info" {
     Foreign.Storable.$fStorableFingerprint5_info:
         const Foreign.Storable.$fStorableFingerprint5_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4Ike() //  [R1]
         { []
         }
     {offset
       c4Ike: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c4IkS; else goto c4IkR;
       c4IkS: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4IkR: // global
           _s4Fx5::I64 = I64[R1 + 7];
           _s4Fx6::I64 = I64[R1 + 15];
           I64[Hp - 24] = sat_s4Fxd_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = P64[Sp + 16];
           R4 = _s4Fx6::I64;
           R3 = _s4Fx5::I64;
           R2 = Hp - 24;
           Sp = Sp + 24;
           call Foreign.Storable.$w$cpoke_entry(R4,
                                                R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Ike_info" {
     block_c4Ike_info:
         const _c4Ike;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.526006737 UTC

[section ""data" . Foreign.Storable.$fStorableFingerprint_closure" {
     Foreign.Storable.$fStorableFingerprint_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableFingerprint_$csizeOf_closure+1;
         const Foreign.Storable.$fStorableFingerprint_$calignment_closure+1;
         const Foreign.Storable.$fStorableFingerprint6_closure+3;
         const Foreign.Storable.$fStorableFingerprint5_closure+4;
         const Foreign.Storable.$fStorableFingerprint4_closure+3;
         const Foreign.Storable.$fStorableFingerprint3_closure+4;
         const Foreign.Storable.$fStorableFingerprint2_closure+2;
         const Foreign.Storable.$fStorableFingerprint1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.530975905 UTC

[section ""data" . Foreign.Storable.C:Storable_closure" {
     Foreign.Storable.C:Storable_closure:
         const Foreign.Storable.C:Storable_info;
 },
 Foreign.Storable.C:Storable_slow() //  [R1]
         { []
         }
     {offset
       c4Ilm: // global
           R6 = P64[Sp + 32];
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call Foreign.Storable.C:Storable_entry(R6,
                                                  R5,
                                                  R4,
                                                  R3,
                                                  R2,
                                                  R1) args: 32, res: 0, upd: 8;
     }
 },
 Foreign.Storable.C:Storable_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c4Ilr: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c4Ilv; else goto c4Ilu;
       c4Ilv: // global
           HpAlloc = 72;
           R1 = Foreign.Storable.C:Storable_closure;
           P64[Sp - 40] = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           call (stg_gc_fun)(R1) args: 72, res: 0, upd: 8;
       c4Ilu: // global
           I64[Hp - 64] = Foreign.Storable.C:Storable_con_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           P64[Hp - 40] = R4;
           P64[Hp - 32] = R5;
           P64[Hp - 24] = R6;
           P64[Hp - 16] = P64[Sp];
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = P64[Sp + 16];
           R1 = Hp - 63;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.C:Storable_info" {
     Foreign.Storable.C:Storable_info:
         const Foreign.Storable.C:Storable_entry;
         const 0;
         const 14;
         const 34359738368;
         const 0;
         const 8;
         const Foreign.Storable.C:Storable_slow;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.538446372 UTC

[section ""cstring" . i4H4p_str" {
     i4H4p_str:
         I8[] [98,97,115,101,58,70,111,114,101,105,103,110,46,83,116,111,114,97,98,108,101,46,67,58,83,116,111,114,97,98,108,101]
 },
 Foreign.Storable.C:Storable_con_entry() //  [R1]
         { []
         }
     {offset
       c4IlG: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.C:Storable_con_info" {
     Foreign.Storable.C:Storable_con_info:
         const Foreign.Storable.C:Storable_con_entry;
         const 8;
         const 1;
         const i4H4p_str;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:32.541803604 UTC

[section ""relreadonly" . S4FBN_srt" {
     S4FBN_srt:
         const GHC.Err.undefined_closure;
         const lvl10_r4Ffj_closure;
         const Foreign.Storable.$fStorableRatio8_closure;
         const Foreign.Storable.$fStorableRatio_$calignment_closure;
         const GHC.Real.%_closure;
         const Foreign.Storable.$fStorableRatio2_closure;
         const lvl15_r4Ffp_closure;
         const lvl16_r4Ffq_closure;
         const Foreign.Storable.$dmpeekElemOff_closure;
         const lvl19_r4Fft_closure;
         const Foreign.Storable.$fStorableRatio6_closure;
         const Foreign.Storable.$fStorableRatio_$csizeOf_closure;
         const Foreign.Storable.$fStorableRatio4_closure;
         const Foreign.Storable.$fStorableRatio7_closure;
         const Foreign.Storable.$w$cpokeElemOff_closure;
         const Foreign.Storable.$fStorableRatio5_closure;
         const Foreign.Storable.$fStorableRatio_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.032780208 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:59:37.034860383 UTC

[section ""data" . Foreign.Storable.sizeOf_closure" {
     Foreign.Storable.sizeOf_closure:
         const Foreign.Storable.sizeOf_info;
 },
 Foreign.Storable.sizeOf_entry() //  [R2]
         { []
         }
     {offset
       c4IDD: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4IDE; else goto c4IDF;
       c4IDE: // global
           R2 = R2;
           R1 = Foreign.Storable.sizeOf_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4IDF: // global
           I64[Sp - 8] = block_c4IDA_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4IDJ; else goto c4IDB;
       u4IDJ: // global
           call _c4IDA(R1) args: 0, res: 0, upd: 0;
       c4IDB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.sizeOf_info" {
     Foreign.Storable.sizeOf_info:
         const Foreign.Storable.sizeOf_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c4IDA() //  [R1]
         { []
         }
     {offset
       c4IDA: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IDA_info" {
     block_c4IDA_info:
         const _c4IDA;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.041762618 UTC

[section ""data" . Foreign.Storable.alignment_closure" {
     Foreign.Storable.alignment_closure:
         const Foreign.Storable.alignment_info;
 },
 Foreign.Storable.alignment_entry() //  [R2]
         { []
         }
     {offset
       c4IE1: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4IE2; else goto c4IE3;
       c4IE2: // global
           R2 = R2;
           R1 = Foreign.Storable.alignment_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4IE3: // global
           I64[Sp - 8] = block_c4IDY_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4IE7; else goto c4IDZ;
       u4IE7: // global
           call _c4IDY(R1) args: 0, res: 0, upd: 0;
       c4IDZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.alignment_info" {
     Foreign.Storable.alignment_info:
         const Foreign.Storable.alignment_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c4IDY() //  [R1]
         { []
         }
     {offset
       c4IDY: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IDY_info" {
     block_c4IDY_info:
         const _c4IDY;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.048401332 UTC

[section ""data" . Foreign.Storable.peekElemOff_closure" {
     Foreign.Storable.peekElemOff_closure:
         const Foreign.Storable.peekElemOff_info;
 },
 Foreign.Storable.peekElemOff_entry() //  [R2]
         { []
         }
     {offset
       c4IEp: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4IEq; else goto c4IEr;
       c4IEq: // global
           R2 = R2;
           R1 = Foreign.Storable.peekElemOff_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4IEr: // global
           I64[Sp - 8] = block_c4IEm_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4IEv; else goto c4IEn;
       u4IEv: // global
           call _c4IEm(R1) args: 0, res: 0, upd: 0;
       c4IEn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.peekElemOff_info" {
     Foreign.Storable.peekElemOff_info:
         const Foreign.Storable.peekElemOff_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c4IEm() //  [R1]
         { []
         }
     {offset
       c4IEm: // global
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IEm_info" {
     block_c4IEm_info:
         const _c4IEm;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.054497407 UTC

[section ""data" . Foreign.Storable.pokeElemOff_closure" {
     Foreign.Storable.pokeElemOff_closure:
         const Foreign.Storable.pokeElemOff_info;
 },
 Foreign.Storable.pokeElemOff_entry() //  [R2]
         { []
         }
     {offset
       c4IEN: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4IEO; else goto c4IEP;
       c4IEO: // global
           R2 = R2;
           R1 = Foreign.Storable.pokeElemOff_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4IEP: // global
           I64[Sp - 8] = block_c4IEK_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4IET; else goto c4IEL;
       u4IET: // global
           call _c4IEK(R1) args: 0, res: 0, upd: 0;
       c4IEL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.pokeElemOff_info" {
     Foreign.Storable.pokeElemOff_info:
         const Foreign.Storable.pokeElemOff_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c4IEK() //  [R1]
         { []
         }
     {offset
       c4IEK: // global
           R1 = P64[R1 + 31];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IEK_info" {
     block_c4IEK_info:
         const _c4IEK;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.060468803 UTC

[section ""data" . Foreign.Storable.peekByteOff_closure" {
     Foreign.Storable.peekByteOff_closure:
         const Foreign.Storable.peekByteOff_info;
 },
 Foreign.Storable.peekByteOff_entry() //  [R2]
         { []
         }
     {offset
       c4IFb: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4IFc; else goto c4IFd;
       c4IFc: // global
           R2 = R2;
           R1 = Foreign.Storable.peekByteOff_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4IFd: // global
           I64[Sp - 8] = block_c4IF8_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4IFh; else goto c4IF9;
       u4IFh: // global
           call _c4IF8(R1) args: 0, res: 0, upd: 0;
       c4IF9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.peekByteOff_info" {
     Foreign.Storable.peekByteOff_info:
         const Foreign.Storable.peekByteOff_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c4IF8() //  [R1]
         { []
         }
     {offset
       c4IF8: // global
           R1 = P64[R1 + 39];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IF8_info" {
     block_c4IF8_info:
         const _c4IF8;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.067126704 UTC

[section ""data" . Foreign.Storable.pokeByteOff_closure" {
     Foreign.Storable.pokeByteOff_closure:
         const Foreign.Storable.pokeByteOff_info;
 },
 Foreign.Storable.pokeByteOff_entry() //  [R2]
         { []
         }
     {offset
       c4IFz: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4IFA; else goto c4IFB;
       c4IFA: // global
           R2 = R2;
           R1 = Foreign.Storable.pokeByteOff_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4IFB: // global
           I64[Sp - 8] = block_c4IFw_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4IFF; else goto c4IFx;
       u4IFF: // global
           call _c4IFw(R1) args: 0, res: 0, upd: 0;
       c4IFx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.pokeByteOff_info" {
     Foreign.Storable.pokeByteOff_info:
         const Foreign.Storable.pokeByteOff_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c4IFw() //  [R1]
         { []
         }
     {offset
       c4IFw: // global
           R1 = P64[R1 + 47];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IFw_info" {
     block_c4IFw_info:
         const _c4IFw;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.076629075 UTC

[section ""data" . Foreign.Storable.peek_closure" {
     Foreign.Storable.peek_closure:
         const Foreign.Storable.peek_info;
 },
 Foreign.Storable.peek_entry() //  [R2]
         { []
         }
     {offset
       c4IFX: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4IFY; else goto c4IFZ;
       c4IFY: // global
           R2 = R2;
           R1 = Foreign.Storable.peek_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4IFZ: // global
           I64[Sp - 8] = block_c4IFU_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4IG3; else goto c4IFV;
       u4IG3: // global
           call _c4IFU(R1) args: 0, res: 0, upd: 0;
       c4IFV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.peek_info" {
     Foreign.Storable.peek_info:
         const Foreign.Storable.peek_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c4IFU() //  [R1]
         { []
         }
     {offset
       c4IFU: // global
           R1 = P64[R1 + 55];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IFU_info" {
     block_c4IFU_info:
         const _c4IFU;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.085286881 UTC

[section ""data" . Foreign.Storable.poke_closure" {
     Foreign.Storable.poke_closure:
         const Foreign.Storable.poke_info;
 },
 Foreign.Storable.poke_entry() //  [R2]
         { []
         }
     {offset
       c4IGl: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4IGm; else goto c4IGn;
       c4IGm: // global
           R2 = R2;
           R1 = Foreign.Storable.poke_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4IGn: // global
           I64[Sp - 8] = block_c4IGi_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4IGr; else goto c4IGj;
       u4IGr: // global
           call _c4IGi(R1) args: 0, res: 0, upd: 0;
       c4IGj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.poke_info" {
     Foreign.Storable.poke_info:
         const Foreign.Storable.poke_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c4IGi() //  [R1]
         { []
         }
     {offset
       c4IGi: // global
           R1 = P64[R1 + 63];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IGi_info" {
     block_c4IGi_info:
         const _c4IGi;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.090787072 UTC

[section ""data" . Foreign.Storable.$fStorable()7_closure" {
     Foreign.Storable.$fStorable()7_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.092859821 UTC

[section ""data" . Foreign.Storable.$fStorable()_$calignment_closure" {
     Foreign.Storable.$fStorable()_$calignment_closure:
         const Foreign.Storable.$fStorable()_$calignment_info;
 },
 Foreign.Storable.$fStorable()_$calignment_entry() //  []
         { []
         }
     {offset
       c4IGH: // global
           R1 = Foreign.Storable.$fStorable()7_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorable()_$calignment_info" {
     Foreign.Storable.$fStorable()_$calignment_info:
         const Foreign.Storable.$fStorable()_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.096140106 UTC

[section ""data" . Foreign.Storable.$fStorable()8_closure" {
     Foreign.Storable.$fStorable()8_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.098910724 UTC

[section ""data" . Foreign.Storable.$fStorable()_$csizeOf_closure" {
     Foreign.Storable.$fStorable()_$csizeOf_closure:
         const Foreign.Storable.$fStorable()_$csizeOf_info;
 },
 Foreign.Storable.$fStorable()_$csizeOf_entry() //  []
         { []
         }
     {offset
       c4IGU: // global
           R1 = Foreign.Storable.$fStorable()8_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorable()_$csizeOf_info" {
     Foreign.Storable.$fStorable()_$csizeOf_info:
         const Foreign.Storable.$fStorable()_$csizeOf_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.103107274 UTC

[section ""data" . Foreign.Storable.$fStorableBool7_closure" {
     Foreign.Storable.$fStorableBool7_closure:
         const GHC.Types.I#_con_info;
         const 4;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.105232484 UTC

[section ""data" . Foreign.Storable.$fStorableChar_$calignment_closure" {
     Foreign.Storable.$fStorableChar_$calignment_closure:
         const Foreign.Storable.$fStorableChar_$calignment_info;
 },
 Foreign.Storable.$fStorableChar_$calignment_entry() //  []
         { []
         }
     {offset
       c4IH7: // global
           R1 = Foreign.Storable.$fStorableBool7_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableChar_$calignment_info" {
     Foreign.Storable.$fStorableChar_$calignment_info:
         const Foreign.Storable.$fStorableChar_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.10861961 UTC

[section ""data" . Foreign.Storable.$fStorableDouble5_closure" {
     Foreign.Storable.$fStorableDouble5_closure:
         const GHC.Types.I#_con_info;
         const 8;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.111366343 UTC

[section ""data" . Foreign.Storable.$fStorableInt_$calignment_closure" {
     Foreign.Storable.$fStorableInt_$calignment_closure:
         const Foreign.Storable.$fStorableInt_$calignment_info;
 },
 Foreign.Storable.$fStorableInt_$calignment_entry() //  []
         { []
         }
     {offset
       c4IHk: // global
           R1 = Foreign.Storable.$fStorableDouble5_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt_$calignment_info" {
     Foreign.Storable.$fStorableInt_$calignment_info:
         const Foreign.Storable.$fStorableInt_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.115054113 UTC

[section ""data" . Foreign.Storable.$fStorableWord_$calignment_closure" {
     Foreign.Storable.$fStorableWord_$calignment_closure:
         const Foreign.Storable.$fStorableWord_$calignment_info;
 },
 Foreign.Storable.$fStorableWord_$calignment_entry() //  []
         { []
         }
     {offset
       c4IHw: // global
           R1 = Foreign.Storable.$fStorableDouble5_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord_$calignment_info" {
     Foreign.Storable.$fStorableWord_$calignment_info:
         const Foreign.Storable.$fStorableWord_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.118944045 UTC

[section ""data" . Foreign.Storable.$fStorablePtr_$calignment_closure" {
     Foreign.Storable.$fStorablePtr_$calignment_closure:
         const Foreign.Storable.$fStorablePtr_$calignment_info;
 },
 Foreign.Storable.$fStorablePtr_$calignment_entry() //  []
         { []
         }
     {offset
       c4IHI: // global
           R1 = Foreign.Storable.$fStorableDouble5_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorablePtr_$calignment_info" {
     Foreign.Storable.$fStorablePtr_$calignment_info:
         const Foreign.Storable.$fStorablePtr_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.122645969 UTC

[section ""data" . Foreign.Storable.$fStorableFunPtr_$calignment_closure" {
     Foreign.Storable.$fStorableFunPtr_$calignment_closure:
         const Foreign.Storable.$fStorableFunPtr_$calignment_info;
 },
 Foreign.Storable.$fStorableFunPtr_$calignment_entry() //  []
         { []
         }
     {offset
       c4IHU: // global
           R1 = Foreign.Storable.$fStorableDouble5_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFunPtr_$calignment_info" {
     Foreign.Storable.$fStorableFunPtr_$calignment_info:
         const Foreign.Storable.$fStorableFunPtr_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.126956485 UTC

[section ""data" . Foreign.Storable.$fStorableStablePtr_$calignment_closure" {
     Foreign.Storable.$fStorableStablePtr_$calignment_closure:
         const Foreign.Storable.$fStorableStablePtr_$calignment_info;
 },
 Foreign.Storable.$fStorableStablePtr_$calignment_entry() //  []
         { []
         }
     {offset
       c4II6: // global
           R1 = Foreign.Storable.$fStorableDouble5_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableStablePtr_$calignment_info" {
     Foreign.Storable.$fStorableStablePtr_$calignment_info:
         const Foreign.Storable.$fStorableStablePtr_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.130595165 UTC

[section ""data" . Foreign.Storable.$fStorableFloat_$calignment_closure" {
     Foreign.Storable.$fStorableFloat_$calignment_closure:
         const Foreign.Storable.$fStorableFloat_$calignment_info;
 },
 Foreign.Storable.$fStorableFloat_$calignment_entry() //  []
         { []
         }
     {offset
       c4IIi: // global
           R1 = Foreign.Storable.$fStorableBool7_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFloat_$calignment_info" {
     Foreign.Storable.$fStorableFloat_$calignment_info:
         const Foreign.Storable.$fStorableFloat_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.134335076 UTC

[section ""data" . Foreign.Storable.$fStorableDouble_$calignment_closure" {
     Foreign.Storable.$fStorableDouble_$calignment_closure:
         const Foreign.Storable.$fStorableDouble_$calignment_info;
 },
 Foreign.Storable.$fStorableDouble_$calignment_entry() //  []
         { []
         }
     {offset
       c4IIu: // global
           R1 = Foreign.Storable.$fStorableDouble5_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableDouble_$calignment_info" {
     Foreign.Storable.$fStorableDouble_$calignment_info:
         const Foreign.Storable.$fStorableDouble_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.13784501 UTC

[section ""data" . Foreign.Storable.$fStorableWord8_$calignment_closure" {
     Foreign.Storable.$fStorableWord8_$calignment_closure:
         const Foreign.Storable.$fStorableWord8_$calignment_info;
 },
 Foreign.Storable.$fStorableWord8_$calignment_entry() //  []
         { []
         }
     {offset
       c4IIG: // global
           R1 = Foreign.Storable.$fStorable()7_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord8_$calignment_info" {
     Foreign.Storable.$fStorableWord8_$calignment_info:
         const Foreign.Storable.$fStorableWord8_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.141050361 UTC

[section ""data" . Foreign.Storable.$fStorableInt10_closure" {
     Foreign.Storable.$fStorableInt10_closure:
         const GHC.Types.I#_con_info;
         const 2;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.143796449 UTC

[section ""data" . Foreign.Storable.$fStorableWord16_$calignment_closure" {
     Foreign.Storable.$fStorableWord16_$calignment_closure:
         const Foreign.Storable.$fStorableWord16_$calignment_info;
 },
 Foreign.Storable.$fStorableWord16_$calignment_entry() //  []
         { []
         }
     {offset
       c4IIT: // global
           R1 = Foreign.Storable.$fStorableInt10_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord16_$calignment_info" {
     Foreign.Storable.$fStorableWord16_$calignment_info:
         const Foreign.Storable.$fStorableWord16_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.148114284 UTC

[section ""data" . Foreign.Storable.$fStorableWord32_$calignment_closure" {
     Foreign.Storable.$fStorableWord32_$calignment_closure:
         const Foreign.Storable.$fStorableWord32_$calignment_info;
 },
 Foreign.Storable.$fStorableWord32_$calignment_entry() //  []
         { []
         }
     {offset
       c4IJ5: // global
           R1 = Foreign.Storable.$fStorableBool7_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord32_$calignment_info" {
     Foreign.Storable.$fStorableWord32_$calignment_info:
         const Foreign.Storable.$fStorableWord32_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.15187048 UTC

[section ""data" . Foreign.Storable.$fStorableWord64_$calignment_closure" {
     Foreign.Storable.$fStorableWord64_$calignment_closure:
         const Foreign.Storable.$fStorableWord64_$calignment_info;
 },
 Foreign.Storable.$fStorableWord64_$calignment_entry() //  []
         { []
         }
     {offset
       c4IJh: // global
           R1 = Foreign.Storable.$fStorableDouble5_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord64_$calignment_info" {
     Foreign.Storable.$fStorableWord64_$calignment_info:
         const Foreign.Storable.$fStorableWord64_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.155653194 UTC

[section ""data" . Foreign.Storable.$fStorableInt8_$calignment_closure" {
     Foreign.Storable.$fStorableInt8_$calignment_closure:
         const Foreign.Storable.$fStorableInt8_$calignment_info;
 },
 Foreign.Storable.$fStorableInt8_$calignment_entry() //  []
         { []
         }
     {offset
       c4IJt: // global
           R1 = Foreign.Storable.$fStorable()7_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt8_$calignment_info" {
     Foreign.Storable.$fStorableInt8_$calignment_info:
         const Foreign.Storable.$fStorableInt8_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.159596783 UTC

[section ""data" . Foreign.Storable.$fStorableInt16_$calignment_closure" {
     Foreign.Storable.$fStorableInt16_$calignment_closure:
         const Foreign.Storable.$fStorableInt16_$calignment_info;
 },
 Foreign.Storable.$fStorableInt16_$calignment_entry() //  []
         { []
         }
     {offset
       c4IJF: // global
           R1 = Foreign.Storable.$fStorableInt10_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt16_$calignment_info" {
     Foreign.Storable.$fStorableInt16_$calignment_info:
         const Foreign.Storable.$fStorableInt16_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.163489806 UTC

[section ""data" . Foreign.Storable.$fStorableInt32_$calignment_closure" {
     Foreign.Storable.$fStorableInt32_$calignment_closure:
         const Foreign.Storable.$fStorableInt32_$calignment_info;
 },
 Foreign.Storable.$fStorableInt32_$calignment_entry() //  []
         { []
         }
     {offset
       c4IJR: // global
           R1 = Foreign.Storable.$fStorableBool7_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt32_$calignment_info" {
     Foreign.Storable.$fStorableInt32_$calignment_info:
         const Foreign.Storable.$fStorableInt32_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.168904489 UTC

[section ""data" . Foreign.Storable.$fStorableInt64_$calignment_closure" {
     Foreign.Storable.$fStorableInt64_$calignment_closure:
         const Foreign.Storable.$fStorableInt64_$calignment_info;
 },
 Foreign.Storable.$fStorableInt64_$calignment_entry() //  []
         { []
         }
     {offset
       c4IK3: // global
           R1 = Foreign.Storable.$fStorableDouble5_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt64_$calignment_info" {
     Foreign.Storable.$fStorableInt64_$calignment_info:
         const Foreign.Storable.$fStorableInt64_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.173774922 UTC

[section ""cstring" . lvl_r4Ff9_bytes" {
     lvl_r4Ff9_bytes:
         I8[] [117,110,100,101,102,105,110,101,100]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.176321096 UTC

[section ""data" . lvl1_r4Ffa_closure" {
     lvl1_r4Ffa_closure:
         const lvl1_r4Ffa_info;
         const 0;
         const 0;
         const 0;
 },
 lvl1_r4Ffa_entry() //  [R1]
         { []
         }
     {offset
       c4IKi: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4IKj; else goto c4IKk;
       c4IKj: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4IKk: // global
           (_c4IKf::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c4IKf::I64 == 0) goto c4IKh; else goto c4IKg;
       c4IKh: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c4IKg: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c4IKf::I64;
           R2 = lvl_r4Ff9_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl1_r4Ffa_info" {
     lvl1_r4Ffa_info:
         const lvl1_r4Ffa_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.18063594 UTC

[section ""cstring" . Foreign.Storable.$trModule4_bytes" {
     Foreign.Storable.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.183203242 UTC

[section ""data" . lvl2_r4Ffb_closure" {
     lvl2_r4Ffb_closure:
         const lvl2_r4Ffb_info;
         const 0;
         const 0;
         const 0;
 },
 lvl2_r4Ffb_entry() //  [R1]
         { []
         }
     {offset
       c4IKA: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4IKB; else goto c4IKC;
       c4IKB: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4IKC: // global
           (_c4IKx::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c4IKx::I64 == 0) goto c4IKz; else goto c4IKy;
       c4IKz: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c4IKy: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c4IKx::I64;
           R2 = Foreign.Storable.$trModule4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl2_r4Ffb_info" {
     lvl2_r4Ffb_info:
         const lvl2_r4Ffb_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.187145796 UTC

[section ""cstring" . Foreign.Storable.$trModule2_bytes" {
     Foreign.Storable.$trModule2_bytes:
         I8[] [70,111,114,101,105,103,110,46,83,116,111,114,97,98,108,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.189640154 UTC

[section ""data" . lvl3_r4Ffc_closure" {
     lvl3_r4Ffc_closure:
         const lvl3_r4Ffc_info;
         const 0;
         const 0;
         const 0;
 },
 lvl3_r4Ffc_entry() //  [R1]
         { []
         }
     {offset
       c4IKS: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4IKT; else goto c4IKU;
       c4IKT: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4IKU: // global
           (_c4IKP::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c4IKP::I64 == 0) goto c4IKR; else goto c4IKQ;
       c4IKR: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c4IKQ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c4IKP::I64;
           R2 = Foreign.Storable.$trModule2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl3_r4Ffc_info" {
     lvl3_r4Ffc_info:
         const lvl3_r4Ffc_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.193293657 UTC

[section ""cstring" . lvl4_r4Ffd_bytes" {
     lvl4_r4Ffd_bytes:
         I8[] [46,47,70,111,114,101,105,103,110,47,83,116,111,114,97,98,108,101,46,104,115]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.195722961 UTC

[section ""data" . lvl5_r4Ffe_closure" {
     lvl5_r4Ffe_closure:
         const lvl5_r4Ffe_info;
         const 0;
         const 0;
         const 0;
 },
 lvl5_r4Ffe_entry() //  [R1]
         { []
         }
     {offset
       c4ILa: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4ILb; else goto c4ILc;
       c4ILb: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4ILc: // global
           (_c4IL7::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c4IL7::I64 == 0) goto c4IL9; else goto c4IL8;
       c4IL9: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c4IL8: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c4IL7::I64;
           R2 = lvl4_r4Ffd_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl5_r4Ffe_info" {
     lvl5_r4Ffe_info:
         const lvl5_r4Ffe_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.19936312 UTC

[section ""data" . lvl6_r4Fff_closure" {
     lvl6_r4Fff_closure:
         const GHC.Types.I#_con_info;
         const 238;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.200991359 UTC

[section ""data" . lvl7_r4Ffg_closure" {
     lvl7_r4Ffg_closure:
         const GHC.Types.I#_con_info;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.203365914 UTC

[section ""data" . lvl8_r4Ffh_closure" {
     lvl8_r4Ffh_closure:
         const GHC.Types.I#_con_info;
         const 39;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.205126388 UTC

[section ""data" . lvl9_r4Ffi_closure" {
     lvl9_r4Ffi_closure:
         const GHC.Stack.Types.SrcLoc_con_info;
         const lvl2_r4Ffb_closure;
         const lvl3_r4Ffc_closure;
         const lvl5_r4Ffe_closure;
         const lvl6_r4Fff_closure+1;
         const lvl7_r4Ffg_closure+1;
         const lvl6_r4Fff_closure+1;
         const lvl8_r4Ffh_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.206944984 UTC

[section ""data" . lvl10_r4Ffj_closure" {
     lvl10_r4Ffj_closure:
         const GHC.Stack.Types.PushCallStack_con_info;
         const lvl1_r4Ffa_closure;
         const lvl9_r4Ffi_closure+1;
         const GHC.Stack.Types.EmptyCallStack_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.209529808 UTC

[section ""data" . Foreign.Storable.$fStorableRatio8_closure" {
     Foreign.Storable.$fStorableRatio8_closure:
         const Foreign.Storable.$fStorableRatio8_info;
         const 0;
         const 0;
         const 0;
 },
 Foreign.Storable.$fStorableRatio8_entry() //  [R1]
         { []
         }
     {offset
       c4ILw: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4ILx; else goto c4ILy;
       c4ILx: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4ILy: // global
           (_c4ILt::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c4ILt::I64 == 0) goto c4ILv; else goto c4ILu;
       c4ILv: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c4ILu: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c4ILt::I64;
           R2 = lvl10_r4Ffj_closure+2;
           Sp = Sp - 16;
           call GHC.Err.undefined_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio8_info" {
     Foreign.Storable.$fStorableRatio8_info:
         const Foreign.Storable.$fStorableRatio8_entry;
         const 0;
         const 12884901909;
         const S4ILz_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.215262502 UTC

[section ""data" . Foreign.Storable.$fStorableRatio_$calignment_closure" {
     Foreign.Storable.$fStorableRatio_$calignment_closure:
         const Foreign.Storable.$fStorableRatio_$calignment_info;
         const 0;
 },
 lvl20_s4Inp_entry() //  [R1]
         { []
         }
     {offset
       c4ILQ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4ILR; else goto c4ILS;
       c4ILR: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4ILS: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.Storable.$fStorableRatio8_closure;
           Sp = Sp - 32;
           call Foreign.Storable.alignment_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl20_s4Inp_info" {
     lvl20_s4Inp_info:
         const lvl20_s4Inp_entry;
         const 1;
         const 4294967312;
         const S4ILz_srt+16;
 },
 sat_s4Inr_entry() //  [R1]
         { []
         }
     {offset
       c4ILY: // global
           R1 = P64[R1 + 7] & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s4Inr_info" {
     sat_s4Inr_info:
         const sat_s4Inr_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Foreign.Storable.$fStorableRatio_$calignment_entry() //  [R2, R3]
         { []
         }
     {offset
       c4IM1: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c4IM5; else goto c4IM4;
       c4IM5: // global
           HpAlloc = 40;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableRatio_$calignment_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4IM4: // global
           I64[Hp - 32] = lvl20_s4Inp_info;
           P64[Hp - 16] = R2;
           I64[Hp - 8] = sat_s4Inr_info;
           P64[Hp] = Hp - 32;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio_$calignment_info" {
     Foreign.Storable.$fStorableRatio_$calignment_info:
         const Foreign.Storable.$fStorableRatio_$calignment_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S4ILz_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.222842944 UTC

[section ""data" . Foreign.Storable.$fStorableFingerprint_$calignment_closure" {
     Foreign.Storable.$fStorableFingerprint_$calignment_closure:
         const Foreign.Storable.$fStorableFingerprint_$calignment_info;
 },
 Foreign.Storable.$fStorableFingerprint_$calignment_entry() //  []
         { []
         }
     {offset
       c4IMu: // global
           R1 = Foreign.Storable.$fStorableDouble5_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFingerprint_$calignment_info" {
     Foreign.Storable.$fStorableFingerprint_$calignment_info:
         const Foreign.Storable.$fStorableFingerprint_$calignment_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.22615178 UTC

[section ""data" . Foreign.Storable.$fStorableFingerprint7_closure" {
     Foreign.Storable.$fStorableFingerprint7_closure:
         const GHC.Types.I#_con_info;
         const 16;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.228332148 UTC

[section ""data" . Foreign.Storable.$fStorableFingerprint_$csizeOf_closure" {
     Foreign.Storable.$fStorableFingerprint_$csizeOf_closure:
         const Foreign.Storable.$fStorableFingerprint_$csizeOf_info;
 },
 Foreign.Storable.$fStorableFingerprint_$csizeOf_entry() //  []
         { []
         }
     {offset
       c4IMH: // global
           R1 = Foreign.Storable.$fStorableFingerprint7_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFingerprint_$csizeOf_info" {
     Foreign.Storable.$fStorableFingerprint_$csizeOf_info:
         const Foreign.Storable.$fStorableFingerprint_$csizeOf_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.232195339 UTC

[section ""data" . Foreign.Storable.$dmpoke_closure" {
     Foreign.Storable.$dmpoke_closure:
         const Foreign.Storable.$dmpoke_info;
 },
 Foreign.Storable.$dmpoke_entry() //  [R2, R3]
         { []
         }
     {offset
       c4IMT: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4IMU; else goto c4IMV;
       c4IMU: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$dmpoke_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4IMV: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = Foreign.Storable.$fStorable()8_closure+1;
           Sp = Sp - 24;
           call Foreign.Storable.pokeElemOff_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$dmpoke_info" {
     Foreign.Storable.$dmpoke_info:
         const Foreign.Storable.$dmpoke_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.236932814 UTC

[section ""data" . Foreign.Storable.$dmpeek_closure" {
     Foreign.Storable.$dmpeek_closure:
         const Foreign.Storable.$dmpeek_info;
 },
 Foreign.Storable.$dmpeek_entry() //  [R2, R3]
         { []
         }
     {offset
       c4IN7: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4IN8; else goto c4IN9;
       c4IN8: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$dmpeek_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4IN9: // global
           R2 = R2;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = Foreign.Storable.$fStorable()8_closure+1;
           Sp = Sp - 24;
           call Foreign.Storable.peekElemOff_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$dmpeek_info" {
     Foreign.Storable.$dmpeek_info:
         const Foreign.Storable.$dmpeek_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.24255628 UTC

[section ""data" . Foreign.Storable.$dmpokeByteOff_closure" {
     Foreign.Storable.$dmpokeByteOff_closure:
         const Foreign.Storable.$dmpokeByteOff_info;
 },
 sat_s4InG_entry() //  [R1]
         { []
         }
     {offset
       c4INs: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4INE; else goto c4INF;
       c4INE: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4INF: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c4INp_info;
           _s4InA::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s4InA::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4INL; else goto c4INq;
       u4INL: // global
           call _c4INp(R1) args: 0, res: 0, upd: 0;
       c4INq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4InG_info" {
     sat_s4InG_info:
         const sat_s4InG_entry;
         const 2;
         const 18;
 },
 _c4INp() //  [R1]
         { []
         }
     {offset
       c4INp: // global
           I64[Sp] = block_c4INv_info;
           _s4InC::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4InC::I64;
           if (R1 & 7 != 0) goto u4INK; else goto c4INw;
       u4INK: // global
           call _c4INv(R1) args: 0, res: 0, upd: 0;
       c4INw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4INp_info" {
     block_c4INp_info:
         const _c4INp;
         const 1;
         const 30;
 },
 _c4INv() //  [R1]
         { []
         }
     {offset
       c4INv: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4INJ; else goto c4INI;
       c4INJ: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4INI: // global
           _s4InF::I64 = I64[Sp + 8] + I64[R1 + 7];
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4InF::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4INv_info" {
     block_c4INv_info:
         const _c4INv;
         const 65;
         const 30;
 },
 Foreign.Storable.$dmpokeByteOff_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4INM: // global
           _s4InA::P64 = R4;
           _s4Inz::P64 = R3;
           _s4Iny::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto c4INN; else goto c4INO;
       c4INO: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c4INQ; else goto c4INP;
       c4INQ: // global
           HpAlloc = 32;
           goto c4INN;
       c4INN: // global
           R4 = _s4InA::P64;
           R3 = _s4Inz::P64;
           R2 = _s4Iny::P64;
           R1 = Foreign.Storable.$dmpokeByteOff_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4INP: // global
           I64[Hp - 24] = sat_s4InG_info;
           P64[Hp - 8] = _s4Inz::P64;
           P64[Hp] = _s4InA::P64;
           R2 = _s4Iny::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call Foreign.Storable.poke_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$dmpokeByteOff_info" {
     Foreign.Storable.$dmpokeByteOff_info:
         const Foreign.Storable.$dmpokeByteOff_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.25408458 UTC

[section ""data" . Foreign.Storable.$dmpeekByteOff_closure" {
     Foreign.Storable.$dmpeekByteOff_closure:
         const Foreign.Storable.$dmpeekByteOff_info;
 },
 sat_s4InP_entry() //  [R1]
         { []
         }
     {offset
       c4IOt: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4IOF; else goto c4IOG;
       c4IOF: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4IOG: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c4IOq_info;
           _s4InJ::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s4InJ::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4IOM; else goto c4IOr;
       u4IOM: // global
           call _c4IOq(R1) args: 0, res: 0, upd: 0;
       c4IOr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4InP_info" {
     sat_s4InP_info:
         const sat_s4InP_entry;
         const 2;
         const 18;
 },
 _c4IOq() //  [R1]
         { []
         }
     {offset
       c4IOq: // global
           I64[Sp] = block_c4IOw_info;
           _s4InL::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4InL::I64;
           if (R1 & 7 != 0) goto u4IOL; else goto c4IOx;
       u4IOL: // global
           call _c4IOw(R1) args: 0, res: 0, upd: 0;
       c4IOx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4IOq_info" {
     block_c4IOq_info:
         const _c4IOq;
         const 1;
         const 30;
 },
 _c4IOw() //  [R1]
         { []
         }
     {offset
       c4IOw: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4IOK; else goto c4IOJ;
       c4IOK: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4IOJ: // global
           _s4InO::I64 = I64[Sp + 8] + I64[R1 + 7];
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4InO::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4IOw_info" {
     block_c4IOw_info:
         const _c4IOw;
         const 65;
         const 30;
 },
 Foreign.Storable.$dmpeekByteOff_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4ION: // global
           _s4InJ::P64 = R4;
           _s4InI::P64 = R3;
           _s4InH::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto c4IOO; else goto c4IOP;
       c4IOP: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c4IOR; else goto c4IOQ;
       c4IOR: // global
           HpAlloc = 32;
           goto c4IOO;
       c4IOO: // global
           R4 = _s4InJ::P64;
           R3 = _s4InI::P64;
           R2 = _s4InH::P64;
           R1 = Foreign.Storable.$dmpeekByteOff_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4IOQ: // global
           I64[Hp - 24] = sat_s4InP_info;
           P64[Hp - 8] = _s4InI::P64;
           P64[Hp] = _s4InJ::P64;
           R2 = _s4InH::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call Foreign.Storable.peek_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$dmpeekByteOff_info" {
     Foreign.Storable.$dmpeekByteOff_info:
         const Foreign.Storable.$dmpeekByteOff_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.26475436 UTC

[section ""data" . Foreign.Storable.$fStorableInt17_closure" {
     Foreign.Storable.$fStorableInt17_closure:
         const Foreign.Storable.$fStorableInt17_info;
 },
 Foreign.Storable.$fStorableInt17_entry() //  [R2]
         { []
         }
     {offset
       c4IPq: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4IPu; else goto c4IPv;
       c4IPu: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt17_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4IPv: // global
           I64[Sp - 8] = block_c4IPn_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4IPz; else goto c4IPo;
       u4IPz: // global
           call _c4IPn(R1) args: 0, res: 0, upd: 0;
       c4IPo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt17_info" {
     Foreign.Storable.$fStorableInt17_info:
         const Foreign.Storable.$fStorableInt17_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4IPn() //  [R1]
         { []
         }
     {offset
       c4IPn: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4IPy; else goto c4IPx;
       c4IPy: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4IPx: // global
           _s4InW::I64 = I64[I64[R1 + 7]];
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s4InW::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IPn_info" {
     block_c4IPn_info:
         const _c4IPn;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.271637204 UTC

[section ""data" . Foreign.Storable.$fStorableInt19_closure" {
     Foreign.Storable.$fStorableInt19_closure:
         const Foreign.Storable.$fStorableInt19_info;
 },
 Foreign.Storable.$fStorableInt19_entry() //  [R2, R3]
         { []
         }
     {offset
       c4IPU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4IQ6; else goto c4IQ7;
       c4IQ6: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt19_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4IQ7: // global
           I64[Sp - 16] = block_c4IPR_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4IQd; else goto c4IPS;
       u4IQd: // global
           call _c4IPR(R1) args: 0, res: 0, upd: 0;
       c4IPS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt19_info" {
     Foreign.Storable.$fStorableInt19_info:
         const Foreign.Storable.$fStorableInt19_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4IPR() //  [R1]
         { []
         }
     {offset
       c4IPR: // global
           I64[Sp] = block_c4IPX_info;
           _s4Io2::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Io2::I64;
           if (R1 & 7 != 0) goto u4IQc; else goto c4IPY;
       u4IQc: // global
           call _c4IPX(R1) args: 0, res: 0, upd: 0;
       c4IPY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IPR_info" {
     block_c4IPR_info:
         const _c4IPR;
         const 1;
         const 30;
 },
 _c4IPX() //  [R1]
         { []
         }
     {offset
       c4IPX: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4IQb; else goto c4IQa;
       c4IQb: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4IQa: // global
           _s4Io8::I64 = I64[I64[Sp + 8] + I64[R1 + 7]];
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s4Io8::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IPX_info" {
     block_c4IPX_info:
         const _c4IPX;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.279899216 UTC

[section ""data" . Foreign.Storable.$fStorableInt15_closure" {
     Foreign.Storable.$fStorableInt15_closure:
         const Foreign.Storable.$fStorableInt15_info;
 },
 Foreign.Storable.$fStorableInt15_entry() //  [R2, R3]
         { []
         }
     {offset
       c4IQE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4IQI; else goto c4IQJ;
       c4IQI: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt15_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4IQJ: // global
           I64[Sp - 16] = block_c4IQB_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4IQR; else goto c4IQC;
       u4IQR: // global
           call _c4IQB(R1) args: 0, res: 0, upd: 0;
       c4IQC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt15_info" {
     Foreign.Storable.$fStorableInt15_info:
         const Foreign.Storable.$fStorableInt15_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4IQB() //  [R1]
         { []
         }
     {offset
       c4IQB: // global
           I64[Sp] = block_c4IQH_info;
           _s4Ioe::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Ioe::I64;
           if (R1 & 7 != 0) goto u4IQQ; else goto c4IQL;
       u4IQQ: // global
           call _c4IQH(R1) args: 0, res: 0, upd: 0;
       c4IQL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IQB_info" {
     block_c4IQB_info:
         const _c4IQB;
         const 1;
         const 30;
 },
 _c4IQH() //  [R1]
         { []
         }
     {offset
       c4IQH: // global
           I64[I64[Sp + 8]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IQH_info" {
     block_c4IQH_info:
         const _c4IQH;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.289350721 UTC

[section ""data" . Foreign.Storable.$fStorableInt18_closure" {
     Foreign.Storable.$fStorableInt18_closure:
         const Foreign.Storable.$fStorableInt18_info;
 },
 Foreign.Storable.$fStorableInt18_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4IRi: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4IRr; else goto c4IRs;
       c4IRr: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt18_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4IRs: // global
           I64[Sp - 24] = block_c4IRf_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4IRC; else goto c4IRg;
       u4IRC: // global
           call _c4IRf(R1) args: 0, res: 0, upd: 0;
       c4IRg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt18_info" {
     Foreign.Storable.$fStorableInt18_info:
         const Foreign.Storable.$fStorableInt18_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4IRf() //  [R1]
         { []
         }
     {offset
       c4IRf: // global
           I64[Sp] = block_c4IRl_info;
           _s4Ion::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Ion::I64;
           if (R1 & 7 != 0) goto u4IRB; else goto c4IRm;
       u4IRB: // global
           call _c4IRl(R1) args: 0, res: 0, upd: 0;
       c4IRm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IRf_info" {
     block_c4IRf_info:
         const _c4IRf;
         const 2;
         const 30;
 },
 _c4IRl() //  [R1]
         { []
         }
     {offset
       c4IRl: // global
           I64[Sp] = block_c4IRq_info;
           _s4Iop::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Iop::I64;
           if (R1 & 7 != 0) goto u4IRD; else goto c4IRv;
       u4IRD: // global
           call _c4IRq(R1) args: 0, res: 0, upd: 0;
       c4IRv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IRl_info" {
     block_c4IRl_info:
         const _c4IRl;
         const 66;
         const 30;
 },
 _c4IRq() //  [R1]
         { []
         }
     {offset
       c4IRq: // global
           I64[I64[Sp + 8] + I64[Sp + 16]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IRq_info" {
     block_c4IRq_info:
         const _c4IRq;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.298470953 UTC

[section ""data" . Foreign.Storable.$fStorableInt64_closure" {
     Foreign.Storable.$fStorableInt64_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableInt64_$calignment_closure+1;
         const Foreign.Storable.$fStorableInt64_$calignment_closure+1;
         const GHC.Storable.readInt64OffPtr1_closure+3;
         const GHC.Storable.writeInt64OffPtr1_closure+4;
         const Foreign.Storable.$fStorableInt19_closure+3;
         const Foreign.Storable.$fStorableInt18_closure+4;
         const Foreign.Storable.$fStorableInt17_closure+2;
         const Foreign.Storable.$fStorableInt15_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.30141101 UTC

[section ""data" . Foreign.Storable.$fStorableInt12_closure" {
     Foreign.Storable.$fStorableInt12_closure:
         const Foreign.Storable.$fStorableInt12_info;
 },
 Foreign.Storable.$fStorableInt12_entry() //  [R2]
         { []
         }
     {offset
       c4ISb: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4ISf; else goto c4ISg;
       c4ISf: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt12_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4ISg: // global
           I64[Sp - 8] = block_c4IS8_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4ISk; else goto c4IS9;
       u4ISk: // global
           call _c4IS8(R1) args: 0, res: 0, upd: 0;
       c4IS9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt12_info" {
     Foreign.Storable.$fStorableInt12_info:
         const Foreign.Storable.$fStorableInt12_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4IS8() //  [R1]
         { []
         }
     {offset
       c4IS8: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4ISj; else goto c4ISi;
       c4ISj: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4ISi: // global
           _s4IoA::I64 = %MO_SS_Conv_W32_W64(I32[I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = _s4IoA::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IS8_info" {
     block_c4IS8_info:
         const _c4IS8;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.308407505 UTC

[section ""data" . Foreign.Storable.$fStorableInt14_closure" {
     Foreign.Storable.$fStorableInt14_closure:
         const Foreign.Storable.$fStorableInt14_info;
 },
 Foreign.Storable.$fStorableInt14_entry() //  [R2, R3]
         { []
         }
     {offset
       c4ISF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4ISR; else goto c4ISS;
       c4ISR: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt14_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4ISS: // global
           I64[Sp - 16] = block_c4ISC_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4ISY; else goto c4ISD;
       u4ISY: // global
           call _c4ISC(R1) args: 0, res: 0, upd: 0;
       c4ISD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt14_info" {
     Foreign.Storable.$fStorableInt14_info:
         const Foreign.Storable.$fStorableInt14_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4ISC() //  [R1]
         { []
         }
     {offset
       c4ISC: // global
           I64[Sp] = block_c4ISI_info;
           _s4IoG::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IoG::I64;
           if (R1 & 7 != 0) goto u4ISX; else goto c4ISJ;
       u4ISX: // global
           call _c4ISI(R1) args: 0, res: 0, upd: 0;
       c4ISJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4ISC_info" {
     block_c4ISC_info:
         const _c4ISC;
         const 1;
         const 30;
 },
 _c4ISI() //  [R1]
         { []
         }
     {offset
       c4ISI: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4ISW; else goto c4ISV;
       c4ISW: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4ISV: // global
           _s4IoM::I64 = %MO_SS_Conv_W32_W64(I32[I64[Sp + 8] + I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = _s4IoM::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4ISI_info" {
     block_c4ISI_info:
         const _c4ISI;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.316442282 UTC

[section ""data" . Foreign.Storable.$fStorableInt11_closure" {
     Foreign.Storable.$fStorableInt11_closure:
         const Foreign.Storable.$fStorableInt11_info;
 },
 Foreign.Storable.$fStorableInt11_entry() //  [R2, R3]
         { []
         }
     {offset
       c4ITp: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4ITt; else goto c4ITu;
       c4ITt: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt11_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4ITu: // global
           I64[Sp - 16] = block_c4ITm_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4ITC; else goto c4ITn;
       u4ITC: // global
           call _c4ITm(R1) args: 0, res: 0, upd: 0;
       c4ITn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt11_info" {
     Foreign.Storable.$fStorableInt11_info:
         const Foreign.Storable.$fStorableInt11_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4ITm() //  [R1]
         { []
         }
     {offset
       c4ITm: // global
           I64[Sp] = block_c4ITs_info;
           _s4IoS::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IoS::I64;
           if (R1 & 7 != 0) goto u4ITB; else goto c4ITw;
       u4ITB: // global
           call _c4ITs(R1) args: 0, res: 0, upd: 0;
       c4ITw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4ITm_info" {
     block_c4ITm_info:
         const _c4ITm;
         const 1;
         const 30;
 },
 _c4ITs() //  [R1]
         { []
         }
     {offset
       c4ITs: // global
           I32[I64[Sp + 8]] = %MO_UU_Conv_W64_W32(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4ITs_info" {
     block_c4ITs_info:
         const _c4ITs;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.324962596 UTC

[section ""data" . Foreign.Storable.$fStorableInt13_closure" {
     Foreign.Storable.$fStorableInt13_closure:
         const Foreign.Storable.$fStorableInt13_info;
 },
 Foreign.Storable.$fStorableInt13_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4IU3: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4IUc; else goto c4IUd;
       c4IUc: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt13_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4IUd: // global
           I64[Sp - 24] = block_c4IU0_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4IUn; else goto c4IU1;
       u4IUn: // global
           call _c4IU0(R1) args: 0, res: 0, upd: 0;
       c4IU1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt13_info" {
     Foreign.Storable.$fStorableInt13_info:
         const Foreign.Storable.$fStorableInt13_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4IU0() //  [R1]
         { []
         }
     {offset
       c4IU0: // global
           I64[Sp] = block_c4IU6_info;
           _s4Ip1::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Ip1::I64;
           if (R1 & 7 != 0) goto u4IUm; else goto c4IU7;
       u4IUm: // global
           call _c4IU6(R1) args: 0, res: 0, upd: 0;
       c4IU7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IU0_info" {
     block_c4IU0_info:
         const _c4IU0;
         const 2;
         const 30;
 },
 _c4IU6() //  [R1]
         { []
         }
     {offset
       c4IU6: // global
           I64[Sp] = block_c4IUb_info;
           _s4Ip3::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Ip3::I64;
           if (R1 & 7 != 0) goto u4IUo; else goto c4IUg;
       u4IUo: // global
           call _c4IUb(R1) args: 0, res: 0, upd: 0;
       c4IUg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IU6_info" {
     block_c4IU6_info:
         const _c4IU6;
         const 66;
         const 30;
 },
 _c4IUb() //  [R1]
         { []
         }
     {offset
       c4IUb: // global
           I32[I64[Sp + 8] + I64[Sp + 16]] = %MO_UU_Conv_W64_W32(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IUb_info" {
     block_c4IUb_info:
         const _c4IUb;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.334135083 UTC

[section ""data" . Foreign.Storable.$fStorableInt32_closure" {
     Foreign.Storable.$fStorableInt32_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableInt32_$calignment_closure+1;
         const Foreign.Storable.$fStorableInt32_$calignment_closure+1;
         const GHC.Storable.readInt32OffPtr1_closure+3;
         const GHC.Storable.writeInt32OffPtr1_closure+4;
         const Foreign.Storable.$fStorableInt14_closure+3;
         const Foreign.Storable.$fStorableInt13_closure+4;
         const Foreign.Storable.$fStorableInt12_closure+2;
         const Foreign.Storable.$fStorableInt11_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.336452242 UTC

[section ""data" . Foreign.Storable.$fStorableBool_$csizeOf_closure" {
     Foreign.Storable.$fStorableBool_$csizeOf_closure:
         const Foreign.Storable.$fStorableBool_$csizeOf_info;
 },
 Foreign.Storable.$fStorableBool_$csizeOf_entry() //  []
         { []
         }
     {offset
       c4IUT: // global
           R1 = Foreign.Storable.$fStorableBool7_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableBool_$csizeOf_info" {
     Foreign.Storable.$fStorableBool_$csizeOf_info:
         const Foreign.Storable.$fStorableBool_$csizeOf_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.341412342 UTC

[section ""data" . Foreign.Storable.$fStorableBool5_closure" {
     Foreign.Storable.$fStorableBool5_closure:
         const Foreign.Storable.$fStorableBool5_info;
 },
 Foreign.Storable.$fStorableBool5_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4IV8: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4IVc; else goto c4IVd;
       c4IVc: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableBool5_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4IVd: // global
           I64[Sp - 24] = block_c4IV5_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4IVy; else goto c4IV6;
       u4IVy: // global
           call _c4IV5(R1) args: 0, res: 0, upd: 0;
       c4IV6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableBool5_info" {
     Foreign.Storable.$fStorableBool5_info:
         const Foreign.Storable.$fStorableBool5_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4IV5() //  [R1]
         { []
         }
     {offset
       c4IV5: // global
           I64[Sp] = block_c4IVb_info;
           _s4Ipe::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Ipe::I64;
           if (R1 & 7 != 0) goto u4IVx; else goto c4IVf;
       u4IVx: // global
           call _c4IVb(R1) args: 0, res: 0, upd: 0;
       c4IVf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IV5_info" {
     block_c4IV5_info:
         const _c4IV5;
         const 2;
         const 30;
 },
 _c4IVb() //  [R1]
         { []
         }
     {offset
       c4IVb: // global
           I64[Sp] = block_c4IVj_info;
           _s4Ipg::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Ipg::I64;
           if (R1 & 7 != 0) goto u4IVz; else goto c4IVl;
       u4IVz: // global
           call _c4IVj(R1) args: 0, res: 0, upd: 0;
       c4IVl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IVb_info" {
     block_c4IVb_info:
         const _c4IVb;
         const 66;
         const 30;
 },
 _c4IVj() //  [R1]
         { []
         }
     {offset
       c4IVj: // global
           _s4Ipe::I64 = I64[Sp + 8];
           _s4Ipg::I64 = I64[Sp + 16];
           if (R1 & 7 == 1) goto c4IVr; else goto c4IVv;
       c4IVr: // global
           I32[_s4Ipe::I64 + (_s4Ipg::I64 << 2)] = 0 :: W32;
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c4IVv: // global
           I32[_s4Ipe::I64 + (_s4Ipg::I64 << 2)] = 1 :: W32;
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IVj_info" {
     block_c4IVj_info:
         const _c4IVj;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.351188289 UTC

[section ""data" . Foreign.Storable.$fStorableInt6_closure" {
     Foreign.Storable.$fStorableInt6_closure:
         const Foreign.Storable.$fStorableInt6_info;
 },
 Foreign.Storable.$fStorableInt6_entry() //  [R2]
         { []
         }
     {offset
       c4IW7: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4IWb; else goto c4IWc;
       c4IWb: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt6_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4IWc: // global
           I64[Sp - 8] = block_c4IW4_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4IWg; else goto c4IW5;
       u4IWg: // global
           call _c4IW4(R1) args: 0, res: 0, upd: 0;
       c4IW5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt6_info" {
     Foreign.Storable.$fStorableInt6_info:
         const Foreign.Storable.$fStorableInt6_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4IW4() //  [R1]
         { []
         }
     {offset
       c4IW4: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4IWf; else goto c4IWe;
       c4IWf: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4IWe: // global
           _s4Ipq::I64 = %MO_SS_Conv_W16_W64(I16[I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Int.I16#_con_info;
           I64[Hp] = _s4Ipq::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IW4_info" {
     block_c4IW4_info:
         const _c4IW4;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.35932386 UTC

[section ""data" . Foreign.Storable.$fStorableInt9_closure" {
     Foreign.Storable.$fStorableInt9_closure:
         const Foreign.Storable.$fStorableInt9_info;
 },
 Foreign.Storable.$fStorableInt9_entry() //  [R2, R3]
         { []
         }
     {offset
       c4IWB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4IWN; else goto c4IWO;
       c4IWN: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt9_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4IWO: // global
           I64[Sp - 16] = block_c4IWy_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4IWU; else goto c4IWz;
       u4IWU: // global
           call _c4IWy(R1) args: 0, res: 0, upd: 0;
       c4IWz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt9_info" {
     Foreign.Storable.$fStorableInt9_info:
         const Foreign.Storable.$fStorableInt9_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4IWy() //  [R1]
         { []
         }
     {offset
       c4IWy: // global
           I64[Sp] = block_c4IWE_info;
           _s4Ipw::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Ipw::I64;
           if (R1 & 7 != 0) goto u4IWT; else goto c4IWF;
       u4IWT: // global
           call _c4IWE(R1) args: 0, res: 0, upd: 0;
       c4IWF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IWy_info" {
     block_c4IWy_info:
         const _c4IWy;
         const 1;
         const 30;
 },
 _c4IWE() //  [R1]
         { []
         }
     {offset
       c4IWE: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4IWS; else goto c4IWR;
       c4IWS: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4IWR: // global
           _s4IpC::I64 = %MO_SS_Conv_W16_W64(I16[I64[Sp + 8] + I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Int.I16#_con_info;
           I64[Hp] = _s4IpC::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IWE_info" {
     block_c4IWE_info:
         const _c4IWE;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.371864154 UTC

[section ""data" . Foreign.Storable.$fStorableInt5_closure" {
     Foreign.Storable.$fStorableInt5_closure:
         const Foreign.Storable.$fStorableInt5_info;
 },
 Foreign.Storable.$fStorableInt5_entry() //  [R2, R3]
         { []
         }
     {offset
       c4IXl: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4IXp; else goto c4IXq;
       c4IXp: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt5_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4IXq: // global
           I64[Sp - 16] = block_c4IXi_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4IXy; else goto c4IXj;
       u4IXy: // global
           call _c4IXi(R1) args: 0, res: 0, upd: 0;
       c4IXj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt5_info" {
     Foreign.Storable.$fStorableInt5_info:
         const Foreign.Storable.$fStorableInt5_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4IXi() //  [R1]
         { []
         }
     {offset
       c4IXi: // global
           I64[Sp] = block_c4IXo_info;
           _s4IpI::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IpI::I64;
           if (R1 & 7 != 0) goto u4IXx; else goto c4IXs;
       u4IXx: // global
           call _c4IXo(R1) args: 0, res: 0, upd: 0;
       c4IXs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IXi_info" {
     block_c4IXi_info:
         const _c4IXi;
         const 1;
         const 30;
 },
 _c4IXo() //  [R1]
         { []
         }
     {offset
       c4IXo: // global
           I16[I64[Sp + 8]] = %MO_UU_Conv_W64_W16(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IXo_info" {
     block_c4IXo_info:
         const _c4IXo;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.383393098 UTC

[section ""data" . Foreign.Storable.$fStorableInt7_closure" {
     Foreign.Storable.$fStorableInt7_closure:
         const Foreign.Storable.$fStorableInt7_info;
 },
 Foreign.Storable.$fStorableInt7_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4IXZ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4IY8; else goto c4IY9;
       c4IY8: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt7_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4IY9: // global
           I64[Sp - 24] = block_c4IXW_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4IYj; else goto c4IXX;
       u4IYj: // global
           call _c4IXW(R1) args: 0, res: 0, upd: 0;
       c4IXX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt7_info" {
     Foreign.Storable.$fStorableInt7_info:
         const Foreign.Storable.$fStorableInt7_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4IXW() //  [R1]
         { []
         }
     {offset
       c4IXW: // global
           I64[Sp] = block_c4IY2_info;
           _s4IpR::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IpR::I64;
           if (R1 & 7 != 0) goto u4IYi; else goto c4IY3;
       u4IYi: // global
           call _c4IY2(R1) args: 0, res: 0, upd: 0;
       c4IY3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IXW_info" {
     block_c4IXW_info:
         const _c4IXW;
         const 2;
         const 30;
 },
 _c4IY2() //  [R1]
         { []
         }
     {offset
       c4IY2: // global
           I64[Sp] = block_c4IY7_info;
           _s4IpT::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4IpT::I64;
           if (R1 & 7 != 0) goto u4IYk; else goto c4IYc;
       u4IYk: // global
           call _c4IY7(R1) args: 0, res: 0, upd: 0;
       c4IYc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IY2_info" {
     block_c4IY2_info:
         const _c4IY2;
         const 66;
         const 30;
 },
 _c4IY7() //  [R1]
         { []
         }
     {offset
       c4IY7: // global
           I16[I64[Sp + 8] + I64[Sp + 16]] = %MO_UU_Conv_W64_W16(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IY7_info" {
     block_c4IY7_info:
         const _c4IY7;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.392000197 UTC

[section ""data" . Foreign.Storable.$fStorableInt16_closure" {
     Foreign.Storable.$fStorableInt16_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableInt16_$calignment_closure+1;
         const Foreign.Storable.$fStorableInt16_$calignment_closure+1;
         const GHC.Storable.readInt16OffPtr1_closure+3;
         const GHC.Storable.writeInt16OffPtr1_closure+4;
         const Foreign.Storable.$fStorableInt9_closure+3;
         const Foreign.Storable.$fStorableInt7_closure+4;
         const Foreign.Storable.$fStorableInt6_closure+2;
         const Foreign.Storable.$fStorableInt5_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.396556692 UTC

[section ""data" . Foreign.Storable.$fStorableInt21_closure" {
     Foreign.Storable.$fStorableInt21_closure:
         const Foreign.Storable.$fStorableInt21_info;
 },
 Foreign.Storable.$fStorableInt21_entry() //  [R2]
         { []
         }
     {offset
       c4IYS: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4IYW; else goto c4IYX;
       c4IYW: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt21_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4IYX: // global
           I64[Sp - 8] = block_c4IYP_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4IZ1; else goto c4IYQ;
       u4IZ1: // global
           call _c4IYP(R1) args: 0, res: 0, upd: 0;
       c4IYQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt21_info" {
     Foreign.Storable.$fStorableInt21_info:
         const Foreign.Storable.$fStorableInt21_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4IYP() //  [R1]
         { []
         }
     {offset
       c4IYP: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4IZ0; else goto c4IYZ;
       c4IZ0: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4IYZ: // global
           _s4Iq4::I64 = %MO_SS_Conv_W8_W64(I8[I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Int.I8#_con_info;
           I64[Hp] = _s4Iq4::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IYP_info" {
     block_c4IYP_info:
         const _c4IYP;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.406936783 UTC

[section ""data" . Foreign.Storable.$fStorableInt23_closure" {
     Foreign.Storable.$fStorableInt23_closure:
         const Foreign.Storable.$fStorableInt23_info;
 },
 Foreign.Storable.$fStorableInt23_entry() //  [R2, R3]
         { []
         }
     {offset
       c4IZm: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4IZy; else goto c4IZz;
       c4IZy: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt23_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4IZz: // global
           I64[Sp - 16] = block_c4IZj_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4IZF; else goto c4IZk;
       u4IZF: // global
           call _c4IZj(R1) args: 0, res: 0, upd: 0;
       c4IZk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt23_info" {
     Foreign.Storable.$fStorableInt23_info:
         const Foreign.Storable.$fStorableInt23_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4IZj() //  [R1]
         { []
         }
     {offset
       c4IZj: // global
           I64[Sp] = block_c4IZp_info;
           _s4Iqa::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Iqa::I64;
           if (R1 & 7 != 0) goto u4IZE; else goto c4IZq;
       u4IZE: // global
           call _c4IZp(R1) args: 0, res: 0, upd: 0;
       c4IZq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IZj_info" {
     block_c4IZj_info:
         const _c4IZj;
         const 1;
         const 30;
 },
 _c4IZp() //  [R1]
         { []
         }
     {offset
       c4IZp: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4IZD; else goto c4IZC;
       c4IZD: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4IZC: // global
           _s4Iqg::I64 = %MO_SS_Conv_W8_W64(I8[I64[Sp + 8] + I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Int.I8#_con_info;
           I64[Hp] = _s4Iqg::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4IZp_info" {
     block_c4IZp_info:
         const _c4IZp;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.41711475 UTC

[section ""data" . Foreign.Storable.$fStorableInt20_closure" {
     Foreign.Storable.$fStorableInt20_closure:
         const Foreign.Storable.$fStorableInt20_info;
 },
 Foreign.Storable.$fStorableInt20_entry() //  [R2, R3]
         { []
         }
     {offset
       c4J06: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4J0a; else goto c4J0b;
       c4J0a: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt20_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4J0b: // global
           I64[Sp - 16] = block_c4J03_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4J0j; else goto c4J04;
       u4J0j: // global
           call _c4J03(R1) args: 0, res: 0, upd: 0;
       c4J04: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt20_info" {
     Foreign.Storable.$fStorableInt20_info:
         const Foreign.Storable.$fStorableInt20_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4J03() //  [R1]
         { []
         }
     {offset
       c4J03: // global
           I64[Sp] = block_c4J09_info;
           _s4Iqm::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Iqm::I64;
           if (R1 & 7 != 0) goto u4J0i; else goto c4J0d;
       u4J0i: // global
           call _c4J09(R1) args: 0, res: 0, upd: 0;
       c4J0d: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J03_info" {
     block_c4J03_info:
         const _c4J03;
         const 1;
         const 30;
 },
 _c4J09() //  [R1]
         { []
         }
     {offset
       c4J09: // global
           I8[I64[Sp + 8]] = %MO_UU_Conv_W64_W8(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J09_info" {
     block_c4J09_info:
         const _c4J09;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.4265254 UTC

[section ""data" . Foreign.Storable.$fStorableInt22_closure" {
     Foreign.Storable.$fStorableInt22_closure:
         const Foreign.Storable.$fStorableInt22_info;
 },
 Foreign.Storable.$fStorableInt22_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4J0K: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4J0T; else goto c4J0U;
       c4J0T: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt22_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4J0U: // global
           I64[Sp - 24] = block_c4J0H_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4J14; else goto c4J0I;
       u4J14: // global
           call _c4J0H(R1) args: 0, res: 0, upd: 0;
       c4J0I: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt22_info" {
     Foreign.Storable.$fStorableInt22_info:
         const Foreign.Storable.$fStorableInt22_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4J0H() //  [R1]
         { []
         }
     {offset
       c4J0H: // global
           I64[Sp] = block_c4J0N_info;
           _s4Iqv::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Iqv::I64;
           if (R1 & 7 != 0) goto u4J13; else goto c4J0O;
       u4J13: // global
           call _c4J0N(R1) args: 0, res: 0, upd: 0;
       c4J0O: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J0H_info" {
     block_c4J0H_info:
         const _c4J0H;
         const 2;
         const 30;
 },
 _c4J0N() //  [R1]
         { []
         }
     {offset
       c4J0N: // global
           I64[Sp] = block_c4J0S_info;
           _s4Iqx::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Iqx::I64;
           if (R1 & 7 != 0) goto u4J15; else goto c4J0X;
       u4J15: // global
           call _c4J0S(R1) args: 0, res: 0, upd: 0;
       c4J0X: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J0N_info" {
     block_c4J0N_info:
         const _c4J0N;
         const 66;
         const 30;
 },
 _c4J0S() //  [R1]
         { []
         }
     {offset
       c4J0S: // global
           I8[I64[Sp + 8] + I64[Sp + 16]] = %MO_UU_Conv_W64_W8(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J0S_info" {
     block_c4J0S_info:
         const _c4J0S;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.435198335 UTC

[section ""data" . Foreign.Storable.$fStorableInt8_closure" {
     Foreign.Storable.$fStorableInt8_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableInt8_$calignment_closure+1;
         const Foreign.Storable.$fStorableInt8_$calignment_closure+1;
         const GHC.Storable.readInt8OffPtr1_closure+3;
         const GHC.Storable.writeInt8OffPtr1_closure+4;
         const Foreign.Storable.$fStorableInt23_closure+3;
         const Foreign.Storable.$fStorableInt22_closure+4;
         const Foreign.Storable.$fStorableInt21_closure+2;
         const Foreign.Storable.$fStorableInt20_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.438075647 UTC

[section ""data" . Foreign.Storable.$fStorableWord15_closure" {
     Foreign.Storable.$fStorableWord15_closure:
         const Foreign.Storable.$fStorableWord15_info;
 },
 Foreign.Storable.$fStorableWord15_entry() //  [R2]
         { []
         }
     {offset
       c4J1D: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4J1H; else goto c4J1I;
       c4J1H: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord15_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4J1I: // global
           I64[Sp - 8] = block_c4J1A_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4J1M; else goto c4J1B;
       u4J1M: // global
           call _c4J1A(R1) args: 0, res: 0, upd: 0;
       c4J1B: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord15_info" {
     Foreign.Storable.$fStorableWord15_info:
         const Foreign.Storable.$fStorableWord15_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4J1A() //  [R1]
         { []
         }
     {offset
       c4J1A: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4J1L; else goto c4J1K;
       c4J1L: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4J1K: // global
           _s4IqI::I64 = I64[I64[R1 + 7]];
           I64[Hp - 8] = GHC.Word.W64#_con_info;
           I64[Hp] = _s4IqI::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J1A_info" {
     block_c4J1A_info:
         const _c4J1A;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.444813503 UTC

[section ""data" . Foreign.Storable.$fStorableWord18_closure" {
     Foreign.Storable.$fStorableWord18_closure:
         const Foreign.Storable.$fStorableWord18_info;
 },
 Foreign.Storable.$fStorableWord18_entry() //  [R2, R3]
         { []
         }
     {offset
       c4J27: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4J2j; else goto c4J2k;
       c4J2j: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord18_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4J2k: // global
           I64[Sp - 16] = block_c4J24_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4J2q; else goto c4J25;
       u4J2q: // global
           call _c4J24(R1) args: 0, res: 0, upd: 0;
       c4J25: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord18_info" {
     Foreign.Storable.$fStorableWord18_info:
         const Foreign.Storable.$fStorableWord18_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4J24() //  [R1]
         { []
         }
     {offset
       c4J24: // global
           I64[Sp] = block_c4J2a_info;
           _s4IqO::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IqO::I64;
           if (R1 & 7 != 0) goto u4J2p; else goto c4J2b;
       u4J2p: // global
           call _c4J2a(R1) args: 0, res: 0, upd: 0;
       c4J2b: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J24_info" {
     block_c4J24_info:
         const _c4J24;
         const 1;
         const 30;
 },
 _c4J2a() //  [R1]
         { []
         }
     {offset
       c4J2a: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4J2o; else goto c4J2n;
       c4J2o: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4J2n: // global
           _s4IqU::I64 = I64[I64[Sp + 8] + I64[R1 + 7]];
           I64[Hp - 8] = GHC.Word.W64#_con_info;
           I64[Hp] = _s4IqU::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J2a_info" {
     block_c4J2a_info:
         const _c4J2a;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.453928089 UTC

[section ""data" . Foreign.Storable.$fStorableWord14_closure" {
     Foreign.Storable.$fStorableWord14_closure:
         const Foreign.Storable.$fStorableWord14_info;
 },
 Foreign.Storable.$fStorableWord14_entry() //  [R2, R3]
         { []
         }
     {offset
       c4J2R: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4J2V; else goto c4J2W;
       c4J2V: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord14_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4J2W: // global
           I64[Sp - 16] = block_c4J2O_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4J34; else goto c4J2P;
       u4J34: // global
           call _c4J2O(R1) args: 0, res: 0, upd: 0;
       c4J2P: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord14_info" {
     Foreign.Storable.$fStorableWord14_info:
         const Foreign.Storable.$fStorableWord14_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4J2O() //  [R1]
         { []
         }
     {offset
       c4J2O: // global
           I64[Sp] = block_c4J2U_info;
           _s4Ir0::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Ir0::I64;
           if (R1 & 7 != 0) goto u4J33; else goto c4J2Y;
       u4J33: // global
           call _c4J2U(R1) args: 0, res: 0, upd: 0;
       c4J2Y: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J2O_info" {
     block_c4J2O_info:
         const _c4J2O;
         const 1;
         const 30;
 },
 _c4J2U() //  [R1]
         { []
         }
     {offset
       c4J2U: // global
           I64[I64[Sp + 8]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J2U_info" {
     block_c4J2U_info:
         const _c4J2U;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.462336567 UTC

[section ""data" . Foreign.Storable.$fStorableWord17_closure" {
     Foreign.Storable.$fStorableWord17_closure:
         const Foreign.Storable.$fStorableWord17_info;
 },
 Foreign.Storable.$fStorableWord17_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4J3v: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4J3E; else goto c4J3F;
       c4J3E: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord17_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4J3F: // global
           I64[Sp - 24] = block_c4J3s_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4J3P; else goto c4J3t;
       u4J3P: // global
           call _c4J3s(R1) args: 0, res: 0, upd: 0;
       c4J3t: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord17_info" {
     Foreign.Storable.$fStorableWord17_info:
         const Foreign.Storable.$fStorableWord17_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4J3s() //  [R1]
         { []
         }
     {offset
       c4J3s: // global
           I64[Sp] = block_c4J3y_info;
           _s4Ir9::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Ir9::I64;
           if (R1 & 7 != 0) goto u4J3O; else goto c4J3z;
       u4J3O: // global
           call _c4J3y(R1) args: 0, res: 0, upd: 0;
       c4J3z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J3s_info" {
     block_c4J3s_info:
         const _c4J3s;
         const 2;
         const 30;
 },
 _c4J3y() //  [R1]
         { []
         }
     {offset
       c4J3y: // global
           I64[Sp] = block_c4J3D_info;
           _s4Irb::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Irb::I64;
           if (R1 & 7 != 0) goto u4J3Q; else goto c4J3I;
       u4J3Q: // global
           call _c4J3D(R1) args: 0, res: 0, upd: 0;
       c4J3I: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J3y_info" {
     block_c4J3y_info:
         const _c4J3y;
         const 66;
         const 30;
 },
 _c4J3D() //  [R1]
         { []
         }
     {offset
       c4J3D: // global
           I64[I64[Sp + 8] + I64[Sp + 16]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J3D_info" {
     block_c4J3D_info:
         const _c4J3D;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.472362609 UTC

[section ""data" . Foreign.Storable.$fStorableWord64_closure" {
     Foreign.Storable.$fStorableWord64_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableWord64_$calignment_closure+1;
         const Foreign.Storable.$fStorableWord64_$calignment_closure+1;
         const GHC.Storable.readWord64OffPtr1_closure+3;
         const GHC.Storable.writeWord64OffPtr1_closure+4;
         const Foreign.Storable.$fStorableWord18_closure+3;
         const Foreign.Storable.$fStorableWord17_closure+4;
         const Foreign.Storable.$fStorableWord15_closure+2;
         const Foreign.Storable.$fStorableWord14_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.475519747 UTC

[section ""data" . Foreign.Storable.$fStorableWord11_closure" {
     Foreign.Storable.$fStorableWord11_closure:
         const Foreign.Storable.$fStorableWord11_info;
 },
 Foreign.Storable.$fStorableWord11_entry() //  [R2]
         { []
         }
     {offset
       c4J4o: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4J4s; else goto c4J4t;
       c4J4s: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord11_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4J4t: // global
           I64[Sp - 8] = block_c4J4l_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4J4x; else goto c4J4m;
       u4J4x: // global
           call _c4J4l(R1) args: 0, res: 0, upd: 0;
       c4J4m: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord11_info" {
     Foreign.Storable.$fStorableWord11_info:
         const Foreign.Storable.$fStorableWord11_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4J4l() //  [R1]
         { []
         }
     {offset
       c4J4l: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4J4w; else goto c4J4v;
       c4J4w: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4J4v: // global
           _s4Irm::I64 = %MO_UU_Conv_W32_W64(I32[I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Word.W32#_con_info;
           I64[Hp] = _s4Irm::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J4l_info" {
     block_c4J4l_info:
         const _c4J4l;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.482725234 UTC

[section ""data" . Foreign.Storable.$fStorableWord13_closure" {
     Foreign.Storable.$fStorableWord13_closure:
         const Foreign.Storable.$fStorableWord13_info;
 },
 Foreign.Storable.$fStorableWord13_entry() //  [R2, R3]
         { []
         }
     {offset
       c4J4S: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4J54; else goto c4J55;
       c4J54: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord13_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4J55: // global
           I64[Sp - 16] = block_c4J4P_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4J5b; else goto c4J4Q;
       u4J5b: // global
           call _c4J4P(R1) args: 0, res: 0, upd: 0;
       c4J4Q: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord13_info" {
     Foreign.Storable.$fStorableWord13_info:
         const Foreign.Storable.$fStorableWord13_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4J4P() //  [R1]
         { []
         }
     {offset
       c4J4P: // global
           I64[Sp] = block_c4J4V_info;
           _s4Irs::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Irs::I64;
           if (R1 & 7 != 0) goto u4J5a; else goto c4J4W;
       u4J5a: // global
           call _c4J4V(R1) args: 0, res: 0, upd: 0;
       c4J4W: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J4P_info" {
     block_c4J4P_info:
         const _c4J4P;
         const 1;
         const 30;
 },
 _c4J4V() //  [R1]
         { []
         }
     {offset
       c4J4V: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4J59; else goto c4J58;
       c4J59: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4J58: // global
           _s4Iry::I64 = %MO_UU_Conv_W32_W64(I32[I64[Sp + 8] + I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Word.W32#_con_info;
           I64[Hp] = _s4Iry::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J4V_info" {
     block_c4J4V_info:
         const _c4J4V;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.49131219 UTC

[section ""data" . Foreign.Storable.$fStorableWord10_closure" {
     Foreign.Storable.$fStorableWord10_closure:
         const Foreign.Storable.$fStorableWord10_info;
 },
 Foreign.Storable.$fStorableWord10_entry() //  [R2, R3]
         { []
         }
     {offset
       c4J5C: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4J5G; else goto c4J5H;
       c4J5G: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord10_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4J5H: // global
           I64[Sp - 16] = block_c4J5z_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4J5P; else goto c4J5A;
       u4J5P: // global
           call _c4J5z(R1) args: 0, res: 0, upd: 0;
       c4J5A: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord10_info" {
     Foreign.Storable.$fStorableWord10_info:
         const Foreign.Storable.$fStorableWord10_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4J5z() //  [R1]
         { []
         }
     {offset
       c4J5z: // global
           I64[Sp] = block_c4J5F_info;
           _s4IrE::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IrE::I64;
           if (R1 & 7 != 0) goto u4J5O; else goto c4J5J;
       u4J5O: // global
           call _c4J5F(R1) args: 0, res: 0, upd: 0;
       c4J5J: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J5z_info" {
     block_c4J5z_info:
         const _c4J5z;
         const 1;
         const 30;
 },
 _c4J5F() //  [R1]
         { []
         }
     {offset
       c4J5F: // global
           I32[I64[Sp + 8]] = %MO_UU_Conv_W64_W32(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J5F_info" {
     block_c4J5F_info:
         const _c4J5F;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.499669924 UTC

[section ""data" . Foreign.Storable.$fStorableWord12_closure" {
     Foreign.Storable.$fStorableWord12_closure:
         const Foreign.Storable.$fStorableWord12_info;
 },
 Foreign.Storable.$fStorableWord12_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4J6g: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4J6p; else goto c4J6q;
       c4J6p: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord12_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4J6q: // global
           I64[Sp - 24] = block_c4J6d_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4J6A; else goto c4J6e;
       u4J6A: // global
           call _c4J6d(R1) args: 0, res: 0, upd: 0;
       c4J6e: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord12_info" {
     Foreign.Storable.$fStorableWord12_info:
         const Foreign.Storable.$fStorableWord12_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4J6d() //  [R1]
         { []
         }
     {offset
       c4J6d: // global
           I64[Sp] = block_c4J6j_info;
           _s4IrN::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IrN::I64;
           if (R1 & 7 != 0) goto u4J6z; else goto c4J6k;
       u4J6z: // global
           call _c4J6j(R1) args: 0, res: 0, upd: 0;
       c4J6k: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J6d_info" {
     block_c4J6d_info:
         const _c4J6d;
         const 2;
         const 30;
 },
 _c4J6j() //  [R1]
         { []
         }
     {offset
       c4J6j: // global
           I64[Sp] = block_c4J6o_info;
           _s4IrP::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4IrP::I64;
           if (R1 & 7 != 0) goto u4J6B; else goto c4J6t;
       u4J6B: // global
           call _c4J6o(R1) args: 0, res: 0, upd: 0;
       c4J6t: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J6j_info" {
     block_c4J6j_info:
         const _c4J6j;
         const 66;
         const 30;
 },
 _c4J6o() //  [R1]
         { []
         }
     {offset
       c4J6o: // global
           I32[I64[Sp + 8] + I64[Sp + 16]] = %MO_UU_Conv_W64_W32(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J6o_info" {
     block_c4J6o_info:
         const _c4J6o;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.513919478 UTC

[section ""data" . Foreign.Storable.$fStorableWord32_closure" {
     Foreign.Storable.$fStorableWord32_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableWord32_$calignment_closure+1;
         const Foreign.Storable.$fStorableWord32_$calignment_closure+1;
         const GHC.Storable.readWord32OffPtr1_closure+3;
         const GHC.Storable.writeWord32OffPtr1_closure+4;
         const Foreign.Storable.$fStorableWord13_closure+3;
         const Foreign.Storable.$fStorableWord12_closure+4;
         const Foreign.Storable.$fStorableWord11_closure+2;
         const Foreign.Storable.$fStorableWord10_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.518727849 UTC

[section ""data" . Foreign.Storable.$fStorableWord6_closure" {
     Foreign.Storable.$fStorableWord6_closure:
         const Foreign.Storable.$fStorableWord6_info;
 },
 Foreign.Storable.$fStorableWord6_entry() //  [R2]
         { []
         }
     {offset
       c4J79: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4J7d; else goto c4J7e;
       c4J7d: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord6_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4J7e: // global
           I64[Sp - 8] = block_c4J76_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4J7i; else goto c4J77;
       u4J7i: // global
           call _c4J76(R1) args: 0, res: 0, upd: 0;
       c4J77: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord6_info" {
     Foreign.Storable.$fStorableWord6_info:
         const Foreign.Storable.$fStorableWord6_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4J76() //  [R1]
         { []
         }
     {offset
       c4J76: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4J7h; else goto c4J7g;
       c4J7h: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4J7g: // global
           _s4Is0::I64 = %MO_UU_Conv_W16_W64(I16[I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Word.W16#_con_info;
           I64[Hp] = _s4Is0::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J76_info" {
     block_c4J76_info:
         const _c4J76;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.526361831 UTC

[section ""data" . Foreign.Storable.$fStorableWord9_closure" {
     Foreign.Storable.$fStorableWord9_closure:
         const Foreign.Storable.$fStorableWord9_info;
 },
 Foreign.Storable.$fStorableWord9_entry() //  [R2, R3]
         { []
         }
     {offset
       c4J7D: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4J7P; else goto c4J7Q;
       c4J7P: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord9_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4J7Q: // global
           I64[Sp - 16] = block_c4J7A_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4J7W; else goto c4J7B;
       u4J7W: // global
           call _c4J7A(R1) args: 0, res: 0, upd: 0;
       c4J7B: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord9_info" {
     Foreign.Storable.$fStorableWord9_info:
         const Foreign.Storable.$fStorableWord9_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4J7A() //  [R1]
         { []
         }
     {offset
       c4J7A: // global
           I64[Sp] = block_c4J7G_info;
           _s4Is6::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Is6::I64;
           if (R1 & 7 != 0) goto u4J7V; else goto c4J7H;
       u4J7V: // global
           call _c4J7G(R1) args: 0, res: 0, upd: 0;
       c4J7H: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J7A_info" {
     block_c4J7A_info:
         const _c4J7A;
         const 1;
         const 30;
 },
 _c4J7G() //  [R1]
         { []
         }
     {offset
       c4J7G: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4J7U; else goto c4J7T;
       c4J7U: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4J7T: // global
           _s4Isc::I64 = %MO_UU_Conv_W16_W64(I16[I64[Sp + 8] + I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Word.W16#_con_info;
           I64[Hp] = _s4Isc::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J7G_info" {
     block_c4J7G_info:
         const _c4J7G;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.534759417 UTC

[section ""data" . Foreign.Storable.$fStorableWord5_closure" {
     Foreign.Storable.$fStorableWord5_closure:
         const Foreign.Storable.$fStorableWord5_info;
 },
 Foreign.Storable.$fStorableWord5_entry() //  [R2, R3]
         { []
         }
     {offset
       c4J8n: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4J8r; else goto c4J8s;
       c4J8r: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord5_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4J8s: // global
           I64[Sp - 16] = block_c4J8k_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4J8A; else goto c4J8l;
       u4J8A: // global
           call _c4J8k(R1) args: 0, res: 0, upd: 0;
       c4J8l: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord5_info" {
     Foreign.Storable.$fStorableWord5_info:
         const Foreign.Storable.$fStorableWord5_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4J8k() //  [R1]
         { []
         }
     {offset
       c4J8k: // global
           I64[Sp] = block_c4J8q_info;
           _s4Isi::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Isi::I64;
           if (R1 & 7 != 0) goto u4J8z; else goto c4J8u;
       u4J8z: // global
           call _c4J8q(R1) args: 0, res: 0, upd: 0;
       c4J8u: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J8k_info" {
     block_c4J8k_info:
         const _c4J8k;
         const 1;
         const 30;
 },
 _c4J8q() //  [R1]
         { []
         }
     {offset
       c4J8q: // global
           I16[I64[Sp + 8]] = %MO_UU_Conv_W64_W16(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J8q_info" {
     block_c4J8q_info:
         const _c4J8q;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.543062428 UTC

[section ""data" . Foreign.Storable.$fStorableWord7_closure" {
     Foreign.Storable.$fStorableWord7_closure:
         const Foreign.Storable.$fStorableWord7_info;
 },
 Foreign.Storable.$fStorableWord7_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4J91: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4J9a; else goto c4J9b;
       c4J9a: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord7_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4J9b: // global
           I64[Sp - 24] = block_c4J8Y_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4J9l; else goto c4J8Z;
       u4J9l: // global
           call _c4J8Y(R1) args: 0, res: 0, upd: 0;
       c4J8Z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord7_info" {
     Foreign.Storable.$fStorableWord7_info:
         const Foreign.Storable.$fStorableWord7_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4J8Y() //  [R1]
         { []
         }
     {offset
       c4J8Y: // global
           I64[Sp] = block_c4J94_info;
           _s4Isr::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Isr::I64;
           if (R1 & 7 != 0) goto u4J9k; else goto c4J95;
       u4J9k: // global
           call _c4J94(R1) args: 0, res: 0, upd: 0;
       c4J95: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J8Y_info" {
     block_c4J8Y_info:
         const _c4J8Y;
         const 2;
         const 30;
 },
 _c4J94() //  [R1]
         { []
         }
     {offset
       c4J94: // global
           I64[Sp] = block_c4J99_info;
           _s4Ist::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Ist::I64;
           if (R1 & 7 != 0) goto u4J9m; else goto c4J9e;
       u4J9m: // global
           call _c4J99(R1) args: 0, res: 0, upd: 0;
       c4J9e: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J94_info" {
     block_c4J94_info:
         const _c4J94;
         const 66;
         const 30;
 },
 _c4J99() //  [R1]
         { []
         }
     {offset
       c4J99: // global
           I16[I64[Sp + 8] + I64[Sp + 16]] = %MO_UU_Conv_W64_W16(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J99_info" {
     block_c4J99_info:
         const _c4J99;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.552453088 UTC

[section ""data" . Foreign.Storable.$fStorableWord16_closure" {
     Foreign.Storable.$fStorableWord16_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableWord16_$calignment_closure+1;
         const Foreign.Storable.$fStorableWord16_$calignment_closure+1;
         const GHC.Storable.readWord16OffPtr1_closure+3;
         const GHC.Storable.writeWord16OffPtr1_closure+4;
         const Foreign.Storable.$fStorableWord9_closure+3;
         const Foreign.Storable.$fStorableWord7_closure+4;
         const Foreign.Storable.$fStorableWord6_closure+2;
         const Foreign.Storable.$fStorableWord5_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.555345515 UTC

[section ""data" . Foreign.Storable.$fStorableDouble2_closure" {
     Foreign.Storable.$fStorableDouble2_closure:
         const Foreign.Storable.$fStorableDouble2_info;
 },
 Foreign.Storable.$fStorableDouble2_entry() //  [R2]
         { []
         }
     {offset
       c4J9U: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4J9Y; else goto c4J9Z;
       c4J9Y: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableDouble2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4J9Z: // global
           I64[Sp - 8] = block_c4J9R_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4Ja3; else goto c4J9S;
       u4Ja3: // global
           call _c4J9R(R1) args: 0, res: 0, upd: 0;
       c4J9S: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableDouble2_info" {
     Foreign.Storable.$fStorableDouble2_info:
         const Foreign.Storable.$fStorableDouble2_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4J9R() //  [R1]
         { []
         }
     {offset
       c4J9R: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Ja2; else goto c4Ja1;
       c4Ja2: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Ja1: // global
           _s4IsE::F64 = F64[I64[R1 + 7]];
           I64[Hp - 8] = GHC.Types.D#_con_info;
           F64[Hp] = _s4IsE::F64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4J9R_info" {
     block_c4J9R_info:
         const _c4J9R;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.562403109 UTC

[section ""data" . Foreign.Storable.$fStorableDouble4_closure" {
     Foreign.Storable.$fStorableDouble4_closure:
         const Foreign.Storable.$fStorableDouble4_info;
 },
 Foreign.Storable.$fStorableDouble4_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Jao: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JaA; else goto c4JaB;
       c4JaA: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableDouble4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JaB: // global
           I64[Sp - 16] = block_c4Jal_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4JaH; else goto c4Jam;
       u4JaH: // global
           call _c4Jal(R1) args: 0, res: 0, upd: 0;
       c4Jam: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableDouble4_info" {
     Foreign.Storable.$fStorableDouble4_info:
         const Foreign.Storable.$fStorableDouble4_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4Jal() //  [R1]
         { []
         }
     {offset
       c4Jal: // global
           I64[Sp] = block_c4Jar_info;
           _s4IsK::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IsK::I64;
           if (R1 & 7 != 0) goto u4JaG; else goto c4Jas;
       u4JaG: // global
           call _c4Jar(R1) args: 0, res: 0, upd: 0;
       c4Jas: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jal_info" {
     block_c4Jal_info:
         const _c4Jal;
         const 1;
         const 30;
 },
 _c4Jar() //  [R1]
         { []
         }
     {offset
       c4Jar: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JaF; else goto c4JaE;
       c4JaF: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4JaE: // global
           _s4IsQ::F64 = F64[I64[Sp + 8] + I64[R1 + 7]];
           I64[Hp - 8] = GHC.Types.D#_con_info;
           F64[Hp] = _s4IsQ::F64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jar_info" {
     block_c4Jar_info:
         const _c4Jar;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.570564713 UTC

[section ""data" . Foreign.Storable.$fStorableDouble1_closure" {
     Foreign.Storable.$fStorableDouble1_closure:
         const Foreign.Storable.$fStorableDouble1_info;
 },
 Foreign.Storable.$fStorableDouble1_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Jb8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4Jbc; else goto c4Jbd;
       c4Jbc: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableDouble1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Jbd: // global
           I64[Sp - 16] = block_c4Jb5_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4Jbl; else goto c4Jb6;
       u4Jbl: // global
           call _c4Jb5(R1) args: 0, res: 0, upd: 0;
       c4Jb6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableDouble1_info" {
     Foreign.Storable.$fStorableDouble1_info:
         const Foreign.Storable.$fStorableDouble1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4Jb5() //  [R1]
         { []
         }
     {offset
       c4Jb5: // global
           I64[Sp] = block_c4Jbb_info;
           _s4IsW::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IsW::I64;
           if (R1 & 7 != 0) goto u4Jbk; else goto c4Jbf;
       u4Jbk: // global
           call _c4Jbb(R1) args: 0, res: 0, upd: 0;
       c4Jbf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jb5_info" {
     block_c4Jb5_info:
         const _c4Jb5;
         const 1;
         const 30;
 },
 _c4Jbb() //  [R1]
         { []
         }
     {offset
       c4Jbb: // global
           F64[I64[Sp + 8]] = F64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jbb_info" {
     block_c4Jbb_info:
         const _c4Jbb;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.579071583 UTC

[section ""data" . Foreign.Storable.$fStorableDouble3_closure" {
     Foreign.Storable.$fStorableDouble3_closure:
         const Foreign.Storable.$fStorableDouble3_info;
 },
 Foreign.Storable.$fStorableDouble3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4JbM: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4JbV; else goto c4JbW;
       c4JbV: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableDouble3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JbW: // global
           I64[Sp - 24] = block_c4JbJ_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4Jc6; else goto c4JbK;
       u4Jc6: // global
           call _c4JbJ(R1) args: 0, res: 0, upd: 0;
       c4JbK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableDouble3_info" {
     Foreign.Storable.$fStorableDouble3_info:
         const Foreign.Storable.$fStorableDouble3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4JbJ() //  [R1]
         { []
         }
     {offset
       c4JbJ: // global
           I64[Sp] = block_c4JbP_info;
           _s4It5::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4It5::I64;
           if (R1 & 7 != 0) goto u4Jc5; else goto c4JbQ;
       u4Jc5: // global
           call _c4JbP(R1) args: 0, res: 0, upd: 0;
       c4JbQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JbJ_info" {
     block_c4JbJ_info:
         const _c4JbJ;
         const 2;
         const 30;
 },
 _c4JbP() //  [R1]
         { []
         }
     {offset
       c4JbP: // global
           I64[Sp] = block_c4JbU_info;
           _s4It7::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4It7::I64;
           if (R1 & 7 != 0) goto u4Jc7; else goto c4JbZ;
       u4Jc7: // global
           call _c4JbU(R1) args: 0, res: 0, upd: 0;
       c4JbZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JbP_info" {
     block_c4JbP_info:
         const _c4JbP;
         const 66;
         const 30;
 },
 _c4JbU() //  [R1]
         { []
         }
     {offset
       c4JbU: // global
           F64[I64[Sp + 8] + I64[Sp + 16]] = F64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JbU_info" {
     block_c4JbU_info:
         const _c4JbU;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.587738286 UTC

[section ""data" . Foreign.Storable.$fStorableDouble_closure" {
     Foreign.Storable.$fStorableDouble_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableDouble_$calignment_closure+1;
         const Foreign.Storable.$fStorableDouble_$calignment_closure+1;
         const GHC.Storable.readDoubleOffPtr1_closure+3;
         const GHC.Storable.writeDoubleOffPtr1_closure+4;
         const Foreign.Storable.$fStorableDouble4_closure+3;
         const Foreign.Storable.$fStorableDouble3_closure+4;
         const Foreign.Storable.$fStorableDouble2_closure+2;
         const Foreign.Storable.$fStorableDouble1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.591300985 UTC

[section ""data" . Foreign.Storable.$fStorableFloat2_closure" {
     Foreign.Storable.$fStorableFloat2_closure:
         const Foreign.Storable.$fStorableFloat2_info;
 },
 Foreign.Storable.$fStorableFloat2_entry() //  [R2]
         { []
         }
     {offset
       c4JcF: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4JcJ; else goto c4JcK;
       c4JcJ: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFloat2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4JcK: // global
           I64[Sp - 8] = block_c4JcC_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4JcO; else goto c4JcD;
       u4JcO: // global
           call _c4JcC(R1) args: 0, res: 0, upd: 0;
       c4JcD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFloat2_info" {
     Foreign.Storable.$fStorableFloat2_info:
         const Foreign.Storable.$fStorableFloat2_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4JcC() //  [R1]
         { []
         }
     {offset
       c4JcC: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JcN; else goto c4JcM;
       c4JcN: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4JcM: // global
           _s4Iti::F32 = F32[I64[R1 + 7]];
           I64[Hp - 8] = GHC.Types.F#_con_info;
           F32[Hp] = _s4Iti::F32;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JcC_info" {
     block_c4JcC_info:
         const _c4JcC;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.598226588 UTC

[section ""data" . Foreign.Storable.$fStorableFloat4_closure" {
     Foreign.Storable.$fStorableFloat4_closure:
         const Foreign.Storable.$fStorableFloat4_info;
 },
 Foreign.Storable.$fStorableFloat4_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Jd9: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4Jdl; else goto c4Jdm;
       c4Jdl: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFloat4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Jdm: // global
           I64[Sp - 16] = block_c4Jd6_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4Jds; else goto c4Jd7;
       u4Jds: // global
           call _c4Jd6(R1) args: 0, res: 0, upd: 0;
       c4Jd7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFloat4_info" {
     Foreign.Storable.$fStorableFloat4_info:
         const Foreign.Storable.$fStorableFloat4_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4Jd6() //  [R1]
         { []
         }
     {offset
       c4Jd6: // global
           I64[Sp] = block_c4Jdc_info;
           _s4Ito::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Ito::I64;
           if (R1 & 7 != 0) goto u4Jdr; else goto c4Jdd;
       u4Jdr: // global
           call _c4Jdc(R1) args: 0, res: 0, upd: 0;
       c4Jdd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jd6_info" {
     block_c4Jd6_info:
         const _c4Jd6;
         const 1;
         const 30;
 },
 _c4Jdc() //  [R1]
         { []
         }
     {offset
       c4Jdc: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Jdq; else goto c4Jdp;
       c4Jdq: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Jdp: // global
           _s4Itu::F32 = F32[I64[Sp + 8] + I64[R1 + 7]];
           I64[Hp - 8] = GHC.Types.F#_con_info;
           F32[Hp] = _s4Itu::F32;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jdc_info" {
     block_c4Jdc_info:
         const _c4Jdc;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.606368091 UTC

[section ""data" . Foreign.Storable.$fStorableFloat1_closure" {
     Foreign.Storable.$fStorableFloat1_closure:
         const Foreign.Storable.$fStorableFloat1_info;
 },
 Foreign.Storable.$fStorableFloat1_entry() //  [R2, R3]
         { []
         }
     {offset
       c4JdT: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JdX; else goto c4JdY;
       c4JdX: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFloat1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JdY: // global
           I64[Sp - 16] = block_c4JdQ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4Je6; else goto c4JdR;
       u4Je6: // global
           call _c4JdQ(R1) args: 0, res: 0, upd: 0;
       c4JdR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFloat1_info" {
     Foreign.Storable.$fStorableFloat1_info:
         const Foreign.Storable.$fStorableFloat1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4JdQ() //  [R1]
         { []
         }
     {offset
       c4JdQ: // global
           I64[Sp] = block_c4JdW_info;
           _s4ItA::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4ItA::I64;
           if (R1 & 7 != 0) goto u4Je5; else goto c4Je0;
       u4Je5: // global
           call _c4JdW(R1) args: 0, res: 0, upd: 0;
       c4Je0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JdQ_info" {
     block_c4JdQ_info:
         const _c4JdQ;
         const 1;
         const 30;
 },
 _c4JdW() //  [R1]
         { []
         }
     {offset
       c4JdW: // global
           F32[I64[Sp + 8]] = F32[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JdW_info" {
     block_c4JdW_info:
         const _c4JdW;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.614633199 UTC

[section ""data" . Foreign.Storable.$fStorableFloat3_closure" {
     Foreign.Storable.$fStorableFloat3_closure:
         const Foreign.Storable.$fStorableFloat3_info;
 },
 Foreign.Storable.$fStorableFloat3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4Jex: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4JeG; else goto c4JeH;
       c4JeG: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFloat3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JeH: // global
           I64[Sp - 24] = block_c4Jeu_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4JeR; else goto c4Jev;
       u4JeR: // global
           call _c4Jeu(R1) args: 0, res: 0, upd: 0;
       c4Jev: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFloat3_info" {
     Foreign.Storable.$fStorableFloat3_info:
         const Foreign.Storable.$fStorableFloat3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4Jeu() //  [R1]
         { []
         }
     {offset
       c4Jeu: // global
           I64[Sp] = block_c4JeA_info;
           _s4ItJ::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4ItJ::I64;
           if (R1 & 7 != 0) goto u4JeQ; else goto c4JeB;
       u4JeQ: // global
           call _c4JeA(R1) args: 0, res: 0, upd: 0;
       c4JeB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jeu_info" {
     block_c4Jeu_info:
         const _c4Jeu;
         const 2;
         const 30;
 },
 _c4JeA() //  [R1]
         { []
         }
     {offset
       c4JeA: // global
           I64[Sp] = block_c4JeF_info;
           _s4ItL::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4ItL::I64;
           if (R1 & 7 != 0) goto u4JeS; else goto c4JeK;
       u4JeS: // global
           call _c4JeF(R1) args: 0, res: 0, upd: 0;
       c4JeK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JeA_info" {
     block_c4JeA_info:
         const _c4JeA;
         const 66;
         const 30;
 },
 _c4JeF() //  [R1]
         { []
         }
     {offset
       c4JeF: // global
           F32[I64[Sp + 8] + I64[Sp + 16]] = F32[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JeF_info" {
     block_c4JeF_info:
         const _c4JeF;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.623691121 UTC

[section ""data" . Foreign.Storable.$fStorableFloat_closure" {
     Foreign.Storable.$fStorableFloat_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableFloat_$calignment_closure+1;
         const Foreign.Storable.$fStorableFloat_$calignment_closure+1;
         const GHC.Storable.readFloatOffPtr1_closure+3;
         const GHC.Storable.writeFloatOffPtr1_closure+4;
         const Foreign.Storable.$fStorableFloat4_closure+3;
         const Foreign.Storable.$fStorableFloat3_closure+4;
         const Foreign.Storable.$fStorableFloat2_closure+2;
         const Foreign.Storable.$fStorableFloat1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.62673018 UTC

[section ""data" . Foreign.Storable.$fStorableStablePtr2_closure" {
     Foreign.Storable.$fStorableStablePtr2_closure:
         const Foreign.Storable.$fStorableStablePtr2_info;
 },
 Foreign.Storable.$fStorableStablePtr2_entry() //  [R2]
         { []
         }
     {offset
       c4Jfq: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4Jfu; else goto c4Jfv;
       c4Jfu: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableStablePtr2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4Jfv: // global
           I64[Sp - 8] = block_c4Jfn_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4Jfz; else goto c4Jfo;
       u4Jfz: // global
           call _c4Jfn(R1) args: 0, res: 0, upd: 0;
       c4Jfo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableStablePtr2_info" {
     Foreign.Storable.$fStorableStablePtr2_info:
         const Foreign.Storable.$fStorableStablePtr2_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4Jfn() //  [R1]
         { []
         }
     {offset
       c4Jfn: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Jfy; else goto c4Jfx;
       c4Jfy: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Jfx: // global
           _s4ItW::I64 = I64[I64[R1 + 7]];
           I64[Hp - 8] = GHC.Stable.StablePtr_con_info;
           I64[Hp] = _s4ItW::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jfn_info" {
     block_c4Jfn_info:
         const _c4Jfn;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.634010983 UTC

[section ""data" . Foreign.Storable.$fStorableStablePtr4_closure" {
     Foreign.Storable.$fStorableStablePtr4_closure:
         const Foreign.Storable.$fStorableStablePtr4_info;
 },
 Foreign.Storable.$fStorableStablePtr4_entry() //  [R2, R3]
         { []
         }
     {offset
       c4JfU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4Jg6; else goto c4Jg7;
       c4Jg6: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableStablePtr4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Jg7: // global
           I64[Sp - 16] = block_c4JfR_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4Jgd; else goto c4JfS;
       u4Jgd: // global
           call _c4JfR(R1) args: 0, res: 0, upd: 0;
       c4JfS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableStablePtr4_info" {
     Foreign.Storable.$fStorableStablePtr4_info:
         const Foreign.Storable.$fStorableStablePtr4_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4JfR() //  [R1]
         { []
         }
     {offset
       c4JfR: // global
           I64[Sp] = block_c4JfX_info;
           _s4Iu2::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Iu2::I64;
           if (R1 & 7 != 0) goto u4Jgc; else goto c4JfY;
       u4Jgc: // global
           call _c4JfX(R1) args: 0, res: 0, upd: 0;
       c4JfY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JfR_info" {
     block_c4JfR_info:
         const _c4JfR;
         const 1;
         const 30;
 },
 _c4JfX() //  [R1]
         { []
         }
     {offset
       c4JfX: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Jgb; else goto c4Jga;
       c4Jgb: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Jga: // global
           _s4Iu8::I64 = I64[I64[Sp + 8] + I64[R1 + 7]];
           I64[Hp - 8] = GHC.Stable.StablePtr_con_info;
           I64[Hp] = _s4Iu8::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JfX_info" {
     block_c4JfX_info:
         const _c4JfX;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.642632308 UTC

[section ""data" . Foreign.Storable.$fStorableStablePtr1_closure" {
     Foreign.Storable.$fStorableStablePtr1_closure:
         const Foreign.Storable.$fStorableStablePtr1_info;
 },
 Foreign.Storable.$fStorableStablePtr1_entry() //  [R2, R3]
         { []
         }
     {offset
       c4JgE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JgI; else goto c4JgJ;
       c4JgI: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableStablePtr1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JgJ: // global
           I64[Sp - 16] = block_c4JgB_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4JgR; else goto c4JgC;
       u4JgR: // global
           call _c4JgB(R1) args: 0, res: 0, upd: 0;
       c4JgC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableStablePtr1_info" {
     Foreign.Storable.$fStorableStablePtr1_info:
         const Foreign.Storable.$fStorableStablePtr1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4JgB() //  [R1]
         { []
         }
     {offset
       c4JgB: // global
           I64[Sp] = block_c4JgH_info;
           _s4Iue::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Iue::I64;
           if (R1 & 7 != 0) goto u4JgQ; else goto c4JgL;
       u4JgQ: // global
           call _c4JgH(R1) args: 0, res: 0, upd: 0;
       c4JgL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JgB_info" {
     block_c4JgB_info:
         const _c4JgB;
         const 1;
         const 30;
 },
 _c4JgH() //  [R1]
         { []
         }
     {offset
       c4JgH: // global
           I64[I64[Sp + 8]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JgH_info" {
     block_c4JgH_info:
         const _c4JgH;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.651070693 UTC

[section ""data" . Foreign.Storable.$fStorableStablePtr3_closure" {
     Foreign.Storable.$fStorableStablePtr3_closure:
         const Foreign.Storable.$fStorableStablePtr3_info;
 },
 Foreign.Storable.$fStorableStablePtr3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4Jhi: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4Jhr; else goto c4Jhs;
       c4Jhr: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableStablePtr3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Jhs: // global
           I64[Sp - 24] = block_c4Jhf_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4JhC; else goto c4Jhg;
       u4JhC: // global
           call _c4Jhf(R1) args: 0, res: 0, upd: 0;
       c4Jhg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableStablePtr3_info" {
     Foreign.Storable.$fStorableStablePtr3_info:
         const Foreign.Storable.$fStorableStablePtr3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4Jhf() //  [R1]
         { []
         }
     {offset
       c4Jhf: // global
           I64[Sp] = block_c4Jhl_info;
           _s4Iun::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Iun::I64;
           if (R1 & 7 != 0) goto u4JhB; else goto c4Jhm;
       u4JhB: // global
           call _c4Jhl(R1) args: 0, res: 0, upd: 0;
       c4Jhm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jhf_info" {
     block_c4Jhf_info:
         const _c4Jhf;
         const 2;
         const 30;
 },
 _c4Jhl() //  [R1]
         { []
         }
     {offset
       c4Jhl: // global
           I64[Sp] = block_c4Jhq_info;
           _s4Iup::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Iup::I64;
           if (R1 & 7 != 0) goto u4JhD; else goto c4Jhv;
       u4JhD: // global
           call _c4Jhq(R1) args: 0, res: 0, upd: 0;
       c4Jhv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jhl_info" {
     block_c4Jhl_info:
         const _c4Jhl;
         const 66;
         const 30;
 },
 _c4Jhq() //  [R1]
         { []
         }
     {offset
       c4Jhq: // global
           I64[I64[Sp + 8] + I64[Sp + 16]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jhq_info" {
     block_c4Jhq_info:
         const _c4Jhq;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.660074364 UTC

[section ""data" . Foreign.Storable.$fStorableStablePtr_closure" {
     Foreign.Storable.$fStorableStablePtr_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableStablePtr_$calignment_closure+1;
         const Foreign.Storable.$fStorableStablePtr_$calignment_closure+1;
         const GHC.Storable.readStablePtrOffPtr1_closure+3;
         const GHC.Storable.writeStablePtrOffPtr1_closure+4;
         const Foreign.Storable.$fStorableStablePtr4_closure+3;
         const Foreign.Storable.$fStorableStablePtr3_closure+4;
         const Foreign.Storable.$fStorableStablePtr2_closure+2;
         const Foreign.Storable.$fStorableStablePtr1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.663025464 UTC

[section ""data" . Foreign.Storable.$fStorableFunPtr2_closure" {
     Foreign.Storable.$fStorableFunPtr2_closure:
         const Foreign.Storable.$fStorableFunPtr2_info;
 },
 Foreign.Storable.$fStorableFunPtr2_entry() //  [R2]
         { []
         }
     {offset
       c4Jib: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4Jif; else goto c4Jig;
       c4Jif: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFunPtr2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4Jig: // global
           I64[Sp - 8] = block_c4Ji8_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4Jik; else goto c4Ji9;
       u4Jik: // global
           call _c4Ji8(R1) args: 0, res: 0, upd: 0;
       c4Ji9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFunPtr2_info" {
     Foreign.Storable.$fStorableFunPtr2_info:
         const Foreign.Storable.$fStorableFunPtr2_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4Ji8() //  [R1]
         { []
         }
     {offset
       c4Ji8: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Jij; else goto c4Jii;
       c4Jij: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Jii: // global
           _s4IuA::I64 = I64[I64[R1 + 7]];
           I64[Hp - 8] = GHC.Ptr.FunPtr_con_info;
           I64[Hp] = _s4IuA::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Ji8_info" {
     block_c4Ji8_info:
         const _c4Ji8;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.670413805 UTC

[section ""data" . Foreign.Storable.$fStorableFunPtr4_closure" {
     Foreign.Storable.$fStorableFunPtr4_closure:
         const Foreign.Storable.$fStorableFunPtr4_info;
 },
 Foreign.Storable.$fStorableFunPtr4_entry() //  [R2, R3]
         { []
         }
     {offset
       c4JiF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JiR; else goto c4JiS;
       c4JiR: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFunPtr4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JiS: // global
           I64[Sp - 16] = block_c4JiC_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4JiY; else goto c4JiD;
       u4JiY: // global
           call _c4JiC(R1) args: 0, res: 0, upd: 0;
       c4JiD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFunPtr4_info" {
     Foreign.Storable.$fStorableFunPtr4_info:
         const Foreign.Storable.$fStorableFunPtr4_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4JiC() //  [R1]
         { []
         }
     {offset
       c4JiC: // global
           I64[Sp] = block_c4JiI_info;
           _s4IuG::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IuG::I64;
           if (R1 & 7 != 0) goto u4JiX; else goto c4JiJ;
       u4JiX: // global
           call _c4JiI(R1) args: 0, res: 0, upd: 0;
       c4JiJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JiC_info" {
     block_c4JiC_info:
         const _c4JiC;
         const 1;
         const 30;
 },
 _c4JiI() //  [R1]
         { []
         }
     {offset
       c4JiI: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JiW; else goto c4JiV;
       c4JiW: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4JiV: // global
           _s4IuM::I64 = I64[I64[Sp + 8] + I64[R1 + 7]];
           I64[Hp - 8] = GHC.Ptr.FunPtr_con_info;
           I64[Hp] = _s4IuM::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JiI_info" {
     block_c4JiI_info:
         const _c4JiI;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.679320801 UTC

[section ""data" . Foreign.Storable.$fStorableFunPtr1_closure" {
     Foreign.Storable.$fStorableFunPtr1_closure:
         const Foreign.Storable.$fStorableFunPtr1_info;
 },
 Foreign.Storable.$fStorableFunPtr1_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Jjp: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4Jjt; else goto c4Jju;
       c4Jjt: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFunPtr1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Jju: // global
           I64[Sp - 16] = block_c4Jjm_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4JjC; else goto c4Jjn;
       u4JjC: // global
           call _c4Jjm(R1) args: 0, res: 0, upd: 0;
       c4Jjn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFunPtr1_info" {
     Foreign.Storable.$fStorableFunPtr1_info:
         const Foreign.Storable.$fStorableFunPtr1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4Jjm() //  [R1]
         { []
         }
     {offset
       c4Jjm: // global
           I64[Sp] = block_c4Jjs_info;
           _s4IuS::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IuS::I64;
           if (R1 & 7 != 0) goto u4JjB; else goto c4Jjw;
       u4JjB: // global
           call _c4Jjs(R1) args: 0, res: 0, upd: 0;
       c4Jjw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jjm_info" {
     block_c4Jjm_info:
         const _c4Jjm;
         const 1;
         const 30;
 },
 _c4Jjs() //  [R1]
         { []
         }
     {offset
       c4Jjs: // global
           I64[I64[Sp + 8]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jjs_info" {
     block_c4Jjs_info:
         const _c4Jjs;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.688243953 UTC

[section ""data" . Foreign.Storable.$fStorableFunPtr3_closure" {
     Foreign.Storable.$fStorableFunPtr3_closure:
         const Foreign.Storable.$fStorableFunPtr3_info;
 },
 Foreign.Storable.$fStorableFunPtr3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4Jk3: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4Jkc; else goto c4Jkd;
       c4Jkc: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFunPtr3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Jkd: // global
           I64[Sp - 24] = block_c4Jk0_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4Jkn; else goto c4Jk1;
       u4Jkn: // global
           call _c4Jk0(R1) args: 0, res: 0, upd: 0;
       c4Jk1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFunPtr3_info" {
     Foreign.Storable.$fStorableFunPtr3_info:
         const Foreign.Storable.$fStorableFunPtr3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4Jk0() //  [R1]
         { []
         }
     {offset
       c4Jk0: // global
           I64[Sp] = block_c4Jk6_info;
           _s4Iv1::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Iv1::I64;
           if (R1 & 7 != 0) goto u4Jkm; else goto c4Jk7;
       u4Jkm: // global
           call _c4Jk6(R1) args: 0, res: 0, upd: 0;
       c4Jk7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jk0_info" {
     block_c4Jk0_info:
         const _c4Jk0;
         const 2;
         const 30;
 },
 _c4Jk6() //  [R1]
         { []
         }
     {offset
       c4Jk6: // global
           I64[Sp] = block_c4Jkb_info;
           _s4Iv3::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Iv3::I64;
           if (R1 & 7 != 0) goto u4Jko; else goto c4Jkg;
       u4Jko: // global
           call _c4Jkb(R1) args: 0, res: 0, upd: 0;
       c4Jkg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jk6_info" {
     block_c4Jk6_info:
         const _c4Jk6;
         const 66;
         const 30;
 },
 _c4Jkb() //  [R1]
         { []
         }
     {offset
       c4Jkb: // global
           I64[I64[Sp + 8] + I64[Sp + 16]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jkb_info" {
     block_c4Jkb_info:
         const _c4Jkb;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.700750586 UTC

[section ""data" . Foreign.Storable.$fStorableFunPtr_closure" {
     Foreign.Storable.$fStorableFunPtr_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableFunPtr_$calignment_closure+1;
         const Foreign.Storable.$fStorableFunPtr_$calignment_closure+1;
         const GHC.Storable.readFunPtrOffPtr1_closure+3;
         const GHC.Storable.writeFunPtrOffPtr1_closure+4;
         const Foreign.Storable.$fStorableFunPtr4_closure+3;
         const Foreign.Storable.$fStorableFunPtr3_closure+4;
         const Foreign.Storable.$fStorableFunPtr2_closure+2;
         const Foreign.Storable.$fStorableFunPtr1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.703785569 UTC

[section ""data" . Foreign.Storable.$fStorablePtr2_closure" {
     Foreign.Storable.$fStorablePtr2_closure:
         const Foreign.Storable.$fStorablePtr2_info;
 },
 Foreign.Storable.$fStorablePtr2_entry() //  [R2]
         { []
         }
     {offset
       c4JkW: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4Jl0; else goto c4Jl1;
       c4Jl0: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorablePtr2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4Jl1: // global
           I64[Sp - 8] = block_c4JkT_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4Jl5; else goto c4JkU;
       u4Jl5: // global
           call _c4JkT(R1) args: 0, res: 0, upd: 0;
       c4JkU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorablePtr2_info" {
     Foreign.Storable.$fStorablePtr2_info:
         const Foreign.Storable.$fStorablePtr2_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4JkT() //  [R1]
         { []
         }
     {offset
       c4JkT: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Jl4; else goto c4Jl3;
       c4Jl4: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Jl3: // global
           _s4Ive::I64 = I64[I64[R1 + 7]];
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4Ive::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JkT_info" {
     block_c4JkT_info:
         const _c4JkT;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.71086282 UTC

[section ""data" . Foreign.Storable.$fStorablePtr4_closure" {
     Foreign.Storable.$fStorablePtr4_closure:
         const Foreign.Storable.$fStorablePtr4_info;
 },
 Foreign.Storable.$fStorablePtr4_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Jlq: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JlC; else goto c4JlD;
       c4JlC: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorablePtr4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JlD: // global
           I64[Sp - 16] = block_c4Jln_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4JlJ; else goto c4Jlo;
       u4JlJ: // global
           call _c4Jln(R1) args: 0, res: 0, upd: 0;
       c4Jlo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorablePtr4_info" {
     Foreign.Storable.$fStorablePtr4_info:
         const Foreign.Storable.$fStorablePtr4_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4Jln() //  [R1]
         { []
         }
     {offset
       c4Jln: // global
           I64[Sp] = block_c4Jlt_info;
           _s4Ivk::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Ivk::I64;
           if (R1 & 7 != 0) goto u4JlI; else goto c4Jlu;
       u4JlI: // global
           call _c4Jlt(R1) args: 0, res: 0, upd: 0;
       c4Jlu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jln_info" {
     block_c4Jln_info:
         const _c4Jln;
         const 1;
         const 30;
 },
 _c4Jlt() //  [R1]
         { []
         }
     {offset
       c4Jlt: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JlH; else goto c4JlG;
       c4JlH: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4JlG: // global
           _s4Ivq::I64 = I64[I64[Sp + 8] + I64[R1 + 7]];
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4Ivq::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jlt_info" {
     block_c4Jlt_info:
         const _c4Jlt;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.71988309 UTC

[section ""data" . Foreign.Storable.$fStorablePtr1_closure" {
     Foreign.Storable.$fStorablePtr1_closure:
         const Foreign.Storable.$fStorablePtr1_info;
 },
 Foreign.Storable.$fStorablePtr1_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Jma: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4Jme; else goto c4Jmf;
       c4Jme: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorablePtr1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Jmf: // global
           I64[Sp - 16] = block_c4Jm7_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4Jmn; else goto c4Jm8;
       u4Jmn: // global
           call _c4Jm7(R1) args: 0, res: 0, upd: 0;
       c4Jm8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorablePtr1_info" {
     Foreign.Storable.$fStorablePtr1_info:
         const Foreign.Storable.$fStorablePtr1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4Jm7() //  [R1]
         { []
         }
     {offset
       c4Jm7: // global
           I64[Sp] = block_c4Jmd_info;
           _s4Ivw::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Ivw::I64;
           if (R1 & 7 != 0) goto u4Jmm; else goto c4Jmh;
       u4Jmm: // global
           call _c4Jmd(R1) args: 0, res: 0, upd: 0;
       c4Jmh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jm7_info" {
     block_c4Jm7_info:
         const _c4Jm7;
         const 1;
         const 30;
 },
 _c4Jmd() //  [R1]
         { []
         }
     {offset
       c4Jmd: // global
           I64[I64[Sp + 8]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jmd_info" {
     block_c4Jmd_info:
         const _c4Jmd;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.729365953 UTC

[section ""data" . Foreign.Storable.$fStorablePtr3_closure" {
     Foreign.Storable.$fStorablePtr3_closure:
         const Foreign.Storable.$fStorablePtr3_info;
 },
 Foreign.Storable.$fStorablePtr3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4JmO: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4JmX; else goto c4JmY;
       c4JmX: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorablePtr3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JmY: // global
           I64[Sp - 24] = block_c4JmL_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4Jn8; else goto c4JmM;
       u4Jn8: // global
           call _c4JmL(R1) args: 0, res: 0, upd: 0;
       c4JmM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorablePtr3_info" {
     Foreign.Storable.$fStorablePtr3_info:
         const Foreign.Storable.$fStorablePtr3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4JmL() //  [R1]
         { []
         }
     {offset
       c4JmL: // global
           I64[Sp] = block_c4JmR_info;
           _s4IvF::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IvF::I64;
           if (R1 & 7 != 0) goto u4Jn7; else goto c4JmS;
       u4Jn7: // global
           call _c4JmR(R1) args: 0, res: 0, upd: 0;
       c4JmS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JmL_info" {
     block_c4JmL_info:
         const _c4JmL;
         const 2;
         const 30;
 },
 _c4JmR() //  [R1]
         { []
         }
     {offset
       c4JmR: // global
           I64[Sp] = block_c4JmW_info;
           _s4IvH::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4IvH::I64;
           if (R1 & 7 != 0) goto u4Jn9; else goto c4Jn1;
       u4Jn9: // global
           call _c4JmW(R1) args: 0, res: 0, upd: 0;
       c4Jn1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JmR_info" {
     block_c4JmR_info:
         const _c4JmR;
         const 66;
         const 30;
 },
 _c4JmW() //  [R1]
         { []
         }
     {offset
       c4JmW: // global
           I64[I64[Sp + 8] + I64[Sp + 16]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JmW_info" {
     block_c4JmW_info:
         const _c4JmW;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.737989224 UTC

[section ""data" . Foreign.Storable.$fStorablePtr_closure" {
     Foreign.Storable.$fStorablePtr_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorablePtr_$calignment_closure+1;
         const Foreign.Storable.$fStorablePtr_$calignment_closure+1;
         const GHC.Storable.readPtrOffPtr1_closure+3;
         const GHC.Storable.writePtrOffPtr1_closure+4;
         const Foreign.Storable.$fStorablePtr4_closure+3;
         const Foreign.Storable.$fStorablePtr3_closure+4;
         const Foreign.Storable.$fStorablePtr2_closure+2;
         const Foreign.Storable.$fStorablePtr1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.741330926 UTC

[section ""data" . Foreign.Storable.$fStorableWord2_closure" {
     Foreign.Storable.$fStorableWord2_closure:
         const Foreign.Storable.$fStorableWord2_info;
 },
 Foreign.Storable.$fStorableWord2_entry() //  [R2]
         { []
         }
     {offset
       c4JnH: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4JnL; else goto c4JnM;
       c4JnL: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4JnM: // global
           I64[Sp - 8] = block_c4JnE_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4JnQ; else goto c4JnF;
       u4JnQ: // global
           call _c4JnE(R1) args: 0, res: 0, upd: 0;
       c4JnF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord2_info" {
     Foreign.Storable.$fStorableWord2_info:
         const Foreign.Storable.$fStorableWord2_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4JnE() //  [R1]
         { []
         }
     {offset
       c4JnE: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JnP; else goto c4JnO;
       c4JnP: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4JnO: // global
           _s4IvS::I64 = I64[I64[R1 + 7]];
           I64[Hp - 8] = GHC.Types.W#_con_info;
           I64[Hp] = _s4IvS::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JnE_info" {
     block_c4JnE_info:
         const _c4JnE;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.748691802 UTC

[section ""data" . Foreign.Storable.$fStorableWord4_closure" {
     Foreign.Storable.$fStorableWord4_closure:
         const Foreign.Storable.$fStorableWord4_info;
 },
 Foreign.Storable.$fStorableWord4_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Job: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4Jon; else goto c4Joo;
       c4Jon: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Joo: // global
           I64[Sp - 16] = block_c4Jo8_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4Jou; else goto c4Jo9;
       u4Jou: // global
           call _c4Jo8(R1) args: 0, res: 0, upd: 0;
       c4Jo9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord4_info" {
     Foreign.Storable.$fStorableWord4_info:
         const Foreign.Storable.$fStorableWord4_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4Jo8() //  [R1]
         { []
         }
     {offset
       c4Jo8: // global
           I64[Sp] = block_c4Joe_info;
           _s4IvY::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IvY::I64;
           if (R1 & 7 != 0) goto u4Jot; else goto c4Jof;
       u4Jot: // global
           call _c4Joe(R1) args: 0, res: 0, upd: 0;
       c4Jof: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jo8_info" {
     block_c4Jo8_info:
         const _c4Jo8;
         const 1;
         const 30;
 },
 _c4Joe() //  [R1]
         { []
         }
     {offset
       c4Joe: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Jos; else goto c4Jor;
       c4Jos: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Jor: // global
           _s4Iw4::I64 = I64[I64[Sp + 8] + I64[R1 + 7]];
           I64[Hp - 8] = GHC.Types.W#_con_info;
           I64[Hp] = _s4Iw4::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Joe_info" {
     block_c4Joe_info:
         const _c4Joe;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.757439262 UTC

[section ""data" . Foreign.Storable.$fStorableWord1_closure" {
     Foreign.Storable.$fStorableWord1_closure:
         const Foreign.Storable.$fStorableWord1_info;
 },
 Foreign.Storable.$fStorableWord1_entry() //  [R2, R3]
         { []
         }
     {offset
       c4JoV: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JoZ; else goto c4Jp0;
       c4JoZ: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Jp0: // global
           I64[Sp - 16] = block_c4JoS_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4Jp8; else goto c4JoT;
       u4Jp8: // global
           call _c4JoS(R1) args: 0, res: 0, upd: 0;
       c4JoT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord1_info" {
     Foreign.Storable.$fStorableWord1_info:
         const Foreign.Storable.$fStorableWord1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4JoS() //  [R1]
         { []
         }
     {offset
       c4JoS: // global
           I64[Sp] = block_c4JoY_info;
           _s4Iwa::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Iwa::I64;
           if (R1 & 7 != 0) goto u4Jp7; else goto c4Jp2;
       u4Jp7: // global
           call _c4JoY(R1) args: 0, res: 0, upd: 0;
       c4Jp2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JoS_info" {
     block_c4JoS_info:
         const _c4JoS;
         const 1;
         const 30;
 },
 _c4JoY() //  [R1]
         { []
         }
     {offset
       c4JoY: // global
           I64[I64[Sp + 8]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JoY_info" {
     block_c4JoY_info:
         const _c4JoY;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.766323198 UTC

[section ""data" . Foreign.Storable.$fStorableWord3_closure" {
     Foreign.Storable.$fStorableWord3_closure:
         const Foreign.Storable.$fStorableWord3_info;
 },
 Foreign.Storable.$fStorableWord3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4Jpz: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4JpI; else goto c4JpJ;
       c4JpI: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JpJ: // global
           I64[Sp - 24] = block_c4Jpw_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4JpT; else goto c4Jpx;
       u4JpT: // global
           call _c4Jpw(R1) args: 0, res: 0, upd: 0;
       c4Jpx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord3_info" {
     Foreign.Storable.$fStorableWord3_info:
         const Foreign.Storable.$fStorableWord3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4Jpw() //  [R1]
         { []
         }
     {offset
       c4Jpw: // global
           I64[Sp] = block_c4JpC_info;
           _s4Iwj::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Iwj::I64;
           if (R1 & 7 != 0) goto u4JpS; else goto c4JpD;
       u4JpS: // global
           call _c4JpC(R1) args: 0, res: 0, upd: 0;
       c4JpD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jpw_info" {
     block_c4Jpw_info:
         const _c4Jpw;
         const 2;
         const 30;
 },
 _c4JpC() //  [R1]
         { []
         }
     {offset
       c4JpC: // global
           I64[Sp] = block_c4JpH_info;
           _s4Iwl::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Iwl::I64;
           if (R1 & 7 != 0) goto u4JpU; else goto c4JpM;
       u4JpU: // global
           call _c4JpH(R1) args: 0, res: 0, upd: 0;
       c4JpM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JpC_info" {
     block_c4JpC_info:
         const _c4JpC;
         const 66;
         const 30;
 },
 _c4JpH() //  [R1]
         { []
         }
     {offset
       c4JpH: // global
           I64[I64[Sp + 8] + I64[Sp + 16]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JpH_info" {
     block_c4JpH_info:
         const _c4JpH;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.775414572 UTC

[section ""data" . Foreign.Storable.$fStorableWord_closure" {
     Foreign.Storable.$fStorableWord_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableWord_$calignment_closure+1;
         const Foreign.Storable.$fStorableWord_$calignment_closure+1;
         const GHC.Storable.readWordOffPtr1_closure+3;
         const GHC.Storable.writeWordOffPtr1_closure+4;
         const Foreign.Storable.$fStorableWord4_closure+3;
         const Foreign.Storable.$fStorableWord3_closure+4;
         const Foreign.Storable.$fStorableWord2_closure+2;
         const Foreign.Storable.$fStorableWord1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.778355402 UTC

[section ""data" . Foreign.Storable.$fStorableInt2_closure" {
     Foreign.Storable.$fStorableInt2_closure:
         const Foreign.Storable.$fStorableInt2_info;
 },
 Foreign.Storable.$fStorableInt2_entry() //  [R2]
         { []
         }
     {offset
       c4Jqs: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4Jqw; else goto c4Jqx;
       c4Jqw: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4Jqx: // global
           I64[Sp - 8] = block_c4Jqp_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4JqB; else goto c4Jqq;
       u4JqB: // global
           call _c4Jqp(R1) args: 0, res: 0, upd: 0;
       c4Jqq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt2_info" {
     Foreign.Storable.$fStorableInt2_info:
         const Foreign.Storable.$fStorableInt2_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4Jqp() //  [R1]
         { []
         }
     {offset
       c4Jqp: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JqA; else goto c4Jqz;
       c4JqA: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Jqz: // global
           _s4Iww::I64 = I64[I64[R1 + 7]];
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s4Iww::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jqp_info" {
     block_c4Jqp_info:
         const _c4Jqp;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.785715757 UTC

[section ""data" . Foreign.Storable.$fStorableInt4_closure" {
     Foreign.Storable.$fStorableInt4_closure:
         const Foreign.Storable.$fStorableInt4_info;
 },
 Foreign.Storable.$fStorableInt4_entry() //  [R2, R3]
         { []
         }
     {offset
       c4JqW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4Jr8; else goto c4Jr9;
       c4Jr8: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Jr9: // global
           I64[Sp - 16] = block_c4JqT_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4Jrf; else goto c4JqU;
       u4Jrf: // global
           call _c4JqT(R1) args: 0, res: 0, upd: 0;
       c4JqU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt4_info" {
     Foreign.Storable.$fStorableInt4_info:
         const Foreign.Storable.$fStorableInt4_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4JqT() //  [R1]
         { []
         }
     {offset
       c4JqT: // global
           I64[Sp] = block_c4JqZ_info;
           _s4IwC::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IwC::I64;
           if (R1 & 7 != 0) goto u4Jre; else goto c4Jr0;
       u4Jre: // global
           call _c4JqZ(R1) args: 0, res: 0, upd: 0;
       c4Jr0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JqT_info" {
     block_c4JqT_info:
         const _c4JqT;
         const 1;
         const 30;
 },
 _c4JqZ() //  [R1]
         { []
         }
     {offset
       c4JqZ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Jrd; else goto c4Jrc;
       c4Jrd: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Jrc: // global
           _s4IwI::I64 = I64[I64[Sp + 8] + I64[R1 + 7]];
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s4IwI::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JqZ_info" {
     block_c4JqZ_info:
         const _c4JqZ;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.795098722 UTC

[section ""data" . Foreign.Storable.$fStorableInt1_closure" {
     Foreign.Storable.$fStorableInt1_closure:
         const Foreign.Storable.$fStorableInt1_info;
 },
 Foreign.Storable.$fStorableInt1_entry() //  [R2, R3]
         { []
         }
     {offset
       c4JrG: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JrK; else goto c4JrL;
       c4JrK: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JrL: // global
           I64[Sp - 16] = block_c4JrD_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4JrT; else goto c4JrE;
       u4JrT: // global
           call _c4JrD(R1) args: 0, res: 0, upd: 0;
       c4JrE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt1_info" {
     Foreign.Storable.$fStorableInt1_info:
         const Foreign.Storable.$fStorableInt1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4JrD() //  [R1]
         { []
         }
     {offset
       c4JrD: // global
           I64[Sp] = block_c4JrJ_info;
           _s4IwO::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IwO::I64;
           if (R1 & 7 != 0) goto u4JrS; else goto c4JrN;
       u4JrS: // global
           call _c4JrJ(R1) args: 0, res: 0, upd: 0;
       c4JrN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JrD_info" {
     block_c4JrD_info:
         const _c4JrD;
         const 1;
         const 30;
 },
 _c4JrJ() //  [R1]
         { []
         }
     {offset
       c4JrJ: // global
           I64[I64[Sp + 8]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JrJ_info" {
     block_c4JrJ_info:
         const _c4JrJ;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.805746333 UTC

[section ""data" . Foreign.Storable.$fStorableInt3_closure" {
     Foreign.Storable.$fStorableInt3_closure:
         const Foreign.Storable.$fStorableInt3_info;
 },
 Foreign.Storable.$fStorableInt3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4Jsk: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4Jst; else goto c4Jsu;
       c4Jst: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableInt3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Jsu: // global
           I64[Sp - 24] = block_c4Jsh_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4JsE; else goto c4Jsi;
       u4JsE: // global
           call _c4Jsh(R1) args: 0, res: 0, upd: 0;
       c4Jsi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableInt3_info" {
     Foreign.Storable.$fStorableInt3_info:
         const Foreign.Storable.$fStorableInt3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4Jsh() //  [R1]
         { []
         }
     {offset
       c4Jsh: // global
           I64[Sp] = block_c4Jsn_info;
           _s4IwX::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IwX::I64;
           if (R1 & 7 != 0) goto u4JsD; else goto c4Jso;
       u4JsD: // global
           call _c4Jsn(R1) args: 0, res: 0, upd: 0;
       c4Jso: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jsh_info" {
     block_c4Jsh_info:
         const _c4Jsh;
         const 2;
         const 30;
 },
 _c4Jsn() //  [R1]
         { []
         }
     {offset
       c4Jsn: // global
           I64[Sp] = block_c4Jss_info;
           _s4IwZ::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4IwZ::I64;
           if (R1 & 7 != 0) goto u4JsF; else goto c4Jsx;
       u4JsF: // global
           call _c4Jss(R1) args: 0, res: 0, upd: 0;
       c4Jsx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jsn_info" {
     block_c4Jsn_info:
         const _c4Jsn;
         const 66;
         const 30;
 },
 _c4Jss() //  [R1]
         { []
         }
     {offset
       c4Jss: // global
           I64[I64[Sp + 8] + I64[Sp + 16]] = I64[R1 + 7];
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jss_info" {
     block_c4Jss_info:
         const _c4Jss;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.818308482 UTC

[section ""data" . Foreign.Storable.$fStorableInt_closure" {
     Foreign.Storable.$fStorableInt_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableInt_$calignment_closure+1;
         const Foreign.Storable.$fStorableInt_$calignment_closure+1;
         const GHC.Storable.readIntOffPtr1_closure+3;
         const GHC.Storable.writeIntOffPtr1_closure+4;
         const Foreign.Storable.$fStorableInt4_closure+3;
         const Foreign.Storable.$fStorableInt3_closure+4;
         const Foreign.Storable.$fStorableInt2_closure+2;
         const Foreign.Storable.$fStorableInt1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.821414605 UTC

[section ""data" . Foreign.Storable.$fStorableChar2_closure" {
     Foreign.Storable.$fStorableChar2_closure:
         const Foreign.Storable.$fStorableChar2_info;
 },
 Foreign.Storable.$fStorableChar2_entry() //  [R2]
         { []
         }
     {offset
       c4Jtd: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4Jth; else goto c4Jti;
       c4Jth: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableChar2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4Jti: // global
           I64[Sp - 8] = block_c4Jta_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4Jtm; else goto c4Jtb;
       u4Jtm: // global
           call _c4Jta(R1) args: 0, res: 0, upd: 0;
       c4Jtb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableChar2_info" {
     Foreign.Storable.$fStorableChar2_info:
         const Foreign.Storable.$fStorableChar2_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4Jta() //  [R1]
         { []
         }
     {offset
       c4Jta: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Jtl; else goto c4Jtk;
       c4Jtl: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Jtk: // global
           _s4Ixa::I64 = %MO_UU_Conv_W32_W64(I32[I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Types.C#_con_info;
           I64[Hp] = _s4Ixa::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jta_info" {
     block_c4Jta_info:
         const _c4Jta;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.828316347 UTC

[section ""data" . Foreign.Storable.$fStorableChar4_closure" {
     Foreign.Storable.$fStorableChar4_closure:
         const Foreign.Storable.$fStorableChar4_info;
 },
 Foreign.Storable.$fStorableChar4_entry() //  [R2, R3]
         { []
         }
     {offset
       c4JtH: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JtT; else goto c4JtU;
       c4JtT: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableChar4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JtU: // global
           I64[Sp - 16] = block_c4JtE_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4Ju0; else goto c4JtF;
       u4Ju0: // global
           call _c4JtE(R1) args: 0, res: 0, upd: 0;
       c4JtF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableChar4_info" {
     Foreign.Storable.$fStorableChar4_info:
         const Foreign.Storable.$fStorableChar4_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4JtE() //  [R1]
         { []
         }
     {offset
       c4JtE: // global
           I64[Sp] = block_c4JtK_info;
           _s4Ixg::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Ixg::I64;
           if (R1 & 7 != 0) goto u4JtZ; else goto c4JtL;
       u4JtZ: // global
           call _c4JtK(R1) args: 0, res: 0, upd: 0;
       c4JtL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JtE_info" {
     block_c4JtE_info:
         const _c4JtE;
         const 1;
         const 30;
 },
 _c4JtK() //  [R1]
         { []
         }
     {offset
       c4JtK: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JtY; else goto c4JtX;
       c4JtY: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4JtX: // global
           _s4Ixm::I64 = %MO_UU_Conv_W32_W64(I32[I64[Sp + 8] + I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Types.C#_con_info;
           I64[Hp] = _s4Ixm::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JtK_info" {
     block_c4JtK_info:
         const _c4JtK;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.836824091 UTC

[section ""data" . Foreign.Storable.$fStorableChar1_closure" {
     Foreign.Storable.$fStorableChar1_closure:
         const Foreign.Storable.$fStorableChar1_info;
 },
 Foreign.Storable.$fStorableChar1_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Jur: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4Juv; else goto c4Juw;
       c4Juv: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableChar1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Juw: // global
           I64[Sp - 16] = block_c4Juo_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4JuE; else goto c4Jup;
       u4JuE: // global
           call _c4Juo(R1) args: 0, res: 0, upd: 0;
       c4Jup: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableChar1_info" {
     Foreign.Storable.$fStorableChar1_info:
         const Foreign.Storable.$fStorableChar1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4Juo() //  [R1]
         { []
         }
     {offset
       c4Juo: // global
           I64[Sp] = block_c4Juu_info;
           _s4Ixs::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Ixs::I64;
           if (R1 & 7 != 0) goto u4JuD; else goto c4Juy;
       u4JuD: // global
           call _c4Juu(R1) args: 0, res: 0, upd: 0;
       c4Juy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Juo_info" {
     block_c4Juo_info:
         const _c4Juo;
         const 1;
         const 30;
 },
 _c4Juu() //  [R1]
         { []
         }
     {offset
       c4Juu: // global
           I32[I64[Sp + 8]] = %MO_UU_Conv_W64_W32(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Juu_info" {
     block_c4Juu_info:
         const _c4Juu;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.846339703 UTC

[section ""data" . Foreign.Storable.$fStorableChar3_closure" {
     Foreign.Storable.$fStorableChar3_closure:
         const Foreign.Storable.$fStorableChar3_info;
 },
 Foreign.Storable.$fStorableChar3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4Jv5: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4Jve; else goto c4Jvf;
       c4Jve: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableChar3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Jvf: // global
           I64[Sp - 24] = block_c4Jv2_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4Jvp; else goto c4Jv3;
       u4Jvp: // global
           call _c4Jv2(R1) args: 0, res: 0, upd: 0;
       c4Jv3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableChar3_info" {
     Foreign.Storable.$fStorableChar3_info:
         const Foreign.Storable.$fStorableChar3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4Jv2() //  [R1]
         { []
         }
     {offset
       c4Jv2: // global
           I64[Sp] = block_c4Jv8_info;
           _s4IxB::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IxB::I64;
           if (R1 & 7 != 0) goto u4Jvo; else goto c4Jv9;
       u4Jvo: // global
           call _c4Jv8(R1) args: 0, res: 0, upd: 0;
       c4Jv9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jv2_info" {
     block_c4Jv2_info:
         const _c4Jv2;
         const 2;
         const 30;
 },
 _c4Jv8() //  [R1]
         { []
         }
     {offset
       c4Jv8: // global
           I64[Sp] = block_c4Jvd_info;
           _s4IxD::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4IxD::I64;
           if (R1 & 7 != 0) goto u4Jvq; else goto c4Jvi;
       u4Jvq: // global
           call _c4Jvd(R1) args: 0, res: 0, upd: 0;
       c4Jvi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jv8_info" {
     block_c4Jv8_info:
         const _c4Jv8;
         const 66;
         const 30;
 },
 _c4Jvd() //  [R1]
         { []
         }
     {offset
       c4Jvd: // global
           I32[I64[Sp + 8] + I64[Sp + 16]] = %MO_UU_Conv_W64_W32(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jvd_info" {
     block_c4Jvd_info:
         const _c4Jvd;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.855385733 UTC

[section ""data" . Foreign.Storable.$fStorableChar_closure" {
     Foreign.Storable.$fStorableChar_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableChar_$calignment_closure+1;
         const Foreign.Storable.$fStorableChar_$calignment_closure+1;
         const GHC.Storable.readWideCharOffPtr1_closure+3;
         const GHC.Storable.writeWideCharOffPtr1_closure+4;
         const Foreign.Storable.$fStorableChar4_closure+3;
         const Foreign.Storable.$fStorableChar3_closure+4;
         const Foreign.Storable.$fStorableChar2_closure+2;
         const Foreign.Storable.$fStorableChar1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.857339428 UTC

[section ""data" . Foreign.Storable.$trModule3_closure" {
     Foreign.Storable.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.Storable.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.859076801 UTC

[section ""data" . Foreign.Storable.$trModule1_closure" {
     Foreign.Storable.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.Storable.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.86085469 UTC

[section ""data" . Foreign.Storable.$trModule_closure" {
     Foreign.Storable.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Foreign.Storable.$trModule3_closure+1;
         const Foreign.Storable.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.862775279 UTC

[section ""data" . $krep_r4Ffk_closure" {
     $krep_r4Ffk_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.864626653 UTC

[section ""data" . Foreign.Storable.$tcStorable1_closure" {
     Foreign.Storable.$tcStorable1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*_closure;
         const $krep_r4Ffk_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.866621987 UTC

[section ""cstring" . Foreign.Storable.$tcStorable3_bytes" {
     Foreign.Storable.$tcStorable3_bytes:
         I8[] [83,116,111,114,97,98,108,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.868418382 UTC

[section ""data" . Foreign.Storable.$tcStorable2_closure" {
     Foreign.Storable.$tcStorable2_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.Storable.$tcStorable3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.8704794 UTC

[section ""data" . Foreign.Storable.$tcStorable_closure" {
     Foreign.Storable.$tcStorable_closure:
         const GHC.Types.TyCon_con_info;
         const Foreign.Storable.$trModule_closure+1;
         const Foreign.Storable.$tcStorable2_closure+1;
         const Foreign.Storable.$tcStorable1_closure+4;
         const 9192657549155052097;
         const 13909834202100645491;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.874009421 UTC

[section ""data" . Foreign.Storable.$fStorableWord20_closure" {
     Foreign.Storable.$fStorableWord20_closure:
         const Foreign.Storable.$fStorableWord20_info;
 },
 Foreign.Storable.$fStorableWord20_entry() //  [R2]
         { []
         }
     {offset
       c4Jw6: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4Jwa; else goto c4Jwb;
       c4Jwa: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord20_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4Jwb: // global
           I64[Sp - 8] = block_c4Jw3_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4Jwf; else goto c4Jw4;
       u4Jwf: // global
           call _c4Jw3(R1) args: 0, res: 0, upd: 0;
       c4Jw4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord20_info" {
     Foreign.Storable.$fStorableWord20_info:
         const Foreign.Storable.$fStorableWord20_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4Jw3() //  [R1]
         { []
         }
     {offset
       c4Jw3: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4Jwe; else goto c4Jwd;
       c4Jwe: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Jwd: // global
           _s4IxO::I64 = %MO_UU_Conv_W8_W64(I8[I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Word.W8#_con_info;
           I64[Hp] = _s4IxO::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jw3_info" {
     block_c4Jw3_info:
         const _c4Jw3;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.880615823 UTC

[section ""data" . Foreign.Storable.$fStorableWord22_closure" {
     Foreign.Storable.$fStorableWord22_closure:
         const Foreign.Storable.$fStorableWord22_info;
 },
 Foreign.Storable.$fStorableWord22_entry() //  [R2, R3]
         { []
         }
     {offset
       c4JwA: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JwM; else goto c4JwN;
       c4JwM: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord22_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JwN: // global
           I64[Sp - 16] = block_c4Jwx_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4JwT; else goto c4Jwy;
       u4JwT: // global
           call _c4Jwx(R1) args: 0, res: 0, upd: 0;
       c4Jwy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord22_info" {
     Foreign.Storable.$fStorableWord22_info:
         const Foreign.Storable.$fStorableWord22_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4Jwx() //  [R1]
         { []
         }
     {offset
       c4Jwx: // global
           I64[Sp] = block_c4JwD_info;
           _s4IxU::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IxU::I64;
           if (R1 & 7 != 0) goto u4JwS; else goto c4JwE;
       u4JwS: // global
           call _c4JwD(R1) args: 0, res: 0, upd: 0;
       c4JwE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jwx_info" {
     block_c4Jwx_info:
         const _c4Jwx;
         const 1;
         const 30;
 },
 _c4JwD() //  [R1]
         { []
         }
     {offset
       c4JwD: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JwR; else goto c4JwQ;
       c4JwR: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4JwQ: // global
           _s4Iy0::I64 = %MO_UU_Conv_W8_W64(I8[I64[Sp + 8] + I64[R1 + 7]]);
           I64[Hp - 8] = GHC.Word.W8#_con_info;
           I64[Hp] = _s4Iy0::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JwD_info" {
     block_c4JwD_info:
         const _c4JwD;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.888703708 UTC

[section ""data" . Foreign.Storable.$fStorableWord19_closure" {
     Foreign.Storable.$fStorableWord19_closure:
         const Foreign.Storable.$fStorableWord19_info;
 },
 Foreign.Storable.$fStorableWord19_entry() //  [R2, R3]
         { []
         }
     {offset
       c4Jxk: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4Jxo; else goto c4Jxp;
       c4Jxo: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord19_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Jxp: // global
           I64[Sp - 16] = block_c4Jxh_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4Jxx; else goto c4Jxi;
       u4Jxx: // global
           call _c4Jxh(R1) args: 0, res: 0, upd: 0;
       c4Jxi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord19_info" {
     Foreign.Storable.$fStorableWord19_info:
         const Foreign.Storable.$fStorableWord19_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4Jxh() //  [R1]
         { []
         }
     {offset
       c4Jxh: // global
           I64[Sp] = block_c4Jxn_info;
           _s4Iy6::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Iy6::I64;
           if (R1 & 7 != 0) goto u4Jxw; else goto c4Jxr;
       u4Jxw: // global
           call _c4Jxn(R1) args: 0, res: 0, upd: 0;
       c4Jxr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jxh_info" {
     block_c4Jxh_info:
         const _c4Jxh;
         const 1;
         const 30;
 },
 _c4Jxn() //  [R1]
         { []
         }
     {offset
       c4Jxn: // global
           I8[I64[Sp + 8]] = %MO_UU_Conv_W64_W8(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jxn_info" {
     block_c4Jxn_info:
         const _c4Jxn;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.897461757 UTC

[section ""data" . Foreign.Storable.$fStorableWord21_closure" {
     Foreign.Storable.$fStorableWord21_closure:
         const Foreign.Storable.$fStorableWord21_info;
 },
 Foreign.Storable.$fStorableWord21_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4JxY: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4Jy7; else goto c4Jy8;
       c4Jy7: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableWord21_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Jy8: // global
           I64[Sp - 24] = block_c4JxV_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4Jyi; else goto c4JxW;
       u4Jyi: // global
           call _c4JxV(R1) args: 0, res: 0, upd: 0;
       c4JxW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableWord21_info" {
     Foreign.Storable.$fStorableWord21_info:
         const Foreign.Storable.$fStorableWord21_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4JxV() //  [R1]
         { []
         }
     {offset
       c4JxV: // global
           I64[Sp] = block_c4Jy1_info;
           _s4Iyf::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Iyf::I64;
           if (R1 & 7 != 0) goto u4Jyh; else goto c4Jy2;
       u4Jyh: // global
           call _c4Jy1(R1) args: 0, res: 0, upd: 0;
       c4Jy2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JxV_info" {
     block_c4JxV_info:
         const _c4JxV;
         const 2;
         const 30;
 },
 _c4Jy1() //  [R1]
         { []
         }
     {offset
       c4Jy1: // global
           I64[Sp] = block_c4Jy6_info;
           _s4Iyh::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Iyh::I64;
           if (R1 & 7 != 0) goto u4Jyj; else goto c4Jyb;
       u4Jyj: // global
           call _c4Jy6(R1) args: 0, res: 0, upd: 0;
       c4Jyb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jy1_info" {
     block_c4Jy1_info:
         const _c4Jy1;
         const 66;
         const 30;
 },
 _c4Jy6() //  [R1]
         { []
         }
     {offset
       c4Jy6: // global
           I8[I64[Sp + 8] + I64[Sp + 16]] = %MO_UU_Conv_W64_W8(I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4Jy6_info" {
     block_c4Jy6_info:
         const _c4Jy6;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.90714638 UTC

[section ""data" . Foreign.Storable.$fStorableWord8_closure" {
     Foreign.Storable.$fStorableWord8_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableWord8_$calignment_closure+1;
         const Foreign.Storable.$fStorableWord8_$calignment_closure+1;
         const GHC.Storable.readWord8OffPtr1_closure+3;
         const GHC.Storable.writeWord8OffPtr1_closure+4;
         const Foreign.Storable.$fStorableWord22_closure+3;
         const Foreign.Storable.$fStorableWord21_closure+4;
         const Foreign.Storable.$fStorableWord20_closure+2;
         const Foreign.Storable.$fStorableWord19_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.911709009 UTC

[section ""data" . Foreign.Storable.$fStorableRatio2_closure" {
     Foreign.Storable.$fStorableRatio2_closure:
         const Foreign.Storable.$fStorableRatio2_info;
         const 0;
 },
 sat_s4Iyw_entry() //  [R1]
         { []
         }
     {offset
       c4JyW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JyX; else goto c4JyY;
       c4JyX: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JyY: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Real.%_entry(R4, R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4Iyw_info" {
     sat_s4Iyw_info:
         const sat_s4Iyw_entry;
         const 3;
         const 4294967311;
         const S4ILz_srt+32;
 },
 Foreign.Storable.$fStorableRatio2_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4JyZ: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c4Jz0; else goto c4Jz1;
       c4Jz0: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableRatio2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4Jz1: // global
           I64[Sp - 32] = block_c4JyO_info;
           _s4Iym::P64 = R2;
           R2 = R2;
           I64[Sp - 48] = stg_ap_pv_info;
           P64[Sp - 40] = R4;
           P64[Sp - 24] = _s4Iym::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 48;
           call Foreign.Storable.peek_entry(R2) args: 24, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio2_info" {
     Foreign.Storable.$fStorableRatio2_info:
         const Foreign.Storable.$fStorableRatio2_entry;
         const 0;
         const 12884901902;
         const 17179869207;
         const S4ILz_srt+32;
 },
 _c4JyO() //  [R1]
         { []
         }
     {offset
       c4JyO: // global
           _s4Iym::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c4JyQ_info;
           R2 = _s4Iym::P64;
           I64[Sp - 16] = stg_ap_ppv_info;
           P64[Sp - 8] = P64[Sp + 24];
           P64[Sp] = Foreign.Storable.$fStorable()7_closure+1;
           P64[Sp + 24] = R1;
           Sp = Sp - 16;
           call Foreign.Storable.peekElemOff_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JyO_info" {
     block_c4JyO_info:
         const _c4JyO;
         const 3;
         const 4294967326;
         const S4ILz_srt+32;
 },
 _c4JyQ() //  [R1]
         { []
         }
     {offset
       c4JyQ: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c4Jz5; else goto c4Jz4;
       c4Jz5: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4Jz4: // global
           I64[Hp - 32] = sat_s4Iyw_info;
           P64[Hp - 16] = P64[Sp + 8];
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = R1;
           R1 = Hp - 32;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JyQ_info" {
     block_c4JyQ_info:
         const _c4JyQ;
         const 2;
         const 4294967326;
         const S4ILz_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.922628397 UTC

[section ""data" . Foreign.Storable.$fStorableRatio1_closure" {
     Foreign.Storable.$fStorableRatio1_closure:
         const Foreign.Storable.$fStorableRatio1_info;
 },
 Foreign.Storable.$fStorableRatio1_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c4JzD: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c4JzH; else goto c4JzI;
       c4JzH: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableRatio1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JzI: // global
           I64[Sp - 24] = block_c4JzA_info;
           R1 = R5;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4JzM; else goto c4JzB;
       u4JzM: // global
           call _c4JzA(R1) args: 0, res: 0, upd: 0;
       c4JzB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio1_info" {
     Foreign.Storable.$fStorableRatio1_info:
         const Foreign.Storable.$fStorableRatio1_entry;
         const 0;
         const 14;
         const 21474836504;
 },
 _c4JzA() //  [R1]
         { []
         }
     {offset
       c4JzA: // global
           I64[Sp - 8] = block_c4JzG_info;
           R2 = P64[Sp + 8];
           I64[Sp - 32] = stg_ap_ppv_info;
           P64[Sp - 24] = P64[Sp + 16];
           P64[Sp - 16] = P64[R1 + 7];
           P64[Sp] = P64[R1 + 15];
           Sp = Sp - 32;
           call Foreign.Storable.poke_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JzA_info" {
     block_c4JzA_info:
         const _c4JzA;
         const 2;
         const 30;
 },
 _c4JzG() //  []
         { []
         }
     {offset
       c4JzG: // global
           R2 = P64[Sp + 16];
           I64[Sp] = stg_ap_pppv_info;
           _s4IyE::P64 = P64[Sp + 8];
           P64[Sp + 8] = P64[Sp + 24];
           P64[Sp + 16] = Foreign.Storable.$fStorable()7_closure+1;
           P64[Sp + 24] = _s4IyE::P64;
           call Foreign.Storable.pokeElemOff_entry(R2) args: 40, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JzG_info" {
     block_c4JzG_info:
         const _c4JzG;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.932518331 UTC

[section ""data" . Foreign.Storable.$fStorableBool6_closure" {
     Foreign.Storable.$fStorableBool6_closure:
         const Foreign.Storable.$fStorableBool6_info;
 },
 sat_s4IyT_entry() //  [R1]
         { []
         }
     {offset
       c4JAu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JAv; else goto c4JAw;
       c4JAv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JAw: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 16] == 0) goto c4JAt; else goto c4JAs;
       c4JAt: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c4JAs: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4IyT_info" {
     sat_s4IyT_info:
         const sat_s4IyT_entry;
         const 4294967296;
         const 17;
 },
 Foreign.Storable.$fStorableBool6_entry() //  [R2, R3]
         { []
         }
     {offset
       c4JAx: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JAy; else goto c4JAz;
       c4JAy: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableBool6_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JAz: // global
           I64[Sp - 16] = block_c4JAc_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4JAF; else goto c4JAd;
       u4JAF: // global
           call _c4JAc(R1) args: 0, res: 0, upd: 0;
       c4JAd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableBool6_info" {
     Foreign.Storable.$fStorableBool6_info:
         const Foreign.Storable.$fStorableBool6_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4JAc() //  [R1]
         { []
         }
     {offset
       c4JAc: // global
           I64[Sp] = block_c4JAh_info;
           _s4IyM::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IyM::I64;
           if (R1 & 7 != 0) goto u4JAE; else goto c4JAi;
       u4JAE: // global
           call _c4JAh(R1) args: 0, res: 0, upd: 0;
       c4JAi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JAc_info" {
     block_c4JAc_info:
         const _c4JAc;
         const 1;
         const 30;
 },
 _c4JAh() //  [R1]
         { []
         }
     {offset
       c4JAh: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c4JAD; else goto c4JAC;
       c4JAD: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4JAC: // global
           _s4IyR::I64 = %MO_SS_Conv_W32_W64(I32[I64[Sp + 8] + (I64[R1 + 7] << 2)]);
           I64[Hp - 16] = sat_s4IyT_info;
           I64[Hp] = _s4IyR::I64;
           R1 = Hp - 16;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JAh_info" {
     block_c4JAh_info:
         const _c4JAh;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.943827256 UTC

[section ""data" . Foreign.Storable.$fStorableBool2_closure" {
     Foreign.Storable.$fStorableBool2_closure:
         const Foreign.Storable.$fStorableBool2_info;
 },
 sat_s4Iz2_entry() //  [R1]
         { []
         }
     {offset
       c4JBp: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JBq; else goto c4JBr;
       c4JBq: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JBr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 16] == 0) goto c4JBo; else goto c4JBn;
       c4JBo: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c4JBn: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4Iz2_info" {
     sat_s4Iz2_info:
         const sat_s4Iz2_entry;
         const 4294967296;
         const 17;
 },
 Foreign.Storable.$fStorableBool2_entry() //  [R2]
         { []
         }
     {offset
       c4JBs: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4JBt; else goto c4JBu;
       c4JBt: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableBool2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4JBu: // global
           I64[Sp - 8] = block_c4JBc_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4JBy; else goto c4JBd;
       u4JBy: // global
           call _c4JBc(R1) args: 0, res: 0, upd: 0;
       c4JBd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableBool2_info" {
     Foreign.Storable.$fStorableBool2_info:
         const Foreign.Storable.$fStorableBool2_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4JBc() //  [R1]
         { []
         }
     {offset
       c4JBc: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c4JBx; else goto c4JBw;
       c4JBx: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4JBw: // global
           _s4Iz0::I64 = %MO_SS_Conv_W32_W64(I32[I64[R1 + 7]]);
           I64[Hp - 16] = sat_s4Iz2_info;
           I64[Hp] = _s4Iz0::I64;
           R1 = Hp - 16;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JBc_info" {
     block_c4JBc_info:
         const _c4JBc;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.955215669 UTC

[section ""data" . Foreign.Storable.$fStorableBool4_closure" {
     Foreign.Storable.$fStorableBool4_closure:
         const Foreign.Storable.$fStorableBool4_info;
 },
 sat_s4Izf_entry() //  [R1]
         { []
         }
     {offset
       c4JCk: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JCl; else goto c4JCm;
       c4JCl: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JCm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 16] == 0) goto c4JCj; else goto c4JCi;
       c4JCj: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c4JCi: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4Izf_info" {
     sat_s4Izf_info:
         const sat_s4Izf_entry;
         const 4294967296;
         const 17;
 },
 Foreign.Storable.$fStorableBool4_entry() //  [R2, R3]
         { []
         }
     {offset
       c4JCn: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JCo; else goto c4JCp;
       c4JCo: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableBool4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JCp: // global
           I64[Sp - 16] = block_c4JBZ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4JCv; else goto c4JC0;
       u4JCv: // global
           call _c4JBZ(R1) args: 0, res: 0, upd: 0;
       c4JC0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableBool4_info" {
     Foreign.Storable.$fStorableBool4_info:
         const Foreign.Storable.$fStorableBool4_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4JBZ() //  [R1]
         { []
         }
     {offset
       c4JBZ: // global
           I64[Sp] = block_c4JC4_info;
           _s4Iz7::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Iz7::I64;
           if (R1 & 7 != 0) goto u4JCu; else goto c4JC5;
       u4JCu: // global
           call _c4JC4(R1) args: 0, res: 0, upd: 0;
       c4JC5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JBZ_info" {
     block_c4JBZ_info:
         const _c4JBZ;
         const 1;
         const 30;
 },
 _c4JC4() //  [R1]
         { []
         }
     {offset
       c4JC4: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c4JCt; else goto c4JCs;
       c4JCt: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4JCs: // global
           _s4Izd::I64 = %MO_SS_Conv_W32_W64(I32[I64[Sp + 8] + I64[R1 + 7]]);
           I64[Hp - 16] = sat_s4Izf_info;
           I64[Hp] = _s4Izd::I64;
           R1 = Hp - 16;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JC4_info" {
     block_c4JC4_info:
         const _c4JC4;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.969686473 UTC

[section ""data" . Foreign.Storable.$fStorableBool1_closure" {
     Foreign.Storable.$fStorableBool1_closure:
         const Foreign.Storable.$fStorableBool1_info;
 },
 Foreign.Storable.$fStorableBool1_entry() //  [R2, R3]
         { []
         }
     {offset
       c4JD5: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JD6; else goto c4JD7;
       c4JD6: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableBool1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JD7: // global
           I64[Sp - 16] = block_c4JD2_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4JDp; else goto c4JD3;
       u4JDp: // global
           call _c4JD2(R1) args: 0, res: 0, upd: 0;
       c4JD3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableBool1_info" {
     Foreign.Storable.$fStorableBool1_info:
         const Foreign.Storable.$fStorableBool1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4JD2() //  [R1]
         { []
         }
     {offset
       c4JD2: // global
           I64[Sp] = block_c4JDa_info;
           _s4Izk::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Izk::I64;
           if (R1 & 7 != 0) goto u4JDo; else goto c4JDc;
       u4JDo: // global
           call _c4JDa(R1) args: 0, res: 0, upd: 0;
       c4JDc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JD2_info" {
     block_c4JD2_info:
         const _c4JD2;
         const 1;
         const 30;
 },
 _c4JDa() //  [R1]
         { []
         }
     {offset
       c4JDa: // global
           _s4Izk::I64 = I64[Sp + 8];
           if (R1 & 7 == 1) goto c4JDi; else goto c4JDm;
       c4JDi: // global
           I32[_s4Izk::I64] = 0 :: W32;
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c4JDm: // global
           I32[_s4Izk::I64] = 1 :: W32;
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JDa_info" {
     block_c4JDa_info:
         const _c4JDa;
         const 65;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.978408285 UTC

[section ""data" . Foreign.Storable.$fStorableBool3_closure" {
     Foreign.Storable.$fStorableBool3_closure:
         const Foreign.Storable.$fStorableBool3_info;
 },
 Foreign.Storable.$fStorableBool3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4JDS: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4JDW; else goto c4JDX;
       c4JDW: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableBool3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JDX: // global
           I64[Sp - 24] = block_c4JDP_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4JEk; else goto c4JDQ;
       u4JEk: // global
           call _c4JDP(R1) args: 0, res: 0, upd: 0;
       c4JDQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableBool3_info" {
     Foreign.Storable.$fStorableBool3_info:
         const Foreign.Storable.$fStorableBool3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4JDP() //  [R1]
         { []
         }
     {offset
       c4JDP: // global
           I64[Sp] = block_c4JDV_info;
           _s4Izt::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4Izt::I64;
           if (R1 & 7 != 0) goto u4JEj; else goto c4JDZ;
       u4JEj: // global
           call _c4JDV(R1) args: 0, res: 0, upd: 0;
       c4JDZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JDP_info" {
     block_c4JDP_info:
         const _c4JDP;
         const 2;
         const 30;
 },
 _c4JDV() //  [R1]
         { []
         }
     {offset
       c4JDV: // global
           I64[Sp] = block_c4JE3_info;
           _s4Izv::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4Izv::I64;
           if (R1 & 7 != 0) goto u4JEl; else goto c4JE5;
       u4JEl: // global
           call _c4JE3(R1) args: 0, res: 0, upd: 0;
       c4JE5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JDV_info" {
     block_c4JDV_info:
         const _c4JDV;
         const 66;
         const 30;
 },
 _c4JE3() //  [R1]
         { []
         }
     {offset
       c4JE3: // global
           _s4Izt::I64 = I64[Sp + 8];
           _s4Izv::I64 = I64[Sp + 16];
           if (R1 & 7 == 1) goto c4JEb; else goto c4JEf;
       c4JEb: // global
           I32[_s4Izt::I64 + _s4Izv::I64] = 0 :: W32;
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c4JEf: // global
           I32[_s4Izt::I64 + _s4Izv::I64] = 1 :: W32;
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JE3_info" {
     block_c4JE3_info:
         const _c4JE3;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.98732505 UTC

[section ""data" . Foreign.Storable.$fStorableBool_closure" {
     Foreign.Storable.$fStorableBool_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableBool_$csizeOf_closure+1;
         const Foreign.Storable.$fStorableBool_$csizeOf_closure+1;
         const Foreign.Storable.$fStorableBool6_closure+3;
         const Foreign.Storable.$fStorableBool5_closure+4;
         const Foreign.Storable.$fStorableBool4_closure+3;
         const Foreign.Storable.$fStorableBool3_closure+4;
         const Foreign.Storable.$fStorableBool2_closure+2;
         const Foreign.Storable.$fStorableBool1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.989570811 UTC

[section ""data" . Foreign.Storable.$fStorable()2_closure" {
     Foreign.Storable.$fStorable()2_closure:
         const Foreign.Storable.$fStorable()2_info;
 },
 Foreign.Storable.$fStorable()2_entry() //  []
         { []
         }
     {offset
       c4JER: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorable()2_info" {
     Foreign.Storable.$fStorable()2_info:
         const Foreign.Storable.$fStorable()2_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.993317051 UTC

[section ""data" . Foreign.Storable.$fStorable()1_closure" {
     Foreign.Storable.$fStorable()1_closure:
         const Foreign.Storable.$fStorable()1_info;
 },
 Foreign.Storable.$fStorable()1_entry() //  []
         { []
         }
     {offset
       c4JF4: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorable()1_info" {
     Foreign.Storable.$fStorable()1_info:
         const Foreign.Storable.$fStorable()1_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.996514752 UTC

[section ""data" . lvl11_r4Ffl_closure" {
     lvl11_r4Ffl_closure:
         const GHC.Types.I#_con_info;
         const 137;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:37.998608638 UTC

[section ""data" . lvl12_r4Ffm_closure" {
     lvl12_r4Ffm_closure:
         const GHC.Types.I#_con_info;
         const 31;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.000862829 UTC

[section ""data" . lvl13_r4Ffn_closure" {
     lvl13_r4Ffn_closure:
         const GHC.Types.I#_con_info;
         const 40;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.002678109 UTC

[section ""data" . lvl14_r4Ffo_closure" {
     lvl14_r4Ffo_closure:
         const GHC.Stack.Types.SrcLoc_con_info;
         const lvl2_r4Ffb_closure;
         const lvl3_r4Ffc_closure;
         const lvl5_r4Ffe_closure;
         const lvl11_r4Ffl_closure+1;
         const lvl12_r4Ffm_closure+1;
         const lvl11_r4Ffl_closure+1;
         const lvl13_r4Ffn_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.011193715 UTC

[section ""data" . lvl15_r4Ffp_closure" {
     lvl15_r4Ffp_closure:
         const GHC.Stack.Types.PushCallStack_con_info;
         const lvl1_r4Ffa_closure;
         const lvl14_r4Ffo_closure+1;
         const GHC.Stack.Types.EmptyCallStack_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.014013061 UTC

[section ""data" . lvl16_r4Ffq_closure" {
     lvl16_r4Ffq_closure:
         const lvl16_r4Ffq_info;
         const 0;
         const 0;
         const 0;
 },
 lvl16_r4Ffq_entry() //  [R1]
         { []
         }
     {offset
       c4JFo: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JFp; else goto c4JFq;
       c4JFp: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JFq: // global
           (_c4JFl::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c4JFl::I64 == 0) goto c4JFn; else goto c4JFm;
       c4JFn: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c4JFm: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c4JFl::I64;
           R2 = lvl15_r4Ffp_closure+2;
           Sp = Sp - 16;
           call GHC.Err.undefined_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl16_r4Ffq_info" {
     lvl16_r4Ffq_info:
         const lvl16_r4Ffq_entry;
         const 0;
         const 279172874261;
         const S4ILz_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.019672401 UTC

[section ""data" . Foreign.Storable.$dmpeekElemOff_closure" {
     Foreign.Storable.$dmpeekElemOff_closure:
         const Foreign.Storable.$dmpeekElemOff_info;
         const 0;
 },
 sat_s4IzO_entry() //  [R1]
         { []
         }
     {offset
       c4JFK: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c4JFV; else goto c4JFW;
       c4JFV: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JFW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c4JFH_info;
           _s4IzG::P64 = P64[R1 + 16];
           R1 = P64[R1 + 24];
           P64[Sp - 24] = _s4IzG::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4JG1; else goto c4JFI;
       u4JG1: // global
           call _c4JFH(R1) args: 0, res: 0, upd: 0;
       c4JFI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4IzO_info" {
     sat_s4IzO_info:
         const sat_s4IzO_entry;
         const 2;
         const 4294967314;
         const S4ILz_srt+56;
 },
 _c4JFH() //  [R1]
         { []
         }
     {offset
       c4JFH: // global
           I64[Sp] = block_c4JFN_info;
           R2 = P64[Sp + 8];
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = lvl16_r4Ffq_closure;
           I64[Sp + 8] = I64[R1 + 7];
           Sp = Sp - 16;
           call Foreign.Storable.sizeOf_entry(R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JFH_info" {
     block_c4JFH_info:
         const _c4JFH;
         const 1;
         const 4294967326;
         const S4ILz_srt+56;
 },
 _c4JFN() //  [R1]
         { []
         }
     {offset
       c4JFN: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JG0; else goto c4JFZ;
       c4JG0: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4JFZ: // global
           _s4IzN::I64 = I64[Sp + 8] * I64[R1 + 7];
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s4IzN::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JFN_info" {
     block_c4JFN_info:
         const _c4JFN;
         const 65;
         const 30;
 },
 Foreign.Storable.$dmpeekElemOff_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4JG2: // global
           _s4IzI::P64 = R4;
           _s4IzH::P64 = R3;
           _s4IzG::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto c4JG3; else goto c4JG4;
       c4JG4: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c4JG6; else goto c4JG5;
       c4JG6: // global
           HpAlloc = 32;
           goto c4JG3;
       c4JG3: // global
           R4 = _s4IzI::P64;
           R3 = _s4IzH::P64;
           R2 = _s4IzG::P64;
           R1 = Foreign.Storable.$dmpeekElemOff_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JG5: // global
           I64[Hp - 24] = sat_s4IzO_info;
           P64[Hp - 8] = _s4IzG::P64;
           P64[Hp] = _s4IzI::P64;
           R2 = _s4IzG::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s4IzH::P64;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 24;
           call Foreign.Storable.peekByteOff_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$dmpeekElemOff_info" {
     Foreign.Storable.$dmpeekElemOff_info:
         const Foreign.Storable.$dmpeekElemOff_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S4ILz_srt+56;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.031029349 UTC

[section ""data" . Foreign.Storable.$dmpokeElemOff_closure" {
     Foreign.Storable.$dmpokeElemOff_closure:
         const Foreign.Storable.$dmpokeElemOff_info;
 },
 sat_s4IzY_entry() //  [R1]
         { []
         }
     {offset
       c4JGL: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c4JGW; else goto c4JGX;
       c4JGW: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JGX: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 40] = block_c4JGI_info;
           _s4IzP::P64 = P64[R1 + 16];
           _s4IzS::P64 = P64[R1 + 32];
           R1 = P64[R1 + 24];
           P64[Sp - 32] = _s4IzP::P64;
           P64[Sp - 24] = _s4IzS::P64;
           Sp = Sp - 40;
           if (R1 & 7 != 0) goto u4JH2; else goto c4JGJ;
       u4JH2: // global
           call _c4JGI(R1) args: 0, res: 0, upd: 0;
       c4JGJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4IzY_info" {
     sat_s4IzY_info:
         const sat_s4IzY_entry;
         const 3;
         const 15;
 },
 _c4JGI() //  [R1]
         { []
         }
     {offset
       c4JGI: // global
           _s4IzP::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c4JGO_info;
           R2 = _s4IzP::P64;
           I64[Sp - 8] = stg_ap_p_info;
           P64[Sp] = P64[Sp + 16];
           I64[Sp + 16] = I64[R1 + 7];
           Sp = Sp - 8;
           call Foreign.Storable.sizeOf_entry(R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JGI_info" {
     block_c4JGI_info:
         const _c4JGI;
         const 2;
         const 30;
 },
 _c4JGO() //  [R1]
         { []
         }
     {offset
       c4JGO: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JH1; else goto c4JH0;
       c4JH1: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4JH0: // global
           _s4IzX::I64 = I64[Sp + 8] * I64[R1 + 7];
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s4IzX::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JGO_info" {
     block_c4JGO_info:
         const _c4JGO;
         const 65;
         const 30;
 },
 Foreign.Storable.$dmpokeElemOff_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c4JH3: // global
           _s4IzS::P64 = R5;
           _s4IzR::P64 = R4;
           _s4IzQ::P64 = R3;
           _s4IzP::P64 = R2;
           if ((Sp + -32) < SpLim) (likely: False) goto c4JH4; else goto c4JH5;
       c4JH5: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c4JH7; else goto c4JH6;
       c4JH7: // global
           HpAlloc = 40;
           goto c4JH4;
       c4JH4: // global
           R5 = _s4IzS::P64;
           R4 = _s4IzR::P64;
           R3 = _s4IzQ::P64;
           R2 = _s4IzP::P64;
           R1 = Foreign.Storable.$dmpokeElemOff_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JH6: // global
           I64[Hp - 32] = sat_s4IzY_info;
           P64[Hp - 16] = _s4IzP::P64;
           P64[Hp - 8] = _s4IzR::P64;
           P64[Hp] = _s4IzS::P64;
           R2 = _s4IzP::P64;
           I64[Sp - 32] = stg_ap_ppp_info;
           P64[Sp - 24] = _s4IzQ::P64;
           P64[Sp - 16] = Hp - 32;
           P64[Sp - 8] = _s4IzS::P64;
           Sp = Sp - 32;
           call Foreign.Storable.pokeByteOff_entry(R2) args: 40, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$dmpokeElemOff_info" {
     Foreign.Storable.$dmpokeElemOff_info:
         const Foreign.Storable.$dmpokeElemOff_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.040711861 UTC

[section ""data" . Foreign.Storable.$fStorable()4_closure" {
     Foreign.Storable.$fStorable()4_closure:
         const Foreign.Storable.$fStorable()4_info;
 },
 Foreign.Storable.$fStorable()4_entry() //  []
         { []
         }
     {offset
       c4JHF: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorable()4_info" {
     Foreign.Storable.$fStorable()4_info:
         const Foreign.Storable.$fStorable()4_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.044391645 UTC

[section ""data" . Foreign.Storable.$fStorable()6_closure" {
     Foreign.Storable.$fStorable()6_closure:
         const Foreign.Storable.$fStorable()6_info;
 },
 Foreign.Storable.$fStorable()6_entry() //  []
         { []
         }
     {offset
       c4JHS: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorable()6_info" {
     Foreign.Storable.$fStorable()6_info:
         const Foreign.Storable.$fStorable()6_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.048683278 UTC

[section ""data" . Foreign.Storable.$fStorable()3_closure" {
     Foreign.Storable.$fStorable()3_closure:
         const Foreign.Storable.$fStorable()3_info;
 },
 Foreign.Storable.$fStorable()3_entry() //  []
         { []
         }
     {offset
       c4JI5: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorable()3_info" {
     Foreign.Storable.$fStorable()3_info:
         const Foreign.Storable.$fStorable()3_entry;
         const 0;
         const 14;
         const 17179869207;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.053839079 UTC

[section ""data" . Foreign.Storable.$fStorable()5_closure" {
     Foreign.Storable.$fStorable()5_closure:
         const Foreign.Storable.$fStorable()5_info;
 },
 Foreign.Storable.$fStorable()5_entry() //  []
         { []
         }
     {offset
       c4JIi: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorable()5_info" {
     Foreign.Storable.$fStorable()5_info:
         const Foreign.Storable.$fStorable()5_entry;
         const 0;
         const 14;
         const 17179869207;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.05717861 UTC

[section ""data" . Foreign.Storable.$fStorable()_closure" {
     Foreign.Storable.$fStorable()_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorable()_$csizeOf_closure+1;
         const Foreign.Storable.$fStorable()_$calignment_closure+1;
         const Foreign.Storable.$fStorable()6_closure+3;
         const Foreign.Storable.$fStorable()5_closure+4;
         const Foreign.Storable.$fStorable()4_closure+3;
         const Foreign.Storable.$fStorable()3_closure+4;
         const Foreign.Storable.$fStorable()2_closure+2;
         const Foreign.Storable.$fStorable()1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.05988918 UTC

[section ""data" . lvl17_r4Ffr_closure" {
     lvl17_r4Ffr_closure:
         const GHC.Types.I#_con_info;
         const 237;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.062527008 UTC

[section ""data" . lvl18_r4Ffs_closure" {
     lvl18_r4Ffs_closure:
         const GHC.Stack.Types.SrcLoc_con_info;
         const lvl2_r4Ffb_closure;
         const lvl3_r4Ffc_closure;
         const lvl5_r4Ffe_closure;
         const lvl17_r4Ffr_closure+1;
         const lvl12_r4Ffm_closure+1;
         const lvl17_r4Ffr_closure+1;
         const lvl13_r4Ffn_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.065191422 UTC

[section ""data" . lvl19_r4Fft_closure" {
     lvl19_r4Fft_closure:
         const GHC.Stack.Types.PushCallStack_con_info;
         const lvl1_r4Ffa_closure;
         const lvl18_r4Ffs_closure+1;
         const GHC.Stack.Types.EmptyCallStack_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.068985667 UTC

[section ""data" . Foreign.Storable.$fStorableRatio6_closure" {
     Foreign.Storable.$fStorableRatio6_closure:
         const Foreign.Storable.$fStorableRatio6_info;
         const 0;
         const 0;
         const 0;
 },
 Foreign.Storable.$fStorableRatio6_entry() //  [R1]
         { []
         }
     {offset
       c4JIB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JIC; else goto c4JID;
       c4JIC: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JID: // global
           (_c4JIy::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c4JIy::I64 == 0) goto c4JIA; else goto c4JIz;
       c4JIA: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c4JIz: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c4JIy::I64;
           R2 = lvl19_r4Fft_closure+2;
           Sp = Sp - 16;
           call GHC.Err.undefined_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio6_info" {
     Foreign.Storable.$fStorableRatio6_info:
         const Foreign.Storable.$fStorableRatio6_entry;
         const 0;
         const 2203318222869;
         const S4ILz_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.078818381 UTC

[section ""data" . Foreign.Storable.$fStorableRatio_$csizeOf_closure" {
     Foreign.Storable.$fStorableRatio_$csizeOf_closure:
         const Foreign.Storable.$fStorableRatio_$csizeOf_info;
         const 0;
 },
 lvl20_s4IAf_entry() //  [R1]
         { []
         }
     {offset
       c4JIU: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4JIV; else goto c4JIW;
       c4JIV: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JIW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.Storable.$fStorableRatio6_closure;
           Sp = Sp - 32;
           call Foreign.Storable.sizeOf_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl20_s4IAf_info" {
     lvl20_s4IAf_info:
         const lvl20_s4IAf_entry;
         const 1;
         const 4294967312;
         const S4ILz_srt+80;
 },
 sat_s4IAk_entry() //  [R1, R2]
         { []
         }
     {offset
       c4JJ5: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4JJc; else goto c4JJd;
       c4JJc: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4JJd: // global
           I64[Sp - 8] = block_c4JJ2_info;
           R1 = P64[R1 + 7];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4JJh; else goto c4JJ3;
       u4JJh: // global
           call _c4JJ2(R1) args: 0, res: 0, upd: 0;
       c4JJ3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s4IAk_info" {
     sat_s4IAk_info:
         const sat_s4IAk_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _c4JJ2() //  [R1]
         { []
         }
     {offset
       c4JJ2: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JJg; else goto c4JJf;
       c4JJg: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4JJf: // global
           _s4IAj::I64 = I64[R1 + 7] << 1;
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s4IAj::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JJ2_info" {
     block_c4JJ2_info:
         const _c4JJ2;
         const 0;
         const 30;
 },
 Foreign.Storable.$fStorableRatio_$csizeOf_entry() //  [R2, R3]
         { []
         }
     {offset
       c4JJi: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c4JJm; else goto c4JJl;
       c4JJm: // global
           HpAlloc = 40;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableRatio_$csizeOf_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JJl: // global
           I64[Hp - 32] = lvl20_s4IAf_info;
           P64[Hp - 16] = R2;
           I64[Hp - 8] = sat_s4IAk_info;
           P64[Hp] = Hp - 32;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio_$csizeOf_info" {
     Foreign.Storable.$fStorableRatio_$csizeOf_info:
         const Foreign.Storable.$fStorableRatio_$csizeOf_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S4ILz_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.091662642 UTC

[section ""data" . Foreign.Storable.$fStorableRatio4_closure" {
     Foreign.Storable.$fStorableRatio4_closure:
         const Foreign.Storable.$fStorableRatio4_info;
         const 0;
 },
 sat_s4IAv_entry() //  [R1]
         { []
         }
     {offset
       c4JJY: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4JKa; else goto c4JKb;
       c4JKa: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JKb: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c4JJV_info;
           _s4IAo::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s4IAo::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4JKh; else goto c4JJW;
       u4JKh: // global
           call _c4JJV(R1) args: 0, res: 0, upd: 0;
       c4JJW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4IAv_info" {
     sat_s4IAv_info:
         const sat_s4IAv_entry;
         const 2;
         const 18;
 },
 _c4JJV() //  [R1]
         { []
         }
     {offset
       c4JJV: // global
           I64[Sp] = block_c4JK1_info;
           _s4IAr::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IAr::I64;
           if (R1 & 7 != 0) goto u4JKg; else goto c4JK2;
       u4JKg: // global
           call _c4JK1(R1) args: 0, res: 0, upd: 0;
       c4JK2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JJV_info" {
     block_c4JJV_info:
         const _c4JJV;
         const 1;
         const 30;
 },
 _c4JK1() //  [R1]
         { []
         }
     {offset
       c4JK1: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JKf; else goto c4JKe;
       c4JKf: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4JKe: // global
           _s4IAu::I64 = I64[Sp + 8] + I64[R1 + 7];
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4IAu::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JK1_info" {
     block_c4JK1_info:
         const _c4JK1;
         const 65;
         const 30;
 },
 Foreign.Storable.$fStorableRatio4_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c4JKi: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c4JKm; else goto c4JKl;
       c4JKm: // global
           HpAlloc = 32;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableRatio4_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JKl: // global
           I64[Hp - 24] = sat_s4IAv_info;
           P64[Hp - 8] = R4;
           P64[Hp] = R5;
           R4 = Hp - 24;
           R3 = R3;
           R2 = R2;
           call Foreign.Storable.$fStorableRatio2_entry(R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio4_info" {
     Foreign.Storable.$fStorableRatio4_info:
         const Foreign.Storable.$fStorableRatio4_entry;
         const 0;
         const 554050781198;
         const 21474836504;
         const S4ILz_srt+40;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.105689094 UTC

[section ""data" . Foreign.Storable.$fStorableRatio7_closure" {
     Foreign.Storable.$fStorableRatio7_closure:
         const Foreign.Storable.$fStorableRatio7_info;
         const 0;
 },
 sat_s4IAK_entry() //  [R1]
         { []
         }
     {offset
       c4JKW: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c4JLi; else goto c4JLj;
       c4JLi: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JLj: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 40] = block_c4JKT_info;
           _s4IAw::P64 = P64[R1 + 16];
           _s4IAz::P64 = P64[R1 + 32];
           R1 = P64[R1 + 24];
           P64[Sp - 32] = _s4IAw::P64;
           P64[Sp - 24] = _s4IAz::P64;
           Sp = Sp - 40;
           if (R1 & 7 != 0) goto u4JLq; else goto c4JKU;
       u4JLq: // global
           call _c4JKT(R1) args: 0, res: 0, upd: 0;
       c4JKU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4IAK_info" {
     sat_s4IAK_info:
         const sat_s4IAK_entry;
         const 3;
         const 4294967311;
         const S4ILz_srt+80;
 },
 _c4JKT() //  [R1]
         { []
         }
     {offset
       c4JKT: // global
           I64[Sp] = block_c4JKZ_info;
           _s4IAC::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4IAC::I64;
           if (R1 & 7 != 0) goto u4JLp; else goto c4JL0;
       u4JLp: // global
           call _c4JKZ(R1) args: 0, res: 0, upd: 0;
       c4JL0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JKT_info" {
     block_c4JKT_info:
         const _c4JKT;
         const 2;
         const 4294967326;
         const S4ILz_srt+80;
 },
 _c4JKZ() //  [R1]
         { []
         }
     {offset
       c4JKZ: // global
           I64[Sp] = block_c4JL4_info;
           R2 = P64[Sp + 8];
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Foreign.Storable.$fStorableRatio6_closure;
           I64[Sp + 8] = I64[R1 + 7];
           Sp = Sp - 16;
           call Foreign.Storable.sizeOf_entry(R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JKZ_info" {
     block_c4JKZ_info:
         const _c4JKZ;
         const 130;
         const 4294967326;
         const S4ILz_srt+80;
 },
 _c4JL4() //  [R1]
         { []
         }
     {offset
       c4JL4: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JLo; else goto c4JLn;
       c4JLo: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4JLn: // global
           _s4IAJ::I64 = I64[Sp + 16] + I64[Sp + 8] * (I64[R1 + 7] << 1);
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4IAJ::I64;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JL4_info" {
     block_c4JL4_info:
         const _c4JL4;
         const 194;
         const 30;
 },
 Foreign.Storable.$fStorableRatio7_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c4JLr: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c4JLv; else goto c4JLu;
       c4JLv: // global
           HpAlloc = 40;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableRatio7_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JLu: // global
           I64[Hp - 32] = sat_s4IAK_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R4;
           P64[Hp] = R5;
           R4 = Hp - 32;
           R3 = R3;
           R2 = R2;
           call Foreign.Storable.$fStorableRatio2_entry(R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio7_info" {
     Foreign.Storable.$fStorableRatio7_info:
         const Foreign.Storable.$fStorableRatio7_entry;
         const 0;
         const 1241245548558;
         const 21474836504;
         const S4ILz_srt+40;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.120222864 UTC

[section ""data" . Foreign.Storable.$w$cpokeByteOff_closure" {
     Foreign.Storable.$w$cpokeByteOff_closure:
         const Foreign.Storable.$w$cpokeByteOff_info;
 },
 p_s4IAR_entry() //  [R1]
         { []
         }
     {offset
       c4JMe: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4JMq; else goto c4JMr;
       c4JMq: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JMr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c4JMb_info;
           _s4IAN::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s4IAN::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4JMx; else goto c4JMc;
       u4JMx: // global
           call _c4JMb(R1) args: 0, res: 0, upd: 0;
       c4JMc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . p_s4IAR_info" {
     p_s4IAR_info:
         const p_s4IAR_entry;
         const 2;
         const 18;
 },
 _c4JMb() //  [R1]
         { []
         }
     {offset
       c4JMb: // global
           I64[Sp] = block_c4JMh_info;
           _s4IAT::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IAT::I64;
           if (R1 & 7 != 0) goto u4JMw; else goto c4JMi;
       u4JMw: // global
           call _c4JMh(R1) args: 0, res: 0, upd: 0;
       c4JMi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JMb_info" {
     block_c4JMb_info:
         const _c4JMb;
         const 1;
         const 30;
 },
 _c4JMh() //  [R1]
         { []
         }
     {offset
       c4JMh: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JMv; else goto c4JMu;
       c4JMv: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4JMu: // global
           _s4IAW::I64 = I64[Sp + 8] + I64[R1 + 7];
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4IAW::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JMh_info" {
     block_c4JMh_info:
         const _c4JMh;
         const 65;
         const 30;
 },
 Foreign.Storable.$w$cpokeByteOff_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c4JMA: // global
           _s4IAP::P64 = R6;
           _s4IAO::P64 = R5;
           _s4IAN::P64 = R4;
           _s4IAM::P64 = R3;
           _s4IAL::P64 = R2;
           if ((Sp + -56) < SpLim) (likely: False) goto c4JMB; else goto c4JMC;
       c4JMC: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c4JME; else goto c4JMD;
       c4JME: // global
           HpAlloc = 32;
           goto c4JMB;
       c4JMB: // global
           R6 = _s4IAP::P64;
           R5 = _s4IAO::P64;
           R4 = _s4IAN::P64;
           R3 = _s4IAM::P64;
           R2 = _s4IAL::P64;
           R1 = Foreign.Storable.$w$cpokeByteOff_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JMD: // global
           I64[Hp - 24] = p_s4IAR_info;
           P64[Hp - 8] = _s4IAM::P64;
           P64[Hp] = _s4IAN::P64;
           I64[Sp - 32] = block_c4JMy_info;
           R2 = _s4IAL::P64;
           I64[Sp - 56] = stg_ap_ppv_info;
           _c4JM7::P64 = Hp - 24;
           P64[Sp - 48] = _c4JM7::P64;
           P64[Sp - 40] = _s4IAO::P64;
           P64[Sp - 24] = _c4JM7::P64;
           P64[Sp - 16] = _s4IAL::P64;
           P64[Sp - 8] = _s4IAP::P64;
           Sp = Sp - 56;
           call Foreign.Storable.poke_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$w$cpokeByteOff_info" {
     Foreign.Storable.$w$cpokeByteOff_info:
         const Foreign.Storable.$w$cpokeByteOff_entry;
         const 0;
         const 14;
         const 25769803801;
 },
 _c4JMy() //  []
         { []
         }
     {offset
       c4JMy: // global
           R2 = P64[Sp + 16];
           I64[Sp] = stg_ap_pppv_info;
           P64[Sp + 16] = Foreign.Storable.$fStorable()7_closure+1;
           call Foreign.Storable.pokeElemOff_entry(R2) args: 40, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JMy_info" {
     block_c4JMy_info:
         const _c4JMy;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.132288915 UTC

[section ""data" . Foreign.Storable.$fStorableRatio3_closure" {
     Foreign.Storable.$fStorableRatio3_closure:
         const Foreign.Storable.$fStorableRatio3_info;
 },
 Foreign.Storable.$fStorableRatio3_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c4JNj: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4JNk; else goto c4JNl;
       c4JNk: // global
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableRatio3_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JNl: // global
           I64[Sp - 32] = block_c4JNg_info;
           R1 = R6;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4JNp; else goto c4JNh;
       u4JNp: // global
           call _c4JNg(R1) args: 0, res: 0, upd: 0;
       c4JNh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio3_info" {
     Foreign.Storable.$fStorableRatio3_info:
         const Foreign.Storable.$fStorableRatio3_entry;
         const 0;
         const 14;
         const 25769803801;
 },
 _c4JNg() //  [R1]
         { []
         }
     {offset
       c4JNg: // global
           R6 = P64[R1 + 15];
           R5 = P64[R1 + 7];
           R4 = P64[Sp + 24];
           R3 = P64[Sp + 16];
           R2 = P64[Sp + 8];
           Sp = Sp + 32;
           call Foreign.Storable.$w$cpokeByteOff_entry(R6,
                                                       R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JNg_info" {
     block_c4JNg_info:
         const _c4JNg;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.146063893 UTC

[section ""data" . Foreign.Storable.$w$cpokeElemOff_closure" {
     Foreign.Storable.$w$cpokeElemOff_closure:
         const Foreign.Storable.$w$cpokeElemOff_info;
         const 0;
 },
 p_s4IBf_entry() //  [R1]
         { []
         }
     {offset
       c4JNL: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c4JO7; else goto c4JO8;
       c4JO7: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JO8: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 40] = block_c4JNI_info;
           _s4IB9::P64 = P64[R1 + 16];
           _s4IBb::P64 = P64[R1 + 32];
           R1 = P64[R1 + 24];
           P64[Sp - 32] = _s4IB9::P64;
           P64[Sp - 24] = _s4IBb::P64;
           Sp = Sp - 40;
           if (R1 & 7 != 0) goto u4JOf; else goto c4JNJ;
       u4JOf: // global
           call _c4JNI(R1) args: 0, res: 0, upd: 0;
       c4JNJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . p_s4IBf_info" {
     p_s4IBf_info:
         const p_s4IBf_entry;
         const 3;
         const 4294967311;
         const S4ILz_srt+80;
 },
 _c4JNI() //  [R1]
         { []
         }
     {offset
       c4JNI: // global
           I64[Sp] = block_c4JNO_info;
           _s4IBh::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4IBh::I64;
           if (R1 & 7 != 0) goto u4JOe; else goto c4JNP;
       u4JOe: // global
           call _c4JNO(R1) args: 0, res: 0, upd: 0;
       c4JNP: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JNI_info" {
     block_c4JNI_info:
         const _c4JNI;
         const 2;
         const 4294967326;
         const S4ILz_srt+80;
 },
 _c4JNO() //  [R1]
         { []
         }
     {offset
       c4JNO: // global
           I64[Sp] = block_c4JNT_info;
           R2 = P64[Sp + 8];
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Foreign.Storable.$fStorableRatio6_closure;
           I64[Sp + 8] = I64[R1 + 7];
           Sp = Sp - 16;
           call Foreign.Storable.sizeOf_entry(R2) args: 24, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JNO_info" {
     block_c4JNO_info:
         const _c4JNO;
         const 130;
         const 4294967326;
         const S4ILz_srt+80;
 },
 _c4JNT() //  [R1]
         { []
         }
     {offset
       c4JNT: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JOd; else goto c4JOc;
       c4JOd: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4JOc: // global
           _s4IBo::I64 = I64[Sp + 16] + I64[Sp + 8] * (I64[R1 + 7] << 1);
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4IBo::I64;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JNT_info" {
     block_c4JNT_info:
         const _c4JNT;
         const 194;
         const 30;
 },
 Foreign.Storable.$w$cpokeElemOff_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c4JOi: // global
           _s4IBd::P64 = R6;
           _s4IBc::P64 = R5;
           _s4IBb::P64 = R4;
           _s4IBa::P64 = R3;
           _s4IB9::P64 = R2;
           if ((Sp + -56) < SpLim) (likely: False) goto c4JOj; else goto c4JOk;
       c4JOk: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c4JOm; else goto c4JOl;
       c4JOm: // global
           HpAlloc = 40;
           goto c4JOj;
       c4JOj: // global
           R6 = _s4IBd::P64;
           R5 = _s4IBc::P64;
           R4 = _s4IBb::P64;
           R3 = _s4IBa::P64;
           R2 = _s4IB9::P64;
           R1 = Foreign.Storable.$w$cpokeElemOff_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JOl: // global
           I64[Hp - 32] = p_s4IBf_info;
           P64[Hp - 16] = _s4IB9::P64;
           P64[Hp - 8] = _s4IBa::P64;
           P64[Hp] = _s4IBb::P64;
           I64[Sp - 32] = block_c4JOg_info;
           R2 = _s4IB9::P64;
           I64[Sp - 56] = stg_ap_ppv_info;
           _c4JNE::P64 = Hp - 32;
           P64[Sp - 48] = _c4JNE::P64;
           P64[Sp - 40] = _s4IBc::P64;
           P64[Sp - 24] = _c4JNE::P64;
           P64[Sp - 16] = _s4IB9::P64;
           P64[Sp - 8] = _s4IBd::P64;
           Sp = Sp - 56;
           call Foreign.Storable.poke_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$w$cpokeElemOff_info" {
     Foreign.Storable.$w$cpokeElemOff_info:
         const Foreign.Storable.$w$cpokeElemOff_entry;
         const 0;
         const 73014444046;
         const 25769803801;
         const S4ILz_srt+80;
 },
 _c4JOg() //  []
         { []
         }
     {offset
       c4JOg: // global
           R2 = P64[Sp + 16];
           I64[Sp] = stg_ap_pppv_info;
           P64[Sp + 16] = Foreign.Storable.$fStorable()7_closure+1;
           call Foreign.Storable.pokeElemOff_entry(R2) args: 40, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JOg_info" {
     block_c4JOg_info:
         const _c4JOg;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.163172644 UTC

[section ""data" . Foreign.Storable.$fStorableRatio5_closure" {
     Foreign.Storable.$fStorableRatio5_closure:
         const Foreign.Storable.$fStorableRatio5_info;
         const 0;
 },
 Foreign.Storable.$fStorableRatio5_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c4JPa: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4JPb; else goto c4JPc;
       c4JPb: // global
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableRatio5_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JPc: // global
           I64[Sp - 32] = block_c4JP7_info;
           R1 = R6;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4JPg; else goto c4JP8;
       u4JPg: // global
           call _c4JP7(R1) args: 0, res: 0, upd: 0;
       c4JP8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio5_info" {
     Foreign.Storable.$fStorableRatio5_info:
         const Foreign.Storable.$fStorableRatio5_entry;
         const 0;
         const 12884901902;
         const 25769803801;
         const S4ILz_srt+112;
 },
 _c4JP7() //  [R1]
         { []
         }
     {offset
       c4JP7: // global
           R6 = P64[R1 + 15];
           R5 = P64[R1 + 7];
           R4 = P64[Sp + 24];
           R3 = P64[Sp + 16];
           R2 = P64[Sp + 8];
           Sp = Sp + 32;
           call Foreign.Storable.$w$cpokeElemOff_entry(R6,
                                                       R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JP7_info" {
     block_c4JP7_info:
         const _c4JP7;
         const 3;
         const 4294967326;
         const S4ILz_srt+112;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.174568876 UTC

[section ""data" . Foreign.Storable.$fStorableRatio_closure" {
     Foreign.Storable.$fStorableRatio_closure:
         const Foreign.Storable.$fStorableRatio_info;
         const 0;
 },
 sat_s4IBK_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c4JPA: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 13];
           R2 = P64[R1 + 5];
           call Foreign.Storable.$fStorableRatio1_entry(R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s4IBK_info" {
     sat_s4IBK_info:
         const sat_s4IBK_entry;
         const 2;
         const 11;
         const 12884901903;
 },
 sat_s4IBJ_entry() //  [R1, R2]
         { []
         }
     {offset
       c4JPI: // global
           R4 = R2;
           R3 = P64[R1 + 14];
           R2 = P64[R1 + 6];
           call Foreign.Storable.$fStorableRatio2_entry(R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s4IBJ_info" {
     sat_s4IBJ_info:
         const sat_s4IBJ_entry;
         const 2;
         const 4294967307;
         const 8589934597;
         const S4ILz_srt+40;
 },
 sat_s4IBI_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c4JPQ: // global
           R6 = R4;
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 12];
           R2 = P64[R1 + 4];
           call Foreign.Storable.$fStorableRatio3_entry(R6,
                                                        R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s4IBI_info" {
     sat_s4IBI_info:
         const sat_s4IBI_entry;
         const 2;
         const 11;
         const 17179869207;
 },
 sat_s4IBH_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c4JPY: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 13];
           R2 = P64[R1 + 5];
           call Foreign.Storable.$fStorableRatio4_entry(R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s4IBH_info" {
     sat_s4IBH_info:
         const sat_s4IBH_entry;
         const 2;
         const 4294967307;
         const 12884901903;
         const S4ILz_srt+96;
 },
 sat_s4IBG_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c4JQ6: // global
           R6 = R4;
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 12];
           R2 = P64[R1 + 4];
           call Foreign.Storable.$fStorableRatio5_entry(R6,
                                                        R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s4IBG_info" {
     sat_s4IBG_info:
         const sat_s4IBG_entry;
         const 2;
         const 4294967307;
         const 17179869207;
         const S4ILz_srt+120;
 },
 sat_s4IBF_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c4JQe: // global
           R5 = R3;
           R4 = R2;
           R3 = P64[R1 + 13];
           R2 = P64[R1 + 5];
           call Foreign.Storable.$fStorableRatio7_entry(R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s4IBF_info" {
     sat_s4IBF_info:
         const sat_s4IBF_entry;
         const 2;
         const 4294967307;
         const 12884901903;
         const S4ILz_srt+104;
 },
 sat_s4IBE_entry() //  [R1]
         { []
         }
     {offset
       c4JQl: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JQm; else goto c4JQn;
       c4JQm: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JQn: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Foreign.Storable.$fStorableRatio_$calignment_entry(R3,
                                                                   R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4IBE_info" {
     sat_s4IBE_info:
         const sat_s4IBE_entry;
         const 2;
         const 4294967314;
         const S4ILz_srt+24;
 },
 sat_s4IBD_entry() //  [R1]
         { []
         }
     {offset
       c4JQs: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JQt; else goto c4JQu;
       c4JQt: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JQu: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Foreign.Storable.$fStorableRatio_$csizeOf_entry(R3,
                                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4IBD_info" {
     sat_s4IBD_info:
         const sat_s4IBD_entry;
         const 2;
         const 4294967314;
         const S4ILz_srt+88;
 },
 Foreign.Storable.$fStorableRatio_entry() //  [R2, R3]
         { []
         }
     {offset
       c4JQw: // global
           Hp = Hp + 280;
           if (Hp > HpLim) (likely: False) goto c4JQA; else goto c4JQz;
       c4JQA: // global
           HpAlloc = 280;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableRatio_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JQz: // global
           I64[Hp - 272] = sat_s4IBK_info;
           P64[Hp - 264] = R2;
           P64[Hp - 256] = R3;
           I64[Hp - 248] = sat_s4IBJ_info;
           P64[Hp - 240] = R2;
           P64[Hp - 232] = R3;
           I64[Hp - 224] = sat_s4IBI_info;
           P64[Hp - 216] = R2;
           P64[Hp - 208] = R3;
           I64[Hp - 200] = sat_s4IBH_info;
           P64[Hp - 192] = R2;
           P64[Hp - 184] = R3;
           I64[Hp - 176] = sat_s4IBG_info;
           P64[Hp - 168] = R2;
           P64[Hp - 160] = R3;
           I64[Hp - 152] = sat_s4IBF_info;
           P64[Hp - 144] = R2;
           P64[Hp - 136] = R3;
           I64[Hp - 128] = sat_s4IBE_info;
           P64[Hp - 112] = R2;
           P64[Hp - 104] = R3;
           I64[Hp - 96] = sat_s4IBD_info;
           P64[Hp - 80] = R2;
           P64[Hp - 72] = R3;
           I64[Hp - 64] = Foreign.Storable.C:Storable_con_info;
           P64[Hp - 56] = Hp - 96;
           P64[Hp - 48] = Hp - 128;
           P64[Hp - 40] = Hp - 149;
           P64[Hp - 32] = Hp - 172;
           P64[Hp - 24] = Hp - 197;
           P64[Hp - 16] = Hp - 220;
           P64[Hp - 8] = Hp - 246;
           P64[Hp] = Hp - 269;
           R1 = Hp - 63;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableRatio_info" {
     Foreign.Storable.$fStorableRatio_info:
         const Foreign.Storable.$fStorableRatio_entry;
         const 0;
         const 60494614364174;
         const 8589934607;
         const S4ILz_srt+24;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.196139596 UTC

[section ""data" . Foreign.Storable.$wpokeW64_closure" {
     Foreign.Storable.$wpokeW64_closure:
         const Foreign.Storable.$wpokeW64_info;
 },
 Foreign.Storable.$wpokeW64_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4JRS: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4JRT; else goto u4JS0;
       c4JRT: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$wpokeW64_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u4JS0: // global
           P64[Sp - 24] = R2;
           I64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c4JRq() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Foreign.Storable.$wpokeW64_info" {
     Foreign.Storable.$wpokeW64_info:
         const Foreign.Storable.$wpokeW64_entry;
         const 0;
         const 14;
         const 17179869205;
 },
 _c4JRq() //  []
         { []
         }
     {offset
       c4JRq: // global
           _s4IBP::I64 = I64[Sp + 8];
           if (_s4IBP::I64 != 0) goto c4JRQ; else goto c4JRR;
       c4JRQ: // global
           I64[Sp - 8] = block_c4JRv_info;
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s4IBP::I64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4JS2; else goto c4JRw;
       u4JS2: // global
           call _c4JRv(R1) args: 0, res: 0, upd: 0;
       c4JRw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c4JRR: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c4JRv() //  [R1]
         { []
         }
     {offset
       c4JRv: // global
           _s4IBL::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c4JRA_info;
           _s4IBR::I64 = I64[R1 + 7];
           R1 = _s4IBL::P64;
           I64[Sp + 16] = _s4IBR::I64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u4JS3; else goto c4JRB;
       u4JS3: // global
           call _c4JRA(R1) args: 0, res: 0, upd: 0;
       c4JRB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JRv_info" {
     block_c4JRv_info:
         const _c4JRv;
         const 387;
         const 30;
 },
 _c4JRA() //  [R1]
         { []
         }
     {offset
       c4JRA: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JRY; else goto c4JRX;
       c4JRY: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4JRX: // global
           _s4IBP::I64 = I64[Sp + 16];
           _s4IBR::I64 = I64[Sp + 8];
           I8[I64[R1 + 7] + (_s4IBP::I64 + -1)] = %MO_UU_Conv_W64_W8(_s4IBR::I64);
           I64[Hp - 8] = GHC.Word.W64#_con_info;
           I64[Hp] = _s4IBR::I64 >> 8;
           P64[Sp] = R1;
           I64[Sp + 8] = _s4IBP::I64 - 1;
           P64[Sp + 16] = Hp - 7;
           call _c4JRq() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c4JRA_info" {
     block_c4JRA_info:
         const _c4JRA;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.207738331 UTC

[section ""data" . Foreign.Storable.$w$cpoke_closure" {
     Foreign.Storable.$w$cpoke_closure:
         const Foreign.Storable.$w$cpoke_info;
 },
 sat_s4ICb_entry() //  [R1]
         { []
         }
     {offset
       c4JSL: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4JSS; else goto c4JST;
       c4JSS: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JST: // global
           I64[Sp - 8] = block_c4JSI_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4JSX; else goto c4JSJ;
       u4JSX: // global
           call _c4JSI(R1) args: 0, res: 0, upd: 0;
       c4JSJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s4ICb_info" {
     sat_s4ICb_info:
         const sat_s4ICb_entry;
         const 1;
         const 16;
 },
 _c4JSI() //  [R1]
         { []
         }
     {offset
       c4JSI: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JSW; else goto c4JSV;
       c4JSW: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4JSV: // global
           _s4ICa::I64 = I64[R1 + 7] + 8;
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4ICa::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JSI_info" {
     block_c4JSI_info:
         const _c4JSI;
         const 0;
         const 30;
 },
 Foreign.Storable.$w$cpoke_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4JSY: // global
           _s4IC2::I64 = R4;
           _s4IC1::I64 = R3;
           _s4IC0::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto c4JSZ; else goto c4JT0;
       c4JT0: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JT2; else goto c4JT1;
       c4JT2: // global
           HpAlloc = 16;
           goto c4JSZ;
       c4JSZ: // global
           R4 = _s4IC2::I64;
           R3 = _s4IC1::I64;
           R2 = _s4IC0::P64;
           R1 = Foreign.Storable.$w$cpoke_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JT1: // global
           I64[Hp - 8] = GHC.Word.W64#_con_info;
           I64[Hp] = _s4IC1::I64;
           I64[Sp - 24] = block_c4JSB_info;
           R4 = Hp - 7;
           R3 = 8;
           R2 = _s4IC0::P64;
           P64[Sp - 16] = _s4IC0::P64;
           I64[Sp - 8] = _s4IC2::I64;
           Sp = Sp - 24;
           call Foreign.Storable.$wpokeW64_entry(R4,
                                                 R3,
                                                 R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$w$cpoke_info" {
     Foreign.Storable.$w$cpoke_info:
         const Foreign.Storable.$w$cpoke_entry;
         const 0;
         const 14;
         const 17179869204;
 },
 _c4JSB() //  [R1]
         { []
         }
     {offset
       c4JSB: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c4JT5; else goto c4JT4;
       c4JT5: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4JT4: // global
           I64[Hp - 32] = GHC.Word.W64#_con_info;
           I64[Hp - 24] = I64[Sp + 16];
           I64[Hp - 16] = sat_s4ICb_info;
           P64[Hp] = P64[Sp + 8];
           R4 = Hp - 31;
           R3 = 8;
           R2 = Hp - 16;
           Sp = Sp + 24;
           call Foreign.Storable.$wpokeW64_entry(R4,
                                                 R3,
                                                 R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JSB_info" {
     block_c4JSB_info:
         const _c4JSB;
         const 130;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.218846923 UTC

[section ""data" . Foreign.Storable.$fStorableFingerprint1_closure" {
     Foreign.Storable.$fStorableFingerprint1_closure:
         const Foreign.Storable.$fStorableFingerprint1_info;
 },
 Foreign.Storable.$fStorableFingerprint1_entry() //  [R2, R3]
         { []
         }
     {offset
       c4JTD: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JTE; else goto c4JTF;
       c4JTE: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFingerprint1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JTF: // global
           I64[Sp - 16] = block_c4JTA_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u4JTJ; else goto c4JTB;
       u4JTJ: // global
           call _c4JTA(R1) args: 0, res: 0, upd: 0;
       c4JTB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFingerprint1_info" {
     Foreign.Storable.$fStorableFingerprint1_info:
         const Foreign.Storable.$fStorableFingerprint1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c4JTA() //  [R1]
         { []
         }
     {offset
       c4JTA: // global
           R4 = I64[R1 + 15];
           R3 = I64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call Foreign.Storable.$w$cpoke_entry(R4,
                                                R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JTA_info" {
     block_c4JTA_info:
         const _c4JTA;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.227872759 UTC

[section ""data" . Foreign.Storable.$wpeekW64_closure" {
     Foreign.Storable.$wpeekW64_closure:
         const Foreign.Storable.$wpeekW64_info;
 },
 Foreign.Storable.$wpeekW64_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4JUl: // global
           if ((Sp + -24) < SpLim) (likely: False) goto u4JUw; else goto u4JUv;
       u4JUw: // global
           P64[Sp - 24] = R2;
           I64[Sp - 16] = R3;
           I64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c4JUm() args: 0, res: 0, upd: 0;
       u4JUv: // global
           P64[Sp - 24] = R2;
           I64[Sp - 16] = R3;
           I64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c4JTV() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Foreign.Storable.$wpeekW64_info" {
     Foreign.Storable.$wpeekW64_info:
         const Foreign.Storable.$wpeekW64_entry;
         const 0;
         const 14;
         const 17179869204;
 },
 _c4JTV() //  []
         { []
         }
     {offset
       c4JTV: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JUp; else goto c4JUo;
       c4JUp: // global
           HpAlloc = 16;
           call _c4JUm() args: 0, res: 0, upd: 0;
       c4JUo: // global
           _s4ICn::I64 = I64[Sp + 8];
           if (_s4ICn::I64 != 0) goto c4JUj; else goto c4JUk;
       c4JUj: // global
           Hp = Hp - 16;
           _s4ICj::P64 = P64[Sp];
           I64[Sp] = block_c4JU0_info;
           R1 = _s4ICj::P64;
           I64[Sp + 8] = _s4ICn::I64;
           if (R1 & 7 != 0) goto u4JUy; else goto c4JU1;
       u4JUy: // global
           call _c4JU0(R1) args: 0, res: 0, upd: 0;
       c4JU1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c4JUk: // global
           I64[Hp - 8] = GHC.Word.W64#_con_info;
           I64[Hp] = I64[Sp + 16];
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c4JUm() //  []
         { []
         }
     {offset
       c4JUm: // global
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = Foreign.Storable.$wpeekW64_closure;
           Sp = Sp + 24;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 _c4JU0() //  [R1]
         { []
         }
     {offset
       c4JU0: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JUs; else goto c4JUr;
       c4JUs: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4JUr: // global
           _s4ICp::I64 = I64[R1 + 7];
           _s4ICx::I64 = (I64[Sp + 16] << 8) | %MO_UU_Conv_W8_W64(I8[_s4ICp::I64]);
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4ICp::I64 + 1;
           P64[Sp] = Hp - 7;
           I64[Sp + 8] = I64[Sp + 8] - 1;
           I64[Sp + 16] = _s4ICx::I64;
           call _c4JTV() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c4JU0_info" {
     block_c4JU0_info:
         const _c4JU0;
         const 194;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.242284713 UTC

[section ""data" . Foreign.Storable.$fStorableFingerprint2_closure" {
     Foreign.Storable.$fStorableFingerprint2_closure:
         const Foreign.Storable.$fStorableFingerprint2_info;
 },
 sat_s4ICH_entry() //  [R1]
         { []
         }
     {offset
       c4JVc: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c4JVj; else goto c4JVk;
       c4JVj: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JVk: // global
           I64[Sp - 8] = block_c4JV9_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u4JVo; else goto c4JVa;
       u4JVo: // global
           call _c4JV9(R1) args: 0, res: 0, upd: 0;
       c4JVa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s4ICH_info" {
     sat_s4ICH_info:
         const sat_s4ICH_entry;
         const 1;
         const 16;
 },
 _c4JV9() //  [R1]
         { []
         }
     {offset
       c4JV9: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JVn; else goto c4JVm;
       c4JVn: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4JVm: // global
           _s4ICG::I64 = I64[R1 + 7] + 8;
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4ICG::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JV9_info" {
     block_c4JV9_info:
         const _c4JV9;
         const 0;
         const 30;
 },
 sat_s4ICL_entry() //  [R1]
         { []
         }
     {offset
       c4JVv: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JVw; else goto c4JVx;
       c4JVw: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JVx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Fingerprint.Type.$WFingerprint_entry(R3,
                                                         R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4ICL_info" {
     sat_s4ICL_info:
         const sat_s4ICL_entry;
         const 2;
         const 18;
 },
 Foreign.Storable.$fStorableFingerprint2_entry() //  [R2]
         { []
         }
     {offset
       c4JVy: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c4JVz; else goto c4JVA;
       c4JVz: // global
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFingerprint2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c4JVA: // global
           I64[Sp - 16] = block_c4JV3_info;
           R4 = 0;
           R3 = 8;
           _s4ICz::P64 = R2;
           R2 = R2;
           P64[Sp - 8] = _s4ICz::P64;
           Sp = Sp - 16;
           call Foreign.Storable.$wpeekW64_entry(R4,
                                                 R3,
                                                 R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFingerprint2_info" {
     Foreign.Storable.$fStorableFingerprint2_info:
         const Foreign.Storable.$fStorableFingerprint2_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _c4JV3() //  [R1]
         { []
         }
     {offset
       c4JV3: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c4JVD; else goto c4JVC;
       c4JVD: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4JVC: // global
           I64[Hp - 16] = sat_s4ICH_info;
           P64[Hp] = P64[Sp + 8];
           I64[Sp] = block_c4JVp_info;
           R4 = 0;
           R3 = 8;
           R2 = Hp - 16;
           P64[Sp + 8] = R1;
           call Foreign.Storable.$wpeekW64_entry(R4,
                                                 R3,
                                                 R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JV3_info" {
     block_c4JV3_info:
         const _c4JV3;
         const 1;
         const 30;
 },
 _c4JVp() //  [R1]
         { []
         }
     {offset
       c4JVp: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c4JVG; else goto c4JVF;
       c4JVG: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4JVF: // global
           I64[Hp - 24] = sat_s4ICL_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = R1;
           R1 = Hp - 24;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JVp_info" {
     block_c4JVp_info:
         const _c4JVp;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.265044382 UTC

[section ""data" . Foreign.Storable.$fStorableFingerprint4_closure" {
     Foreign.Storable.$fStorableFingerprint4_closure:
         const Foreign.Storable.$fStorableFingerprint4_info;
 },
 sat_s4ICU_entry() //  [R1]
         { []
         }
     {offset
       c4JWr: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4JWD; else goto c4JWE;
       c4JWD: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JWE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c4JWo_info;
           _s4ICN::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s4ICN::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4JWK; else goto c4JWp;
       u4JWK: // global
           call _c4JWo(R1) args: 0, res: 0, upd: 0;
       c4JWp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4ICU_info" {
     sat_s4ICU_info:
         const sat_s4ICU_entry;
         const 2;
         const 18;
 },
 _c4JWo() //  [R1]
         { []
         }
     {offset
       c4JWo: // global
           I64[Sp] = block_c4JWu_info;
           _s4ICQ::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4ICQ::I64;
           if (R1 & 7 != 0) goto u4JWJ; else goto c4JWv;
       u4JWJ: // global
           call _c4JWu(R1) args: 0, res: 0, upd: 0;
       c4JWv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JWo_info" {
     block_c4JWo_info:
         const _c4JWo;
         const 1;
         const 30;
 },
 _c4JWu() //  [R1]
         { []
         }
     {offset
       c4JWu: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JWI; else goto c4JWH;
       c4JWI: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4JWH: // global
           _s4ICT::I64 = I64[Sp + 8] + I64[R1 + 7];
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4ICT::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JWu_info" {
     block_c4JWu_info:
         const _c4JWu;
         const 65;
         const 30;
 },
 Foreign.Storable.$fStorableFingerprint4_entry() //  [R2, R3]
         { []
         }
     {offset
       c4JWL: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c4JWP; else goto c4JWO;
       c4JWP: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFingerprint4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JWO: // global
           I64[Hp - 24] = sat_s4ICU_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R2 = Hp - 24;
           call Foreign.Storable.$fStorableFingerprint2_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFingerprint4_info" {
     Foreign.Storable.$fStorableFingerprint4_info:
         const Foreign.Storable.$fStorableFingerprint4_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.282749478 UTC

[section ""data" . Foreign.Storable.$fStorableFingerprint6_closure" {
     Foreign.Storable.$fStorableFingerprint6_closure:
         const Foreign.Storable.$fStorableFingerprint6_info;
 },
 sat_s4ID4_entry() //  [R1]
         { []
         }
     {offset
       c4JXp: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4JXE; else goto c4JXF;
       c4JXE: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JXF: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c4JXm_info;
           _s4ICW::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s4ICW::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4JXL; else goto c4JXn;
       u4JXL: // global
           call _c4JXm(R1) args: 0, res: 0, upd: 0;
       c4JXn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4ID4_info" {
     sat_s4ID4_info:
         const sat_s4ID4_entry;
         const 2;
         const 18;
 },
 _c4JXm() //  [R1]
         { []
         }
     {offset
       c4JXm: // global
           I64[Sp] = block_c4JXs_info;
           _s4ICZ::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4ICZ::I64;
           if (R1 & 7 != 0) goto u4JXK; else goto c4JXt;
       u4JXK: // global
           call _c4JXs(R1) args: 0, res: 0, upd: 0;
       c4JXt: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JXm_info" {
     block_c4JXm_info:
         const _c4JXm;
         const 1;
         const 30;
 },
 _c4JXs() //  [R1]
         { []
         }
     {offset
       c4JXs: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JXJ; else goto c4JXI;
       c4JXJ: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4JXI: // global
           _s4ID3::I64 = I64[Sp + 8] + (I64[R1 + 7] << 4);
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4ID3::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JXs_info" {
     block_c4JXs_info:
         const _c4JXs;
         const 65;
         const 30;
 },
 Foreign.Storable.$fStorableFingerprint6_entry() //  [R2, R3]
         { []
         }
     {offset
       c4JXM: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c4JXQ; else goto c4JXP;
       c4JXQ: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFingerprint6_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JXP: // global
           I64[Hp - 24] = sat_s4ID4_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R2 = Hp - 24;
           call Foreign.Storable.$fStorableFingerprint2_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFingerprint6_info" {
     Foreign.Storable.$fStorableFingerprint6_info:
         const Foreign.Storable.$fStorableFingerprint6_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.30012013 UTC

[section ""data" . Foreign.Storable.$fStorableFingerprint3_closure" {
     Foreign.Storable.$fStorableFingerprint3_closure:
         const Foreign.Storable.$fStorableFingerprint3_info;
 },
 sat_s4IDh_entry() //  [R1]
         { []
         }
     {offset
       c4JYv: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4JYH; else goto c4JYI;
       c4JYH: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JYI: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c4JYs_info;
           _s4ID6::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s4ID6::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4JYO; else goto c4JYt;
       u4JYO: // global
           call _c4JYs(R1) args: 0, res: 0, upd: 0;
       c4JYt: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4IDh_info" {
     sat_s4IDh_info:
         const sat_s4IDh_entry;
         const 2;
         const 18;
 },
 _c4JYs() //  [R1]
         { []
         }
     {offset
       c4JYs: // global
           I64[Sp] = block_c4JYy_info;
           _s4IDd::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IDd::I64;
           if (R1 & 7 != 0) goto u4JYN; else goto c4JYz;
       u4JYN: // global
           call _c4JYy(R1) args: 0, res: 0, upd: 0;
       c4JYz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JYs_info" {
     block_c4JYs_info:
         const _c4JYs;
         const 1;
         const 30;
 },
 _c4JYy() //  [R1]
         { []
         }
     {offset
       c4JYy: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4JYM; else goto c4JYL;
       c4JYM: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4JYL: // global
           _s4IDg::I64 = I64[Sp + 8] + I64[R1 + 7];
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4IDg::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JYy_info" {
     block_c4JYy_info:
         const _c4JYy;
         const 65;
         const 30;
 },
 Foreign.Storable.$fStorableFingerprint3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4JYP: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4JYQ; else goto c4JYR;
       c4JYQ: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFingerprint3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4JYR: // global
           I64[Sp - 24] = block_c4JYj_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4JYV; else goto c4JYk;
       u4JYV: // global
           call _c4JYj(R1) args: 0, res: 0, upd: 0;
       c4JYk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFingerprint3_info" {
     Foreign.Storable.$fStorableFingerprint3_info:
         const Foreign.Storable.$fStorableFingerprint3_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4JYj() //  [R1]
         { []
         }
     {offset
       c4JYj: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c4JYU; else goto c4JYT;
       c4JYU: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4JYT: // global
           _s4IDa::I64 = I64[R1 + 7];
           _s4IDb::I64 = I64[R1 + 15];
           I64[Hp - 24] = sat_s4IDh_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = P64[Sp + 16];
           R4 = _s4IDb::I64;
           R3 = _s4IDa::I64;
           R2 = Hp - 24;
           Sp = Sp + 24;
           call Foreign.Storable.$w$cpoke_entry(R4,
                                                R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JYj_info" {
     block_c4JYj_info:
         const _c4JYj;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.319487777 UTC

[section ""data" . Foreign.Storable.$fStorableFingerprint5_closure" {
     Foreign.Storable.$fStorableFingerprint5_closure:
         const Foreign.Storable.$fStorableFingerprint5_info;
 },
 sat_s4IDv_entry() //  [R1]
         { []
         }
     {offset
       c4JZI: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c4JZX; else goto c4JZY;
       c4JZX: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c4JZY: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c4JZF_info;
           _s4IDj::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s4IDj::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u4K04; else goto c4JZG;
       u4K04: // global
           call _c4JZF(R1) args: 0, res: 0, upd: 0;
       c4JZG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_s4IDv_info" {
     sat_s4IDv_info:
         const sat_s4IDv_entry;
         const 2;
         const 18;
 },
 _c4JZF() //  [R1]
         { []
         }
     {offset
       c4JZF: // global
           I64[Sp] = block_c4JZL_info;
           _s4IDq::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s4IDq::I64;
           if (R1 & 7 != 0) goto u4K03; else goto c4JZM;
       u4K03: // global
           call _c4JZL(R1) args: 0, res: 0, upd: 0;
       c4JZM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JZF_info" {
     block_c4JZF_info:
         const _c4JZF;
         const 1;
         const 30;
 },
 _c4JZL() //  [R1]
         { []
         }
     {offset
       c4JZL: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c4K02; else goto c4K01;
       c4K02: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c4K01: // global
           _s4IDu::I64 = I64[Sp + 8] + (I64[R1 + 7] << 4);
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s4IDu::I64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_c4JZL_info" {
     block_c4JZL_info:
         const _c4JZL;
         const 65;
         const 30;
 },
 Foreign.Storable.$fStorableFingerprint5_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c4K05: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c4K06; else goto c4K07;
       c4K06: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.Storable.$fStorableFingerprint5_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c4K07: // global
           I64[Sp - 24] = block_c4JZw_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u4K0b; else goto c4JZx;
       u4K0b: // global
           call _c4JZw(R1) args: 0, res: 0, upd: 0;
       c4JZx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.$fStorableFingerprint5_info" {
     Foreign.Storable.$fStorableFingerprint5_info:
         const Foreign.Storable.$fStorableFingerprint5_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _c4JZw() //  [R1]
         { []
         }
     {offset
       c4JZw: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c4K0a; else goto c4K09;
       c4K0a: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c4K09: // global
           _s4IDn::I64 = I64[R1 + 7];
           _s4IDo::I64 = I64[R1 + 15];
           I64[Hp - 24] = sat_s4IDv_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = P64[Sp + 16];
           R4 = _s4IDo::I64;
           R3 = _s4IDn::I64;
           R2 = Hp - 24;
           Sp = Sp + 24;
           call Foreign.Storable.$w$cpoke_entry(R4,
                                                R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c4JZw_info" {
     block_c4JZw_info:
         const _c4JZw;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.334098857 UTC

[section ""data" . Foreign.Storable.$fStorableFingerprint_closure" {
     Foreign.Storable.$fStorableFingerprint_closure:
         const Foreign.Storable.C:Storable_con_info;
         const Foreign.Storable.$fStorableFingerprint_$csizeOf_closure+1;
         const Foreign.Storable.$fStorableFingerprint_$calignment_closure+1;
         const Foreign.Storable.$fStorableFingerprint6_closure+3;
         const Foreign.Storable.$fStorableFingerprint5_closure+4;
         const Foreign.Storable.$fStorableFingerprint4_closure+3;
         const Foreign.Storable.$fStorableFingerprint3_closure+4;
         const Foreign.Storable.$fStorableFingerprint2_closure+2;
         const Foreign.Storable.$fStorableFingerprint1_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.337896885 UTC

[section ""data" . Foreign.Storable.C:Storable_closure" {
     Foreign.Storable.C:Storable_closure:
         const Foreign.Storable.C:Storable_info;
 },
 Foreign.Storable.C:Storable_slow() //  [R1]
         { []
         }
     {offset
       c4K0K: // global
           R6 = P64[Sp + 32];
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call Foreign.Storable.C:Storable_entry(R6,
                                                  R5,
                                                  R4,
                                                  R3,
                                                  R2,
                                                  R1) args: 32, res: 0, upd: 8;
     }
 },
 Foreign.Storable.C:Storable_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       c4K0P: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto c4K0T; else goto c4K0S;
       c4K0T: // global
           HpAlloc = 72;
           R1 = Foreign.Storable.C:Storable_closure;
           P64[Sp - 40] = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           call (stg_gc_fun)(R1) args: 72, res: 0, upd: 8;
       c4K0S: // global
           I64[Hp - 64] = Foreign.Storable.C:Storable_con_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           P64[Hp - 40] = R4;
           P64[Hp - 32] = R5;
           P64[Hp - 24] = R6;
           P64[Hp - 16] = P64[Sp];
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = P64[Sp + 16];
           R1 = Hp - 63;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.C:Storable_info" {
     Foreign.Storable.C:Storable_info:
         const Foreign.Storable.C:Storable_entry;
         const 0;
         const 14;
         const 34359738368;
         const 0;
         const 8;
         const Foreign.Storable.C:Storable_slow;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.344801138 UTC

[section ""cstring" . i4K16_str" {
     i4K16_str:
         I8[] [98,97,115,101,58,70,111,114,101,105,103,110,46,83,116,111,114,97,98,108,101,46,67,58,83,116,111,114,97,98,108,101]
 },
 Foreign.Storable.C:Storable_con_entry() //  [R1]
         { []
         }
     {offset
       c4K15: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.Storable.C:Storable_con_info" {
     Foreign.Storable.C:Storable_con_info:
         const Foreign.Storable.C:Storable_con_entry;
         const 8;
         const 1;
         const i4K16_str;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:38.349490119 UTC

[section ""relreadonly" . S4ILz_srt" {
     S4ILz_srt:
         const GHC.Err.undefined_closure;
         const lvl10_r4Ffj_closure;
         const Foreign.Storable.$fStorableRatio8_closure;
         const Foreign.Storable.$fStorableRatio_$calignment_closure;
         const GHC.Real.%_closure;
         const Foreign.Storable.$fStorableRatio2_closure;
         const lvl15_r4Ffp_closure;
         const lvl16_r4Ffq_closure;
         const Foreign.Storable.$dmpeekElemOff_closure;
         const lvl19_r4Fft_closure;
         const Foreign.Storable.$fStorableRatio6_closure;
         const Foreign.Storable.$fStorableRatio_$csizeOf_closure;
         const Foreign.Storable.$fStorableRatio4_closure;
         const Foreign.Storable.$fStorableRatio7_closure;
         const Foreign.Storable.$w$cpokeElemOff_closure;
         const Foreign.Storable.$fStorableRatio5_closure;
         const Foreign.Storable.$fStorableRatio_closure;
 }]

