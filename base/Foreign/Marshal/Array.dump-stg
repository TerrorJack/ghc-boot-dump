
==================== Pre unarise: ====================
2018-03-16 16:03:59.214462601 UTC

lvl_r8PPf :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "undefined"#;

lvl1_r8PPg :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_r8PPf;

Foreign.Marshal.Array.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

lvl2_r8PPh :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# Foreign.Marshal.Array.$trModule4;

Foreign.Marshal.Array.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.Marshal.Array"#;

lvl3_r8PPi :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# Foreign.Marshal.Array.$trModule2;

lvl4_r8PPj :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "./Foreign/Marshal/Array.hs"#;

lvl5_r8PPk :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl4_r8PPj;

lvl6_r8PPl :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [86#];

lvl7_r8PPm :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [25#];

lvl8_r8PPn :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [34#];

lvl9_r8PPo :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl6_r8PPl
                                           lvl7_r8PPm
                                           lvl6_r8PPl
                                           lvl8_r8PPn];

lvl10_r8PPp :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl9_r8PPo
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.mallocArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl10_r8PPp;

Foreign.Marshal.Array.mallocArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PPN]
        let {
          lvl33_s8PPO [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8PPN] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8PPN Foreign.Marshal.Array.mallocArray1; } in
        let {
          sat_s8PQ3 [Occ=Once]
            :: GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a_a8Phr #)
          [LclId] =
              [lvl33_s8PPO] \r [size_s8PPP s_s8PPQ]
                  case size_s8PPP of {
                    GHC.Types.I# x_s8PPS [Occ=Once] ->
                        case lvl33_s8PPO of {
                          GHC.Types.I# y_s8PPU [Occ=Once] ->
                              case *# [x_s8PPS y_s8PPU] of sat_s8PPW {
                                __DEFAULT ->
                                    case int2Word# [sat_s8PPW] of sat_s8PPX {
                                      __DEFAULT ->
                                          case __pkg_ccall base-4.11.0.0 [sat_s8PPX s_s8PPQ] of {
                                            (#,#) ds_s8PPZ [Occ=Once*] ds1_s8PQ0 ->
                                                case eqAddr# [ds1_s8PQ0 __NULL] of {
                                                  __DEFAULT ->
                                                      let {
                                                        sat_s8PQ2 [Occ=Once] :: GHC.Ptr.Ptr a_a8Phr
                                                        [LclId] =
                                                            CCCS GHC.Ptr.Ptr! [ds1_s8PQ0];
                                                      } in  (#,#) [ds_s8PPZ sat_s8PQ2];
                                                  1# ->
                                                      raiseIO# [Foreign.Marshal.Alloc.malloc1
                                                                ds_s8PPZ];
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8PQ3;

Foreign.Marshal.Array.$wmallocArray0 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8PQ4 ww_s8PQ5 w1_s8PQ6]
        case
            Foreign.Storable.sizeOf w_s8PQ4 Foreign.Marshal.Array.mallocArray1
        of
        { GHC.Types.I# y_s8PQ8 [Occ=Once] ->
              case +# [ww_s8PQ5 1#] of sat_s8PQa {
                __DEFAULT ->
                    case *# [sat_s8PQa y_s8PQ8] of sat_s8PQb {
                      __DEFAULT ->
                          case int2Word# [sat_s8PQb] of sat_s8PQc {
                            __DEFAULT ->
                                case __pkg_ccall base-4.11.0.0 [sat_s8PQc w1_s8PQ6] of {
                                  (#,#) ds_s8PQe [Occ=Once*] ds1_s8PQf ->
                                      case eqAddr# [ds1_s8PQf __NULL] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s8PQh [Occ=Once] :: GHC.Ptr.Ptr a_s8PCz
                                              [LclId] =
                                                  CCCS GHC.Ptr.Ptr! [ds1_s8PQf];
                                            } in  (#,#) [ds_s8PQe sat_s8PQh];
                                        1# -> raiseIO# [Foreign.Marshal.Alloc.malloc1 ds_s8PQe];
                                      };
                                };
                          };
                    };
              };
        };

Foreign.Marshal.Array.mallocArray2 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8PQi w1_s8PQj w2_s8PQk]
        case w1_s8PQj of {
          GHC.Types.I# ww1_s8PQm [Occ=Once] ->
              Foreign.Marshal.Array.$wmallocArray0 w_s8PQi ww1_s8PQm w2_s8PQk;
        };

Foreign.Marshal.Array.mallocArray0
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Array.mallocArray2 eta_B3 eta_B2 eta_B1;

lvl11_r8PPq :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [100#];

lvl12_r8PPr :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl11_r8PPq
                                           lvl7_r8PPm
                                           lvl11_r8PPq
                                           lvl8_r8PPn];

lvl13_r8PPs :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl12_r8PPr
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.callocArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl13_r8PPs;

Foreign.Marshal.Array.callocArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PQn]
        let {
          lvl33_s8PQo [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8PQn] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8PQn Foreign.Marshal.Array.callocArray1; } in
        let {
          sat_s8PQD [Occ=Once]
            :: GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a_a8PgI #)
          [LclId] =
              [lvl33_s8PQo] \r [size_s8PQp s_s8PQq]
                  case size_s8PQp of {
                    GHC.Types.I# x_s8PQs [Occ=Once] ->
                        case lvl33_s8PQo of {
                          GHC.Types.I# y_s8PQu [Occ=Once] ->
                              case *# [x_s8PQs y_s8PQu] of sat_s8PQw {
                                __DEFAULT ->
                                    case int2Word# [sat_s8PQw] of sat_s8PQx {
                                      __DEFAULT ->
                                          case
                                              __pkg_ccall base-4.11.0.0 [1## sat_s8PQx s_s8PQq]
                                          of
                                          { (#,#) ds_s8PQz [Occ=Once*] ds1_s8PQA ->
                                                case eqAddr# [ds1_s8PQA __NULL] of {
                                                  __DEFAULT ->
                                                      let {
                                                        sat_s8PQC [Occ=Once] :: GHC.Ptr.Ptr a_a8PgI
                                                        [LclId] =
                                                            CCCS GHC.Ptr.Ptr! [ds1_s8PQA];
                                                      } in  (#,#) [ds_s8PQz sat_s8PQC];
                                                  1# ->
                                                      raiseIO# [Foreign.Marshal.Alloc.calloc1
                                                                ds_s8PQz];
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8PQD;

Foreign.Marshal.Array.$wcallocArray0 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8PQE ww_s8PQF w1_s8PQG]
        case
            Foreign.Storable.sizeOf w_s8PQE Foreign.Marshal.Array.callocArray1
        of
        { GHC.Types.I# y_s8PQI [Occ=Once] ->
              case +# [ww_s8PQF 1#] of sat_s8PQK {
                __DEFAULT ->
                    case *# [sat_s8PQK y_s8PQI] of sat_s8PQL {
                      __DEFAULT ->
                          case int2Word# [sat_s8PQL] of sat_s8PQM {
                            __DEFAULT ->
                                case __pkg_ccall base-4.11.0.0 [1## sat_s8PQM w1_s8PQG] of {
                                  (#,#) ds_s8PQO [Occ=Once*] ds1_s8PQP ->
                                      case eqAddr# [ds1_s8PQP __NULL] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s8PQR [Occ=Once] :: GHC.Ptr.Ptr a_s8PCK
                                              [LclId] =
                                                  CCCS GHC.Ptr.Ptr! [ds1_s8PQP];
                                            } in  (#,#) [ds_s8PQO sat_s8PQR];
                                        1# -> raiseIO# [Foreign.Marshal.Alloc.calloc1 ds_s8PQO];
                                      };
                                };
                          };
                    };
              };
        };

Foreign.Marshal.Array.callocArray2 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8PQS w1_s8PQT w2_s8PQU]
        case w1_s8PQT of {
          GHC.Types.I# ww1_s8PQW [Occ=Once] ->
              Foreign.Marshal.Array.$wcallocArray0 w_s8PQS ww1_s8PQW w2_s8PQU;
        };

Foreign.Marshal.Array.callocArray0
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Array.callocArray2 eta_B3 eta_B2 eta_B1;

lvl14_r8PPt :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [115#];

lvl15_r8PPu :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl14_r8PPt
                                           lvl7_r8PPm
                                           lvl14_r8PPt
                                           lvl8_r8PPn];

lvl16_r8PPv :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl15_r8PPu
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.allocaArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl16_r8PPv;

Foreign.Marshal.Array.allocaArray
  :: forall a b.
     Foreign.Storable.Storable a =>
     GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=1,
 Str=<L,U(1*C1(U(U)),1*C1(U(U)),A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PQX]
        let {
          lvl33_s8PQY [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8PQX] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8PQX Foreign.Marshal.Array.allocaArray1; } in
        let {
          ds1_s8PQZ [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8PQX] \u []
                  Foreign.Storable.alignment
                      $dStorable_s8PQX Foreign.Marshal.Array.allocaArray1; } in
        let {
          sat_s8PRm [Occ=Once]
            :: GHC.Types.Int
               -> (GHC.Ptr.Ptr a_a8Per -> GHC.Types.IO b_a8Pes)
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_a8Pes #)
          [LclId] =
              [lvl33_s8PQY ds1_s8PQZ] \r [size_s8PR0 eta_s8PR1 eta1_s8PR2]
                  case size_s8PR0 of {
                    GHC.Types.I# x_s8PR4 [Occ=Once] ->
                        case lvl33_s8PQY of {
                          GHC.Types.I# y_s8PR6 [Occ=Once] ->
                              case ds1_s8PQZ of {
                                GHC.Types.I# align_s8PR8 [Occ=Once] ->
                                    case *# [x_s8PR4 y_s8PR6] of sat_s8PR9 {
                                      __DEFAULT ->
                                          case
                                              newAlignedPinnedByteArray# [sat_s8PR9
                                                                          align_s8PR8
                                                                          eta1_s8PR2]
                                          of
                                          { (#,#) ipv_s8PRb [Occ=Once] ipv1_s8PRc [Occ=Once] ->
                                                case
                                                    unsafeFreezeByteArray# [ipv1_s8PRc ipv_s8PRb]
                                                of
                                                { (#,#) ipv2_s8PRe [Occ=Once] ipv3_s8PRf ->
                                                      case
                                                          byteArrayContents# [ipv3_s8PRf]
                                                      of
                                                      sat_s8PRg
                                                      { __DEFAULT ->
                                                            let {
                                                              sat_s8PRh [Occ=Once]
                                                                :: GHC.Ptr.Ptr a_a8Per
                                                              [LclId] =
                                                                  CCCS GHC.Ptr.Ptr! [sat_s8PRg];
                                                            } in 
                                                              case
                                                                  eta_s8PR1 sat_s8PRh ipv2_s8PRe
                                                              of
                                                              { (#,#) ipv4_s8PRj [Occ=Once]
                                                                      ipv5_s8PRk [Occ=Once] ->
                                                                    case
                                                                        touch# [ipv3_s8PRf
                                                                                ipv4_s8PRj]
                                                                    of
                                                                    s4_s8PRl
                                                                    { __DEFAULT ->
                                                                          (#,#) [s4_s8PRl
                                                                                 ipv5_s8PRk];
                                                                    };
                                                              };
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8PRm;

Foreign.Marshal.Array.allocaArray0 [InlPrag=INLINE (sat-args=1)]
  :: forall a b.
     Foreign.Storable.Storable a =>
     GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=2,
 Str=<L,U(C(U(U)),C(U(U)),A,A,A,A,A,A)><L,1*U(U)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PRn eta_s8PRo]
        let {
          sat_s8PRs [Occ=Once] :: GHC.Types.Int
          [LclId] =
              [eta_s8PRo] \u []
                  case eta_s8PRo of {
                    GHC.Types.I# x_s8PRq [Occ=Once] ->
                        case +# [x_s8PRq 1#] of sat_s8PRr {
                          __DEFAULT -> GHC.Types.I# [sat_s8PRr];
                        };
                  };
        } in  Foreign.Marshal.Array.allocaArray $dStorable_s8PRn sat_s8PRs;

lvl17_r8PPw :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [133#];

lvl18_r8PPx :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [27#];

lvl19_r8PPy :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [36#];

lvl20_r8PPz :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl17_r8PPw
                                           lvl18_r8PPx
                                           lvl17_r8PPw
                                           lvl19_r8PPy];

lvl21_r8PPA :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl20_r8PPz
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.reallocArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl21_r8PPA;

Foreign.Marshal.Array.reallocArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PRt]
        let {
          lvl33_s8PRu [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8PRt] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8PRt Foreign.Marshal.Array.reallocArray1; } in
        let {
          sat_s8PRP [Occ=Once]
            :: GHC.Ptr.Ptr a_a8PdG
               -> GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a_a8PdG #)
          [LclId] =
              [lvl33_s8PRu] \r [ptr_s8PRv size_s8PRw eta_s8PRx]
                  case size_s8PRw of {
                    GHC.Types.I# x_s8PRz [Occ=Once] ->
                        case lvl33_s8PRu of {
                          GHC.Types.I# y_s8PRB [Occ=Once] ->
                              case ptr_s8PRv of {
                                GHC.Ptr.Ptr ww1_s8PRD [Occ=Once*] ->
                                    case *# [x_s8PRz y_s8PRB] of ds_s8PRE {
                                      __DEFAULT ->
                                          case int2Word# [ds_s8PRE] of sat_s8PRG {
                                            __DEFAULT ->
                                                case
                                                    __pkg_ccall base-4.11.0.0 [ww1_s8PRD
                                                                               sat_s8PRG
                                                                               eta_s8PRx]
                                                of
                                                { (#,#) ds1_s8PRI [Occ=Once*] ds2_s8PRJ ->
                                                      case eqAddr# [ds2_s8PRJ __NULL] of {
                                                        __DEFAULT ->
                                                            let {
                                                              sat_s8PRL [Occ=Once]
                                                                :: GHC.Ptr.Ptr a_a8PdG
                                                              [LclId] =
                                                                  CCCS GHC.Ptr.Ptr! [ds2_s8PRJ];
                                                            } in  (#,#) [ds1_s8PRI sat_s8PRL];
                                                        1# ->
                                                            raiseIO# [Foreign.Marshal.Alloc.realloc2
                                                                      ds1_s8PRI];
                                                      };
                                                };
                                          };
                                      0# ->
                                          case __pkg_ccall base-4.11.0.0 [ww1_s8PRD eta_s8PRx] of {
                                            Unit# ds1_s8PRO [Occ=Once] ->
                                                (#,#) [ds1_s8PRO GHC.Ptr.nullPtr];
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8PRP;

Foreign.Marshal.Array.$wreallocArray0 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8PRQ ww_s8PRR ww1_s8PRS w1_s8PRT]
        case
            Foreign.Storable.sizeOf w_s8PRQ Foreign.Marshal.Array.reallocArray1
        of
        { GHC.Types.I# y_s8PRV [Occ=Once] ->
              case +# [ww1_s8PRS 1#] of sat_s8PRW {
                __DEFAULT ->
                    case *# [sat_s8PRW y_s8PRV] of ds_s8PRX {
                      __DEFAULT ->
                          case int2Word# [ds_s8PRX] of sat_s8PRZ {
                            __DEFAULT ->
                                case __pkg_ccall base-4.11.0.0 [ww_s8PRR sat_s8PRZ w1_s8PRT] of {
                                  (#,#) ds1_s8PS1 [Occ=Once*] ds2_s8PS2 ->
                                      case eqAddr# [ds2_s8PS2 __NULL] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s8PS4 [Occ=Once] :: GHC.Ptr.Ptr a_s8PCY
                                              [LclId] =
                                                  CCCS GHC.Ptr.Ptr! [ds2_s8PS2];
                                            } in  (#,#) [ds1_s8PS1 sat_s8PS4];
                                        1# -> raiseIO# [Foreign.Marshal.Alloc.realloc2 ds1_s8PS1];
                                      };
                                };
                          };
                      0# ->
                          case __pkg_ccall base-4.11.0.0 [ww_s8PRR w1_s8PRT] of {
                            Unit# ds1_s8PS7 [Occ=Once] -> (#,#) [ds1_s8PS7 GHC.Ptr.nullPtr];
                          };
                    };
              };
        };

Foreign.Marshal.Array.reallocArray2 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8PS8 w1_s8PS9 w2_s8PSa w3_s8PSb]
        case w1_s8PS9 of {
          GHC.Ptr.Ptr ww1_s8PSd [Occ=Once] ->
              case w2_s8PSa of {
                GHC.Types.I# ww3_s8PSf [Occ=Once] ->
                    Foreign.Marshal.Array.$wreallocArray0
                        w_s8PS8 ww1_s8PSd ww3_s8PSf w3_s8PSb;
              };
        };

Foreign.Marshal.Array.reallocArray0
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Array.reallocArray2 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.Marshal.Array.lengthArray2 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

Foreign.Marshal.Array.$wpeekArray [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.Int#
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a] #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><S,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8PSg ww_s8PSh w1_s8PSi w2_s8PSj]
        case <=# [ww_s8PSh 0#] of {
          __DEFAULT ->
              case -# [ww_s8PSh 1#] of sat_s8PSD {
                __DEFAULT ->
                    let-no-escape {
                      exit_s8PSl [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
                        :: [a_s8PDk]
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a_s8PDk] #)
                      [LclId[JoinId(2)], Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
                          sat-only [w_s8PSg w1_s8PSi] \r [w3_s8PSm w4_s8PSn]
                              case
                                  Foreign.Storable.peekElemOff
                                      w_s8PSg w1_s8PSi Foreign.Marshal.Array.lengthArray2 w4_s8PSn
                              of
                              { (#,#) ipv_s8PSp [Occ=Once] ipv1_s8PSq [Occ=Once] ->
                                    let {
                                      sat_s8PSr [Occ=Once] :: [a_s8PDk]
                                      [LclId] =
                                          CCCS :! [ipv1_s8PSq w3_s8PSm];
                                    } in  (#,#) [ipv_s8PSp sat_s8PSr];
                              };
                    } in 
                      let-no-escape {
                        $wf_s8PSs [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                          :: GHC.Prim.Int#
                             -> [a_s8PDk]
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a_s8PDk] #)
                        [LclId[JoinId(3)],
                         Arity=3,
                         Str=<S,1*U><L,U><S,U>,
                         Unf=OtherCon []] =
                            sat-only [w_s8PSg w1_s8PSi exit_s8PSl $wf_s8PSs] \r [ww1_s8PSt
                                                                                 w3_s8PSu
                                                                                 w4_s8PSv]
                                case ww1_s8PSt of ds_s8PSw {
                                  __DEFAULT ->
                                      let {
                                        sat_s8PSx [Occ=Once] :: GHC.Types.Int
                                        [LclId] =
                                            CCCS GHC.Types.I#! [ds_s8PSw];
                                      } in 
                                        case
                                            Foreign.Storable.peekElemOff
                                                w_s8PSg w1_s8PSi sat_s8PSx w4_s8PSv
                                        of
                                        { (#,#) ipv_s8PSz [Occ=Once] ipv1_s8PSA [Occ=Once] ->
                                              let {
                                                sat_s8PSC [Occ=Once] :: [a_s8PDk]
                                                [LclId] =
                                                    CCCS :! [ipv1_s8PSA w3_s8PSu];
                                              } in 
                                                case -# [ds_s8PSw 1#] of sat_s8PSB {
                                                  __DEFAULT ->
                                                      $wf_s8PSs sat_s8PSB sat_s8PSC ipv_s8PSz;
                                                };
                                        };
                                  0# -> exit_s8PSl w3_s8PSu w4_s8PSv;
                                };
                      } in  $wf_s8PSs sat_s8PSD GHC.Types.[] w2_s8PSj;
              };
          1# -> (#,#) [w2_s8PSj GHC.Types.[]];
        };

Foreign.Marshal.Array.peekArray1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a] #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><S(S),1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8PSE w1_s8PSF w2_s8PSG w3_s8PSH]
        case w1_s8PSF of {
          GHC.Types.I# ww1_s8PSJ [Occ=Once] ->
              Foreign.Marshal.Array.$wpeekArray
                  w_s8PSE ww1_s8PSJ w2_s8PSG w3_s8PSH;
        };

Foreign.Marshal.Array.peekArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int -> GHC.Ptr.Ptr a -> GHC.Types.IO [a]
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><S(S),1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Array.peekArray1 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.Marshal.Array.newArray2
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a
     -> [a]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U(A,A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PSK ptr_s8PSL vals0_s8PSM eta_s8PSN]
        let-no-escape {
          go_s8PSO [Occ=LoopBreakerT[3]]
            :: [a_a8PbP]
               -> GHC.Prim.Int#
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId[JoinId(3)],
           Arity=3,
           Str=<S,1*U><L,U><S,U>,
           Unf=OtherCon []] =
              sat-only [$dStorable_s8PSK ptr_s8PSL go_s8PSO] \r [ds_s8PSP
                                                                 ds1_s8PSQ
                                                                 eta1_s8PSR]
                  case ds_s8PSP of {
                    [] -> (#,#) [eta1_s8PSR GHC.Tuple.()];
                    : val_s8PST [Occ=Once] vals_s8PSU [Occ=Once] ->
                        let {
                          sat_s8PSV [Occ=Once] :: GHC.Types.Int
                          [LclId] =
                              CCCS GHC.Types.I#! [ds1_s8PSQ];
                        } in 
                          case
                              Foreign.Storable.pokeElemOff
                                  $dStorable_s8PSK ptr_s8PSL sat_s8PSV val_s8PST eta1_s8PSR
                          of
                          { (#,#) ipv_s8PSX [Occ=Once] _ [Occ=Dead] ->
                                case +# [ds1_s8PSQ 1#] of sat_s8PSZ {
                                  __DEFAULT -> go_s8PSO vals_s8PSU sat_s8PSZ ipv_s8PSX;
                                };
                          };
                  };
        } in  go_s8PSO vals0_s8PSM 0# eta_s8PSN;

Foreign.Marshal.Array.pokeArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> [a] -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U(A,A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Array.newArray2 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.Marshal.Array.withArrayLen
  :: forall a b.
     Foreign.Storable.Storable a =>
     [a]
     -> (GHC.Types.Int -> GHC.Ptr.Ptr a -> GHC.Types.IO b)
     -> GHC.Types.IO b
[GblId,
 Arity=3,
 Str=<L,U(C(U(U)),C(U(U)),A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,U><L,C(C1(C1(U)))>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PT0 vals_s8PT1 f_s8PT2]
        let {
          len_s8PT3 :: GHC.Types.Int
          [LclId] =
              [vals_s8PT1] \u []
                  case GHC.List.$wlenAcc vals_s8PT1 0# of ww2_s8PT4 {
                    __DEFAULT -> GHC.Types.I# [ww2_s8PT4];
                  }; } in
        let {
          sat_s8PTa [Occ=Once] :: GHC.Ptr.Ptr a_a8Pg7 -> GHC.Types.IO b_a8Pg8
          [LclId] =
              [$dStorable_s8PT0 vals_s8PT1 f_s8PT2 len_s8PT3] \r [ptr_s8PT5
                                                                  s_s8PT6]
                  case
                      Foreign.Marshal.Array.newArray2
                          $dStorable_s8PT0 ptr_s8PT5 vals_s8PT1 s_s8PT6
                  of
                  { (#,#) ipv_s8PT8 [Occ=Once] _ [Occ=Dead] ->
                        f_s8PT2 len_s8PT3 ptr_s8PT5 ipv_s8PT8;
                  };
        } in 
          Foreign.Marshal.Array.allocaArray
              $dStorable_s8PT0 len_s8PT3 sat_s8PTa;

Foreign.Marshal.Array.withArray
  :: forall a b.
     Foreign.Storable.Storable a =>
     [a] -> (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=3,
 Str=<L,U(C(U(U)),C(U(U)),A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,U><L,C(C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PTb vals_s8PTc x_s8PTd]
        let {
          sat_s8PTl [Occ=Once] :: GHC.Ptr.Ptr a_a8Pgv -> GHC.Types.IO b_a8Pgw
          [LclId] =
              [$dStorable_s8PTb vals_s8PTc x_s8PTd] \r [ptr_s8PTg s_s8PTh]
                  case
                      Foreign.Marshal.Array.newArray2
                          $dStorable_s8PTb ptr_s8PTg vals_s8PTc s_s8PTh
                  of
                  { (#,#) ipv_s8PTj [Occ=Once] _ [Occ=Dead] ->
                        x_s8PTd ptr_s8PTg ipv_s8PTj;
                  }; } in
        let {
          sat_s8PTf [Occ=Once] :: GHC.Types.Int
          [LclId] =
              [vals_s8PTc] \u []
                  case GHC.List.$wlenAcc vals_s8PTc 0# of ww2_s8PTe {
                    __DEFAULT -> GHC.Types.I# [ww2_s8PTe];
                  };
        } in 
          Foreign.Marshal.Array.allocaArray
              $dStorable_s8PTb sat_s8PTf sat_s8PTl;

Foreign.Marshal.Array.newArray1
  :: forall a.
     Foreign.Storable.Storable a =>
     [a]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PTm vals_s8PTn s_s8PTo]
        case GHC.List.$wlenAcc vals_s8PTn 0# of ww2_s8PTp {
          __DEFAULT ->
              case
                  Foreign.Storable.sizeOf
                      $dStorable_s8PTm Foreign.Marshal.Array.mallocArray1
              of
              { GHC.Types.I# y_s8PTr [Occ=Once] ->
                    case *# [ww2_s8PTp y_s8PTr] of sat_s8PTt {
                      __DEFAULT ->
                          case int2Word# [sat_s8PTt] of sat_s8PTu {
                            __DEFAULT ->
                                case __pkg_ccall base-4.11.0.0 [sat_s8PTu s_s8PTo] of {
                                  (#,#) ds_s8PTw [Occ=Once*] ds1_s8PTx ->
                                      case eqAddr# [ds1_s8PTx __NULL] of {
                                        __DEFAULT ->
                                            let {
                                              ipv1_s8PTz :: GHC.Ptr.Ptr a_a8Piu
                                              [LclId, Unf=OtherCon []] =
                                                  CCCS GHC.Ptr.Ptr! [ds1_s8PTx];
                                            } in 
                                              case
                                                  Foreign.Marshal.Array.newArray2
                                                      $dStorable_s8PTm
                                                      ipv1_s8PTz
                                                      vals_s8PTn
                                                      ds_s8PTw
                                              of
                                              { (#,#) ipv_s8PTB [Occ=Once] _ [Occ=Dead] ->
                                                    (#,#) [ipv_s8PTB ipv1_s8PTz];
                                              };
                                        1# -> raiseIO# [Foreign.Marshal.Alloc.malloc1 ds_s8PTw];
                                      };
                                };
                          };
                    };
              };
        };

Foreign.Marshal.Array.newArray
  :: forall a.
     Foreign.Storable.Storable a =>
     [a] -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Array.newArray1 eta_B3 eta_B2 eta_B1;

Foreign.Marshal.Array.newArray4
  :: forall a.
     Foreign.Storable.Storable a =>
     a
     -> GHC.Ptr.Ptr a
     -> [a]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(C(C(S))))LLLL),U(A,A,A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><L,U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PTD
           marker_s8PTE
           ptr_s8PTF
           vals0_s8PTG
           eta_s8PTH]
        let-no-escape {
          exit_s8PTI [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
            :: GHC.Prim.Int#
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId[JoinId(2)], Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
              sat-only [$dStorable_s8PTD marker_s8PTE ptr_s8PTF] \r [n#_s8PTJ
                                                                     eta1_s8PTK]
                  let {
                    sat_s8PTL [Occ=Once] :: GHC.Types.Int
                    [LclId] =
                        CCCS GHC.Types.I#! [n#_s8PTJ];
                  } in 
                    Foreign.Storable.pokeElemOff
                        $dStorable_s8PTD ptr_s8PTF sat_s8PTL marker_s8PTE eta1_s8PTK;
        } in 
          let-no-escape {
            go_s8PTM [Occ=LoopBreakerT[3]]
              :: [a_a8Pbf]
                 -> GHC.Prim.Int#
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
            [LclId[JoinId(3)],
             Arity=3,
             Str=<S,1*U><L,U><S,U>,
             Unf=OtherCon []] =
                sat-only [$dStorable_s8PTD
                          ptr_s8PTF
                          exit_s8PTI
                          go_s8PTM] \r [ds_s8PTN n#_s8PTO eta1_s8PTP]
                    case ds_s8PTN of {
                      [] -> exit_s8PTI n#_s8PTO eta1_s8PTP;
                      : val_s8PTR [Occ=Once] vals_s8PTS [Occ=Once] ->
                          let {
                            sat_s8PTT [Occ=Once] :: GHC.Types.Int
                            [LclId] =
                                CCCS GHC.Types.I#! [n#_s8PTO];
                          } in 
                            case
                                Foreign.Storable.pokeElemOff
                                    $dStorable_s8PTD ptr_s8PTF sat_s8PTT val_s8PTR eta1_s8PTP
                            of
                            { (#,#) ipv_s8PTV [Occ=Once] _ [Occ=Dead] ->
                                  case +# [n#_s8PTO 1#] of sat_s8PTX {
                                    __DEFAULT -> go_s8PTM vals_s8PTS sat_s8PTX ipv_s8PTV;
                                  };
                            };
                    };
          } in  go_s8PTM vals0_s8PTG 0# eta_s8PTH;

Foreign.Marshal.Array.pokeArray0
  :: forall a.
     Foreign.Storable.Storable a =>
     a -> GHC.Ptr.Ptr a -> [a] -> GHC.Types.IO ()
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(C(C(S))))LLLL),U(A,A,A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><L,U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Array.newArray4 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.Marshal.Array.withArrayLen0
  :: forall a b.
     Foreign.Storable.Storable a =>
     a
     -> [a]
     -> (GHC.Types.Int -> GHC.Ptr.Ptr a -> GHC.Types.IO b)
     -> GHC.Types.IO b
[GblId,
 Arity=4,
 Str=<L,U(C(U(U)),C(U(U)),A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><L,U><L,C(C1(C1(U)))>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PTY marker_s8PTZ vals_s8PU0 f_s8PU1]
        let {
          len_s8PU2 [Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [vals_s8PU0] \u []
                  case GHC.List.$wlenAcc vals_s8PU0 0# of ww2_s8PU3 {
                    __DEFAULT -> GHC.Types.I# [ww2_s8PU3];
                  }; } in
        let {
          sat_s8PUd [Occ=Once] :: GHC.Ptr.Ptr a_a8Pfp -> GHC.Types.IO b_a8Pfq
          [LclId] =
              [$dStorable_s8PTY
               marker_s8PTZ
               vals_s8PU0
               f_s8PU1
               len_s8PU2] \r [ptr_s8PU8 s_s8PU9]
                  case
                      Foreign.Marshal.Array.newArray4
                          $dStorable_s8PTY marker_s8PTZ ptr_s8PU8 vals_s8PU0 s_s8PU9
                  of
                  { (#,#) ipv_s8PUb [Occ=Once] _ [Occ=Dead] ->
                        f_s8PU1 len_s8PU2 ptr_s8PU8 ipv_s8PUb;
                  }; } in
        let {
          sat_s8PU7 [Occ=Once] :: GHC.Types.Int
          [LclId] =
              [len_s8PU2] \u []
                  case len_s8PU2 of {
                    GHC.Types.I# x_s8PU5 [Occ=Once] ->
                        case +# [x_s8PU5 1#] of sat_s8PU6 {
                          __DEFAULT -> GHC.Types.I# [sat_s8PU6];
                        };
                  };
        } in 
          Foreign.Marshal.Array.allocaArray
              $dStorable_s8PTY sat_s8PU7 sat_s8PUd;

Foreign.Marshal.Array.withArray0
  :: forall a b.
     Foreign.Storable.Storable a =>
     a -> [a] -> (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=4,
 Str=<L,U(C(U(U)),C(U(U)),A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><L,U><L,C(C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PUe marker_s8PUf vals_s8PUg x_s8PUh]
        let {
          sat_s8PUj [Occ=Once]
            :: GHC.Types.Int -> GHC.Ptr.Ptr a_a8PfU -> GHC.Types.IO b_a8PfV
          [LclId] =
              [x_s8PUh] \r [ds_s8PUi] x_s8PUh;
        } in 
          Foreign.Marshal.Array.withArrayLen0
              $dStorable_s8PUe marker_s8PUf vals_s8PUg sat_s8PUj;

Foreign.Marshal.Array.newArray3
  :: forall a.
     Foreign.Storable.Storable a =>
     a
     -> [a]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PUk marker_s8PUl vals_s8PUm s_s8PUn]
        case GHC.List.$wlenAcc vals_s8PUm 0# of ww2_s8PUo {
          __DEFAULT ->
              case
                  Foreign.Storable.sizeOf
                      $dStorable_s8PUk Foreign.Marshal.Array.mallocArray1
              of
              { GHC.Types.I# y_s8PUq [Occ=Once] ->
                    case +# [ww2_s8PUo 1#] of sat_s8PUs {
                      __DEFAULT ->
                          case *# [sat_s8PUs y_s8PUq] of sat_s8PUt {
                            __DEFAULT ->
                                case int2Word# [sat_s8PUt] of sat_s8PUu {
                                  __DEFAULT ->
                                      case __pkg_ccall base-4.11.0.0 [sat_s8PUu s_s8PUn] of {
                                        (#,#) ds_s8PUw [Occ=Once*] ds1_s8PUx ->
                                            case eqAddr# [ds1_s8PUx __NULL] of {
                                              __DEFAULT ->
                                                  let {
                                                    ipv1_s8PUz :: GHC.Ptr.Ptr a_a8Pia
                                                    [LclId, Unf=OtherCon []] =
                                                        CCCS GHC.Ptr.Ptr! [ds1_s8PUx];
                                                  } in 
                                                    case
                                                        Foreign.Marshal.Array.newArray4
                                                            $dStorable_s8PUk
                                                            marker_s8PUl
                                                            ipv1_s8PUz
                                                            vals_s8PUm
                                                            ds_s8PUw
                                                    of
                                                    { (#,#) ipv_s8PUB [Occ=Once] _ [Occ=Dead] ->
                                                          (#,#) [ipv_s8PUB ipv1_s8PUz];
                                                    };
                                              1# ->
                                                  raiseIO# [Foreign.Marshal.Alloc.malloc1 ds_s8PUw];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

Foreign.Marshal.Array.newArray0
  :: forall a.
     Foreign.Storable.Storable a =>
     a -> [a] -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Array.newArray3 eta_B4 eta_B3 eta_B2 eta_B1;

lvl22_r8PPB :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [242#];

lvl23_r8PPC :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [21#];

lvl24_r8PPD :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [30#];

lvl25_r8PPE :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl22_r8PPB
                                           lvl23_r8PPC
                                           lvl22_r8PPB
                                           lvl24_r8PPD];

lvl26_r8PPF :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl25_r8PPE
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.copyArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl26_r8PPF;

Foreign.Marshal.Array.copyArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO ()
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PUD]
        let {
          lvl33_s8PUE [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8PUD] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8PUD Foreign.Marshal.Array.copyArray1; } in
        let {
          sat_s8PUX [Occ=Once]
            :: GHC.Ptr.Ptr a_a8PaC
               -> GHC.Ptr.Ptr a_a8PaC
               -> GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [lvl33_s8PUE] \r [dest_s8PUF src_s8PUG size_s8PUH s_s8PUI]
                  case dest_s8PUF of {
                    GHC.Ptr.Ptr ds1_s8PUK [Occ=Once] ->
                        case src_s8PUG of {
                          GHC.Ptr.Ptr ds3_s8PUM [Occ=Once] ->
                              case size_s8PUH of {
                                GHC.Types.I# x_s8PUO [Occ=Once] ->
                                    case lvl33_s8PUE of {
                                      GHC.Types.I# y_s8PUQ [Occ=Once] ->
                                          case *# [x_s8PUO y_s8PUQ] of sat_s8PUS {
                                            __DEFAULT ->
                                                case int2Word# [sat_s8PUS] of sat_s8PUT {
                                                  __DEFAULT ->
                                                      case
                                                          __pkg_ccall base-4.11.0.0 [ds1_s8PUK
                                                                                     ds3_s8PUM
                                                                                     sat_s8PUT
                                                                                     s_s8PUI]
                                                      of
                                                      { (#,#) ds4_s8PUV [Occ=Once] _ [Occ=Dead] ->
                                                            (#,#) [ds4_s8PUV GHC.Tuple.()];
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8PUX;

lvl27_r8PPG :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [251#];

lvl28_r8PPH :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl27_r8PPG
                                           lvl23_r8PPC
                                           lvl27_r8PPG
                                           lvl24_r8PPD];

lvl29_r8PPI :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl28_r8PPH
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.moveArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl29_r8PPI;

Foreign.Marshal.Array.moveArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO ()
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PUY]
        let {
          lvl33_s8PUZ [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8PUY] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8PUY Foreign.Marshal.Array.moveArray1; } in
        let {
          sat_s8PVi [Occ=Once]
            :: GHC.Ptr.Ptr a_a8P9Z
               -> GHC.Ptr.Ptr a_a8P9Z
               -> GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [lvl33_s8PUZ] \r [dest_s8PV0 src_s8PV1 size_s8PV2 s_s8PV3]
                  case dest_s8PV0 of {
                    GHC.Ptr.Ptr ds1_s8PV5 [Occ=Once] ->
                        case src_s8PV1 of {
                          GHC.Ptr.Ptr ds3_s8PV7 [Occ=Once] ->
                              case size_s8PV2 of {
                                GHC.Types.I# x_s8PV9 [Occ=Once] ->
                                    case lvl33_s8PUZ of {
                                      GHC.Types.I# y_s8PVb [Occ=Once] ->
                                          case *# [x_s8PV9 y_s8PVb] of sat_s8PVd {
                                            __DEFAULT ->
                                                case int2Word# [sat_s8PVd] of sat_s8PVe {
                                                  __DEFAULT ->
                                                      case
                                                          __pkg_ccall base-4.11.0.0 [ds1_s8PV5
                                                                                     ds3_s8PV7
                                                                                     sat_s8PVe
                                                                                     s_s8PV3]
                                                      of
                                                      { (#,#) ds4_s8PVg [Occ=Once] _ [Occ=Dead] ->
                                                            (#,#) [ds4_s8PVg GHC.Tuple.()];
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8PVi;

Foreign.Marshal.Array.lengthArray1
  :: forall a.
     (Foreign.Storable.Storable a, GHC.Classes.Eq a) =>
     a
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLC(C(C(S(SL))))LLLLL),U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><L,U(C(C1(U)),A)><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PVj
           $dEq_s8PVk
           marker_s8PVl
           ptr_s8PVm
           eta_s8PVn]
        let-no-escape {
          loop_s8PVo [Occ=LoopBreakerT[2]]
            :: GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
          [LclId[JoinId(2)], Arity=2, Str=<L,U(U)><S,U>, Unf=OtherCon []] =
              sat-only [$dStorable_s8PVj
                        $dEq_s8PVk
                        marker_s8PVl
                        ptr_s8PVm
                        loop_s8PVo] \r [i_s8PVp s_s8PVq]
                  case
                      Foreign.Storable.peekElemOff
                          $dStorable_s8PVj ptr_s8PVm i_s8PVp s_s8PVq
                  of
                  { (#,#) ipv_s8PVs [Occ=Once*] ipv1_s8PVt [Occ=Once] ->
                        case GHC.Classes.== $dEq_s8PVk ipv1_s8PVt marker_s8PVl of {
                          GHC.Types.False ->
                              let {
                                sat_s8PVy [Occ=Once, Dmd=<L,U(U)>] :: GHC.Types.Int
                                [LclId] =
                                    [i_s8PVp] \u []
                                        case i_s8PVp of {
                                          GHC.Types.I# x_s8PVw [Occ=Once] ->
                                              case +# [x_s8PVw 1#] of sat_s8PVx {
                                                __DEFAULT -> GHC.Types.I# [sat_s8PVx];
                                              };
                                        };
                              } in  loop_s8PVo sat_s8PVy ipv_s8PVs;
                          GHC.Types.True -> (#,#) [ipv_s8PVs i_s8PVp];
                        };
                  };
        } in  loop_s8PVo Foreign.Marshal.Array.lengthArray2 eta_s8PVn;

Foreign.Marshal.Array.lengthArray0
  :: forall a.
     (Foreign.Storable.Storable a, GHC.Classes.Eq a) =>
     a -> GHC.Ptr.Ptr a -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLC(C(C(S(SL))))LLLLL),U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><L,U(C(C1(U)),A)><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Array.lengthArray1
            eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.Marshal.Array.peekArray2
  :: forall a.
     (Foreign.Storable.Storable a, GHC.Classes.Eq a) =>
     a
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a] #)
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLC(C(C(S(SL))))LLLLL),U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><L,U(C(C1(U)),A)><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PVz $dEq_s8PVA marker_s8PVB ptr_s8PVC s_s8PVD]
        case
            Foreign.Marshal.Array.lengthArray1
                $dStorable_s8PVz $dEq_s8PVA marker_s8PVB ptr_s8PVC s_s8PVD
        of
        { (#,#) ipv_s8PVF [Occ=Once] ipv1_s8PVG [Occ=Once] ->
              Foreign.Marshal.Array.peekArray1
                  $dStorable_s8PVz ipv1_s8PVG ptr_s8PVC ipv_s8PVF;
        };

Foreign.Marshal.Array.peekArray0
  :: forall a.
     (Foreign.Storable.Storable a, GHC.Classes.Eq a) =>
     a -> GHC.Ptr.Ptr a -> GHC.Types.IO [a]
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLC(C(C(S(SL))))LLLLL),U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><L,U(C(C1(U)),A)><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Array.peekArray2
            eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

lvl30_r8PPJ :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [276#];

lvl31_r8PPK :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl30_r8PPJ
                                           lvl7_r8PPm
                                           lvl30_r8PPJ
                                           lvl8_r8PPn];

lvl32_r8PPL :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl31_r8PPK
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.advancePtr1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl32_r8PPL;

Foreign.Marshal.Array.advancePtr
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Ptr.Ptr a
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PVH]
        let {
          lvl33_s8PVI [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8PVH] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8PVH Foreign.Marshal.Array.advancePtr1; } in
        let {
          sat_s8PVT [Occ=OnceT[0]]
            :: GHC.Ptr.Ptr a_a8P8O -> GHC.Types.Int -> GHC.Ptr.Ptr a_a8P8O
          [LclId] =
              [lvl33_s8PVI] \r [ptr_s8PVJ i_s8PVK]
                  case ptr_s8PVJ of {
                    GHC.Ptr.Ptr addr_s8PVM [Occ=Once] ->
                        case i_s8PVK of {
                          GHC.Types.I# x_s8PVO [Occ=Once] ->
                              case lvl33_s8PVI of {
                                GHC.Types.I# y_s8PVQ [Occ=Once] ->
                                    case *# [x_s8PVO y_s8PVQ] of sat_s8PVR {
                                      __DEFAULT ->
                                          case plusAddr# [addr_s8PVM sat_s8PVR] of sat_s8PVS {
                                            __DEFAULT -> GHC.Ptr.Ptr [sat_s8PVS];
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8PVT;

Foreign.Marshal.Array.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Marshal.Array.$trModule4];

Foreign.Marshal.Array.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Marshal.Array.$trModule2];

Foreign.Marshal.Array.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.Marshal.Array.$trModule3
                                     Foreign.Marshal.Array.$trModule1];


==================== STG syntax: ====================
2018-03-16 16:03:59.241553738 UTC

lvl_r8PPf :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "undefined"#;

lvl1_r8PPg :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_r8PPf;

Foreign.Marshal.Array.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

lvl2_r8PPh :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# Foreign.Marshal.Array.$trModule4;

Foreign.Marshal.Array.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.Marshal.Array"#;

lvl3_r8PPi :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# Foreign.Marshal.Array.$trModule2;

lvl4_r8PPj :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "./Foreign/Marshal/Array.hs"#;

lvl5_r8PPk :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl4_r8PPj;

lvl6_r8PPl :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [86#];

lvl7_r8PPm :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [25#];

lvl8_r8PPn :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [34#];

lvl9_r8PPo :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl6_r8PPl
                                           lvl7_r8PPm
                                           lvl6_r8PPl
                                           lvl8_r8PPn];

lvl10_r8PPp :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl9_r8PPo
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.mallocArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl10_r8PPp;

Foreign.Marshal.Array.mallocArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PPN]
        let {
          lvl33_s8PPO [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8PPN] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8PPN Foreign.Marshal.Array.mallocArray1; } in
        let {
          sat_s8PQ3 [Occ=Once]
            :: GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a_a8Phr #)
          [LclId] =
              [lvl33_s8PPO] \r [size_s8PPP void_0E]
                  case size_s8PPP of {
                    GHC.Types.I# x_s8PPS [Occ=Once] ->
                        case lvl33_s8PPO of {
                          GHC.Types.I# y_s8PPU [Occ=Once] ->
                              case *# [x_s8PPS y_s8PPU] of sat_s8PPW {
                                __DEFAULT ->
                                    case int2Word# [sat_s8PPW] of sat_s8PPX {
                                      __DEFAULT ->
                                          case
                                              __pkg_ccall base-4.11.0.0 [sat_s8PPX GHC.Prim.void#]
                                          of
                                          { Unit# ds1_s8PQ0 ->
                                                case eqAddr# [ds1_s8PQ0 __NULL] of {
                                                  __DEFAULT ->
                                                      let {
                                                        sat_s8PQ2 [Occ=Once] :: GHC.Ptr.Ptr a_a8Phr
                                                        [LclId] =
                                                            CCCS GHC.Ptr.Ptr! [ds1_s8PQ0];
                                                      } in  Unit# [sat_s8PQ2];
                                                  1# ->
                                                      raiseIO# [Foreign.Marshal.Alloc.malloc1
                                                                GHC.Prim.void#];
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8PQ3;

Foreign.Marshal.Array.$wmallocArray0 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8PQ4 ww_s8PQ5 void_0E]
        case
            Foreign.Storable.sizeOf w_s8PQ4 Foreign.Marshal.Array.mallocArray1
        of
        { GHC.Types.I# y_s8PQ8 [Occ=Once] ->
              case +# [ww_s8PQ5 1#] of sat_s8PQa {
                __DEFAULT ->
                    case *# [sat_s8PQa y_s8PQ8] of sat_s8PQb {
                      __DEFAULT ->
                          case int2Word# [sat_s8PQb] of sat_s8PQc {
                            __DEFAULT ->
                                case __pkg_ccall base-4.11.0.0 [sat_s8PQc GHC.Prim.void#] of {
                                  Unit# ds1_s8PQf ->
                                      case eqAddr# [ds1_s8PQf __NULL] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s8PQh [Occ=Once] :: GHC.Ptr.Ptr a_s8PCz
                                              [LclId] =
                                                  CCCS GHC.Ptr.Ptr! [ds1_s8PQf];
                                            } in  Unit# [sat_s8PQh];
                                        1# ->
                                            raiseIO# [Foreign.Marshal.Alloc.malloc1 GHC.Prim.void#];
                                      };
                                };
                          };
                    };
              };
        };

Foreign.Marshal.Array.mallocArray2 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8PQi w1_s8PQj void_0E]
        case w1_s8PQj of {
          GHC.Types.I# ww1_s8PQm [Occ=Once] ->
              Foreign.Marshal.Array.$wmallocArray0
                  w_s8PQi ww1_s8PQm GHC.Prim.void#;
        };

Foreign.Marshal.Array.mallocArray0
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Array.mallocArray2 eta_B3 eta_B2 GHC.Prim.void#;

lvl11_r8PPq :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [100#];

lvl12_r8PPr :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl11_r8PPq
                                           lvl7_r8PPm
                                           lvl11_r8PPq
                                           lvl8_r8PPn];

lvl13_r8PPs :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl12_r8PPr
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.callocArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl13_r8PPs;

Foreign.Marshal.Array.callocArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PQn]
        let {
          lvl33_s8PQo [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8PQn] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8PQn Foreign.Marshal.Array.callocArray1; } in
        let {
          sat_s8PQD [Occ=Once]
            :: GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a_a8PgI #)
          [LclId] =
              [lvl33_s8PQo] \r [size_s8PQp void_0E]
                  case size_s8PQp of {
                    GHC.Types.I# x_s8PQs [Occ=Once] ->
                        case lvl33_s8PQo of {
                          GHC.Types.I# y_s8PQu [Occ=Once] ->
                              case *# [x_s8PQs y_s8PQu] of sat_s8PQw {
                                __DEFAULT ->
                                    case int2Word# [sat_s8PQw] of sat_s8PQx {
                                      __DEFAULT ->
                                          case
                                              __pkg_ccall base-4.11.0.0 [1##
                                                                         sat_s8PQx
                                                                         GHC.Prim.void#]
                                          of
                                          { Unit# ds1_s8PQA ->
                                                case eqAddr# [ds1_s8PQA __NULL] of {
                                                  __DEFAULT ->
                                                      let {
                                                        sat_s8PQC [Occ=Once] :: GHC.Ptr.Ptr a_a8PgI
                                                        [LclId] =
                                                            CCCS GHC.Ptr.Ptr! [ds1_s8PQA];
                                                      } in  Unit# [sat_s8PQC];
                                                  1# ->
                                                      raiseIO# [Foreign.Marshal.Alloc.calloc1
                                                                GHC.Prim.void#];
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8PQD;

Foreign.Marshal.Array.$wcallocArray0 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8PQE ww_s8PQF void_0E]
        case
            Foreign.Storable.sizeOf w_s8PQE Foreign.Marshal.Array.callocArray1
        of
        { GHC.Types.I# y_s8PQI [Occ=Once] ->
              case +# [ww_s8PQF 1#] of sat_s8PQK {
                __DEFAULT ->
                    case *# [sat_s8PQK y_s8PQI] of sat_s8PQL {
                      __DEFAULT ->
                          case int2Word# [sat_s8PQL] of sat_s8PQM {
                            __DEFAULT ->
                                case __pkg_ccall base-4.11.0.0 [1## sat_s8PQM GHC.Prim.void#] of {
                                  Unit# ds1_s8PQP ->
                                      case eqAddr# [ds1_s8PQP __NULL] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s8PQR [Occ=Once] :: GHC.Ptr.Ptr a_s8PCK
                                              [LclId] =
                                                  CCCS GHC.Ptr.Ptr! [ds1_s8PQP];
                                            } in  Unit# [sat_s8PQR];
                                        1# ->
                                            raiseIO# [Foreign.Marshal.Alloc.calloc1 GHC.Prim.void#];
                                      };
                                };
                          };
                    };
              };
        };

Foreign.Marshal.Array.callocArray2 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8PQS w1_s8PQT void_0E]
        case w1_s8PQT of {
          GHC.Types.I# ww1_s8PQW [Occ=Once] ->
              Foreign.Marshal.Array.$wcallocArray0
                  w_s8PQS ww1_s8PQW GHC.Prim.void#;
        };

Foreign.Marshal.Array.callocArray0
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Array.callocArray2 eta_B3 eta_B2 GHC.Prim.void#;

lvl14_r8PPt :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [115#];

lvl15_r8PPu :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl14_r8PPt
                                           lvl7_r8PPm
                                           lvl14_r8PPt
                                           lvl8_r8PPn];

lvl16_r8PPv :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl15_r8PPu
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.allocaArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl16_r8PPv;

Foreign.Marshal.Array.allocaArray
  :: forall a b.
     Foreign.Storable.Storable a =>
     GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=1,
 Str=<L,U(1*C1(U(U)),1*C1(U(U)),A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PQX]
        let {
          lvl33_s8PQY [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8PQX] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8PQX Foreign.Marshal.Array.allocaArray1; } in
        let {
          ds1_s8PQZ [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8PQX] \u []
                  Foreign.Storable.alignment
                      $dStorable_s8PQX Foreign.Marshal.Array.allocaArray1; } in
        let {
          sat_s8PRm [Occ=Once]
            :: GHC.Types.Int
               -> (GHC.Ptr.Ptr a_a8Per -> GHC.Types.IO b_a8Pes)
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_a8Pes #)
          [LclId] =
              [lvl33_s8PQY ds1_s8PQZ] \r [size_s8PR0 eta_s8PR1 void_0E]
                  case size_s8PR0 of {
                    GHC.Types.I# x_s8PR4 [Occ=Once] ->
                        case lvl33_s8PQY of {
                          GHC.Types.I# y_s8PR6 [Occ=Once] ->
                              case ds1_s8PQZ of {
                                GHC.Types.I# align_s8PR8 [Occ=Once] ->
                                    case *# [x_s8PR4 y_s8PR6] of sat_s8PR9 {
                                      __DEFAULT ->
                                          case
                                              newAlignedPinnedByteArray# [sat_s8PR9
                                                                          align_s8PR8
                                                                          GHC.Prim.void#]
                                          of
                                          { Unit# ipv1_s8PRc [Occ=Once] ->
                                                case
                                                    unsafeFreezeByteArray# [ipv1_s8PRc
                                                                            GHC.Prim.void#]
                                                of
                                                { Unit# ipv3_s8PRf ->
                                                      case
                                                          byteArrayContents# [ipv3_s8PRf]
                                                      of
                                                      sat_s8PRg
                                                      { __DEFAULT ->
                                                            let {
                                                              sat_s8PRh [Occ=Once]
                                                                :: GHC.Ptr.Ptr a_a8Per
                                                              [LclId] =
                                                                  CCCS GHC.Ptr.Ptr! [sat_s8PRg];
                                                            } in 
                                                              case
                                                                  eta_s8PR1 sat_s8PRh GHC.Prim.void#
                                                              of
                                                              { Unit# ipv5_s8PRk [Occ=Once] ->
                                                                    case
                                                                        touch# [ipv3_s8PRf
                                                                                GHC.Prim.void#]
                                                                    of
                                                                    s4_s8PRl
                                                                    { (##) -> Unit# [ipv5_s8PRk];
                                                                    };
                                                              };
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8PRm;

Foreign.Marshal.Array.allocaArray0 [InlPrag=INLINE (sat-args=1)]
  :: forall a b.
     Foreign.Storable.Storable a =>
     GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=2,
 Str=<L,U(C(U(U)),C(U(U)),A,A,A,A,A,A)><L,1*U(U)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PRn eta_s8PRo]
        let {
          sat_s8PRs [Occ=Once] :: GHC.Types.Int
          [LclId] =
              [eta_s8PRo] \u []
                  case eta_s8PRo of {
                    GHC.Types.I# x_s8PRq [Occ=Once] ->
                        case +# [x_s8PRq 1#] of sat_s8PRr {
                          __DEFAULT -> GHC.Types.I# [sat_s8PRr];
                        };
                  };
        } in  Foreign.Marshal.Array.allocaArray $dStorable_s8PRn sat_s8PRs;

lvl17_r8PPw :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [133#];

lvl18_r8PPx :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [27#];

lvl19_r8PPy :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [36#];

lvl20_r8PPz :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl17_r8PPw
                                           lvl18_r8PPx
                                           lvl17_r8PPw
                                           lvl19_r8PPy];

lvl21_r8PPA :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl20_r8PPz
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.reallocArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl21_r8PPA;

Foreign.Marshal.Array.reallocArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PRt]
        let {
          lvl33_s8PRu [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8PRt] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8PRt Foreign.Marshal.Array.reallocArray1; } in
        let {
          sat_s8PRP [Occ=Once]
            :: GHC.Ptr.Ptr a_a8PdG
               -> GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a_a8PdG #)
          [LclId] =
              [lvl33_s8PRu] \r [ptr_s8PRv size_s8PRw void_0E]
                  case size_s8PRw of {
                    GHC.Types.I# x_s8PRz [Occ=Once] ->
                        case lvl33_s8PRu of {
                          GHC.Types.I# y_s8PRB [Occ=Once] ->
                              case ptr_s8PRv of {
                                GHC.Ptr.Ptr ww1_s8PRD [Occ=Once*] ->
                                    case *# [x_s8PRz y_s8PRB] of ds_s8PRE {
                                      __DEFAULT ->
                                          case int2Word# [ds_s8PRE] of sat_s8PRG {
                                            __DEFAULT ->
                                                case
                                                    __pkg_ccall base-4.11.0.0 [ww1_s8PRD
                                                                               sat_s8PRG
                                                                               GHC.Prim.void#]
                                                of
                                                { Unit# ds2_s8PRJ ->
                                                      case eqAddr# [ds2_s8PRJ __NULL] of {
                                                        __DEFAULT ->
                                                            let {
                                                              sat_s8PRL [Occ=Once]
                                                                :: GHC.Ptr.Ptr a_a8PdG
                                                              [LclId] =
                                                                  CCCS GHC.Ptr.Ptr! [ds2_s8PRJ];
                                                            } in  Unit# [sat_s8PRL];
                                                        1# ->
                                                            raiseIO# [Foreign.Marshal.Alloc.realloc2
                                                                      GHC.Prim.void#];
                                                      };
                                                };
                                          };
                                      0# ->
                                          case
                                              __pkg_ccall base-4.11.0.0 [ww1_s8PRD GHC.Prim.void#]
                                          of
                                          { (##) -> Unit# [GHC.Ptr.nullPtr];
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8PRP;

Foreign.Marshal.Array.$wreallocArray0 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8PRQ ww_s8PRR ww1_s8PRS void_0E]
        case
            Foreign.Storable.sizeOf w_s8PRQ Foreign.Marshal.Array.reallocArray1
        of
        { GHC.Types.I# y_s8PRV [Occ=Once] ->
              case +# [ww1_s8PRS 1#] of sat_s8PRW {
                __DEFAULT ->
                    case *# [sat_s8PRW y_s8PRV] of ds_s8PRX {
                      __DEFAULT ->
                          case int2Word# [ds_s8PRX] of sat_s8PRZ {
                            __DEFAULT ->
                                case
                                    __pkg_ccall base-4.11.0.0 [ww_s8PRR sat_s8PRZ GHC.Prim.void#]
                                of
                                { Unit# ds2_s8PS2 ->
                                      case eqAddr# [ds2_s8PS2 __NULL] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s8PS4 [Occ=Once] :: GHC.Ptr.Ptr a_s8PCY
                                              [LclId] =
                                                  CCCS GHC.Ptr.Ptr! [ds2_s8PS2];
                                            } in  Unit# [sat_s8PS4];
                                        1# ->
                                            raiseIO# [Foreign.Marshal.Alloc.realloc2
                                                      GHC.Prim.void#];
                                      };
                                };
                          };
                      0# ->
                          case __pkg_ccall base-4.11.0.0 [ww_s8PRR GHC.Prim.void#] of {
                            (##) -> Unit# [GHC.Ptr.nullPtr];
                          };
                    };
              };
        };

Foreign.Marshal.Array.reallocArray2 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8PS8 w1_s8PS9 w2_s8PSa void_0E]
        case w1_s8PS9 of {
          GHC.Ptr.Ptr ww1_s8PSd [Occ=Once] ->
              case w2_s8PSa of {
                GHC.Types.I# ww3_s8PSf [Occ=Once] ->
                    Foreign.Marshal.Array.$wreallocArray0
                        w_s8PS8 ww1_s8PSd ww3_s8PSf GHC.Prim.void#;
              };
        };

Foreign.Marshal.Array.reallocArray0
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Array.reallocArray2
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.Marshal.Array.lengthArray2 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

Foreign.Marshal.Array.$wpeekArray [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.Int#
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a] #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><S,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8PSg ww_s8PSh w1_s8PSi void_0E]
        case <=# [ww_s8PSh 0#] of {
          __DEFAULT ->
              case -# [ww_s8PSh 1#] of sat_s8PSD {
                __DEFAULT ->
                    let-no-escape {
                      exit_s8PSl [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
                        :: [a_s8PDk]
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a_s8PDk] #)
                      [LclId[JoinId(2)], Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
                          sat-only [w_s8PSg w1_s8PSi] \r [w3_s8PSm void_0E]
                              case
                                  Foreign.Storable.peekElemOff
                                      w_s8PSg
                                      w1_s8PSi
                                      Foreign.Marshal.Array.lengthArray2
                                      GHC.Prim.void#
                              of
                              { Unit# ipv1_s8PSq [Occ=Once] ->
                                    let {
                                      sat_s8PSr [Occ=Once] :: [a_s8PDk]
                                      [LclId] =
                                          CCCS :! [ipv1_s8PSq w3_s8PSm];
                                    } in  Unit# [sat_s8PSr];
                              };
                    } in 
                      let-no-escape {
                        $wf_s8PSs [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                          :: GHC.Prim.Int#
                             -> [a_s8PDk]
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a_s8PDk] #)
                        [LclId[JoinId(3)],
                         Arity=3,
                         Str=<S,1*U><L,U><S,U>,
                         Unf=OtherCon []] =
                            sat-only [w_s8PSg w1_s8PSi exit_s8PSl $wf_s8PSs] \r [ww1_s8PSt
                                                                                 w3_s8PSu
                                                                                 void_0E]
                                case ww1_s8PSt of ds_s8PSw {
                                  __DEFAULT ->
                                      let {
                                        sat_s8PSx [Occ=Once] :: GHC.Types.Int
                                        [LclId] =
                                            CCCS GHC.Types.I#! [ds_s8PSw];
                                      } in 
                                        case
                                            Foreign.Storable.peekElemOff
                                                w_s8PSg w1_s8PSi sat_s8PSx GHC.Prim.void#
                                        of
                                        { Unit# ipv1_s8PSA [Occ=Once] ->
                                              let {
                                                sat_s8PSC [Occ=Once] :: [a_s8PDk]
                                                [LclId] =
                                                    CCCS :! [ipv1_s8PSA w3_s8PSu];
                                              } in 
                                                case -# [ds_s8PSw 1#] of sat_s8PSB {
                                                  __DEFAULT ->
                                                      $wf_s8PSs sat_s8PSB sat_s8PSC GHC.Prim.void#;
                                                };
                                        };
                                  0# -> exit_s8PSl w3_s8PSu GHC.Prim.void#;
                                };
                      } in  $wf_s8PSs sat_s8PSD GHC.Types.[] GHC.Prim.void#;
              };
          1# -> Unit# [GHC.Types.[]];
        };

Foreign.Marshal.Array.peekArray1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a] #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><S(S),1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8PSE w1_s8PSF w2_s8PSG void_0E]
        case w1_s8PSF of {
          GHC.Types.I# ww1_s8PSJ [Occ=Once] ->
              Foreign.Marshal.Array.$wpeekArray
                  w_s8PSE ww1_s8PSJ w2_s8PSG GHC.Prim.void#;
        };

Foreign.Marshal.Array.peekArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int -> GHC.Ptr.Ptr a -> GHC.Types.IO [a]
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><S(S),1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Array.peekArray1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.Marshal.Array.newArray2
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a
     -> [a]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U(A,A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PSK ptr_s8PSL vals0_s8PSM void_0E]
        let-no-escape {
          go_s8PSO [Occ=LoopBreakerT[3]]
            :: [a_a8PbP]
               -> GHC.Prim.Int#
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId[JoinId(3)],
           Arity=3,
           Str=<S,1*U><L,U><S,U>,
           Unf=OtherCon []] =
              sat-only [$dStorable_s8PSK ptr_s8PSL go_s8PSO] \r [ds_s8PSP
                                                                 ds1_s8PSQ
                                                                 void_0E]
                  case ds_s8PSP of {
                    [] -> Unit# [GHC.Tuple.()];
                    : val_s8PST [Occ=Once] vals_s8PSU [Occ=Once] ->
                        let {
                          sat_s8PSV [Occ=Once] :: GHC.Types.Int
                          [LclId] =
                              CCCS GHC.Types.I#! [ds1_s8PSQ];
                        } in 
                          case
                              Foreign.Storable.pokeElemOff
                                  $dStorable_s8PSK ptr_s8PSL sat_s8PSV val_s8PST GHC.Prim.void#
                          of
                          { Unit# _ [Occ=Dead] ->
                                case +# [ds1_s8PSQ 1#] of sat_s8PSZ {
                                  __DEFAULT -> go_s8PSO vals_s8PSU sat_s8PSZ GHC.Prim.void#;
                                };
                          };
                  };
        } in  go_s8PSO vals0_s8PSM 0# GHC.Prim.void#;

Foreign.Marshal.Array.pokeArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> [a] -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U(A,A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Array.newArray2
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.Marshal.Array.withArrayLen
  :: forall a b.
     Foreign.Storable.Storable a =>
     [a]
     -> (GHC.Types.Int -> GHC.Ptr.Ptr a -> GHC.Types.IO b)
     -> GHC.Types.IO b
[GblId,
 Arity=3,
 Str=<L,U(C(U(U)),C(U(U)),A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,U><L,C(C1(C1(U)))>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PT0 vals_s8PT1 f_s8PT2]
        let {
          len_s8PT3 :: GHC.Types.Int
          [LclId] =
              [vals_s8PT1] \u []
                  case GHC.List.$wlenAcc vals_s8PT1 0# of ww2_s8PT4 {
                    __DEFAULT -> GHC.Types.I# [ww2_s8PT4];
                  }; } in
        let {
          sat_s8PTa [Occ=Once] :: GHC.Ptr.Ptr a_a8Pg7 -> GHC.Types.IO b_a8Pg8
          [LclId] =
              [$dStorable_s8PT0 vals_s8PT1 f_s8PT2 len_s8PT3] \r [ptr_s8PT5
                                                                  void_0E]
                  case
                      Foreign.Marshal.Array.newArray2
                          $dStorable_s8PT0 ptr_s8PT5 vals_s8PT1 GHC.Prim.void#
                  of
                  { Unit# _ [Occ=Dead] -> f_s8PT2 len_s8PT3 ptr_s8PT5 GHC.Prim.void#;
                  };
        } in 
          Foreign.Marshal.Array.allocaArray
              $dStorable_s8PT0 len_s8PT3 sat_s8PTa;

Foreign.Marshal.Array.withArray
  :: forall a b.
     Foreign.Storable.Storable a =>
     [a] -> (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=3,
 Str=<L,U(C(U(U)),C(U(U)),A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,U><L,C(C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PTb vals_s8PTc x_s8PTd]
        let {
          sat_s8PTl [Occ=Once] :: GHC.Ptr.Ptr a_a8Pgv -> GHC.Types.IO b_a8Pgw
          [LclId] =
              [$dStorable_s8PTb vals_s8PTc x_s8PTd] \r [ptr_s8PTg void_0E]
                  case
                      Foreign.Marshal.Array.newArray2
                          $dStorable_s8PTb ptr_s8PTg vals_s8PTc GHC.Prim.void#
                  of
                  { Unit# _ [Occ=Dead] -> x_s8PTd ptr_s8PTg GHC.Prim.void#;
                  }; } in
        let {
          sat_s8PTf [Occ=Once] :: GHC.Types.Int
          [LclId] =
              [vals_s8PTc] \u []
                  case GHC.List.$wlenAcc vals_s8PTc 0# of ww2_s8PTe {
                    __DEFAULT -> GHC.Types.I# [ww2_s8PTe];
                  };
        } in 
          Foreign.Marshal.Array.allocaArray
              $dStorable_s8PTb sat_s8PTf sat_s8PTl;

Foreign.Marshal.Array.newArray1
  :: forall a.
     Foreign.Storable.Storable a =>
     [a]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PTm vals_s8PTn void_0E]
        case GHC.List.$wlenAcc vals_s8PTn 0# of ww2_s8PTp {
          __DEFAULT ->
              case
                  Foreign.Storable.sizeOf
                      $dStorable_s8PTm Foreign.Marshal.Array.mallocArray1
              of
              { GHC.Types.I# y_s8PTr [Occ=Once] ->
                    case *# [ww2_s8PTp y_s8PTr] of sat_s8PTt {
                      __DEFAULT ->
                          case int2Word# [sat_s8PTt] of sat_s8PTu {
                            __DEFAULT ->
                                case __pkg_ccall base-4.11.0.0 [sat_s8PTu GHC.Prim.void#] of {
                                  Unit# ds1_s8PTx ->
                                      case eqAddr# [ds1_s8PTx __NULL] of {
                                        __DEFAULT ->
                                            let {
                                              ipv1_s8PTz :: GHC.Ptr.Ptr a_a8Piu
                                              [LclId, Unf=OtherCon []] =
                                                  CCCS GHC.Ptr.Ptr! [ds1_s8PTx];
                                            } in 
                                              case
                                                  Foreign.Marshal.Array.newArray2
                                                      $dStorable_s8PTm
                                                      ipv1_s8PTz
                                                      vals_s8PTn
                                                      GHC.Prim.void#
                                              of
                                              { Unit# _ [Occ=Dead] -> Unit# [ipv1_s8PTz];
                                              };
                                        1# ->
                                            raiseIO# [Foreign.Marshal.Alloc.malloc1 GHC.Prim.void#];
                                      };
                                };
                          };
                    };
              };
        };

Foreign.Marshal.Array.newArray
  :: forall a.
     Foreign.Storable.Storable a =>
     [a] -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Array.newArray1 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.Marshal.Array.newArray4
  :: forall a.
     Foreign.Storable.Storable a =>
     a
     -> GHC.Ptr.Ptr a
     -> [a]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(C(C(S))))LLLL),U(A,A,A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><L,U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PTD marker_s8PTE ptr_s8PTF vals0_s8PTG void_0E]
        let-no-escape {
          exit_s8PTI [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
            :: GHC.Prim.Int#
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId[JoinId(2)], Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
              sat-only [$dStorable_s8PTD marker_s8PTE ptr_s8PTF] \r [n#_s8PTJ
                                                                     void_0E]
                  let {
                    sat_s8PTL [Occ=Once] :: GHC.Types.Int
                    [LclId] =
                        CCCS GHC.Types.I#! [n#_s8PTJ];
                  } in 
                    Foreign.Storable.pokeElemOff
                        $dStorable_s8PTD ptr_s8PTF sat_s8PTL marker_s8PTE GHC.Prim.void#;
        } in 
          let-no-escape {
            go_s8PTM [Occ=LoopBreakerT[3]]
              :: [a_a8Pbf]
                 -> GHC.Prim.Int#
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
            [LclId[JoinId(3)],
             Arity=3,
             Str=<S,1*U><L,U><S,U>,
             Unf=OtherCon []] =
                sat-only [$dStorable_s8PTD
                          ptr_s8PTF
                          exit_s8PTI
                          go_s8PTM] \r [ds_s8PTN n#_s8PTO void_0E]
                    case ds_s8PTN of {
                      [] -> exit_s8PTI n#_s8PTO GHC.Prim.void#;
                      : val_s8PTR [Occ=Once] vals_s8PTS [Occ=Once] ->
                          let {
                            sat_s8PTT [Occ=Once] :: GHC.Types.Int
                            [LclId] =
                                CCCS GHC.Types.I#! [n#_s8PTO];
                          } in 
                            case
                                Foreign.Storable.pokeElemOff
                                    $dStorable_s8PTD ptr_s8PTF sat_s8PTT val_s8PTR GHC.Prim.void#
                            of
                            { Unit# _ [Occ=Dead] ->
                                  case +# [n#_s8PTO 1#] of sat_s8PTX {
                                    __DEFAULT -> go_s8PTM vals_s8PTS sat_s8PTX GHC.Prim.void#;
                                  };
                            };
                    };
          } in  go_s8PTM vals0_s8PTG 0# GHC.Prim.void#;

Foreign.Marshal.Array.pokeArray0
  :: forall a.
     Foreign.Storable.Storable a =>
     a -> GHC.Ptr.Ptr a -> [a] -> GHC.Types.IO ()
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(C(C(S))))LLLL),U(A,A,A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><L,U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Array.newArray4
            eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.Marshal.Array.withArrayLen0
  :: forall a b.
     Foreign.Storable.Storable a =>
     a
     -> [a]
     -> (GHC.Types.Int -> GHC.Ptr.Ptr a -> GHC.Types.IO b)
     -> GHC.Types.IO b
[GblId,
 Arity=4,
 Str=<L,U(C(U(U)),C(U(U)),A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><L,U><L,C(C1(C1(U)))>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PTY marker_s8PTZ vals_s8PU0 f_s8PU1]
        let {
          len_s8PU2 [Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [vals_s8PU0] \u []
                  case GHC.List.$wlenAcc vals_s8PU0 0# of ww2_s8PU3 {
                    __DEFAULT -> GHC.Types.I# [ww2_s8PU3];
                  }; } in
        let {
          sat_s8PUd [Occ=Once] :: GHC.Ptr.Ptr a_a8Pfp -> GHC.Types.IO b_a8Pfq
          [LclId] =
              [$dStorable_s8PTY
               marker_s8PTZ
               vals_s8PU0
               f_s8PU1
               len_s8PU2] \r [ptr_s8PU8 void_0E]
                  case
                      Foreign.Marshal.Array.newArray4
                          $dStorable_s8PTY marker_s8PTZ ptr_s8PU8 vals_s8PU0 GHC.Prim.void#
                  of
                  { Unit# _ [Occ=Dead] -> f_s8PU1 len_s8PU2 ptr_s8PU8 GHC.Prim.void#;
                  }; } in
        let {
          sat_s8PU7 [Occ=Once] :: GHC.Types.Int
          [LclId] =
              [len_s8PU2] \u []
                  case len_s8PU2 of {
                    GHC.Types.I# x_s8PU5 [Occ=Once] ->
                        case +# [x_s8PU5 1#] of sat_s8PU6 {
                          __DEFAULT -> GHC.Types.I# [sat_s8PU6];
                        };
                  };
        } in 
          Foreign.Marshal.Array.allocaArray
              $dStorable_s8PTY sat_s8PU7 sat_s8PUd;

Foreign.Marshal.Array.withArray0
  :: forall a b.
     Foreign.Storable.Storable a =>
     a -> [a] -> (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=4,
 Str=<L,U(C(U(U)),C(U(U)),A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><L,U><L,C(C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PUe marker_s8PUf vals_s8PUg x_s8PUh]
        let {
          sat_s8PUj [Occ=Once]
            :: GHC.Types.Int -> GHC.Ptr.Ptr a_a8PfU -> GHC.Types.IO b_a8PfV
          [LclId] =
              [x_s8PUh] \r [ds_s8PUi] x_s8PUh;
        } in 
          Foreign.Marshal.Array.withArrayLen0
              $dStorable_s8PUe marker_s8PUf vals_s8PUg sat_s8PUj;

Foreign.Marshal.Array.newArray3
  :: forall a.
     Foreign.Storable.Storable a =>
     a
     -> [a]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PUk marker_s8PUl vals_s8PUm void_0E]
        case GHC.List.$wlenAcc vals_s8PUm 0# of ww2_s8PUo {
          __DEFAULT ->
              case
                  Foreign.Storable.sizeOf
                      $dStorable_s8PUk Foreign.Marshal.Array.mallocArray1
              of
              { GHC.Types.I# y_s8PUq [Occ=Once] ->
                    case +# [ww2_s8PUo 1#] of sat_s8PUs {
                      __DEFAULT ->
                          case *# [sat_s8PUs y_s8PUq] of sat_s8PUt {
                            __DEFAULT ->
                                case int2Word# [sat_s8PUt] of sat_s8PUu {
                                  __DEFAULT ->
                                      case __pkg_ccall base-4.11.0.0 [sat_s8PUu GHC.Prim.void#] of {
                                        Unit# ds1_s8PUx ->
                                            case eqAddr# [ds1_s8PUx __NULL] of {
                                              __DEFAULT ->
                                                  let {
                                                    ipv1_s8PUz :: GHC.Ptr.Ptr a_a8Pia
                                                    [LclId, Unf=OtherCon []] =
                                                        CCCS GHC.Ptr.Ptr! [ds1_s8PUx];
                                                  } in 
                                                    case
                                                        Foreign.Marshal.Array.newArray4
                                                            $dStorable_s8PUk
                                                            marker_s8PUl
                                                            ipv1_s8PUz
                                                            vals_s8PUm
                                                            GHC.Prim.void#
                                                    of
                                                    { Unit# _ [Occ=Dead] -> Unit# [ipv1_s8PUz];
                                                    };
                                              1# ->
                                                  raiseIO# [Foreign.Marshal.Alloc.malloc1
                                                            GHC.Prim.void#];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

Foreign.Marshal.Array.newArray0
  :: forall a.
     Foreign.Storable.Storable a =>
     a -> [a] -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Array.newArray3
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

lvl22_r8PPB :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [242#];

lvl23_r8PPC :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [21#];

lvl24_r8PPD :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [30#];

lvl25_r8PPE :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl22_r8PPB
                                           lvl23_r8PPC
                                           lvl22_r8PPB
                                           lvl24_r8PPD];

lvl26_r8PPF :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl25_r8PPE
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.copyArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl26_r8PPF;

Foreign.Marshal.Array.copyArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO ()
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PUD]
        let {
          lvl33_s8PUE [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8PUD] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8PUD Foreign.Marshal.Array.copyArray1; } in
        let {
          sat_s8PUX [Occ=Once]
            :: GHC.Ptr.Ptr a_a8PaC
               -> GHC.Ptr.Ptr a_a8PaC
               -> GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [lvl33_s8PUE] \r [dest_s8PUF src_s8PUG size_s8PUH void_0E]
                  case dest_s8PUF of {
                    GHC.Ptr.Ptr ds1_s8PUK [Occ=Once] ->
                        case src_s8PUG of {
                          GHC.Ptr.Ptr ds3_s8PUM [Occ=Once] ->
                              case size_s8PUH of {
                                GHC.Types.I# x_s8PUO [Occ=Once] ->
                                    case lvl33_s8PUE of {
                                      GHC.Types.I# y_s8PUQ [Occ=Once] ->
                                          case *# [x_s8PUO y_s8PUQ] of sat_s8PUS {
                                            __DEFAULT ->
                                                case int2Word# [sat_s8PUS] of sat_s8PUT {
                                                  __DEFAULT ->
                                                      case
                                                          __pkg_ccall base-4.11.0.0 [ds1_s8PUK
                                                                                     ds3_s8PUM
                                                                                     sat_s8PUT
                                                                                     GHC.Prim.void#]
                                                      of
                                                      { Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8PUX;

lvl27_r8PPG :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [251#];

lvl28_r8PPH :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl27_r8PPG
                                           lvl23_r8PPC
                                           lvl27_r8PPG
                                           lvl24_r8PPD];

lvl29_r8PPI :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl28_r8PPH
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.moveArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl29_r8PPI;

Foreign.Marshal.Array.moveArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO ()
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PUY]
        let {
          lvl33_s8PUZ [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8PUY] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8PUY Foreign.Marshal.Array.moveArray1; } in
        let {
          sat_s8PVi [Occ=Once]
            :: GHC.Ptr.Ptr a_a8P9Z
               -> GHC.Ptr.Ptr a_a8P9Z
               -> GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [lvl33_s8PUZ] \r [dest_s8PV0 src_s8PV1 size_s8PV2 void_0E]
                  case dest_s8PV0 of {
                    GHC.Ptr.Ptr ds1_s8PV5 [Occ=Once] ->
                        case src_s8PV1 of {
                          GHC.Ptr.Ptr ds3_s8PV7 [Occ=Once] ->
                              case size_s8PV2 of {
                                GHC.Types.I# x_s8PV9 [Occ=Once] ->
                                    case lvl33_s8PUZ of {
                                      GHC.Types.I# y_s8PVb [Occ=Once] ->
                                          case *# [x_s8PV9 y_s8PVb] of sat_s8PVd {
                                            __DEFAULT ->
                                                case int2Word# [sat_s8PVd] of sat_s8PVe {
                                                  __DEFAULT ->
                                                      case
                                                          __pkg_ccall base-4.11.0.0 [ds1_s8PV5
                                                                                     ds3_s8PV7
                                                                                     sat_s8PVe
                                                                                     GHC.Prim.void#]
                                                      of
                                                      { Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8PVi;

Foreign.Marshal.Array.lengthArray1
  :: forall a.
     (Foreign.Storable.Storable a, GHC.Classes.Eq a) =>
     a
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLC(C(C(S(SL))))LLLLL),U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><L,U(C(C1(U)),A)><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PVj $dEq_s8PVk marker_s8PVl ptr_s8PVm void_0E]
        let-no-escape {
          loop_s8PVo [Occ=LoopBreakerT[2]]
            :: GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
          [LclId[JoinId(2)], Arity=2, Str=<L,U(U)><S,U>, Unf=OtherCon []] =
              sat-only [$dStorable_s8PVj
                        $dEq_s8PVk
                        marker_s8PVl
                        ptr_s8PVm
                        loop_s8PVo] \r [i_s8PVp void_0E]
                  case
                      Foreign.Storable.peekElemOff
                          $dStorable_s8PVj ptr_s8PVm i_s8PVp GHC.Prim.void#
                  of
                  { Unit# ipv1_s8PVt [Occ=Once] ->
                        case GHC.Classes.== $dEq_s8PVk ipv1_s8PVt marker_s8PVl of {
                          GHC.Types.False ->
                              let {
                                sat_s8PVy [Occ=Once, Dmd=<L,U(U)>] :: GHC.Types.Int
                                [LclId] =
                                    [i_s8PVp] \u []
                                        case i_s8PVp of {
                                          GHC.Types.I# x_s8PVw [Occ=Once] ->
                                              case +# [x_s8PVw 1#] of sat_s8PVx {
                                                __DEFAULT -> GHC.Types.I# [sat_s8PVx];
                                              };
                                        };
                              } in  loop_s8PVo sat_s8PVy GHC.Prim.void#;
                          GHC.Types.True -> Unit# [i_s8PVp];
                        };
                  };
        } in  loop_s8PVo Foreign.Marshal.Array.lengthArray2 GHC.Prim.void#;

Foreign.Marshal.Array.lengthArray0
  :: forall a.
     (Foreign.Storable.Storable a, GHC.Classes.Eq a) =>
     a -> GHC.Ptr.Ptr a -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLC(C(C(S(SL))))LLLLL),U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><L,U(C(C1(U)),A)><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Array.lengthArray1
            eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.Marshal.Array.peekArray2
  :: forall a.
     (Foreign.Storable.Storable a, GHC.Classes.Eq a) =>
     a
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a] #)
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLC(C(C(S(SL))))LLLLL),U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><L,U(C(C1(U)),A)><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PVz $dEq_s8PVA marker_s8PVB ptr_s8PVC void_0E]
        case
            Foreign.Marshal.Array.lengthArray1
                $dStorable_s8PVz $dEq_s8PVA marker_s8PVB ptr_s8PVC GHC.Prim.void#
        of
        { Unit# ipv1_s8PVG [Occ=Once] ->
              Foreign.Marshal.Array.peekArray1
                  $dStorable_s8PVz ipv1_s8PVG ptr_s8PVC GHC.Prim.void#;
        };

Foreign.Marshal.Array.peekArray0
  :: forall a.
     (Foreign.Storable.Storable a, GHC.Classes.Eq a) =>
     a -> GHC.Ptr.Ptr a -> GHC.Types.IO [a]
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLC(C(C(S(SL))))LLLLL),U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><L,U(C(C1(U)),A)><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Array.peekArray2
            eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

lvl30_r8PPJ :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [276#];

lvl31_r8PPK :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl30_r8PPJ
                                           lvl7_r8PPm
                                           lvl30_r8PPJ
                                           lvl8_r8PPn];

lvl32_r8PPL :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl31_r8PPK
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.advancePtr1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl32_r8PPL;

Foreign.Marshal.Array.advancePtr
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Ptr.Ptr a
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8PVH]
        let {
          lvl33_s8PVI [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8PVH] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8PVH Foreign.Marshal.Array.advancePtr1; } in
        let {
          sat_s8PVT [Occ=OnceT[0]]
            :: GHC.Ptr.Ptr a_a8P8O -> GHC.Types.Int -> GHC.Ptr.Ptr a_a8P8O
          [LclId] =
              [lvl33_s8PVI] \r [ptr_s8PVJ i_s8PVK]
                  case ptr_s8PVJ of {
                    GHC.Ptr.Ptr addr_s8PVM [Occ=Once] ->
                        case i_s8PVK of {
                          GHC.Types.I# x_s8PVO [Occ=Once] ->
                              case lvl33_s8PVI of {
                                GHC.Types.I# y_s8PVQ [Occ=Once] ->
                                    case *# [x_s8PVO y_s8PVQ] of sat_s8PVR {
                                      __DEFAULT ->
                                          case plusAddr# [addr_s8PVM sat_s8PVR] of sat_s8PVS {
                                            __DEFAULT -> GHC.Ptr.Ptr [sat_s8PVS];
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8PVT;

Foreign.Marshal.Array.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Marshal.Array.$trModule4];

Foreign.Marshal.Array.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Marshal.Array.$trModule2];

Foreign.Marshal.Array.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.Marshal.Array.$trModule3
                                     Foreign.Marshal.Array.$trModule1];


==================== Pre unarise: ====================
2018-03-16 16:04:01.330034463 UTC

lvl_r8PPf :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "undefined"#;

lvl1_r8PPg :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_r8PPf;

Foreign.Marshal.Array.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

lvl2_r8PPh :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# Foreign.Marshal.Array.$trModule4;

Foreign.Marshal.Array.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.Marshal.Array"#;

lvl3_r8PPi :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# Foreign.Marshal.Array.$trModule2;

lvl4_r8PPj :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "./Foreign/Marshal/Array.hs"#;

lvl5_r8PPk :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl4_r8PPj;

lvl6_r8PPl :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [86#];

lvl7_r8PPm :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [25#];

lvl8_r8PPn :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [34#];

lvl9_r8PPo :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl6_r8PPl
                                           lvl7_r8PPm
                                           lvl6_r8PPl
                                           lvl8_r8PPn];

lvl10_r8PPp :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl9_r8PPo
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.mallocArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl10_r8PPp;

Foreign.Marshal.Array.mallocArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R5d]
        let {
          lvl33_s8R5e [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8R5d] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8R5d Foreign.Marshal.Array.mallocArray1; } in
        let {
          sat_s8R5t [Occ=Once]
            :: GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a_a8Phr #)
          [LclId] =
              [lvl33_s8R5e] \r [size_s8R5f s_s8R5g]
                  case size_s8R5f of {
                    GHC.Types.I# x_s8R5i [Occ=Once] ->
                        case lvl33_s8R5e of {
                          GHC.Types.I# y_s8R5k [Occ=Once] ->
                              case *# [x_s8R5i y_s8R5k] of sat_s8R5m {
                                __DEFAULT ->
                                    case int2Word# [sat_s8R5m] of sat_s8R5n {
                                      __DEFAULT ->
                                          case __pkg_ccall base-4.11.0.0 [sat_s8R5n s_s8R5g] of {
                                            (#,#) ds_s8R5p [Occ=Once*] ds1_s8R5q ->
                                                case eqAddr# [ds1_s8R5q __NULL] of {
                                                  __DEFAULT ->
                                                      let {
                                                        sat_s8R5s [Occ=Once] :: GHC.Ptr.Ptr a_a8Phr
                                                        [LclId] =
                                                            CCCS GHC.Ptr.Ptr! [ds1_s8R5q];
                                                      } in  (#,#) [ds_s8R5p sat_s8R5s];
                                                  1# ->
                                                      raiseIO# [Foreign.Marshal.Alloc.malloc1
                                                                ds_s8R5p];
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8R5t;

Foreign.Marshal.Array.$wmallocArray0 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8R5u ww_s8R5v w1_s8R5w]
        case
            Foreign.Storable.sizeOf w_s8R5u Foreign.Marshal.Array.mallocArray1
        of
        { GHC.Types.I# y_s8R5y [Occ=Once] ->
              case +# [ww_s8R5v 1#] of sat_s8R5A {
                __DEFAULT ->
                    case *# [sat_s8R5A y_s8R5y] of sat_s8R5B {
                      __DEFAULT ->
                          case int2Word# [sat_s8R5B] of sat_s8R5C {
                            __DEFAULT ->
                                case __pkg_ccall base-4.11.0.0 [sat_s8R5C w1_s8R5w] of {
                                  (#,#) ds_s8R5E [Occ=Once*] ds1_s8R5F ->
                                      case eqAddr# [ds1_s8R5F __NULL] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s8R5H [Occ=Once] :: GHC.Ptr.Ptr a_s8PCz
                                              [LclId] =
                                                  CCCS GHC.Ptr.Ptr! [ds1_s8R5F];
                                            } in  (#,#) [ds_s8R5E sat_s8R5H];
                                        1# -> raiseIO# [Foreign.Marshal.Alloc.malloc1 ds_s8R5E];
                                      };
                                };
                          };
                    };
              };
        };

Foreign.Marshal.Array.mallocArray2 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8R5I w1_s8R5J w2_s8R5K]
        case w1_s8R5J of {
          GHC.Types.I# ww1_s8R5M [Occ=Once] ->
              Foreign.Marshal.Array.$wmallocArray0 w_s8R5I ww1_s8R5M w2_s8R5K;
        };

Foreign.Marshal.Array.mallocArray0
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Array.mallocArray2 eta_B3 eta_B2 eta_B1;

lvl11_r8PPq :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [100#];

lvl12_r8PPr :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl11_r8PPq
                                           lvl7_r8PPm
                                           lvl11_r8PPq
                                           lvl8_r8PPn];

lvl13_r8PPs :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl12_r8PPr
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.callocArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl13_r8PPs;

Foreign.Marshal.Array.callocArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R5N]
        let {
          lvl33_s8R5O [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8R5N] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8R5N Foreign.Marshal.Array.callocArray1; } in
        let {
          sat_s8R63 [Occ=Once]
            :: GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a_a8PgI #)
          [LclId] =
              [lvl33_s8R5O] \r [size_s8R5P s_s8R5Q]
                  case size_s8R5P of {
                    GHC.Types.I# x_s8R5S [Occ=Once] ->
                        case lvl33_s8R5O of {
                          GHC.Types.I# y_s8R5U [Occ=Once] ->
                              case *# [x_s8R5S y_s8R5U] of sat_s8R5W {
                                __DEFAULT ->
                                    case int2Word# [sat_s8R5W] of sat_s8R5X {
                                      __DEFAULT ->
                                          case
                                              __pkg_ccall base-4.11.0.0 [1## sat_s8R5X s_s8R5Q]
                                          of
                                          { (#,#) ds_s8R5Z [Occ=Once*] ds1_s8R60 ->
                                                case eqAddr# [ds1_s8R60 __NULL] of {
                                                  __DEFAULT ->
                                                      let {
                                                        sat_s8R62 [Occ=Once] :: GHC.Ptr.Ptr a_a8PgI
                                                        [LclId] =
                                                            CCCS GHC.Ptr.Ptr! [ds1_s8R60];
                                                      } in  (#,#) [ds_s8R5Z sat_s8R62];
                                                  1# ->
                                                      raiseIO# [Foreign.Marshal.Alloc.calloc1
                                                                ds_s8R5Z];
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8R63;

Foreign.Marshal.Array.$wcallocArray0 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8R64 ww_s8R65 w1_s8R66]
        case
            Foreign.Storable.sizeOf w_s8R64 Foreign.Marshal.Array.callocArray1
        of
        { GHC.Types.I# y_s8R68 [Occ=Once] ->
              case +# [ww_s8R65 1#] of sat_s8R6a {
                __DEFAULT ->
                    case *# [sat_s8R6a y_s8R68] of sat_s8R6b {
                      __DEFAULT ->
                          case int2Word# [sat_s8R6b] of sat_s8R6c {
                            __DEFAULT ->
                                case __pkg_ccall base-4.11.0.0 [1## sat_s8R6c w1_s8R66] of {
                                  (#,#) ds_s8R6e [Occ=Once*] ds1_s8R6f ->
                                      case eqAddr# [ds1_s8R6f __NULL] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s8R6h [Occ=Once] :: GHC.Ptr.Ptr a_s8PCK
                                              [LclId] =
                                                  CCCS GHC.Ptr.Ptr! [ds1_s8R6f];
                                            } in  (#,#) [ds_s8R6e sat_s8R6h];
                                        1# -> raiseIO# [Foreign.Marshal.Alloc.calloc1 ds_s8R6e];
                                      };
                                };
                          };
                    };
              };
        };

Foreign.Marshal.Array.callocArray2 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8R6i w1_s8R6j w2_s8R6k]
        case w1_s8R6j of {
          GHC.Types.I# ww1_s8R6m [Occ=Once] ->
              Foreign.Marshal.Array.$wcallocArray0 w_s8R6i ww1_s8R6m w2_s8R6k;
        };

Foreign.Marshal.Array.callocArray0
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Array.callocArray2 eta_B3 eta_B2 eta_B1;

lvl14_r8PPt :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [115#];

lvl15_r8PPu :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl14_r8PPt
                                           lvl7_r8PPm
                                           lvl14_r8PPt
                                           lvl8_r8PPn];

lvl16_r8PPv :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl15_r8PPu
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.allocaArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl16_r8PPv;

Foreign.Marshal.Array.allocaArray
  :: forall a b.
     Foreign.Storable.Storable a =>
     GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=1,
 Str=<L,U(1*C1(U(U)),1*C1(U(U)),A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R6n]
        let {
          lvl33_s8R6o [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8R6n] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8R6n Foreign.Marshal.Array.allocaArray1; } in
        let {
          ds1_s8R6p [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8R6n] \u []
                  Foreign.Storable.alignment
                      $dStorable_s8R6n Foreign.Marshal.Array.allocaArray1; } in
        let {
          sat_s8R6M [Occ=Once]
            :: GHC.Types.Int
               -> (GHC.Ptr.Ptr a_a8Per -> GHC.Types.IO b_a8Pes)
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_a8Pes #)
          [LclId] =
              [lvl33_s8R6o ds1_s8R6p] \r [size_s8R6q eta_s8R6r eta1_s8R6s]
                  case size_s8R6q of {
                    GHC.Types.I# x_s8R6u [Occ=Once] ->
                        case lvl33_s8R6o of {
                          GHC.Types.I# y_s8R6w [Occ=Once] ->
                              case ds1_s8R6p of {
                                GHC.Types.I# align_s8R6y [Occ=Once] ->
                                    case *# [x_s8R6u y_s8R6w] of sat_s8R6z {
                                      __DEFAULT ->
                                          case
                                              newAlignedPinnedByteArray# [sat_s8R6z
                                                                          align_s8R6y
                                                                          eta1_s8R6s]
                                          of
                                          { (#,#) ipv_s8R6B [Occ=Once] ipv1_s8R6C [Occ=Once] ->
                                                case
                                                    unsafeFreezeByteArray# [ipv1_s8R6C ipv_s8R6B]
                                                of
                                                { (#,#) ipv2_s8R6E [Occ=Once] ipv3_s8R6F ->
                                                      case
                                                          byteArrayContents# [ipv3_s8R6F]
                                                      of
                                                      sat_s8R6G
                                                      { __DEFAULT ->
                                                            let {
                                                              sat_s8R6H [Occ=Once]
                                                                :: GHC.Ptr.Ptr a_a8Per
                                                              [LclId] =
                                                                  CCCS GHC.Ptr.Ptr! [sat_s8R6G];
                                                            } in 
                                                              case
                                                                  eta_s8R6r sat_s8R6H ipv2_s8R6E
                                                              of
                                                              { (#,#) ipv4_s8R6J [Occ=Once]
                                                                      ipv5_s8R6K [Occ=Once] ->
                                                                    case
                                                                        touch# [ipv3_s8R6F
                                                                                ipv4_s8R6J]
                                                                    of
                                                                    s4_s8R6L
                                                                    { __DEFAULT ->
                                                                          (#,#) [s4_s8R6L
                                                                                 ipv5_s8R6K];
                                                                    };
                                                              };
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8R6M;

Foreign.Marshal.Array.allocaArray0 [InlPrag=INLINE (sat-args=1)]
  :: forall a b.
     Foreign.Storable.Storable a =>
     GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=2,
 Str=<L,U(C(U(U)),C(U(U)),A,A,A,A,A,A)><L,1*U(U)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R6N eta_s8R6O]
        let {
          sat_s8R6S [Occ=Once] :: GHC.Types.Int
          [LclId] =
              [eta_s8R6O] \u []
                  case eta_s8R6O of {
                    GHC.Types.I# x_s8R6Q [Occ=Once] ->
                        case +# [x_s8R6Q 1#] of sat_s8R6R {
                          __DEFAULT -> GHC.Types.I# [sat_s8R6R];
                        };
                  };
        } in  Foreign.Marshal.Array.allocaArray $dStorable_s8R6N sat_s8R6S;

lvl17_r8PPw :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [133#];

lvl18_r8PPx :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [27#];

lvl19_r8PPy :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [36#];

lvl20_r8PPz :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl17_r8PPw
                                           lvl18_r8PPx
                                           lvl17_r8PPw
                                           lvl19_r8PPy];

lvl21_r8PPA :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl20_r8PPz
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.reallocArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl21_r8PPA;

Foreign.Marshal.Array.reallocArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R6T]
        let {
          lvl33_s8R6U [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8R6T] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8R6T Foreign.Marshal.Array.reallocArray1; } in
        let {
          sat_s8R7f [Occ=Once]
            :: GHC.Ptr.Ptr a_a8PdG
               -> GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a_a8PdG #)
          [LclId] =
              [lvl33_s8R6U] \r [ptr_s8R6V size_s8R6W eta_s8R6X]
                  case size_s8R6W of {
                    GHC.Types.I# x_s8R6Z [Occ=Once] ->
                        case lvl33_s8R6U of {
                          GHC.Types.I# y_s8R71 [Occ=Once] ->
                              case ptr_s8R6V of {
                                GHC.Ptr.Ptr ww1_s8R73 [Occ=Once*] ->
                                    case *# [x_s8R6Z y_s8R71] of ds_s8R74 {
                                      __DEFAULT ->
                                          case int2Word# [ds_s8R74] of sat_s8R76 {
                                            __DEFAULT ->
                                                case
                                                    __pkg_ccall base-4.11.0.0 [ww1_s8R73
                                                                               sat_s8R76
                                                                               eta_s8R6X]
                                                of
                                                { (#,#) ds1_s8R78 [Occ=Once*] ds2_s8R79 ->
                                                      case eqAddr# [ds2_s8R79 __NULL] of {
                                                        __DEFAULT ->
                                                            let {
                                                              sat_s8R7b [Occ=Once]
                                                                :: GHC.Ptr.Ptr a_a8PdG
                                                              [LclId] =
                                                                  CCCS GHC.Ptr.Ptr! [ds2_s8R79];
                                                            } in  (#,#) [ds1_s8R78 sat_s8R7b];
                                                        1# ->
                                                            raiseIO# [Foreign.Marshal.Alloc.realloc2
                                                                      ds1_s8R78];
                                                      };
                                                };
                                          };
                                      0# ->
                                          case __pkg_ccall base-4.11.0.0 [ww1_s8R73 eta_s8R6X] of {
                                            Unit# ds1_s8R7e [Occ=Once] ->
                                                (#,#) [ds1_s8R7e GHC.Ptr.nullPtr];
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8R7f;

Foreign.Marshal.Array.$wreallocArray0 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8R7g ww_s8R7h ww1_s8R7i w1_s8R7j]
        case
            Foreign.Storable.sizeOf w_s8R7g Foreign.Marshal.Array.reallocArray1
        of
        { GHC.Types.I# y_s8R7l [Occ=Once] ->
              case +# [ww1_s8R7i 1#] of sat_s8R7m {
                __DEFAULT ->
                    case *# [sat_s8R7m y_s8R7l] of ds_s8R7n {
                      __DEFAULT ->
                          case int2Word# [ds_s8R7n] of sat_s8R7p {
                            __DEFAULT ->
                                case __pkg_ccall base-4.11.0.0 [ww_s8R7h sat_s8R7p w1_s8R7j] of {
                                  (#,#) ds1_s8R7r [Occ=Once*] ds2_s8R7s ->
                                      case eqAddr# [ds2_s8R7s __NULL] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s8R7u [Occ=Once] :: GHC.Ptr.Ptr a_s8PCY
                                              [LclId] =
                                                  CCCS GHC.Ptr.Ptr! [ds2_s8R7s];
                                            } in  (#,#) [ds1_s8R7r sat_s8R7u];
                                        1# -> raiseIO# [Foreign.Marshal.Alloc.realloc2 ds1_s8R7r];
                                      };
                                };
                          };
                      0# ->
                          case __pkg_ccall base-4.11.0.0 [ww_s8R7h w1_s8R7j] of {
                            Unit# ds1_s8R7x [Occ=Once] -> (#,#) [ds1_s8R7x GHC.Ptr.nullPtr];
                          };
                    };
              };
        };

Foreign.Marshal.Array.reallocArray2 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8R7y w1_s8R7z w2_s8R7A w3_s8R7B]
        case w1_s8R7z of {
          GHC.Ptr.Ptr ww1_s8R7D [Occ=Once] ->
              case w2_s8R7A of {
                GHC.Types.I# ww3_s8R7F [Occ=Once] ->
                    Foreign.Marshal.Array.$wreallocArray0
                        w_s8R7y ww1_s8R7D ww3_s8R7F w3_s8R7B;
              };
        };

Foreign.Marshal.Array.reallocArray0
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Array.reallocArray2 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.Marshal.Array.lengthArray2 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

Foreign.Marshal.Array.$wpeekArray [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.Int#
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a] #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><S,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8R7G ww_s8R7H w1_s8R7I w2_s8R7J]
        case <=# [ww_s8R7H 0#] of {
          __DEFAULT ->
              case -# [ww_s8R7H 1#] of sat_s8R83 {
                __DEFAULT ->
                    let-no-escape {
                      exit_s8R7L [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
                        :: [a_s8PDk]
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a_s8PDk] #)
                      [LclId[JoinId(2)], Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
                          sat-only [w_s8R7G w1_s8R7I] \r [w3_s8R7M w4_s8R7N]
                              case
                                  Foreign.Storable.peekElemOff
                                      w_s8R7G w1_s8R7I Foreign.Marshal.Array.lengthArray2 w4_s8R7N
                              of
                              { (#,#) ipv_s8R7P [Occ=Once] ipv1_s8R7Q [Occ=Once] ->
                                    let {
                                      sat_s8R7R [Occ=Once] :: [a_s8PDk]
                                      [LclId] =
                                          CCCS :! [ipv1_s8R7Q w3_s8R7M];
                                    } in  (#,#) [ipv_s8R7P sat_s8R7R];
                              };
                    } in 
                      let-no-escape {
                        $wf_s8R7S [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                          :: GHC.Prim.Int#
                             -> [a_s8PDk]
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a_s8PDk] #)
                        [LclId[JoinId(3)],
                         Arity=3,
                         Str=<S,1*U><L,U><S,U>,
                         Unf=OtherCon []] =
                            sat-only [w_s8R7G w1_s8R7I exit_s8R7L $wf_s8R7S] \r [ww1_s8R7T
                                                                                 w3_s8R7U
                                                                                 w4_s8R7V]
                                case ww1_s8R7T of ds_s8R7W {
                                  __DEFAULT ->
                                      let {
                                        sat_s8R7X [Occ=Once] :: GHC.Types.Int
                                        [LclId] =
                                            CCCS GHC.Types.I#! [ds_s8R7W];
                                      } in 
                                        case
                                            Foreign.Storable.peekElemOff
                                                w_s8R7G w1_s8R7I sat_s8R7X w4_s8R7V
                                        of
                                        { (#,#) ipv_s8R7Z [Occ=Once] ipv1_s8R80 [Occ=Once] ->
                                              let {
                                                sat_s8R82 [Occ=Once] :: [a_s8PDk]
                                                [LclId] =
                                                    CCCS :! [ipv1_s8R80 w3_s8R7U];
                                              } in 
                                                case -# [ds_s8R7W 1#] of sat_s8R81 {
                                                  __DEFAULT ->
                                                      $wf_s8R7S sat_s8R81 sat_s8R82 ipv_s8R7Z;
                                                };
                                        };
                                  0# -> exit_s8R7L w3_s8R7U w4_s8R7V;
                                };
                      } in  $wf_s8R7S sat_s8R83 GHC.Types.[] w2_s8R7J;
              };
          1# -> (#,#) [w2_s8R7J GHC.Types.[]];
        };

Foreign.Marshal.Array.peekArray1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a] #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><S(S),1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8R84 w1_s8R85 w2_s8R86 w3_s8R87]
        case w1_s8R85 of {
          GHC.Types.I# ww1_s8R89 [Occ=Once] ->
              Foreign.Marshal.Array.$wpeekArray
                  w_s8R84 ww1_s8R89 w2_s8R86 w3_s8R87;
        };

Foreign.Marshal.Array.peekArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int -> GHC.Ptr.Ptr a -> GHC.Types.IO [a]
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><S(S),1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Array.peekArray1 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.Marshal.Array.newArray2
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a
     -> [a]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U(A,A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R8a ptr_s8R8b vals0_s8R8c eta_s8R8d]
        let-no-escape {
          go_s8R8e [Occ=LoopBreakerT[3]]
            :: [a_a8PbP]
               -> GHC.Prim.Int#
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId[JoinId(3)],
           Arity=3,
           Str=<S,1*U><L,U><S,U>,
           Unf=OtherCon []] =
              sat-only [$dStorable_s8R8a ptr_s8R8b go_s8R8e] \r [ds_s8R8f
                                                                 ds1_s8R8g
                                                                 eta1_s8R8h]
                  case ds_s8R8f of {
                    [] -> (#,#) [eta1_s8R8h GHC.Tuple.()];
                    : val_s8R8j [Occ=Once] vals_s8R8k [Occ=Once] ->
                        let {
                          sat_s8R8l [Occ=Once] :: GHC.Types.Int
                          [LclId] =
                              CCCS GHC.Types.I#! [ds1_s8R8g];
                        } in 
                          case
                              Foreign.Storable.pokeElemOff
                                  $dStorable_s8R8a ptr_s8R8b sat_s8R8l val_s8R8j eta1_s8R8h
                          of
                          { (#,#) ipv_s8R8n [Occ=Once] _ [Occ=Dead] ->
                                case +# [ds1_s8R8g 1#] of sat_s8R8p {
                                  __DEFAULT -> go_s8R8e vals_s8R8k sat_s8R8p ipv_s8R8n;
                                };
                          };
                  };
        } in  go_s8R8e vals0_s8R8c 0# eta_s8R8d;

Foreign.Marshal.Array.pokeArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> [a] -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U(A,A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Array.newArray2 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.Marshal.Array.withArrayLen
  :: forall a b.
     Foreign.Storable.Storable a =>
     [a]
     -> (GHC.Types.Int -> GHC.Ptr.Ptr a -> GHC.Types.IO b)
     -> GHC.Types.IO b
[GblId,
 Arity=3,
 Str=<L,U(C(U(U)),C(U(U)),A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,U><L,C(C1(C1(U)))>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R8q vals_s8R8r f_s8R8s]
        let {
          len_s8R8t :: GHC.Types.Int
          [LclId] =
              [vals_s8R8r] \u []
                  case GHC.List.$wlenAcc vals_s8R8r 0# of ww2_s8R8u {
                    __DEFAULT -> GHC.Types.I# [ww2_s8R8u];
                  }; } in
        let {
          sat_s8R8A [Occ=Once] :: GHC.Ptr.Ptr a_a8Pg7 -> GHC.Types.IO b_a8Pg8
          [LclId] =
              [$dStorable_s8R8q vals_s8R8r f_s8R8s len_s8R8t] \r [ptr_s8R8v
                                                                  s_s8R8w]
                  case
                      Foreign.Marshal.Array.newArray2
                          $dStorable_s8R8q ptr_s8R8v vals_s8R8r s_s8R8w
                  of
                  { (#,#) ipv_s8R8y [Occ=Once] _ [Occ=Dead] ->
                        f_s8R8s len_s8R8t ptr_s8R8v ipv_s8R8y;
                  };
        } in 
          Foreign.Marshal.Array.allocaArray
              $dStorable_s8R8q len_s8R8t sat_s8R8A;

Foreign.Marshal.Array.withArray
  :: forall a b.
     Foreign.Storable.Storable a =>
     [a] -> (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=3,
 Str=<L,U(C(U(U)),C(U(U)),A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,U><L,C(C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R8B vals_s8R8C x_s8R8D]
        let {
          sat_s8R8L [Occ=Once] :: GHC.Ptr.Ptr a_a8Pgv -> GHC.Types.IO b_a8Pgw
          [LclId] =
              [$dStorable_s8R8B vals_s8R8C x_s8R8D] \r [ptr_s8R8G s_s8R8H]
                  case
                      Foreign.Marshal.Array.newArray2
                          $dStorable_s8R8B ptr_s8R8G vals_s8R8C s_s8R8H
                  of
                  { (#,#) ipv_s8R8J [Occ=Once] _ [Occ=Dead] ->
                        x_s8R8D ptr_s8R8G ipv_s8R8J;
                  }; } in
        let {
          sat_s8R8F [Occ=Once] :: GHC.Types.Int
          [LclId] =
              [vals_s8R8C] \u []
                  case GHC.List.$wlenAcc vals_s8R8C 0# of ww2_s8R8E {
                    __DEFAULT -> GHC.Types.I# [ww2_s8R8E];
                  };
        } in 
          Foreign.Marshal.Array.allocaArray
              $dStorable_s8R8B sat_s8R8F sat_s8R8L;

Foreign.Marshal.Array.newArray1
  :: forall a.
     Foreign.Storable.Storable a =>
     [a]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R8M vals_s8R8N s_s8R8O]
        case GHC.List.$wlenAcc vals_s8R8N 0# of ww2_s8R8P {
          __DEFAULT ->
              case
                  Foreign.Storable.sizeOf
                      $dStorable_s8R8M Foreign.Marshal.Array.mallocArray1
              of
              { GHC.Types.I# y_s8R8R [Occ=Once] ->
                    case *# [ww2_s8R8P y_s8R8R] of sat_s8R8T {
                      __DEFAULT ->
                          case int2Word# [sat_s8R8T] of sat_s8R8U {
                            __DEFAULT ->
                                case __pkg_ccall base-4.11.0.0 [sat_s8R8U s_s8R8O] of {
                                  (#,#) ds_s8R8W [Occ=Once*] ds1_s8R8X ->
                                      case eqAddr# [ds1_s8R8X __NULL] of {
                                        __DEFAULT ->
                                            let {
                                              ipv1_s8R8Z :: GHC.Ptr.Ptr a_a8Piu
                                              [LclId, Unf=OtherCon []] =
                                                  CCCS GHC.Ptr.Ptr! [ds1_s8R8X];
                                            } in 
                                              case
                                                  Foreign.Marshal.Array.newArray2
                                                      $dStorable_s8R8M
                                                      ipv1_s8R8Z
                                                      vals_s8R8N
                                                      ds_s8R8W
                                              of
                                              { (#,#) ipv_s8R91 [Occ=Once] _ [Occ=Dead] ->
                                                    (#,#) [ipv_s8R91 ipv1_s8R8Z];
                                              };
                                        1# -> raiseIO# [Foreign.Marshal.Alloc.malloc1 ds_s8R8W];
                                      };
                                };
                          };
                    };
              };
        };

Foreign.Marshal.Array.newArray
  :: forall a.
     Foreign.Storable.Storable a =>
     [a] -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Array.newArray1 eta_B3 eta_B2 eta_B1;

Foreign.Marshal.Array.newArray4
  :: forall a.
     Foreign.Storable.Storable a =>
     a
     -> GHC.Ptr.Ptr a
     -> [a]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(C(C(S))))LLLL),U(A,A,A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><L,U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R93
           marker_s8R94
           ptr_s8R95
           vals0_s8R96
           eta_s8R97]
        let-no-escape {
          exit_s8R98 [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
            :: GHC.Prim.Int#
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId[JoinId(2)], Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
              sat-only [$dStorable_s8R93 marker_s8R94 ptr_s8R95] \r [n#_s8R99
                                                                     eta1_s8R9a]
                  let {
                    sat_s8R9b [Occ=Once] :: GHC.Types.Int
                    [LclId] =
                        CCCS GHC.Types.I#! [n#_s8R99];
                  } in 
                    Foreign.Storable.pokeElemOff
                        $dStorable_s8R93 ptr_s8R95 sat_s8R9b marker_s8R94 eta1_s8R9a;
        } in 
          let-no-escape {
            go_s8R9c [Occ=LoopBreakerT[3]]
              :: [a_a8Pbf]
                 -> GHC.Prim.Int#
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
            [LclId[JoinId(3)],
             Arity=3,
             Str=<S,1*U><L,U><S,U>,
             Unf=OtherCon []] =
                sat-only [$dStorable_s8R93
                          ptr_s8R95
                          exit_s8R98
                          go_s8R9c] \r [ds_s8R9d n#_s8R9e eta1_s8R9f]
                    case ds_s8R9d of {
                      [] -> exit_s8R98 n#_s8R9e eta1_s8R9f;
                      : val_s8R9h [Occ=Once] vals_s8R9i [Occ=Once] ->
                          let {
                            sat_s8R9j [Occ=Once] :: GHC.Types.Int
                            [LclId] =
                                CCCS GHC.Types.I#! [n#_s8R9e];
                          } in 
                            case
                                Foreign.Storable.pokeElemOff
                                    $dStorable_s8R93 ptr_s8R95 sat_s8R9j val_s8R9h eta1_s8R9f
                            of
                            { (#,#) ipv_s8R9l [Occ=Once] _ [Occ=Dead] ->
                                  case +# [n#_s8R9e 1#] of sat_s8R9n {
                                    __DEFAULT -> go_s8R9c vals_s8R9i sat_s8R9n ipv_s8R9l;
                                  };
                            };
                    };
          } in  go_s8R9c vals0_s8R96 0# eta_s8R97;

Foreign.Marshal.Array.pokeArray0
  :: forall a.
     Foreign.Storable.Storable a =>
     a -> GHC.Ptr.Ptr a -> [a] -> GHC.Types.IO ()
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(C(C(S))))LLLL),U(A,A,A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><L,U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Array.newArray4 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.Marshal.Array.withArrayLen0
  :: forall a b.
     Foreign.Storable.Storable a =>
     a
     -> [a]
     -> (GHC.Types.Int -> GHC.Ptr.Ptr a -> GHC.Types.IO b)
     -> GHC.Types.IO b
[GblId,
 Arity=4,
 Str=<L,U(C(U(U)),C(U(U)),A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><L,U><L,C(C1(C1(U)))>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R9o marker_s8R9p vals_s8R9q f_s8R9r]
        let {
          len_s8R9s [Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [vals_s8R9q] \u []
                  case GHC.List.$wlenAcc vals_s8R9q 0# of ww2_s8R9t {
                    __DEFAULT -> GHC.Types.I# [ww2_s8R9t];
                  }; } in
        let {
          sat_s8R9D [Occ=Once] :: GHC.Ptr.Ptr a_a8Pfp -> GHC.Types.IO b_a8Pfq
          [LclId] =
              [$dStorable_s8R9o
               marker_s8R9p
               vals_s8R9q
               f_s8R9r
               len_s8R9s] \r [ptr_s8R9y s_s8R9z]
                  case
                      Foreign.Marshal.Array.newArray4
                          $dStorable_s8R9o marker_s8R9p ptr_s8R9y vals_s8R9q s_s8R9z
                  of
                  { (#,#) ipv_s8R9B [Occ=Once] _ [Occ=Dead] ->
                        f_s8R9r len_s8R9s ptr_s8R9y ipv_s8R9B;
                  }; } in
        let {
          sat_s8R9x [Occ=Once] :: GHC.Types.Int
          [LclId] =
              [len_s8R9s] \u []
                  case len_s8R9s of {
                    GHC.Types.I# x_s8R9v [Occ=Once] ->
                        case +# [x_s8R9v 1#] of sat_s8R9w {
                          __DEFAULT -> GHC.Types.I# [sat_s8R9w];
                        };
                  };
        } in 
          Foreign.Marshal.Array.allocaArray
              $dStorable_s8R9o sat_s8R9x sat_s8R9D;

Foreign.Marshal.Array.withArray0
  :: forall a b.
     Foreign.Storable.Storable a =>
     a -> [a] -> (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=4,
 Str=<L,U(C(U(U)),C(U(U)),A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><L,U><L,C(C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R9E marker_s8R9F vals_s8R9G x_s8R9H]
        let {
          sat_s8R9J [Occ=Once]
            :: GHC.Types.Int -> GHC.Ptr.Ptr a_a8PfU -> GHC.Types.IO b_a8PfV
          [LclId] =
              [x_s8R9H] \r [ds_s8R9I] x_s8R9H;
        } in 
          Foreign.Marshal.Array.withArrayLen0
              $dStorable_s8R9E marker_s8R9F vals_s8R9G sat_s8R9J;

Foreign.Marshal.Array.newArray3
  :: forall a.
     Foreign.Storable.Storable a =>
     a
     -> [a]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R9K marker_s8R9L vals_s8R9M s_s8R9N]
        case GHC.List.$wlenAcc vals_s8R9M 0# of ww2_s8R9O {
          __DEFAULT ->
              case
                  Foreign.Storable.sizeOf
                      $dStorable_s8R9K Foreign.Marshal.Array.mallocArray1
              of
              { GHC.Types.I# y_s8R9Q [Occ=Once] ->
                    case +# [ww2_s8R9O 1#] of sat_s8R9S {
                      __DEFAULT ->
                          case *# [sat_s8R9S y_s8R9Q] of sat_s8R9T {
                            __DEFAULT ->
                                case int2Word# [sat_s8R9T] of sat_s8R9U {
                                  __DEFAULT ->
                                      case __pkg_ccall base-4.11.0.0 [sat_s8R9U s_s8R9N] of {
                                        (#,#) ds_s8R9W [Occ=Once*] ds1_s8R9X ->
                                            case eqAddr# [ds1_s8R9X __NULL] of {
                                              __DEFAULT ->
                                                  let {
                                                    ipv1_s8R9Z :: GHC.Ptr.Ptr a_a8Pia
                                                    [LclId, Unf=OtherCon []] =
                                                        CCCS GHC.Ptr.Ptr! [ds1_s8R9X];
                                                  } in 
                                                    case
                                                        Foreign.Marshal.Array.newArray4
                                                            $dStorable_s8R9K
                                                            marker_s8R9L
                                                            ipv1_s8R9Z
                                                            vals_s8R9M
                                                            ds_s8R9W
                                                    of
                                                    { (#,#) ipv_s8Ra1 [Occ=Once] _ [Occ=Dead] ->
                                                          (#,#) [ipv_s8Ra1 ipv1_s8R9Z];
                                                    };
                                              1# ->
                                                  raiseIO# [Foreign.Marshal.Alloc.malloc1 ds_s8R9W];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

Foreign.Marshal.Array.newArray0
  :: forall a.
     Foreign.Storable.Storable a =>
     a -> [a] -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Array.newArray3 eta_B4 eta_B3 eta_B2 eta_B1;

lvl22_r8PPB :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [242#];

lvl23_r8PPC :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [21#];

lvl24_r8PPD :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [30#];

lvl25_r8PPE :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl22_r8PPB
                                           lvl23_r8PPC
                                           lvl22_r8PPB
                                           lvl24_r8PPD];

lvl26_r8PPF :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl25_r8PPE
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.copyArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl26_r8PPF;

Foreign.Marshal.Array.copyArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO ()
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8Ra3]
        let {
          lvl33_s8Ra4 [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8Ra3] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8Ra3 Foreign.Marshal.Array.copyArray1; } in
        let {
          sat_s8Ran [Occ=Once]
            :: GHC.Ptr.Ptr a_a8PaC
               -> GHC.Ptr.Ptr a_a8PaC
               -> GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [lvl33_s8Ra4] \r [dest_s8Ra5 src_s8Ra6 size_s8Ra7 s_s8Ra8]
                  case dest_s8Ra5 of {
                    GHC.Ptr.Ptr ds1_s8Raa [Occ=Once] ->
                        case src_s8Ra6 of {
                          GHC.Ptr.Ptr ds3_s8Rac [Occ=Once] ->
                              case size_s8Ra7 of {
                                GHC.Types.I# x_s8Rae [Occ=Once] ->
                                    case lvl33_s8Ra4 of {
                                      GHC.Types.I# y_s8Rag [Occ=Once] ->
                                          case *# [x_s8Rae y_s8Rag] of sat_s8Rai {
                                            __DEFAULT ->
                                                case int2Word# [sat_s8Rai] of sat_s8Raj {
                                                  __DEFAULT ->
                                                      case
                                                          __pkg_ccall base-4.11.0.0 [ds1_s8Raa
                                                                                     ds3_s8Rac
                                                                                     sat_s8Raj
                                                                                     s_s8Ra8]
                                                      of
                                                      { (#,#) ds4_s8Ral [Occ=Once] _ [Occ=Dead] ->
                                                            (#,#) [ds4_s8Ral GHC.Tuple.()];
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8Ran;

lvl27_r8PPG :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [251#];

lvl28_r8PPH :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl27_r8PPG
                                           lvl23_r8PPC
                                           lvl27_r8PPG
                                           lvl24_r8PPD];

lvl29_r8PPI :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl28_r8PPH
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.moveArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl29_r8PPI;

Foreign.Marshal.Array.moveArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO ()
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8Rao]
        let {
          lvl33_s8Rap [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8Rao] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8Rao Foreign.Marshal.Array.moveArray1; } in
        let {
          sat_s8RaI [Occ=Once]
            :: GHC.Ptr.Ptr a_a8P9Z
               -> GHC.Ptr.Ptr a_a8P9Z
               -> GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [lvl33_s8Rap] \r [dest_s8Raq src_s8Rar size_s8Ras s_s8Rat]
                  case dest_s8Raq of {
                    GHC.Ptr.Ptr ds1_s8Rav [Occ=Once] ->
                        case src_s8Rar of {
                          GHC.Ptr.Ptr ds3_s8Rax [Occ=Once] ->
                              case size_s8Ras of {
                                GHC.Types.I# x_s8Raz [Occ=Once] ->
                                    case lvl33_s8Rap of {
                                      GHC.Types.I# y_s8RaB [Occ=Once] ->
                                          case *# [x_s8Raz y_s8RaB] of sat_s8RaD {
                                            __DEFAULT ->
                                                case int2Word# [sat_s8RaD] of sat_s8RaE {
                                                  __DEFAULT ->
                                                      case
                                                          __pkg_ccall base-4.11.0.0 [ds1_s8Rav
                                                                                     ds3_s8Rax
                                                                                     sat_s8RaE
                                                                                     s_s8Rat]
                                                      of
                                                      { (#,#) ds4_s8RaG [Occ=Once] _ [Occ=Dead] ->
                                                            (#,#) [ds4_s8RaG GHC.Tuple.()];
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8RaI;

Foreign.Marshal.Array.lengthArray1
  :: forall a.
     (Foreign.Storable.Storable a, GHC.Classes.Eq a) =>
     a
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLC(C(C(S(SL))))LLLLL),U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><L,U(C(C1(U)),A)><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8RaJ
           $dEq_s8RaK
           marker_s8RaL
           ptr_s8RaM
           eta_s8RaN]
        let-no-escape {
          loop_s8RaO [Occ=LoopBreakerT[2]]
            :: GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
          [LclId[JoinId(2)], Arity=2, Str=<L,U(U)><S,U>, Unf=OtherCon []] =
              sat-only [$dStorable_s8RaJ
                        $dEq_s8RaK
                        marker_s8RaL
                        ptr_s8RaM
                        loop_s8RaO] \r [i_s8RaP s_s8RaQ]
                  case
                      Foreign.Storable.peekElemOff
                          $dStorable_s8RaJ ptr_s8RaM i_s8RaP s_s8RaQ
                  of
                  { (#,#) ipv_s8RaS [Occ=Once*] ipv1_s8RaT [Occ=Once] ->
                        case GHC.Classes.== $dEq_s8RaK ipv1_s8RaT marker_s8RaL of {
                          GHC.Types.False ->
                              let {
                                sat_s8RaY [Occ=Once, Dmd=<L,U(U)>] :: GHC.Types.Int
                                [LclId] =
                                    [i_s8RaP] \u []
                                        case i_s8RaP of {
                                          GHC.Types.I# x_s8RaW [Occ=Once] ->
                                              case +# [x_s8RaW 1#] of sat_s8RaX {
                                                __DEFAULT -> GHC.Types.I# [sat_s8RaX];
                                              };
                                        };
                              } in  loop_s8RaO sat_s8RaY ipv_s8RaS;
                          GHC.Types.True -> (#,#) [ipv_s8RaS i_s8RaP];
                        };
                  };
        } in  loop_s8RaO Foreign.Marshal.Array.lengthArray2 eta_s8RaN;

Foreign.Marshal.Array.lengthArray0
  :: forall a.
     (Foreign.Storable.Storable a, GHC.Classes.Eq a) =>
     a -> GHC.Ptr.Ptr a -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLC(C(C(S(SL))))LLLLL),U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><L,U(C(C1(U)),A)><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Array.lengthArray1
            eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.Marshal.Array.peekArray2
  :: forall a.
     (Foreign.Storable.Storable a, GHC.Classes.Eq a) =>
     a
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a] #)
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLC(C(C(S(SL))))LLLLL),U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><L,U(C(C1(U)),A)><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8RaZ $dEq_s8Rb0 marker_s8Rb1 ptr_s8Rb2 s_s8Rb3]
        case
            Foreign.Marshal.Array.lengthArray1
                $dStorable_s8RaZ $dEq_s8Rb0 marker_s8Rb1 ptr_s8Rb2 s_s8Rb3
        of
        { (#,#) ipv_s8Rb5 [Occ=Once] ipv1_s8Rb6 [Occ=Once] ->
              Foreign.Marshal.Array.peekArray1
                  $dStorable_s8RaZ ipv1_s8Rb6 ptr_s8Rb2 ipv_s8Rb5;
        };

Foreign.Marshal.Array.peekArray0
  :: forall a.
     (Foreign.Storable.Storable a, GHC.Classes.Eq a) =>
     a -> GHC.Ptr.Ptr a -> GHC.Types.IO [a]
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLC(C(C(S(SL))))LLLLL),U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><L,U(C(C1(U)),A)><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Array.peekArray2
            eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

lvl30_r8PPJ :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [276#];

lvl31_r8PPK :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl30_r8PPJ
                                           lvl7_r8PPm
                                           lvl30_r8PPJ
                                           lvl8_r8PPn];

lvl32_r8PPL :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl31_r8PPK
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.advancePtr1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl32_r8PPL;

Foreign.Marshal.Array.advancePtr
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Ptr.Ptr a
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8Rb7]
        let {
          lvl33_s8Rb8 [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8Rb7] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8Rb7 Foreign.Marshal.Array.advancePtr1; } in
        let {
          sat_s8Rbj [Occ=OnceT[0]]
            :: GHC.Ptr.Ptr a_a8P8O -> GHC.Types.Int -> GHC.Ptr.Ptr a_a8P8O
          [LclId] =
              [lvl33_s8Rb8] \r [ptr_s8Rb9 i_s8Rba]
                  case ptr_s8Rb9 of {
                    GHC.Ptr.Ptr addr_s8Rbc [Occ=Once] ->
                        case i_s8Rba of {
                          GHC.Types.I# x_s8Rbe [Occ=Once] ->
                              case lvl33_s8Rb8 of {
                                GHC.Types.I# y_s8Rbg [Occ=Once] ->
                                    case *# [x_s8Rbe y_s8Rbg] of sat_s8Rbh {
                                      __DEFAULT ->
                                          case plusAddr# [addr_s8Rbc sat_s8Rbh] of sat_s8Rbi {
                                            __DEFAULT -> GHC.Ptr.Ptr [sat_s8Rbi];
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8Rbj;

Foreign.Marshal.Array.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Marshal.Array.$trModule4];

Foreign.Marshal.Array.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Marshal.Array.$trModule2];

Foreign.Marshal.Array.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.Marshal.Array.$trModule3
                                     Foreign.Marshal.Array.$trModule1];


==================== STG syntax: ====================
2018-03-16 16:04:01.36410919 UTC

lvl_r8PPf :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "undefined"#;

lvl1_r8PPg :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_r8PPf;

Foreign.Marshal.Array.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

lvl2_r8PPh :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# Foreign.Marshal.Array.$trModule4;

Foreign.Marshal.Array.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.Marshal.Array"#;

lvl3_r8PPi :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# Foreign.Marshal.Array.$trModule2;

lvl4_r8PPj :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "./Foreign/Marshal/Array.hs"#;

lvl5_r8PPk :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl4_r8PPj;

lvl6_r8PPl :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [86#];

lvl7_r8PPm :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [25#];

lvl8_r8PPn :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [34#];

lvl9_r8PPo :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl6_r8PPl
                                           lvl7_r8PPm
                                           lvl6_r8PPl
                                           lvl8_r8PPn];

lvl10_r8PPp :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl9_r8PPo
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.mallocArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl10_r8PPp;

Foreign.Marshal.Array.mallocArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R5d]
        let {
          lvl33_s8R5e [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8R5d] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8R5d Foreign.Marshal.Array.mallocArray1; } in
        let {
          sat_s8R5t [Occ=Once]
            :: GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a_a8Phr #)
          [LclId] =
              [lvl33_s8R5e] \r [size_s8R5f void_0E]
                  case size_s8R5f of {
                    GHC.Types.I# x_s8R5i [Occ=Once] ->
                        case lvl33_s8R5e of {
                          GHC.Types.I# y_s8R5k [Occ=Once] ->
                              case *# [x_s8R5i y_s8R5k] of sat_s8R5m {
                                __DEFAULT ->
                                    case int2Word# [sat_s8R5m] of sat_s8R5n {
                                      __DEFAULT ->
                                          case
                                              __pkg_ccall base-4.11.0.0 [sat_s8R5n GHC.Prim.void#]
                                          of
                                          { Unit# ds1_s8R5q ->
                                                case eqAddr# [ds1_s8R5q __NULL] of {
                                                  __DEFAULT ->
                                                      let {
                                                        sat_s8R5s [Occ=Once] :: GHC.Ptr.Ptr a_a8Phr
                                                        [LclId] =
                                                            CCCS GHC.Ptr.Ptr! [ds1_s8R5q];
                                                      } in  Unit# [sat_s8R5s];
                                                  1# ->
                                                      raiseIO# [Foreign.Marshal.Alloc.malloc1
                                                                GHC.Prim.void#];
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8R5t;

Foreign.Marshal.Array.$wmallocArray0 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8R5u ww_s8R5v void_0E]
        case
            Foreign.Storable.sizeOf w_s8R5u Foreign.Marshal.Array.mallocArray1
        of
        { GHC.Types.I# y_s8R5y [Occ=Once] ->
              case +# [ww_s8R5v 1#] of sat_s8R5A {
                __DEFAULT ->
                    case *# [sat_s8R5A y_s8R5y] of sat_s8R5B {
                      __DEFAULT ->
                          case int2Word# [sat_s8R5B] of sat_s8R5C {
                            __DEFAULT ->
                                case __pkg_ccall base-4.11.0.0 [sat_s8R5C GHC.Prim.void#] of {
                                  Unit# ds1_s8R5F ->
                                      case eqAddr# [ds1_s8R5F __NULL] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s8R5H [Occ=Once] :: GHC.Ptr.Ptr a_s8PCz
                                              [LclId] =
                                                  CCCS GHC.Ptr.Ptr! [ds1_s8R5F];
                                            } in  Unit# [sat_s8R5H];
                                        1# ->
                                            raiseIO# [Foreign.Marshal.Alloc.malloc1 GHC.Prim.void#];
                                      };
                                };
                          };
                    };
              };
        };

Foreign.Marshal.Array.mallocArray2 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8R5I w1_s8R5J void_0E]
        case w1_s8R5J of {
          GHC.Types.I# ww1_s8R5M [Occ=Once] ->
              Foreign.Marshal.Array.$wmallocArray0
                  w_s8R5I ww1_s8R5M GHC.Prim.void#;
        };

Foreign.Marshal.Array.mallocArray0
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Array.mallocArray2 eta_B3 eta_B2 GHC.Prim.void#;

lvl11_r8PPq :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [100#];

lvl12_r8PPr :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl11_r8PPq
                                           lvl7_r8PPm
                                           lvl11_r8PPq
                                           lvl8_r8PPn];

lvl13_r8PPs :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl12_r8PPr
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.callocArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl13_r8PPs;

Foreign.Marshal.Array.callocArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R5N]
        let {
          lvl33_s8R5O [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8R5N] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8R5N Foreign.Marshal.Array.callocArray1; } in
        let {
          sat_s8R63 [Occ=Once]
            :: GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a_a8PgI #)
          [LclId] =
              [lvl33_s8R5O] \r [size_s8R5P void_0E]
                  case size_s8R5P of {
                    GHC.Types.I# x_s8R5S [Occ=Once] ->
                        case lvl33_s8R5O of {
                          GHC.Types.I# y_s8R5U [Occ=Once] ->
                              case *# [x_s8R5S y_s8R5U] of sat_s8R5W {
                                __DEFAULT ->
                                    case int2Word# [sat_s8R5W] of sat_s8R5X {
                                      __DEFAULT ->
                                          case
                                              __pkg_ccall base-4.11.0.0 [1##
                                                                         sat_s8R5X
                                                                         GHC.Prim.void#]
                                          of
                                          { Unit# ds1_s8R60 ->
                                                case eqAddr# [ds1_s8R60 __NULL] of {
                                                  __DEFAULT ->
                                                      let {
                                                        sat_s8R62 [Occ=Once] :: GHC.Ptr.Ptr a_a8PgI
                                                        [LclId] =
                                                            CCCS GHC.Ptr.Ptr! [ds1_s8R60];
                                                      } in  Unit# [sat_s8R62];
                                                  1# ->
                                                      raiseIO# [Foreign.Marshal.Alloc.calloc1
                                                                GHC.Prim.void#];
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8R63;

Foreign.Marshal.Array.$wcallocArray0 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8R64 ww_s8R65 void_0E]
        case
            Foreign.Storable.sizeOf w_s8R64 Foreign.Marshal.Array.callocArray1
        of
        { GHC.Types.I# y_s8R68 [Occ=Once] ->
              case +# [ww_s8R65 1#] of sat_s8R6a {
                __DEFAULT ->
                    case *# [sat_s8R6a y_s8R68] of sat_s8R6b {
                      __DEFAULT ->
                          case int2Word# [sat_s8R6b] of sat_s8R6c {
                            __DEFAULT ->
                                case __pkg_ccall base-4.11.0.0 [1## sat_s8R6c GHC.Prim.void#] of {
                                  Unit# ds1_s8R6f ->
                                      case eqAddr# [ds1_s8R6f __NULL] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s8R6h [Occ=Once] :: GHC.Ptr.Ptr a_s8PCK
                                              [LclId] =
                                                  CCCS GHC.Ptr.Ptr! [ds1_s8R6f];
                                            } in  Unit# [sat_s8R6h];
                                        1# ->
                                            raiseIO# [Foreign.Marshal.Alloc.calloc1 GHC.Prim.void#];
                                      };
                                };
                          };
                    };
              };
        };

Foreign.Marshal.Array.callocArray2 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8R6i w1_s8R6j void_0E]
        case w1_s8R6j of {
          GHC.Types.I# ww1_s8R6m [Occ=Once] ->
              Foreign.Marshal.Array.$wcallocArray0
                  w_s8R6i ww1_s8R6m GHC.Prim.void#;
        };

Foreign.Marshal.Array.callocArray0
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Array.callocArray2 eta_B3 eta_B2 GHC.Prim.void#;

lvl14_r8PPt :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [115#];

lvl15_r8PPu :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl14_r8PPt
                                           lvl7_r8PPm
                                           lvl14_r8PPt
                                           lvl8_r8PPn];

lvl16_r8PPv :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl15_r8PPu
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.allocaArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl16_r8PPv;

Foreign.Marshal.Array.allocaArray
  :: forall a b.
     Foreign.Storable.Storable a =>
     GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=1,
 Str=<L,U(1*C1(U(U)),1*C1(U(U)),A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R6n]
        let {
          lvl33_s8R6o [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8R6n] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8R6n Foreign.Marshal.Array.allocaArray1; } in
        let {
          ds1_s8R6p [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8R6n] \u []
                  Foreign.Storable.alignment
                      $dStorable_s8R6n Foreign.Marshal.Array.allocaArray1; } in
        let {
          sat_s8R6M [Occ=Once]
            :: GHC.Types.Int
               -> (GHC.Ptr.Ptr a_a8Per -> GHC.Types.IO b_a8Pes)
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_a8Pes #)
          [LclId] =
              [lvl33_s8R6o ds1_s8R6p] \r [size_s8R6q eta_s8R6r void_0E]
                  case size_s8R6q of {
                    GHC.Types.I# x_s8R6u [Occ=Once] ->
                        case lvl33_s8R6o of {
                          GHC.Types.I# y_s8R6w [Occ=Once] ->
                              case ds1_s8R6p of {
                                GHC.Types.I# align_s8R6y [Occ=Once] ->
                                    case *# [x_s8R6u y_s8R6w] of sat_s8R6z {
                                      __DEFAULT ->
                                          case
                                              newAlignedPinnedByteArray# [sat_s8R6z
                                                                          align_s8R6y
                                                                          GHC.Prim.void#]
                                          of
                                          { Unit# ipv1_s8R6C [Occ=Once] ->
                                                case
                                                    unsafeFreezeByteArray# [ipv1_s8R6C
                                                                            GHC.Prim.void#]
                                                of
                                                { Unit# ipv3_s8R6F ->
                                                      case
                                                          byteArrayContents# [ipv3_s8R6F]
                                                      of
                                                      sat_s8R6G
                                                      { __DEFAULT ->
                                                            let {
                                                              sat_s8R6H [Occ=Once]
                                                                :: GHC.Ptr.Ptr a_a8Per
                                                              [LclId] =
                                                                  CCCS GHC.Ptr.Ptr! [sat_s8R6G];
                                                            } in 
                                                              case
                                                                  eta_s8R6r sat_s8R6H GHC.Prim.void#
                                                              of
                                                              { Unit# ipv5_s8R6K [Occ=Once] ->
                                                                    case
                                                                        touch# [ipv3_s8R6F
                                                                                GHC.Prim.void#]
                                                                    of
                                                                    s4_s8R6L
                                                                    { (##) -> Unit# [ipv5_s8R6K];
                                                                    };
                                                              };
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8R6M;

Foreign.Marshal.Array.allocaArray0 [InlPrag=INLINE (sat-args=1)]
  :: forall a b.
     Foreign.Storable.Storable a =>
     GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=2,
 Str=<L,U(C(U(U)),C(U(U)),A,A,A,A,A,A)><L,1*U(U)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R6N eta_s8R6O]
        let {
          sat_s8R6S [Occ=Once] :: GHC.Types.Int
          [LclId] =
              [eta_s8R6O] \u []
                  case eta_s8R6O of {
                    GHC.Types.I# x_s8R6Q [Occ=Once] ->
                        case +# [x_s8R6Q 1#] of sat_s8R6R {
                          __DEFAULT -> GHC.Types.I# [sat_s8R6R];
                        };
                  };
        } in  Foreign.Marshal.Array.allocaArray $dStorable_s8R6N sat_s8R6S;

lvl17_r8PPw :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [133#];

lvl18_r8PPx :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [27#];

lvl19_r8PPy :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [36#];

lvl20_r8PPz :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl17_r8PPw
                                           lvl18_r8PPx
                                           lvl17_r8PPw
                                           lvl19_r8PPy];

lvl21_r8PPA :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl20_r8PPz
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.reallocArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl21_r8PPA;

Foreign.Marshal.Array.reallocArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R6T]
        let {
          lvl33_s8R6U [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8R6T] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8R6T Foreign.Marshal.Array.reallocArray1; } in
        let {
          sat_s8R7f [Occ=Once]
            :: GHC.Ptr.Ptr a_a8PdG
               -> GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a_a8PdG #)
          [LclId] =
              [lvl33_s8R6U] \r [ptr_s8R6V size_s8R6W void_0E]
                  case size_s8R6W of {
                    GHC.Types.I# x_s8R6Z [Occ=Once] ->
                        case lvl33_s8R6U of {
                          GHC.Types.I# y_s8R71 [Occ=Once] ->
                              case ptr_s8R6V of {
                                GHC.Ptr.Ptr ww1_s8R73 [Occ=Once*] ->
                                    case *# [x_s8R6Z y_s8R71] of ds_s8R74 {
                                      __DEFAULT ->
                                          case int2Word# [ds_s8R74] of sat_s8R76 {
                                            __DEFAULT ->
                                                case
                                                    __pkg_ccall base-4.11.0.0 [ww1_s8R73
                                                                               sat_s8R76
                                                                               GHC.Prim.void#]
                                                of
                                                { Unit# ds2_s8R79 ->
                                                      case eqAddr# [ds2_s8R79 __NULL] of {
                                                        __DEFAULT ->
                                                            let {
                                                              sat_s8R7b [Occ=Once]
                                                                :: GHC.Ptr.Ptr a_a8PdG
                                                              [LclId] =
                                                                  CCCS GHC.Ptr.Ptr! [ds2_s8R79];
                                                            } in  Unit# [sat_s8R7b];
                                                        1# ->
                                                            raiseIO# [Foreign.Marshal.Alloc.realloc2
                                                                      GHC.Prim.void#];
                                                      };
                                                };
                                          };
                                      0# ->
                                          case
                                              __pkg_ccall base-4.11.0.0 [ww1_s8R73 GHC.Prim.void#]
                                          of
                                          { (##) -> Unit# [GHC.Ptr.nullPtr];
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8R7f;

Foreign.Marshal.Array.$wreallocArray0 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8R7g ww_s8R7h ww1_s8R7i void_0E]
        case
            Foreign.Storable.sizeOf w_s8R7g Foreign.Marshal.Array.reallocArray1
        of
        { GHC.Types.I# y_s8R7l [Occ=Once] ->
              case +# [ww1_s8R7i 1#] of sat_s8R7m {
                __DEFAULT ->
                    case *# [sat_s8R7m y_s8R7l] of ds_s8R7n {
                      __DEFAULT ->
                          case int2Word# [ds_s8R7n] of sat_s8R7p {
                            __DEFAULT ->
                                case
                                    __pkg_ccall base-4.11.0.0 [ww_s8R7h sat_s8R7p GHC.Prim.void#]
                                of
                                { Unit# ds2_s8R7s ->
                                      case eqAddr# [ds2_s8R7s __NULL] of {
                                        __DEFAULT ->
                                            let {
                                              sat_s8R7u [Occ=Once] :: GHC.Ptr.Ptr a_s8PCY
                                              [LclId] =
                                                  CCCS GHC.Ptr.Ptr! [ds2_s8R7s];
                                            } in  Unit# [sat_s8R7u];
                                        1# ->
                                            raiseIO# [Foreign.Marshal.Alloc.realloc2
                                                      GHC.Prim.void#];
                                      };
                                };
                          };
                      0# ->
                          case __pkg_ccall base-4.11.0.0 [ww_s8R7h GHC.Prim.void#] of {
                            (##) -> Unit# [GHC.Ptr.nullPtr];
                          };
                    };
              };
        };

Foreign.Marshal.Array.reallocArray2 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8R7y w1_s8R7z w2_s8R7A void_0E]
        case w1_s8R7z of {
          GHC.Ptr.Ptr ww1_s8R7D [Occ=Once] ->
              case w2_s8R7A of {
                GHC.Types.I# ww3_s8R7F [Occ=Once] ->
                    Foreign.Marshal.Array.$wreallocArray0
                        w_s8R7y ww1_s8R7D ww3_s8R7F GHC.Prim.void#;
              };
        };

Foreign.Marshal.Array.reallocArray0
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Array.reallocArray2
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.Marshal.Array.lengthArray2 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

Foreign.Marshal.Array.$wpeekArray [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.Int#
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a] #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><S,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8R7G ww_s8R7H w1_s8R7I void_0E]
        case <=# [ww_s8R7H 0#] of {
          __DEFAULT ->
              case -# [ww_s8R7H 1#] of sat_s8R83 {
                __DEFAULT ->
                    let-no-escape {
                      exit_s8R7L [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
                        :: [a_s8PDk]
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a_s8PDk] #)
                      [LclId[JoinId(2)], Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
                          sat-only [w_s8R7G w1_s8R7I] \r [w3_s8R7M void_0E]
                              case
                                  Foreign.Storable.peekElemOff
                                      w_s8R7G
                                      w1_s8R7I
                                      Foreign.Marshal.Array.lengthArray2
                                      GHC.Prim.void#
                              of
                              { Unit# ipv1_s8R7Q [Occ=Once] ->
                                    let {
                                      sat_s8R7R [Occ=Once] :: [a_s8PDk]
                                      [LclId] =
                                          CCCS :! [ipv1_s8R7Q w3_s8R7M];
                                    } in  Unit# [sat_s8R7R];
                              };
                    } in 
                      let-no-escape {
                        $wf_s8R7S [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                          :: GHC.Prim.Int#
                             -> [a_s8PDk]
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a_s8PDk] #)
                        [LclId[JoinId(3)],
                         Arity=3,
                         Str=<S,1*U><L,U><S,U>,
                         Unf=OtherCon []] =
                            sat-only [w_s8R7G w1_s8R7I exit_s8R7L $wf_s8R7S] \r [ww1_s8R7T
                                                                                 w3_s8R7U
                                                                                 void_0E]
                                case ww1_s8R7T of ds_s8R7W {
                                  __DEFAULT ->
                                      let {
                                        sat_s8R7X [Occ=Once] :: GHC.Types.Int
                                        [LclId] =
                                            CCCS GHC.Types.I#! [ds_s8R7W];
                                      } in 
                                        case
                                            Foreign.Storable.peekElemOff
                                                w_s8R7G w1_s8R7I sat_s8R7X GHC.Prim.void#
                                        of
                                        { Unit# ipv1_s8R80 [Occ=Once] ->
                                              let {
                                                sat_s8R82 [Occ=Once] :: [a_s8PDk]
                                                [LclId] =
                                                    CCCS :! [ipv1_s8R80 w3_s8R7U];
                                              } in 
                                                case -# [ds_s8R7W 1#] of sat_s8R81 {
                                                  __DEFAULT ->
                                                      $wf_s8R7S sat_s8R81 sat_s8R82 GHC.Prim.void#;
                                                };
                                        };
                                  0# -> exit_s8R7L w3_s8R7U GHC.Prim.void#;
                                };
                      } in  $wf_s8R7S sat_s8R83 GHC.Types.[] GHC.Prim.void#;
              };
          1# -> Unit# [GHC.Types.[]];
        };

Foreign.Marshal.Array.peekArray1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a] #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><S(S),1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8R84 w1_s8R85 w2_s8R86 void_0E]
        case w1_s8R85 of {
          GHC.Types.I# ww1_s8R89 [Occ=Once] ->
              Foreign.Marshal.Array.$wpeekArray
                  w_s8R84 ww1_s8R89 w2_s8R86 GHC.Prim.void#;
        };

Foreign.Marshal.Array.peekArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.Int -> GHC.Ptr.Ptr a -> GHC.Types.IO [a]
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><S(S),1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Array.peekArray1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.Marshal.Array.newArray2
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a
     -> [a]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U(A,A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R8a ptr_s8R8b vals0_s8R8c void_0E]
        let-no-escape {
          go_s8R8e [Occ=LoopBreakerT[3]]
            :: [a_a8PbP]
               -> GHC.Prim.Int#
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId[JoinId(3)],
           Arity=3,
           Str=<S,1*U><L,U><S,U>,
           Unf=OtherCon []] =
              sat-only [$dStorable_s8R8a ptr_s8R8b go_s8R8e] \r [ds_s8R8f
                                                                 ds1_s8R8g
                                                                 void_0E]
                  case ds_s8R8f of {
                    [] -> Unit# [GHC.Tuple.()];
                    : val_s8R8j [Occ=Once] vals_s8R8k [Occ=Once] ->
                        let {
                          sat_s8R8l [Occ=Once] :: GHC.Types.Int
                          [LclId] =
                              CCCS GHC.Types.I#! [ds1_s8R8g];
                        } in 
                          case
                              Foreign.Storable.pokeElemOff
                                  $dStorable_s8R8a ptr_s8R8b sat_s8R8l val_s8R8j GHC.Prim.void#
                          of
                          { Unit# _ [Occ=Dead] ->
                                case +# [ds1_s8R8g 1#] of sat_s8R8p {
                                  __DEFAULT -> go_s8R8e vals_s8R8k sat_s8R8p GHC.Prim.void#;
                                };
                          };
                  };
        } in  go_s8R8e vals0_s8R8c 0# GHC.Prim.void#;

Foreign.Marshal.Array.pokeArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> [a] -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<L,U(A,A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Array.newArray2
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.Marshal.Array.withArrayLen
  :: forall a b.
     Foreign.Storable.Storable a =>
     [a]
     -> (GHC.Types.Int -> GHC.Ptr.Ptr a -> GHC.Types.IO b)
     -> GHC.Types.IO b
[GblId,
 Arity=3,
 Str=<L,U(C(U(U)),C(U(U)),A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,U><L,C(C1(C1(U)))>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R8q vals_s8R8r f_s8R8s]
        let {
          len_s8R8t :: GHC.Types.Int
          [LclId] =
              [vals_s8R8r] \u []
                  case GHC.List.$wlenAcc vals_s8R8r 0# of ww2_s8R8u {
                    __DEFAULT -> GHC.Types.I# [ww2_s8R8u];
                  }; } in
        let {
          sat_s8R8A [Occ=Once] :: GHC.Ptr.Ptr a_a8Pg7 -> GHC.Types.IO b_a8Pg8
          [LclId] =
              [$dStorable_s8R8q vals_s8R8r f_s8R8s len_s8R8t] \r [ptr_s8R8v
                                                                  void_0E]
                  case
                      Foreign.Marshal.Array.newArray2
                          $dStorable_s8R8q ptr_s8R8v vals_s8R8r GHC.Prim.void#
                  of
                  { Unit# _ [Occ=Dead] -> f_s8R8s len_s8R8t ptr_s8R8v GHC.Prim.void#;
                  };
        } in 
          Foreign.Marshal.Array.allocaArray
              $dStorable_s8R8q len_s8R8t sat_s8R8A;

Foreign.Marshal.Array.withArray
  :: forall a b.
     Foreign.Storable.Storable a =>
     [a] -> (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=3,
 Str=<L,U(C(U(U)),C(U(U)),A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,U><L,C(C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R8B vals_s8R8C x_s8R8D]
        let {
          sat_s8R8L [Occ=Once] :: GHC.Ptr.Ptr a_a8Pgv -> GHC.Types.IO b_a8Pgw
          [LclId] =
              [$dStorable_s8R8B vals_s8R8C x_s8R8D] \r [ptr_s8R8G void_0E]
                  case
                      Foreign.Marshal.Array.newArray2
                          $dStorable_s8R8B ptr_s8R8G vals_s8R8C GHC.Prim.void#
                  of
                  { Unit# _ [Occ=Dead] -> x_s8R8D ptr_s8R8G GHC.Prim.void#;
                  }; } in
        let {
          sat_s8R8F [Occ=Once] :: GHC.Types.Int
          [LclId] =
              [vals_s8R8C] \u []
                  case GHC.List.$wlenAcc vals_s8R8C 0# of ww2_s8R8E {
                    __DEFAULT -> GHC.Types.I# [ww2_s8R8E];
                  };
        } in 
          Foreign.Marshal.Array.allocaArray
              $dStorable_s8R8B sat_s8R8F sat_s8R8L;

Foreign.Marshal.Array.newArray1
  :: forall a.
     Foreign.Storable.Storable a =>
     [a]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R8M vals_s8R8N void_0E]
        case GHC.List.$wlenAcc vals_s8R8N 0# of ww2_s8R8P {
          __DEFAULT ->
              case
                  Foreign.Storable.sizeOf
                      $dStorable_s8R8M Foreign.Marshal.Array.mallocArray1
              of
              { GHC.Types.I# y_s8R8R [Occ=Once] ->
                    case *# [ww2_s8R8P y_s8R8R] of sat_s8R8T {
                      __DEFAULT ->
                          case int2Word# [sat_s8R8T] of sat_s8R8U {
                            __DEFAULT ->
                                case __pkg_ccall base-4.11.0.0 [sat_s8R8U GHC.Prim.void#] of {
                                  Unit# ds1_s8R8X ->
                                      case eqAddr# [ds1_s8R8X __NULL] of {
                                        __DEFAULT ->
                                            let {
                                              ipv1_s8R8Z :: GHC.Ptr.Ptr a_a8Piu
                                              [LclId, Unf=OtherCon []] =
                                                  CCCS GHC.Ptr.Ptr! [ds1_s8R8X];
                                            } in 
                                              case
                                                  Foreign.Marshal.Array.newArray2
                                                      $dStorable_s8R8M
                                                      ipv1_s8R8Z
                                                      vals_s8R8N
                                                      GHC.Prim.void#
                                              of
                                              { Unit# _ [Occ=Dead] -> Unit# [ipv1_s8R8Z];
                                              };
                                        1# ->
                                            raiseIO# [Foreign.Marshal.Alloc.malloc1 GHC.Prim.void#];
                                      };
                                };
                          };
                    };
              };
        };

Foreign.Marshal.Array.newArray
  :: forall a.
     Foreign.Storable.Storable a =>
     [a] -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Array.newArray1 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.Marshal.Array.newArray4
  :: forall a.
     Foreign.Storable.Storable a =>
     a
     -> GHC.Ptr.Ptr a
     -> [a]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(C(C(S))))LLLL),U(A,A,A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><L,U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R93 marker_s8R94 ptr_s8R95 vals0_s8R96 void_0E]
        let-no-escape {
          exit_s8R98 [Occ=OnceL!T[2], Dmd=<L,C(C1(U(U,U)))>]
            :: GHC.Prim.Int#
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId[JoinId(2)], Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
              sat-only [$dStorable_s8R93 marker_s8R94 ptr_s8R95] \r [n#_s8R99
                                                                     void_0E]
                  let {
                    sat_s8R9b [Occ=Once] :: GHC.Types.Int
                    [LclId] =
                        CCCS GHC.Types.I#! [n#_s8R99];
                  } in 
                    Foreign.Storable.pokeElemOff
                        $dStorable_s8R93 ptr_s8R95 sat_s8R9b marker_s8R94 GHC.Prim.void#;
        } in 
          let-no-escape {
            go_s8R9c [Occ=LoopBreakerT[3]]
              :: [a_a8Pbf]
                 -> GHC.Prim.Int#
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
            [LclId[JoinId(3)],
             Arity=3,
             Str=<S,1*U><L,U><S,U>,
             Unf=OtherCon []] =
                sat-only [$dStorable_s8R93
                          ptr_s8R95
                          exit_s8R98
                          go_s8R9c] \r [ds_s8R9d n#_s8R9e void_0E]
                    case ds_s8R9d of {
                      [] -> exit_s8R98 n#_s8R9e GHC.Prim.void#;
                      : val_s8R9h [Occ=Once] vals_s8R9i [Occ=Once] ->
                          let {
                            sat_s8R9j [Occ=Once] :: GHC.Types.Int
                            [LclId] =
                                CCCS GHC.Types.I#! [n#_s8R9e];
                          } in 
                            case
                                Foreign.Storable.pokeElemOff
                                    $dStorable_s8R93 ptr_s8R95 sat_s8R9j val_s8R9h GHC.Prim.void#
                            of
                            { Unit# _ [Occ=Dead] ->
                                  case +# [n#_s8R9e 1#] of sat_s8R9n {
                                    __DEFAULT -> go_s8R9c vals_s8R9i sat_s8R9n GHC.Prim.void#;
                                  };
                            };
                    };
          } in  go_s8R9c vals0_s8R96 0# GHC.Prim.void#;

Foreign.Marshal.Array.pokeArray0
  :: forall a.
     Foreign.Storable.Storable a =>
     a -> GHC.Ptr.Ptr a -> [a] -> GHC.Types.IO ()
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLLC(C(C(C(S))))LLLL),U(A,A,A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><L,U><S,1*U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Array.newArray4
            eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.Marshal.Array.withArrayLen0
  :: forall a b.
     Foreign.Storable.Storable a =>
     a
     -> [a]
     -> (GHC.Types.Int -> GHC.Ptr.Ptr a -> GHC.Types.IO b)
     -> GHC.Types.IO b
[GblId,
 Arity=4,
 Str=<L,U(C(U(U)),C(U(U)),A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><L,U><L,C(C1(C1(U)))>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R9o marker_s8R9p vals_s8R9q f_s8R9r]
        let {
          len_s8R9s [Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [vals_s8R9q] \u []
                  case GHC.List.$wlenAcc vals_s8R9q 0# of ww2_s8R9t {
                    __DEFAULT -> GHC.Types.I# [ww2_s8R9t];
                  }; } in
        let {
          sat_s8R9D [Occ=Once] :: GHC.Ptr.Ptr a_a8Pfp -> GHC.Types.IO b_a8Pfq
          [LclId] =
              [$dStorable_s8R9o
               marker_s8R9p
               vals_s8R9q
               f_s8R9r
               len_s8R9s] \r [ptr_s8R9y void_0E]
                  case
                      Foreign.Marshal.Array.newArray4
                          $dStorable_s8R9o marker_s8R9p ptr_s8R9y vals_s8R9q GHC.Prim.void#
                  of
                  { Unit# _ [Occ=Dead] -> f_s8R9r len_s8R9s ptr_s8R9y GHC.Prim.void#;
                  }; } in
        let {
          sat_s8R9x [Occ=Once] :: GHC.Types.Int
          [LclId] =
              [len_s8R9s] \u []
                  case len_s8R9s of {
                    GHC.Types.I# x_s8R9v [Occ=Once] ->
                        case +# [x_s8R9v 1#] of sat_s8R9w {
                          __DEFAULT -> GHC.Types.I# [sat_s8R9w];
                        };
                  };
        } in 
          Foreign.Marshal.Array.allocaArray
              $dStorable_s8R9o sat_s8R9x sat_s8R9D;

Foreign.Marshal.Array.withArray0
  :: forall a b.
     Foreign.Storable.Storable a =>
     a -> [a] -> (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=4,
 Str=<L,U(C(U(U)),C(U(U)),A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><L,U><L,C(C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R9E marker_s8R9F vals_s8R9G x_s8R9H]
        let {
          sat_s8R9J [Occ=Once]
            :: GHC.Types.Int -> GHC.Ptr.Ptr a_a8PfU -> GHC.Types.IO b_a8PfV
          [LclId] =
              [x_s8R9H] \r [ds_s8R9I] x_s8R9H;
        } in 
          Foreign.Marshal.Array.withArrayLen0
              $dStorable_s8R9E marker_s8R9F vals_s8R9G sat_s8R9J;

Foreign.Marshal.Array.newArray3
  :: forall a.
     Foreign.Storable.Storable a =>
     a
     -> [a]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8R9K marker_s8R9L vals_s8R9M void_0E]
        case GHC.List.$wlenAcc vals_s8R9M 0# of ww2_s8R9O {
          __DEFAULT ->
              case
                  Foreign.Storable.sizeOf
                      $dStorable_s8R9K Foreign.Marshal.Array.mallocArray1
              of
              { GHC.Types.I# y_s8R9Q [Occ=Once] ->
                    case +# [ww2_s8R9O 1#] of sat_s8R9S {
                      __DEFAULT ->
                          case *# [sat_s8R9S y_s8R9Q] of sat_s8R9T {
                            __DEFAULT ->
                                case int2Word# [sat_s8R9T] of sat_s8R9U {
                                  __DEFAULT ->
                                      case __pkg_ccall base-4.11.0.0 [sat_s8R9U GHC.Prim.void#] of {
                                        Unit# ds1_s8R9X ->
                                            case eqAddr# [ds1_s8R9X __NULL] of {
                                              __DEFAULT ->
                                                  let {
                                                    ipv1_s8R9Z :: GHC.Ptr.Ptr a_a8Pia
                                                    [LclId, Unf=OtherCon []] =
                                                        CCCS GHC.Ptr.Ptr! [ds1_s8R9X];
                                                  } in 
                                                    case
                                                        Foreign.Marshal.Array.newArray4
                                                            $dStorable_s8R9K
                                                            marker_s8R9L
                                                            ipv1_s8R9Z
                                                            vals_s8R9M
                                                            GHC.Prim.void#
                                                    of
                                                    { Unit# _ [Occ=Dead] -> Unit# [ipv1_s8R9Z];
                                                    };
                                              1# ->
                                                  raiseIO# [Foreign.Marshal.Alloc.malloc1
                                                            GHC.Prim.void#];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

Foreign.Marshal.Array.newArray0
  :: forall a.
     Foreign.Storable.Storable a =>
     a -> [a] -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,U><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Array.newArray3
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

lvl22_r8PPB :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [242#];

lvl23_r8PPC :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [21#];

lvl24_r8PPD :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [30#];

lvl25_r8PPE :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl22_r8PPB
                                           lvl23_r8PPC
                                           lvl22_r8PPB
                                           lvl24_r8PPD];

lvl26_r8PPF :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl25_r8PPE
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.copyArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl26_r8PPF;

Foreign.Marshal.Array.copyArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO ()
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8Ra3]
        let {
          lvl33_s8Ra4 [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8Ra3] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8Ra3 Foreign.Marshal.Array.copyArray1; } in
        let {
          sat_s8Ran [Occ=Once]
            :: GHC.Ptr.Ptr a_a8PaC
               -> GHC.Ptr.Ptr a_a8PaC
               -> GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [lvl33_s8Ra4] \r [dest_s8Ra5 src_s8Ra6 size_s8Ra7 void_0E]
                  case dest_s8Ra5 of {
                    GHC.Ptr.Ptr ds1_s8Raa [Occ=Once] ->
                        case src_s8Ra6 of {
                          GHC.Ptr.Ptr ds3_s8Rac [Occ=Once] ->
                              case size_s8Ra7 of {
                                GHC.Types.I# x_s8Rae [Occ=Once] ->
                                    case lvl33_s8Ra4 of {
                                      GHC.Types.I# y_s8Rag [Occ=Once] ->
                                          case *# [x_s8Rae y_s8Rag] of sat_s8Rai {
                                            __DEFAULT ->
                                                case int2Word# [sat_s8Rai] of sat_s8Raj {
                                                  __DEFAULT ->
                                                      case
                                                          __pkg_ccall base-4.11.0.0 [ds1_s8Raa
                                                                                     ds3_s8Rac
                                                                                     sat_s8Raj
                                                                                     GHC.Prim.void#]
                                                      of
                                                      { Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8Ran;

lvl27_r8PPG :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [251#];

lvl28_r8PPH :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl27_r8PPG
                                           lvl23_r8PPC
                                           lvl27_r8PPG
                                           lvl24_r8PPD];

lvl29_r8PPI :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl28_r8PPH
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.moveArray1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl29_r8PPI;

Foreign.Marshal.Array.moveArray
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO ()
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8Rao]
        let {
          lvl33_s8Rap [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8Rao] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8Rao Foreign.Marshal.Array.moveArray1; } in
        let {
          sat_s8RaI [Occ=Once]
            :: GHC.Ptr.Ptr a_a8P9Z
               -> GHC.Ptr.Ptr a_a8P9Z
               -> GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [lvl33_s8Rap] \r [dest_s8Raq src_s8Rar size_s8Ras void_0E]
                  case dest_s8Raq of {
                    GHC.Ptr.Ptr ds1_s8Rav [Occ=Once] ->
                        case src_s8Rar of {
                          GHC.Ptr.Ptr ds3_s8Rax [Occ=Once] ->
                              case size_s8Ras of {
                                GHC.Types.I# x_s8Raz [Occ=Once] ->
                                    case lvl33_s8Rap of {
                                      GHC.Types.I# y_s8RaB [Occ=Once] ->
                                          case *# [x_s8Raz y_s8RaB] of sat_s8RaD {
                                            __DEFAULT ->
                                                case int2Word# [sat_s8RaD] of sat_s8RaE {
                                                  __DEFAULT ->
                                                      case
                                                          __pkg_ccall base-4.11.0.0 [ds1_s8Rav
                                                                                     ds3_s8Rax
                                                                                     sat_s8RaE
                                                                                     GHC.Prim.void#]
                                                      of
                                                      { Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8RaI;

Foreign.Marshal.Array.lengthArray1
  :: forall a.
     (Foreign.Storable.Storable a, GHC.Classes.Eq a) =>
     a
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLC(C(C(S(SL))))LLLLL),U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><L,U(C(C1(U)),A)><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8RaJ $dEq_s8RaK marker_s8RaL ptr_s8RaM void_0E]
        let-no-escape {
          loop_s8RaO [Occ=LoopBreakerT[2]]
            :: GHC.Types.Int
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
          [LclId[JoinId(2)], Arity=2, Str=<L,U(U)><S,U>, Unf=OtherCon []] =
              sat-only [$dStorable_s8RaJ
                        $dEq_s8RaK
                        marker_s8RaL
                        ptr_s8RaM
                        loop_s8RaO] \r [i_s8RaP void_0E]
                  case
                      Foreign.Storable.peekElemOff
                          $dStorable_s8RaJ ptr_s8RaM i_s8RaP GHC.Prim.void#
                  of
                  { Unit# ipv1_s8RaT [Occ=Once] ->
                        case GHC.Classes.== $dEq_s8RaK ipv1_s8RaT marker_s8RaL of {
                          GHC.Types.False ->
                              let {
                                sat_s8RaY [Occ=Once, Dmd=<L,U(U)>] :: GHC.Types.Int
                                [LclId] =
                                    [i_s8RaP] \u []
                                        case i_s8RaP of {
                                          GHC.Types.I# x_s8RaW [Occ=Once] ->
                                              case +# [x_s8RaW 1#] of sat_s8RaX {
                                                __DEFAULT -> GHC.Types.I# [sat_s8RaX];
                                              };
                                        };
                              } in  loop_s8RaO sat_s8RaY GHC.Prim.void#;
                          GHC.Types.True -> Unit# [i_s8RaP];
                        };
                  };
        } in  loop_s8RaO Foreign.Marshal.Array.lengthArray2 GHC.Prim.void#;

Foreign.Marshal.Array.lengthArray0
  :: forall a.
     (Foreign.Storable.Storable a, GHC.Classes.Eq a) =>
     a -> GHC.Ptr.Ptr a -> GHC.Types.IO GHC.Types.Int
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLC(C(C(S(SL))))LLLLL),U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><L,U(C(C1(U)),A)><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Array.lengthArray1
            eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.Marshal.Array.peekArray2
  :: forall a.
     (Foreign.Storable.Storable a, GHC.Classes.Eq a) =>
     a
     -> GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, [a] #)
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLC(C(C(S(SL))))LLLLL),U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><L,U(C(C1(U)),A)><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8RaZ $dEq_s8Rb0 marker_s8Rb1 ptr_s8Rb2 void_0E]
        case
            Foreign.Marshal.Array.lengthArray1
                $dStorable_s8RaZ $dEq_s8Rb0 marker_s8Rb1 ptr_s8Rb2 GHC.Prim.void#
        of
        { Unit# ipv1_s8Rb6 [Occ=Once] ->
              Foreign.Marshal.Array.peekArray1
                  $dStorable_s8RaZ ipv1_s8Rb6 ptr_s8Rb2 GHC.Prim.void#;
        };

Foreign.Marshal.Array.peekArray0
  :: forall a.
     (Foreign.Storable.Storable a, GHC.Classes.Eq a) =>
     a -> GHC.Ptr.Ptr a -> GHC.Types.IO [a]
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<S(LLC(C(C(S(SL))))LLLLL),U(A,A,C(C1(C1(U(U,U)))),A,A,A,A,A)><L,U(C(C1(U)),A)><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Array.peekArray2
            eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

lvl30_r8PPJ :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [276#];

lvl31_r8PPK :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8PPh
                                           lvl3_r8PPi
                                           lvl5_r8PPk
                                           lvl30_r8PPJ
                                           lvl7_r8PPm
                                           lvl30_r8PPJ
                                           lvl8_r8PPn];

lvl32_r8PPL :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8PPg
                                                  lvl31_r8PPK
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Array.advancePtr1 :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl32_r8PPL;

Foreign.Marshal.Array.advancePtr
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Ptr.Ptr a
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8Rb7]
        let {
          lvl33_s8Rb8 [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8Rb7] \u []
                  Foreign.Storable.sizeOf
                      $dStorable_s8Rb7 Foreign.Marshal.Array.advancePtr1; } in
        let {
          sat_s8Rbj [Occ=OnceT[0]]
            :: GHC.Ptr.Ptr a_a8P8O -> GHC.Types.Int -> GHC.Ptr.Ptr a_a8P8O
          [LclId] =
              [lvl33_s8Rb8] \r [ptr_s8Rb9 i_s8Rba]
                  case ptr_s8Rb9 of {
                    GHC.Ptr.Ptr addr_s8Rbc [Occ=Once] ->
                        case i_s8Rba of {
                          GHC.Types.I# x_s8Rbe [Occ=Once] ->
                              case lvl33_s8Rb8 of {
                                GHC.Types.I# y_s8Rbg [Occ=Once] ->
                                    case *# [x_s8Rbe y_s8Rbg] of sat_s8Rbh {
                                      __DEFAULT ->
                                          case plusAddr# [addr_s8Rbc sat_s8Rbh] of sat_s8Rbi {
                                            __DEFAULT -> GHC.Ptr.Ptr [sat_s8Rbi];
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8Rbj;

Foreign.Marshal.Array.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Marshal.Array.$trModule4];

Foreign.Marshal.Array.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Marshal.Array.$trModule2];

Foreign.Marshal.Array.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.Marshal.Array.$trModule3
                                     Foreign.Marshal.Array.$trModule1];

