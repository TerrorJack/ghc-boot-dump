
==================== Asm code ====================
2018-03-16 16:04:15.018131736 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.Marshal.Pool.$trModule4_bytes
.type Foreign.Marshal.Pool.$trModule4_bytes, @object
Foreign.Marshal.Pool.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:04:15.01992587 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.$trModule3_closure
.type Foreign.Marshal.Pool.$trModule3_closure, @object
Foreign.Marshal.Pool.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Foreign.Marshal.Pool.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:04:15.021798215 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.Marshal.Pool.$trModule2_bytes
.type Foreign.Marshal.Pool.$trModule2_bytes, @object
Foreign.Marshal.Pool.$trModule2_bytes:
	.asciz "Foreign.Marshal.Pool"


==================== Asm code ====================
2018-03-16 16:04:15.024050919 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.$trModule1_closure
.type Foreign.Marshal.Pool.$trModule1_closure, @object
Foreign.Marshal.Pool.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Foreign.Marshal.Pool.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:04:15.02581725 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.$trModule_closure
.type Foreign.Marshal.Pool.$trModule_closure, @object
Foreign.Marshal.Pool.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	Foreign.Marshal.Pool.$trModule3_closure+1
	.quad	Foreign.Marshal.Pool.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:15.027510336 UTC

.section .data
.align 8
.align 1
$krep_r95mW_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Tuple.$tc()_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:15.029152344 UTC

.section .data
.align 8
.align 1
$krep1_r95mX_closure:
	.quad	:_con_info
	.quad	$krep_r95mW_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:15.030907951 UTC

.section .data
.align 8
.align 1
$krep2_r95mY_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Ptr.$tcPtr_closure
	.quad	$krep1_r95mX_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:15.03258928 UTC

.section .data
.align 8
.align 1
$krep3_r95mZ_closure:
	.quad	:_con_info
	.quad	$krep2_r95mY_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:15.034292459 UTC

.section .data
.align 8
.align 1
$krep4_r95n0_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tc[]_closure
	.quad	$krep3_r95mZ_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:15.03606018 UTC

.section .data
.align 8
.align 1
$krep5_r95n1_closure:
	.quad	:_con_info
	.quad	$krep4_r95n0_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:15.038661248 UTC

.section .data
.align 8
.align 1
$krep6_r95n2_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IORef.$tcIORef_closure
	.quad	$krep5_r95n1_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:15.040289189 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.Marshal.Pool.$tcPool2_bytes
.type Foreign.Marshal.Pool.$tcPool2_bytes, @object
Foreign.Marshal.Pool.$tcPool2_bytes:
	.asciz "Pool"


==================== Asm code ====================
2018-03-16 16:04:15.042496633 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.$tcPool1_closure
.type Foreign.Marshal.Pool.$tcPool1_closure, @object
Foreign.Marshal.Pool.$tcPool1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Foreign.Marshal.Pool.$tcPool2_bytes


==================== Asm code ====================
2018-03-16 16:04:15.0443373 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.$tcPool_closure
.type Foreign.Marshal.Pool.$tcPool_closure, @object
Foreign.Marshal.Pool.$tcPool_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Foreign.Marshal.Pool.$trModule_closure+1
	.quad	Foreign.Marshal.Pool.$tcPool1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	6812857741828992361
	.quad	-6319081516180320097
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:15.046140877 UTC

.section .data
.align 8
.align 1
$krep7_r95n3_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	Foreign.Marshal.Pool.$tcPool_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:15.047846536 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.$tc'Pool1_closure
.type Foreign.Marshal.Pool.$tc'Pool1_closure, @object
Foreign.Marshal.Pool.$tc'Pool1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep6_r95n2_closure+1
	.quad	$krep7_r95n3_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:15.050235231 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.Marshal.Pool.$tc'Pool3_bytes
.type Foreign.Marshal.Pool.$tc'Pool3_bytes, @object
Foreign.Marshal.Pool.$tc'Pool3_bytes:
	.asciz "'Pool"


==================== Asm code ====================
2018-03-16 16:04:15.051925958 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.$tc'Pool2_closure
.type Foreign.Marshal.Pool.$tc'Pool2_closure, @object
Foreign.Marshal.Pool.$tc'Pool2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Foreign.Marshal.Pool.$tc'Pool3_bytes


==================== Asm code ====================
2018-03-16 16:04:15.054193508 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.$tc'Pool_closure
.type Foreign.Marshal.Pool.$tc'Pool_closure, @object
Foreign.Marshal.Pool.$tc'Pool_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Foreign.Marshal.Pool.$trModule_closure+1
	.quad	Foreign.Marshal.Pool.$tc'Pool2_closure+1
	.quad	Foreign.Marshal.Pool.$tc'Pool1_closure+4
	.quad	-6857927076082914255
	.quad	-3041657962501006422
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:15.055836344 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_r95n4_bytes:
	.asciz "pointer not in pool"


==================== Asm code ====================
2018-03-16 16:04:15.058369108 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledRealloc2_closure
.type Foreign.Marshal.Pool.pooledRealloc2_closure, @object
Foreign.Marshal.Pool.pooledRealloc2_closure:
	.quad	Foreign.Marshal.Pool.pooledRealloc2_info


==================== Asm code ====================
2018-03-16 16:04:15.059067388 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledRealloc2_entry
.type Foreign.Marshal.Pool.pooledRealloc2_entry, @object
Foreign.Marshal.Pool.pooledRealloc2_entry:
_c95Y4:
	movl $lvl_r95n4_bytes,%r14d
	jmp GHC.CString.unpackCString#_entry
	.size Foreign.Marshal.Pool.pooledRealloc2_entry, .-Foreign.Marshal.Pool.pooledRealloc2_entry


==================== Asm code ====================
2018-03-16 16:04:15.059640373 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledRealloc2_info
.type Foreign.Marshal.Pool.pooledRealloc2_info, @object
Foreign.Marshal.Pool.pooledRealloc2_info:
	.quad	Foreign.Marshal.Pool.pooledRealloc2_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:15.066495301 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.$wpooledReallocBytes_closure
.type Foreign.Marshal.Pool.$wpooledReallocBytes_closure, @object
Foreign.Marshal.Pool.$wpooledReallocBytes_closure:
	.quad	Foreign.Marshal.Pool.$wpooledReallocBytes_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.067449475 UTC

.section .text
.align 8
sat_s95nT_entry:
_c95YC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c95YD
_c95YE:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c95YG
_c95YF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%rdi
	leaq -7(%r12),%rsi
	movl $GHC.Ptr.$fEqPtr_$c==_closure+2,%r14d
	addq $-16,%rbp
	jmp Data.OldList.deleteBy_entry
_c95YG:
	movq $16,904(%r13)
_c95YD:
	jmp *-16(%r13)
	.size sat_s95nT_entry, .-sat_s95nT_entry


==================== Asm code ====================
2018-03-16 16:04:15.068161978 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s95nT_info:
	.quad	sat_s95nT_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:04:15.068968312 UTC

.section .text
.align 8
sat_s95o4_entry:
_c95YP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c95YQ
_c95YR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c95YT
_c95YS:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%rdi
	leaq -7(%r12),%rsi
	movl $GHC.Ptr.$fEqPtr_$c==_closure+2,%r14d
	addq $-16,%rbp
	jmp Data.OldList.deleteBy_entry
_c95YT:
	movq $16,904(%r13)
_c95YQ:
	jmp *-16(%r13)
	.size sat_s95o4_entry, .-sat_s95o4_entry


==================== Asm code ====================
2018-03-16 16:04:15.070160505 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s95o4_info:
	.quad	sat_s95o4_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:04:15.070969436 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.$wpooledReallocBytes_entry
.type Foreign.Marshal.Pool.$wpooledReallocBytes_entry, @object
Foreign.Marshal.Pool.$wpooledReallocBytes_entry:
_c95YY:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c95YZ
_c95Z0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c95Z2
_c95Z1:
	movq 8(%r14),%rax
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	movq %rsi,(%r12)
	movq $block_c95Yg_info,-40(%rbp)
	movq %rdi,%rbx
	movq %rax,%rdi
	movq %rsi,%rcx
	leaq -7(%r12),%rsi
	movq %r14,%rdx
	movl $GHC.Ptr.$fEqPtr_closure,%r14d
	movq %rdx,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.List.elem_entry
_c95Z2:
	movq $16,904(%r13)
_c95YZ:
	movl $Foreign.Marshal.Pool.$wpooledReallocBytes_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.$wpooledReallocBytes_entry, .-Foreign.Marshal.Pool.$wpooledReallocBytes_entry


==================== Asm code ====================
2018-03-16 16:04:15.071697149 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.$wpooledReallocBytes_info
.type Foreign.Marshal.Pool.$wpooledReallocBytes_info, @object
Foreign.Marshal.Pool.$wpooledReallocBytes_info:
	.quad	Foreign.Marshal.Pool.$wpooledReallocBytes_entry
	.quad	0
	.quad	30064771086
	.quad	17179869204
	.quad	S95uu_srt


==================== Asm code ====================
2018-03-16 16:04:15.072926991 UTC

.section .text
.align 8
_c95Yg:
_c95Yg:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c95YV
_c95YW:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c95Z7
_c95Z6:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq 24(%rbp),%rcx
	testq %rcx,%rcx
	jne _c95Zc
_c95Zd:
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call free
	addq $8,%rsp
	movq 8(%r14),%rax
	movq $sat_s95o4_info,-64(%r12)
	movq %rax,-48(%r12)
	movq %rbx,-40(%r12)
	movq $:_con_info,-32(%r12)
	movq $GHC.Ptr.nullPtr_closure,-24(%r12)
	leaq -64(%r12),%rax
	movq %rax,-16(%r12)
	leaq -30(%r12),%rax
	movq %rax,8(%r14)
	subq $8,%rsp
	movq %r13,%rax
	movq %r14,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $-16,%r12
	movl $GHC.Ptr.nullPtr_closure,%ebx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c95Za:
	addq $-72,%r12
	movl $Foreign.Marshal.Alloc.realloc2_closure,%ebx
	addq $40,%rbp
	jmp stg_raiseIO#
_c95Zc:
	subq $8,%rsp
	movq %rbx,%rdx
	movq %rcx,%rsi
	movq %rdx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call realloc
	addq $8,%rsp
	testq %rax,%rax
	je _c95Za
_c95Z9:
	movq 8(%r14),%rcx
	movq $GHC.Ptr.Ptr_con_info,-64(%r12)
	movq %rax,-56(%r12)
	movq $sat_s95nT_info,-48(%r12)
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -63(%r12),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	movq %rbx,8(%r14)
	subq $8,%rsp
	movq %r13,%rbx
	movq %r14,%rsi
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c95Z7:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
_c95YV:
	movl $Foreign.Marshal.Pool.pooledRealloc2_closure+1,%esi
	movq 32(%rbp),%r14
	addq $40,%rbp
	jmp Foreign.Marshal.Error.throwIf2_entry
	.size _c95Yg, .-_c95Yg


==================== Asm code ====================
2018-03-16 16:04:15.073972717 UTC

.section .data.rel.ro
.align 8
.align 1
block_c95Yg_info:
	.quad	_c95Yg
	.quad	388
	.quad	12884901918
	.quad	S95uu_srt


==================== Asm code ====================
2018-03-16 16:04:15.077905206 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledRealloc1_closure
.type Foreign.Marshal.Pool.pooledRealloc1_closure, @object
Foreign.Marshal.Pool.pooledRealloc1_closure:
	.quad	Foreign.Marshal.Pool.pooledRealloc1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.078687496 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledRealloc1_entry
.type Foreign.Marshal.Pool.pooledRealloc1_entry, @object
Foreign.Marshal.Pool.pooledRealloc1_entry:
_c95ZU:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c9603
_c9604:
	movq $block_c95ZR_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c95ZR
_c95ZS:
	movq (%rbx),%rax
	jmp *(%rax)
_c9603:
	movl $Foreign.Marshal.Pool.pooledRealloc1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledRealloc1_entry, .-Foreign.Marshal.Pool.pooledRealloc1_entry


==================== Asm code ====================
2018-03-16 16:04:15.079328475 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledRealloc1_info
.type Foreign.Marshal.Pool.pooledRealloc1_info, @object
Foreign.Marshal.Pool.pooledRealloc1_info:
	.quad	Foreign.Marshal.Pool.pooledRealloc1_entry
	.quad	0
	.quad	12884901902
	.quad	17179869207
	.quad	S95uu_srt+16


==================== Asm code ====================
2018-03-16 16:04:15.080005523 UTC

.section .text
.align 8
_c95ZR:
_c95ZR:
	movq $block_c95ZX_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c95ZX
_c95ZY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c95ZR, .-_c95ZR


==================== Asm code ====================
2018-03-16 16:04:15.080614688 UTC

.section .data.rel.ro
.align 8
.align 1
block_c95ZR_info:
	.quad	_c95ZR
	.quad	2
	.quad	4294967326
	.quad	S95uu_srt+16


==================== Asm code ====================
2018-03-16 16:04:15.081590804 UTC

.section .text
.align 8
_c95ZX:
_c95ZX:
	movq $block_c9602_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c9602
_c9607:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c95ZX, .-_c95ZX


==================== Asm code ====================
2018-03-16 16:04:15.082234611 UTC

.section .data.rel.ro
.align 8
.align 1
block_c95ZX_info:
	.quad	_c95ZX
	.quad	2
	.quad	4294967326
	.quad	S95uu_srt+16


==================== Asm code ====================
2018-03-16 16:04:15.082901402 UTC

.section .text
.align 8
_c9602:
_c9602:
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp Foreign.Marshal.Pool.$wpooledReallocBytes_entry
	.size _c9602, .-_c9602


==================== Asm code ====================
2018-03-16 16:04:15.08351524 UTC

.section .data.rel.ro
.align 8
.align 1
block_c9602_info:
	.quad	_c9602
	.quad	130
	.quad	4294967326
	.quad	S95uu_srt+16


==================== Asm code ====================
2018-03-16 16:04:15.085852733 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledReallocBytes_closure
.type Foreign.Marshal.Pool.pooledReallocBytes_closure, @object
Foreign.Marshal.Pool.pooledReallocBytes_closure:
	.quad	Foreign.Marshal.Pool.pooledReallocBytes_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.086839803 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledReallocBytes_entry
.type Foreign.Marshal.Pool.pooledReallocBytes_entry, @object
Foreign.Marshal.Pool.pooledReallocBytes_entry:
_c960A:
	jmp Foreign.Marshal.Pool.pooledRealloc1_entry
	.size Foreign.Marshal.Pool.pooledReallocBytes_entry, .-Foreign.Marshal.Pool.pooledReallocBytes_entry


==================== Asm code ====================
2018-03-16 16:04:15.087430007 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledReallocBytes_info
.type Foreign.Marshal.Pool.pooledReallocBytes_info, @object
Foreign.Marshal.Pool.pooledReallocBytes_info:
	.quad	Foreign.Marshal.Pool.pooledReallocBytes_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	S95uu_srt+24


==================== Asm code ====================
2018-03-16 16:04:15.089109678 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl1_r95n5_bytes:
	.asciz "undefined"


==================== Asm code ====================
2018-03-16 16:04:15.09208787 UTC

.section .data
.align 8
.align 1
lvl2_r95n6_closure:
	.quad	lvl2_r95n6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.092902808 UTC

.section .text
.align 8
lvl2_r95n6_entry:
_c960O:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c960P
_c960Q:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c960N
_c960M:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl1_r95n5_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c960P:
	jmp *-16(%r13)
_c960N:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl2_r95n6_entry, .-lvl2_r95n6_entry


==================== Asm code ====================
2018-03-16 16:04:15.093605281 UTC

.section .data.rel.ro
.align 8
.align 1
lvl2_r95n6_info:
	.quad	lvl2_r95n6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:04:15.096052444 UTC

.section .data
.align 8
.align 1
lvl3_r95n7_closure:
	.quad	lvl3_r95n7_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.096810714 UTC

.section .text
.align 8
lvl3_r95n7_entry:
_c9614:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c9615
_c9616:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c9613
_c9612:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Foreign.Marshal.Pool.$trModule4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c9615:
	jmp *-16(%r13)
_c9613:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl3_r95n7_entry, .-lvl3_r95n7_entry


==================== Asm code ====================
2018-03-16 16:04:15.09776795 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_r95n7_info:
	.quad	lvl3_r95n7_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:04:15.100244623 UTC

.section .data
.align 8
.align 1
lvl4_r95n8_closure:
	.quad	lvl4_r95n8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.101086377 UTC

.section .text
.align 8
lvl4_r95n8_entry:
_c961k:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c961l
_c961m:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c961j
_c961i:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Foreign.Marshal.Pool.$trModule2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c961l:
	jmp *-16(%r13)
_c961j:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl4_r95n8_entry, .-lvl4_r95n8_entry


==================== Asm code ====================
2018-03-16 16:04:15.101867773 UTC

.section .data.rel.ro
.align 8
.align 1
lvl4_r95n8_info:
	.quad	lvl4_r95n8_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:04:15.103936197 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl5_r95n9_bytes:
	.asciz "./Foreign/Marshal/Pool.hs"


==================== Asm code ====================
2018-03-16 16:04:15.106395866 UTC

.section .data
.align 8
.align 1
lvl6_r95na_closure:
	.quad	lvl6_r95na_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.107199378 UTC

.section .text
.align 8
lvl6_r95na_entry:
_c961B:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c961C
_c961D:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c961A
_c961z:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl5_r95n9_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c961C:
	jmp *-16(%r13)
_c961A:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl6_r95na_entry, .-lvl6_r95na_entry


==================== Asm code ====================
2018-03-16 16:04:15.107853229 UTC

.section .data.rel.ro
.align 8
.align 1
lvl6_r95na_info:
	.quad	lvl6_r95na_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:04:15.109553172 UTC

.section .data
.align 8
.align 1
lvl7_r95nb_closure:
	.quad	GHC.Types.I#_con_info
	.quad	159


==================== Asm code ====================
2018-03-16 16:04:15.111213735 UTC

.section .data
.align 8
.align 1
lvl8_r95nc_closure:
	.quad	GHC.Types.I#_con_info
	.quad	26


==================== Asm code ====================
2018-03-16 16:04:15.112870959 UTC

.section .data
.align 8
.align 1
lvl9_r95nd_closure:
	.quad	GHC.Types.I#_con_info
	.quad	35


==================== Asm code ====================
2018-03-16 16:04:15.114723857 UTC

.section .data
.align 8
.align 1
lvl10_r95ne_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl3_r95n7_closure
	.quad	lvl4_r95n8_closure
	.quad	lvl6_r95na_closure
	.quad	lvl7_r95nb_closure+1
	.quad	lvl8_r95nc_closure+1
	.quad	lvl7_r95nb_closure+1
	.quad	lvl9_r95nd_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.116896973 UTC

.section .data
.align 8
.align 1
lvl11_r95nf_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl2_r95n6_closure
	.quad	lvl10_r95ne_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.119841723 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledReallocArray1_closure
.type Foreign.Marshal.Pool.pooledReallocArray1_closure, @object
Foreign.Marshal.Pool.pooledReallocArray1_closure:
	.quad	Foreign.Marshal.Pool.pooledReallocArray1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.120731217 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledReallocArray1_entry
.type Foreign.Marshal.Pool.pooledReallocArray1_entry, @object
Foreign.Marshal.Pool.pooledReallocArray1_entry:
_c961W:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c961X
_c961Y:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c961V
_c961U:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl11_r95nf_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Err.undefined_entry
_c961X:
	jmp *-16(%r13)
_c961V:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Pool.pooledReallocArray1_entry, .-Foreign.Marshal.Pool.pooledReallocArray1_entry


==================== Asm code ====================
2018-03-16 16:04:15.121485775 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledReallocArray1_info
.type Foreign.Marshal.Pool.pooledReallocArray1_info, @object
Foreign.Marshal.Pool.pooledReallocArray1_info:
	.quad	Foreign.Marshal.Pool.pooledReallocArray1_entry
	.quad	0
	.quad	12884901909
	.quad	S95uu_srt+32


==================== Asm code ====================
2018-03-16 16:04:15.127573886 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledReallocArray_closure
.type Foreign.Marshal.Pool.pooledReallocArray_closure, @object
Foreign.Marshal.Pool.pooledReallocArray_closure:
	.quad	Foreign.Marshal.Pool.pooledReallocArray_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.128321439 UTC

.section .text
.align 8
lvl27_s95oi_entry:
_c962e:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c962f
_c962g:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $Foreign.Marshal.Pool.pooledReallocArray1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp Foreign.Storable.sizeOf_entry
_c962f:
	jmp *-16(%r13)
	.size lvl27_s95oi_entry, .-lvl27_s95oi_entry


==================== Asm code ====================
2018-03-16 16:04:15.129011688 UTC

.section .data.rel.ro
.align 8
.align 1
lvl27_s95oi_info:
	.quad	lvl27_s95oi_entry
	.quad	1
	.quad	4294967312
	.quad	S95uu_srt+48


==================== Asm code ====================
2018-03-16 16:04:15.129799395 UTC

.section .text
.align 8
sat_s95ow_entry:
_c962p:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c962D
_c962E:
	movq $block_c962m_info,-32(%rbp)
	movq 4(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c962m
_c962n:
	movq (%rbx),%rax
	jmp *(%rax)
_c962D:
	jmp *-8(%r13)
	.size sat_s95ow_entry, .-sat_s95ow_entry


==================== Asm code ====================
2018-03-16 16:04:15.130490987 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s95ow_info:
	.quad	sat_s95ow_entry
	.quad	1
	.quad	4294967305
	.quad	17179869207
	.quad	S95uu_srt+16


==================== Asm code ====================
2018-03-16 16:04:15.131171543 UTC

.section .text
.align 8
_c962m:
_c962m:
	movq $block_c962s_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c962s
_c962t:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c962m, .-_c962m


==================== Asm code ====================
2018-03-16 16:04:15.131810002 UTC

.section .data.rel.ro
.align 8
.align 1
block_c962m_info:
	.quad	_c962m
	.quad	3
	.quad	4294967326
	.quad	S95uu_srt+16


==================== Asm code ====================
2018-03-16 16:04:15.132537341 UTC

.section .text
.align 8
_c962s:
_c962s:
	movq $block_c962x_info,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c962x
_c962y:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c962s, .-_c962s


==================== Asm code ====================
2018-03-16 16:04:15.133752057 UTC

.section .data.rel.ro
.align 8
.align 1
block_c962s_info:
	.quad	_c962s
	.quad	3
	.quad	4294967326
	.quad	S95uu_srt+16


==================== Asm code ====================
2018-03-16 16:04:15.134455518 UTC

.section .text
.align 8
_c962x:
_c962x:
	movq $block_c962C_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c962C
_c962I:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c962x, .-_c962x


==================== Asm code ====================
2018-03-16 16:04:15.135085769 UTC

.section .data.rel.ro
.align 8
.align 1
block_c962x_info:
	.quad	_c962x
	.quad	259
	.quad	4294967326
	.quad	S95uu_srt+16


==================== Asm code ====================
2018-03-16 16:04:15.135751354 UTC

.section .text
.align 8
_c962C:
_c962C:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rdi
	imulq (%rax),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp Foreign.Marshal.Pool.$wpooledReallocBytes_entry
	.size _c962C, .-_c962C


==================== Asm code ====================
2018-03-16 16:04:15.136357312 UTC

.section .data.rel.ro
.align 8
.align 1
block_c962C_info:
	.quad	_c962C
	.quad	323
	.quad	4294967326
	.quad	S95uu_srt+16


==================== Asm code ====================
2018-03-16 16:04:15.137019824 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledReallocArray_entry
.type Foreign.Marshal.Pool.pooledReallocArray_entry, @object
Foreign.Marshal.Pool.pooledReallocArray_entry:
_c962S:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c962W
_c962V:
	movq $lvl27_s95oi_info,-32(%r12)
	movq %r14,-16(%r12)
	movq $sat_s95ow_info,-8(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%r12)
	leaq -4(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c962W:
	movq $40,904(%r13)
	movl $Foreign.Marshal.Pool.pooledReallocArray_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledReallocArray_entry, .-Foreign.Marshal.Pool.pooledReallocArray_entry


==================== Asm code ====================
2018-03-16 16:04:15.137713888 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledReallocArray_info
.type Foreign.Marshal.Pool.pooledReallocArray_info, @object
Foreign.Marshal.Pool.pooledReallocArray_info:
	.quad	Foreign.Marshal.Pool.pooledReallocArray_entry
	.quad	0
	.quad	210453397518
	.quad	4294967301
	.quad	S95uu_srt+16


==================== Asm code ====================
2018-03-16 16:04:15.142240228 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledReallocArray2_closure
.type Foreign.Marshal.Pool.pooledReallocArray2_closure, @object
Foreign.Marshal.Pool.pooledReallocArray2_closure:
	.quad	Foreign.Marshal.Pool.pooledReallocArray2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.142981845 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledReallocArray2_entry
.type Foreign.Marshal.Pool.pooledReallocArray2_entry, @object
Foreign.Marshal.Pool.pooledReallocArray2_entry:
_c963A:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c963O
_c963P:
	movq $block_c963x_info,-32(%rbp)
	movq %rsi,%rbx
	movq %r14,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c963x
_c963y:
	movq (%rbx),%rax
	jmp *(%rax)
_c963O:
	movl $Foreign.Marshal.Pool.pooledReallocArray2_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledReallocArray2_entry, .-Foreign.Marshal.Pool.pooledReallocArray2_entry


==================== Asm code ====================
2018-03-16 16:04:15.143680077 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledReallocArray2_info
.type Foreign.Marshal.Pool.pooledReallocArray2_info, @object
Foreign.Marshal.Pool.pooledReallocArray2_info:
	.quad	Foreign.Marshal.Pool.pooledReallocArray2_entry
	.quad	0
	.quad	347892350990
	.quad	21474836504
	.quad	S95uu_srt+16


==================== Asm code ====================
2018-03-16 16:04:15.144422068 UTC

.section .text
.align 8
_c963x:
_c963x:
	movq $block_c963D_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c963D
_c963E:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c963x, .-_c963x


==================== Asm code ====================
2018-03-16 16:04:15.145059167 UTC

.section .data.rel.ro
.align 8
.align 1
block_c963x_info:
	.quad	_c963x
	.quad	3
	.quad	73014444062
	.quad	S95uu_srt+16


==================== Asm code ====================
2018-03-16 16:04:15.145777731 UTC

.section .text
.align 8
_c963D:
_c963D:
	movq $block_c963I_info,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c963I
_c963J:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c963D, .-_c963D


==================== Asm code ====================
2018-03-16 16:04:15.146412101 UTC

.section .data.rel.ro
.align 8
.align 1
block_c963D_info:
	.quad	_c963D
	.quad	3
	.quad	73014444062
	.quad	S95uu_srt+16


==================== Asm code ====================
2018-03-16 16:04:15.147133633 UTC

.section .text
.align 8
_c963I:
_c963I:
	movq $block_c963N_info,(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq $Foreign.Marshal.Pool.pooledReallocArray1_closure,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,8(%rbp)
	addq $-16,%rbp
	jmp Foreign.Storable.sizeOf_entry
	.size _c963I, .-_c963I


==================== Asm code ====================
2018-03-16 16:04:15.147764707 UTC

.section .data.rel.ro
.align 8
.align 1
block_c963I_info:
	.quad	_c963I
	.quad	259
	.quad	73014444062
	.quad	S95uu_srt+16


==================== Asm code ====================
2018-03-16 16:04:15.148794717 UTC

.section .text
.align 8
_c963N:
_c963N:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	leaq 1(%rbx),%rdi
	imulq (%rax),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp Foreign.Marshal.Pool.$wpooledReallocBytes_entry
	.size _c963N, .-_c963N


==================== Asm code ====================
2018-03-16 16:04:15.149456963 UTC

.section .data.rel.ro
.align 8
.align 1
block_c963N_info:
	.quad	_c963N
	.quad	323
	.quad	4294967326
	.quad	S95uu_srt+16


==================== Asm code ====================
2018-03-16 16:04:15.151687784 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledReallocArray0_closure
.type Foreign.Marshal.Pool.pooledReallocArray0_closure, @object
Foreign.Marshal.Pool.pooledReallocArray0_closure:
	.quad	Foreign.Marshal.Pool.pooledReallocArray0_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.152297839 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledReallocArray0_entry
.type Foreign.Marshal.Pool.pooledReallocArray0_entry, @object
Foreign.Marshal.Pool.pooledReallocArray0_entry:
_c964w:
	jmp Foreign.Marshal.Pool.pooledReallocArray2_entry
	.size Foreign.Marshal.Pool.pooledReallocArray0_entry, .-Foreign.Marshal.Pool.pooledReallocArray0_entry


==================== Asm code ====================
2018-03-16 16:04:15.152906923 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledReallocArray0_info
.type Foreign.Marshal.Pool.pooledReallocArray0_info, @object
Foreign.Marshal.Pool.pooledReallocArray0_info:
	.quad	Foreign.Marshal.Pool.pooledReallocArray0_entry
	.quad	0
	.quad	4294967310
	.quad	21474836504
	.quad	S95uu_srt+64


==================== Asm code ====================
2018-03-16 16:04:15.154608356 UTC

.section .data
.align 8
.align 1
lvl12_r95ng_closure:
	.quad	GHC.Types.I#_con_info
	.quad	124


==================== Asm code ====================
2018-03-16 16:04:15.156257962 UTC

.section .data
.align 8
.align 1
lvl13_r95nh_closure:
	.quad	GHC.Types.I#_con_info
	.quad	20


==================== Asm code ====================
2018-03-16 16:04:15.157936126 UTC

.section .data
.align 8
.align 1
lvl14_r95ni_closure:
	.quad	GHC.Types.I#_con_info
	.quad	29


==================== Asm code ====================
2018-03-16 16:04:15.159674431 UTC

.section .data
.align 8
.align 1
lvl15_r95nj_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl3_r95n7_closure
	.quad	lvl4_r95n8_closure
	.quad	lvl6_r95na_closure
	.quad	lvl12_r95ng_closure+1
	.quad	lvl13_r95nh_closure+1
	.quad	lvl12_r95ng_closure+1
	.quad	lvl14_r95ni_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.1617191 UTC

.section .data
.align 8
.align 1
lvl16_r95nk_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl2_r95n6_closure
	.quad	lvl15_r95nj_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.164761667 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledRealloc3_closure
.type Foreign.Marshal.Pool.pooledRealloc3_closure, @object
Foreign.Marshal.Pool.pooledRealloc3_closure:
	.quad	Foreign.Marshal.Pool.pooledRealloc3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.165678657 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledRealloc3_entry
.type Foreign.Marshal.Pool.pooledRealloc3_entry, @object
Foreign.Marshal.Pool.pooledRealloc3_entry:
_c964O:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c964P
_c964Q:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c964N
_c964M:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl16_r95nk_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Err.undefined_entry
_c964P:
	jmp *-16(%r13)
_c964N:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Pool.pooledRealloc3_entry, .-Foreign.Marshal.Pool.pooledRealloc3_entry


==================== Asm code ====================
2018-03-16 16:04:15.166387473 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledRealloc3_info
.type Foreign.Marshal.Pool.pooledRealloc3_info, @object
Foreign.Marshal.Pool.pooledRealloc3_info:
	.quad	Foreign.Marshal.Pool.pooledRealloc3_entry
	.quad	0
	.quad	141733920789
	.quad	S95uu_srt+32


==================== Asm code ====================
2018-03-16 16:04:15.169786072 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledRealloc_closure
.type Foreign.Marshal.Pool.pooledRealloc_closure, @object
Foreign.Marshal.Pool.pooledRealloc_closure:
	.quad	Foreign.Marshal.Pool.pooledRealloc_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.170480719 UTC

.section .text
.align 8
lvl27_s95oN_entry:
_c9656:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c9657
_c9658:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $Foreign.Marshal.Pool.pooledRealloc3_closure,-24(%rbp)
	addq $-32,%rbp
	jmp Foreign.Storable.sizeOf_entry
_c9657:
	jmp *-16(%r13)
	.size lvl27_s95oN_entry, .-lvl27_s95oN_entry


==================== Asm code ====================
2018-03-16 16:04:15.171114551 UTC

.section .data.rel.ro
.align 8
.align 1
lvl27_s95oN_info:
	.quad	lvl27_s95oN_entry
	.quad	1
	.quad	4294967312
	.quad	S95uu_srt+80


==================== Asm code ====================
2018-03-16 16:04:15.171741142 UTC

.section .text
.align 8
sat_s95oR_entry:
_c965e:
	movq 5(%rbx),%rdi
	jmp Foreign.Marshal.Pool.pooledRealloc1_entry
	.size sat_s95oR_entry, .-sat_s95oR_entry


==================== Asm code ====================
2018-03-16 16:04:15.172346015 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s95oR_info:
	.quad	sat_s95oR_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S95uu_srt+24


==================== Asm code ====================
2018-03-16 16:04:15.173041488 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledRealloc_entry
.type Foreign.Marshal.Pool.pooledRealloc_entry, @object
Foreign.Marshal.Pool.pooledRealloc_entry:
_c965h:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c965l
_c965k:
	movq $lvl27_s95oN_info,-32(%r12)
	movq %r14,-16(%r12)
	movq $sat_s95oR_info,-8(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%r12)
	leaq -5(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c965l:
	movq $40,904(%r13)
	movl $Foreign.Marshal.Pool.pooledRealloc_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledRealloc_entry, .-Foreign.Marshal.Pool.pooledRealloc_entry


==================== Asm code ====================
2018-03-16 16:04:15.173736361 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledRealloc_info
.type Foreign.Marshal.Pool.pooledRealloc_info, @object
Foreign.Marshal.Pool.pooledRealloc_info:
	.quad	Foreign.Marshal.Pool.pooledRealloc_entry
	.quad	0
	.quad	1653562408974
	.quad	4294967301
	.quad	S95uu_srt+24


==================== Asm code ====================
2018-03-16 16:04:15.1789329 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocBytes1_closure
.type Foreign.Marshal.Pool.pooledMallocBytes1_closure, @object
Foreign.Marshal.Pool.pooledMallocBytes1_closure:
	.quad	Foreign.Marshal.Pool.pooledMallocBytes1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.18012809 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledMallocBytes1_entry
.type Foreign.Marshal.Pool.pooledMallocBytes1_entry, @object
Foreign.Marshal.Pool.pooledMallocBytes1_entry:
_c965G:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c965H
_c965I:
	movq $block_c965D_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c965D
_c965E:
	movq (%rbx),%rax
	jmp *(%rax)
_c965H:
	movl $Foreign.Marshal.Pool.pooledMallocBytes1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledMallocBytes1_entry, .-Foreign.Marshal.Pool.pooledMallocBytes1_entry


==================== Asm code ====================
2018-03-16 16:04:15.180803861 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocBytes1_info
.type Foreign.Marshal.Pool.pooledMallocBytes1_info, @object
Foreign.Marshal.Pool.pooledMallocBytes1_info:
	.quad	Foreign.Marshal.Pool.pooledMallocBytes1_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S95uu_srt+96


==================== Asm code ====================
2018-03-16 16:04:15.181695062 UTC

.section .text
.align 8
_c965D:
_c965D:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movq 7(%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call malloc
	addq $8,%rsp
	testq %rax,%rax
	je _c9665
_c9661:
	movq $block_c965U_info,(%rbp)
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c965U
_c965V:
	movq (%rbx),%rax
	jmp *(%rax)
_c9665:
	movl $Foreign.Marshal.Alloc.malloc1_closure,%ebx
	addq $16,%rbp
	jmp stg_raiseIO#
	.size _c965D, .-_c965D


==================== Asm code ====================
2018-03-16 16:04:15.182346885 UTC

.section .data.rel.ro
.align 8
.align 1
block_c965D_info:
	.quad	_c965D
	.quad	1
	.quad	4294967326
	.quad	S95uu_srt+96


==================== Asm code ====================
2018-03-16 16:04:15.183175382 UTC

.section .text
.align 8
_c965U:
_c965U:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c9664
_c9663:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq $GHC.Ptr.Ptr_con_info,-32(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	movq %rcx,%rbx
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c9664:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c965U, .-_c965U


==================== Asm code ====================
2018-03-16 16:04:15.183923152 UTC

.section .data.rel.ro
.align 8
.align 1
block_c965U_info:
	.quad	_c965U
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.186087502 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocBytes_closure
.type Foreign.Marshal.Pool.pooledMallocBytes_closure, @object
Foreign.Marshal.Pool.pooledMallocBytes_closure:
	.quad	Foreign.Marshal.Pool.pooledMallocBytes_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.186720038 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledMallocBytes_entry
.type Foreign.Marshal.Pool.pooledMallocBytes_entry, @object
Foreign.Marshal.Pool.pooledMallocBytes_entry:
_c966x:
	jmp Foreign.Marshal.Pool.pooledMallocBytes1_entry
	.size Foreign.Marshal.Pool.pooledMallocBytes_entry, .-Foreign.Marshal.Pool.pooledMallocBytes_entry


==================== Asm code ====================
2018-03-16 16:04:15.187282622 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocBytes_info
.type Foreign.Marshal.Pool.pooledMallocBytes_info, @object
Foreign.Marshal.Pool.pooledMallocBytes_info:
	.quad	Foreign.Marshal.Pool.pooledMallocBytes_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	S95uu_srt+104


==================== Asm code ====================
2018-03-16 16:04:15.188991329 UTC

.section .data
.align 8
.align 1
lvl17_r95nl_closure:
	.quad	GHC.Types.I#_con_info
	.quad	144


==================== Asm code ====================
2018-03-16 16:04:15.190930205 UTC

.section .data
.align 8
.align 1
lvl18_r95nm_closure:
	.quad	GHC.Types.I#_con_info
	.quad	25


==================== Asm code ====================
2018-03-16 16:04:15.192650355 UTC

.section .data
.align 8
.align 1
lvl19_r95nn_closure:
	.quad	GHC.Types.I#_con_info
	.quad	34


==================== Asm code ====================
2018-03-16 16:04:15.194880166 UTC

.section .data
.align 8
.align 1
lvl20_r95no_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl3_r95n7_closure
	.quad	lvl4_r95n8_closure
	.quad	lvl6_r95na_closure
	.quad	lvl17_r95nl_closure+1
	.quad	lvl18_r95nm_closure+1
	.quad	lvl17_r95nl_closure+1
	.quad	lvl19_r95nn_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.196616842 UTC

.section .data
.align 8
.align 1
lvl21_r95np_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl2_r95n6_closure
	.quad	lvl20_r95no_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.199239687 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocArray1_closure
.type Foreign.Marshal.Pool.pooledMallocArray1_closure, @object
Foreign.Marshal.Pool.pooledMallocArray1_closure:
	.quad	Foreign.Marshal.Pool.pooledMallocArray1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.200128174 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledMallocArray1_entry
.type Foreign.Marshal.Pool.pooledMallocArray1_entry, @object
Foreign.Marshal.Pool.pooledMallocArray1_entry:
_c966P:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c966Q
_c966R:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c966O
_c966N:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl21_r95np_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Err.undefined_entry
_c966Q:
	jmp *-16(%r13)
_c966O:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Pool.pooledMallocArray1_entry, .-Foreign.Marshal.Pool.pooledMallocArray1_entry


==================== Asm code ====================
2018-03-16 16:04:15.200861152 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocArray1_info
.type Foreign.Marshal.Pool.pooledMallocArray1_info, @object
Foreign.Marshal.Pool.pooledMallocArray1_info:
	.quad	Foreign.Marshal.Pool.pooledMallocArray1_entry
	.quad	0
	.quad	4402341478421
	.quad	S95uu_srt+32


==================== Asm code ====================
2018-03-16 16:04:15.207145267 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocArray_closure
.type Foreign.Marshal.Pool.pooledMallocArray_closure, @object
Foreign.Marshal.Pool.pooledMallocArray_closure:
	.quad	Foreign.Marshal.Pool.pooledMallocArray_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.207958963 UTC

.section .text
.align 8
lvl27_s95pd_entry:
_c9677:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c9678
_c9679:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $Foreign.Marshal.Pool.pooledMallocArray1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp Foreign.Storable.sizeOf_entry
_c9678:
	jmp *-16(%r13)
	.size lvl27_s95pd_entry, .-lvl27_s95pd_entry


==================== Asm code ====================
2018-03-16 16:04:15.208673955 UTC

.section .data.rel.ro
.align 8
.align 1
lvl27_s95pd_info:
	.quad	lvl27_s95pd_entry
	.quad	1
	.quad	4294967312
	.quad	S95uu_srt+120


==================== Asm code ====================
2018-03-16 16:04:15.209461358 UTC

.section .text
.align 8
sat_s95pB_entry:
_c967i:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c967m
_c967n:
	movq $block_c967f_info,-24(%rbp)
	movq 5(%rbx),%rax
	movq %rsi,%rbx
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c967f
_c967g:
	movq (%rbx),%rax
	jmp *(%rax)
_c967m:
	jmp *-8(%r13)
	.size sat_s95pB_entry, .-sat_s95pB_entry


==================== Asm code ====================
2018-03-16 16:04:15.210147508 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s95pB_info:
	.quad	sat_s95pB_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S95uu_srt+96


==================== Asm code ====================
2018-03-16 16:04:15.211249708 UTC

.section .text
.align 8
_c967f:
_c967f:
	movq $block_c967l_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c967l
_c967p:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c967f, .-_c967f


==================== Asm code ====================
2018-03-16 16:04:15.211851057 UTC

.section .data.rel.ro
.align 8
.align 1
block_c967f_info:
	.quad	_c967f
	.quad	2
	.quad	4294967326
	.quad	S95uu_srt+96


==================== Asm code ====================
2018-03-16 16:04:15.212683953 UTC

.section .text
.align 8
_c967l:
_c967l:
	movq 16(%rbp),%rax
	subq $8,%rsp
	addq $7,%rbx
	movq 8(%rbp),%rdi
	imulq (%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call malloc
	addq $8,%rsp
	testq %rax,%rax
	je _c967Q
_c967M:
	movq $block_c967F_info,8(%rbp)
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c967F
_c967G:
	movq (%rbx),%rax
	jmp *(%rax)
_c967Q:
	movl $Foreign.Marshal.Alloc.malloc1_closure,%ebx
	addq $24,%rbp
	jmp stg_raiseIO#
	.size _c967l, .-_c967l


==================== Asm code ====================
2018-03-16 16:04:15.213714552 UTC

.section .data.rel.ro
.align 8
.align 1
block_c967l_info:
	.quad	_c967l
	.quad	66
	.quad	4294967326
	.quad	S95uu_srt+96


==================== Asm code ====================
2018-03-16 16:04:15.214504761 UTC

.section .text
.align 8
_c967F:
_c967F:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c967P
_c967O:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq $GHC.Ptr.Ptr_con_info,-32(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	movq %rcx,%rbx
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c967P:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c967F, .-_c967F


==================== Asm code ====================
2018-03-16 16:04:15.215210165 UTC

.section .data.rel.ro
.align 8
.align 1
block_c967F_info:
	.quad	_c967F
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.215938412 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledMallocArray_entry
.type Foreign.Marshal.Pool.pooledMallocArray_entry, @object
Foreign.Marshal.Pool.pooledMallocArray_entry:
_c967Y:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c9682
_c9681:
	movq $lvl27_s95pd_info,-32(%r12)
	movq %r14,-16(%r12)
	movq $sat_s95pB_info,-8(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%r12)
	leaq -5(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c9682:
	movq $40,904(%r13)
	movl $Foreign.Marshal.Pool.pooledMallocArray_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledMallocArray_entry, .-Foreign.Marshal.Pool.pooledMallocArray_entry


==================== Asm code ====================
2018-03-16 16:04:15.216602484 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocArray_info
.type Foreign.Marshal.Pool.pooledMallocArray_info, @object
Foreign.Marshal.Pool.pooledMallocArray_info:
	.quad	Foreign.Marshal.Pool.pooledMallocArray_entry
	.quad	0
	.quad	107374182414
	.quad	4294967301
	.quad	S95uu_srt+96


==================== Asm code ====================
2018-03-16 16:04:15.221027533 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.$wpooledMallocArray0_closure
.type Foreign.Marshal.Pool.$wpooledMallocArray0_closure, @object
Foreign.Marshal.Pool.$wpooledMallocArray0_closure:
	.quad	Foreign.Marshal.Pool.$wpooledMallocArray0_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.221810002 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.$wpooledMallocArray0_entry
.type Foreign.Marshal.Pool.$wpooledMallocArray0_entry, @object
Foreign.Marshal.Pool.$wpooledMallocArray0_entry:
_c968F:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c968G
_c968H:
	movq $block_c968D_info,-24(%rbp)
	movq $stg_ap_p_info,-40(%rbp)
	movq $Foreign.Marshal.Pool.pooledMallocArray1_closure,-32(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-40,%rbp
	jmp Foreign.Storable.sizeOf_entry
_c968G:
	movl $Foreign.Marshal.Pool.$wpooledMallocArray0_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.$wpooledMallocArray0_entry, .-Foreign.Marshal.Pool.$wpooledMallocArray0_entry


==================== Asm code ====================
2018-03-16 16:04:15.222556403 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.$wpooledMallocArray0_info
.type Foreign.Marshal.Pool.$wpooledMallocArray0_info, @object
Foreign.Marshal.Pool.$wpooledMallocArray0_info:
	.quad	Foreign.Marshal.Pool.$wpooledMallocArray0_entry
	.quad	0
	.quad	176093659150
	.quad	17179869206
	.quad	S95uu_srt+96


==================== Asm code ====================
2018-03-16 16:04:15.223406726 UTC

.section .text
.align 8
_c968D:
_c968D:
	movq 8(%rbp),%rax
	subq $8,%rsp
	addq $7,%rbx
	movq 16(%rbp),%rcx
	leaq 1(%rcx),%rdi
	imulq (%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call malloc
	addq $8,%rsp
	testq %rax,%rax
	je _c969a
_c9696:
	movq $block_c968Z_info,8(%rbp)
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c968Z
_c9690:
	movq (%rbx),%rax
	jmp *(%rax)
_c969a:
	movl $Foreign.Marshal.Alloc.malloc1_closure,%ebx
	addq $24,%rbp
	jmp stg_raiseIO#
	.size _c968D, .-_c968D


==================== Asm code ====================
2018-03-16 16:04:15.224106287 UTC

.section .data.rel.ro
.align 8
.align 1
block_c968D_info:
	.quad	_c968D
	.quad	130
	.quad	4294967326
	.quad	S95uu_srt+96


==================== Asm code ====================
2018-03-16 16:04:15.224972051 UTC

.section .text
.align 8
_c968Z:
_c968Z:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c9699
_c9698:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq $GHC.Ptr.Ptr_con_info,-32(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	movq %rcx,%rbx
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c9699:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c968Z, .-_c968Z


==================== Asm code ====================
2018-03-16 16:04:15.225930735 UTC

.section .data.rel.ro
.align 8
.align 1
block_c968Z_info:
	.quad	_c968Z
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.229296214 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocArray2_closure
.type Foreign.Marshal.Pool.pooledMallocArray2_closure, @object
Foreign.Marshal.Pool.pooledMallocArray2_closure:
	.quad	Foreign.Marshal.Pool.pooledMallocArray2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.230095265 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledMallocArray2_entry
.type Foreign.Marshal.Pool.pooledMallocArray2_entry, @object
Foreign.Marshal.Pool.pooledMallocArray2_entry:
_c969G:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c969H
_c969I:
	movq $block_c969D_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c969D
_c969E:
	movq (%rbx),%rax
	jmp *(%rax)
_c969H:
	movl $Foreign.Marshal.Pool.pooledMallocArray2_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledMallocArray2_entry, .-Foreign.Marshal.Pool.pooledMallocArray2_entry


==================== Asm code ====================
2018-03-16 16:04:15.23075699 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocArray2_info
.type Foreign.Marshal.Pool.pooledMallocArray2_info, @object
Foreign.Marshal.Pool.pooledMallocArray2_info:
	.quad	Foreign.Marshal.Pool.pooledMallocArray2_entry
	.quad	0
	.quad	12884901902
	.quad	17179869207
	.quad	S95uu_srt+136


==================== Asm code ====================
2018-03-16 16:04:15.231412247 UTC

.section .text
.align 8
_c969D:
_c969D:
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp Foreign.Marshal.Pool.$wpooledMallocArray0_entry
	.size _c969D, .-_c969D


==================== Asm code ====================
2018-03-16 16:04:15.231985067 UTC

.section .data.rel.ro
.align 8
.align 1
block_c969D_info:
	.quad	_c969D
	.quad	2
	.quad	4294967326
	.quad	S95uu_srt+136


==================== Asm code ====================
2018-03-16 16:04:15.234211488 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocArray0_closure
.type Foreign.Marshal.Pool.pooledMallocArray0_closure, @object
Foreign.Marshal.Pool.pooledMallocArray0_closure:
	.quad	Foreign.Marshal.Pool.pooledMallocArray0_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.234785876 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledMallocArray0_entry
.type Foreign.Marshal.Pool.pooledMallocArray0_entry, @object
Foreign.Marshal.Pool.pooledMallocArray0_entry:
_c96a0:
	jmp Foreign.Marshal.Pool.pooledMallocArray2_entry
	.size Foreign.Marshal.Pool.pooledMallocArray0_entry, .-Foreign.Marshal.Pool.pooledMallocArray0_entry


==================== Asm code ====================
2018-03-16 16:04:15.23534261 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocArray0_info
.type Foreign.Marshal.Pool.pooledMallocArray0_info, @object
Foreign.Marshal.Pool.pooledMallocArray0_info:
	.quad	Foreign.Marshal.Pool.pooledMallocArray0_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	S95uu_srt+144


==================== Asm code ====================
2018-03-16 16:04:15.237057803 UTC

.section .data
.align 8
.align 1
lvl22_r95nq_closure:
	.quad	GHC.Types.I#_con_info
	.quad	106


==================== Asm code ====================
2018-03-16 16:04:15.239031768 UTC

.section .data
.align 8
.align 1
lvl23_r95nr_closure:
	.quad	GHC.Types.I#_con_info
	.quad	19


==================== Asm code ====================
2018-03-16 16:04:15.240762816 UTC

.section .data
.align 8
.align 1
lvl24_r95ns_closure:
	.quad	GHC.Types.I#_con_info
	.quad	28


==================== Asm code ====================
2018-03-16 16:04:15.242972052 UTC

.section .data
.align 8
.align 1
lvl25_r95nt_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl3_r95n7_closure
	.quad	lvl4_r95n8_closure
	.quad	lvl6_r95na_closure
	.quad	lvl22_r95nq_closure+1
	.quad	lvl23_r95nr_closure+1
	.quad	lvl22_r95nq_closure+1
	.quad	lvl24_r95ns_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.244687299 UTC

.section .data
.align 8
.align 1
lvl26_r95nu_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl2_r95n6_closure
	.quad	lvl25_r95nt_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.247280065 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMalloc1_closure
.type Foreign.Marshal.Pool.pooledMalloc1_closure, @object
Foreign.Marshal.Pool.pooledMalloc1_closure:
	.quad	Foreign.Marshal.Pool.pooledMalloc1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.248185845 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledMalloc1_entry
.type Foreign.Marshal.Pool.pooledMalloc1_entry, @object
Foreign.Marshal.Pool.pooledMalloc1_entry:
_c96ai:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96aj
_c96ak:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c96ah
_c96ag:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl26_r95nu_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Err.undefined_entry
_c96aj:
	jmp *-16(%r13)
_c96ah:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Pool.pooledMalloc1_entry, .-Foreign.Marshal.Pool.pooledMalloc1_entry


==================== Asm code ====================
2018-03-16 16:04:15.248864093 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMalloc1_info
.type Foreign.Marshal.Pool.pooledMalloc1_info, @object
Foreign.Marshal.Pool.pooledMalloc1_info:
	.quad	Foreign.Marshal.Pool.pooledMalloc1_entry
	.quad	0
	.quad	140741783322645
	.quad	S95uu_srt+32


==================== Asm code ====================
2018-03-16 16:04:15.25456036 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMalloc_closure
.type Foreign.Marshal.Pool.pooledMalloc_closure, @object
Foreign.Marshal.Pool.pooledMalloc_closure:
	.quad	Foreign.Marshal.Pool.pooledMalloc_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.255290756 UTC

.section .text
.align 8
lvl27_s95q6_entry:
_c96aA:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c96aB
_c96aC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $Foreign.Marshal.Pool.pooledMalloc1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp Foreign.Storable.sizeOf_entry
_c96aB:
	jmp *-16(%r13)
	.size lvl27_s95q6_entry, .-lvl27_s95q6_entry


==================== Asm code ====================
2018-03-16 16:04:15.255945604 UTC

.section .data.rel.ro
.align 8
.align 1
lvl27_s95q6_info:
	.quad	lvl27_s95q6_entry
	.quad	1
	.quad	4294967312
	.quad	S95uu_srt+160


==================== Asm code ====================
2018-03-16 16:04:15.256738924 UTC

.section .text
.align 8
sat_s95qq_entry:
_c96aL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96aM
_c96aN:
	movq $block_c96aI_info,-16(%rbp)
	movq 6(%rbx),%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c96aI
_c96aJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c96aM:
	jmp *-8(%r13)
	.size sat_s95qq_entry, .-sat_s95qq_entry


==================== Asm code ====================
2018-03-16 16:04:15.257866239 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s95qq_info:
	.quad	sat_s95qq_entry
	.quad	1
	.quad	4294967305
	.quad	8589934597
	.quad	S95uu_srt+96


==================== Asm code ====================
2018-03-16 16:04:15.258662549 UTC

.section .text
.align 8
_c96aI:
_c96aI:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movq 7(%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call malloc
	addq $8,%rsp
	testq %rax,%rax
	je _c96ba
_c96b6:
	movq $block_c96aZ_info,(%rbp)
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c96aZ
_c96b0:
	movq (%rbx),%rax
	jmp *(%rax)
_c96ba:
	movl $Foreign.Marshal.Alloc.malloc1_closure,%ebx
	addq $16,%rbp
	jmp stg_raiseIO#
	.size _c96aI, .-_c96aI


==================== Asm code ====================
2018-03-16 16:04:15.259358579 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96aI_info:
	.quad	_c96aI
	.quad	1
	.quad	4294967326
	.quad	S95uu_srt+96


==================== Asm code ====================
2018-03-16 16:04:15.260191708 UTC

.section .text
.align 8
_c96aZ:
_c96aZ:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c96b9
_c96b8:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq $GHC.Ptr.Ptr_con_info,-32(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	movq %rcx,%rbx
	call dirty_MUT_VAR
	addq $8,%rsp
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c96b9:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c96aZ, .-_c96aZ


==================== Asm code ====================
2018-03-16 16:04:15.260891196 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96aZ_info:
	.quad	_c96aZ
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.261939749 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledMalloc_entry
.type Foreign.Marshal.Pool.pooledMalloc_entry, @object
Foreign.Marshal.Pool.pooledMalloc_entry:
_c96bh:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c96bl
_c96bk:
	movq $lvl27_s95q6_info,-32(%r12)
	movq %r14,-16(%r12)
	movq $sat_s95qq_info,-8(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c96bl:
	movq $40,904(%r13)
	movl $Foreign.Marshal.Pool.pooledMalloc_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledMalloc_entry, .-Foreign.Marshal.Pool.pooledMalloc_entry


==================== Asm code ====================
2018-03-16 16:04:15.262589697 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMalloc_info
.type Foreign.Marshal.Pool.pooledMalloc_info, @object
Foreign.Marshal.Pool.pooledMalloc_info:
	.quad	Foreign.Marshal.Pool.pooledMalloc_entry
	.quad	0
	.quad	3302829850638
	.quad	4294967301
	.quad	S95uu_srt+96


==================== Asm code ====================
2018-03-16 16:04:15.267957369 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNewArray2_closure
.type Foreign.Marshal.Pool.pooledNewArray2_closure, @object
Foreign.Marshal.Pool.pooledNewArray2_closure:
	.quad	Foreign.Marshal.Pool.pooledNewArray2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.26876592 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledNewArray2_entry
.type Foreign.Marshal.Pool.pooledNewArray2_entry, @object
Foreign.Marshal.Pool.pooledNewArray2_entry:
_c96bS:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c96bW
_c96bX:
	movq $block_c96bQ_info,-40(%rbp)
	movq %rsi,%rax
	xorl %esi,%esi
	movq %r14,%rbx
	movq %r8,%r14
	movq %rbx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.List.$wlenAcc_entry
_c96bW:
	movl $Foreign.Marshal.Pool.pooledNewArray2_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledNewArray2_entry, .-Foreign.Marshal.Pool.pooledNewArray2_entry


==================== Asm code ====================
2018-03-16 16:04:15.269484568 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNewArray2_info
.type Foreign.Marshal.Pool.pooledNewArray2_info, @object
Foreign.Marshal.Pool.pooledNewArray2_info:
	.quad	Foreign.Marshal.Pool.pooledNewArray2_entry
	.quad	0
	.quad	4436701216782
	.quad	21474836504
	.quad	S95uu_srt+96


==================== Asm code ====================
2018-03-16 16:04:15.270203767 UTC

.section .text
.align 8
_c96bQ:
_c96bQ:
	movq $block_c96bV_info,-8(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_p_info,-24(%rbp)
	movq $Foreign.Marshal.Pool.pooledMallocArray1_closure,-16(%rbp)
	movq %rbx,(%rbp)
	addq $-24,%rbp
	jmp Foreign.Storable.sizeOf_entry
	.size _c96bQ, .-_c96bQ


==================== Asm code ====================
2018-03-16 16:04:15.270912739 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96bQ_info:
	.quad	_c96bQ
	.quad	4
	.quad	38654705694
	.quad	S95uu_srt+96


==================== Asm code ====================
2018-03-16 16:04:15.271785601 UTC

.section .text
.align 8
_c96bV:
_c96bV:
	movq 24(%rbp),%rax
	subq $8,%rsp
	addq $7,%rbx
	movq 8(%rbp),%rcx
	leaq 1(%rcx),%rdi
	imulq (%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call malloc
	addq $8,%rsp
	testq %rax,%rax
	je _c96cz
_c96ct:
	movq $block_c96ch_info,8(%rbp)
	movq %rax,24(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c96ch
_c96ci:
	movq (%rbx),%rax
	jmp *(%rax)
_c96cz:
	movl $Foreign.Marshal.Alloc.malloc1_closure,%ebx
	addq $48,%rbp
	jmp stg_raiseIO#
	.size _c96bV, .-_c96bV


==================== Asm code ====================
2018-03-16 16:04:15.272505942 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96bV_info:
	.quad	_c96bV
	.quad	69
	.quad	4294967326
	.quad	S95uu_srt+96


==================== Asm code ====================
2018-03-16 16:04:15.273965753 UTC

.section .text
.align 8
_c96ch:
_c96ch:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c96cw
_c96cv:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq $GHC.Ptr.Ptr_con_info,-32(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rbx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	leaq -14(%r12),%rdi
	movq %rdi,8(%rax)
	subq $8,%rsp
	movq %r13,%rdi
	movq %rsi,%r8
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_c96cr_info,24(%rbp)
	movq 72(%rsp),%rax
	movq %rax,%r8
	movq %r14,%rdi
	movq 64(%rsp),%rax
	movq %rax,%rsi
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp Foreign.Marshal.Array.newArray4_entry
_c96cw:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c96ch, .-_c96ch


==================== Asm code ====================
2018-03-16 16:04:15.274767845 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96ch_info:
	.quad	_c96ch
	.quad	132
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.275390199 UTC

.section .text
.align 8
_c96cr:
_c96cr:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c96cr, .-_c96cr


==================== Asm code ====================
2018-03-16 16:04:15.275964107 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96cr_info:
	.quad	_c96cr
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.278302732 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNewArray0_closure
.type Foreign.Marshal.Pool.pooledNewArray0_closure, @object
Foreign.Marshal.Pool.pooledNewArray0_closure:
	.quad	Foreign.Marshal.Pool.pooledNewArray0_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.278970547 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledNewArray0_entry
.type Foreign.Marshal.Pool.pooledNewArray0_entry, @object
Foreign.Marshal.Pool.pooledNewArray0_entry:
_c96d4:
	jmp Foreign.Marshal.Pool.pooledNewArray2_entry
	.size Foreign.Marshal.Pool.pooledNewArray0_entry, .-Foreign.Marshal.Pool.pooledNewArray0_entry


==================== Asm code ====================
2018-03-16 16:04:15.27948258 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNewArray0_info
.type Foreign.Marshal.Pool.pooledNewArray0_info, @object
Foreign.Marshal.Pool.pooledNewArray0_info:
	.quad	Foreign.Marshal.Pool.pooledNewArray0_entry
	.quad	0
	.quad	4294967310
	.quad	21474836504
	.quad	S95uu_srt+176


==================== Asm code ====================
2018-03-16 16:04:15.284612139 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNewArray1_closure
.type Foreign.Marshal.Pool.pooledNewArray1_closure, @object
Foreign.Marshal.Pool.pooledNewArray1_closure:
	.quad	Foreign.Marshal.Pool.pooledNewArray1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.285655682 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledNewArray1_entry
.type Foreign.Marshal.Pool.pooledNewArray1_entry, @object
Foreign.Marshal.Pool.pooledNewArray1_entry:
_c96dh:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c96dl
_c96dm:
	movq $block_c96df_info,-32(%rbp)
	movq %rsi,%rax
	xorl %esi,%esi
	movq %r14,%rbx
	movq %rdi,%r14
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.List.$wlenAcc_entry
_c96dl:
	movl $Foreign.Marshal.Pool.pooledNewArray1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledNewArray1_entry, .-Foreign.Marshal.Pool.pooledNewArray1_entry


==================== Asm code ====================
2018-03-16 16:04:15.286336191 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNewArray1_info
.type Foreign.Marshal.Pool.pooledNewArray1_info, @object
Foreign.Marshal.Pool.pooledNewArray1_info:
	.quad	Foreign.Marshal.Pool.pooledNewArray1_entry
	.quad	0
	.quad	8834747727886
	.quad	17179869207
	.quad	S95uu_srt+96


==================== Asm code ====================
2018-03-16 16:04:15.287078793 UTC

.section .text
.align 8
_c96df:
_c96df:
	movq $block_c96dk_info,-8(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_p_info,-24(%rbp)
	movq $Foreign.Marshal.Pool.pooledMallocArray1_closure,-16(%rbp)
	movq %rbx,(%rbp)
	addq $-24,%rbp
	jmp Foreign.Storable.sizeOf_entry
	.size _c96df, .-_c96df


==================== Asm code ====================
2018-03-16 16:04:15.28772991 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96df_info:
	.quad	_c96df
	.quad	3
	.quad	38654705694
	.quad	S95uu_srt+96


==================== Asm code ====================
2018-03-16 16:04:15.288947479 UTC

.section .text
.align 8
_c96dk:
_c96dk:
	movq 24(%rbp),%rax
	subq $8,%rsp
	addq $7,%rbx
	movq 8(%rbp),%rdi
	imulq (%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call malloc
	addq $8,%rsp
	testq %rax,%rax
	je _c96dV
_c96dP:
	movq $block_c96dD_info,8(%rbp)
	movq %rax,24(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c96dD
_c96dE:
	movq (%rbx),%rax
	jmp *(%rax)
_c96dV:
	movl $Foreign.Marshal.Alloc.malloc1_closure,%ebx
	addq $40,%rbp
	jmp stg_raiseIO#
	.size _c96dk, .-_c96dk


==================== Asm code ====================
2018-03-16 16:04:15.289657911 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96dk_info:
	.quad	_c96dk
	.quad	68
	.quad	4294967326
	.quad	S95uu_srt+96


==================== Asm code ====================
2018-03-16 16:04:15.290529152 UTC

.section .text
.align 8
_c96dD:
_c96dD:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c96dS
_c96dR:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq $GHC.Ptr.Ptr_con_info,-32(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rbx
	movq 24(%rbp),%rdx
	leaq -14(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_c96dN_info,16(%rbp)
	movq 64(%rsp),%rax
	movq %rax,%rdi
	movq %r14,%rsi
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp Foreign.Marshal.Array.newArray2_entry
_c96dS:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c96dD, .-_c96dD


==================== Asm code ====================
2018-03-16 16:04:15.291232408 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96dD_info:
	.quad	_c96dD
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.291832168 UTC

.section .text
.align 8
_c96dN:
_c96dN:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c96dN, .-_c96dN


==================== Asm code ====================
2018-03-16 16:04:15.292402957 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96dN_info:
	.quad	_c96dN
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.294664604 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNewArray_closure
.type Foreign.Marshal.Pool.pooledNewArray_closure, @object
Foreign.Marshal.Pool.pooledNewArray_closure:
	.quad	Foreign.Marshal.Pool.pooledNewArray_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.295284971 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledNewArray_entry
.type Foreign.Marshal.Pool.pooledNewArray_entry, @object
Foreign.Marshal.Pool.pooledNewArray_entry:
_c96ep:
	jmp Foreign.Marshal.Pool.pooledNewArray1_entry
	.size Foreign.Marshal.Pool.pooledNewArray_entry, .-Foreign.Marshal.Pool.pooledNewArray_entry


==================== Asm code ====================
2018-03-16 16:04:15.295887027 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNewArray_info
.type Foreign.Marshal.Pool.pooledNewArray_info, @object
Foreign.Marshal.Pool.pooledNewArray_info:
	.quad	Foreign.Marshal.Pool.pooledNewArray_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	S95uu_srt+184


==================== Asm code ====================
2018-03-16 16:04:15.300938729 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNew1_closure
.type Foreign.Marshal.Pool.pooledNew1_closure, @object
Foreign.Marshal.Pool.pooledNew1_closure:
	.quad	Foreign.Marshal.Pool.pooledNew1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.301734393 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledNew1_entry
.type Foreign.Marshal.Pool.pooledNew1_entry, @object
Foreign.Marshal.Pool.pooledNew1_entry:
_c96eC:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c96eD
_c96eE:
	movq $block_c96eA_info,-32(%rbp)
	movq %r14,%rax
	movq $stg_ap_p_info,-48(%rbp)
	movq $Foreign.Marshal.Pool.pooledMalloc1_closure,-40(%rbp)
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-48,%rbp
	jmp Foreign.Storable.sizeOf_entry
_c96eD:
	movl $Foreign.Marshal.Pool.pooledNew1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledNew1_entry, .-Foreign.Marshal.Pool.pooledNew1_entry


==================== Asm code ====================
2018-03-16 16:04:15.30245847 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNew1_info
.type Foreign.Marshal.Pool.pooledNew1_info, @object
Foreign.Marshal.Pool.pooledNew1_info:
	.quad	Foreign.Marshal.Pool.pooledNew1_entry
	.quad	0
	.quad	18695992639502
	.quad	17179869207
	.quad	S95uu_srt+96


==================== Asm code ====================
2018-03-16 16:04:15.303308939 UTC

.section .text
.align 8
_c96eA:
_c96eA:
	movq 16(%rbp),%rax
	subq $8,%rsp
	movq 7(%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call malloc
	addq $8,%rsp
	testq %rax,%rax
	je _c96f8
_c96f2:
	movq $block_c96eQ_info,(%rbp)
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c96eQ
_c96eR:
	movq (%rbx),%rax
	jmp *(%rax)
_c96f8:
	movl $Foreign.Marshal.Alloc.malloc1_closure,%ebx
	addq $32,%rbp
	jmp stg_raiseIO#
	.size _c96eA, .-_c96eA


==================== Asm code ====================
2018-03-16 16:04:15.303988714 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96eA_info:
	.quad	_c96eA
	.quad	3
	.quad	4294967326
	.quad	S95uu_srt+96


==================== Asm code ====================
2018-03-16 16:04:15.305294923 UTC

.section .text
.align 8
_c96eQ:
_c96eQ:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c96f5
_c96f4:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq $GHC.Ptr.Ptr_con_info,-32(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rbx
	movq 24(%rbp),%rdx
	leaq -14(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR
	addq $8,%rsp
	movq $block_c96f0_info,16(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq $stg_ap_ppv_info,-8(%rbp)
	movq %rax,(%rbp)
	movq 64(%rsp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	jmp Foreign.Storable.poke_entry
_c96f5:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c96eQ, .-_c96eQ


==================== Asm code ====================
2018-03-16 16:04:15.306107876 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96eQ_info:
	.quad	_c96eQ
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.306727981 UTC

.section .text
.align 8
_c96f0:
_c96f0:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c96f0, .-_c96f0


==================== Asm code ====================
2018-03-16 16:04:15.307322283 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96f0_info:
	.quad	_c96f0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.309515695 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNew_closure
.type Foreign.Marshal.Pool.pooledNew_closure, @object
Foreign.Marshal.Pool.pooledNew_closure:
	.quad	Foreign.Marshal.Pool.pooledNew_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:15.310133227 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledNew_entry
.type Foreign.Marshal.Pool.pooledNew_entry, @object
Foreign.Marshal.Pool.pooledNew_entry:
_c96fx:
	jmp Foreign.Marshal.Pool.pooledNew1_entry
	.size Foreign.Marshal.Pool.pooledNew_entry, .-Foreign.Marshal.Pool.pooledNew_entry


==================== Asm code ====================
2018-03-16 16:04:15.310699966 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNew_info
.type Foreign.Marshal.Pool.pooledNew_info, @object
Foreign.Marshal.Pool.pooledNew_info:
	.quad	Foreign.Marshal.Pool.pooledNew_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	S95uu_srt+192


==================== Asm code ====================
2018-03-16 16:04:15.314709446 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.freePool2_closure
.type Foreign.Marshal.Pool.freePool2_closure, @object
Foreign.Marshal.Pool.freePool2_closure:
	.quad	Foreign.Marshal.Pool.freePool2_info


==================== Asm code ====================
2018-03-16 16:04:15.315438029 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.freePool2_entry
.type Foreign.Marshal.Pool.freePool2_entry, @object
Foreign.Marshal.Pool.freePool2_entry:
_c96fP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96fQ
_u96g6:
	movq %r14,-8(%rbp)
	addq $-8,%rbp
	jmp _c96fF
_c96fQ:
	movl $Foreign.Marshal.Pool.freePool2_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.freePool2_entry, .-Foreign.Marshal.Pool.freePool2_entry


==================== Asm code ====================
2018-03-16 16:04:15.316101864 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.freePool2_info
.type Foreign.Marshal.Pool.freePool2_info, @object
Foreign.Marshal.Pool.freePool2_info:
	.quad	Foreign.Marshal.Pool.freePool2_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:15.316804606 UTC

.section .text
.align 8
_c96fF:
_c96fF:
	movq (%rbp),%rax
	movq $block_c96fI_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c96fI
_c96fJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c96fF, .-_c96fF


==================== Asm code ====================
2018-03-16 16:04:15.31765216 UTC

.section .text
.align 8
_c96fI:
_c96fI:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c96fM
_c96fN:
	movq $block_c96fX_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c96fX
_c96fZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c96fM:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c96fI, .-_c96fI


==================== Asm code ====================
2018-03-16 16:04:15.318296506 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96fI_info:
	.quad	_c96fI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.318965282 UTC

.section .text
.align 8
_c96fX:
_c96fX:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movq 7(%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call free
	addq $8,%rsp
	movq %rbx,8(%rbp)
	addq $8,%rbp
	jmp _c96fF
	.size _c96fX, .-_c96fX


==================== Asm code ====================
2018-03-16 16:04:15.319567587 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96fX_info:
	.quad	_c96fX
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.322663755 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.freePool1_closure
.type Foreign.Marshal.Pool.freePool1_closure, @object
Foreign.Marshal.Pool.freePool1_closure:
	.quad	Foreign.Marshal.Pool.freePool1_info


==================== Asm code ====================
2018-03-16 16:04:15.323417097 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.freePool1_entry
.type Foreign.Marshal.Pool.freePool1_entry, @object
Foreign.Marshal.Pool.freePool1_entry:
_c96gB:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c96gC
_c96gD:
	movq $block_c96gy_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c96gy
_c96gz:
	movq (%rbx),%rax
	jmp *(%rax)
_c96gC:
	movl $Foreign.Marshal.Pool.freePool1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.freePool1_entry, .-Foreign.Marshal.Pool.freePool1_entry


==================== Asm code ====================
2018-03-16 16:04:15.324123351 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.freePool1_info
.type Foreign.Marshal.Pool.freePool1_info, @object
Foreign.Marshal.Pool.freePool1_info:
	.quad	Foreign.Marshal.Pool.freePool1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:15.324779193 UTC

.section .text
.align 8
_c96gy:
_c96gy:
	movq 7(%rbx),%rax
	movq 8(%rax),%r14
	addq $8,%rbp
	jmp Foreign.Marshal.Pool.freePool2_entry
	.size _c96gy, .-_c96gy


==================== Asm code ====================
2018-03-16 16:04:15.325598577 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96gy_info:
	.quad	_c96gy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.327584828 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.freePool_closure
.type Foreign.Marshal.Pool.freePool_closure, @object
Foreign.Marshal.Pool.freePool_closure:
	.quad	Foreign.Marshal.Pool.freePool_info


==================== Asm code ====================
2018-03-16 16:04:15.328194698 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.freePool_entry
.type Foreign.Marshal.Pool.freePool_entry, @object
Foreign.Marshal.Pool.freePool_entry:
_c96gW:
	jmp Foreign.Marshal.Pool.freePool1_entry
	.size Foreign.Marshal.Pool.freePool_entry, .-Foreign.Marshal.Pool.freePool_entry


==================== Asm code ====================
2018-03-16 16:04:15.328758191 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.freePool_info
.type Foreign.Marshal.Pool.freePool_info, @object
Foreign.Marshal.Pool.freePool_info:
	.quad	Foreign.Marshal.Pool.freePool_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:15.33157272 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.newPool1_closure
.type Foreign.Marshal.Pool.newPool1_closure, @object
Foreign.Marshal.Pool.newPool1_closure:
	.quad	Foreign.Marshal.Pool.newPool1_info


==================== Asm code ====================
2018-03-16 16:04:15.332282613 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.newPool1_entry
.type Foreign.Marshal.Pool.newPool1_entry, @object
Foreign.Marshal.Pool.newPool1_entry:
_c96ha:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c96hb
_c96hc:
	movq $block_c96h7_info,-8(%rbp)
	movl $GHC.Types.[]_closure+1,%ebx
	addq $-8,%rbp
	jmp stg_newMutVar#
_c96hb:
	movl $Foreign.Marshal.Pool.newPool1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.newPool1_entry, .-Foreign.Marshal.Pool.newPool1_entry


==================== Asm code ====================
2018-03-16 16:04:15.332957455 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.newPool1_info
.type Foreign.Marshal.Pool.newPool1_info, @object
Foreign.Marshal.Pool.newPool1_info:
	.quad	Foreign.Marshal.Pool.newPool1_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:04:15.333708518 UTC

.section .text
.align 8
_c96h7:
_c96h7:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c96hf
_c96he:
	movq $GHC.STRef.STRef_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c96hf:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c96h7, .-_c96h7


==================== Asm code ====================
2018-03-16 16:04:15.334346228 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96h7_info:
	.quad	_c96h7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.336663743 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.newPool_closure
.type Foreign.Marshal.Pool.newPool_closure, @object
Foreign.Marshal.Pool.newPool_closure:
	.quad	Foreign.Marshal.Pool.newPool_info


==================== Asm code ====================
2018-03-16 16:04:15.337675135 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.newPool_entry
.type Foreign.Marshal.Pool.newPool_entry, @object
Foreign.Marshal.Pool.newPool_entry:
_c96ht:
	jmp Foreign.Marshal.Pool.newPool1_entry
	.size Foreign.Marshal.Pool.newPool_entry, .-Foreign.Marshal.Pool.newPool_entry


==================== Asm code ====================
2018-03-16 16:04:15.33827936 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.newPool_info
.type Foreign.Marshal.Pool.newPool_info, @object
Foreign.Marshal.Pool.newPool_info:
	.quad	Foreign.Marshal.Pool.newPool_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:04:15.353274116 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.withPool1_closure
.type Foreign.Marshal.Pool.withPool1_closure, @object
Foreign.Marshal.Pool.withPool1_closure:
	.quad	Foreign.Marshal.Pool.withPool1_info


==================== Asm code ====================
2018-03-16 16:04:15.354164013 UTC

.section .text
.align 8
sat_s95sf_entry:
_c96hS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96hT
_c96hU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c96hW
_c96hV:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $GHC.STRef.STRef_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp stg_ap_p_fast
_c96hW:
	movq $16,904(%r13)
_c96hT:
	jmp *-16(%r13)
	.size sat_s95sf_entry, .-sat_s95sf_entry


==================== Asm code ====================
2018-03-16 16:04:15.354840524 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s95sf_info:
	.quad	sat_s95sf_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:04:15.355548895 UTC

.section .text
.align 8
sat_s95st_entry:
_c96ig:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c96ih
_c96ii:
	movq 7(%rbx),%rax
	movq 8(%rax),%rax
	movq $block_c96ie_info,-24(%rbp)
	movq %rax,%r14
	movq 15(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 23(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp Foreign.Marshal.Pool.freePool2_entry
_c96ih:
	jmp *-8(%r13)
	.size sat_s95st_entry, .-sat_s95st_entry


==================== Asm code ====================
2018-03-16 16:04:15.356192685 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s95st_info:
	.quad	sat_s95st_entry
	.quad	3
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:04:15.356830536 UTC

.section .text
.align 8
_c96ie:
_c96ie:
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Exception.throw_entry
	.size _c96ie, .-_c96ie


==================== Asm code ====================
2018-03-16 16:04:15.357419652 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96ie_info:
	.quad	_c96ie
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.35817172 UTC

.section .text
.align 8
sat_s95su_entry:
_c96ik:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96il
_c96im:
	movq $block_c96i4_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c96i4
_c96i5:
	movq (%rbx),%rax
	jmp *(%rax)
_c96il:
	jmp *-8(%r13)
	.size sat_s95su_entry, .-sat_s95su_entry


==================== Asm code ====================
2018-03-16 16:04:15.35885742 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s95su_info:
	.quad	sat_s95su_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:15.35955957 UTC

.section .text
.align 8
_c96i4:
_c96i4:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c96ip
_c96io:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s95st_info,-24(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -23(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c96ip:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c96i4, .-_c96i4


==================== Asm code ====================
2018-03-16 16:04:15.360218105 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96i4_info:
	.quad	_c96i4
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.360883112 UTC

.section .text
.align 8
sat_s95sF_entry:
_c96iy:
	movq %r14,%rbx
	jmp stg_maskAsyncExceptions#
	.size sat_s95sF_entry, .-sat_s95sF_entry


==================== Asm code ====================
2018-03-16 16:04:15.361568705 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s95sF_info:
	.quad	sat_s95sF_entry
	.quad	4294967296
	.quad	10
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:15.362350442 UTC

.section .text
.align 8
sat_s95sZ_entry:
_c96j0:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c96j1
_c96j2:
	movq 7(%rbx),%rax
	movq 8(%rax),%rax
	movq $block_c96iY_info,-24(%rbp)
	movq %rax,%r14
	movq 15(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 23(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp Foreign.Marshal.Pool.freePool2_entry
_c96j1:
	jmp *-8(%r13)
	.size sat_s95sZ_entry, .-sat_s95sZ_entry


==================== Asm code ====================
2018-03-16 16:04:15.363022982 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s95sZ_info:
	.quad	sat_s95sZ_entry
	.quad	3
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:04:15.363685312 UTC

.section .text
.align 8
_c96iY:
_c96iY:
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Exception.throw_entry
	.size _c96iY, .-_c96iY


==================== Asm code ====================
2018-03-16 16:04:15.364254871 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96iY_info:
	.quad	_c96iY
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.365045642 UTC

.section .text
.align 8
sat_s95t0_entry:
_c96j4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96j5
_c96j6:
	movq $block_c96iO_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c96iO
_c96iP:
	movq (%rbx),%rax
	jmp *(%rax)
_c96j5:
	jmp *-8(%r13)
	.size sat_s95t0_entry, .-sat_s95t0_entry


==================== Asm code ====================
2018-03-16 16:04:15.36574062 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s95t0_info:
	.quad	sat_s95t0_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:15.366448941 UTC

.section .text
.align 8
_c96iO:
_c96iO:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c96j9
_c96j8:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s95sZ_info,-24(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -23(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c96j9:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c96iO, .-_c96iO


==================== Asm code ====================
2018-03-16 16:04:15.367626954 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96iO_info:
	.quad	_c96iO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.368410913 UTC

.section .text
.align 8
sat_s95sL_entry:
_c96jg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96jh
_c96ji:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c96jk
_c96jj:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $GHC.STRef.STRef_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp stg_ap_p_fast
_c96jk:
	movq $16,904(%r13)
_c96jh:
	jmp *-16(%r13)
	.size sat_s95sL_entry, .-sat_s95sL_entry


==================== Asm code ====================
2018-03-16 16:04:15.369106575 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s95sL_info:
	.quad	sat_s95sL_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:04:15.369781049 UTC

.section .text
.align 8
sat_s95sM_entry:
_c96jq:
	movq 7(%rbx),%rbx
	jmp stg_unmaskAsyncExceptions#
	.size sat_s95sM_entry, .-sat_s95sM_entry


==================== Asm code ====================
2018-03-16 16:04:15.370396397 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s95sM_info:
	.quad	sat_s95sM_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:04:15.371098049 UTC

.section .text
.align 8
sat_s95ta_entry:
_c96jx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96jy
_c96jz:
	movq $block_c96iH_info,-16(%rbp)
	movq 7(%rbx),%rax
	movl $GHC.Types.[]_closure+1,%ebx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_newMutVar#
_c96jy:
	jmp *-8(%r13)
	.size sat_s95ta_entry, .-sat_s95ta_entry


==================== Asm code ====================
2018-03-16 16:04:15.371749042 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s95ta_info:
	.quad	sat_s95ta_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:04:15.372509067 UTC

.section .text
.align 8
_c96iH:
_c96iH:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c96jC
_c96jB:
	movq $sat_s95t0_info,-56(%r12)
	movq %rbx,-48(%r12)
	movq $sat_s95sL_info,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq $sat_s95sM_info,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	movq $block_c96jt_info,(%rbp)
	leaq -55(%r12),%r14
	movq %rbx,%rax
	leaq -7(%r12),%rbx
	movq %rax,8(%rbp)
	jmp stg_catch#
_c96jC:
	movq $64,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c96iH, .-_c96iH


==================== Asm code ====================
2018-03-16 16:04:15.37347905 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96iH_info:
	.quad	_c96iH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.374138693 UTC

.section .text
.align 8
_c96jt:
_c96jt:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_c96jv_info,(%rbp)
	movq %rax,%r14
	movq %rbx,8(%rbp)
	jmp Foreign.Marshal.Pool.freePool2_entry
	.size _c96jt, .-_c96jt


==================== Asm code ====================
2018-03-16 16:04:15.374745225 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96jt_info:
	.quad	_c96jt
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.37531969 UTC

.section .text
.align 8
_c96jv:
_c96jv:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c96jv, .-_c96jv


==================== Asm code ====================
2018-03-16 16:04:15.37588189 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96jv_info:
	.quad	_c96jv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.376491062 UTC

.section .text
.align 8
sat_s95tb_entry:
_c96jL:
	movq %r14,%rbx
	jmp stg_maskUninterruptible#
	.size sat_s95tb_entry, .-sat_s95tb_entry


==================== Asm code ====================
2018-03-16 16:04:15.377032329 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s95tb_info:
	.quad	sat_s95tb_entry
	.quad	4294967296
	.quad	10
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:15.377797438 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.withPool1_entry
.type Foreign.Marshal.Pool.withPool1_entry, @object
Foreign.Marshal.Pool.withPool1_entry:
_c96jS:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c96jT
_c96jU:
	movq $block_c96hE_info,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
_c96jT:
	movl $Foreign.Marshal.Pool.withPool1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.withPool1_entry, .-Foreign.Marshal.Pool.withPool1_entry


==================== Asm code ====================
2018-03-16 16:04:15.378521201 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.withPool1_info
.type Foreign.Marshal.Pool.withPool1_info, @object
Foreign.Marshal.Pool.withPool1_info:
	.quad	Foreign.Marshal.Pool.withPool1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:15.379391641 UTC

.section .text
.align 8
_c96hE:
_c96hE:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c96jX
_c96jW:
	testq %rbx,%rbx
	je _c96jQ
_u96kb:
	cmpq $1,%rbx
	je _c96jR
_c96jP:
	movq $sat_s95sF_info,-8(%r12)
	leaq -6(%r12),%rax
_s95s8:
	movq $block_c96hL_info,-8(%rbp)
	movl $GHC.Types.[]_closure+1,%ebx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_newMutVar#
_c96jR:
	movq $sat_s95tb_info,-8(%r12)
	leaq -6(%r12),%rax
	jmp _s95s8
_c96jX:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
_c96jQ:
	movq $sat_s95ta_info,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	jmp stg_maskAsyncExceptions#
	.size _c96hE, .-_c96hE


==================== Asm code ====================
2018-03-16 16:04:15.380129272 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96hE_info:
	.quad	_c96hE
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.380890855 UTC

.section .text
.align 8
_c96hL:
_c96hL:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c96k4
_c96k3:
	movq $sat_s95sf_info,-24(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rax
	movq $block_c96hX_info,8(%rbp)
	leaq -24(%r12),%r14
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	jmp stg_ap_p_fast
_c96k4:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c96hL, .-_c96hL


==================== Asm code ====================
2018-03-16 16:04:15.381600969 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96hL_info:
	.quad	_c96hL
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.382725936 UTC

.section .text
.align 8
_c96hX:
_c96hX:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c96k7
_c96k6:
	movq $sat_s95su_info,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c96jY_info,(%rbp)
	leaq -7(%r12),%r14
	jmp stg_catch#
_c96k7:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c96hX, .-_c96hX


==================== Asm code ====================
2018-03-16 16:04:15.383356873 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96hX_info:
	.quad	_c96hX
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.384000523 UTC

.section .text
.align 8
_c96jY:
_c96jY:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	movq $block_c96k0_info,(%rbp)
	movq %rax,%r14
	movq %rbx,8(%rbp)
	jmp Foreign.Marshal.Pool.freePool2_entry
	.size _c96jY, .-_c96jY


==================== Asm code ====================
2018-03-16 16:04:15.384566631 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96jY_info:
	.quad	_c96jY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.385159133 UTC

.section .text
.align 8
_c96k0:
_c96k0:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c96k0, .-_c96k0


==================== Asm code ====================
2018-03-16 16:04:15.385769731 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96k0_info:
	.quad	_c96k0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:15.388031497 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.withPool_closure
.type Foreign.Marshal.Pool.withPool_closure, @object
Foreign.Marshal.Pool.withPool_closure:
	.quad	Foreign.Marshal.Pool.withPool_info


==================== Asm code ====================
2018-03-16 16:04:15.388665372 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.withPool_entry
.type Foreign.Marshal.Pool.withPool_entry, @object
Foreign.Marshal.Pool.withPool_entry:
_c96lR:
	jmp Foreign.Marshal.Pool.withPool1_entry
	.size Foreign.Marshal.Pool.withPool_entry, .-Foreign.Marshal.Pool.withPool_entry


==================== Asm code ====================
2018-03-16 16:04:15.389255464 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.withPool_info
.type Foreign.Marshal.Pool.withPool_info, @object
Foreign.Marshal.Pool.withPool_info:
	.quad	Foreign.Marshal.Pool.withPool_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:15.391360938 UTC

.section .data.rel.ro
.align 8
.align 1
S95uu_srt:
	.quad	Foreign.Marshal.Error.throwIf2_closure
	.quad	Foreign.Marshal.Alloc.realloc2_closure
	.quad	Foreign.Marshal.Pool.$wpooledReallocBytes_closure
	.quad	Foreign.Marshal.Pool.pooledRealloc1_closure
	.quad	GHC.Err.undefined_closure
	.quad	lvl11_r95nf_closure
	.quad	Foreign.Marshal.Pool.pooledReallocArray1_closure
	.quad	Foreign.Marshal.Pool.pooledReallocArray_closure
	.quad	Foreign.Marshal.Pool.pooledReallocArray2_closure
	.quad	lvl16_r95nk_closure
	.quad	Foreign.Marshal.Pool.pooledRealloc3_closure
	.quad	Foreign.Marshal.Pool.pooledRealloc_closure
	.quad	Foreign.Marshal.Alloc.malloc1_closure
	.quad	Foreign.Marshal.Pool.pooledMallocBytes1_closure
	.quad	lvl21_r95np_closure
	.quad	Foreign.Marshal.Pool.pooledMallocArray1_closure
	.quad	Foreign.Marshal.Pool.pooledMallocArray_closure
	.quad	Foreign.Marshal.Pool.$wpooledMallocArray0_closure
	.quad	Foreign.Marshal.Pool.pooledMallocArray2_closure
	.quad	lvl26_r95nu_closure
	.quad	Foreign.Marshal.Pool.pooledMalloc1_closure
	.quad	Foreign.Marshal.Pool.pooledMalloc_closure
	.quad	Foreign.Marshal.Pool.pooledNewArray2_closure
	.quad	Foreign.Marshal.Pool.pooledNewArray1_closure
	.quad	Foreign.Marshal.Pool.pooledNew1_closure


==================== Asm code ====================
2018-03-16 16:04:16.75174102 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.Marshal.Pool.$trModule4_bytes
.type Foreign.Marshal.Pool.$trModule4_bytes, @object
Foreign.Marshal.Pool.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:04:16.753582169 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.$trModule3_closure
.type Foreign.Marshal.Pool.$trModule3_closure, @object
Foreign.Marshal.Pool.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Foreign.Marshal.Pool.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:04:16.755851703 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.Marshal.Pool.$trModule2_bytes
.type Foreign.Marshal.Pool.$trModule2_bytes, @object
Foreign.Marshal.Pool.$trModule2_bytes:
	.asciz "Foreign.Marshal.Pool"


==================== Asm code ====================
2018-03-16 16:04:16.757605092 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.$trModule1_closure
.type Foreign.Marshal.Pool.$trModule1_closure, @object
Foreign.Marshal.Pool.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Foreign.Marshal.Pool.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:04:16.759416616 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.$trModule_closure
.type Foreign.Marshal.Pool.$trModule_closure, @object
Foreign.Marshal.Pool.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	Foreign.Marshal.Pool.$trModule3_closure+1
	.quad	Foreign.Marshal.Pool.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:16.761285136 UTC

.section .data
.align 8
.align 1
$krep_r95mW_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Tuple.$tc()_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:16.763103072 UTC

.section .data
.align 8
.align 1
$krep1_r95mX_closure:
	.quad	:_con_info
	.quad	$krep_r95mW_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:16.764909738 UTC

.section .data
.align 8
.align 1
$krep2_r95mY_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Ptr.$tcPtr_closure
	.quad	$krep1_r95mX_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:16.767238593 UTC

.section .data
.align 8
.align 1
$krep3_r95mZ_closure:
	.quad	:_con_info
	.quad	$krep2_r95mY_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:16.769057422 UTC

.section .data
.align 8
.align 1
$krep4_r95n0_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tc[]_closure
	.quad	$krep3_r95mZ_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:16.770907097 UTC

.section .data
.align 8
.align 1
$krep5_r95n1_closure:
	.quad	:_con_info
	.quad	$krep4_r95n0_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:16.772768479 UTC

.section .data
.align 8
.align 1
$krep6_r95n2_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.IORef.$tcIORef_closure
	.quad	$krep5_r95n1_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:16.774509463 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.Marshal.Pool.$tcPool2_bytes
.type Foreign.Marshal.Pool.$tcPool2_bytes, @object
Foreign.Marshal.Pool.$tcPool2_bytes:
	.asciz "Pool"


==================== Asm code ====================
2018-03-16 16:04:16.776226375 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.$tcPool1_closure
.type Foreign.Marshal.Pool.$tcPool1_closure, @object
Foreign.Marshal.Pool.$tcPool1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Foreign.Marshal.Pool.$tcPool2_bytes


==================== Asm code ====================
2018-03-16 16:04:16.778118668 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.$tcPool_closure
.type Foreign.Marshal.Pool.$tcPool_closure, @object
Foreign.Marshal.Pool.$tcPool_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Foreign.Marshal.Pool.$trModule_closure+1
	.quad	Foreign.Marshal.Pool.$tcPool1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	6812857741828992361
	.quad	-6319081516180320097
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:16.78021663 UTC

.section .data
.align 8
.align 1
$krep7_r95n3_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	Foreign.Marshal.Pool.$tcPool_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:16.782618533 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.$tc'Pool1_closure
.type Foreign.Marshal.Pool.$tc'Pool1_closure, @object
Foreign.Marshal.Pool.$tc'Pool1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep6_r95n2_closure+1
	.quad	$krep7_r95n3_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:16.784371668 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.Marshal.Pool.$tc'Pool3_bytes
.type Foreign.Marshal.Pool.$tc'Pool3_bytes, @object
Foreign.Marshal.Pool.$tc'Pool3_bytes:
	.asciz "'Pool"


==================== Asm code ====================
2018-03-16 16:04:16.786139456 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.$tc'Pool2_closure
.type Foreign.Marshal.Pool.$tc'Pool2_closure, @object
Foreign.Marshal.Pool.$tc'Pool2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Foreign.Marshal.Pool.$tc'Pool3_bytes


==================== Asm code ====================
2018-03-16 16:04:16.788036224 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.$tc'Pool_closure
.type Foreign.Marshal.Pool.$tc'Pool_closure, @object
Foreign.Marshal.Pool.$tc'Pool_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Foreign.Marshal.Pool.$trModule_closure+1
	.quad	Foreign.Marshal.Pool.$tc'Pool2_closure+1
	.quad	Foreign.Marshal.Pool.$tc'Pool1_closure+4
	.quad	-6857927076082914255
	.quad	-3041657962501006422
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:16.790460907 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_r95n4_bytes:
	.asciz "pointer not in pool"


==================== Asm code ====================
2018-03-16 16:04:16.793084028 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledRealloc2_closure
.type Foreign.Marshal.Pool.pooledRealloc2_closure, @object
Foreign.Marshal.Pool.pooledRealloc2_closure:
	.quad	Foreign.Marshal.Pool.pooledRealloc2_info


==================== Asm code ====================
2018-03-16 16:04:16.794028558 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledRealloc2_entry
.type Foreign.Marshal.Pool.pooledRealloc2_entry, @object
Foreign.Marshal.Pool.pooledRealloc2_entry:
_c96s4:
	leaq lvl_r95n4_bytes(%rip),%r14
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
	.size Foreign.Marshal.Pool.pooledRealloc2_entry, .-Foreign.Marshal.Pool.pooledRealloc2_entry


==================== Asm code ====================
2018-03-16 16:04:16.794606239 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledRealloc2_info
.type Foreign.Marshal.Pool.pooledRealloc2_info, @object
Foreign.Marshal.Pool.pooledRealloc2_info:
	.quad	Foreign.Marshal.Pool.pooledRealloc2_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:16.801344309 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.$wpooledReallocBytes_closure
.type Foreign.Marshal.Pool.$wpooledReallocBytes_closure, @object
Foreign.Marshal.Pool.$wpooledReallocBytes_closure:
	.quad	Foreign.Marshal.Pool.$wpooledReallocBytes_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.802222449 UTC

.section .text
.align 8
sat_s96mm_entry:
_c96sC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96sD
_c96sE:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c96sG
_c96sF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%rdi
	leaq -7(%r12),%rsi
	movq GHC.Ptr.$fEqPtr_$c==_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *Data.OldList.deleteBy_entry@gotpcrel(%rip)
_c96sG:
	movq $16,904(%r13)
_c96sD:
	jmp *-16(%r13)
	.size sat_s96mm_entry, .-sat_s96mm_entry


==================== Asm code ====================
2018-03-16 16:04:16.802985569 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s96mm_info:
	.quad	sat_s96mm_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:04:16.803813602 UTC

.section .text
.align 8
sat_s96mx_entry:
_c96sP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96sQ
_c96sR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c96sT
_c96sS:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%rdi
	leaq -7(%r12),%rsi
	movq GHC.Ptr.$fEqPtr_$c==_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *Data.OldList.deleteBy_entry@gotpcrel(%rip)
_c96sT:
	movq $16,904(%r13)
_c96sQ:
	jmp *-16(%r13)
	.size sat_s96mx_entry, .-sat_s96mx_entry


==================== Asm code ====================
2018-03-16 16:04:16.804577817 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s96mx_info:
	.quad	sat_s96mx_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 16:04:16.805845679 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.$wpooledReallocBytes_entry
.type Foreign.Marshal.Pool.$wpooledReallocBytes_entry, @object
Foreign.Marshal.Pool.$wpooledReallocBytes_entry:
_c96sY:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c96sZ
_c96t0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c96t2
_c96t1:
	movq 8(%r14),%rax
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rsi,(%r12)
	leaq block_c96sg_info(%rip),%rbx
	movq %rbx,-40(%rbp)
	movq %rdi,%rbx
	movq %rax,%rdi
	movq %rsi,%rcx
	leaq -7(%r12),%rsi
	movq %r14,%rdx
	movq GHC.Ptr.$fEqPtr_closure@gotpcrel(%rip),%r14
	movq %rdx,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-40,%rbp
	jmp *GHC.List.elem_entry@gotpcrel(%rip)
_c96t2:
	movq $16,904(%r13)
_c96sZ:
	leaq Foreign.Marshal.Pool.$wpooledReallocBytes_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.$wpooledReallocBytes_entry, .-Foreign.Marshal.Pool.$wpooledReallocBytes_entry


==================== Asm code ====================
2018-03-16 16:04:16.806626272 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.$wpooledReallocBytes_info
.type Foreign.Marshal.Pool.$wpooledReallocBytes_info, @object
Foreign.Marshal.Pool.$wpooledReallocBytes_info:
	.quad	Foreign.Marshal.Pool.$wpooledReallocBytes_entry
	.quad	0
	.quad	30064771086
	.quad	17179869204
	.quad	S96tm_srt


==================== Asm code ====================
2018-03-16 16:04:16.807850269 UTC

.section .text
.align 8
_c96sg:
_c96sg:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c96sV
_c96sW:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c96t7
_c96t6:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq 24(%rbp),%rcx
	testq %rcx,%rcx
	jne _c96tc
_c96td:
	subq $8,%rsp
	movq %rbx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call free@plt
	addq $8,%rsp
	movq 8(%r14),%rax
	leaq sat_s96mx_info(%rip),%rcx
	movq %rcx,-64(%r12)
	movq %rax,-48(%r12)
	movq %rbx,-40(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq GHC.Ptr.nullPtr_closure@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq -64(%r12),%rax
	movq %rax,-16(%r12)
	leaq -30(%r12),%rax
	movq %rax,8(%r14)
	subq $8,%rsp
	movq %r13,%rax
	movq %r14,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $-16,%r12
	movq GHC.Ptr.nullPtr_closure@gotpcrel(%rip),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c96ta:
	addq $-72,%r12
	movq Foreign.Marshal.Alloc.realloc2_closure@gotpcrel(%rip),%rbx
	addq $40,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_c96tc:
	subq $8,%rsp
	movq %rbx,%rdx
	movq %rcx,%rsi
	movq %rdx,%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call realloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c96ta
_c96t9:
	movq 8(%r14),%rcx
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-64(%r12)
	movq %rax,-56(%r12)
	leaq sat_s96mm_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -63(%r12),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	movq %rbx,8(%r14)
	subq $8,%rsp
	movq %r13,%rbx
	movq %r14,%rsi
	movq %rbx,%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c96t7:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c96sV:
	leaq Foreign.Marshal.Pool.pooledRealloc2_closure+1(%rip),%rsi
	movq 32(%rbp),%r14
	addq $40,%rbp
	jmp *Foreign.Marshal.Error.throwIf2_entry@gotpcrel(%rip)
	.size _c96sg, .-_c96sg


==================== Asm code ====================
2018-03-16 16:04:16.808952231 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96sg_info:
	.quad	_c96sg
	.quad	388
	.quad	12884901918
	.quad	S96tm_srt


==================== Asm code ====================
2018-03-16 16:04:16.812890821 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledRealloc1_closure
.type Foreign.Marshal.Pool.pooledRealloc1_closure, @object
Foreign.Marshal.Pool.pooledRealloc1_closure:
	.quad	Foreign.Marshal.Pool.pooledRealloc1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.813703042 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledRealloc1_entry
.type Foreign.Marshal.Pool.pooledRealloc1_entry, @object
Foreign.Marshal.Pool.pooledRealloc1_entry:
_c96u9:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c96ui
_c96uj:
	leaq block_c96u6_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c96u6
_c96u7:
	movq (%rbx),%rax
	jmp *(%rax)
_c96ui:
	leaq Foreign.Marshal.Pool.pooledRealloc1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledRealloc1_entry, .-Foreign.Marshal.Pool.pooledRealloc1_entry


==================== Asm code ====================
2018-03-16 16:04:16.814464797 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledRealloc1_info
.type Foreign.Marshal.Pool.pooledRealloc1_info, @object
Foreign.Marshal.Pool.pooledRealloc1_info:
	.quad	Foreign.Marshal.Pool.pooledRealloc1_entry
	.quad	0
	.quad	12884901902
	.quad	17179869207
	.quad	S96tm_srt+16


==================== Asm code ====================
2018-03-16 16:04:16.815201632 UTC

.section .text
.align 8
_c96u6:
_c96u6:
	leaq block_c96uc_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c96uc
_c96ud:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c96u6, .-_c96u6


==================== Asm code ====================
2018-03-16 16:04:16.815788647 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96u6_info:
	.quad	_c96u6
	.quad	2
	.quad	4294967326
	.quad	S96tm_srt+16


==================== Asm code ====================
2018-03-16 16:04:16.81645882 UTC

.section .text
.align 8
_c96uc:
_c96uc:
	leaq block_c96uh_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c96uh
_c96um:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c96uc, .-_c96uc


==================== Asm code ====================
2018-03-16 16:04:16.817075945 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96uc_info:
	.quad	_c96uc
	.quad	2
	.quad	4294967326
	.quad	S96tm_srt+16


==================== Asm code ====================
2018-03-16 16:04:16.818037223 UTC

.section .text
.align 8
_c96uh:
_c96uh:
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp Foreign.Marshal.Pool.$wpooledReallocBytes_entry
	.size _c96uh, .-_c96uh


==================== Asm code ====================
2018-03-16 16:04:16.818621264 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96uh_info:
	.quad	_c96uh
	.quad	130
	.quad	4294967326
	.quad	S96tm_srt+16


==================== Asm code ====================
2018-03-16 16:04:16.821203256 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledReallocBytes_closure
.type Foreign.Marshal.Pool.pooledReallocBytes_closure, @object
Foreign.Marshal.Pool.pooledReallocBytes_closure:
	.quad	Foreign.Marshal.Pool.pooledReallocBytes_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.821864223 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledReallocBytes_entry
.type Foreign.Marshal.Pool.pooledReallocBytes_entry, @object
Foreign.Marshal.Pool.pooledReallocBytes_entry:
_c96uS:
	jmp Foreign.Marshal.Pool.pooledRealloc1_entry
	.size Foreign.Marshal.Pool.pooledReallocBytes_entry, .-Foreign.Marshal.Pool.pooledReallocBytes_entry


==================== Asm code ====================
2018-03-16 16:04:16.82245641 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledReallocBytes_info
.type Foreign.Marshal.Pool.pooledReallocBytes_info, @object
Foreign.Marshal.Pool.pooledReallocBytes_info:
	.quad	Foreign.Marshal.Pool.pooledReallocBytes_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	S96tm_srt+24


==================== Asm code ====================
2018-03-16 16:04:16.824159189 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl1_r95n5_bytes:
	.asciz "undefined"


==================== Asm code ====================
2018-03-16 16:04:16.827010031 UTC

.section .data
.align 8
.align 1
lvl2_r95n6_closure:
	.quad	lvl2_r95n6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.827914271 UTC

.section .text
.align 8
lvl2_r95n6_entry:
_c96v6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96v7
_c96v8:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c96v5
_c96v4:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl1_r95n5_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c96v7:
	jmp *-16(%r13)
_c96v5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl2_r95n6_entry, .-lvl2_r95n6_entry


==================== Asm code ====================
2018-03-16 16:04:16.828646246 UTC

.section .data.rel.ro
.align 8
.align 1
lvl2_r95n6_info:
	.quad	lvl2_r95n6_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:04:16.831251601 UTC

.section .data
.align 8
.align 1
lvl3_r95n7_closure:
	.quad	lvl3_r95n7_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.832484682 UTC

.section .text
.align 8
lvl3_r95n7_entry:
_c96vn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96vo
_c96vp:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c96vm
_c96vl:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Foreign.Marshal.Pool.$trModule4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c96vo:
	jmp *-16(%r13)
_c96vm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl3_r95n7_entry, .-lvl3_r95n7_entry


==================== Asm code ====================
2018-03-16 16:04:16.833204111 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_r95n7_info:
	.quad	lvl3_r95n7_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:04:16.835712237 UTC

.section .data
.align 8
.align 1
lvl4_r95n8_closure:
	.quad	lvl4_r95n8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.836549404 UTC

.section .text
.align 8
lvl4_r95n8_entry:
_c96vE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96vF
_c96vG:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c96vD
_c96vC:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Foreign.Marshal.Pool.$trModule2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c96vF:
	jmp *-16(%r13)
_c96vD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl4_r95n8_entry, .-lvl4_r95n8_entry


==================== Asm code ====================
2018-03-16 16:04:16.837236922 UTC

.section .data.rel.ro
.align 8
.align 1
lvl4_r95n8_info:
	.quad	lvl4_r95n8_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:04:16.839264264 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl5_r95n9_bytes:
	.asciz "./Foreign/Marshal/Pool.hs"


==================== Asm code ====================
2018-03-16 16:04:16.841773561 UTC

.section .data
.align 8
.align 1
lvl6_r95na_closure:
	.quad	lvl6_r95na_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.842572097 UTC

.section .text
.align 8
lvl6_r95na_entry:
_c96vW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96vX
_c96vY:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c96vV
_c96vU:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl5_r95n9_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c96vX:
	jmp *-16(%r13)
_c96vV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl6_r95na_entry, .-lvl6_r95na_entry


==================== Asm code ====================
2018-03-16 16:04:16.843270753 UTC

.section .data.rel.ro
.align 8
.align 1
lvl6_r95na_info:
	.quad	lvl6_r95na_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:04:16.845063388 UTC

.section .data
.align 8
.align 1
lvl7_r95nb_closure:
	.quad	GHC.Types.I#_con_info
	.quad	159


==================== Asm code ====================
2018-03-16 16:04:16.847137268 UTC

.section .data
.align 8
.align 1
lvl8_r95nc_closure:
	.quad	GHC.Types.I#_con_info
	.quad	26


==================== Asm code ====================
2018-03-16 16:04:16.848820798 UTC

.section .data
.align 8
.align 1
lvl9_r95nd_closure:
	.quad	GHC.Types.I#_con_info
	.quad	35


==================== Asm code ====================
2018-03-16 16:04:16.850681462 UTC

.section .data
.align 8
.align 1
lvl10_r95ne_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl3_r95n7_closure
	.quad	lvl4_r95n8_closure
	.quad	lvl6_r95na_closure
	.quad	lvl7_r95nb_closure+1
	.quad	lvl8_r95nc_closure+1
	.quad	lvl7_r95nb_closure+1
	.quad	lvl9_r95nd_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.852443507 UTC

.section .data
.align 8
.align 1
lvl11_r95nf_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl2_r95n6_closure
	.quad	lvl10_r95ne_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.856926815 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledReallocArray1_closure
.type Foreign.Marshal.Pool.pooledReallocArray1_closure, @object
Foreign.Marshal.Pool.pooledReallocArray1_closure:
	.quad	Foreign.Marshal.Pool.pooledReallocArray1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.858377262 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledReallocArray1_entry
.type Foreign.Marshal.Pool.pooledReallocArray1_entry, @object
Foreign.Marshal.Pool.pooledReallocArray1_entry:
_c96wi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96wj
_c96wk:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c96wh
_c96wg:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl11_r95nf_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Err.undefined_entry@gotpcrel(%rip)
_c96wj:
	jmp *-16(%r13)
_c96wh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Pool.pooledReallocArray1_entry, .-Foreign.Marshal.Pool.pooledReallocArray1_entry


==================== Asm code ====================
2018-03-16 16:04:16.85922549 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledReallocArray1_info
.type Foreign.Marshal.Pool.pooledReallocArray1_info, @object
Foreign.Marshal.Pool.pooledReallocArray1_info:
	.quad	Foreign.Marshal.Pool.pooledReallocArray1_entry
	.quad	0
	.quad	12884901909
	.quad	S96tm_srt+32


==================== Asm code ====================
2018-03-16 16:04:16.866130405 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledReallocArray_closure
.type Foreign.Marshal.Pool.pooledReallocArray_closure, @object
Foreign.Marshal.Pool.pooledReallocArray_closure:
	.quad	Foreign.Marshal.Pool.pooledReallocArray_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.867013854 UTC

.section .text
.align 8
lvl27_s96mL_entry:
_c96wB:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c96wC
_c96wD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq Foreign.Marshal.Pool.pooledReallocArray1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *Foreign.Storable.sizeOf_entry@gotpcrel(%rip)
_c96wC:
	jmp *-16(%r13)
	.size lvl27_s96mL_entry, .-lvl27_s96mL_entry


==================== Asm code ====================
2018-03-16 16:04:16.867814337 UTC

.section .data.rel.ro
.align 8
.align 1
lvl27_s96mL_info:
	.quad	lvl27_s96mL_entry
	.quad	1
	.quad	4294967312
	.quad	S96tm_srt+48


==================== Asm code ====================
2018-03-16 16:04:16.86872493 UTC

.section .text
.align 8
sat_s96mZ_entry:
_c96wM:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c96x0
_c96x1:
	leaq block_c96wJ_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 4(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c96wJ
_c96wK:
	movq (%rbx),%rax
	jmp *(%rax)
_c96x0:
	jmp *-8(%r13)
	.size sat_s96mZ_entry, .-sat_s96mZ_entry


==================== Asm code ====================
2018-03-16 16:04:16.86953653 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s96mZ_info:
	.quad	sat_s96mZ_entry
	.quad	1
	.quad	4294967305
	.quad	17179869207
	.quad	S96tm_srt+16


==================== Asm code ====================
2018-03-16 16:04:16.870303381 UTC

.section .text
.align 8
_c96wJ:
_c96wJ:
	leaq block_c96wP_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c96wP
_c96wQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c96wJ, .-_c96wJ


==================== Asm code ====================
2018-03-16 16:04:16.870984845 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96wJ_info:
	.quad	_c96wJ
	.quad	3
	.quad	4294967326
	.quad	S96tm_srt+16


==================== Asm code ====================
2018-03-16 16:04:16.871703311 UTC

.section .text
.align 8
_c96wP:
_c96wP:
	leaq block_c96wU_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c96wU
_c96wV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c96wP, .-_c96wP


==================== Asm code ====================
2018-03-16 16:04:16.872367697 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96wP_info:
	.quad	_c96wP
	.quad	3
	.quad	4294967326
	.quad	S96tm_srt+16


==================== Asm code ====================
2018-03-16 16:04:16.873056543 UTC

.section .text
.align 8
_c96wU:
_c96wU:
	leaq block_c96wZ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c96wZ
_c96x5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c96wU, .-_c96wU


==================== Asm code ====================
2018-03-16 16:04:16.873721972 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96wU_info:
	.quad	_c96wU
	.quad	259
	.quad	4294967326
	.quad	S96tm_srt+16


==================== Asm code ====================
2018-03-16 16:04:16.874400598 UTC

.section .text
.align 8
_c96wZ:
_c96wZ:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rdi
	imulq (%rax),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp Foreign.Marshal.Pool.$wpooledReallocBytes_entry
	.size _c96wZ, .-_c96wZ


==================== Asm code ====================
2018-03-16 16:04:16.875379244 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96wZ_info:
	.quad	_c96wZ
	.quad	323
	.quad	4294967326
	.quad	S96tm_srt+16


==================== Asm code ====================
2018-03-16 16:04:16.876117236 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledReallocArray_entry
.type Foreign.Marshal.Pool.pooledReallocArray_entry, @object
Foreign.Marshal.Pool.pooledReallocArray_entry:
_c96xf:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c96xj
_c96xi:
	leaq lvl27_s96mL_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	leaq sat_s96mZ_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%r12)
	leaq -4(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c96xj:
	movq $40,904(%r13)
	leaq Foreign.Marshal.Pool.pooledReallocArray_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledReallocArray_entry, .-Foreign.Marshal.Pool.pooledReallocArray_entry


==================== Asm code ====================
2018-03-16 16:04:16.876784469 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledReallocArray_info
.type Foreign.Marshal.Pool.pooledReallocArray_info, @object
Foreign.Marshal.Pool.pooledReallocArray_info:
	.quad	Foreign.Marshal.Pool.pooledReallocArray_entry
	.quad	0
	.quad	210453397518
	.quad	4294967301
	.quad	S96tm_srt+16


==================== Asm code ====================
2018-03-16 16:04:16.882047755 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledReallocArray2_closure
.type Foreign.Marshal.Pool.pooledReallocArray2_closure, @object
Foreign.Marshal.Pool.pooledReallocArray2_closure:
	.quad	Foreign.Marshal.Pool.pooledReallocArray2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.882863398 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledReallocArray2_entry
.type Foreign.Marshal.Pool.pooledReallocArray2_entry, @object
Foreign.Marshal.Pool.pooledReallocArray2_entry:
_c96y6:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c96yk
_c96yl:
	leaq block_c96y3_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rsi,%rbx
	movq %r14,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c96y3
_c96y4:
	movq (%rbx),%rax
	jmp *(%rax)
_c96yk:
	leaq Foreign.Marshal.Pool.pooledReallocArray2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledReallocArray2_entry, .-Foreign.Marshal.Pool.pooledReallocArray2_entry


==================== Asm code ====================
2018-03-16 16:04:16.88354736 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledReallocArray2_info
.type Foreign.Marshal.Pool.pooledReallocArray2_info, @object
Foreign.Marshal.Pool.pooledReallocArray2_info:
	.quad	Foreign.Marshal.Pool.pooledReallocArray2_entry
	.quad	0
	.quad	347892350990
	.quad	21474836504
	.quad	S96tm_srt+16


==================== Asm code ====================
2018-03-16 16:04:16.884254106 UTC

.section .text
.align 8
_c96y3:
_c96y3:
	leaq block_c96y9_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c96y9
_c96ya:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c96y3, .-_c96y3


==================== Asm code ====================
2018-03-16 16:04:16.8849021 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96y3_info:
	.quad	_c96y3
	.quad	3
	.quad	73014444062
	.quad	S96tm_srt+16


==================== Asm code ====================
2018-03-16 16:04:16.885646412 UTC

.section .text
.align 8
_c96y9:
_c96y9:
	leaq block_c96ye_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c96ye
_c96yf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c96y9, .-_c96y9


==================== Asm code ====================
2018-03-16 16:04:16.886293936 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96y9_info:
	.quad	_c96y9
	.quad	3
	.quad	73014444062
	.quad	S96tm_srt+16


==================== Asm code ====================
2018-03-16 16:04:16.886982811 UTC

.section .text
.align 8
_c96ye:
_c96ye:
	leaq block_c96yj_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq Foreign.Marshal.Pool.pooledReallocArray1_closure(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,8(%rbp)
	addq $-16,%rbp
	jmp *Foreign.Storable.sizeOf_entry@gotpcrel(%rip)
	.size _c96ye, .-_c96ye


==================== Asm code ====================
2018-03-16 16:04:16.887673695 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96ye_info:
	.quad	_c96ye
	.quad	259
	.quad	73014444062
	.quad	S96tm_srt+16


==================== Asm code ====================
2018-03-16 16:04:16.888402417 UTC

.section .text
.align 8
_c96yj:
_c96yj:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	leaq 1(%rbx),%rdi
	imulq (%rax),%rdi
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $32,%rbp
	jmp Foreign.Marshal.Pool.$wpooledReallocBytes_entry
	.size _c96yj, .-_c96yj


==================== Asm code ====================
2018-03-16 16:04:16.889036892 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96yj_info:
	.quad	_c96yj
	.quad	323
	.quad	4294967326
	.quad	S96tm_srt+16


==================== Asm code ====================
2018-03-16 16:04:16.891666306 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledReallocArray0_closure
.type Foreign.Marshal.Pool.pooledReallocArray0_closure, @object
Foreign.Marshal.Pool.pooledReallocArray0_closure:
	.quad	Foreign.Marshal.Pool.pooledReallocArray0_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.892326064 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledReallocArray0_entry
.type Foreign.Marshal.Pool.pooledReallocArray0_entry, @object
Foreign.Marshal.Pool.pooledReallocArray0_entry:
_c96z8:
	jmp Foreign.Marshal.Pool.pooledReallocArray2_entry
	.size Foreign.Marshal.Pool.pooledReallocArray0_entry, .-Foreign.Marshal.Pool.pooledReallocArray0_entry


==================== Asm code ====================
2018-03-16 16:04:16.892883205 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledReallocArray0_info
.type Foreign.Marshal.Pool.pooledReallocArray0_info, @object
Foreign.Marshal.Pool.pooledReallocArray0_info:
	.quad	Foreign.Marshal.Pool.pooledReallocArray0_entry
	.quad	0
	.quad	4294967310
	.quad	21474836504
	.quad	S96tm_srt+64


==================== Asm code ====================
2018-03-16 16:04:16.895024316 UTC

.section .data
.align 8
.align 1
lvl12_r95ng_closure:
	.quad	GHC.Types.I#_con_info
	.quad	124


==================== Asm code ====================
2018-03-16 16:04:16.896733878 UTC

.section .data
.align 8
.align 1
lvl13_r95nh_closure:
	.quad	GHC.Types.I#_con_info
	.quad	20


==================== Asm code ====================
2018-03-16 16:04:16.898489583 UTC

.section .data
.align 8
.align 1
lvl14_r95ni_closure:
	.quad	GHC.Types.I#_con_info
	.quad	29


==================== Asm code ====================
2018-03-16 16:04:16.90034653 UTC

.section .data
.align 8
.align 1
lvl15_r95nj_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl3_r95n7_closure
	.quad	lvl4_r95n8_closure
	.quad	lvl6_r95na_closure
	.quad	lvl12_r95ng_closure+1
	.quad	lvl13_r95nh_closure+1
	.quad	lvl12_r95ng_closure+1
	.quad	lvl14_r95ni_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.902967399 UTC

.section .data
.align 8
.align 1
lvl16_r95nk_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl2_r95n6_closure
	.quad	lvl15_r95nj_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.905700863 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledRealloc3_closure
.type Foreign.Marshal.Pool.pooledRealloc3_closure, @object
Foreign.Marshal.Pool.pooledRealloc3_closure:
	.quad	Foreign.Marshal.Pool.pooledRealloc3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.90663836 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledRealloc3_entry
.type Foreign.Marshal.Pool.pooledRealloc3_entry, @object
Foreign.Marshal.Pool.pooledRealloc3_entry:
_c96zq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96zr
_c96zs:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c96zp
_c96zo:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl16_r95nk_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Err.undefined_entry@gotpcrel(%rip)
_c96zr:
	jmp *-16(%r13)
_c96zp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Pool.pooledRealloc3_entry, .-Foreign.Marshal.Pool.pooledRealloc3_entry


==================== Asm code ====================
2018-03-16 16:04:16.907342368 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledRealloc3_info
.type Foreign.Marshal.Pool.pooledRealloc3_info, @object
Foreign.Marshal.Pool.pooledRealloc3_info:
	.quad	Foreign.Marshal.Pool.pooledRealloc3_entry
	.quad	0
	.quad	141733920789
	.quad	S96tm_srt+32


==================== Asm code ====================
2018-03-16 16:04:16.91078605 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledRealloc_closure
.type Foreign.Marshal.Pool.pooledRealloc_closure, @object
Foreign.Marshal.Pool.pooledRealloc_closure:
	.quad	Foreign.Marshal.Pool.pooledRealloc_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.911516345 UTC

.section .text
.align 8
lvl27_s96ng_entry:
_c96zJ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c96zK
_c96zL:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq Foreign.Marshal.Pool.pooledRealloc3_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *Foreign.Storable.sizeOf_entry@gotpcrel(%rip)
_c96zK:
	jmp *-16(%r13)
	.size lvl27_s96ng_entry, .-lvl27_s96ng_entry


==================== Asm code ====================
2018-03-16 16:04:16.912230321 UTC

.section .data.rel.ro
.align 8
.align 1
lvl27_s96ng_info:
	.quad	lvl27_s96ng_entry
	.quad	1
	.quad	4294967312
	.quad	S96tm_srt+80


==================== Asm code ====================
2018-03-16 16:04:16.912883295 UTC

.section .text
.align 8
sat_s96nk_entry:
_c96zR:
	movq 5(%rbx),%rdi
	jmp Foreign.Marshal.Pool.pooledRealloc1_entry
	.size sat_s96nk_entry, .-sat_s96nk_entry


==================== Asm code ====================
2018-03-16 16:04:16.913778692 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s96nk_info:
	.quad	sat_s96nk_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S96tm_srt+24


==================== Asm code ====================
2018-03-16 16:04:16.914554486 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledRealloc_entry
.type Foreign.Marshal.Pool.pooledRealloc_entry, @object
Foreign.Marshal.Pool.pooledRealloc_entry:
_c96zU:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c96zY
_c96zX:
	leaq lvl27_s96ng_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	leaq sat_s96nk_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%r12)
	leaq -5(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c96zY:
	movq $40,904(%r13)
	leaq Foreign.Marshal.Pool.pooledRealloc_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledRealloc_entry, .-Foreign.Marshal.Pool.pooledRealloc_entry


==================== Asm code ====================
2018-03-16 16:04:16.915281104 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledRealloc_info
.type Foreign.Marshal.Pool.pooledRealloc_info, @object
Foreign.Marshal.Pool.pooledRealloc_info:
	.quad	Foreign.Marshal.Pool.pooledRealloc_entry
	.quad	0
	.quad	1653562408974
	.quad	4294967301
	.quad	S96tm_srt+24


==================== Asm code ====================
2018-03-16 16:04:16.919906056 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocBytes1_closure
.type Foreign.Marshal.Pool.pooledMallocBytes1_closure, @object
Foreign.Marshal.Pool.pooledMallocBytes1_closure:
	.quad	Foreign.Marshal.Pool.pooledMallocBytes1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.920702001 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledMallocBytes1_entry
.type Foreign.Marshal.Pool.pooledMallocBytes1_entry, @object
Foreign.Marshal.Pool.pooledMallocBytes1_entry:
_c96Ao:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96Ap
_c96Aq:
	leaq block_c96Al_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c96Al
_c96Am:
	movq (%rbx),%rax
	jmp *(%rax)
_c96Ap:
	leaq Foreign.Marshal.Pool.pooledMallocBytes1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledMallocBytes1_entry, .-Foreign.Marshal.Pool.pooledMallocBytes1_entry


==================== Asm code ====================
2018-03-16 16:04:16.921420087 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocBytes1_info
.type Foreign.Marshal.Pool.pooledMallocBytes1_info, @object
Foreign.Marshal.Pool.pooledMallocBytes1_info:
	.quad	Foreign.Marshal.Pool.pooledMallocBytes1_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S96tm_srt+96


==================== Asm code ====================
2018-03-16 16:04:16.922254364 UTC

.section .text
.align 8
_c96Al:
_c96Al:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movq 7(%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call malloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c96AN
_c96AJ:
	leaq block_c96AC_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c96AC
_c96AD:
	movq (%rbx),%rax
	jmp *(%rax)
_c96AN:
	movq Foreign.Marshal.Alloc.malloc1_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _c96Al, .-_c96Al


==================== Asm code ====================
2018-03-16 16:04:16.922957173 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96Al_info:
	.quad	_c96Al
	.quad	1
	.quad	4294967326
	.quad	S96tm_srt+96


==================== Asm code ====================
2018-03-16 16:04:16.923771472 UTC

.section .text
.align 8
_c96AC:
_c96AC:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c96AM
_c96AL:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	movq %rcx,%rbx
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c96AM:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c96AC, .-_c96AC


==================== Asm code ====================
2018-03-16 16:04:16.924492229 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96AC_info:
	.quad	_c96AC
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:16.927016124 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocBytes_closure
.type Foreign.Marshal.Pool.pooledMallocBytes_closure, @object
Foreign.Marshal.Pool.pooledMallocBytes_closure:
	.quad	Foreign.Marshal.Pool.pooledMallocBytes_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.927648349 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledMallocBytes_entry
.type Foreign.Marshal.Pool.pooledMallocBytes_entry, @object
Foreign.Marshal.Pool.pooledMallocBytes_entry:
_c96Bj:
	jmp Foreign.Marshal.Pool.pooledMallocBytes1_entry
	.size Foreign.Marshal.Pool.pooledMallocBytes_entry, .-Foreign.Marshal.Pool.pooledMallocBytes_entry


==================== Asm code ====================
2018-03-16 16:04:16.928274827 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocBytes_info
.type Foreign.Marshal.Pool.pooledMallocBytes_info, @object
Foreign.Marshal.Pool.pooledMallocBytes_info:
	.quad	Foreign.Marshal.Pool.pooledMallocBytes_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	S96tm_srt+104


==================== Asm code ====================
2018-03-16 16:04:16.930467011 UTC

.section .data
.align 8
.align 1
lvl17_r95nl_closure:
	.quad	GHC.Types.I#_con_info
	.quad	144


==================== Asm code ====================
2018-03-16 16:04:16.932113114 UTC

.section .data
.align 8
.align 1
lvl18_r95nm_closure:
	.quad	GHC.Types.I#_con_info
	.quad	25


==================== Asm code ====================
2018-03-16 16:04:16.93379553 UTC

.section .data
.align 8
.align 1
lvl19_r95nn_closure:
	.quad	GHC.Types.I#_con_info
	.quad	34


==================== Asm code ====================
2018-03-16 16:04:16.935597345 UTC

.section .data
.align 8
.align 1
lvl20_r95no_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl3_r95n7_closure
	.quad	lvl4_r95n8_closure
	.quad	lvl6_r95na_closure
	.quad	lvl17_r95nl_closure+1
	.quad	lvl18_r95nm_closure+1
	.quad	lvl17_r95nl_closure+1
	.quad	lvl19_r95nn_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.937688813 UTC

.section .data
.align 8
.align 1
lvl21_r95np_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl2_r95n6_closure
	.quad	lvl20_r95no_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.940489417 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocArray1_closure
.type Foreign.Marshal.Pool.pooledMallocArray1_closure, @object
Foreign.Marshal.Pool.pooledMallocArray1_closure:
	.quad	Foreign.Marshal.Pool.pooledMallocArray1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.941490144 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledMallocArray1_entry
.type Foreign.Marshal.Pool.pooledMallocArray1_entry, @object
Foreign.Marshal.Pool.pooledMallocArray1_entry:
_c96BB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96BC
_c96BD:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c96BA
_c96Bz:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl21_r95np_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Err.undefined_entry@gotpcrel(%rip)
_c96BC:
	jmp *-16(%r13)
_c96BA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Pool.pooledMallocArray1_entry, .-Foreign.Marshal.Pool.pooledMallocArray1_entry


==================== Asm code ====================
2018-03-16 16:04:16.94222953 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocArray1_info
.type Foreign.Marshal.Pool.pooledMallocArray1_info, @object
Foreign.Marshal.Pool.pooledMallocArray1_info:
	.quad	Foreign.Marshal.Pool.pooledMallocArray1_entry
	.quad	0
	.quad	4402341478421
	.quad	S96tm_srt+32


==================== Asm code ====================
2018-03-16 16:04:16.948697088 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocArray_closure
.type Foreign.Marshal.Pool.pooledMallocArray_closure, @object
Foreign.Marshal.Pool.pooledMallocArray_closure:
	.quad	Foreign.Marshal.Pool.pooledMallocArray_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.949489692 UTC

.section .text
.align 8
lvl27_s96nG_entry:
_c96BU:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c96BV
_c96BW:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq Foreign.Marshal.Pool.pooledMallocArray1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *Foreign.Storable.sizeOf_entry@gotpcrel(%rip)
_c96BV:
	jmp *-16(%r13)
	.size lvl27_s96nG_entry, .-lvl27_s96nG_entry


==================== Asm code ====================
2018-03-16 16:04:16.95019375 UTC

.section .data.rel.ro
.align 8
.align 1
lvl27_s96nG_info:
	.quad	lvl27_s96nG_entry
	.quad	1
	.quad	4294967312
	.quad	S96tm_srt+120


==================== Asm code ====================
2018-03-16 16:04:16.950939067 UTC

.section .text
.align 8
sat_s96o4_entry:
_c96C5:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c96C9
_c96Ca:
	leaq block_c96C2_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 5(%rbx),%rax
	movq %rsi,%rbx
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c96C2
_c96C3:
	movq (%rbx),%rax
	jmp *(%rax)
_c96C9:
	jmp *-8(%r13)
	.size sat_s96o4_entry, .-sat_s96o4_entry


==================== Asm code ====================
2018-03-16 16:04:16.951606754 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s96o4_info:
	.quad	sat_s96o4_entry
	.quad	1
	.quad	4294967305
	.quad	12884901903
	.quad	S96tm_srt+96


==================== Asm code ====================
2018-03-16 16:04:16.952319927 UTC

.section .text
.align 8
_c96C2:
_c96C2:
	leaq block_c96C8_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c96C8
_c96Cc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c96C2, .-_c96C2


==================== Asm code ====================
2018-03-16 16:04:16.952967536 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96C2_info:
	.quad	_c96C2
	.quad	2
	.quad	4294967326
	.quad	S96tm_srt+96


==================== Asm code ====================
2018-03-16 16:04:16.954255265 UTC

.section .text
.align 8
_c96C8:
_c96C8:
	movq 16(%rbp),%rax
	subq $8,%rsp
	addq $7,%rbx
	movq 8(%rbp),%rdi
	imulq (%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call malloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c96CD
_c96Cz:
	leaq block_c96Cs_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c96Cs
_c96Ct:
	movq (%rbx),%rax
	jmp *(%rax)
_c96CD:
	movq Foreign.Marshal.Alloc.malloc1_closure@gotpcrel(%rip),%rbx
	addq $24,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _c96C8, .-_c96C8


==================== Asm code ====================
2018-03-16 16:04:16.954982102 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96C8_info:
	.quad	_c96C8
	.quad	66
	.quad	4294967326
	.quad	S96tm_srt+96


==================== Asm code ====================
2018-03-16 16:04:16.955896478 UTC

.section .text
.align 8
_c96Cs:
_c96Cs:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c96CC
_c96CB:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	movq %rcx,%rbx
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c96CC:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c96Cs, .-_c96Cs


==================== Asm code ====================
2018-03-16 16:04:16.956660988 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96Cs_info:
	.quad	_c96Cs
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:16.957450136 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledMallocArray_entry
.type Foreign.Marshal.Pool.pooledMallocArray_entry, @object
Foreign.Marshal.Pool.pooledMallocArray_entry:
_c96CL:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c96CP
_c96CO:
	leaq lvl27_s96nG_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	leaq sat_s96o4_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%r12)
	leaq -5(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c96CP:
	movq $40,904(%r13)
	leaq Foreign.Marshal.Pool.pooledMallocArray_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledMallocArray_entry, .-Foreign.Marshal.Pool.pooledMallocArray_entry


==================== Asm code ====================
2018-03-16 16:04:16.958549764 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocArray_info
.type Foreign.Marshal.Pool.pooledMallocArray_info, @object
Foreign.Marshal.Pool.pooledMallocArray_info:
	.quad	Foreign.Marshal.Pool.pooledMallocArray_entry
	.quad	0
	.quad	107374182414
	.quad	4294967301
	.quad	S96tm_srt+96


==================== Asm code ====================
2018-03-16 16:04:16.963151412 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.$wpooledMallocArray0_closure
.type Foreign.Marshal.Pool.$wpooledMallocArray0_closure, @object
Foreign.Marshal.Pool.$wpooledMallocArray0_closure:
	.quad	Foreign.Marshal.Pool.$wpooledMallocArray0_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.963920904 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.$wpooledMallocArray0_entry
.type Foreign.Marshal.Pool.$wpooledMallocArray0_entry, @object
Foreign.Marshal.Pool.$wpooledMallocArray0_entry:
_c96DC:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c96DD
_c96DE:
	leaq block_c96DA_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq Foreign.Marshal.Pool.pooledMallocArray1_closure(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-40,%rbp
	jmp *Foreign.Storable.sizeOf_entry@gotpcrel(%rip)
_c96DD:
	leaq Foreign.Marshal.Pool.$wpooledMallocArray0_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.$wpooledMallocArray0_entry, .-Foreign.Marshal.Pool.$wpooledMallocArray0_entry


==================== Asm code ====================
2018-03-16 16:04:16.964615043 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.$wpooledMallocArray0_info
.type Foreign.Marshal.Pool.$wpooledMallocArray0_info, @object
Foreign.Marshal.Pool.$wpooledMallocArray0_info:
	.quad	Foreign.Marshal.Pool.$wpooledMallocArray0_entry
	.quad	0
	.quad	176093659150
	.quad	17179869206
	.quad	S96tm_srt+96


==================== Asm code ====================
2018-03-16 16:04:16.965511354 UTC

.section .text
.align 8
_c96DA:
_c96DA:
	movq 8(%rbp),%rax
	subq $8,%rsp
	addq $7,%rbx
	movq 16(%rbp),%rcx
	leaq 1(%rcx),%rdi
	imulq (%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call malloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c96E7
_c96E3:
	leaq block_c96DW_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c96DW
_c96DX:
	movq (%rbx),%rax
	jmp *(%rax)
_c96E7:
	movq Foreign.Marshal.Alloc.malloc1_closure@gotpcrel(%rip),%rbx
	addq $24,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _c96DA, .-_c96DA


==================== Asm code ====================
2018-03-16 16:04:16.966190139 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96DA_info:
	.quad	_c96DA
	.quad	130
	.quad	4294967326
	.quad	S96tm_srt+96


==================== Asm code ====================
2018-03-16 16:04:16.967094865 UTC

.section .text
.align 8
_c96DW:
_c96DW:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c96E6
_c96E5:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	movq %rcx,%rbx
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c96E6:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c96DW, .-_c96DW


==================== Asm code ====================
2018-03-16 16:04:16.967880363 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96DW_info:
	.quad	_c96DW
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:16.971099114 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocArray2_closure
.type Foreign.Marshal.Pool.pooledMallocArray2_closure, @object
Foreign.Marshal.Pool.pooledMallocArray2_closure:
	.quad	Foreign.Marshal.Pool.pooledMallocArray2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.972330145 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledMallocArray2_entry
.type Foreign.Marshal.Pool.pooledMallocArray2_entry, @object
Foreign.Marshal.Pool.pooledMallocArray2_entry:
_c96EJ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c96EK
_c96EL:
	leaq block_c96EG_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c96EG
_c96EH:
	movq (%rbx),%rax
	jmp *(%rax)
_c96EK:
	leaq Foreign.Marshal.Pool.pooledMallocArray2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledMallocArray2_entry, .-Foreign.Marshal.Pool.pooledMallocArray2_entry


==================== Asm code ====================
2018-03-16 16:04:16.973015983 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocArray2_info
.type Foreign.Marshal.Pool.pooledMallocArray2_info, @object
Foreign.Marshal.Pool.pooledMallocArray2_info:
	.quad	Foreign.Marshal.Pool.pooledMallocArray2_entry
	.quad	0
	.quad	12884901902
	.quad	17179869207
	.quad	S96tm_srt+136


==================== Asm code ====================
2018-03-16 16:04:16.973732191 UTC

.section .text
.align 8
_c96EG:
_c96EG:
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp Foreign.Marshal.Pool.$wpooledMallocArray0_entry
	.size _c96EG, .-_c96EG


==================== Asm code ====================
2018-03-16 16:04:16.974340231 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96EG_info:
	.quad	_c96EG
	.quad	2
	.quad	4294967326
	.quad	S96tm_srt+136


==================== Asm code ====================
2018-03-16 16:04:16.976573352 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocArray0_closure
.type Foreign.Marshal.Pool.pooledMallocArray0_closure, @object
Foreign.Marshal.Pool.pooledMallocArray0_closure:
	.quad	Foreign.Marshal.Pool.pooledMallocArray0_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.977210396 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledMallocArray0_entry
.type Foreign.Marshal.Pool.pooledMallocArray0_entry, @object
Foreign.Marshal.Pool.pooledMallocArray0_entry:
_c96F4:
	jmp Foreign.Marshal.Pool.pooledMallocArray2_entry
	.size Foreign.Marshal.Pool.pooledMallocArray0_entry, .-Foreign.Marshal.Pool.pooledMallocArray0_entry


==================== Asm code ====================
2018-03-16 16:04:16.978328931 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMallocArray0_info
.type Foreign.Marshal.Pool.pooledMallocArray0_info, @object
Foreign.Marshal.Pool.pooledMallocArray0_info:
	.quad	Foreign.Marshal.Pool.pooledMallocArray0_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	S96tm_srt+144


==================== Asm code ====================
2018-03-16 16:04:16.980026707 UTC

.section .data
.align 8
.align 1
lvl22_r95nq_closure:
	.quad	GHC.Types.I#_con_info
	.quad	106


==================== Asm code ====================
2018-03-16 16:04:16.981851088 UTC

.section .data
.align 8
.align 1
lvl23_r95nr_closure:
	.quad	GHC.Types.I#_con_info
	.quad	19


==================== Asm code ====================
2018-03-16 16:04:16.983540152 UTC

.section .data
.align 8
.align 1
lvl24_r95ns_closure:
	.quad	GHC.Types.I#_con_info
	.quad	28


==================== Asm code ====================
2018-03-16 16:04:16.985786071 UTC

.section .data
.align 8
.align 1
lvl25_r95nt_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl3_r95n7_closure
	.quad	lvl4_r95n8_closure
	.quad	lvl6_r95na_closure
	.quad	lvl22_r95nq_closure+1
	.quad	lvl23_r95nr_closure+1
	.quad	lvl22_r95nq_closure+1
	.quad	lvl24_r95ns_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.987524856 UTC

.section .data
.align 8
.align 1
lvl26_r95nu_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl2_r95n6_closure
	.quad	lvl25_r95nt_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.99070608 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMalloc1_closure
.type Foreign.Marshal.Pool.pooledMalloc1_closure, @object
Foreign.Marshal.Pool.pooledMalloc1_closure:
	.quad	Foreign.Marshal.Pool.pooledMalloc1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.991598632 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledMalloc1_entry
.type Foreign.Marshal.Pool.pooledMalloc1_entry, @object
Foreign.Marshal.Pool.pooledMalloc1_entry:
_c96Fm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96Fn
_c96Fo:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c96Fl
_c96Fk:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl26_r95nu_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Err.undefined_entry@gotpcrel(%rip)
_c96Fn:
	jmp *-16(%r13)
_c96Fl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Pool.pooledMalloc1_entry, .-Foreign.Marshal.Pool.pooledMalloc1_entry


==================== Asm code ====================
2018-03-16 16:04:16.992300354 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMalloc1_info
.type Foreign.Marshal.Pool.pooledMalloc1_info, @object
Foreign.Marshal.Pool.pooledMalloc1_info:
	.quad	Foreign.Marshal.Pool.pooledMalloc1_entry
	.quad	0
	.quad	140741783322645
	.quad	S96tm_srt+32


==================== Asm code ====================
2018-03-16 16:04:16.998493606 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMalloc_closure
.type Foreign.Marshal.Pool.pooledMalloc_closure, @object
Foreign.Marshal.Pool.pooledMalloc_closure:
	.quad	Foreign.Marshal.Pool.pooledMalloc_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:16.99947661 UTC

.section .text
.align 8
lvl27_s96oz_entry:
_c96FF:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c96FG
_c96FH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq Foreign.Marshal.Pool.pooledMalloc1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *Foreign.Storable.sizeOf_entry@gotpcrel(%rip)
_c96FG:
	jmp *-16(%r13)
	.size lvl27_s96oz_entry, .-lvl27_s96oz_entry


==================== Asm code ====================
2018-03-16 16:04:17.000232532 UTC

.section .data.rel.ro
.align 8
.align 1
lvl27_s96oz_info:
	.quad	lvl27_s96oz_entry
	.quad	1
	.quad	4294967312
	.quad	S96tm_srt+160


==================== Asm code ====================
2018-03-16 16:04:17.001631173 UTC

.section .text
.align 8
sat_s96oT_entry:
_c96FQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96FR
_c96FS:
	leaq block_c96FN_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 6(%rbx),%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c96FN
_c96FO:
	movq (%rbx),%rax
	jmp *(%rax)
_c96FR:
	jmp *-8(%r13)
	.size sat_s96oT_entry, .-sat_s96oT_entry


==================== Asm code ====================
2018-03-16 16:04:17.002311016 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s96oT_info:
	.quad	sat_s96oT_entry
	.quad	1
	.quad	4294967305
	.quad	8589934597
	.quad	S96tm_srt+96


==================== Asm code ====================
2018-03-16 16:04:17.003173799 UTC

.section .text
.align 8
_c96FN:
_c96FN:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movq 7(%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call malloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c96Gf
_c96Gb:
	leaq block_c96G4_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c96G4
_c96G5:
	movq (%rbx),%rax
	jmp *(%rax)
_c96Gf:
	movq Foreign.Marshal.Alloc.malloc1_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _c96FN, .-_c96FN


==================== Asm code ====================
2018-03-16 16:04:17.003918949 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96FN_info:
	.quad	_c96FN
	.quad	1
	.quad	4294967326
	.quad	S96tm_srt+96


==================== Asm code ====================
2018-03-16 16:04:17.00479706 UTC

.section .text
.align 8
_c96G4:
_c96G4:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c96Ge
_c96Gd:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	movq %rbx,8(%rax)
	subq $8,%rsp
	movq %r13,%rbx
	movq %rax,%rsi
	movq %rbx,%rdi
	xorl %eax,%eax
	movq %rcx,%rbx
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c96Ge:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c96G4, .-_c96G4


==================== Asm code ====================
2018-03-16 16:04:17.00561651 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96G4_info:
	.quad	_c96G4
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.006357483 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledMalloc_entry
.type Foreign.Marshal.Pool.pooledMalloc_entry, @object
Foreign.Marshal.Pool.pooledMalloc_entry:
_c96Gm:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c96Gq
_c96Gp:
	leaq lvl27_s96oz_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	leaq sat_s96oT_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c96Gq:
	movq $40,904(%r13)
	leaq Foreign.Marshal.Pool.pooledMalloc_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledMalloc_entry, .-Foreign.Marshal.Pool.pooledMalloc_entry


==================== Asm code ====================
2018-03-16 16:04:17.007127014 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledMalloc_info
.type Foreign.Marshal.Pool.pooledMalloc_info, @object
Foreign.Marshal.Pool.pooledMalloc_info:
	.quad	Foreign.Marshal.Pool.pooledMalloc_entry
	.quad	0
	.quad	3302829850638
	.quad	4294967301
	.quad	S96tm_srt+96


==================== Asm code ====================
2018-03-16 16:04:17.012924376 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNewArray2_closure
.type Foreign.Marshal.Pool.pooledNewArray2_closure, @object
Foreign.Marshal.Pool.pooledNewArray2_closure:
	.quad	Foreign.Marshal.Pool.pooledNewArray2_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:17.013835749 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledNewArray2_entry
.type Foreign.Marshal.Pool.pooledNewArray2_entry, @object
Foreign.Marshal.Pool.pooledNewArray2_entry:
_c96H6:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c96Ha
_c96Hb:
	leaq block_c96H4_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rsi,%rax
	xorl %esi,%esi
	movq %r14,%rbx
	movq %r8,%r14
	movq %rbx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp *GHC.List.$wlenAcc_entry@gotpcrel(%rip)
_c96Ha:
	leaq Foreign.Marshal.Pool.pooledNewArray2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledNewArray2_entry, .-Foreign.Marshal.Pool.pooledNewArray2_entry


==================== Asm code ====================
2018-03-16 16:04:17.014661842 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNewArray2_info
.type Foreign.Marshal.Pool.pooledNewArray2_info, @object
Foreign.Marshal.Pool.pooledNewArray2_info:
	.quad	Foreign.Marshal.Pool.pooledNewArray2_entry
	.quad	0
	.quad	4436701216782
	.quad	21474836504
	.quad	S96tm_srt+96


==================== Asm code ====================
2018-03-16 16:04:17.015434451 UTC

.section .text
.align 8
_c96H4:
_c96H4:
	leaq block_c96H9_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	leaq Foreign.Marshal.Pool.pooledMallocArray1_closure(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,(%rbp)
	addq $-24,%rbp
	jmp *Foreign.Storable.sizeOf_entry@gotpcrel(%rip)
	.size _c96H4, .-_c96H4


==================== Asm code ====================
2018-03-16 16:04:17.016668752 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96H4_info:
	.quad	_c96H4
	.quad	4
	.quad	38654705694
	.quad	S96tm_srt+96


==================== Asm code ====================
2018-03-16 16:04:17.017556957 UTC

.section .text
.align 8
_c96H9:
_c96H9:
	movq 24(%rbp),%rax
	subq $8,%rsp
	addq $7,%rbx
	movq 8(%rbp),%rcx
	leaq 1(%rcx),%rdi
	imulq (%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call malloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c96HN
_c96HH:
	leaq block_c96Hv_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,24(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c96Hv
_c96Hw:
	movq (%rbx),%rax
	jmp *(%rax)
_c96HN:
	movq Foreign.Marshal.Alloc.malloc1_closure@gotpcrel(%rip),%rbx
	addq $48,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _c96H9, .-_c96H9


==================== Asm code ====================
2018-03-16 16:04:17.018335902 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96H9_info:
	.quad	_c96H9
	.quad	69
	.quad	4294967326
	.quad	S96tm_srt+96


==================== Asm code ====================
2018-03-16 16:04:17.019342984 UTC

.section .text
.align 8
_c96Hv:
_c96Hv:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c96HK
_c96HJ:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rbx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	leaq -14(%r12),%rdi
	movq %rdi,8(%rax)
	subq $8,%rsp
	movq %r13,%rdi
	movq %rsi,%r8
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	movq %r8,80(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_c96HF_info(%rip),%rax
	movq %rax,24(%rbp)
	movq 72(%rsp),%rax
	movq %rax,%r8
	movq %r14,%rdi
	movq 64(%rsp),%rax
	movq %rax,%rsi
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp *Foreign.Marshal.Array.newArray4_entry@gotpcrel(%rip)
_c96HK:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c96Hv, .-_c96Hv


==================== Asm code ====================
2018-03-16 16:04:17.020202126 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96Hv_info:
	.quad	_c96Hv
	.quad	132
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.020825666 UTC

.section .text
.align 8
_c96HF:
_c96HF:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c96HF, .-_c96HF


==================== Asm code ====================
2018-03-16 16:04:17.021464231 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96HF_info:
	.quad	_c96HF
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.023938665 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNewArray0_closure
.type Foreign.Marshal.Pool.pooledNewArray0_closure, @object
Foreign.Marshal.Pool.pooledNewArray0_closure:
	.quad	Foreign.Marshal.Pool.pooledNewArray0_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:17.024607694 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledNewArray0_entry
.type Foreign.Marshal.Pool.pooledNewArray0_entry, @object
Foreign.Marshal.Pool.pooledNewArray0_entry:
_c96Iq:
	jmp Foreign.Marshal.Pool.pooledNewArray2_entry
	.size Foreign.Marshal.Pool.pooledNewArray0_entry, .-Foreign.Marshal.Pool.pooledNewArray0_entry


==================== Asm code ====================
2018-03-16 16:04:17.025581207 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNewArray0_info
.type Foreign.Marshal.Pool.pooledNewArray0_info, @object
Foreign.Marshal.Pool.pooledNewArray0_info:
	.quad	Foreign.Marshal.Pool.pooledNewArray0_entry
	.quad	0
	.quad	4294967310
	.quad	21474836504
	.quad	S96tm_srt+176


==================== Asm code ====================
2018-03-16 16:04:17.031994077 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNewArray1_closure
.type Foreign.Marshal.Pool.pooledNewArray1_closure, @object
Foreign.Marshal.Pool.pooledNewArray1_closure:
	.quad	Foreign.Marshal.Pool.pooledNewArray1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:17.032830176 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledNewArray1_entry
.type Foreign.Marshal.Pool.pooledNewArray1_entry, @object
Foreign.Marshal.Pool.pooledNewArray1_entry:
_c96ID:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c96IH
_c96II:
	leaq block_c96IB_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rsi,%rax
	xorl %esi,%esi
	movq %r14,%rbx
	movq %rdi,%r14
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp *GHC.List.$wlenAcc_entry@gotpcrel(%rip)
_c96IH:
	leaq Foreign.Marshal.Pool.pooledNewArray1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledNewArray1_entry, .-Foreign.Marshal.Pool.pooledNewArray1_entry


==================== Asm code ====================
2018-03-16 16:04:17.033893245 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNewArray1_info
.type Foreign.Marshal.Pool.pooledNewArray1_info, @object
Foreign.Marshal.Pool.pooledNewArray1_info:
	.quad	Foreign.Marshal.Pool.pooledNewArray1_entry
	.quad	0
	.quad	8834747727886
	.quad	17179869207
	.quad	S96tm_srt+96


==================== Asm code ====================
2018-03-16 16:04:17.03461373 UTC

.section .text
.align 8
_c96IB:
_c96IB:
	leaq block_c96IG_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	leaq Foreign.Marshal.Pool.pooledMallocArray1_closure(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,(%rbp)
	addq $-24,%rbp
	jmp *Foreign.Storable.sizeOf_entry@gotpcrel(%rip)
	.size _c96IB, .-_c96IB


==================== Asm code ====================
2018-03-16 16:04:17.035330283 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96IB_info:
	.quad	_c96IB
	.quad	3
	.quad	38654705694
	.quad	S96tm_srt+96


==================== Asm code ====================
2018-03-16 16:04:17.036216192 UTC

.section .text
.align 8
_c96IG:
_c96IG:
	movq 24(%rbp),%rax
	subq $8,%rsp
	addq $7,%rbx
	movq 8(%rbp),%rdi
	imulq (%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call malloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c96Jh
_c96Jb:
	leaq block_c96IZ_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,24(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c96IZ
_c96J0:
	movq (%rbx),%rax
	jmp *(%rax)
_c96Jh:
	movq Foreign.Marshal.Alloc.malloc1_closure@gotpcrel(%rip),%rbx
	addq $40,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _c96IG, .-_c96IG


==================== Asm code ====================
2018-03-16 16:04:17.036932723 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96IG_info:
	.quad	_c96IG
	.quad	68
	.quad	4294967326
	.quad	S96tm_srt+96


==================== Asm code ====================
2018-03-16 16:04:17.037934255 UTC

.section .text
.align 8
_c96IZ:
_c96IZ:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c96Je
_c96Jd:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rbx
	movq 24(%rbp),%rdx
	leaq -14(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_c96J9_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 64(%rsp),%rax
	movq %rax,%rdi
	movq %r14,%rsi
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp *Foreign.Marshal.Array.newArray2_entry@gotpcrel(%rip)
_c96Je:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c96IZ, .-_c96IZ


==================== Asm code ====================
2018-03-16 16:04:17.038795675 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96IZ_info:
	.quad	_c96IZ
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.039457795 UTC

.section .text
.align 8
_c96J9:
_c96J9:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c96J9, .-_c96J9


==================== Asm code ====================
2018-03-16 16:04:17.040047494 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96J9_info:
	.quad	_c96J9
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.042589816 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNewArray_closure
.type Foreign.Marshal.Pool.pooledNewArray_closure, @object
Foreign.Marshal.Pool.pooledNewArray_closure:
	.quad	Foreign.Marshal.Pool.pooledNewArray_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:17.043284566 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledNewArray_entry
.type Foreign.Marshal.Pool.pooledNewArray_entry, @object
Foreign.Marshal.Pool.pooledNewArray_entry:
_c96JT:
	jmp Foreign.Marshal.Pool.pooledNewArray1_entry
	.size Foreign.Marshal.Pool.pooledNewArray_entry, .-Foreign.Marshal.Pool.pooledNewArray_entry


==================== Asm code ====================
2018-03-16 16:04:17.043985559 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNewArray_info
.type Foreign.Marshal.Pool.pooledNewArray_info, @object
Foreign.Marshal.Pool.pooledNewArray_info:
	.quad	Foreign.Marshal.Pool.pooledNewArray_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	S96tm_srt+184


==================== Asm code ====================
2018-03-16 16:04:17.050135461 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNew1_closure
.type Foreign.Marshal.Pool.pooledNew1_closure, @object
Foreign.Marshal.Pool.pooledNew1_closure:
	.quad	Foreign.Marshal.Pool.pooledNew1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:17.051143101 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledNew1_entry
.type Foreign.Marshal.Pool.pooledNew1_entry, @object
Foreign.Marshal.Pool.pooledNew1_entry:
_c96K6:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c96K7
_c96K8:
	leaq block_c96K4_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rax
	movq stg_ap_p_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%rbp)
	leaq Foreign.Marshal.Pool.pooledMalloc1_closure(%rip),%rbx
	movq %rbx,-40(%rbp)
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-48,%rbp
	jmp *Foreign.Storable.sizeOf_entry@gotpcrel(%rip)
_c96K7:
	leaq Foreign.Marshal.Pool.pooledNew1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.pooledNew1_entry, .-Foreign.Marshal.Pool.pooledNew1_entry


==================== Asm code ====================
2018-03-16 16:04:17.051917798 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNew1_info
.type Foreign.Marshal.Pool.pooledNew1_info, @object
Foreign.Marshal.Pool.pooledNew1_info:
	.quad	Foreign.Marshal.Pool.pooledNew1_entry
	.quad	0
	.quad	18695992639502
	.quad	17179869207
	.quad	S96tm_srt+96


==================== Asm code ====================
2018-03-16 16:04:17.052824041 UTC

.section .text
.align 8
_c96K4:
_c96K4:
	movq 16(%rbp),%rax
	subq $8,%rsp
	movq 7(%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call malloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c96KC
_c96Kw:
	leaq block_c96Kk_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c96Kk
_c96Kl:
	movq (%rbx),%rax
	jmp *(%rax)
_c96KC:
	movq Foreign.Marshal.Alloc.malloc1_closure@gotpcrel(%rip),%rbx
	addq $32,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _c96K4, .-_c96K4


==================== Asm code ====================
2018-03-16 16:04:17.053593087 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96K4_info:
	.quad	_c96K4
	.quad	3
	.quad	4294967326
	.quad	S96tm_srt+96


==================== Asm code ====================
2018-03-16 16:04:17.054526316 UTC

.section .text
.align 8
_c96Kk:
_c96Kk:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c96Kz
_c96Ky:
	movq 7(%rbx),%rax
	movq 8(%rax),%rbx
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rbx
	movq 24(%rbp),%rdx
	leaq -14(%r12),%rsi
	movq %rsi,8(%rax)
	subq $8,%rsp
	movq %r13,%rsi
	movq %rsi,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rcx,%r14
	movq %rdx,72(%rsp)
	call dirty_MUT_VAR@plt
	addq $8,%rsp
	leaq block_c96Ku_info(%rip),%rax
	movq %rax,16(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq stg_ap_ppv_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	movq 64(%rsp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	jmp *Foreign.Storable.poke_entry@gotpcrel(%rip)
_c96Kz:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c96Kk, .-_c96Kk


==================== Asm code ====================
2018-03-16 16:04:17.055347981 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96Kk_info:
	.quad	_c96Kk
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.055984111 UTC

.section .text
.align 8
_c96Ku:
_c96Ku:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c96Ku, .-_c96Ku


==================== Asm code ====================
2018-03-16 16:04:17.056608746 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96Ku_info:
	.quad	_c96Ku
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.059159373 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNew_closure
.type Foreign.Marshal.Pool.pooledNew_closure, @object
Foreign.Marshal.Pool.pooledNew_closure:
	.quad	Foreign.Marshal.Pool.pooledNew_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:17.059820007 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.pooledNew_entry
.type Foreign.Marshal.Pool.pooledNew_entry, @object
Foreign.Marshal.Pool.pooledNew_entry:
_c96L9:
	jmp Foreign.Marshal.Pool.pooledNew1_entry
	.size Foreign.Marshal.Pool.pooledNew_entry, .-Foreign.Marshal.Pool.pooledNew_entry


==================== Asm code ====================
2018-03-16 16:04:17.060440594 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.pooledNew_info
.type Foreign.Marshal.Pool.pooledNew_info, @object
Foreign.Marshal.Pool.pooledNew_info:
	.quad	Foreign.Marshal.Pool.pooledNew_entry
	.quad	0
	.quad	4294967310
	.quad	17179869207
	.quad	S96tm_srt+192


==================== Asm code ====================
2018-03-16 16:04:17.06464217 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.freePool2_closure
.type Foreign.Marshal.Pool.freePool2_closure, @object
Foreign.Marshal.Pool.freePool2_closure:
	.quad	Foreign.Marshal.Pool.freePool2_info


==================== Asm code ====================
2018-03-16 16:04:17.065662346 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.freePool2_entry
.type Foreign.Marshal.Pool.freePool2_entry, @object
Foreign.Marshal.Pool.freePool2_entry:
_c96Lr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96Ls
_u96LI:
	movq %r14,-8(%rbp)
	addq $-8,%rbp
	jmp _c96Lh
_c96Ls:
	leaq Foreign.Marshal.Pool.freePool2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.freePool2_entry, .-Foreign.Marshal.Pool.freePool2_entry


==================== Asm code ====================
2018-03-16 16:04:17.066322888 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.freePool2_info
.type Foreign.Marshal.Pool.freePool2_info, @object
Foreign.Marshal.Pool.freePool2_info:
	.quad	Foreign.Marshal.Pool.freePool2_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:17.066995482 UTC

.section .text
.align 8
_c96Lh:
_c96Lh:
	movq (%rbp),%rax
	leaq block_c96Lk_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c96Lk
_c96Ll:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c96Lh, .-_c96Lh


==================== Asm code ====================
2018-03-16 16:04:17.067803637 UTC

.section .text
.align 8
_c96Lk:
_c96Lk:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c96Lo
_c96Lp:
	leaq block_c96Lz_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c96Lz
_c96LB:
	movq (%rbx),%rax
	jmp *(%rax)
_c96Lo:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c96Lk, .-_c96Lk


==================== Asm code ====================
2018-03-16 16:04:17.068487591 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96Lk_info:
	.quad	_c96Lk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.069187146 UTC

.section .text
.align 8
_c96Lz:
_c96Lz:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movq 7(%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call free@plt
	addq $8,%rsp
	movq %rbx,8(%rbp)
	addq $8,%rbp
	jmp _c96Lh
	.size _c96Lz, .-_c96Lz


==================== Asm code ====================
2018-03-16 16:04:17.069763194 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96Lz_info:
	.quad	_c96Lz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.072592299 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.freePool1_closure
.type Foreign.Marshal.Pool.freePool1_closure, @object
Foreign.Marshal.Pool.freePool1_closure:
	.quad	Foreign.Marshal.Pool.freePool1_info


==================== Asm code ====================
2018-03-16 16:04:17.073468918 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.freePool1_entry
.type Foreign.Marshal.Pool.freePool1_entry, @object
Foreign.Marshal.Pool.freePool1_entry:
_c96Mg:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c96Mh
_c96Mi:
	leaq block_c96Md_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c96Md
_c96Me:
	movq (%rbx),%rax
	jmp *(%rax)
_c96Mh:
	leaq Foreign.Marshal.Pool.freePool1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.freePool1_entry, .-Foreign.Marshal.Pool.freePool1_entry


==================== Asm code ====================
2018-03-16 16:04:17.074165128 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.freePool1_info
.type Foreign.Marshal.Pool.freePool1_info, @object
Foreign.Marshal.Pool.freePool1_info:
	.quad	Foreign.Marshal.Pool.freePool1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:17.074826369 UTC

.section .text
.align 8
_c96Md:
_c96Md:
	movq 7(%rbx),%rax
	movq 8(%rax),%r14
	addq $8,%rbp
	jmp Foreign.Marshal.Pool.freePool2_entry
	.size _c96Md, .-_c96Md


==================== Asm code ====================
2018-03-16 16:04:17.075788235 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96Md_info:
	.quad	_c96Md
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.077879703 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.freePool_closure
.type Foreign.Marshal.Pool.freePool_closure, @object
Foreign.Marshal.Pool.freePool_closure:
	.quad	Foreign.Marshal.Pool.freePool_info


==================== Asm code ====================
2018-03-16 16:04:17.078537796 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.freePool_entry
.type Foreign.Marshal.Pool.freePool_entry, @object
Foreign.Marshal.Pool.freePool_entry:
_c96MC:
	jmp Foreign.Marshal.Pool.freePool1_entry
	.size Foreign.Marshal.Pool.freePool_entry, .-Foreign.Marshal.Pool.freePool_entry


==================== Asm code ====================
2018-03-16 16:04:17.079106158 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.freePool_info
.type Foreign.Marshal.Pool.freePool_info, @object
Foreign.Marshal.Pool.freePool_info:
	.quad	Foreign.Marshal.Pool.freePool_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:17.08193058 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.newPool1_closure
.type Foreign.Marshal.Pool.newPool1_closure, @object
Foreign.Marshal.Pool.newPool1_closure:
	.quad	Foreign.Marshal.Pool.newPool1_info


==================== Asm code ====================
2018-03-16 16:04:17.082640382 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.newPool1_entry
.type Foreign.Marshal.Pool.newPool1_entry, @object
Foreign.Marshal.Pool.newPool1_entry:
_c96MQ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c96MR
_c96MS:
	leaq block_c96MN_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $-8,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
_c96MR:
	leaq Foreign.Marshal.Pool.newPool1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.newPool1_entry, .-Foreign.Marshal.Pool.newPool1_entry


==================== Asm code ====================
2018-03-16 16:04:17.083320317 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.newPool1_info
.type Foreign.Marshal.Pool.newPool1_info, @object
Foreign.Marshal.Pool.newPool1_info:
	.quad	Foreign.Marshal.Pool.newPool1_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:04:17.084015702 UTC

.section .text
.align 8
_c96MN:
_c96MN:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c96MV
_c96MU:
	movq GHC.STRef.STRef_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c96MV:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c96MN, .-_c96MN


==================== Asm code ====================
2018-03-16 16:04:17.084658047 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96MN_info:
	.quad	_c96MN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.086938113 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.newPool_closure
.type Foreign.Marshal.Pool.newPool_closure, @object
Foreign.Marshal.Pool.newPool_closure:
	.quad	Foreign.Marshal.Pool.newPool_info


==================== Asm code ====================
2018-03-16 16:04:17.08753836 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.newPool_entry
.type Foreign.Marshal.Pool.newPool_entry, @object
Foreign.Marshal.Pool.newPool_entry:
_c96Nc:
	jmp Foreign.Marshal.Pool.newPool1_entry
	.size Foreign.Marshal.Pool.newPool_entry, .-Foreign.Marshal.Pool.newPool_entry


==================== Asm code ====================
2018-03-16 16:04:17.088145738 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.newPool_info
.type Foreign.Marshal.Pool.newPool_info, @object
Foreign.Marshal.Pool.newPool_info:
	.quad	Foreign.Marshal.Pool.newPool_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:04:17.10303762 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.withPool1_closure
.type Foreign.Marshal.Pool.withPool1_closure, @object
Foreign.Marshal.Pool.withPool1_closure:
	.quad	Foreign.Marshal.Pool.withPool1_info


==================== Asm code ====================
2018-03-16 16:04:17.104399654 UTC

.section .text
.align 8
sat_s96qI_entry:
_c96NB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96NC
_c96ND:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c96NF
_c96NE:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq GHC.STRef.STRef_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c96NF:
	movq $16,904(%r13)
_c96NC:
	jmp *-16(%r13)
	.size sat_s96qI_entry, .-sat_s96qI_entry


==================== Asm code ====================
2018-03-16 16:04:17.105106382 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s96qI_info:
	.quad	sat_s96qI_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:04:17.105837178 UTC

.section .text
.align 8
sat_s96qW_entry:
_c96NZ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c96O0
_c96O1:
	movq 7(%rbx),%rax
	movq 8(%rax),%rax
	leaq block_c96NX_info(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq %rax,%r14
	movq 15(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 23(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp Foreign.Marshal.Pool.freePool2_entry
_c96O0:
	jmp *-8(%r13)
	.size sat_s96qW_entry, .-sat_s96qW_entry


==================== Asm code ====================
2018-03-16 16:04:17.10649611 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s96qW_info:
	.quad	sat_s96qW_entry
	.quad	3
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:04:17.107139169 UTC

.section .text
.align 8
_c96NX:
_c96NX:
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp *GHC.Exception.throw_entry@gotpcrel(%rip)
	.size _c96NX, .-_c96NX


==================== Asm code ====================
2018-03-16 16:04:17.107693603 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96NX_info:
	.quad	_c96NX
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.108412277 UTC

.section .text
.align 8
sat_s96qX_entry:
_c96O3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96O4
_c96O5:
	leaq block_c96NN_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c96NN
_c96NO:
	movq (%rbx),%rax
	jmp *(%rax)
_c96O4:
	jmp *-8(%r13)
	.size sat_s96qX_entry, .-sat_s96qX_entry


==================== Asm code ====================
2018-03-16 16:04:17.109040145 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s96qX_info:
	.quad	sat_s96qX_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:17.109791122 UTC

.section .text
.align 8
_c96NN:
_c96NN:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c96O8
_c96O7:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_s96qW_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -23(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c96O8:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c96NN, .-_c96NN


==================== Asm code ====================
2018-03-16 16:04:17.110435246 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96NN_info:
	.quad	_c96NN
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.111034756 UTC

.section .text
.align 8
sat_s96r8_entry:
_c96Oh:
	movq %r14,%rbx
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
	.size sat_s96r8_entry, .-sat_s96r8_entry


==================== Asm code ====================
2018-03-16 16:04:17.111586657 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s96r8_info:
	.quad	sat_s96r8_entry
	.quad	4294967296
	.quad	10
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:17.112318568 UTC

.section .text
.align 8
sat_s96rs_entry:
_c96OJ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c96OK
_c96OL:
	movq 7(%rbx),%rax
	movq 8(%rax),%rax
	leaq block_c96OH_info(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq %rax,%r14
	movq 15(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 23(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp Foreign.Marshal.Pool.freePool2_entry
_c96OK:
	jmp *-8(%r13)
	.size sat_s96rs_entry, .-sat_s96rs_entry


==================== Asm code ====================
2018-03-16 16:04:17.112965295 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s96rs_info:
	.quad	sat_s96rs_entry
	.quad	3
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:04:17.113660168 UTC

.section .text
.align 8
_c96OH:
_c96OH:
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp *GHC.Exception.throw_entry@gotpcrel(%rip)
	.size _c96OH, .-_c96OH


==================== Asm code ====================
2018-03-16 16:04:17.114276923 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96OH_info:
	.quad	_c96OH
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.115016217 UTC

.section .text
.align 8
sat_s96rt_entry:
_c96ON:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96OO
_c96OP:
	leaq block_c96Ox_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %r14,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c96Ox
_c96Oy:
	movq (%rbx),%rax
	jmp *(%rax)
_c96OO:
	jmp *-8(%r13)
	.size sat_s96rt_entry, .-sat_s96rt_entry


==================== Asm code ====================
2018-03-16 16:04:17.115706476 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s96rt_info:
	.quad	sat_s96rt_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:17.116488125 UTC

.section .text
.align 8
_c96Ox:
_c96Ox:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c96OS
_c96OR:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_s96rs_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -23(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c96OS:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c96Ox, .-_c96Ox


==================== Asm code ====================
2018-03-16 16:04:17.117576958 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96Ox_info:
	.quad	_c96Ox
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.118361071 UTC

.section .text
.align 8
sat_s96re_entry:
_c96OZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96P0
_c96P1:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c96P3
_c96P2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq GHC.STRef.STRef_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c96P3:
	movq $16,904(%r13)
_c96P0:
	jmp *-16(%r13)
	.size sat_s96re_entry, .-sat_s96re_entry


==================== Asm code ====================
2018-03-16 16:04:17.119054301 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s96re_info:
	.quad	sat_s96re_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:04:17.119689873 UTC

.section .text
.align 8
sat_s96rf_entry:
_c96P9:
	movq 7(%rbx),%rbx
	jmp *stg_unmaskAsyncExceptions#@gotpcrel(%rip)
	.size sat_s96rf_entry, .-sat_s96rf_entry


==================== Asm code ====================
2018-03-16 16:04:17.120279672 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s96rf_info:
	.quad	sat_s96rf_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:04:17.120983957 UTC

.section .text
.align 8
sat_s96rD_entry:
_c96Pg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c96Ph
_c96Pi:
	leaq block_c96Oq_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
_c96Ph:
	jmp *-8(%r13)
	.size sat_s96rD_entry, .-sat_s96rD_entry


==================== Asm code ====================
2018-03-16 16:04:17.121891134 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s96rD_info:
	.quad	sat_s96rD_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:04:17.122609345 UTC

.section .text
.align 8
_c96Oq:
_c96Oq:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c96Pl
_c96Pk:
	leaq sat_s96rt_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %rbx,-48(%r12)
	leaq sat_s96re_info(%rip),%rax
	movq %rax,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	leaq sat_s96rf_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq block_c96Pc_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -55(%r12),%r14
	movq %rbx,%rax
	leaq -7(%r12),%rbx
	movq %rax,8(%rbp)
	jmp *stg_catch#@gotpcrel(%rip)
_c96Pl:
	movq $64,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c96Oq, .-_c96Oq


==================== Asm code ====================
2018-03-16 16:04:17.123313202 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96Oq_info:
	.quad	_c96Oq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.123970257 UTC

.section .text
.align 8
_c96Pc:
_c96Pc:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_c96Pe_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,%r14
	movq %rbx,8(%rbp)
	jmp Foreign.Marshal.Pool.freePool2_entry
	.size _c96Pc, .-_c96Pc


==================== Asm code ====================
2018-03-16 16:04:17.124556189 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96Pc_info:
	.quad	_c96Pc
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.125182912 UTC

.section .text
.align 8
_c96Pe:
_c96Pe:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c96Pe, .-_c96Pe


==================== Asm code ====================
2018-03-16 16:04:17.125778394 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96Pe_info:
	.quad	_c96Pe
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.126384066 UTC

.section .text
.align 8
sat_s96rE_entry:
_c96Pu:
	movq %r14,%rbx
	jmp *stg_maskUninterruptible#@gotpcrel(%rip)
	.size sat_s96rE_entry, .-sat_s96rE_entry


==================== Asm code ====================
2018-03-16 16:04:17.1269889 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s96rE_info:
	.quad	sat_s96rE_entry
	.quad	4294967296
	.quad	10
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:17.127708654 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.withPool1_entry
.type Foreign.Marshal.Pool.withPool1_entry, @object
Foreign.Marshal.Pool.withPool1_entry:
_c96PB:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c96PC
_c96PD:
	leaq block_c96Nn_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_c96PC:
	leaq Foreign.Marshal.Pool.withPool1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Pool.withPool1_entry, .-Foreign.Marshal.Pool.withPool1_entry


==================== Asm code ====================
2018-03-16 16:04:17.128377178 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.withPool1_info
.type Foreign.Marshal.Pool.withPool1_info, @object
Foreign.Marshal.Pool.withPool1_info:
	.quad	Foreign.Marshal.Pool.withPool1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:17.129295874 UTC

.section .text
.align 8
_c96Nn:
_c96Nn:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c96PG
_c96PF:
	testq %rbx,%rbx
	je _c96Pz
_u96PU:
	cmpq $1,%rbx
	je _c96PA
_c96Py:
	leaq sat_s96r8_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -6(%r12),%rax
_s96qB:
	leaq block_c96Nu_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
_c96PA:
	leaq sat_s96rE_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -6(%r12),%rax
	jmp _s96qB
_c96PG:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c96Pz:
	leaq sat_s96rD_info(%rip),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
	.size _c96Nn, .-_c96Nn


==================== Asm code ====================
2018-03-16 16:04:17.130114721 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96Nn_info:
	.quad	_c96Nn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.131267239 UTC

.section .text
.align 8
_c96Nu:
_c96Nu:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c96PN
_c96PM:
	leaq sat_s96qI_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq 8(%rbp),%rax
	leaq block_c96NG_info(%rip),%rcx
	movq %rcx,8(%rbp)
	leaq -24(%r12),%r14
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,16(%rbp)
	addq $8,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c96PN:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c96Nu, .-_c96Nu


==================== Asm code ====================
2018-03-16 16:04:17.131951817 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96Nu_info:
	.quad	_c96Nu
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.132688661 UTC

.section .text
.align 8
_c96NG:
_c96NG:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c96PQ
_c96PP:
	leaq sat_s96qX_info(%rip),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c96PH_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -7(%r12),%r14
	jmp *stg_catch#@gotpcrel(%rip)
_c96PQ:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c96NG, .-_c96NG


==================== Asm code ====================
2018-03-16 16:04:17.133800446 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96NG_info:
	.quad	_c96NG
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.134462877 UTC

.section .text
.align 8
_c96PH:
_c96PH:
	movq 8(%rbp),%rax
	movq 8(%rax),%rax
	leaq block_c96PJ_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,%r14
	movq %rbx,8(%rbp)
	jmp Foreign.Marshal.Pool.freePool2_entry
	.size _c96PH, .-_c96PH


==================== Asm code ====================
2018-03-16 16:04:17.1350152 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96PH_info:
	.quad	_c96PH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.135606213 UTC

.section .text
.align 8
_c96PJ:
_c96PJ:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c96PJ, .-_c96PJ


==================== Asm code ====================
2018-03-16 16:04:17.136199617 UTC

.section .data.rel.ro
.align 8
.align 1
block_c96PJ_info:
	.quad	_c96PJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:17.138461283 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Pool.withPool_closure
.type Foreign.Marshal.Pool.withPool_closure, @object
Foreign.Marshal.Pool.withPool_closure:
	.quad	Foreign.Marshal.Pool.withPool_info


==================== Asm code ====================
2018-03-16 16:04:17.139018084 UTC

.section .text
.align 8
.globl Foreign.Marshal.Pool.withPool_entry
.type Foreign.Marshal.Pool.withPool_entry, @object
Foreign.Marshal.Pool.withPool_entry:
_c96S2:
	jmp Foreign.Marshal.Pool.withPool1_entry
	.size Foreign.Marshal.Pool.withPool_entry, .-Foreign.Marshal.Pool.withPool_entry


==================== Asm code ====================
2018-03-16 16:04:17.139595647 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Pool.withPool_info
.type Foreign.Marshal.Pool.withPool_info, @object
Foreign.Marshal.Pool.withPool_info:
	.quad	Foreign.Marshal.Pool.withPool_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:17.141629 UTC

.section .data.rel.ro
.align 8
.align 1
S96tm_srt:
	.quad	Foreign.Marshal.Error.throwIf2_closure
	.quad	Foreign.Marshal.Alloc.realloc2_closure
	.quad	Foreign.Marshal.Pool.$wpooledReallocBytes_closure
	.quad	Foreign.Marshal.Pool.pooledRealloc1_closure
	.quad	GHC.Err.undefined_closure
	.quad	lvl11_r95nf_closure
	.quad	Foreign.Marshal.Pool.pooledReallocArray1_closure
	.quad	Foreign.Marshal.Pool.pooledReallocArray_closure
	.quad	Foreign.Marshal.Pool.pooledReallocArray2_closure
	.quad	lvl16_r95nk_closure
	.quad	Foreign.Marshal.Pool.pooledRealloc3_closure
	.quad	Foreign.Marshal.Pool.pooledRealloc_closure
	.quad	Foreign.Marshal.Alloc.malloc1_closure
	.quad	Foreign.Marshal.Pool.pooledMallocBytes1_closure
	.quad	lvl21_r95np_closure
	.quad	Foreign.Marshal.Pool.pooledMallocArray1_closure
	.quad	Foreign.Marshal.Pool.pooledMallocArray_closure
	.quad	Foreign.Marshal.Pool.$wpooledMallocArray0_closure
	.quad	Foreign.Marshal.Pool.pooledMallocArray2_closure
	.quad	lvl26_r95nu_closure
	.quad	Foreign.Marshal.Pool.pooledMalloc1_closure
	.quad	Foreign.Marshal.Pool.pooledMalloc_closure
	.quad	Foreign.Marshal.Pool.pooledNewArray2_closure
	.quad	Foreign.Marshal.Pool.pooledNewArray1_closure
	.quad	Foreign.Marshal.Pool.pooledNew1_closure

