
==================== Asm code ====================
2018-03-16 16:03:56.866575347 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.allocaBytes1_closure
.type Foreign.Marshal.Alloc.allocaBytes1_closure, @object
Foreign.Marshal.Alloc.allocaBytes1_closure:
	.quad	Foreign.Marshal.Alloc.allocaBytes1_info


==================== Asm code ====================
2018-03-16 16:03:56.867589965 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.allocaBytes1_entry
.type Foreign.Marshal.Alloc.allocaBytes1_entry, @object
Foreign.Marshal.Alloc.allocaBytes1_entry:
_c8NqJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NqK
_c8NqL:
	movq $block_c8NqG_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8NqG
_c8NqH:
	movq (%rbx),%rax
	jmp *(%rax)
_c8NqK:
	movl $Foreign.Marshal.Alloc.allocaBytes1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Alloc.allocaBytes1_entry, .-Foreign.Marshal.Alloc.allocaBytes1_entry


==================== Asm code ====================
2018-03-16 16:03:56.868348621 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.allocaBytes1_info
.type Foreign.Marshal.Alloc.allocaBytes1_info, @object
Foreign.Marshal.Alloc.allocaBytes1_info:
	.quad	Foreign.Marshal.Alloc.allocaBytes1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:56.870785382 UTC

.section .text
.align 8
_c8NqG:
_c8NqG:
	movq $block_c8NqO_info,(%rbp)
	movq 7(%rbx),%rbx
	jmp stg_newPinnedByteArray#
	.size _c8NqG, .-_c8NqG


==================== Asm code ====================
2018-03-16 16:03:56.871458155 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NqG_info:
	.quad	_c8NqG
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:56.872232467 UTC

.section .text
.align 8
_c8NqO:
_c8NqO:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8NqT
_c8NqS:
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	leaq 16(%rbx),%rax
	movq %rax,(%r12)
	movq $block_c8NqY_info,(%rbp)
	leaq -7(%r12),%r14
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_ap_pv_fast
_c8NqT:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8NqO, .-_c8NqO


==================== Asm code ====================
2018-03-16 16:03:56.872992168 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NqO_info:
	.quad	_c8NqO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:56.873641446 UTC

.section .text
.align 8
_c8NqY:
_c8NqY:
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8NqY, .-_c8NqY


==================== Asm code ====================
2018-03-16 16:03:56.874269609 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NqY_info:
	.quad	_c8NqY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:56.876628962 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.allocaBytes_closure
.type Foreign.Marshal.Alloc.allocaBytes_closure, @object
Foreign.Marshal.Alloc.allocaBytes_closure:
	.quad	Foreign.Marshal.Alloc.allocaBytes_info


==================== Asm code ====================
2018-03-16 16:03:56.877326202 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.allocaBytes_entry
.type Foreign.Marshal.Alloc.allocaBytes_entry, @object
Foreign.Marshal.Alloc.allocaBytes_entry:
_c8Nro:
	jmp Foreign.Marshal.Alloc.allocaBytes1_entry
	.size Foreign.Marshal.Alloc.allocaBytes_entry, .-Foreign.Marshal.Alloc.allocaBytes_entry


==================== Asm code ====================
2018-03-16 16:03:56.877935149 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.allocaBytes_info
.type Foreign.Marshal.Alloc.allocaBytes_info, @object
Foreign.Marshal.Alloc.allocaBytes_info:
	.quad	Foreign.Marshal.Alloc.allocaBytes_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:56.882874462 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.allocaBytesAligned1_closure
.type Foreign.Marshal.Alloc.allocaBytesAligned1_closure, @object
Foreign.Marshal.Alloc.allocaBytesAligned1_closure:
	.quad	Foreign.Marshal.Alloc.allocaBytesAligned1_info


==================== Asm code ====================
2018-03-16 16:03:56.883712595 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.allocaBytesAligned1_entry
.type Foreign.Marshal.Alloc.allocaBytesAligned1_entry, @object
Foreign.Marshal.Alloc.allocaBytesAligned1_entry:
_c8NrC:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NrG
_c8NrH:
	movq $block_c8Nrz_info,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8Nrz
_c8NrA:
	movq (%rbx),%rax
	jmp *(%rax)
_c8NrG:
	movl $Foreign.Marshal.Alloc.allocaBytesAligned1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Alloc.allocaBytesAligned1_entry, .-Foreign.Marshal.Alloc.allocaBytesAligned1_entry


==================== Asm code ====================
2018-03-16 16:03:56.884419621 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.allocaBytesAligned1_info
.type Foreign.Marshal.Alloc.allocaBytesAligned1_info, @object
Foreign.Marshal.Alloc.allocaBytesAligned1_info:
	.quad	Foreign.Marshal.Alloc.allocaBytesAligned1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:03:56.885151606 UTC

.section .text
.align 8
_c8Nrz:
_c8Nrz:
	movq $block_c8NrF_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8NrF
_c8NrJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8Nrz, .-_c8Nrz


==================== Asm code ====================
2018-03-16 16:03:56.88585285 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Nrz_info:
	.quad	_c8Nrz
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:56.886538962 UTC

.section .text
.align 8
_c8NrF:
_c8NrF:
	movq 8(%rbp),%rax
	movq $block_c8NrN_info,8(%rbp)
	movq 7(%rbx),%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp stg_newAlignedPinnedByteArray#
	.size _c8NrF, .-_c8NrF


==================== Asm code ====================
2018-03-16 16:03:56.887183365 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NrF_info:
	.quad	_c8NrF
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:56.887958484 UTC

.section .text
.align 8
_c8NrN:
_c8NrN:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8NrS
_c8NrR:
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	leaq 16(%rbx),%rax
	movq %rax,(%r12)
	movq $block_c8NrX_info,(%rbp)
	leaq -7(%r12),%r14
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_ap_pv_fast
_c8NrS:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8NrN, .-_c8NrN


==================== Asm code ====================
2018-03-16 16:03:56.888684574 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NrN_info:
	.quad	_c8NrN
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:56.889321674 UTC

.section .text
.align 8
_c8NrX:
_c8NrX:
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8NrX, .-_c8NrX


==================== Asm code ====================
2018-03-16 16:03:56.889965796 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NrX_info:
	.quad	_c8NrX
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:56.892302964 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.allocaBytesAligned_closure
.type Foreign.Marshal.Alloc.allocaBytesAligned_closure, @object
Foreign.Marshal.Alloc.allocaBytesAligned_closure:
	.quad	Foreign.Marshal.Alloc.allocaBytesAligned_info


==================== Asm code ====================
2018-03-16 16:03:56.892989029 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.allocaBytesAligned_entry
.type Foreign.Marshal.Alloc.allocaBytesAligned_entry, @object
Foreign.Marshal.Alloc.allocaBytesAligned_entry:
_c8Nss:
	jmp Foreign.Marshal.Alloc.allocaBytesAligned1_entry
	.size Foreign.Marshal.Alloc.allocaBytesAligned_entry, .-Foreign.Marshal.Alloc.allocaBytesAligned_entry


==================== Asm code ====================
2018-03-16 16:03:56.893879238 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.allocaBytesAligned_info
.type Foreign.Marshal.Alloc.allocaBytesAligned_info, @object
Foreign.Marshal.Alloc.allocaBytesAligned_info:
	.quad	Foreign.Marshal.Alloc.allocaBytesAligned_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:03:56.895723423 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_r8N65_bytes:
	.asciz "undefined"


==================== Asm code ====================
2018-03-16 16:03:56.89846452 UTC

.section .data
.align 8
.align 1
lvl1_r8N66_closure:
	.quad	lvl1_r8N66_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.899353254 UTC

.section .text
.align 8
lvl1_r8N66_entry:
_c8NsG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NsH
_c8NsI:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8NsF
_c8NsE:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl_r8N65_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8NsH:
	jmp *-16(%r13)
_c8NsF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl1_r8N66_entry, .-lvl1_r8N66_entry


==================== Asm code ====================
2018-03-16 16:03:56.900156944 UTC

.section .data.rel.ro
.align 8
.align 1
lvl1_r8N66_info:
	.quad	lvl1_r8N66_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:56.901944605 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.Marshal.Alloc.$trModule4_bytes
.type Foreign.Marshal.Alloc.$trModule4_bytes, @object
Foreign.Marshal.Alloc.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:03:56.904685608 UTC

.section .data
.align 8
.align 1
lvl2_r8N67_closure:
	.quad	lvl2_r8N67_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.90682536 UTC

.section .text
.align 8
lvl2_r8N67_entry:
_c8NsX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NsY
_c8NsZ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8NsW
_c8NsV:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Foreign.Marshal.Alloc.$trModule4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8NsY:
	jmp *-16(%r13)
_c8NsW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl2_r8N67_entry, .-lvl2_r8N67_entry


==================== Asm code ====================
2018-03-16 16:03:56.907551302 UTC

.section .data.rel.ro
.align 8
.align 1
lvl2_r8N67_info:
	.quad	lvl2_r8N67_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:56.909379432 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.Marshal.Alloc.$trModule2_bytes
.type Foreign.Marshal.Alloc.$trModule2_bytes, @object
Foreign.Marshal.Alloc.$trModule2_bytes:
	.asciz "Foreign.Marshal.Alloc"


==================== Asm code ====================
2018-03-16 16:03:56.911966958 UTC

.section .data
.align 8
.align 1
lvl3_r8N68_closure:
	.quad	lvl3_r8N68_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.912848805 UTC

.section .text
.align 8
lvl3_r8N68_entry:
_c8Nte:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Ntf
_c8Ntg:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8Ntd
_c8Ntc:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Foreign.Marshal.Alloc.$trModule2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8Ntf:
	jmp *-16(%r13)
_c8Ntd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl3_r8N68_entry, .-lvl3_r8N68_entry


==================== Asm code ====================
2018-03-16 16:03:56.913615572 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_r8N68_info:
	.quad	lvl3_r8N68_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:56.91547718 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl4_r8N69_bytes:
	.asciz "./Foreign/Marshal/Alloc.hs"


==================== Asm code ====================
2018-03-16 16:03:56.91841657 UTC

.section .data
.align 8
.align 1
lvl5_r8N6a_closure:
	.quad	lvl5_r8N6a_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.91926741 UTC

.section .text
.align 8
lvl5_r8N6a_entry:
_c8Ntv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Ntw
_c8Ntx:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8Ntu
_c8Ntt:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl4_r8N69_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8Ntw:
	jmp *-16(%r13)
_c8Ntu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl5_r8N6a_entry, .-lvl5_r8N6a_entry


==================== Asm code ====================
2018-03-16 16:03:56.920026005 UTC

.section .data.rel.ro
.align 8
.align 1
lvl5_r8N6a_info:
	.quad	lvl5_r8N6a_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:56.921809832 UTC

.section .data
.align 8
.align 1
lvl6_r8N6b_closure:
	.quad	GHC.Types.I#_con_info
	.quad	117


==================== Asm code ====================
2018-03-16 16:03:56.923584332 UTC

.section .data
.align 8
.align 1
lvl7_r8N6c_closure:
	.quad	GHC.Types.I#_con_info
	.quad	31


==================== Asm code ====================
2018-03-16 16:03:56.925348794 UTC

.section .data
.align 8
.align 1
lvl8_r8N6d_closure:
	.quad	GHC.Types.I#_con_info
	.quad	40


==================== Asm code ====================
2018-03-16 16:03:56.927498692 UTC

.section .data
.align 8
.align 1
lvl9_r8N6e_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl2_r8N67_closure
	.quad	lvl3_r8N68_closure
	.quad	lvl5_r8N6a_closure
	.quad	lvl6_r8N6b_closure+1
	.quad	lvl7_r8N6c_closure+1
	.quad	lvl6_r8N6b_closure+1
	.quad	lvl8_r8N6d_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.929485325 UTC

.section .data
.align 8
.align 1
lvl10_r8N6f_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl1_r8N66_closure
	.quad	lvl9_r8N6e_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.932213346 UTC

.section .data
.align 8
.align 1
lvl11_r8N6g_closure:
	.quad	lvl11_r8N6g_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.933148057 UTC

.section .text
.align 8
lvl11_r8N6g_entry:
_c8NtQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NtR
_c8NtS:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8NtP
_c8NtO:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl10_r8N6f_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Err.undefined_entry
_c8NtR:
	jmp *-16(%r13)
_c8NtP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl11_r8N6g_entry, .-lvl11_r8N6g_entry


==================== Asm code ====================
2018-03-16 16:03:56.933896622 UTC

.section .data.rel.ro
.align 8
.align 1
lvl11_r8N6g_info:
	.quad	lvl11_r8N6g_entry
	.quad	0
	.quad	12884901909
	.quad	S8NaZ_srt


==================== Asm code ====================
2018-03-16 16:03:56.935652274 UTC

.section .data
.align 8
.align 1
lvl12_r8N6h_closure:
	.quad	GHC.Types.I#_con_info
	.quad	60


==================== Asm code ====================
2018-03-16 16:03:56.937952316 UTC

.section .data
.align 8
.align 1
lvl13_r8N6i_closure:
	.quad	GHC.Types.I#_con_info
	.quad	69


==================== Asm code ====================
2018-03-16 16:03:56.93981466 UTC

.section .data
.align 8
.align 1
lvl14_r8N6j_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl2_r8N67_closure
	.quad	lvl3_r8N68_closure
	.quad	lvl5_r8N6a_closure
	.quad	lvl6_r8N6b_closure+1
	.quad	lvl12_r8N6h_closure+1
	.quad	lvl6_r8N6b_closure+1
	.quad	lvl13_r8N6i_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.941593121 UTC

.section .data
.align 8
.align 1
lvl15_r8N6k_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl1_r8N66_closure
	.quad	lvl14_r8N6j_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.944217256 UTC

.section .data
.align 8
.align 1
lvl16_r8N6l_closure:
	.quad	lvl16_r8N6l_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.945092101 UTC

.section .text
.align 8
lvl16_r8N6l_entry:
_c8Nua:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Nub
_c8Nuc:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8Nu9
_c8Nu8:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl15_r8N6k_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Err.undefined_entry
_c8Nub:
	jmp *-16(%r13)
_c8Nu9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl16_r8N6l_entry, .-lvl16_r8N6l_entry


==================== Asm code ====================
2018-03-16 16:03:56.945807621 UTC

.section .data.rel.ro
.align 8
.align 1
lvl16_r8N6l_info:
	.quad	lvl16_r8N6l_entry
	.quad	0
	.quad	21474836501
	.quad	S8NaZ_srt


==================== Asm code ====================
2018-03-16 16:03:56.952271379 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.alloca_closure
.type Foreign.Marshal.Alloc.alloca_closure, @object
Foreign.Marshal.Alloc.alloca_closure:
	.quad	Foreign.Marshal.Alloc.alloca_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.953009227 UTC

.section .text
.align 8
ds_s8N7h_entry:
_c8Nus:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Nut
_c8Nuu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $lvl11_r8N6g_closure,-24(%rbp)
	addq $-32,%rbp
	jmp Foreign.Storable.sizeOf_entry
_c8Nut:
	jmp *-16(%r13)
	.size ds_s8N7h_entry, .-ds_s8N7h_entry


==================== Asm code ====================
2018-03-16 16:03:56.953717173 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s8N7h_info:
	.quad	ds_s8N7h_entry
	.quad	1
	.quad	4294967312
	.quad	S8NaZ_srt+24


==================== Asm code ====================
2018-03-16 16:03:56.954407061 UTC

.section .text
.align 8
ds1_s8N7i_entry:
_c8Nuz:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NuA
_c8NuB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $lvl16_r8N6l_closure,-24(%rbp)
	addq $-32,%rbp
	jmp Foreign.Storable.alignment_entry
_c8NuA:
	jmp *-16(%r13)
	.size ds1_s8N7i_entry, .-ds1_s8N7i_entry


==================== Asm code ====================
2018-03-16 16:03:56.955063126 UTC

.section .data.rel.ro
.align 8
.align 1
ds1_s8N7i_info:
	.quad	ds1_s8N7i_entry
	.quad	1
	.quad	4294967312
	.quad	S8NaZ_srt+32


==================== Asm code ====================
2018-03-16 16:03:56.955838274 UTC

.section .text
.align 8
sat_s8N7B_entry:
_c8NuK:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NuO
_c8NuP:
	movq $block_c8NuH_info,-24(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8NuH
_c8NuI:
	movq (%rbx),%rax
	jmp *(%rax)
_c8NuO:
	jmp *-8(%r13)
	.size sat_s8N7B_entry, .-sat_s8N7B_entry


==================== Asm code ====================
2018-03-16 16:03:56.956476656 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8N7B_info:
	.quad	sat_s8N7B_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:56.957165232 UTC

.section .text
.align 8
_c8NuH:
_c8NuH:
	movq $block_c8NuN_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8NuN
_c8NuR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8NuH, .-_c8NuH


==================== Asm code ====================
2018-03-16 16:03:56.958068375 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NuH_info:
	.quad	_c8NuH
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:56.958662015 UTC

.section .text
.align 8
_c8NuN:
_c8NuN:
	movq 8(%rbp),%rax
	movq $block_c8NuV_info,8(%rbp)
	movq 7(%rbx),%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp stg_newAlignedPinnedByteArray#
	.size _c8NuN, .-_c8NuN


==================== Asm code ====================
2018-03-16 16:03:56.959258999 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NuN_info:
	.quad	_c8NuN
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:56.959989618 UTC

.section .text
.align 8
_c8NuV:
_c8NuV:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8Nv0
_c8NuZ:
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	leaq 16(%rbx),%rax
	movq %rax,(%r12)
	movq $block_c8Nv5_info,(%rbp)
	leaq -7(%r12),%r14
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_ap_pv_fast
_c8Nv0:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8NuV, .-_c8NuV


==================== Asm code ====================
2018-03-16 16:03:56.960641625 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NuV_info:
	.quad	_c8NuV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:56.961268379 UTC

.section .text
.align 8
_c8Nv5:
_c8Nv5:
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8Nv5, .-_c8Nv5


==================== Asm code ====================
2018-03-16 16:03:56.961832827 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Nv5_info:
	.quad	_c8Nv5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:56.962551094 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.alloca_entry
.type Foreign.Marshal.Alloc.alloca_entry, @object
Foreign.Marshal.Alloc.alloca_entry:
_c8Nvb:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c8Nvf
_c8Nve:
	movq $ds_s8N7h_info,-64(%r12)
	movq %r14,-48(%r12)
	movq $ds1_s8N7i_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $sat_s8N7B_info,-16(%r12)
	leaq -64(%r12),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8Nvf:
	movq $72,904(%r13)
	movl $Foreign.Marshal.Alloc.alloca_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Alloc.alloca_entry, .-Foreign.Marshal.Alloc.alloca_entry


==================== Asm code ====================
2018-03-16 16:03:56.963270769 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.alloca_info
.type Foreign.Marshal.Alloc.alloca_info, @object
Foreign.Marshal.Alloc.alloca_info:
	.quad	Foreign.Marshal.Alloc.alloca_entry
	.quad	0
	.quad	30064771086
	.quad	4294967301
	.quad	S8NaZ_srt+24


==================== Asm code ====================
2018-03-16 16:03:56.964999554 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.$trModule3_closure
.type Foreign.Marshal.Alloc.$trModule3_closure, @object
Foreign.Marshal.Alloc.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Foreign.Marshal.Alloc.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:03:56.966731122 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.$trModule1_closure
.type Foreign.Marshal.Alloc.$trModule1_closure, @object
Foreign.Marshal.Alloc.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Foreign.Marshal.Alloc.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:03:56.968488481 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.$trModule_closure
.type Foreign.Marshal.Alloc.$trModule_closure, @object
Foreign.Marshal.Alloc.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	Foreign.Marshal.Alloc.$trModule3_closure+1
	.quad	Foreign.Marshal.Alloc.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:56.970957748 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.Marshal.Alloc.malloc4_bytes
.type Foreign.Marshal.Alloc.malloc4_bytes, @object
Foreign.Marshal.Alloc.malloc4_bytes:
	.asciz "malloc"


==================== Asm code ====================
2018-03-16 16:03:56.974182127 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.malloc3_closure
.type Foreign.Marshal.Alloc.malloc3_closure, @object
Foreign.Marshal.Alloc.malloc3_closure:
	.quad	Foreign.Marshal.Alloc.malloc3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.975193843 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.malloc3_entry
.type Foreign.Marshal.Alloc.malloc3_entry, @object
Foreign.Marshal.Alloc.malloc3_entry:
_c8NvZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Nw0
_c8Nw1:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8NvY
_c8NvX:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Foreign.Marshal.Alloc.malloc4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8Nw0:
	jmp *-16(%r13)
_c8NvY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Alloc.malloc3_entry, .-Foreign.Marshal.Alloc.malloc3_entry


==================== Asm code ====================
2018-03-16 16:03:56.975904891 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.malloc3_info
.type Foreign.Marshal.Alloc.malloc3_info, @object
Foreign.Marshal.Alloc.malloc3_info:
	.quad	Foreign.Marshal.Alloc.malloc3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:56.977795813 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.Marshal.Alloc.calloc4_bytes
.type Foreign.Marshal.Alloc.calloc4_bytes, @object
Foreign.Marshal.Alloc.calloc4_bytes:
	.asciz "out of memory"


==================== Asm code ====================
2018-03-16 16:03:56.980594591 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.calloc3_closure
.type Foreign.Marshal.Alloc.calloc3_closure, @object
Foreign.Marshal.Alloc.calloc3_closure:
	.quad	Foreign.Marshal.Alloc.calloc3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.981566579 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.calloc3_entry
.type Foreign.Marshal.Alloc.calloc3_entry, @object
Foreign.Marshal.Alloc.calloc3_entry:
_c8Nwg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Nwh
_c8Nwi:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8Nwf
_c8Nwe:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Foreign.Marshal.Alloc.calloc4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8Nwh:
	jmp *-16(%r13)
_c8Nwf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Alloc.calloc3_entry, .-Foreign.Marshal.Alloc.calloc3_entry


==================== Asm code ====================
2018-03-16 16:03:56.982285562 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.calloc3_info
.type Foreign.Marshal.Alloc.calloc3_info, @object
Foreign.Marshal.Alloc.calloc3_info:
	.quad	Foreign.Marshal.Alloc.calloc3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:56.984290088 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.malloc2_closure
.type Foreign.Marshal.Alloc.malloc2_closure, @object
Foreign.Marshal.Alloc.malloc2_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.ResourceExhausted_closure+1
	.quad	Foreign.Marshal.Alloc.malloc3_closure
	.quad	Foreign.Marshal.Alloc.calloc3_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.986948789 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.malloc1_closure
.type Foreign.Marshal.Alloc.malloc1_closure, @object
Foreign.Marshal.Alloc.malloc1_closure:
	.quad	Foreign.Marshal.Alloc.malloc1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.987866293 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.malloc1_entry
.type Foreign.Marshal.Alloc.malloc1_entry, @object
Foreign.Marshal.Alloc.malloc1_entry:
_c8Nwx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Nwy
_c8Nwz:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8Nww
_c8Nwv:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Foreign.Marshal.Alloc.malloc2_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_c8Nwy:
	jmp *-16(%r13)
_c8Nww:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Alloc.malloc1_entry, .-Foreign.Marshal.Alloc.malloc1_entry


==================== Asm code ====================
2018-03-16 16:03:56.988592574 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.malloc1_info
.type Foreign.Marshal.Alloc.malloc1_info, @object
Foreign.Marshal.Alloc.malloc1_info:
	.quad	Foreign.Marshal.Alloc.malloc1_entry
	.quad	0
	.quad	12884901909
	.quad	S8NaZ_srt+48


==================== Asm code ====================
2018-03-16 16:03:56.991960204 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.mallocBytes1_closure
.type Foreign.Marshal.Alloc.mallocBytes1_closure, @object
Foreign.Marshal.Alloc.mallocBytes1_closure:
	.quad	Foreign.Marshal.Alloc.mallocBytes1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.992730621 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.mallocBytes1_entry
.type Foreign.Marshal.Alloc.mallocBytes1_entry, @object
Foreign.Marshal.Alloc.mallocBytes1_entry:
_c8NwO:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NwP
_c8NwQ:
	movq $block_c8NwL_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8NwL
_c8NwM:
	movq (%rbx),%rax
	jmp *(%rax)
_c8NwP:
	movl $Foreign.Marshal.Alloc.mallocBytes1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Alloc.mallocBytes1_entry, .-Foreign.Marshal.Alloc.mallocBytes1_entry


==================== Asm code ====================
2018-03-16 16:03:56.993430392 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.mallocBytes1_info
.type Foreign.Marshal.Alloc.mallocBytes1_info, @object
Foreign.Marshal.Alloc.mallocBytes1_info:
	.quad	Foreign.Marshal.Alloc.mallocBytes1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	S8NaZ_srt+64


==================== Asm code ====================
2018-03-16 16:03:56.994250879 UTC

.section .text
.align 8
_c8NwL:
_c8NwL:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8NwV
_c8NwU:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call malloc
	addq $8,%rsp
	testq %rax,%rax
	je _c8Nx7
_c8Nx6:
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Nx7:
	addq $-16,%r12
	movl $Foreign.Marshal.Alloc.malloc1_closure,%ebx
	addq $8,%rbp
	jmp stg_raiseIO#
_c8NwV:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8NwL, .-_c8NwL


==================== Asm code ====================
2018-03-16 16:03:56.994952591 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NwL_info:
	.quad	_c8NwL
	.quad	0
	.quad	4294967326
	.quad	S8NaZ_srt+64


==================== Asm code ====================
2018-03-16 16:03:56.997012598 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.mallocBytes_closure
.type Foreign.Marshal.Alloc.mallocBytes_closure, @object
Foreign.Marshal.Alloc.mallocBytes_closure:
	.quad	Foreign.Marshal.Alloc.mallocBytes_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:56.997650334 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.mallocBytes_entry
.type Foreign.Marshal.Alloc.mallocBytes_entry, @object
Foreign.Marshal.Alloc.mallocBytes_entry:
_c8Nxn:
	jmp Foreign.Marshal.Alloc.mallocBytes1_entry
	.size Foreign.Marshal.Alloc.mallocBytes_entry, .-Foreign.Marshal.Alloc.mallocBytes_entry


==================== Asm code ====================
2018-03-16 16:03:56.99820423 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.mallocBytes_info
.type Foreign.Marshal.Alloc.mallocBytes_info, @object
Foreign.Marshal.Alloc.mallocBytes_info:
	.quad	Foreign.Marshal.Alloc.mallocBytes_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S8NaZ_srt+72


==================== Asm code ====================
2018-03-16 16:03:56.999837681 UTC

.section .data
.align 8
.align 1
lvl17_r8N6m_closure:
	.quad	GHC.Types.I#_con_info
	.quad	84


==================== Asm code ====================
2018-03-16 16:03:57.001476899 UTC

.section .data
.align 8
.align 1
lvl18_r8N6n_closure:
	.quad	GHC.Types.I#_con_info
	.quad	32


==================== Asm code ====================
2018-03-16 16:03:57.003048253 UTC

.section .data
.align 8
.align 1
lvl19_r8N6o_closure:
	.quad	GHC.Types.I#_con_info
	.quad	41


==================== Asm code ====================
2018-03-16 16:03:57.005949528 UTC

.section .data
.align 8
.align 1
lvl20_r8N6p_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl2_r8N67_closure
	.quad	lvl3_r8N68_closure
	.quad	lvl5_r8N6a_closure
	.quad	lvl17_r8N6m_closure+1
	.quad	lvl18_r8N6n_closure+1
	.quad	lvl17_r8N6m_closure+1
	.quad	lvl19_r8N6o_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.007749349 UTC

.section .data
.align 8
.align 1
lvl21_r8N6q_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl1_r8N66_closure
	.quad	lvl20_r8N6p_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.010585318 UTC

.section .data
.align 8
.align 1
lvl22_r8N6r_closure:
	.quad	lvl22_r8N6r_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.011561705 UTC

.section .text
.align 8
lvl22_r8N6r_entry:
_c8NxF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NxG
_c8NxH:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8NxE
_c8NxD:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl21_r8N6q_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Err.undefined_entry
_c8NxG:
	jmp *-16(%r13)
_c8NxE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl22_r8N6r_entry, .-lvl22_r8N6r_entry


==================== Asm code ====================
2018-03-16 16:03:57.012259086 UTC

.section .data.rel.ro
.align 8
.align 1
lvl22_r8N6r_info:
	.quad	lvl22_r8N6r_entry
	.quad	0
	.quad	4402341478421
	.quad	S8NaZ_srt


==================== Asm code ====================
2018-03-16 16:03:57.015850409 UTC

.section .data
.align 8
.align 1
malloc5_r8N6s_closure:
	.quad	malloc5_r8N6s_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.016627046 UTC

.section .text
.align 8
malloc5_r8N6s_entry:
_c8NxV:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NxW
_c8NxX:
	movq $block_c8NxT_info,-8(%rbp)
	movq $stg_ap_p_info,-24(%rbp)
	movq $lvl22_r8N6r_closure,-16(%rbp)
	addq $-24,%rbp
	jmp Foreign.Storable.sizeOf_entry
_c8NxW:
	movl $malloc5_r8N6s_closure,%ebx
	jmp *-8(%r13)
	.size malloc5_r8N6s_entry, .-malloc5_r8N6s_entry


==================== Asm code ====================
2018-03-16 16:03:57.017302454 UTC

.section .data.rel.ro
.align 8
.align 1
malloc5_r8N6s_info:
	.quad	malloc5_r8N6s_entry
	.quad	0
	.quad	107374182414
	.quad	8589934597
	.quad	S8NaZ_srt+64


==================== Asm code ====================
2018-03-16 16:03:57.018201453 UTC

.section .text
.align 8
_c8NxT:
_c8NxT:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8Ny2
_c8Ny1:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call malloc
	addq $8,%rsp
	testq %rax,%rax
	je _c8Nye
_c8Nyd:
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Nye:
	addq $-16,%r12
	movl $Foreign.Marshal.Alloc.malloc1_closure,%ebx
	addq $8,%rbp
	jmp stg_raiseIO#
_c8Ny2:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8NxT, .-_c8NxT


==================== Asm code ====================
2018-03-16 16:03:57.018945397 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NxT_info:
	.quad	_c8NxT
	.quad	0
	.quad	4294967326
	.quad	S8NaZ_srt+64


==================== Asm code ====================
2018-03-16 16:03:57.021291561 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.malloc_closure
.type Foreign.Marshal.Alloc.malloc_closure, @object
Foreign.Marshal.Alloc.malloc_closure:
	.quad	Foreign.Marshal.Alloc.malloc_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.021922067 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.malloc_entry
.type Foreign.Marshal.Alloc.malloc_entry, @object
Foreign.Marshal.Alloc.malloc_entry:
_c8Nys:
	jmp malloc5_r8N6s_entry
	.size Foreign.Marshal.Alloc.malloc_entry, .-Foreign.Marshal.Alloc.malloc_entry


==================== Asm code ====================
2018-03-16 16:03:57.022573217 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.malloc_info
.type Foreign.Marshal.Alloc.malloc_info, @object
Foreign.Marshal.Alloc.malloc_info:
	.quad	Foreign.Marshal.Alloc.malloc_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S8NaZ_srt+96


==================== Asm code ====================
2018-03-16 16:03:57.024422507 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.Marshal.Alloc.calloc6_bytes
.type Foreign.Marshal.Alloc.calloc6_bytes, @object
Foreign.Marshal.Alloc.calloc6_bytes:
	.asciz "calloc"


==================== Asm code ====================
2018-03-16 16:03:57.027232062 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.calloc5_closure
.type Foreign.Marshal.Alloc.calloc5_closure, @object
Foreign.Marshal.Alloc.calloc5_closure:
	.quad	Foreign.Marshal.Alloc.calloc5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.028194545 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.calloc5_entry
.type Foreign.Marshal.Alloc.calloc5_entry, @object
Foreign.Marshal.Alloc.calloc5_entry:
_c8NyG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NyH
_c8NyI:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8NyF
_c8NyE:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Foreign.Marshal.Alloc.calloc6_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8NyH:
	jmp *-16(%r13)
_c8NyF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Alloc.calloc5_entry, .-Foreign.Marshal.Alloc.calloc5_entry


==================== Asm code ====================
2018-03-16 16:03:57.028935012 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.calloc5_info
.type Foreign.Marshal.Alloc.calloc5_info, @object
Foreign.Marshal.Alloc.calloc5_info:
	.quad	Foreign.Marshal.Alloc.calloc5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:57.030879584 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.calloc2_closure
.type Foreign.Marshal.Alloc.calloc2_closure, @object
Foreign.Marshal.Alloc.calloc2_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.ResourceExhausted_closure+1
	.quad	Foreign.Marshal.Alloc.calloc5_closure
	.quad	Foreign.Marshal.Alloc.calloc3_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.033672839 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.calloc1_closure
.type Foreign.Marshal.Alloc.calloc1_closure, @object
Foreign.Marshal.Alloc.calloc1_closure:
	.quad	Foreign.Marshal.Alloc.calloc1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.034441934 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.calloc1_entry
.type Foreign.Marshal.Alloc.calloc1_entry, @object
Foreign.Marshal.Alloc.calloc1_entry:
_c8NyX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NyY
_c8NyZ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8NyW
_c8NyV:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Foreign.Marshal.Alloc.calloc2_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_c8NyY:
	jmp *-16(%r13)
_c8NyW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Alloc.calloc1_entry, .-Foreign.Marshal.Alloc.calloc1_entry


==================== Asm code ====================
2018-03-16 16:03:57.035063968 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.calloc1_info
.type Foreign.Marshal.Alloc.calloc1_info, @object
Foreign.Marshal.Alloc.calloc1_info:
	.quad	Foreign.Marshal.Alloc.calloc1_entry
	.quad	0
	.quad	554050781205
	.quad	S8NaZ_srt+48


==================== Asm code ====================
2018-03-16 16:03:57.038201336 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.callocBytes1_closure
.type Foreign.Marshal.Alloc.callocBytes1_closure, @object
Foreign.Marshal.Alloc.callocBytes1_closure:
	.quad	Foreign.Marshal.Alloc.callocBytes1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.039333224 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.callocBytes1_entry
.type Foreign.Marshal.Alloc.callocBytes1_entry, @object
Foreign.Marshal.Alloc.callocBytes1_entry:
_c8Nze:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8Nzf
_c8Nzg:
	movq $block_c8Nzb_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8Nzb
_c8Nzc:
	movq (%rbx),%rax
	jmp *(%rax)
_c8Nzf:
	movl $Foreign.Marshal.Alloc.callocBytes1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Alloc.callocBytes1_entry, .-Foreign.Marshal.Alloc.callocBytes1_entry


==================== Asm code ====================
2018-03-16 16:03:57.040056227 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.callocBytes1_info
.type Foreign.Marshal.Alloc.callocBytes1_info, @object
Foreign.Marshal.Alloc.callocBytes1_info:
	.quad	Foreign.Marshal.Alloc.callocBytes1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	S8NaZ_srt+112


==================== Asm code ====================
2018-03-16 16:03:57.041068099 UTC

.section .text
.align 8
_c8Nzb:
_c8Nzb:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8Nzl
_c8Nzk:
	subq $8,%rsp
	movl $1,%edi
	movq 7(%rbx),%rsi
	xorl %eax,%eax
	call calloc
	addq $8,%rsp
	testq %rax,%rax
	je _c8Nzy
_c8Nzx:
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8Nzy:
	addq $-16,%r12
	movl $Foreign.Marshal.Alloc.calloc1_closure,%ebx
	addq $8,%rbp
	jmp stg_raiseIO#
_c8Nzl:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8Nzb, .-_c8Nzb


==================== Asm code ====================
2018-03-16 16:03:57.041878326 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8Nzb_info:
	.quad	_c8Nzb
	.quad	0
	.quad	4294967326
	.quad	S8NaZ_srt+112


==================== Asm code ====================
2018-03-16 16:03:57.044296731 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.callocBytes_closure
.type Foreign.Marshal.Alloc.callocBytes_closure, @object
Foreign.Marshal.Alloc.callocBytes_closure:
	.quad	Foreign.Marshal.Alloc.callocBytes_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.044976574 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.callocBytes_entry
.type Foreign.Marshal.Alloc.callocBytes_entry, @object
Foreign.Marshal.Alloc.callocBytes_entry:
_c8NzO:
	jmp Foreign.Marshal.Alloc.callocBytes1_entry
	.size Foreign.Marshal.Alloc.callocBytes_entry, .-Foreign.Marshal.Alloc.callocBytes_entry


==================== Asm code ====================
2018-03-16 16:03:57.046199459 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.callocBytes_info
.type Foreign.Marshal.Alloc.callocBytes_info, @object
Foreign.Marshal.Alloc.callocBytes_info:
	.quad	Foreign.Marshal.Alloc.callocBytes_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S8NaZ_srt+120


==================== Asm code ====================
2018-03-16 16:03:57.048033297 UTC

.section .data
.align 8
.align 1
lvl23_r8N6t_closure:
	.quad	GHC.Types.I#_con_info
	.quad	90


==================== Asm code ====================
2018-03-16 16:03:57.049926731 UTC

.section .data
.align 8
.align 1
lvl24_r8N6u_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl2_r8N67_closure
	.quad	lvl3_r8N68_closure
	.quad	lvl5_r8N6a_closure
	.quad	lvl23_r8N6t_closure+1
	.quad	lvl7_r8N6c_closure+1
	.quad	lvl23_r8N6t_closure+1
	.quad	lvl8_r8N6d_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.051811005 UTC

.section .data
.align 8
.align 1
lvl25_r8N6v_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl1_r8N66_closure
	.quad	lvl24_r8N6u_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.054677092 UTC

.section .data
.align 8
.align 1
lvl26_r8N6w_closure:
	.quad	lvl26_r8N6w_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.055616544 UTC

.section .text
.align 8
lvl26_r8N6w_entry:
_c8NA4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NA5
_c8NA6:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8NA3
_c8NA2:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl25_r8N6v_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Err.undefined_entry
_c8NA5:
	jmp *-16(%r13)
_c8NA3:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl26_r8N6w_entry, .-lvl26_r8N6w_entry


==================== Asm code ====================
2018-03-16 16:03:57.056328219 UTC

.section .data.rel.ro
.align 8
.align 1
lvl26_r8N6w_info:
	.quad	lvl26_r8N6w_entry
	.quad	0
	.quad	281479271677973
	.quad	S8NaZ_srt


==================== Asm code ====================
2018-03-16 16:03:57.05981657 UTC

.section .data
.align 8
.align 1
calloc7_r8N6x_closure:
	.quad	calloc7_r8N6x_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.060649858 UTC

.section .text
.align 8
calloc7_r8N6x_entry:
_c8NAk:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NAl
_c8NAm:
	movq $block_c8NAi_info,-8(%rbp)
	movq $stg_ap_p_info,-24(%rbp)
	movq $lvl26_r8N6w_closure,-16(%rbp)
	addq $-24,%rbp
	jmp Foreign.Storable.sizeOf_entry
_c8NAl:
	movl $calloc7_r8N6x_closure,%ebx
	jmp *-8(%r13)
	.size calloc7_r8N6x_entry, .-calloc7_r8N6x_entry


==================== Asm code ====================
2018-03-16 16:03:57.061367058 UTC

.section .data.rel.ro
.align 8
.align 1
calloc7_r8N6x_info:
	.quad	calloc7_r8N6x_entry
	.quad	0
	.quad	107374182414
	.quad	8589934597
	.quad	S8NaZ_srt+112


==================== Asm code ====================
2018-03-16 16:03:57.062268566 UTC

.section .text
.align 8
_c8NAi:
_c8NAi:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8NAr
_c8NAq:
	subq $8,%rsp
	movl $1,%edi
	movq 7(%rbx),%rsi
	xorl %eax,%eax
	call calloc
	addq $8,%rsp
	testq %rax,%rax
	je _c8NAE
_c8NAD:
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8NAE:
	addq $-16,%r12
	movl $Foreign.Marshal.Alloc.calloc1_closure,%ebx
	addq $8,%rbp
	jmp stg_raiseIO#
_c8NAr:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8NAi, .-_c8NAi


==================== Asm code ====================
2018-03-16 16:03:57.063051351 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NAi_info:
	.quad	_c8NAi
	.quad	0
	.quad	4294967326
	.quad	S8NaZ_srt+112


==================== Asm code ====================
2018-03-16 16:03:57.065417314 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.calloc_closure
.type Foreign.Marshal.Alloc.calloc_closure, @object
Foreign.Marshal.Alloc.calloc_closure:
	.quad	Foreign.Marshal.Alloc.calloc_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.066096849 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.calloc_entry
.type Foreign.Marshal.Alloc.calloc_entry, @object
Foreign.Marshal.Alloc.calloc_entry:
_c8NAS:
	jmp calloc7_r8N6x_entry
	.size Foreign.Marshal.Alloc.calloc_entry, .-Foreign.Marshal.Alloc.calloc_entry


==================== Asm code ====================
2018-03-16 16:03:57.066735806 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.calloc_info
.type Foreign.Marshal.Alloc.calloc_info, @object
Foreign.Marshal.Alloc.calloc_info:
	.quad	Foreign.Marshal.Alloc.calloc_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S8NaZ_srt+144


==================== Asm code ====================
2018-03-16 16:03:57.068576332 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.Marshal.Alloc.realloc5_bytes
.type Foreign.Marshal.Alloc.realloc5_bytes, @object
Foreign.Marshal.Alloc.realloc5_bytes:
	.asciz "realloc"


==================== Asm code ====================
2018-03-16 16:03:57.071180241 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc4_closure
.type Foreign.Marshal.Alloc.realloc4_closure, @object
Foreign.Marshal.Alloc.realloc4_closure:
	.quad	Foreign.Marshal.Alloc.realloc4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.072043051 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.realloc4_entry
.type Foreign.Marshal.Alloc.realloc4_entry, @object
Foreign.Marshal.Alloc.realloc4_entry:
_c8NB6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NB7
_c8NB8:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8NB5
_c8NB4:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Foreign.Marshal.Alloc.realloc5_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c8NB7:
	jmp *-16(%r13)
_c8NB5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Alloc.realloc4_entry, .-Foreign.Marshal.Alloc.realloc4_entry


==================== Asm code ====================
2018-03-16 16:03:57.072750717 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc4_info
.type Foreign.Marshal.Alloc.realloc4_info, @object
Foreign.Marshal.Alloc.realloc4_info:
	.quad	Foreign.Marshal.Alloc.realloc4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:57.074954546 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc3_closure
.type Foreign.Marshal.Alloc.realloc3_closure, @object
Foreign.Marshal.Alloc.realloc3_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.ResourceExhausted_closure+1
	.quad	Foreign.Marshal.Alloc.realloc4_closure
	.quad	Foreign.Marshal.Alloc.calloc3_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.077697485 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc2_closure
.type Foreign.Marshal.Alloc.realloc2_closure, @object
Foreign.Marshal.Alloc.realloc2_closure:
	.quad	Foreign.Marshal.Alloc.realloc2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.07867412 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.realloc2_entry
.type Foreign.Marshal.Alloc.realloc2_entry, @object
Foreign.Marshal.Alloc.realloc2_entry:
_c8NBn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NBo
_c8NBp:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8NBm
_c8NBl:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $Foreign.Marshal.Alloc.realloc3_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.IO.Exception.$fExceptionIOException_$ctoException_entry
_c8NBo:
	jmp *-16(%r13)
_c8NBm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Alloc.realloc2_entry, .-Foreign.Marshal.Alloc.realloc2_entry


==================== Asm code ====================
2018-03-16 16:03:57.079397182 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc2_info
.type Foreign.Marshal.Alloc.realloc2_info, @object
Foreign.Marshal.Alloc.realloc2_info:
	.quad	Foreign.Marshal.Alloc.realloc2_entry
	.quad	0
	.quad	35188667056149
	.quad	S8NaZ_srt+48


==================== Asm code ====================
2018-03-16 16:03:57.081174691 UTC

.section .data
.align 8
.align 1
lvl27_r8N6y_closure:
	.quad	GHC.Types.I#_con_info
	.quad	162


==================== Asm code ====================
2018-03-16 16:03:57.083043133 UTC

.section .data
.align 8
.align 1
lvl28_r8N6z_closure:
	.quad	GHC.Types.I#_con_info
	.quad	34


==================== Asm code ====================
2018-03-16 16:03:57.084834888 UTC

.section .data
.align 8
.align 1
lvl29_r8N6A_closure:
	.quad	GHC.Types.I#_con_info
	.quad	43


==================== Asm code ====================
2018-03-16 16:03:57.086843761 UTC

.section .data
.align 8
.align 1
lvl30_r8N6B_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl2_r8N67_closure
	.quad	lvl3_r8N68_closure
	.quad	lvl5_r8N6a_closure
	.quad	lvl27_r8N6y_closure+1
	.quad	lvl28_r8N6z_closure+1
	.quad	lvl27_r8N6y_closure+1
	.quad	lvl29_r8N6A_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.08866501 UTC

.section .data
.align 8
.align 1
lvl31_r8N6C_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl1_r8N66_closure
	.quad	lvl30_r8N6B_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.09164214 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc6_closure
.type Foreign.Marshal.Alloc.realloc6_closure, @object
Foreign.Marshal.Alloc.realloc6_closure:
	.quad	Foreign.Marshal.Alloc.realloc6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.092612267 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.realloc6_entry
.type Foreign.Marshal.Alloc.realloc6_entry, @object
Foreign.Marshal.Alloc.realloc6_entry:
_c8NBI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NBJ
_c8NBK:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c8NBH
_c8NBG:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl31_r8N6C_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Err.undefined_entry
_c8NBJ:
	jmp *-16(%r13)
_c8NBH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Alloc.realloc6_entry, .-Foreign.Marshal.Alloc.realloc6_entry


==================== Asm code ====================
2018-03-16 16:03:57.093505762 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc6_info
.type Foreign.Marshal.Alloc.realloc6_info, @object
Foreign.Marshal.Alloc.realloc6_info:
	.quad	Foreign.Marshal.Alloc.realloc6_entry
	.quad	0
	.quad	4503603922337813
	.quad	S8NaZ_srt


==================== Asm code ====================
2018-03-16 16:03:57.096870207 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.$wrealloc_closure
.type Foreign.Marshal.Alloc.$wrealloc_closure, @object
Foreign.Marshal.Alloc.$wrealloc_closure:
	.quad	Foreign.Marshal.Alloc.$wrealloc_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.097604844 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.$wrealloc_entry
.type Foreign.Marshal.Alloc.$wrealloc_entry, @object
Foreign.Marshal.Alloc.$wrealloc_entry:
_c8NBY:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NBZ
_c8NC0:
	movq $block_c8NBW_info,-16(%rbp)
	movq $stg_ap_p_info,-32(%rbp)
	movq $Foreign.Marshal.Alloc.realloc6_closure,-24(%rbp)
	movq %rsi,-8(%rbp)
	addq $-32,%rbp
	jmp Foreign.Storable.sizeOf_entry
_c8NBZ:
	movl $Foreign.Marshal.Alloc.$wrealloc_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Alloc.$wrealloc_entry, .-Foreign.Marshal.Alloc.$wrealloc_entry


==================== Asm code ====================
2018-03-16 16:03:57.09825931 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.$wrealloc_info
.type Foreign.Marshal.Alloc.$wrealloc_info, @object
Foreign.Marshal.Alloc.$wrealloc_info:
	.quad	Foreign.Marshal.Alloc.$wrealloc_entry
	.quad	0
	.quad	30064771086
	.quad	12884901902
	.quad	S8NaZ_srt+168


==================== Asm code ====================
2018-03-16 16:03:57.099072207 UTC

.section .text
.align 8
_c8NBW:
_c8NBW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8NC5
_c8NC4:
	subq $8,%rsp
	movq 8(%rbp),%rdi
	movq 7(%rbx),%rsi
	xorl %eax,%eax
	call realloc
	addq $8,%rsp
	testq %rax,%rax
	je _c8NCi
_c8NCh:
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8NCi:
	addq $-16,%r12
	movl $Foreign.Marshal.Alloc.realloc2_closure,%ebx
	addq $16,%rbp
	jmp stg_raiseIO#
_c8NC5:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8NBW, .-_c8NBW


==================== Asm code ====================
2018-03-16 16:03:57.09977162 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NBW_info:
	.quad	_c8NBW
	.quad	65
	.quad	4294967326
	.quad	S8NaZ_srt+176


==================== Asm code ====================
2018-03-16 16:03:57.102635531 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc1_closure
.type Foreign.Marshal.Alloc.realloc1_closure, @object
Foreign.Marshal.Alloc.realloc1_closure:
	.quad	Foreign.Marshal.Alloc.realloc1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.103400391 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.realloc1_entry
.type Foreign.Marshal.Alloc.realloc1_entry, @object
Foreign.Marshal.Alloc.realloc1_entry:
_c8NCz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NCA
_c8NCB:
	movq $block_c8NCw_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8NCw
_c8NCx:
	movq (%rbx),%rax
	jmp *(%rax)
_c8NCA:
	movl $Foreign.Marshal.Alloc.realloc1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Alloc.realloc1_entry, .-Foreign.Marshal.Alloc.realloc1_entry


==================== Asm code ====================
2018-03-16 16:03:57.104023064 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc1_info
.type Foreign.Marshal.Alloc.realloc1_info, @object
Foreign.Marshal.Alloc.realloc1_info:
	.quad	Foreign.Marshal.Alloc.realloc1_entry
	.quad	0
	.quad	38654705678
	.quad	12884901903
	.quad	S8NaZ_srt+168


==================== Asm code ====================
2018-03-16 16:03:57.104682072 UTC

.section .text
.align 8
_c8NCw:
_c8NCw:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp Foreign.Marshal.Alloc.$wrealloc_entry
	.size _c8NCw, .-_c8NCw


==================== Asm code ====================
2018-03-16 16:03:57.10527369 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NCw_info:
	.quad	_c8NCw
	.quad	1
	.quad	4294967326
	.quad	S8NaZ_srt+168


==================== Asm code ====================
2018-03-16 16:03:57.107774382 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc_closure
.type Foreign.Marshal.Alloc.realloc_closure, @object
Foreign.Marshal.Alloc.realloc_closure:
	.quad	Foreign.Marshal.Alloc.realloc_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.108405011 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.realloc_entry
.type Foreign.Marshal.Alloc.realloc_entry, @object
Foreign.Marshal.Alloc.realloc_entry:
_c8NCT:
	jmp Foreign.Marshal.Alloc.realloc1_entry
	.size Foreign.Marshal.Alloc.realloc_entry, .-Foreign.Marshal.Alloc.realloc_entry


==================== Asm code ====================
2018-03-16 16:03:57.109023109 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc_info
.type Foreign.Marshal.Alloc.realloc_info, @object
Foreign.Marshal.Alloc.realloc_info:
	.quad	Foreign.Marshal.Alloc.realloc_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	S8NaZ_srt+192


==================== Asm code ====================
2018-03-16 16:03:57.111687731 UTC

.section .data
.align 8
.align 1
free1_r8N6D_closure:
	.quad	free1_r8N6D_info


==================== Asm code ====================
2018-03-16 16:03:57.112437818 UTC

.section .text
.align 8
free1_r8N6D_entry:
_c8ND7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ND8
_c8ND9:
	movq $block_c8ND4_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8ND4
_c8ND5:
	movq (%rbx),%rax
	jmp *(%rax)
_c8ND8:
	movl $free1_r8N6D_closure,%ebx
	jmp *-8(%r13)
	.size free1_r8N6D_entry, .-free1_r8N6D_entry


==================== Asm code ====================
2018-03-16 16:03:57.113081728 UTC

.section .data.rel.ro
.align 8
.align 1
free1_r8N6D_info:
	.quad	free1_r8N6D_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:57.113780756 UTC

.section .text
.align 8
_c8ND4:
_c8ND4:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call free
	addq $8,%rsp
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8ND4, .-_c8ND4


==================== Asm code ====================
2018-03-16 16:03:57.114407342 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ND4_info:
	.quad	_c8ND4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:57.116438909 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.free_closure
.type Foreign.Marshal.Alloc.free_closure, @object
Foreign.Marshal.Alloc.free_closure:
	.quad	Foreign.Marshal.Alloc.free_info


==================== Asm code ====================
2018-03-16 16:03:57.117049117 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.free_entry
.type Foreign.Marshal.Alloc.free_entry, @object
Foreign.Marshal.Alloc.free_entry:
_c8NDu:
	jmp free1_r8N6D_entry
	.size Foreign.Marshal.Alloc.free_entry, .-Foreign.Marshal.Alloc.free_entry


==================== Asm code ====================
2018-03-16 16:03:57.117646239 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.free_info
.type Foreign.Marshal.Alloc.free_info, @object
Foreign.Marshal.Alloc.free_info:
	.quad	Foreign.Marshal.Alloc.free_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:57.120553543 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.$wreallocBytes_closure
.type Foreign.Marshal.Alloc.$wreallocBytes_closure, @object
Foreign.Marshal.Alloc.$wreallocBytes_closure:
	.quad	Foreign.Marshal.Alloc.$wreallocBytes_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.121835071 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.$wreallocBytes_entry
.type Foreign.Marshal.Alloc.$wreallocBytes_entry, @object
Foreign.Marshal.Alloc.$wreallocBytes_entry:
_c8NDJ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8NDN
_c8NDM:
	testq %rsi,%rsi
	je _c8NDI
_c8NDH:
	subq $8,%rsp
	movq %r14,%rdi
	xorl %eax,%eax
	call realloc
	addq $8,%rsp
	testq %rax,%rax
	je _c8NE1
_c8NE0:
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8NE1:
	addq $-16,%r12
	movl $Foreign.Marshal.Alloc.realloc2_closure,%ebx
	jmp stg_raiseIO#
_c8NDN:
	movq $16,904(%r13)
	movl $Foreign.Marshal.Alloc.$wreallocBytes_closure,%ebx
	jmp *-8(%r13)
_c8NDI:
	subq $8,%rsp
	movq %r14,%rdi
	xorl %eax,%eax
	call free
	addq $8,%rsp
	addq $-16,%r12
	movl $GHC.Ptr.nullPtr_closure,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Alloc.$wreallocBytes_entry, .-Foreign.Marshal.Alloc.$wreallocBytes_entry


==================== Asm code ====================
2018-03-16 16:03:57.122622057 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.$wreallocBytes_info
.type Foreign.Marshal.Alloc.$wreallocBytes_info, @object
Foreign.Marshal.Alloc.$wreallocBytes_info:
	.quad	Foreign.Marshal.Alloc.$wreallocBytes_entry
	.quad	0
	.quad	38654705678
	.quad	12884901900
	.quad	S8NaZ_srt+176


==================== Asm code ====================
2018-03-16 16:03:57.125864922 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.reallocBytes1_closure
.type Foreign.Marshal.Alloc.reallocBytes1_closure, @object
Foreign.Marshal.Alloc.reallocBytes1_closure:
	.quad	Foreign.Marshal.Alloc.reallocBytes1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.126621143 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.reallocBytes1_entry
.type Foreign.Marshal.Alloc.reallocBytes1_entry, @object
Foreign.Marshal.Alloc.reallocBytes1_entry:
_c8NEj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NEn
_c8NEo:
	movq $block_c8NEg_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8NEg
_c8NEh:
	movq (%rbx),%rax
	jmp *(%rax)
_c8NEn:
	movl $Foreign.Marshal.Alloc.reallocBytes1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.Marshal.Alloc.reallocBytes1_entry, .-Foreign.Marshal.Alloc.reallocBytes1_entry


==================== Asm code ====================
2018-03-16 16:03:57.127276491 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.reallocBytes1_info
.type Foreign.Marshal.Alloc.reallocBytes1_info, @object
Foreign.Marshal.Alloc.reallocBytes1_info:
	.quad	Foreign.Marshal.Alloc.reallocBytes1_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8NaZ_srt+200


==================== Asm code ====================
2018-03-16 16:03:57.12794831 UTC

.section .text
.align 8
_c8NEg:
_c8NEg:
	movq $block_c8NEm_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8NEm
_c8NEq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8NEg, .-_c8NEg


==================== Asm code ====================
2018-03-16 16:03:57.12856126 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NEg_info:
	.quad	_c8NEg
	.quad	1
	.quad	4294967326
	.quad	S8NaZ_srt+200


==================== Asm code ====================
2018-03-16 16:03:57.129194902 UTC

.section .text
.align 8
_c8NEm:
_c8NEm:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp Foreign.Marshal.Alloc.$wreallocBytes_entry
	.size _c8NEm, .-_c8NEm


==================== Asm code ====================
2018-03-16 16:03:57.129802038 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NEm_info:
	.quad	_c8NEm
	.quad	65
	.quad	4294967326
	.quad	S8NaZ_srt+200


==================== Asm code ====================
2018-03-16 16:03:57.131987915 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.reallocBytes_closure
.type Foreign.Marshal.Alloc.reallocBytes_closure, @object
Foreign.Marshal.Alloc.reallocBytes_closure:
	.quad	Foreign.Marshal.Alloc.reallocBytes_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.132641186 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.reallocBytes_entry
.type Foreign.Marshal.Alloc.reallocBytes_entry, @object
Foreign.Marshal.Alloc.reallocBytes_entry:
_c8NEO:
	jmp Foreign.Marshal.Alloc.reallocBytes1_entry
	.size Foreign.Marshal.Alloc.reallocBytes_entry, .-Foreign.Marshal.Alloc.reallocBytes_entry


==================== Asm code ====================
2018-03-16 16:03:57.133780651 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.reallocBytes_info
.type Foreign.Marshal.Alloc.reallocBytes_info, @object
Foreign.Marshal.Alloc.reallocBytes_info:
	.quad	Foreign.Marshal.Alloc.reallocBytes_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	S8NaZ_srt+208


==================== Asm code ====================
2018-03-16 16:03:57.135436299 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.finalizerFree_closure
.type Foreign.Marshal.Alloc.finalizerFree_closure, @object
Foreign.Marshal.Alloc.finalizerFree_closure:
	.quad	GHC.Ptr.FunPtr_con_info
	.quad	free


==================== Asm code ====================
2018-03-16 16:03:57.13755606 UTC

.section .data.rel.ro
.align 8
.align 1
S8NaZ_srt:
	.quad	GHC.Err.undefined_closure
	.quad	lvl10_r8N6f_closure
	.quad	lvl15_r8N6k_closure
	.quad	lvl11_r8N6g_closure
	.quad	lvl16_r8N6l_closure
	.quad	Foreign.Marshal.Alloc.alloca_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	Foreign.Marshal.Alloc.malloc2_closure
	.quad	Foreign.Marshal.Alloc.malloc1_closure
	.quad	Foreign.Marshal.Alloc.mallocBytes1_closure
	.quad	lvl21_r8N6q_closure
	.quad	lvl22_r8N6r_closure
	.quad	malloc5_r8N6s_closure
	.quad	Foreign.Marshal.Alloc.calloc2_closure
	.quad	Foreign.Marshal.Alloc.calloc1_closure
	.quad	Foreign.Marshal.Alloc.callocBytes1_closure
	.quad	lvl25_r8N6v_closure
	.quad	lvl26_r8N6w_closure
	.quad	calloc7_r8N6x_closure
	.quad	Foreign.Marshal.Alloc.realloc3_closure
	.quad	lvl31_r8N6C_closure
	.quad	Foreign.Marshal.Alloc.$wrealloc_closure
	.quad	Foreign.Marshal.Alloc.realloc2_closure
	.quad	Foreign.Marshal.Alloc.realloc6_closure
	.quad	Foreign.Marshal.Alloc.realloc1_closure
	.quad	Foreign.Marshal.Alloc.$wreallocBytes_closure
	.quad	Foreign.Marshal.Alloc.reallocBytes1_closure


==================== Asm code ====================
2018-03-16 16:03:57.580594496 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.allocaBytes1_closure
.type Foreign.Marshal.Alloc.allocaBytes1_closure, @object
Foreign.Marshal.Alloc.allocaBytes1_closure:
	.quad	Foreign.Marshal.Alloc.allocaBytes1_info


==================== Asm code ====================
2018-03-16 16:03:57.581596238 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.allocaBytes1_entry
.type Foreign.Marshal.Alloc.allocaBytes1_entry, @object
Foreign.Marshal.Alloc.allocaBytes1_entry:
_c8NHs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NHt
_c8NHu:
	leaq block_c8NHp_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8NHp
_c8NHq:
	movq (%rbx),%rax
	jmp *(%rax)
_c8NHt:
	leaq Foreign.Marshal.Alloc.allocaBytes1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Alloc.allocaBytes1_entry, .-Foreign.Marshal.Alloc.allocaBytes1_entry


==================== Asm code ====================
2018-03-16 16:03:57.58238659 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.allocaBytes1_info
.type Foreign.Marshal.Alloc.allocaBytes1_info, @object
Foreign.Marshal.Alloc.allocaBytes1_info:
	.quad	Foreign.Marshal.Alloc.allocaBytes1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:57.58307669 UTC

.section .text
.align 8
_c8NHp:
_c8NHp:
	leaq block_c8NHx_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	jmp *stg_newPinnedByteArray#@gotpcrel(%rip)
	.size _c8NHp, .-_c8NHp


==================== Asm code ====================
2018-03-16 16:03:57.583684413 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NHp_info:
	.quad	_c8NHp
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:57.584475289 UTC

.section .text
.align 8
_c8NHx:
_c8NHx:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8NHC
_c8NHB:
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq 16(%rbx),%rax
	movq %rax,(%r12)
	leaq block_c8NHH_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -7(%r12),%r14
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
_c8NHC:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8NHx, .-_c8NHx


==================== Asm code ====================
2018-03-16 16:03:57.58520422 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NHx_info:
	.quad	_c8NHx
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:57.585871114 UTC

.section .text
.align 8
_c8NHH:
_c8NHH:
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8NHH, .-_c8NHH


==================== Asm code ====================
2018-03-16 16:03:57.586512265 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NHH_info:
	.quad	_c8NHH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:57.589050655 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.allocaBytes_closure
.type Foreign.Marshal.Alloc.allocaBytes_closure, @object
Foreign.Marshal.Alloc.allocaBytes_closure:
	.quad	Foreign.Marshal.Alloc.allocaBytes_info


==================== Asm code ====================
2018-03-16 16:03:57.58981695 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.allocaBytes_entry
.type Foreign.Marshal.Alloc.allocaBytes_entry, @object
Foreign.Marshal.Alloc.allocaBytes_entry:
_c8NIb:
	jmp Foreign.Marshal.Alloc.allocaBytes1_entry
	.size Foreign.Marshal.Alloc.allocaBytes_entry, .-Foreign.Marshal.Alloc.allocaBytes_entry


==================== Asm code ====================
2018-03-16 16:03:57.590439752 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.allocaBytes_info
.type Foreign.Marshal.Alloc.allocaBytes_info, @object
Foreign.Marshal.Alloc.allocaBytes_info:
	.quad	Foreign.Marshal.Alloc.allocaBytes_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:03:57.595353273 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.allocaBytesAligned1_closure
.type Foreign.Marshal.Alloc.allocaBytesAligned1_closure, @object
Foreign.Marshal.Alloc.allocaBytesAligned1_closure:
	.quad	Foreign.Marshal.Alloc.allocaBytesAligned1_info


==================== Asm code ====================
2018-03-16 16:03:57.596338271 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.allocaBytesAligned1_entry
.type Foreign.Marshal.Alloc.allocaBytesAligned1_entry, @object
Foreign.Marshal.Alloc.allocaBytesAligned1_entry:
_c8NIp:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NIt
_c8NIu:
	leaq block_c8NIm_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8NIm
_c8NIn:
	movq (%rbx),%rax
	jmp *(%rax)
_c8NIt:
	leaq Foreign.Marshal.Alloc.allocaBytesAligned1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Alloc.allocaBytesAligned1_entry, .-Foreign.Marshal.Alloc.allocaBytesAligned1_entry


==================== Asm code ====================
2018-03-16 16:03:57.597085411 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.allocaBytesAligned1_info
.type Foreign.Marshal.Alloc.allocaBytesAligned1_info, @object
Foreign.Marshal.Alloc.allocaBytesAligned1_info:
	.quad	Foreign.Marshal.Alloc.allocaBytesAligned1_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:03:57.597945254 UTC

.section .text
.align 8
_c8NIm:
_c8NIm:
	leaq block_c8NIs_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8NIs
_c8NIw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8NIm, .-_c8NIm


==================== Asm code ====================
2018-03-16 16:03:57.598701404 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NIm_info:
	.quad	_c8NIm
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:57.599484724 UTC

.section .text
.align 8
_c8NIs:
_c8NIs:
	movq 8(%rbp),%rax
	leaq block_c8NIA_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp *stg_newAlignedPinnedByteArray#@gotpcrel(%rip)
	.size _c8NIs, .-_c8NIs


==================== Asm code ====================
2018-03-16 16:03:57.600193957 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NIs_info:
	.quad	_c8NIs
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:57.601088182 UTC

.section .text
.align 8
_c8NIA:
_c8NIA:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8NIF
_c8NIE:
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq 16(%rbx),%rax
	movq %rax,(%r12)
	leaq block_c8NIK_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -7(%r12),%r14
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
_c8NIF:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8NIA, .-_c8NIA


==================== Asm code ====================
2018-03-16 16:03:57.601953834 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NIA_info:
	.quad	_c8NIA
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:57.60371234 UTC

.section .text
.align 8
_c8NIK:
_c8NIK:
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8NIK, .-_c8NIK


==================== Asm code ====================
2018-03-16 16:03:57.604305094 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NIK_info:
	.quad	_c8NIK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:57.60713638 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.allocaBytesAligned_closure
.type Foreign.Marshal.Alloc.allocaBytesAligned_closure, @object
Foreign.Marshal.Alloc.allocaBytesAligned_closure:
	.quad	Foreign.Marshal.Alloc.allocaBytesAligned_info


==================== Asm code ====================
2018-03-16 16:03:57.60780088 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.allocaBytesAligned_entry
.type Foreign.Marshal.Alloc.allocaBytesAligned_entry, @object
Foreign.Marshal.Alloc.allocaBytesAligned_entry:
_c8NJk:
	jmp Foreign.Marshal.Alloc.allocaBytesAligned1_entry
	.size Foreign.Marshal.Alloc.allocaBytesAligned_entry, .-Foreign.Marshal.Alloc.allocaBytesAligned_entry


==================== Asm code ====================
2018-03-16 16:03:57.608430269 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.allocaBytesAligned_info
.type Foreign.Marshal.Alloc.allocaBytesAligned_info, @object
Foreign.Marshal.Alloc.allocaBytesAligned_info:
	.quad	Foreign.Marshal.Alloc.allocaBytesAligned_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:03:57.610295597 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl_r8N65_bytes:
	.asciz "undefined"


==================== Asm code ====================
2018-03-16 16:03:57.613207136 UTC

.section .data
.align 8
.align 1
lvl1_r8N66_closure:
	.quad	lvl1_r8N66_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.614225123 UTC

.section .text
.align 8
lvl1_r8N66_entry:
_c8NJy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NJz
_c8NJA:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NJx
_c8NJw:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl_r8N65_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8NJz:
	jmp *-16(%r13)
_c8NJx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl1_r8N66_entry, .-lvl1_r8N66_entry


==================== Asm code ====================
2018-03-16 16:03:57.615002232 UTC

.section .data.rel.ro
.align 8
.align 1
lvl1_r8N66_info:
	.quad	lvl1_r8N66_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:57.616830812 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.Marshal.Alloc.$trModule4_bytes
.type Foreign.Marshal.Alloc.$trModule4_bytes, @object
Foreign.Marshal.Alloc.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:03:57.619766026 UTC

.section .data
.align 8
.align 1
lvl2_r8N67_closure:
	.quad	lvl2_r8N67_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.620814889 UTC

.section .text
.align 8
lvl2_r8N67_entry:
_c8NJQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NJR
_c8NJS:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NJP
_c8NJO:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Foreign.Marshal.Alloc.$trModule4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8NJR:
	jmp *-16(%r13)
_c8NJP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl2_r8N67_entry, .-lvl2_r8N67_entry


==================== Asm code ====================
2018-03-16 16:03:57.621661443 UTC

.section .data.rel.ro
.align 8
.align 1
lvl2_r8N67_info:
	.quad	lvl2_r8N67_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:57.623532609 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.Marshal.Alloc.$trModule2_bytes
.type Foreign.Marshal.Alloc.$trModule2_bytes, @object
Foreign.Marshal.Alloc.$trModule2_bytes:
	.asciz "Foreign.Marshal.Alloc"


==================== Asm code ====================
2018-03-16 16:03:57.626372483 UTC

.section .data
.align 8
.align 1
lvl3_r8N68_closure:
	.quad	lvl3_r8N68_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.627363339 UTC

.section .text
.align 8
lvl3_r8N68_entry:
_c8NK8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NK9
_c8NKa:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NK7
_c8NK6:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Foreign.Marshal.Alloc.$trModule2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8NK9:
	jmp *-16(%r13)
_c8NK7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl3_r8N68_entry, .-lvl3_r8N68_entry


==================== Asm code ====================
2018-03-16 16:03:57.628170744 UTC

.section .data.rel.ro
.align 8
.align 1
lvl3_r8N68_info:
	.quad	lvl3_r8N68_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:57.630882825 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl4_r8N69_bytes:
	.asciz "./Foreign/Marshal/Alloc.hs"


==================== Asm code ====================
2018-03-16 16:03:57.633925281 UTC

.section .data
.align 8
.align 1
lvl5_r8N6a_closure:
	.quad	lvl5_r8N6a_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.634980492 UTC

.section .text
.align 8
lvl5_r8N6a_entry:
_c8NKq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NKr
_c8NKs:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NKp
_c8NKo:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl4_r8N69_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8NKr:
	jmp *-16(%r13)
_c8NKp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl5_r8N6a_entry, .-lvl5_r8N6a_entry


==================== Asm code ====================
2018-03-16 16:03:57.635825413 UTC

.section .data.rel.ro
.align 8
.align 1
lvl5_r8N6a_info:
	.quad	lvl5_r8N6a_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:57.637798914 UTC

.section .data
.align 8
.align 1
lvl6_r8N6b_closure:
	.quad	GHC.Types.I#_con_info
	.quad	117


==================== Asm code ====================
2018-03-16 16:03:57.640387668 UTC

.section .data
.align 8
.align 1
lvl7_r8N6c_closure:
	.quad	GHC.Types.I#_con_info
	.quad	31


==================== Asm code ====================
2018-03-16 16:03:57.642443815 UTC

.section .data
.align 8
.align 1
lvl8_r8N6d_closure:
	.quad	GHC.Types.I#_con_info
	.quad	40


==================== Asm code ====================
2018-03-16 16:03:57.644232988 UTC

.section .data
.align 8
.align 1
lvl9_r8N6e_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl2_r8N67_closure
	.quad	lvl3_r8N68_closure
	.quad	lvl5_r8N6a_closure
	.quad	lvl6_r8N6b_closure+1
	.quad	lvl7_r8N6c_closure+1
	.quad	lvl6_r8N6b_closure+1
	.quad	lvl8_r8N6d_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.646008444 UTC

.section .data
.align 8
.align 1
lvl10_r8N6f_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl1_r8N66_closure
	.quad	lvl9_r8N6e_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.648722321 UTC

.section .data
.align 8
.align 1
lvl11_r8N6g_closure:
	.quad	lvl11_r8N6g_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.649687756 UTC

.section .text
.align 8
lvl11_r8N6g_entry:
_c8NKM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NKN
_c8NKO:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NKL
_c8NKK:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl10_r8N6f_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Err.undefined_entry@gotpcrel(%rip)
_c8NKN:
	jmp *-16(%r13)
_c8NKL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl11_r8N6g_entry, .-lvl11_r8N6g_entry


==================== Asm code ====================
2018-03-16 16:03:57.650420881 UTC

.section .data.rel.ro
.align 8
.align 1
lvl11_r8N6g_info:
	.quad	lvl11_r8N6g_entry
	.quad	0
	.quad	12884901909
	.quad	S8NKP_srt


==================== Asm code ====================
2018-03-16 16:03:57.65220627 UTC

.section .data
.align 8
.align 1
lvl12_r8N6h_closure:
	.quad	GHC.Types.I#_con_info
	.quad	60


==================== Asm code ====================
2018-03-16 16:03:57.653946697 UTC

.section .data
.align 8
.align 1
lvl13_r8N6i_closure:
	.quad	GHC.Types.I#_con_info
	.quad	69


==================== Asm code ====================
2018-03-16 16:03:57.655802618 UTC

.section .data
.align 8
.align 1
lvl14_r8N6j_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl2_r8N67_closure
	.quad	lvl3_r8N68_closure
	.quad	lvl5_r8N6a_closure
	.quad	lvl6_r8N6b_closure+1
	.quad	lvl12_r8N6h_closure+1
	.quad	lvl6_r8N6b_closure+1
	.quad	lvl13_r8N6i_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.657632608 UTC

.section .data
.align 8
.align 1
lvl15_r8N6k_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl1_r8N66_closure
	.quad	lvl14_r8N6j_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.660318031 UTC

.section .data
.align 8
.align 1
lvl16_r8N6l_closure:
	.quad	lvl16_r8N6l_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.661227018 UTC

.section .text
.align 8
lvl16_r8N6l_entry:
_c8NL8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NL9
_c8NLa:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NL7
_c8NL6:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl15_r8N6k_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Err.undefined_entry@gotpcrel(%rip)
_c8NL9:
	jmp *-16(%r13)
_c8NL7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl16_r8N6l_entry, .-lvl16_r8N6l_entry


==================== Asm code ====================
2018-03-16 16:03:57.661958045 UTC

.section .data.rel.ro
.align 8
.align 1
lvl16_r8N6l_info:
	.quad	lvl16_r8N6l_entry
	.quad	0
	.quad	21474836501
	.quad	S8NKP_srt


==================== Asm code ====================
2018-03-16 16:03:57.66859395 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.alloca_closure
.type Foreign.Marshal.Alloc.alloca_closure, @object
Foreign.Marshal.Alloc.alloca_closure:
	.quad	Foreign.Marshal.Alloc.alloca_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.669344848 UTC

.section .text
.align 8
ds_s8NFz_entry:
_c8NLr:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NLs
_c8NLt:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq lvl11_r8N6g_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *Foreign.Storable.sizeOf_entry@gotpcrel(%rip)
_c8NLs:
	jmp *-16(%r13)
	.size ds_s8NFz_entry, .-ds_s8NFz_entry


==================== Asm code ====================
2018-03-16 16:03:57.670019079 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s8NFz_info:
	.quad	ds_s8NFz_entry
	.quad	1
	.quad	4294967312
	.quad	S8NKP_srt+24


==================== Asm code ====================
2018-03-16 16:03:57.670821402 UTC

.section .text
.align 8
ds1_s8NFA_entry:
_c8NLy:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NLz
_c8NLA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq lvl16_r8N6l_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *Foreign.Storable.alignment_entry@gotpcrel(%rip)
_c8NLz:
	jmp *-16(%r13)
	.size ds1_s8NFA_entry, .-ds1_s8NFA_entry


==================== Asm code ====================
2018-03-16 16:03:57.671550552 UTC

.section .data.rel.ro
.align 8
.align 1
ds1_s8NFA_info:
	.quad	ds1_s8NFA_entry
	.quad	1
	.quad	4294967312
	.quad	S8NKP_srt+32


==================== Asm code ====================
2018-03-16 16:03:57.672358831 UTC

.section .text
.align 8
sat_s8NFT_entry:
_c8NLJ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NLN
_c8NLO:
	leaq block_c8NLG_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8NLG
_c8NLH:
	movq (%rbx),%rax
	jmp *(%rax)
_c8NLN:
	jmp *-8(%r13)
	.size sat_s8NFT_entry, .-sat_s8NFT_entry


==================== Asm code ====================
2018-03-16 16:03:57.673039903 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8NFT_info:
	.quad	sat_s8NFT_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:57.674363495 UTC

.section .text
.align 8
_c8NLG:
_c8NLG:
	leaq block_c8NLM_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8NLM
_c8NLQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8NLG, .-_c8NLG


==================== Asm code ====================
2018-03-16 16:03:57.675069176 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NLG_info:
	.quad	_c8NLG
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:57.676029425 UTC

.section .text
.align 8
_c8NLM:
_c8NLM:
	movq 8(%rbp),%rax
	leaq block_c8NLU_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp *stg_newAlignedPinnedByteArray#@gotpcrel(%rip)
	.size _c8NLM, .-_c8NLM


==================== Asm code ====================
2018-03-16 16:03:57.676659793 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NLM_info:
	.quad	_c8NLM
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:57.677498938 UTC

.section .text
.align 8
_c8NLU:
_c8NLU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8NLZ
_c8NLY:
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq 16(%rbx),%rax
	movq %rax,(%r12)
	leaq block_c8NM4_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -7(%r12),%r14
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
_c8NLZ:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8NLU, .-_c8NLU


==================== Asm code ====================
2018-03-16 16:03:57.678224683 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NLU_info:
	.quad	_c8NLU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:57.678875685 UTC

.section .text
.align 8
_c8NM4:
_c8NM4:
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8NM4, .-_c8NM4


==================== Asm code ====================
2018-03-16 16:03:57.679459134 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NM4_info:
	.quad	_c8NM4
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:57.680295382 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.alloca_entry
.type Foreign.Marshal.Alloc.alloca_entry, @object
Foreign.Marshal.Alloc.alloca_entry:
_c8NMa:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c8NMe
_c8NMd:
	leaq ds_s8NFz_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-48(%r12)
	leaq ds1_s8NFA_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	leaq sat_s8NFT_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -64(%r12),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8NMe:
	movq $72,904(%r13)
	leaq Foreign.Marshal.Alloc.alloca_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Alloc.alloca_entry, .-Foreign.Marshal.Alloc.alloca_entry


==================== Asm code ====================
2018-03-16 16:03:57.681055163 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.alloca_info
.type Foreign.Marshal.Alloc.alloca_info, @object
Foreign.Marshal.Alloc.alloca_info:
	.quad	Foreign.Marshal.Alloc.alloca_entry
	.quad	0
	.quad	30064771086
	.quad	4294967301
	.quad	S8NKP_srt+24


==================== Asm code ====================
2018-03-16 16:03:57.68295185 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.$trModule3_closure
.type Foreign.Marshal.Alloc.$trModule3_closure, @object
Foreign.Marshal.Alloc.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Foreign.Marshal.Alloc.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:03:57.684713884 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.$trModule1_closure
.type Foreign.Marshal.Alloc.$trModule1_closure, @object
Foreign.Marshal.Alloc.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Foreign.Marshal.Alloc.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:03:57.686673007 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.$trModule_closure
.type Foreign.Marshal.Alloc.$trModule_closure, @object
Foreign.Marshal.Alloc.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	Foreign.Marshal.Alloc.$trModule3_closure+1
	.quad	Foreign.Marshal.Alloc.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:03:57.688533987 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.Marshal.Alloc.malloc4_bytes
.type Foreign.Marshal.Alloc.malloc4_bytes, @object
Foreign.Marshal.Alloc.malloc4_bytes:
	.asciz "malloc"


==================== Asm code ====================
2018-03-16 16:03:57.691563572 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.malloc3_closure
.type Foreign.Marshal.Alloc.malloc3_closure, @object
Foreign.Marshal.Alloc.malloc3_closure:
	.quad	Foreign.Marshal.Alloc.malloc3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.692581813 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.malloc3_entry
.type Foreign.Marshal.Alloc.malloc3_entry, @object
Foreign.Marshal.Alloc.malloc3_entry:
_c8NNc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NNd
_c8NNe:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NNb
_c8NNa:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Foreign.Marshal.Alloc.malloc4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8NNd:
	jmp *-16(%r13)
_c8NNb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Alloc.malloc3_entry, .-Foreign.Marshal.Alloc.malloc3_entry


==================== Asm code ====================
2018-03-16 16:03:57.693361673 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.malloc3_info
.type Foreign.Marshal.Alloc.malloc3_info, @object
Foreign.Marshal.Alloc.malloc3_info:
	.quad	Foreign.Marshal.Alloc.malloc3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:57.695138149 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.Marshal.Alloc.calloc4_bytes
.type Foreign.Marshal.Alloc.calloc4_bytes, @object
Foreign.Marshal.Alloc.calloc4_bytes:
	.asciz "out of memory"


==================== Asm code ====================
2018-03-16 16:03:57.698025385 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.calloc3_closure
.type Foreign.Marshal.Alloc.calloc3_closure, @object
Foreign.Marshal.Alloc.calloc3_closure:
	.quad	Foreign.Marshal.Alloc.calloc3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.698975411 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.calloc3_entry
.type Foreign.Marshal.Alloc.calloc3_entry, @object
Foreign.Marshal.Alloc.calloc3_entry:
_c8NNu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NNv
_c8NNw:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NNt
_c8NNs:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Foreign.Marshal.Alloc.calloc4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8NNv:
	jmp *-16(%r13)
_c8NNt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Alloc.calloc3_entry, .-Foreign.Marshal.Alloc.calloc3_entry


==================== Asm code ====================
2018-03-16 16:03:57.699745368 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.calloc3_info
.type Foreign.Marshal.Alloc.calloc3_info, @object
Foreign.Marshal.Alloc.calloc3_info:
	.quad	Foreign.Marshal.Alloc.calloc3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:57.702142916 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.malloc2_closure
.type Foreign.Marshal.Alloc.malloc2_closure, @object
Foreign.Marshal.Alloc.malloc2_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.ResourceExhausted_closure+1
	.quad	Foreign.Marshal.Alloc.malloc3_closure
	.quad	Foreign.Marshal.Alloc.calloc3_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.70500817 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.malloc1_closure
.type Foreign.Marshal.Alloc.malloc1_closure, @object
Foreign.Marshal.Alloc.malloc1_closure:
	.quad	Foreign.Marshal.Alloc.malloc1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.705981018 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.malloc1_entry
.type Foreign.Marshal.Alloc.malloc1_entry, @object
Foreign.Marshal.Alloc.malloc1_entry:
_c8NNM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NNN
_c8NNO:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NNL
_c8NNK:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Foreign.Marshal.Alloc.malloc2_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_c8NNN:
	jmp *-16(%r13)
_c8NNL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Alloc.malloc1_entry, .-Foreign.Marshal.Alloc.malloc1_entry


==================== Asm code ====================
2018-03-16 16:03:57.70673148 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.malloc1_info
.type Foreign.Marshal.Alloc.malloc1_info, @object
Foreign.Marshal.Alloc.malloc1_info:
	.quad	Foreign.Marshal.Alloc.malloc1_entry
	.quad	0
	.quad	12884901909
	.quad	S8NKP_srt+48


==================== Asm code ====================
2018-03-16 16:03:57.710873463 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.mallocBytes1_closure
.type Foreign.Marshal.Alloc.mallocBytes1_closure, @object
Foreign.Marshal.Alloc.mallocBytes1_closure:
	.quad	Foreign.Marshal.Alloc.mallocBytes1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.711736053 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.mallocBytes1_entry
.type Foreign.Marshal.Alloc.mallocBytes1_entry, @object
Foreign.Marshal.Alloc.mallocBytes1_entry:
_c8NO4:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NO5
_c8NO6:
	leaq block_c8NO1_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8NO1
_c8NO2:
	movq (%rbx),%rax
	jmp *(%rax)
_c8NO5:
	leaq Foreign.Marshal.Alloc.mallocBytes1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Alloc.mallocBytes1_entry, .-Foreign.Marshal.Alloc.mallocBytes1_entry


==================== Asm code ====================
2018-03-16 16:03:57.712499494 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.mallocBytes1_info
.type Foreign.Marshal.Alloc.mallocBytes1_info, @object
Foreign.Marshal.Alloc.mallocBytes1_info:
	.quad	Foreign.Marshal.Alloc.mallocBytes1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	S8NKP_srt+64


==================== Asm code ====================
2018-03-16 16:03:57.713746458 UTC

.section .text
.align 8
_c8NO1:
_c8NO1:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8NOb
_c8NOa:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call malloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NOn
_c8NOm:
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8NOn:
	addq $-16,%r12
	leaq Foreign.Marshal.Alloc.malloc1_closure(%rip),%rbx
	addq $8,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_c8NOb:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8NO1, .-_c8NO1


==================== Asm code ====================
2018-03-16 16:03:57.714487559 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NO1_info:
	.quad	_c8NO1
	.quad	0
	.quad	4294967326
	.quad	S8NKP_srt+64


==================== Asm code ====================
2018-03-16 16:03:57.716949331 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.mallocBytes_closure
.type Foreign.Marshal.Alloc.mallocBytes_closure, @object
Foreign.Marshal.Alloc.mallocBytes_closure:
	.quad	Foreign.Marshal.Alloc.mallocBytes_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.717699597 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.mallocBytes_entry
.type Foreign.Marshal.Alloc.mallocBytes_entry, @object
Foreign.Marshal.Alloc.mallocBytes_entry:
_c8NOF:
	jmp Foreign.Marshal.Alloc.mallocBytes1_entry
	.size Foreign.Marshal.Alloc.mallocBytes_entry, .-Foreign.Marshal.Alloc.mallocBytes_entry


==================== Asm code ====================
2018-03-16 16:03:57.71833671 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.mallocBytes_info
.type Foreign.Marshal.Alloc.mallocBytes_info, @object
Foreign.Marshal.Alloc.mallocBytes_info:
	.quad	Foreign.Marshal.Alloc.mallocBytes_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S8NKP_srt+72


==================== Asm code ====================
2018-03-16 16:03:57.720142099 UTC

.section .data
.align 8
.align 1
lvl17_r8N6m_closure:
	.quad	GHC.Types.I#_con_info
	.quad	84


==================== Asm code ====================
2018-03-16 16:03:57.722031506 UTC

.section .data
.align 8
.align 1
lvl18_r8N6n_closure:
	.quad	GHC.Types.I#_con_info
	.quad	32


==================== Asm code ====================
2018-03-16 16:03:57.723902261 UTC

.section .data
.align 8
.align 1
lvl19_r8N6o_closure:
	.quad	GHC.Types.I#_con_info
	.quad	41


==================== Asm code ====================
2018-03-16 16:03:57.725909864 UTC

.section .data
.align 8
.align 1
lvl20_r8N6p_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl2_r8N67_closure
	.quad	lvl3_r8N68_closure
	.quad	lvl5_r8N6a_closure
	.quad	lvl17_r8N6m_closure+1
	.quad	lvl18_r8N6n_closure+1
	.quad	lvl17_r8N6m_closure+1
	.quad	lvl19_r8N6o_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.727905402 UTC

.section .data
.align 8
.align 1
lvl21_r8N6q_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl1_r8N66_closure
	.quad	lvl20_r8N6p_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.73117201 UTC

.section .data
.align 8
.align 1
lvl22_r8N6r_closure:
	.quad	lvl22_r8N6r_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.732146424 UTC

.section .text
.align 8
lvl22_r8N6r_entry:
_c8NOX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NOY
_c8NOZ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NOW
_c8NOV:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl21_r8N6q_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Err.undefined_entry@gotpcrel(%rip)
_c8NOY:
	jmp *-16(%r13)
_c8NOW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl22_r8N6r_entry, .-lvl22_r8N6r_entry


==================== Asm code ====================
2018-03-16 16:03:57.73296617 UTC

.section .data.rel.ro
.align 8
.align 1
lvl22_r8N6r_info:
	.quad	lvl22_r8N6r_entry
	.quad	0
	.quad	4402341478421
	.quad	S8NKP_srt


==================== Asm code ====================
2018-03-16 16:03:57.73676261 UTC

.section .data
.align 8
.align 1
malloc5_r8N6s_closure:
	.quad	malloc5_r8N6s_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.737659263 UTC

.section .text
.align 8
malloc5_r8N6s_entry:
_c8NPe:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NPf
_c8NPg:
	leaq block_c8NPc_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl22_r8N6r_closure(%rip),%rax
	movq %rax,-16(%rbp)
	addq $-24,%rbp
	jmp *Foreign.Storable.sizeOf_entry@gotpcrel(%rip)
_c8NPf:
	leaq malloc5_r8N6s_closure(%rip),%rbx
	jmp *-8(%r13)
	.size malloc5_r8N6s_entry, .-malloc5_r8N6s_entry


==================== Asm code ====================
2018-03-16 16:03:57.738426671 UTC

.section .data.rel.ro
.align 8
.align 1
malloc5_r8N6s_info:
	.quad	malloc5_r8N6s_entry
	.quad	0
	.quad	107374182414
	.quad	8589934597
	.quad	S8NKP_srt+64


==================== Asm code ====================
2018-03-16 16:03:57.739418981 UTC

.section .text
.align 8
_c8NPc:
_c8NPc:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8NPl
_c8NPk:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call malloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NPx
_c8NPw:
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8NPx:
	addq $-16,%r12
	leaq Foreign.Marshal.Alloc.malloc1_closure(%rip),%rbx
	addq $8,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_c8NPl:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8NPc, .-_c8NPc


==================== Asm code ====================
2018-03-16 16:03:57.740248335 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NPc_info:
	.quad	_c8NPc
	.quad	0
	.quad	4294967326
	.quad	S8NKP_srt+64


==================== Asm code ====================
2018-03-16 16:03:57.742695448 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.malloc_closure
.type Foreign.Marshal.Alloc.malloc_closure, @object
Foreign.Marshal.Alloc.malloc_closure:
	.quad	Foreign.Marshal.Alloc.malloc_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.74391714 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.malloc_entry
.type Foreign.Marshal.Alloc.malloc_entry, @object
Foreign.Marshal.Alloc.malloc_entry:
_c8NPP:
	jmp malloc5_r8N6s_entry
	.size Foreign.Marshal.Alloc.malloc_entry, .-Foreign.Marshal.Alloc.malloc_entry


==================== Asm code ====================
2018-03-16 16:03:57.744556051 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.malloc_info
.type Foreign.Marshal.Alloc.malloc_info, @object
Foreign.Marshal.Alloc.malloc_info:
	.quad	Foreign.Marshal.Alloc.malloc_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S8NKP_srt+96


==================== Asm code ====================
2018-03-16 16:03:57.746460501 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.Marshal.Alloc.calloc6_bytes
.type Foreign.Marshal.Alloc.calloc6_bytes, @object
Foreign.Marshal.Alloc.calloc6_bytes:
	.asciz "calloc"


==================== Asm code ====================
2018-03-16 16:03:57.749391454 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.calloc5_closure
.type Foreign.Marshal.Alloc.calloc5_closure, @object
Foreign.Marshal.Alloc.calloc5_closure:
	.quad	Foreign.Marshal.Alloc.calloc5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.750244041 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.calloc5_entry
.type Foreign.Marshal.Alloc.calloc5_entry, @object
Foreign.Marshal.Alloc.calloc5_entry:
_c8NQ3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NQ4
_c8NQ5:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NQ2
_c8NQ1:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Foreign.Marshal.Alloc.calloc6_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8NQ4:
	jmp *-16(%r13)
_c8NQ2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Alloc.calloc5_entry, .-Foreign.Marshal.Alloc.calloc5_entry


==================== Asm code ====================
2018-03-16 16:03:57.750946654 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.calloc5_info
.type Foreign.Marshal.Alloc.calloc5_info, @object
Foreign.Marshal.Alloc.calloc5_info:
	.quad	Foreign.Marshal.Alloc.calloc5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:57.752806431 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.calloc2_closure
.type Foreign.Marshal.Alloc.calloc2_closure, @object
Foreign.Marshal.Alloc.calloc2_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.ResourceExhausted_closure+1
	.quad	Foreign.Marshal.Alloc.calloc5_closure
	.quad	Foreign.Marshal.Alloc.calloc3_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.755427324 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.calloc1_closure
.type Foreign.Marshal.Alloc.calloc1_closure, @object
Foreign.Marshal.Alloc.calloc1_closure:
	.quad	Foreign.Marshal.Alloc.calloc1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.756307885 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.calloc1_entry
.type Foreign.Marshal.Alloc.calloc1_entry, @object
Foreign.Marshal.Alloc.calloc1_entry:
_c8NQl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NQm
_c8NQn:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NQk
_c8NQj:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Foreign.Marshal.Alloc.calloc2_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_c8NQm:
	jmp *-16(%r13)
_c8NQk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Alloc.calloc1_entry, .-Foreign.Marshal.Alloc.calloc1_entry


==================== Asm code ====================
2018-03-16 16:03:57.757040806 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.calloc1_info
.type Foreign.Marshal.Alloc.calloc1_info, @object
Foreign.Marshal.Alloc.calloc1_info:
	.quad	Foreign.Marshal.Alloc.calloc1_entry
	.quad	0
	.quad	554050781205
	.quad	S8NKP_srt+48


==================== Asm code ====================
2018-03-16 16:03:57.760455569 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.callocBytes1_closure
.type Foreign.Marshal.Alloc.callocBytes1_closure, @object
Foreign.Marshal.Alloc.callocBytes1_closure:
	.quad	Foreign.Marshal.Alloc.callocBytes1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.76128655 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.callocBytes1_entry
.type Foreign.Marshal.Alloc.callocBytes1_entry, @object
Foreign.Marshal.Alloc.callocBytes1_entry:
_c8NQD:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NQE
_c8NQF:
	leaq block_c8NQA_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8NQA
_c8NQB:
	movq (%rbx),%rax
	jmp *(%rax)
_c8NQE:
	leaq Foreign.Marshal.Alloc.callocBytes1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Alloc.callocBytes1_entry, .-Foreign.Marshal.Alloc.callocBytes1_entry


==================== Asm code ====================
2018-03-16 16:03:57.761943322 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.callocBytes1_info
.type Foreign.Marshal.Alloc.callocBytes1_info, @object
Foreign.Marshal.Alloc.callocBytes1_info:
	.quad	Foreign.Marshal.Alloc.callocBytes1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	S8NKP_srt+112


==================== Asm code ====================
2018-03-16 16:03:57.76277147 UTC

.section .text
.align 8
_c8NQA:
_c8NQA:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8NQK
_c8NQJ:
	subq $8,%rsp
	movl $1,%edi
	movq 7(%rbx),%rsi
	xorl %eax,%eax
	call calloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NQX
_c8NQW:
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8NQX:
	addq $-16,%r12
	leaq Foreign.Marshal.Alloc.calloc1_closure(%rip),%rbx
	addq $8,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_c8NQK:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8NQA, .-_c8NQA


==================== Asm code ====================
2018-03-16 16:03:57.763477418 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NQA_info:
	.quad	_c8NQA
	.quad	0
	.quad	4294967326
	.quad	S8NKP_srt+112


==================== Asm code ====================
2018-03-16 16:03:57.765540282 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.callocBytes_closure
.type Foreign.Marshal.Alloc.callocBytes_closure, @object
Foreign.Marshal.Alloc.callocBytes_closure:
	.quad	Foreign.Marshal.Alloc.callocBytes_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.766219834 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.callocBytes_entry
.type Foreign.Marshal.Alloc.callocBytes_entry, @object
Foreign.Marshal.Alloc.callocBytes_entry:
_c8NRf:
	jmp Foreign.Marshal.Alloc.callocBytes1_entry
	.size Foreign.Marshal.Alloc.callocBytes_entry, .-Foreign.Marshal.Alloc.callocBytes_entry


==================== Asm code ====================
2018-03-16 16:03:57.766837782 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.callocBytes_info
.type Foreign.Marshal.Alloc.callocBytes_info, @object
Foreign.Marshal.Alloc.callocBytes_info:
	.quad	Foreign.Marshal.Alloc.callocBytes_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S8NKP_srt+120


==================== Asm code ====================
2018-03-16 16:03:57.768589988 UTC

.section .data
.align 8
.align 1
lvl23_r8N6t_closure:
	.quad	GHC.Types.I#_con_info
	.quad	90


==================== Asm code ====================
2018-03-16 16:03:57.770385089 UTC

.section .data
.align 8
.align 1
lvl24_r8N6u_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl2_r8N67_closure
	.quad	lvl3_r8N68_closure
	.quad	lvl5_r8N6a_closure
	.quad	lvl23_r8N6t_closure+1
	.quad	lvl7_r8N6c_closure+1
	.quad	lvl23_r8N6t_closure+1
	.quad	lvl8_r8N6d_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.772147969 UTC

.section .data
.align 8
.align 1
lvl25_r8N6v_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl1_r8N66_closure
	.quad	lvl24_r8N6u_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.775125339 UTC

.section .data
.align 8
.align 1
lvl26_r8N6w_closure:
	.quad	lvl26_r8N6w_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.776036602 UTC

.section .text
.align 8
lvl26_r8N6w_entry:
_c8NRv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NRw
_c8NRx:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NRu
_c8NRt:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl25_r8N6v_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Err.undefined_entry@gotpcrel(%rip)
_c8NRw:
	jmp *-16(%r13)
_c8NRu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl26_r8N6w_entry, .-lvl26_r8N6w_entry


==================== Asm code ====================
2018-03-16 16:03:57.77731117 UTC

.section .data.rel.ro
.align 8
.align 1
lvl26_r8N6w_info:
	.quad	lvl26_r8N6w_entry
	.quad	0
	.quad	281479271677973
	.quad	S8NKP_srt


==================== Asm code ====================
2018-03-16 16:03:57.780508211 UTC

.section .data
.align 8
.align 1
calloc7_r8N6x_closure:
	.quad	calloc7_r8N6x_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.781271806 UTC

.section .text
.align 8
calloc7_r8N6x_entry:
_c8NRM:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NRN
_c8NRO:
	leaq block_c8NRK_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl26_r8N6w_closure(%rip),%rax
	movq %rax,-16(%rbp)
	addq $-24,%rbp
	jmp *Foreign.Storable.sizeOf_entry@gotpcrel(%rip)
_c8NRN:
	leaq calloc7_r8N6x_closure(%rip),%rbx
	jmp *-8(%r13)
	.size calloc7_r8N6x_entry, .-calloc7_r8N6x_entry


==================== Asm code ====================
2018-03-16 16:03:57.781930498 UTC

.section .data.rel.ro
.align 8
.align 1
calloc7_r8N6x_info:
	.quad	calloc7_r8N6x_entry
	.quad	0
	.quad	107374182414
	.quad	8589934597
	.quad	S8NKP_srt+112


==================== Asm code ====================
2018-03-16 16:03:57.782775508 UTC

.section .text
.align 8
_c8NRK:
_c8NRK:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8NRT
_c8NRS:
	subq $8,%rsp
	movl $1,%edi
	movq 7(%rbx),%rsi
	xorl %eax,%eax
	call calloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NS6
_c8NS5:
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8NS6:
	addq $-16,%r12
	leaq Foreign.Marshal.Alloc.calloc1_closure(%rip),%rbx
	addq $8,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_c8NRT:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8NRK, .-_c8NRK


==================== Asm code ====================
2018-03-16 16:03:57.783516267 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NRK_info:
	.quad	_c8NRK
	.quad	0
	.quad	4294967326
	.quad	S8NKP_srt+112


==================== Asm code ====================
2018-03-16 16:03:57.786006121 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.calloc_closure
.type Foreign.Marshal.Alloc.calloc_closure, @object
Foreign.Marshal.Alloc.calloc_closure:
	.quad	Foreign.Marshal.Alloc.calloc_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.786587123 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.calloc_entry
.type Foreign.Marshal.Alloc.calloc_entry, @object
Foreign.Marshal.Alloc.calloc_entry:
_c8NSo:
	jmp calloc7_r8N6x_entry
	.size Foreign.Marshal.Alloc.calloc_entry, .-Foreign.Marshal.Alloc.calloc_entry


==================== Asm code ====================
2018-03-16 16:03:57.787155637 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.calloc_info
.type Foreign.Marshal.Alloc.calloc_info, @object
Foreign.Marshal.Alloc.calloc_info:
	.quad	Foreign.Marshal.Alloc.calloc_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S8NKP_srt+144


==================== Asm code ====================
2018-03-16 16:03:57.788800112 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.Marshal.Alloc.realloc5_bytes
.type Foreign.Marshal.Alloc.realloc5_bytes, @object
Foreign.Marshal.Alloc.realloc5_bytes:
	.asciz "realloc"


==================== Asm code ====================
2018-03-16 16:03:57.79133796 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc4_closure
.type Foreign.Marshal.Alloc.realloc4_closure, @object
Foreign.Marshal.Alloc.realloc4_closure:
	.quad	Foreign.Marshal.Alloc.realloc4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.79217103 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.realloc4_entry
.type Foreign.Marshal.Alloc.realloc4_entry, @object
Foreign.Marshal.Alloc.realloc4_entry:
_c8NSC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NSD
_c8NSE:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NSB
_c8NSA:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Foreign.Marshal.Alloc.realloc5_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c8NSD:
	jmp *-16(%r13)
_c8NSB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Alloc.realloc4_entry, .-Foreign.Marshal.Alloc.realloc4_entry


==================== Asm code ====================
2018-03-16 16:03:57.792883298 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc4_info
.type Foreign.Marshal.Alloc.realloc4_info, @object
Foreign.Marshal.Alloc.realloc4_info:
	.quad	Foreign.Marshal.Alloc.realloc4_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 16:03:57.794693943 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc3_closure
.type Foreign.Marshal.Alloc.realloc3_closure, @object
Foreign.Marshal.Alloc.realloc3_closure:
	.quad	GHC.IO.Exception.IOError_con_info
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.IO.Exception.ResourceExhausted_closure+1
	.quad	Foreign.Marshal.Alloc.realloc4_closure
	.quad	Foreign.Marshal.Alloc.calloc3_closure
	.quad	GHC.Base.Nothing_closure+1
	.quad	GHC.Base.Nothing_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.797236552 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc2_closure
.type Foreign.Marshal.Alloc.realloc2_closure, @object
Foreign.Marshal.Alloc.realloc2_closure:
	.quad	Foreign.Marshal.Alloc.realloc2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.798364913 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.realloc2_entry
.type Foreign.Marshal.Alloc.realloc2_entry, @object
Foreign.Marshal.Alloc.realloc2_entry:
_c8NSU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NSV
_c8NSW:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NST
_c8NSS:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq Foreign.Marshal.Alloc.realloc3_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.IO.Exception.$fExceptionIOException_$ctoException_entry@gotpcrel(%rip)
_c8NSV:
	jmp *-16(%r13)
_c8NST:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Alloc.realloc2_entry, .-Foreign.Marshal.Alloc.realloc2_entry


==================== Asm code ====================
2018-03-16 16:03:57.799062968 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc2_info
.type Foreign.Marshal.Alloc.realloc2_info, @object
Foreign.Marshal.Alloc.realloc2_info:
	.quad	Foreign.Marshal.Alloc.realloc2_entry
	.quad	0
	.quad	35188667056149
	.quad	S8NKP_srt+48


==================== Asm code ====================
2018-03-16 16:03:57.800691777 UTC

.section .data
.align 8
.align 1
lvl27_r8N6y_closure:
	.quad	GHC.Types.I#_con_info
	.quad	162


==================== Asm code ====================
2018-03-16 16:03:57.802410158 UTC

.section .data
.align 8
.align 1
lvl28_r8N6z_closure:
	.quad	GHC.Types.I#_con_info
	.quad	34


==================== Asm code ====================
2018-03-16 16:03:57.804104102 UTC

.section .data
.align 8
.align 1
lvl29_r8N6A_closure:
	.quad	GHC.Types.I#_con_info
	.quad	43


==================== Asm code ====================
2018-03-16 16:03:57.80590452 UTC

.section .data
.align 8
.align 1
lvl30_r8N6B_closure:
	.quad	GHC.Stack.Types.SrcLoc_con_info
	.quad	lvl2_r8N67_closure
	.quad	lvl3_r8N68_closure
	.quad	lvl5_r8N6a_closure
	.quad	lvl27_r8N6y_closure+1
	.quad	lvl28_r8N6z_closure+1
	.quad	lvl27_r8N6y_closure+1
	.quad	lvl29_r8N6A_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.808169805 UTC

.section .data
.align 8
.align 1
lvl31_r8N6C_closure:
	.quad	GHC.Stack.Types.PushCallStack_con_info
	.quad	lvl1_r8N66_closure
	.quad	lvl30_r8N6B_closure+1
	.quad	GHC.Stack.Types.EmptyCallStack_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.811191153 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc6_closure
.type Foreign.Marshal.Alloc.realloc6_closure, @object
Foreign.Marshal.Alloc.realloc6_closure:
	.quad	Foreign.Marshal.Alloc.realloc6_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.812072096 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.realloc6_entry
.type Foreign.Marshal.Alloc.realloc6_entry, @object
Foreign.Marshal.Alloc.realloc6_entry:
_c8NTg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NTh
_c8NTi:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NTf
_c8NTe:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl31_r8N6C_closure+2(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Err.undefined_entry@gotpcrel(%rip)
_c8NTh:
	jmp *-16(%r13)
_c8NTf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Alloc.realloc6_entry, .-Foreign.Marshal.Alloc.realloc6_entry


==================== Asm code ====================
2018-03-16 16:03:57.812750609 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc6_info
.type Foreign.Marshal.Alloc.realloc6_info, @object
Foreign.Marshal.Alloc.realloc6_info:
	.quad	Foreign.Marshal.Alloc.realloc6_entry
	.quad	0
	.quad	4503603922337813
	.quad	S8NKP_srt


==================== Asm code ====================
2018-03-16 16:03:57.816166673 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.$wrealloc_closure
.type Foreign.Marshal.Alloc.$wrealloc_closure, @object
Foreign.Marshal.Alloc.$wrealloc_closure:
	.quad	Foreign.Marshal.Alloc.$wrealloc_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.816943175 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.$wrealloc_entry
.type Foreign.Marshal.Alloc.$wrealloc_entry, @object
Foreign.Marshal.Alloc.$wrealloc_entry:
_c8NTx:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NTy
_c8NTz:
	leaq block_c8NTv_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq Foreign.Marshal.Alloc.realloc6_closure(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,-8(%rbp)
	addq $-32,%rbp
	jmp *Foreign.Storable.sizeOf_entry@gotpcrel(%rip)
_c8NTy:
	leaq Foreign.Marshal.Alloc.$wrealloc_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Alloc.$wrealloc_entry, .-Foreign.Marshal.Alloc.$wrealloc_entry


==================== Asm code ====================
2018-03-16 16:03:57.817624237 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.$wrealloc_info
.type Foreign.Marshal.Alloc.$wrealloc_info, @object
Foreign.Marshal.Alloc.$wrealloc_info:
	.quad	Foreign.Marshal.Alloc.$wrealloc_entry
	.quad	0
	.quad	30064771086
	.quad	12884901902
	.quad	S8NKP_srt+168


==================== Asm code ====================
2018-03-16 16:03:57.818450933 UTC

.section .text
.align 8
_c8NTv:
_c8NTv:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8NTE
_c8NTD:
	subq $8,%rsp
	movq 8(%rbp),%rdi
	movq 7(%rbx),%rsi
	xorl %eax,%eax
	call realloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NTR
_c8NTQ:
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8NTR:
	addq $-16,%r12
	leaq Foreign.Marshal.Alloc.realloc2_closure(%rip),%rbx
	addq $16,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_c8NTE:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c8NTv, .-_c8NTv


==================== Asm code ====================
2018-03-16 16:03:57.819152301 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NTv_info:
	.quad	_c8NTv
	.quad	65
	.quad	4294967326
	.quad	S8NKP_srt+176


==================== Asm code ====================
2018-03-16 16:03:57.822484597 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc1_closure
.type Foreign.Marshal.Alloc.realloc1_closure, @object
Foreign.Marshal.Alloc.realloc1_closure:
	.quad	Foreign.Marshal.Alloc.realloc1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.823270869 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.realloc1_entry
.type Foreign.Marshal.Alloc.realloc1_entry, @object
Foreign.Marshal.Alloc.realloc1_entry:
_c8NUc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NUd
_c8NUe:
	leaq block_c8NU9_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8NU9
_c8NUa:
	movq (%rbx),%rax
	jmp *(%rax)
_c8NUd:
	leaq Foreign.Marshal.Alloc.realloc1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Alloc.realloc1_entry, .-Foreign.Marshal.Alloc.realloc1_entry


==================== Asm code ====================
2018-03-16 16:03:57.823962721 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc1_info
.type Foreign.Marshal.Alloc.realloc1_info, @object
Foreign.Marshal.Alloc.realloc1_info:
	.quad	Foreign.Marshal.Alloc.realloc1_entry
	.quad	0
	.quad	38654705678
	.quad	12884901903
	.quad	S8NKP_srt+168


==================== Asm code ====================
2018-03-16 16:03:57.824653516 UTC

.section .text
.align 8
_c8NU9:
_c8NU9:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp Foreign.Marshal.Alloc.$wrealloc_entry
	.size _c8NU9, .-_c8NU9


==================== Asm code ====================
2018-03-16 16:03:57.825285543 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NU9_info:
	.quad	_c8NU9
	.quad	1
	.quad	4294967326
	.quad	S8NKP_srt+168


==================== Asm code ====================
2018-03-16 16:03:57.827453672 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc_closure
.type Foreign.Marshal.Alloc.realloc_closure, @object
Foreign.Marshal.Alloc.realloc_closure:
	.quad	Foreign.Marshal.Alloc.realloc_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.828094732 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.realloc_entry
.type Foreign.Marshal.Alloc.realloc_entry, @object
Foreign.Marshal.Alloc.realloc_entry:
_c8NUx:
	jmp Foreign.Marshal.Alloc.realloc1_entry
	.size Foreign.Marshal.Alloc.realloc_entry, .-Foreign.Marshal.Alloc.realloc_entry


==================== Asm code ====================
2018-03-16 16:03:57.828687883 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.realloc_info
.type Foreign.Marshal.Alloc.realloc_info, @object
Foreign.Marshal.Alloc.realloc_info:
	.quad	Foreign.Marshal.Alloc.realloc_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	S8NKP_srt+192


==================== Asm code ====================
2018-03-16 16:03:57.83146491 UTC

.section .data
.align 8
.align 1
free1_r8N6D_closure:
	.quad	free1_r8N6D_info


==================== Asm code ====================
2018-03-16 16:03:57.83219637 UTC

.section .text
.align 8
free1_r8N6D_entry:
_c8NUL:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NUM
_c8NUN:
	leaq block_c8NUI_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8NUI
_c8NUJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c8NUM:
	leaq free1_r8N6D_closure(%rip),%rbx
	jmp *-8(%r13)
	.size free1_r8N6D_entry, .-free1_r8N6D_entry


==================== Asm code ====================
2018-03-16 16:03:57.8328598 UTC

.section .data.rel.ro
.align 8
.align 1
free1_r8N6D_info:
	.quad	free1_r8N6D_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:57.833876325 UTC

.section .text
.align 8
_c8NUI:
_c8NUI:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call free@plt
	addq $8,%rsp
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8NUI, .-_c8NUI


==================== Asm code ====================
2018-03-16 16:03:57.834445947 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NUI_info:
	.quad	_c8NUI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:03:57.836481785 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.free_closure
.type Foreign.Marshal.Alloc.free_closure, @object
Foreign.Marshal.Alloc.free_closure:
	.quad	Foreign.Marshal.Alloc.free_info


==================== Asm code ====================
2018-03-16 16:03:57.837108304 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.free_entry
.type Foreign.Marshal.Alloc.free_entry, @object
Foreign.Marshal.Alloc.free_entry:
_c8NVa:
	jmp free1_r8N6D_entry
	.size Foreign.Marshal.Alloc.free_entry, .-Foreign.Marshal.Alloc.free_entry


==================== Asm code ====================
2018-03-16 16:03:57.837726564 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.free_info
.type Foreign.Marshal.Alloc.free_info, @object
Foreign.Marshal.Alloc.free_info:
	.quad	Foreign.Marshal.Alloc.free_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:03:57.840761176 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.$wreallocBytes_closure
.type Foreign.Marshal.Alloc.$wreallocBytes_closure, @object
Foreign.Marshal.Alloc.$wreallocBytes_closure:
	.quad	Foreign.Marshal.Alloc.$wreallocBytes_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.84180979 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.$wreallocBytes_entry
.type Foreign.Marshal.Alloc.$wreallocBytes_entry, @object
Foreign.Marshal.Alloc.$wreallocBytes_entry:
_c8NVp:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8NVt
_c8NVs:
	testq %rsi,%rsi
	je _c8NVo
_c8NVn:
	subq $8,%rsp
	movq %r14,%rdi
	xorl %eax,%eax
	call realloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c8NVH
_c8NVG:
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c8NVH:
	addq $-16,%r12
	leaq Foreign.Marshal.Alloc.realloc2_closure(%rip),%rbx
	jmp *stg_raiseIO#@gotpcrel(%rip)
_c8NVt:
	movq $16,904(%r13)
	leaq Foreign.Marshal.Alloc.$wreallocBytes_closure(%rip),%rbx
	jmp *-8(%r13)
_c8NVo:
	subq $8,%rsp
	movq %r14,%rdi
	xorl %eax,%eax
	call free@plt
	addq $8,%rsp
	addq $-16,%r12
	movq GHC.Ptr.nullPtr_closure@gotpcrel(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Foreign.Marshal.Alloc.$wreallocBytes_entry, .-Foreign.Marshal.Alloc.$wreallocBytes_entry


==================== Asm code ====================
2018-03-16 16:03:57.842637935 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.$wreallocBytes_info
.type Foreign.Marshal.Alloc.$wreallocBytes_info, @object
Foreign.Marshal.Alloc.$wreallocBytes_info:
	.quad	Foreign.Marshal.Alloc.$wreallocBytes_entry
	.quad	0
	.quad	38654705678
	.quad	12884901900
	.quad	S8NKP_srt+176


==================== Asm code ====================
2018-03-16 16:03:57.846759912 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.reallocBytes1_closure
.type Foreign.Marshal.Alloc.reallocBytes1_closure, @object
Foreign.Marshal.Alloc.reallocBytes1_closure:
	.quad	Foreign.Marshal.Alloc.reallocBytes1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.847526246 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.reallocBytes1_entry
.type Foreign.Marshal.Alloc.reallocBytes1_entry, @object
Foreign.Marshal.Alloc.reallocBytes1_entry:
_c8NW0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8NW4
_c8NW5:
	leaq block_c8NVX_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8NVX
_c8NVY:
	movq (%rbx),%rax
	jmp *(%rax)
_c8NW4:
	leaq Foreign.Marshal.Alloc.reallocBytes1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.Marshal.Alloc.reallocBytes1_entry, .-Foreign.Marshal.Alloc.reallocBytes1_entry


==================== Asm code ====================
2018-03-16 16:03:57.8481862 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.reallocBytes1_info
.type Foreign.Marshal.Alloc.reallocBytes1_info, @object
Foreign.Marshal.Alloc.reallocBytes1_info:
	.quad	Foreign.Marshal.Alloc.reallocBytes1_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8NKP_srt+200


==================== Asm code ====================
2018-03-16 16:03:57.848878544 UTC

.section .text
.align 8
_c8NVX:
_c8NVX:
	leaq block_c8NW3_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8NW3
_c8NW7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8NVX, .-_c8NVX


==================== Asm code ====================
2018-03-16 16:03:57.849530708 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NVX_info:
	.quad	_c8NVX
	.quad	1
	.quad	4294967326
	.quad	S8NKP_srt+200


==================== Asm code ====================
2018-03-16 16:03:57.850155038 UTC

.section .text
.align 8
_c8NW3:
_c8NW3:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp Foreign.Marshal.Alloc.$wreallocBytes_entry
	.size _c8NW3, .-_c8NW3


==================== Asm code ====================
2018-03-16 16:03:57.8507196 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8NW3_info:
	.quad	_c8NW3
	.quad	65
	.quad	4294967326
	.quad	S8NKP_srt+200


==================== Asm code ====================
2018-03-16 16:03:57.852819134 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.reallocBytes_closure
.type Foreign.Marshal.Alloc.reallocBytes_closure, @object
Foreign.Marshal.Alloc.reallocBytes_closure:
	.quad	Foreign.Marshal.Alloc.reallocBytes_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:03:57.853444333 UTC

.section .text
.align 8
.globl Foreign.Marshal.Alloc.reallocBytes_entry
.type Foreign.Marshal.Alloc.reallocBytes_entry, @object
Foreign.Marshal.Alloc.reallocBytes_entry:
_c8NWx:
	jmp Foreign.Marshal.Alloc.reallocBytes1_entry
	.size Foreign.Marshal.Alloc.reallocBytes_entry, .-Foreign.Marshal.Alloc.reallocBytes_entry


==================== Asm code ====================
2018-03-16 16:03:57.854035786 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.Marshal.Alloc.reallocBytes_info
.type Foreign.Marshal.Alloc.reallocBytes_info, @object
Foreign.Marshal.Alloc.reallocBytes_info:
	.quad	Foreign.Marshal.Alloc.reallocBytes_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	S8NKP_srt+208


==================== Asm code ====================
2018-03-16 16:03:57.856118994 UTC

.section .data
.align 8
.align 1
.globl Foreign.Marshal.Alloc.finalizerFree_closure
.type Foreign.Marshal.Alloc.finalizerFree_closure, @object
Foreign.Marshal.Alloc.finalizerFree_closure:
	.quad	GHC.Ptr.FunPtr_con_info
	.quad	free


==================== Asm code ====================
2018-03-16 16:03:57.859342837 UTC

.section .data.rel.ro
.align 8
.align 1
S8NKP_srt:
	.quad	GHC.Err.undefined_closure
	.quad	lvl10_r8N6f_closure
	.quad	lvl15_r8N6k_closure
	.quad	lvl11_r8N6g_closure
	.quad	lvl16_r8N6l_closure
	.quad	Foreign.Marshal.Alloc.alloca_closure
	.quad	GHC.IO.Exception.$fExceptionIOException_$ctoException_closure
	.quad	Foreign.Marshal.Alloc.malloc2_closure
	.quad	Foreign.Marshal.Alloc.malloc1_closure
	.quad	Foreign.Marshal.Alloc.mallocBytes1_closure
	.quad	lvl21_r8N6q_closure
	.quad	lvl22_r8N6r_closure
	.quad	malloc5_r8N6s_closure
	.quad	Foreign.Marshal.Alloc.calloc2_closure
	.quad	Foreign.Marshal.Alloc.calloc1_closure
	.quad	Foreign.Marshal.Alloc.callocBytes1_closure
	.quad	lvl25_r8N6v_closure
	.quad	lvl26_r8N6w_closure
	.quad	calloc7_r8N6x_closure
	.quad	Foreign.Marshal.Alloc.realloc3_closure
	.quad	lvl31_r8N6C_closure
	.quad	Foreign.Marshal.Alloc.$wrealloc_closure
	.quad	Foreign.Marshal.Alloc.realloc2_closure
	.quad	Foreign.Marshal.Alloc.realloc6_closure
	.quad	Foreign.Marshal.Alloc.realloc1_closure
	.quad	Foreign.Marshal.Alloc.$wreallocBytes_closure
	.quad	Foreign.Marshal.Alloc.reallocBytes1_closure

