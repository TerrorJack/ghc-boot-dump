
==================== Pre unarise: ====================
2018-03-16 16:03:56.693654976 UTC

Foreign.Marshal.Alloc.allocaBytes1
  :: forall a b.
     GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s8N6F action_s8N6G eta_s8N6H]
        case ds_s8N6F of {
          GHC.Types.I# size_s8N6J [Occ=Once] ->
              case newPinnedByteArray# [size_s8N6J eta_s8N6H] of {
                (#,#) ipv_s8N6L [Occ=Once] ipv1_s8N6M [Occ=Once] ->
                    case unsafeFreezeByteArray# [ipv1_s8N6M ipv_s8N6L] of {
                      (#,#) ipv2_s8N6O [Occ=Once] ipv3_s8N6P ->
                          case byteArrayContents# [ipv3_s8N6P] of sat_s8N6Q {
                            __DEFAULT ->
                                let {
                                  sat_s8N6R [Occ=Once] :: GHC.Ptr.Ptr a_a8MH6
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [sat_s8N6Q];
                                } in 
                                  case action_s8N6G sat_s8N6R ipv2_s8N6O of {
                                    (#,#) ipv4_s8N6T [Occ=Once] ipv5_s8N6U [Occ=Once] ->
                                        case touch# [ipv3_s8N6P ipv4_s8N6T] of s4_s8N6V {
                                          __DEFAULT -> (#,#) [s4_s8N6V ipv5_s8N6U];
                                        };
                                  };
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.allocaBytes
  :: forall a b.
     GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Alloc.allocaBytes1 eta_B3 eta_B2 eta_B1;

Foreign.Marshal.Alloc.allocaBytesAligned1
  :: forall a b.
     GHC.Types.Int
     -> GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s8N6W ds1_s8N6X action_s8N6Y eta_s8N6Z]
        case ds_s8N6W of {
          GHC.Types.I# size_s8N71 [Occ=Once] ->
              case ds1_s8N6X of {
                GHC.Types.I# align_s8N73 [Occ=Once] ->
                    case
                        newAlignedPinnedByteArray# [size_s8N71 align_s8N73 eta_s8N6Z]
                    of
                    { (#,#) ipv_s8N75 [Occ=Once] ipv1_s8N76 [Occ=Once] ->
                          case unsafeFreezeByteArray# [ipv1_s8N76 ipv_s8N75] of {
                            (#,#) ipv2_s8N78 [Occ=Once] ipv3_s8N79 ->
                                case byteArrayContents# [ipv3_s8N79] of sat_s8N7a {
                                  __DEFAULT ->
                                      let {
                                        sat_s8N7b [Occ=Once] :: GHC.Ptr.Ptr a_a8MGA
                                        [LclId] =
                                            CCCS GHC.Ptr.Ptr! [sat_s8N7a];
                                      } in 
                                        case action_s8N6Y sat_s8N7b ipv2_s8N78 of {
                                          (#,#) ipv4_s8N7d [Occ=Once] ipv5_s8N7e [Occ=Once] ->
                                              case touch# [ipv3_s8N79 ipv4_s8N7d] of s4_s8N7f {
                                                __DEFAULT -> (#,#) [s4_s8N7f ipv5_s8N7e];
                                              };
                                        };
                                };
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.allocaBytesAligned
  :: forall a b.
     GHC.Types.Int
     -> GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b)
     -> GHC.Types.IO b
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Alloc.allocaBytesAligned1
            eta_B4 eta_B3 eta_B2 eta_B1;

lvl_r8N65 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "undefined"#;

lvl1_r8N66 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_r8N65;

Foreign.Marshal.Alloc.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

lvl2_r8N67 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# Foreign.Marshal.Alloc.$trModule4;

Foreign.Marshal.Alloc.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.Marshal.Alloc"#;

lvl3_r8N68 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# Foreign.Marshal.Alloc.$trModule2;

lvl4_r8N69 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "./Foreign/Marshal/Alloc.hs"#;

lvl5_r8N6a :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl4_r8N69;

lvl6_r8N6b :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [117#];

lvl7_r8N6c :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [31#];

lvl8_r8N6d :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [40#];

lvl9_r8N6e :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8N67
                                           lvl3_r8N68
                                           lvl5_r8N6a
                                           lvl6_r8N6b
                                           lvl7_r8N6c
                                           lvl6_r8N6b
                                           lvl8_r8N6d];

lvl10_r8N6f :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8N66
                                                  lvl9_r8N6e
                                                  GHC.Stack.Types.EmptyCallStack];

lvl11_r8N6g :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl10_r8N6f;

lvl12_r8N6h :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [60#];

lvl13_r8N6i :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [69#];

lvl14_r8N6j :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8N67
                                           lvl3_r8N68
                                           lvl5_r8N6a
                                           lvl6_r8N6b
                                           lvl12_r8N6h
                                           lvl6_r8N6b
                                           lvl13_r8N6i];

lvl15_r8N6k :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8N66
                                                  lvl14_r8N6j
                                                  GHC.Stack.Types.EmptyCallStack];

lvl16_r8N6l :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl15_r8N6k;

Foreign.Marshal.Alloc.alloca [InlPrag=INLINE (sat-args=0)]
  :: forall a b.
     Foreign.Storable.Storable a =>
     (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=1,
 Str=<L,U(1*C1(U(U)),1*C1(U(U)),A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8N7g]
        let {
          ds_s8N7h [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8N7g] \u []
                  Foreign.Storable.sizeOf $dStorable_s8N7g lvl11_r8N6g; } in
        let {
          ds1_s8N7i [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8N7g] \u []
                  Foreign.Storable.alignment $dStorable_s8N7g lvl16_r8N6l; } in
        let {
          sat_s8N7B [Occ=Once]
            :: (GHC.Ptr.Ptr a_a8MHC -> GHC.Types.IO b_a8MHD)
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_a8MHD #)
          [LclId] =
              [ds_s8N7h ds1_s8N7i] \r [action_s8N7j eta_s8N7k]
                  case ds_s8N7h of {
                    GHC.Types.I# size_s8N7m [Occ=Once] ->
                        case ds1_s8N7i of {
                          GHC.Types.I# align_s8N7o [Occ=Once] ->
                              case
                                  newAlignedPinnedByteArray# [size_s8N7m align_s8N7o eta_s8N7k]
                              of
                              { (#,#) ipv_s8N7q [Occ=Once] ipv1_s8N7r [Occ=Once] ->
                                    case unsafeFreezeByteArray# [ipv1_s8N7r ipv_s8N7q] of {
                                      (#,#) ipv2_s8N7t [Occ=Once] ipv3_s8N7u ->
                                          case byteArrayContents# [ipv3_s8N7u] of sat_s8N7v {
                                            __DEFAULT ->
                                                let {
                                                  sat_s8N7w [Occ=Once] :: GHC.Ptr.Ptr a_a8MHC
                                                  [LclId] =
                                                      CCCS GHC.Ptr.Ptr! [sat_s8N7v];
                                                } in 
                                                  case action_s8N7j sat_s8N7w ipv2_s8N7t of {
                                                    (#,#) ipv4_s8N7y [Occ=Once]
                                                          ipv5_s8N7z [Occ=Once] ->
                                                        case
                                                            touch# [ipv3_s8N7u ipv4_s8N7y]
                                                        of
                                                        s4_s8N7A
                                                        { __DEFAULT -> (#,#) [s4_s8N7A ipv5_s8N7z];
                                                        };
                                                  };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8N7B;

Foreign.Marshal.Alloc.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Marshal.Alloc.$trModule4];

Foreign.Marshal.Alloc.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Marshal.Alloc.$trModule2];

Foreign.Marshal.Alloc.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.Marshal.Alloc.$trModule3
                                     Foreign.Marshal.Alloc.$trModule1];

Foreign.Marshal.Alloc.malloc4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "malloc"#;

Foreign.Marshal.Alloc.malloc3 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# Foreign.Marshal.Alloc.malloc4;

Foreign.Marshal.Alloc.calloc4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "out of memory"#;

Foreign.Marshal.Alloc.calloc3 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# Foreign.Marshal.Alloc.calloc4;

Foreign.Marshal.Alloc.malloc2 :: GHC.IO.Exception.IOException
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Exception.IOError! [GHC.Base.Nothing
                                             GHC.IO.Exception.ResourceExhausted
                                             Foreign.Marshal.Alloc.malloc3
                                             Foreign.Marshal.Alloc.calloc3
                                             GHC.Base.Nothing
                                             GHC.Base.Nothing];

Foreign.Marshal.Alloc.malloc1 :: GHC.Exception.SomeException
[GblId] =
    [] \u []
        GHC.IO.Exception.$fExceptionIOException_$ctoException
            Foreign.Marshal.Alloc.malloc2;

Foreign.Marshal.Alloc.mallocBytes1
  :: forall a.
     GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [size_s8N7C s_s8N7D]
        case size_s8N7C of {
          GHC.Types.I# x#_s8N7F [Occ=Once] ->
              case int2Word# [x#_s8N7F] of sat_s8N7H {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s8N7H s_s8N7D] of {
                      (#,#) ds_s8N7J [Occ=Once*] ds1_s8N7K ->
                          case eqAddr# [ds1_s8N7K __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8N7M [Occ=Once] :: GHC.Ptr.Ptr a_a8MIg
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds1_s8N7K];
                                } in  (#,#) [ds_s8N7J sat_s8N7M];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.malloc1 ds_s8N7J];
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.mallocBytes
  :: forall a. GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.Marshal.Alloc.mallocBytes1 eta_B2 eta_B1;

lvl17_r8N6m :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [84#];

lvl18_r8N6n :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [32#];

lvl19_r8N6o :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [41#];

lvl20_r8N6p :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8N67
                                           lvl3_r8N68
                                           lvl5_r8N6a
                                           lvl17_r8N6m
                                           lvl18_r8N6n
                                           lvl17_r8N6m
                                           lvl19_r8N6o];

lvl21_r8N6q :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8N66
                                                  lvl20_r8N6p
                                                  GHC.Stack.Types.EmptyCallStack];

lvl22_r8N6r :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl21_r8N6q;

malloc5_r8N6s
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=2,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [$dStorable_s8N7N eta_s8N7O]
        case Foreign.Storable.sizeOf $dStorable_s8N7N lvl22_r8N6r of {
          GHC.Types.I# x#_s8N7Q [Occ=Once] ->
              case int2Word# [x#_s8N7Q] of sat_s8N7S {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s8N7S eta_s8N7O] of {
                      (#,#) ds_s8N7U [Occ=Once*] ds1_s8N7V ->
                          case eqAddr# [ds1_s8N7V __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8N7X [Occ=Once] :: GHC.Ptr.Ptr a_a8MIE
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds1_s8N7V];
                                } in  (#,#) [ds_s8N7U sat_s8N7X];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.malloc1 ds_s8N7U];
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.malloc [InlPrag=INLINE (sat-args=0)]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=2,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] malloc5_r8N6s eta_B2 eta_B1;

Foreign.Marshal.Alloc.calloc6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "calloc"#;

Foreign.Marshal.Alloc.calloc5 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# Foreign.Marshal.Alloc.calloc6;

Foreign.Marshal.Alloc.calloc2 :: GHC.IO.Exception.IOException
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Exception.IOError! [GHC.Base.Nothing
                                             GHC.IO.Exception.ResourceExhausted
                                             Foreign.Marshal.Alloc.calloc5
                                             Foreign.Marshal.Alloc.calloc3
                                             GHC.Base.Nothing
                                             GHC.Base.Nothing];

Foreign.Marshal.Alloc.calloc1 :: GHC.Exception.SomeException
[GblId] =
    [] \u []
        GHC.IO.Exception.$fExceptionIOException_$ctoException
            Foreign.Marshal.Alloc.calloc2;

Foreign.Marshal.Alloc.callocBytes1
  :: forall a.
     GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [size_s8N7Y s_s8N7Z]
        case size_s8N7Y of {
          GHC.Types.I# x#_s8N81 [Occ=Once] ->
              case int2Word# [x#_s8N81] of sat_s8N83 {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [1## sat_s8N83 s_s8N7Z] of {
                      (#,#) ds_s8N85 [Occ=Once*] ds1_s8N86 ->
                          case eqAddr# [ds1_s8N86 __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8N88 [Occ=Once] :: GHC.Ptr.Ptr a_a8MI3
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds1_s8N86];
                                } in  (#,#) [ds_s8N85 sat_s8N88];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.calloc1 ds_s8N85];
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.callocBytes
  :: forall a. GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.Marshal.Alloc.callocBytes1 eta_B2 eta_B1;

lvl23_r8N6t :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [90#];

lvl24_r8N6u :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8N67
                                           lvl3_r8N68
                                           lvl5_r8N6a
                                           lvl23_r8N6t
                                           lvl7_r8N6c
                                           lvl23_r8N6t
                                           lvl8_r8N6d];

lvl25_r8N6v :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8N66
                                                  lvl24_r8N6u
                                                  GHC.Stack.Types.EmptyCallStack];

lvl26_r8N6w :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl25_r8N6v;

calloc7_r8N6x
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=2,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [$dStorable_s8N89 eta_s8N8a]
        case Foreign.Storable.sizeOf $dStorable_s8N89 lvl26_r8N6w of {
          GHC.Types.I# x#_s8N8c [Occ=Once] ->
              case int2Word# [x#_s8N8c] of sat_s8N8e {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [1## sat_s8N8e eta_s8N8a] of {
                      (#,#) ds_s8N8g [Occ=Once*] ds1_s8N8h ->
                          case eqAddr# [ds1_s8N8h __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8N8j [Occ=Once] :: GHC.Ptr.Ptr a_a8MIp
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds1_s8N8h];
                                } in  (#,#) [ds_s8N8g sat_s8N8j];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.calloc1 ds_s8N8g];
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.calloc [InlPrag=INLINE (sat-args=0)]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=2,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] calloc7_r8N6x eta_B2 eta_B1;

Foreign.Marshal.Alloc.realloc5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "realloc"#;

Foreign.Marshal.Alloc.realloc4 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# Foreign.Marshal.Alloc.realloc5;

Foreign.Marshal.Alloc.realloc3 :: GHC.IO.Exception.IOException
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Exception.IOError! [GHC.Base.Nothing
                                             GHC.IO.Exception.ResourceExhausted
                                             Foreign.Marshal.Alloc.realloc4
                                             Foreign.Marshal.Alloc.calloc3
                                             GHC.Base.Nothing
                                             GHC.Base.Nothing];

Foreign.Marshal.Alloc.realloc2 :: GHC.Exception.SomeException
[GblId] =
    [] \u []
        GHC.IO.Exception.$fExceptionIOException_$ctoException
            Foreign.Marshal.Alloc.realloc3;

lvl27_r8N6y :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [162#];

lvl28_r8N6z :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [34#];

lvl29_r8N6A :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [43#];

lvl30_r8N6B :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8N67
                                           lvl3_r8N68
                                           lvl5_r8N6a
                                           lvl27_r8N6y
                                           lvl28_r8N6z
                                           lvl27_r8N6y
                                           lvl29_r8N6A];

lvl31_r8N6C :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8N66
                                                  lvl30_r8N6B
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Alloc.realloc6 :: forall b. b
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl31_r8N6C;

Foreign.Marshal.Alloc.$wrealloc [InlPrag=NOUSERINLINE[0]]
  :: forall a b.
     Foreign.Storable.Storable b =>
     GHC.Prim.Addr#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr b #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8N8k ww_s8N8l w1_s8N8m]
        case
            Foreign.Storable.sizeOf w_s8N8k Foreign.Marshal.Alloc.realloc6
        of
        { GHC.Types.I# x#_s8N8o [Occ=Once] ->
              case int2Word# [x#_s8N8o] of sat_s8N8q {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [ww_s8N8l sat_s8N8q w1_s8N8m] of {
                      (#,#) ds_s8N8s [Occ=Once*] ds1_s8N8t ->
                          case eqAddr# [ds1_s8N8t __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8N8v [Occ=Once] :: GHC.Ptr.Ptr b_s8MYG
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds1_s8N8t];
                                } in  (#,#) [ds_s8N8s sat_s8N8v];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.realloc2 ds_s8N8s];
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.realloc1 [InlPrag=NOUSERINLINE[0]]
  :: forall a b.
     Foreign.Storable.Storable b =>
     GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr b #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8N8w w1_s8N8x w2_s8N8y]
        case w1_s8N8x of {
          GHC.Ptr.Ptr ww1_s8N8A [Occ=Once] ->
              Foreign.Marshal.Alloc.$wrealloc w_s8N8w ww1_s8N8A w2_s8N8y;
        };

Foreign.Marshal.Alloc.realloc
  :: forall a b.
     Foreign.Storable.Storable b =>
     GHC.Ptr.Ptr a -> GHC.Types.IO (GHC.Ptr.Ptr b)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Alloc.realloc1 eta_B3 eta_B2 eta_B1;

free1_r8N6D
  :: forall a.
     GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [ds_s8N8B eta_s8N8C]
        case ds_s8N8B of {
          GHC.Ptr.Ptr ds2_s8N8E [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [ds2_s8N8E eta_s8N8C] of {
                Unit# ds3_s8N8H [Occ=Once] -> (#,#) [ds3_s8N8H GHC.Tuple.()];
              };
        };

Foreign.Marshal.Alloc.free
  :: forall a. GHC.Ptr.Ptr a -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] free1_r8N6D eta_B2 eta_B1;

Foreign.Marshal.Alloc.$wreallocBytes [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId, Arity=3, Str=<S,U><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [ww_s8N8I ww1_s8N8J w_s8N8K]
        case ww1_s8N8J of ds_s8N8L {
          __DEFAULT ->
              case int2Word# [ds_s8N8L] of sat_s8N8N {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [ww_s8N8I sat_s8N8N w_s8N8K] of {
                      (#,#) ds1_s8N8P [Occ=Once*] ds2_s8N8Q ->
                          case eqAddr# [ds2_s8N8Q __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8N8S [Occ=Once] :: GHC.Ptr.Ptr a_s8MYR
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds2_s8N8Q];
                                } in  (#,#) [ds1_s8N8P sat_s8N8S];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.realloc2 ds1_s8N8P];
                          };
                    };
              };
          0# ->
              case __pkg_ccall base-4.11.0.0 [ww_s8N8I w_s8N8K] of {
                Unit# ds1_s8N8V [Occ=Once] -> (#,#) [ds1_s8N8V GHC.Ptr.nullPtr];
              };
        };

Foreign.Marshal.Alloc.reallocBytes1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8N8W w1_s8N8X w2_s8N8Y]
        case w_s8N8W of {
          GHC.Ptr.Ptr ww1_s8N90 [Occ=Once] ->
              case w1_s8N8X of {
                GHC.Types.I# ww3_s8N92 [Occ=Once] ->
                    Foreign.Marshal.Alloc.$wreallocBytes ww1_s8N90 ww3_s8N92 w2_s8N8Y;
              };
        };

Foreign.Marshal.Alloc.reallocBytes
  :: forall a.
     GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Alloc.reallocBytes1 eta_B3 eta_B2 eta_B1;

Foreign.Marshal.Alloc.finalizerFree
  :: forall a. GHC.ForeignPtr.FinalizerPtr a
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Ptr.FunPtr! [__label "free" (function)];


==================== STG syntax: ====================
2018-03-16 16:03:56.704709997 UTC

Foreign.Marshal.Alloc.allocaBytes1
  :: forall a b.
     GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s8N6F action_s8N6G void_0E]
        case ds_s8N6F of {
          GHC.Types.I# size_s8N6J [Occ=Once] ->
              case newPinnedByteArray# [size_s8N6J GHC.Prim.void#] of {
                Unit# ipv1_s8N6M [Occ=Once] ->
                    case unsafeFreezeByteArray# [ipv1_s8N6M GHC.Prim.void#] of {
                      Unit# ipv3_s8N6P ->
                          case byteArrayContents# [ipv3_s8N6P] of sat_s8N6Q {
                            __DEFAULT ->
                                let {
                                  sat_s8N6R [Occ=Once] :: GHC.Ptr.Ptr a_a8MH6
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [sat_s8N6Q];
                                } in 
                                  case action_s8N6G sat_s8N6R GHC.Prim.void# of {
                                    Unit# ipv5_s8N6U [Occ=Once] ->
                                        case touch# [ipv3_s8N6P GHC.Prim.void#] of s4_s8N6V {
                                          (##) -> Unit# [ipv5_s8N6U];
                                        };
                                  };
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.allocaBytes
  :: forall a b.
     GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Alloc.allocaBytes1 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.Marshal.Alloc.allocaBytesAligned1
  :: forall a b.
     GHC.Types.Int
     -> GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s8N6W ds1_s8N6X action_s8N6Y void_0E]
        case ds_s8N6W of {
          GHC.Types.I# size_s8N71 [Occ=Once] ->
              case ds1_s8N6X of {
                GHC.Types.I# align_s8N73 [Occ=Once] ->
                    case
                        newAlignedPinnedByteArray# [size_s8N71 align_s8N73 GHC.Prim.void#]
                    of
                    { Unit# ipv1_s8N76 [Occ=Once] ->
                          case unsafeFreezeByteArray# [ipv1_s8N76 GHC.Prim.void#] of {
                            Unit# ipv3_s8N79 ->
                                case byteArrayContents# [ipv3_s8N79] of sat_s8N7a {
                                  __DEFAULT ->
                                      let {
                                        sat_s8N7b [Occ=Once] :: GHC.Ptr.Ptr a_a8MGA
                                        [LclId] =
                                            CCCS GHC.Ptr.Ptr! [sat_s8N7a];
                                      } in 
                                        case action_s8N6Y sat_s8N7b GHC.Prim.void# of {
                                          Unit# ipv5_s8N7e [Occ=Once] ->
                                              case touch# [ipv3_s8N79 GHC.Prim.void#] of s4_s8N7f {
                                                (##) -> Unit# [ipv5_s8N7e];
                                              };
                                        };
                                };
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.allocaBytesAligned
  :: forall a b.
     GHC.Types.Int
     -> GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b)
     -> GHC.Types.IO b
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Alloc.allocaBytesAligned1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

lvl_r8N65 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "undefined"#;

lvl1_r8N66 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_r8N65;

Foreign.Marshal.Alloc.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

lvl2_r8N67 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# Foreign.Marshal.Alloc.$trModule4;

Foreign.Marshal.Alloc.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.Marshal.Alloc"#;

lvl3_r8N68 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# Foreign.Marshal.Alloc.$trModule2;

lvl4_r8N69 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "./Foreign/Marshal/Alloc.hs"#;

lvl5_r8N6a :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl4_r8N69;

lvl6_r8N6b :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [117#];

lvl7_r8N6c :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [31#];

lvl8_r8N6d :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [40#];

lvl9_r8N6e :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8N67
                                           lvl3_r8N68
                                           lvl5_r8N6a
                                           lvl6_r8N6b
                                           lvl7_r8N6c
                                           lvl6_r8N6b
                                           lvl8_r8N6d];

lvl10_r8N6f :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8N66
                                                  lvl9_r8N6e
                                                  GHC.Stack.Types.EmptyCallStack];

lvl11_r8N6g :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl10_r8N6f;

lvl12_r8N6h :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [60#];

lvl13_r8N6i :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [69#];

lvl14_r8N6j :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8N67
                                           lvl3_r8N68
                                           lvl5_r8N6a
                                           lvl6_r8N6b
                                           lvl12_r8N6h
                                           lvl6_r8N6b
                                           lvl13_r8N6i];

lvl15_r8N6k :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8N66
                                                  lvl14_r8N6j
                                                  GHC.Stack.Types.EmptyCallStack];

lvl16_r8N6l :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl15_r8N6k;

Foreign.Marshal.Alloc.alloca [InlPrag=INLINE (sat-args=0)]
  :: forall a b.
     Foreign.Storable.Storable a =>
     (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=1,
 Str=<L,U(1*C1(U(U)),1*C1(U(U)),A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8N7g]
        let {
          ds_s8N7h [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8N7g] \u []
                  Foreign.Storable.sizeOf $dStorable_s8N7g lvl11_r8N6g; } in
        let {
          ds1_s8N7i [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8N7g] \u []
                  Foreign.Storable.alignment $dStorable_s8N7g lvl16_r8N6l; } in
        let {
          sat_s8N7B [Occ=Once]
            :: (GHC.Ptr.Ptr a_a8MHC -> GHC.Types.IO b_a8MHD)
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_a8MHD #)
          [LclId] =
              [ds_s8N7h ds1_s8N7i] \r [action_s8N7j void_0E]
                  case ds_s8N7h of {
                    GHC.Types.I# size_s8N7m [Occ=Once] ->
                        case ds1_s8N7i of {
                          GHC.Types.I# align_s8N7o [Occ=Once] ->
                              case
                                  newAlignedPinnedByteArray# [size_s8N7m align_s8N7o GHC.Prim.void#]
                              of
                              { Unit# ipv1_s8N7r [Occ=Once] ->
                                    case unsafeFreezeByteArray# [ipv1_s8N7r GHC.Prim.void#] of {
                                      Unit# ipv3_s8N7u ->
                                          case byteArrayContents# [ipv3_s8N7u] of sat_s8N7v {
                                            __DEFAULT ->
                                                let {
                                                  sat_s8N7w [Occ=Once] :: GHC.Ptr.Ptr a_a8MHC
                                                  [LclId] =
                                                      CCCS GHC.Ptr.Ptr! [sat_s8N7v];
                                                } in 
                                                  case action_s8N7j sat_s8N7w GHC.Prim.void# of {
                                                    Unit# ipv5_s8N7z [Occ=Once] ->
                                                        case
                                                            touch# [ipv3_s8N7u GHC.Prim.void#]
                                                        of
                                                        s4_s8N7A
                                                        { (##) -> Unit# [ipv5_s8N7z];
                                                        };
                                                  };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8N7B;

Foreign.Marshal.Alloc.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Marshal.Alloc.$trModule4];

Foreign.Marshal.Alloc.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Marshal.Alloc.$trModule2];

Foreign.Marshal.Alloc.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.Marshal.Alloc.$trModule3
                                     Foreign.Marshal.Alloc.$trModule1];

Foreign.Marshal.Alloc.malloc4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "malloc"#;

Foreign.Marshal.Alloc.malloc3 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# Foreign.Marshal.Alloc.malloc4;

Foreign.Marshal.Alloc.calloc4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "out of memory"#;

Foreign.Marshal.Alloc.calloc3 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# Foreign.Marshal.Alloc.calloc4;

Foreign.Marshal.Alloc.malloc2 :: GHC.IO.Exception.IOException
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Exception.IOError! [GHC.Base.Nothing
                                             GHC.IO.Exception.ResourceExhausted
                                             Foreign.Marshal.Alloc.malloc3
                                             Foreign.Marshal.Alloc.calloc3
                                             GHC.Base.Nothing
                                             GHC.Base.Nothing];

Foreign.Marshal.Alloc.malloc1 :: GHC.Exception.SomeException
[GblId] =
    [] \u []
        GHC.IO.Exception.$fExceptionIOException_$ctoException
            Foreign.Marshal.Alloc.malloc2;

Foreign.Marshal.Alloc.mallocBytes1
  :: forall a.
     GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [size_s8N7C void_0E]
        case size_s8N7C of {
          GHC.Types.I# x#_s8N7F [Occ=Once] ->
              case int2Word# [x#_s8N7F] of sat_s8N7H {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s8N7H GHC.Prim.void#] of {
                      Unit# ds1_s8N7K ->
                          case eqAddr# [ds1_s8N7K __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8N7M [Occ=Once] :: GHC.Ptr.Ptr a_a8MIg
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds1_s8N7K];
                                } in  Unit# [sat_s8N7M];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.malloc1 GHC.Prim.void#];
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.mallocBytes
  :: forall a. GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.Marshal.Alloc.mallocBytes1 eta_B2 GHC.Prim.void#;

lvl17_r8N6m :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [84#];

lvl18_r8N6n :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [32#];

lvl19_r8N6o :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [41#];

lvl20_r8N6p :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8N67
                                           lvl3_r8N68
                                           lvl5_r8N6a
                                           lvl17_r8N6m
                                           lvl18_r8N6n
                                           lvl17_r8N6m
                                           lvl19_r8N6o];

lvl21_r8N6q :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8N66
                                                  lvl20_r8N6p
                                                  GHC.Stack.Types.EmptyCallStack];

lvl22_r8N6r :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl21_r8N6q;

malloc5_r8N6s
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=2,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [$dStorable_s8N7N void_0E]
        case Foreign.Storable.sizeOf $dStorable_s8N7N lvl22_r8N6r of {
          GHC.Types.I# x#_s8N7Q [Occ=Once] ->
              case int2Word# [x#_s8N7Q] of sat_s8N7S {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s8N7S GHC.Prim.void#] of {
                      Unit# ds1_s8N7V ->
                          case eqAddr# [ds1_s8N7V __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8N7X [Occ=Once] :: GHC.Ptr.Ptr a_a8MIE
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds1_s8N7V];
                                } in  Unit# [sat_s8N7X];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.malloc1 GHC.Prim.void#];
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.malloc [InlPrag=INLINE (sat-args=0)]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=2,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E] malloc5_r8N6s eta_B2 GHC.Prim.void#;

Foreign.Marshal.Alloc.calloc6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "calloc"#;

Foreign.Marshal.Alloc.calloc5 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# Foreign.Marshal.Alloc.calloc6;

Foreign.Marshal.Alloc.calloc2 :: GHC.IO.Exception.IOException
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Exception.IOError! [GHC.Base.Nothing
                                             GHC.IO.Exception.ResourceExhausted
                                             Foreign.Marshal.Alloc.calloc5
                                             Foreign.Marshal.Alloc.calloc3
                                             GHC.Base.Nothing
                                             GHC.Base.Nothing];

Foreign.Marshal.Alloc.calloc1 :: GHC.Exception.SomeException
[GblId] =
    [] \u []
        GHC.IO.Exception.$fExceptionIOException_$ctoException
            Foreign.Marshal.Alloc.calloc2;

Foreign.Marshal.Alloc.callocBytes1
  :: forall a.
     GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [size_s8N7Y void_0E]
        case size_s8N7Y of {
          GHC.Types.I# x#_s8N81 [Occ=Once] ->
              case int2Word# [x#_s8N81] of sat_s8N83 {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [1## sat_s8N83 GHC.Prim.void#] of {
                      Unit# ds1_s8N86 ->
                          case eqAddr# [ds1_s8N86 __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8N88 [Occ=Once] :: GHC.Ptr.Ptr a_a8MI3
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds1_s8N86];
                                } in  Unit# [sat_s8N88];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.calloc1 GHC.Prim.void#];
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.callocBytes
  :: forall a. GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.Marshal.Alloc.callocBytes1 eta_B2 GHC.Prim.void#;

lvl23_r8N6t :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [90#];

lvl24_r8N6u :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8N67
                                           lvl3_r8N68
                                           lvl5_r8N6a
                                           lvl23_r8N6t
                                           lvl7_r8N6c
                                           lvl23_r8N6t
                                           lvl8_r8N6d];

lvl25_r8N6v :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8N66
                                                  lvl24_r8N6u
                                                  GHC.Stack.Types.EmptyCallStack];

lvl26_r8N6w :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl25_r8N6v;

calloc7_r8N6x
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=2,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [$dStorable_s8N89 void_0E]
        case Foreign.Storable.sizeOf $dStorable_s8N89 lvl26_r8N6w of {
          GHC.Types.I# x#_s8N8c [Occ=Once] ->
              case int2Word# [x#_s8N8c] of sat_s8N8e {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [1## sat_s8N8e GHC.Prim.void#] of {
                      Unit# ds1_s8N8h ->
                          case eqAddr# [ds1_s8N8h __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8N8j [Occ=Once] :: GHC.Ptr.Ptr a_a8MIp
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds1_s8N8h];
                                } in  Unit# [sat_s8N8j];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.calloc1 GHC.Prim.void#];
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.calloc [InlPrag=INLINE (sat-args=0)]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=2,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E] calloc7_r8N6x eta_B2 GHC.Prim.void#;

Foreign.Marshal.Alloc.realloc5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "realloc"#;

Foreign.Marshal.Alloc.realloc4 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# Foreign.Marshal.Alloc.realloc5;

Foreign.Marshal.Alloc.realloc3 :: GHC.IO.Exception.IOException
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Exception.IOError! [GHC.Base.Nothing
                                             GHC.IO.Exception.ResourceExhausted
                                             Foreign.Marshal.Alloc.realloc4
                                             Foreign.Marshal.Alloc.calloc3
                                             GHC.Base.Nothing
                                             GHC.Base.Nothing];

Foreign.Marshal.Alloc.realloc2 :: GHC.Exception.SomeException
[GblId] =
    [] \u []
        GHC.IO.Exception.$fExceptionIOException_$ctoException
            Foreign.Marshal.Alloc.realloc3;

lvl27_r8N6y :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [162#];

lvl28_r8N6z :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [34#];

lvl29_r8N6A :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [43#];

lvl30_r8N6B :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8N67
                                           lvl3_r8N68
                                           lvl5_r8N6a
                                           lvl27_r8N6y
                                           lvl28_r8N6z
                                           lvl27_r8N6y
                                           lvl29_r8N6A];

lvl31_r8N6C :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8N66
                                                  lvl30_r8N6B
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Alloc.realloc6 :: forall b. b
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl31_r8N6C;

Foreign.Marshal.Alloc.$wrealloc [InlPrag=NOUSERINLINE[0]]
  :: forall a b.
     Foreign.Storable.Storable b =>
     GHC.Prim.Addr#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr b #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8N8k ww_s8N8l void_0E]
        case
            Foreign.Storable.sizeOf w_s8N8k Foreign.Marshal.Alloc.realloc6
        of
        { GHC.Types.I# x#_s8N8o [Occ=Once] ->
              case int2Word# [x#_s8N8o] of sat_s8N8q {
                __DEFAULT ->
                    case
                        __pkg_ccall base-4.11.0.0 [ww_s8N8l sat_s8N8q GHC.Prim.void#]
                    of
                    { Unit# ds1_s8N8t ->
                          case eqAddr# [ds1_s8N8t __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8N8v [Occ=Once] :: GHC.Ptr.Ptr b_s8MYG
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds1_s8N8t];
                                } in  Unit# [sat_s8N8v];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.realloc2 GHC.Prim.void#];
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.realloc1 [InlPrag=NOUSERINLINE[0]]
  :: forall a b.
     Foreign.Storable.Storable b =>
     GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr b #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8N8w w1_s8N8x void_0E]
        case w1_s8N8x of {
          GHC.Ptr.Ptr ww1_s8N8A [Occ=Once] ->
              Foreign.Marshal.Alloc.$wrealloc w_s8N8w ww1_s8N8A GHC.Prim.void#;
        };

Foreign.Marshal.Alloc.realloc
  :: forall a b.
     Foreign.Storable.Storable b =>
     GHC.Ptr.Ptr a -> GHC.Types.IO (GHC.Ptr.Ptr b)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Alloc.realloc1 eta_B3 eta_B2 GHC.Prim.void#;

free1_r8N6D
  :: forall a.
     GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [ds_s8N8B void_0E]
        case ds_s8N8B of {
          GHC.Ptr.Ptr ds2_s8N8E [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [ds2_s8N8E GHC.Prim.void#] of {
                (##) -> Unit# [GHC.Tuple.()];
              };
        };

Foreign.Marshal.Alloc.free
  :: forall a. GHC.Ptr.Ptr a -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E] free1_r8N6D eta_B2 GHC.Prim.void#;

Foreign.Marshal.Alloc.$wreallocBytes [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId, Arity=3, Str=<S,U><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [ww_s8N8I ww1_s8N8J void_0E]
        case ww1_s8N8J of ds_s8N8L {
          __DEFAULT ->
              case int2Word# [ds_s8N8L] of sat_s8N8N {
                __DEFAULT ->
                    case
                        __pkg_ccall base-4.11.0.0 [ww_s8N8I sat_s8N8N GHC.Prim.void#]
                    of
                    { Unit# ds2_s8N8Q ->
                          case eqAddr# [ds2_s8N8Q __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8N8S [Occ=Once] :: GHC.Ptr.Ptr a_s8MYR
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds2_s8N8Q];
                                } in  Unit# [sat_s8N8S];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.realloc2 GHC.Prim.void#];
                          };
                    };
              };
          0# ->
              case __pkg_ccall base-4.11.0.0 [ww_s8N8I GHC.Prim.void#] of {
                (##) -> Unit# [GHC.Ptr.nullPtr];
              };
        };

Foreign.Marshal.Alloc.reallocBytes1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8N8W w1_s8N8X void_0E]
        case w_s8N8W of {
          GHC.Ptr.Ptr ww1_s8N90 [Occ=Once] ->
              case w1_s8N8X of {
                GHC.Types.I# ww3_s8N92 [Occ=Once] ->
                    Foreign.Marshal.Alloc.$wreallocBytes
                        ww1_s8N90 ww3_s8N92 GHC.Prim.void#;
              };
        };

Foreign.Marshal.Alloc.reallocBytes
  :: forall a.
     GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Alloc.reallocBytes1 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.Marshal.Alloc.finalizerFree
  :: forall a. GHC.ForeignPtr.FinalizerPtr a
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Ptr.FunPtr! [__label "free" (function)];


==================== Pre unarise: ====================
2018-03-16 16:03:57.544203441 UTC

Foreign.Marshal.Alloc.allocaBytes1
  :: forall a b.
     GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s8NEX action_s8NEY eta_s8NEZ]
        case ds_s8NEX of {
          GHC.Types.I# size_s8NF1 [Occ=Once] ->
              case newPinnedByteArray# [size_s8NF1 eta_s8NEZ] of {
                (#,#) ipv_s8NF3 [Occ=Once] ipv1_s8NF4 [Occ=Once] ->
                    case unsafeFreezeByteArray# [ipv1_s8NF4 ipv_s8NF3] of {
                      (#,#) ipv2_s8NF6 [Occ=Once] ipv3_s8NF7 ->
                          case byteArrayContents# [ipv3_s8NF7] of sat_s8NF8 {
                            __DEFAULT ->
                                let {
                                  sat_s8NF9 [Occ=Once] :: GHC.Ptr.Ptr a_a8MH6
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [sat_s8NF8];
                                } in 
                                  case action_s8NEY sat_s8NF9 ipv2_s8NF6 of {
                                    (#,#) ipv4_s8NFb [Occ=Once] ipv5_s8NFc [Occ=Once] ->
                                        case touch# [ipv3_s8NF7 ipv4_s8NFb] of s4_s8NFd {
                                          __DEFAULT -> (#,#) [s4_s8NFd ipv5_s8NFc];
                                        };
                                  };
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.allocaBytes
  :: forall a b.
     GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Alloc.allocaBytes1 eta_B3 eta_B2 eta_B1;

Foreign.Marshal.Alloc.allocaBytesAligned1
  :: forall a b.
     GHC.Types.Int
     -> GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s8NFe ds1_s8NFf action_s8NFg eta_s8NFh]
        case ds_s8NFe of {
          GHC.Types.I# size_s8NFj [Occ=Once] ->
              case ds1_s8NFf of {
                GHC.Types.I# align_s8NFl [Occ=Once] ->
                    case
                        newAlignedPinnedByteArray# [size_s8NFj align_s8NFl eta_s8NFh]
                    of
                    { (#,#) ipv_s8NFn [Occ=Once] ipv1_s8NFo [Occ=Once] ->
                          case unsafeFreezeByteArray# [ipv1_s8NFo ipv_s8NFn] of {
                            (#,#) ipv2_s8NFq [Occ=Once] ipv3_s8NFr ->
                                case byteArrayContents# [ipv3_s8NFr] of sat_s8NFs {
                                  __DEFAULT ->
                                      let {
                                        sat_s8NFt [Occ=Once] :: GHC.Ptr.Ptr a_a8MGA
                                        [LclId] =
                                            CCCS GHC.Ptr.Ptr! [sat_s8NFs];
                                      } in 
                                        case action_s8NFg sat_s8NFt ipv2_s8NFq of {
                                          (#,#) ipv4_s8NFv [Occ=Once] ipv5_s8NFw [Occ=Once] ->
                                              case touch# [ipv3_s8NFr ipv4_s8NFv] of s4_s8NFx {
                                                __DEFAULT -> (#,#) [s4_s8NFx ipv5_s8NFw];
                                              };
                                        };
                                };
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.allocaBytesAligned
  :: forall a b.
     GHC.Types.Int
     -> GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b)
     -> GHC.Types.IO b
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Alloc.allocaBytesAligned1
            eta_B4 eta_B3 eta_B2 eta_B1;

lvl_r8N65 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "undefined"#;

lvl1_r8N66 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_r8N65;

Foreign.Marshal.Alloc.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

lvl2_r8N67 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# Foreign.Marshal.Alloc.$trModule4;

Foreign.Marshal.Alloc.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.Marshal.Alloc"#;

lvl3_r8N68 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# Foreign.Marshal.Alloc.$trModule2;

lvl4_r8N69 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "./Foreign/Marshal/Alloc.hs"#;

lvl5_r8N6a :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl4_r8N69;

lvl6_r8N6b :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [117#];

lvl7_r8N6c :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [31#];

lvl8_r8N6d :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [40#];

lvl9_r8N6e :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8N67
                                           lvl3_r8N68
                                           lvl5_r8N6a
                                           lvl6_r8N6b
                                           lvl7_r8N6c
                                           lvl6_r8N6b
                                           lvl8_r8N6d];

lvl10_r8N6f :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8N66
                                                  lvl9_r8N6e
                                                  GHC.Stack.Types.EmptyCallStack];

lvl11_r8N6g :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl10_r8N6f;

lvl12_r8N6h :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [60#];

lvl13_r8N6i :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [69#];

lvl14_r8N6j :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8N67
                                           lvl3_r8N68
                                           lvl5_r8N6a
                                           lvl6_r8N6b
                                           lvl12_r8N6h
                                           lvl6_r8N6b
                                           lvl13_r8N6i];

lvl15_r8N6k :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8N66
                                                  lvl14_r8N6j
                                                  GHC.Stack.Types.EmptyCallStack];

lvl16_r8N6l :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl15_r8N6k;

Foreign.Marshal.Alloc.alloca [InlPrag=INLINE (sat-args=0)]
  :: forall a b.
     Foreign.Storable.Storable a =>
     (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=1,
 Str=<L,U(1*C1(U(U)),1*C1(U(U)),A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8NFy]
        let {
          ds_s8NFz [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8NFy] \u []
                  Foreign.Storable.sizeOf $dStorable_s8NFy lvl11_r8N6g; } in
        let {
          ds1_s8NFA [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8NFy] \u []
                  Foreign.Storable.alignment $dStorable_s8NFy lvl16_r8N6l; } in
        let {
          sat_s8NFT [Occ=Once]
            :: (GHC.Ptr.Ptr a_a8MHC -> GHC.Types.IO b_a8MHD)
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_a8MHD #)
          [LclId] =
              [ds_s8NFz ds1_s8NFA] \r [action_s8NFB eta_s8NFC]
                  case ds_s8NFz of {
                    GHC.Types.I# size_s8NFE [Occ=Once] ->
                        case ds1_s8NFA of {
                          GHC.Types.I# align_s8NFG [Occ=Once] ->
                              case
                                  newAlignedPinnedByteArray# [size_s8NFE align_s8NFG eta_s8NFC]
                              of
                              { (#,#) ipv_s8NFI [Occ=Once] ipv1_s8NFJ [Occ=Once] ->
                                    case unsafeFreezeByteArray# [ipv1_s8NFJ ipv_s8NFI] of {
                                      (#,#) ipv2_s8NFL [Occ=Once] ipv3_s8NFM ->
                                          case byteArrayContents# [ipv3_s8NFM] of sat_s8NFN {
                                            __DEFAULT ->
                                                let {
                                                  sat_s8NFO [Occ=Once] :: GHC.Ptr.Ptr a_a8MHC
                                                  [LclId] =
                                                      CCCS GHC.Ptr.Ptr! [sat_s8NFN];
                                                } in 
                                                  case action_s8NFB sat_s8NFO ipv2_s8NFL of {
                                                    (#,#) ipv4_s8NFQ [Occ=Once]
                                                          ipv5_s8NFR [Occ=Once] ->
                                                        case
                                                            touch# [ipv3_s8NFM ipv4_s8NFQ]
                                                        of
                                                        s4_s8NFS
                                                        { __DEFAULT -> (#,#) [s4_s8NFS ipv5_s8NFR];
                                                        };
                                                  };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8NFT;

Foreign.Marshal.Alloc.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Marshal.Alloc.$trModule4];

Foreign.Marshal.Alloc.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Marshal.Alloc.$trModule2];

Foreign.Marshal.Alloc.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.Marshal.Alloc.$trModule3
                                     Foreign.Marshal.Alloc.$trModule1];

Foreign.Marshal.Alloc.malloc4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "malloc"#;

Foreign.Marshal.Alloc.malloc3 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# Foreign.Marshal.Alloc.malloc4;

Foreign.Marshal.Alloc.calloc4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "out of memory"#;

Foreign.Marshal.Alloc.calloc3 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# Foreign.Marshal.Alloc.calloc4;

Foreign.Marshal.Alloc.malloc2 :: GHC.IO.Exception.IOException
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Exception.IOError! [GHC.Base.Nothing
                                             GHC.IO.Exception.ResourceExhausted
                                             Foreign.Marshal.Alloc.malloc3
                                             Foreign.Marshal.Alloc.calloc3
                                             GHC.Base.Nothing
                                             GHC.Base.Nothing];

Foreign.Marshal.Alloc.malloc1 :: GHC.Exception.SomeException
[GblId] =
    [] \u []
        GHC.IO.Exception.$fExceptionIOException_$ctoException
            Foreign.Marshal.Alloc.malloc2;

Foreign.Marshal.Alloc.mallocBytes1
  :: forall a.
     GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [size_s8NFU s_s8NFV]
        case size_s8NFU of {
          GHC.Types.I# x#_s8NFX [Occ=Once] ->
              case int2Word# [x#_s8NFX] of sat_s8NFZ {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s8NFZ s_s8NFV] of {
                      (#,#) ds_s8NG1 [Occ=Once*] ds1_s8NG2 ->
                          case eqAddr# [ds1_s8NG2 __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8NG4 [Occ=Once] :: GHC.Ptr.Ptr a_a8MIg
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds1_s8NG2];
                                } in  (#,#) [ds_s8NG1 sat_s8NG4];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.malloc1 ds_s8NG1];
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.mallocBytes
  :: forall a. GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.Marshal.Alloc.mallocBytes1 eta_B2 eta_B1;

lvl17_r8N6m :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [84#];

lvl18_r8N6n :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [32#];

lvl19_r8N6o :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [41#];

lvl20_r8N6p :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8N67
                                           lvl3_r8N68
                                           lvl5_r8N6a
                                           lvl17_r8N6m
                                           lvl18_r8N6n
                                           lvl17_r8N6m
                                           lvl19_r8N6o];

lvl21_r8N6q :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8N66
                                                  lvl20_r8N6p
                                                  GHC.Stack.Types.EmptyCallStack];

lvl22_r8N6r :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl21_r8N6q;

malloc5_r8N6s
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=2,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [$dStorable_s8NG5 eta_s8NG6]
        case Foreign.Storable.sizeOf $dStorable_s8NG5 lvl22_r8N6r of {
          GHC.Types.I# x#_s8NG8 [Occ=Once] ->
              case int2Word# [x#_s8NG8] of sat_s8NGa {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s8NGa eta_s8NG6] of {
                      (#,#) ds_s8NGc [Occ=Once*] ds1_s8NGd ->
                          case eqAddr# [ds1_s8NGd __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8NGf [Occ=Once] :: GHC.Ptr.Ptr a_a8MIE
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds1_s8NGd];
                                } in  (#,#) [ds_s8NGc sat_s8NGf];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.malloc1 ds_s8NGc];
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.malloc [InlPrag=INLINE (sat-args=0)]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=2,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] malloc5_r8N6s eta_B2 eta_B1;

Foreign.Marshal.Alloc.calloc6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "calloc"#;

Foreign.Marshal.Alloc.calloc5 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# Foreign.Marshal.Alloc.calloc6;

Foreign.Marshal.Alloc.calloc2 :: GHC.IO.Exception.IOException
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Exception.IOError! [GHC.Base.Nothing
                                             GHC.IO.Exception.ResourceExhausted
                                             Foreign.Marshal.Alloc.calloc5
                                             Foreign.Marshal.Alloc.calloc3
                                             GHC.Base.Nothing
                                             GHC.Base.Nothing];

Foreign.Marshal.Alloc.calloc1 :: GHC.Exception.SomeException
[GblId] =
    [] \u []
        GHC.IO.Exception.$fExceptionIOException_$ctoException
            Foreign.Marshal.Alloc.calloc2;

Foreign.Marshal.Alloc.callocBytes1
  :: forall a.
     GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [size_s8NGg s_s8NGh]
        case size_s8NGg of {
          GHC.Types.I# x#_s8NGj [Occ=Once] ->
              case int2Word# [x#_s8NGj] of sat_s8NGl {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [1## sat_s8NGl s_s8NGh] of {
                      (#,#) ds_s8NGn [Occ=Once*] ds1_s8NGo ->
                          case eqAddr# [ds1_s8NGo __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8NGq [Occ=Once] :: GHC.Ptr.Ptr a_a8MI3
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds1_s8NGo];
                                } in  (#,#) [ds_s8NGn sat_s8NGq];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.calloc1 ds_s8NGn];
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.callocBytes
  :: forall a. GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.Marshal.Alloc.callocBytes1 eta_B2 eta_B1;

lvl23_r8N6t :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [90#];

lvl24_r8N6u :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8N67
                                           lvl3_r8N68
                                           lvl5_r8N6a
                                           lvl23_r8N6t
                                           lvl7_r8N6c
                                           lvl23_r8N6t
                                           lvl8_r8N6d];

lvl25_r8N6v :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8N66
                                                  lvl24_r8N6u
                                                  GHC.Stack.Types.EmptyCallStack];

lvl26_r8N6w :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl25_r8N6v;

calloc7_r8N6x
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=2,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [$dStorable_s8NGr eta_s8NGs]
        case Foreign.Storable.sizeOf $dStorable_s8NGr lvl26_r8N6w of {
          GHC.Types.I# x#_s8NGu [Occ=Once] ->
              case int2Word# [x#_s8NGu] of sat_s8NGw {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [1## sat_s8NGw eta_s8NGs] of {
                      (#,#) ds_s8NGy [Occ=Once*] ds1_s8NGz ->
                          case eqAddr# [ds1_s8NGz __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8NGB [Occ=Once] :: GHC.Ptr.Ptr a_a8MIp
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds1_s8NGz];
                                } in  (#,#) [ds_s8NGy sat_s8NGB];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.calloc1 ds_s8NGy];
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.calloc [InlPrag=INLINE (sat-args=0)]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=2,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] calloc7_r8N6x eta_B2 eta_B1;

Foreign.Marshal.Alloc.realloc5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "realloc"#;

Foreign.Marshal.Alloc.realloc4 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# Foreign.Marshal.Alloc.realloc5;

Foreign.Marshal.Alloc.realloc3 :: GHC.IO.Exception.IOException
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Exception.IOError! [GHC.Base.Nothing
                                             GHC.IO.Exception.ResourceExhausted
                                             Foreign.Marshal.Alloc.realloc4
                                             Foreign.Marshal.Alloc.calloc3
                                             GHC.Base.Nothing
                                             GHC.Base.Nothing];

Foreign.Marshal.Alloc.realloc2 :: GHC.Exception.SomeException
[GblId] =
    [] \u []
        GHC.IO.Exception.$fExceptionIOException_$ctoException
            Foreign.Marshal.Alloc.realloc3;

lvl27_r8N6y :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [162#];

lvl28_r8N6z :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [34#];

lvl29_r8N6A :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [43#];

lvl30_r8N6B :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8N67
                                           lvl3_r8N68
                                           lvl5_r8N6a
                                           lvl27_r8N6y
                                           lvl28_r8N6z
                                           lvl27_r8N6y
                                           lvl29_r8N6A];

lvl31_r8N6C :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8N66
                                                  lvl30_r8N6B
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Alloc.realloc6 :: forall b. b
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl31_r8N6C;

Foreign.Marshal.Alloc.$wrealloc [InlPrag=NOUSERINLINE[0]]
  :: forall a b.
     Foreign.Storable.Storable b =>
     GHC.Prim.Addr#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr b #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8NGC ww_s8NGD w1_s8NGE]
        case
            Foreign.Storable.sizeOf w_s8NGC Foreign.Marshal.Alloc.realloc6
        of
        { GHC.Types.I# x#_s8NGG [Occ=Once] ->
              case int2Word# [x#_s8NGG] of sat_s8NGI {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [ww_s8NGD sat_s8NGI w1_s8NGE] of {
                      (#,#) ds_s8NGK [Occ=Once*] ds1_s8NGL ->
                          case eqAddr# [ds1_s8NGL __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8NGN [Occ=Once] :: GHC.Ptr.Ptr b_s8MYG
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds1_s8NGL];
                                } in  (#,#) [ds_s8NGK sat_s8NGN];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.realloc2 ds_s8NGK];
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.realloc1 [InlPrag=NOUSERINLINE[0]]
  :: forall a b.
     Foreign.Storable.Storable b =>
     GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr b #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8NGO w1_s8NGP w2_s8NGQ]
        case w1_s8NGP of {
          GHC.Ptr.Ptr ww1_s8NGS [Occ=Once] ->
              Foreign.Marshal.Alloc.$wrealloc w_s8NGO ww1_s8NGS w2_s8NGQ;
        };

Foreign.Marshal.Alloc.realloc
  :: forall a b.
     Foreign.Storable.Storable b =>
     GHC.Ptr.Ptr a -> GHC.Types.IO (GHC.Ptr.Ptr b)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Alloc.realloc1 eta_B3 eta_B2 eta_B1;

free1_r8N6D
  :: forall a.
     GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [ds_s8NGT eta_s8NGU]
        case ds_s8NGT of {
          GHC.Ptr.Ptr ds2_s8NGW [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [ds2_s8NGW eta_s8NGU] of {
                Unit# ds3_s8NGZ [Occ=Once] -> (#,#) [ds3_s8NGZ GHC.Tuple.()];
              };
        };

Foreign.Marshal.Alloc.free
  :: forall a. GHC.Ptr.Ptr a -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] free1_r8N6D eta_B2 eta_B1;

Foreign.Marshal.Alloc.$wreallocBytes [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId, Arity=3, Str=<S,U><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [ww_s8NH0 ww1_s8NH1 w_s8NH2]
        case ww1_s8NH1 of ds_s8NH3 {
          __DEFAULT ->
              case int2Word# [ds_s8NH3] of sat_s8NH5 {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [ww_s8NH0 sat_s8NH5 w_s8NH2] of {
                      (#,#) ds1_s8NH7 [Occ=Once*] ds2_s8NH8 ->
                          case eqAddr# [ds2_s8NH8 __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8NHa [Occ=Once] :: GHC.Ptr.Ptr a_s8MYR
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds2_s8NH8];
                                } in  (#,#) [ds1_s8NH7 sat_s8NHa];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.realloc2 ds1_s8NH7];
                          };
                    };
              };
          0# ->
              case __pkg_ccall base-4.11.0.0 [ww_s8NH0 w_s8NH2] of {
                Unit# ds1_s8NHd [Occ=Once] -> (#,#) [ds1_s8NHd GHC.Ptr.nullPtr];
              };
        };

Foreign.Marshal.Alloc.reallocBytes1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8NHe w1_s8NHf w2_s8NHg]
        case w_s8NHe of {
          GHC.Ptr.Ptr ww1_s8NHi [Occ=Once] ->
              case w1_s8NHf of {
                GHC.Types.I# ww3_s8NHk [Occ=Once] ->
                    Foreign.Marshal.Alloc.$wreallocBytes ww1_s8NHi ww3_s8NHk w2_s8NHg;
              };
        };

Foreign.Marshal.Alloc.reallocBytes
  :: forall a.
     GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.Marshal.Alloc.reallocBytes1 eta_B3 eta_B2 eta_B1;

Foreign.Marshal.Alloc.finalizerFree
  :: forall a. GHC.ForeignPtr.FinalizerPtr a
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Ptr.FunPtr! [__label "free" (function)];


==================== STG syntax: ====================
2018-03-16 16:03:57.564449508 UTC

Foreign.Marshal.Alloc.allocaBytes1
  :: forall a b.
     GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s8NEX action_s8NEY void_0E]
        case ds_s8NEX of {
          GHC.Types.I# size_s8NF1 [Occ=Once] ->
              case newPinnedByteArray# [size_s8NF1 GHC.Prim.void#] of {
                Unit# ipv1_s8NF4 [Occ=Once] ->
                    case unsafeFreezeByteArray# [ipv1_s8NF4 GHC.Prim.void#] of {
                      Unit# ipv3_s8NF7 ->
                          case byteArrayContents# [ipv3_s8NF7] of sat_s8NF8 {
                            __DEFAULT ->
                                let {
                                  sat_s8NF9 [Occ=Once] :: GHC.Ptr.Ptr a_a8MH6
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [sat_s8NF8];
                                } in 
                                  case action_s8NEY sat_s8NF9 GHC.Prim.void# of {
                                    Unit# ipv5_s8NFc [Occ=Once] ->
                                        case touch# [ipv3_s8NF7 GHC.Prim.void#] of s4_s8NFd {
                                          (##) -> Unit# [ipv5_s8NFc];
                                        };
                                  };
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.allocaBytes
  :: forall a b.
     GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Alloc.allocaBytes1 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.Marshal.Alloc.allocaBytesAligned1
  :: forall a b.
     GHC.Types.Int
     -> GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [ds_s8NFe ds1_s8NFf action_s8NFg void_0E]
        case ds_s8NFe of {
          GHC.Types.I# size_s8NFj [Occ=Once] ->
              case ds1_s8NFf of {
                GHC.Types.I# align_s8NFl [Occ=Once] ->
                    case
                        newAlignedPinnedByteArray# [size_s8NFj align_s8NFl GHC.Prim.void#]
                    of
                    { Unit# ipv1_s8NFo [Occ=Once] ->
                          case unsafeFreezeByteArray# [ipv1_s8NFo GHC.Prim.void#] of {
                            Unit# ipv3_s8NFr ->
                                case byteArrayContents# [ipv3_s8NFr] of sat_s8NFs {
                                  __DEFAULT ->
                                      let {
                                        sat_s8NFt [Occ=Once] :: GHC.Ptr.Ptr a_a8MGA
                                        [LclId] =
                                            CCCS GHC.Ptr.Ptr! [sat_s8NFs];
                                      } in 
                                        case action_s8NFg sat_s8NFt GHC.Prim.void# of {
                                          Unit# ipv5_s8NFw [Occ=Once] ->
                                              case touch# [ipv3_s8NFr GHC.Prim.void#] of s4_s8NFx {
                                                (##) -> Unit# [ipv5_s8NFw];
                                              };
                                        };
                                };
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.allocaBytesAligned
  :: forall a b.
     GHC.Types.Int
     -> GHC.Types.Int
     -> (GHC.Ptr.Ptr a -> GHC.Types.IO b)
     -> GHC.Types.IO b
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><C(C(S(SL))),1*C1(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Alloc.allocaBytesAligned1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

lvl_r8N65 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "undefined"#;

lvl1_r8N66 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_r8N65;

Foreign.Marshal.Alloc.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

lvl2_r8N67 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# Foreign.Marshal.Alloc.$trModule4;

Foreign.Marshal.Alloc.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.Marshal.Alloc"#;

lvl3_r8N68 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# Foreign.Marshal.Alloc.$trModule2;

lvl4_r8N69 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "./Foreign/Marshal/Alloc.hs"#;

lvl5_r8N6a :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl4_r8N69;

lvl6_r8N6b :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [117#];

lvl7_r8N6c :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [31#];

lvl8_r8N6d :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [40#];

lvl9_r8N6e :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8N67
                                           lvl3_r8N68
                                           lvl5_r8N6a
                                           lvl6_r8N6b
                                           lvl7_r8N6c
                                           lvl6_r8N6b
                                           lvl8_r8N6d];

lvl10_r8N6f :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8N66
                                                  lvl9_r8N6e
                                                  GHC.Stack.Types.EmptyCallStack];

lvl11_r8N6g :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl10_r8N6f;

lvl12_r8N6h :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [60#];

lvl13_r8N6i :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [69#];

lvl14_r8N6j :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8N67
                                           lvl3_r8N68
                                           lvl5_r8N6a
                                           lvl6_r8N6b
                                           lvl12_r8N6h
                                           lvl6_r8N6b
                                           lvl13_r8N6i];

lvl15_r8N6k :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8N66
                                                  lvl14_r8N6j
                                                  GHC.Stack.Types.EmptyCallStack];

lvl16_r8N6l :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl15_r8N6k;

Foreign.Marshal.Alloc.alloca [InlPrag=INLINE (sat-args=0)]
  :: forall a b.
     Foreign.Storable.Storable a =>
     (GHC.Ptr.Ptr a -> GHC.Types.IO b) -> GHC.Types.IO b
[GblId,
 Arity=1,
 Str=<L,U(1*C1(U(U)),1*C1(U(U)),A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dStorable_s8NFy]
        let {
          ds_s8NFz [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8NFy] \u []
                  Foreign.Storable.sizeOf $dStorable_s8NFy lvl11_r8N6g; } in
        let {
          ds1_s8NFA [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Types.Int
          [LclId] =
              [$dStorable_s8NFy] \u []
                  Foreign.Storable.alignment $dStorable_s8NFy lvl16_r8N6l; } in
        let {
          sat_s8NFT [Occ=Once]
            :: (GHC.Ptr.Ptr a_a8MHC -> GHC.Types.IO b_a8MHD)
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_a8MHD #)
          [LclId] =
              [ds_s8NFz ds1_s8NFA] \r [action_s8NFB void_0E]
                  case ds_s8NFz of {
                    GHC.Types.I# size_s8NFE [Occ=Once] ->
                        case ds1_s8NFA of {
                          GHC.Types.I# align_s8NFG [Occ=Once] ->
                              case
                                  newAlignedPinnedByteArray# [size_s8NFE align_s8NFG GHC.Prim.void#]
                              of
                              { Unit# ipv1_s8NFJ [Occ=Once] ->
                                    case unsafeFreezeByteArray# [ipv1_s8NFJ GHC.Prim.void#] of {
                                      Unit# ipv3_s8NFM ->
                                          case byteArrayContents# [ipv3_s8NFM] of sat_s8NFN {
                                            __DEFAULT ->
                                                let {
                                                  sat_s8NFO [Occ=Once] :: GHC.Ptr.Ptr a_a8MHC
                                                  [LclId] =
                                                      CCCS GHC.Ptr.Ptr! [sat_s8NFN];
                                                } in 
                                                  case action_s8NFB sat_s8NFO GHC.Prim.void# of {
                                                    Unit# ipv5_s8NFR [Occ=Once] ->
                                                        case
                                                            touch# [ipv3_s8NFM GHC.Prim.void#]
                                                        of
                                                        s4_s8NFS
                                                        { (##) -> Unit# [ipv5_s8NFR];
                                                        };
                                                  };
                                          };
                                    };
                              };
                        };
                  };
        } in  sat_s8NFT;

Foreign.Marshal.Alloc.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Marshal.Alloc.$trModule4];

Foreign.Marshal.Alloc.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Marshal.Alloc.$trModule2];

Foreign.Marshal.Alloc.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.Marshal.Alloc.$trModule3
                                     Foreign.Marshal.Alloc.$trModule1];

Foreign.Marshal.Alloc.malloc4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "malloc"#;

Foreign.Marshal.Alloc.malloc3 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# Foreign.Marshal.Alloc.malloc4;

Foreign.Marshal.Alloc.calloc4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "out of memory"#;

Foreign.Marshal.Alloc.calloc3 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# Foreign.Marshal.Alloc.calloc4;

Foreign.Marshal.Alloc.malloc2 :: GHC.IO.Exception.IOException
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Exception.IOError! [GHC.Base.Nothing
                                             GHC.IO.Exception.ResourceExhausted
                                             Foreign.Marshal.Alloc.malloc3
                                             Foreign.Marshal.Alloc.calloc3
                                             GHC.Base.Nothing
                                             GHC.Base.Nothing];

Foreign.Marshal.Alloc.malloc1 :: GHC.Exception.SomeException
[GblId] =
    [] \u []
        GHC.IO.Exception.$fExceptionIOException_$ctoException
            Foreign.Marshal.Alloc.malloc2;

Foreign.Marshal.Alloc.mallocBytes1
  :: forall a.
     GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [size_s8NFU void_0E]
        case size_s8NFU of {
          GHC.Types.I# x#_s8NFX [Occ=Once] ->
              case int2Word# [x#_s8NFX] of sat_s8NFZ {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s8NFZ GHC.Prim.void#] of {
                      Unit# ds1_s8NG2 ->
                          case eqAddr# [ds1_s8NG2 __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8NG4 [Occ=Once] :: GHC.Ptr.Ptr a_a8MIg
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds1_s8NG2];
                                } in  Unit# [sat_s8NG4];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.malloc1 GHC.Prim.void#];
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.mallocBytes
  :: forall a. GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.Marshal.Alloc.mallocBytes1 eta_B2 GHC.Prim.void#;

lvl17_r8N6m :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [84#];

lvl18_r8N6n :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [32#];

lvl19_r8N6o :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [41#];

lvl20_r8N6p :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8N67
                                           lvl3_r8N68
                                           lvl5_r8N6a
                                           lvl17_r8N6m
                                           lvl18_r8N6n
                                           lvl17_r8N6m
                                           lvl19_r8N6o];

lvl21_r8N6q :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8N66
                                                  lvl20_r8N6p
                                                  GHC.Stack.Types.EmptyCallStack];

lvl22_r8N6r :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl21_r8N6q;

malloc5_r8N6s
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=2,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [$dStorable_s8NG5 void_0E]
        case Foreign.Storable.sizeOf $dStorable_s8NG5 lvl22_r8N6r of {
          GHC.Types.I# x#_s8NG8 [Occ=Once] ->
              case int2Word# [x#_s8NG8] of sat_s8NGa {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [sat_s8NGa GHC.Prim.void#] of {
                      Unit# ds1_s8NGd ->
                          case eqAddr# [ds1_s8NGd __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8NGf [Occ=Once] :: GHC.Ptr.Ptr a_a8MIE
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds1_s8NGd];
                                } in  Unit# [sat_s8NGf];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.malloc1 GHC.Prim.void#];
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.malloc [InlPrag=INLINE (sat-args=0)]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=2,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E] malloc5_r8N6s eta_B2 GHC.Prim.void#;

Foreign.Marshal.Alloc.calloc6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "calloc"#;

Foreign.Marshal.Alloc.calloc5 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# Foreign.Marshal.Alloc.calloc6;

Foreign.Marshal.Alloc.calloc2 :: GHC.IO.Exception.IOException
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Exception.IOError! [GHC.Base.Nothing
                                             GHC.IO.Exception.ResourceExhausted
                                             Foreign.Marshal.Alloc.calloc5
                                             Foreign.Marshal.Alloc.calloc3
                                             GHC.Base.Nothing
                                             GHC.Base.Nothing];

Foreign.Marshal.Alloc.calloc1 :: GHC.Exception.SomeException
[GblId] =
    [] \u []
        GHC.IO.Exception.$fExceptionIOException_$ctoException
            Foreign.Marshal.Alloc.calloc2;

Foreign.Marshal.Alloc.callocBytes1
  :: forall a.
     GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [size_s8NGg void_0E]
        case size_s8NGg of {
          GHC.Types.I# x#_s8NGj [Occ=Once] ->
              case int2Word# [x#_s8NGj] of sat_s8NGl {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [1## sat_s8NGl GHC.Prim.void#] of {
                      Unit# ds1_s8NGo ->
                          case eqAddr# [ds1_s8NGo __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8NGq [Occ=Once] :: GHC.Ptr.Ptr a_a8MI3
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds1_s8NGo];
                                } in  Unit# [sat_s8NGq];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.calloc1 GHC.Prim.void#];
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.callocBytes
  :: forall a. GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.Marshal.Alloc.callocBytes1 eta_B2 GHC.Prim.void#;

lvl23_r8N6t :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [90#];

lvl24_r8N6u :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8N67
                                           lvl3_r8N68
                                           lvl5_r8N6a
                                           lvl23_r8N6t
                                           lvl7_r8N6c
                                           lvl23_r8N6t
                                           lvl8_r8N6d];

lvl25_r8N6v :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8N66
                                                  lvl24_r8N6u
                                                  GHC.Stack.Types.EmptyCallStack];

lvl26_r8N6w :: forall a. a
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl25_r8N6v;

calloc7_r8N6x
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=2,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [$dStorable_s8NGr void_0E]
        case Foreign.Storable.sizeOf $dStorable_s8NGr lvl26_r8N6w of {
          GHC.Types.I# x#_s8NGu [Occ=Once] ->
              case int2Word# [x#_s8NGu] of sat_s8NGw {
                __DEFAULT ->
                    case __pkg_ccall base-4.11.0.0 [1## sat_s8NGw GHC.Prim.void#] of {
                      Unit# ds1_s8NGz ->
                          case eqAddr# [ds1_s8NGz __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8NGB [Occ=Once] :: GHC.Ptr.Ptr a_a8MIp
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds1_s8NGz];
                                } in  Unit# [sat_s8NGB];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.calloc1 GHC.Prim.void#];
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.calloc [InlPrag=INLINE (sat-args=0)]
  :: forall a.
     Foreign.Storable.Storable a =>
     GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=2,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E] calloc7_r8N6x eta_B2 GHC.Prim.void#;

Foreign.Marshal.Alloc.realloc5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "realloc"#;

Foreign.Marshal.Alloc.realloc4 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# Foreign.Marshal.Alloc.realloc5;

Foreign.Marshal.Alloc.realloc3 :: GHC.IO.Exception.IOException
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.IO.Exception.IOError! [GHC.Base.Nothing
                                             GHC.IO.Exception.ResourceExhausted
                                             Foreign.Marshal.Alloc.realloc4
                                             Foreign.Marshal.Alloc.calloc3
                                             GHC.Base.Nothing
                                             GHC.Base.Nothing];

Foreign.Marshal.Alloc.realloc2 :: GHC.Exception.SomeException
[GblId] =
    [] \u []
        GHC.IO.Exception.$fExceptionIOException_$ctoException
            Foreign.Marshal.Alloc.realloc3;

lvl27_r8N6y :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [162#];

lvl28_r8N6z :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [34#];

lvl29_r8N6A :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [43#];

lvl30_r8N6B :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.SrcLoc! [lvl2_r8N67
                                           lvl3_r8N68
                                           lvl5_r8N6a
                                           lvl27_r8N6y
                                           lvl28_r8N6z
                                           lvl27_r8N6y
                                           lvl29_r8N6A];

lvl31_r8N6C :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Stack.Types.PushCallStack! [lvl1_r8N66
                                                  lvl30_r8N6B
                                                  GHC.Stack.Types.EmptyCallStack];

Foreign.Marshal.Alloc.realloc6 :: forall b. b
[GblId, Str=x] =
    [] \u [] GHC.Err.undefined lvl31_r8N6C;

Foreign.Marshal.Alloc.$wrealloc [InlPrag=NOUSERINLINE[0]]
  :: forall a b.
     Foreign.Storable.Storable b =>
     GHC.Prim.Addr#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr b #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8NGC ww_s8NGD void_0E]
        case
            Foreign.Storable.sizeOf w_s8NGC Foreign.Marshal.Alloc.realloc6
        of
        { GHC.Types.I# x#_s8NGG [Occ=Once] ->
              case int2Word# [x#_s8NGG] of sat_s8NGI {
                __DEFAULT ->
                    case
                        __pkg_ccall base-4.11.0.0 [ww_s8NGD sat_s8NGI GHC.Prim.void#]
                    of
                    { Unit# ds1_s8NGL ->
                          case eqAddr# [ds1_s8NGL __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8NGN [Occ=Once] :: GHC.Ptr.Ptr b_s8MYG
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds1_s8NGL];
                                } in  Unit# [sat_s8NGN];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.realloc2 GHC.Prim.void#];
                          };
                    };
              };
        };

Foreign.Marshal.Alloc.realloc1 [InlPrag=NOUSERINLINE[0]]
  :: forall a b.
     Foreign.Storable.Storable b =>
     GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr b #)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8NGO w1_s8NGP void_0E]
        case w1_s8NGP of {
          GHC.Ptr.Ptr ww1_s8NGS [Occ=Once] ->
              Foreign.Marshal.Alloc.$wrealloc w_s8NGO ww1_s8NGS GHC.Prim.void#;
        };

Foreign.Marshal.Alloc.realloc
  :: forall a b.
     Foreign.Storable.Storable b =>
     GHC.Ptr.Ptr a -> GHC.Types.IO (GHC.Ptr.Ptr b)
[GblId,
 Arity=3,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Alloc.realloc1 eta_B3 eta_B2 GHC.Prim.void#;

free1_r8N6D
  :: forall a.
     GHC.Ptr.Ptr a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [ds_s8NGT void_0E]
        case ds_s8NGT of {
          GHC.Ptr.Ptr ds2_s8NGW [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [ds2_s8NGW GHC.Prim.void#] of {
                (##) -> Unit# [GHC.Tuple.()];
              };
        };

Foreign.Marshal.Alloc.free
  :: forall a. GHC.Ptr.Ptr a -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E] free1_r8N6D eta_B2 GHC.Prim.void#;

Foreign.Marshal.Alloc.$wreallocBytes [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId, Arity=3, Str=<S,U><S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [ww_s8NH0 ww1_s8NH1 void_0E]
        case ww1_s8NH1 of ds_s8NH3 {
          __DEFAULT ->
              case int2Word# [ds_s8NH3] of sat_s8NH5 {
                __DEFAULT ->
                    case
                        __pkg_ccall base-4.11.0.0 [ww_s8NH0 sat_s8NH5 GHC.Prim.void#]
                    of
                    { Unit# ds2_s8NH8 ->
                          case eqAddr# [ds2_s8NH8 __NULL] of {
                            __DEFAULT ->
                                let {
                                  sat_s8NHa [Occ=Once] :: GHC.Ptr.Ptr a_s8MYR
                                  [LclId] =
                                      CCCS GHC.Ptr.Ptr! [ds2_s8NH8];
                                } in  Unit# [sat_s8NHa];
                            1# -> raiseIO# [Foreign.Marshal.Alloc.realloc2 GHC.Prim.void#];
                          };
                    };
              };
          0# ->
              case __pkg_ccall base-4.11.0.0 [ww_s8NH0 GHC.Prim.void#] of {
                (##) -> Unit# [GHC.Ptr.nullPtr];
              };
        };

Foreign.Marshal.Alloc.reallocBytes1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Ptr.Ptr a
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8NHe w1_s8NHf void_0E]
        case w_s8NHe of {
          GHC.Ptr.Ptr ww1_s8NHi [Occ=Once] ->
              case w1_s8NHf of {
                GHC.Types.I# ww3_s8NHk [Occ=Once] ->
                    Foreign.Marshal.Alloc.$wreallocBytes
                        ww1_s8NHi ww3_s8NHk GHC.Prim.void#;
              };
        };

Foreign.Marshal.Alloc.reallocBytes
  :: forall a.
     GHC.Ptr.Ptr a -> GHC.Types.Int -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S(S),1*U(1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.Marshal.Alloc.reallocBytes1 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.Marshal.Alloc.finalizerFree
  :: forall a. GHC.ForeignPtr.FinalizerPtr a
[GblId, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Ptr.FunPtr! [__label "free" (function)];

