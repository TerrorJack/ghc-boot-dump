
==================== Tidy Core ====================
2018-03-16 16:04:14.738683117 UTC

Result size of Tidy Core
  = {terms: 983, types: 1,730, coercions: 377, joins: 1/13}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Foreign.Marshal.Pool.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Foreign.Marshal.Pool.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Foreign.Marshal.Pool.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Foreign.Marshal.Pool.$trModule3
  = GHC.Types.TrNameS Foreign.Marshal.Pool.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Foreign.Marshal.Pool.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 60 0}]
Foreign.Marshal.Pool.$trModule2 = "Foreign.Marshal.Pool"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Foreign.Marshal.Pool.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Foreign.Marshal.Pool.$trModule1
  = GHC.Types.TrNameS Foreign.Marshal.Pool.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Foreign.Marshal.Pool.$trModule :: GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Foreign.Marshal.Pool.$trModule
  = GHC.Types.Module
      Foreign.Marshal.Pool.$trModule3 Foreign.Marshal.Pool.$trModule1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_r95mW :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep_r95mW
  = GHC.Types.KindRepTyConApp
      GHC.Tuple.$tc() (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep1_r95mX :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep1_r95mX
  = GHC.Types.:
      @ GHC.Types.KindRep $krep_r95mW (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep2_r95mY :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep2_r95mY
  = GHC.Types.KindRepTyConApp GHC.Ptr.$tcPtr $krep1_r95mX

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep3_r95mZ :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep3_r95mZ
  = GHC.Types.:
      @ GHC.Types.KindRep $krep2_r95mY (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep4_r95n0 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep4_r95n0
  = GHC.Types.KindRepTyConApp GHC.Types.$tc[] $krep3_r95mZ

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep5_r95n1 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep5_r95n1
  = GHC.Types.:
      @ GHC.Types.KindRep $krep4_r95n0 (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep6_r95n2 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep6_r95n2
  = GHC.Types.KindRepTyConApp GHC.IORef.$tcIORef $krep5_r95n1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Foreign.Marshal.Pool.$tcPool2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Foreign.Marshal.Pool.$tcPool2 = "Pool"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Foreign.Marshal.Pool.$tcPool1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Foreign.Marshal.Pool.$tcPool1
  = GHC.Types.TrNameS Foreign.Marshal.Pool.$tcPool2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Foreign.Marshal.Pool.$tcPool :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Foreign.Marshal.Pool.$tcPool
  = GHC.Types.TyCon
      6812857741828992361##
      12127662557529231519##
      Foreign.Marshal.Pool.$trModule
      Foreign.Marshal.Pool.$tcPool1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep7_r95n3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep7_r95n3
  = GHC.Types.KindRepTyConApp
      Foreign.Marshal.Pool.$tcPool (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Foreign.Marshal.Pool.$tc'Pool1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
Foreign.Marshal.Pool.$tc'Pool1
  = GHC.Types.KindRepFun $krep6_r95n2 $krep7_r95n3

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Foreign.Marshal.Pool.$tc'Pool3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
Foreign.Marshal.Pool.$tc'Pool3 = "'Pool"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Foreign.Marshal.Pool.$tc'Pool2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Foreign.Marshal.Pool.$tc'Pool2
  = GHC.Types.TrNameS Foreign.Marshal.Pool.$tc'Pool3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Foreign.Marshal.Pool.$tc'Pool :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Foreign.Marshal.Pool.$tc'Pool
  = GHC.Types.TyCon
      11588816997626637361##
      15405086111208545194##
      Foreign.Marshal.Pool.$trModule
      Foreign.Marshal.Pool.$tc'Pool2
      0#
      Foreign.Marshal.Pool.$tc'Pool1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_r95n4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl_r95n4 = "pointer not in pool"#

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
Foreign.Marshal.Pool.pooledRealloc2 :: [Ptr ()] -> [GHC.Types.Char]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,A>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ _ [Occ=Dead, OS=OneShot] ->
                 GHC.Base.build
                   @ GHC.Types.Char
                   (\ (@ b_i7Jbh) ->
                      GHC.CString.unpackFoldrCString# @ b_i7Jbh "pointer not in pool"#)}]
Foreign.Marshal.Pool.pooledRealloc2
  = \ _ [Occ=Dead, OS=OneShot] ->
      GHC.CString.unpackCString# lvl_r95n4

-- RHS size: {terms: 92, types: 164, coercions: 21, joins: 0/1}
Foreign.Marshal.Pool.$wpooledReallocBytes [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Prim.MutVar# GHC.Prim.RealWorld [Ptr ()]
     -> GHC.Prim.Addr#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #)
[GblId,
 Arity=4,
 Str=<S,U><S,U><S,1*U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [0 0 115 0] 345 60}]
Foreign.Marshal.Pool.$wpooledReallocBytes
  = \ (@ a_s95bD)
      (ww_s95bK :: GHC.Prim.MutVar# GHC.Prim.RealWorld [Ptr ()])
      (ww1_s95bO :: GHC.Prim.Addr#)
      (ww2_s95bS :: GHC.Prim.Int#)
      (w_s95bH :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case GHC.Prim.readMutVar#
             @ GHC.Prim.RealWorld @ [Ptr ()] ww_s95bK w_s95bH
      of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      case elem
             @ (Ptr ())
             (GHC.Ptr.$fEqPtr @ ())
             ((GHC.Ptr.Ptr @ a_s95bD ww1_s95bO)
              `cast` ((Ptr Univ(phantom phantom <*>_N :: a_s95bD, ()))_R
                      :: (Ptr a_s95bD :: *) ~R# (Ptr () :: *)))
             ipv1_i7IAz
      of {
        GHC.Types.False ->
          case Foreign.Marshal.Error.throwIf2
                 @ [Ptr ()] ipv1_i7IAz Foreign.Marshal.Pool.pooledRealloc2 ipv_i7IAy
          of wild1_00 {
          };
        GHC.Types.True ->
          case ww2_s95bS of ds_X8MJu {
            __DEFAULT ->
              case {__pkg_ccall base-4.11.0.0 Addr#
                           -> Word# -> State# RealWorld -> (# State# RealWorld, Addr# #)}_d8MKo
                     ww1_s95bO (GHC.Prim.int2Word# ds_X8MJu) ipv_i7IAy
              of
              { (# ds2_d8MKm, ds3_d8MKl #) ->
              case GHC.Prim.eqAddr# ds3_d8MKl __NULL of {
                __DEFAULT ->
                  case GHC.Prim.readMutVar#
                         @ GHC.Prim.RealWorld @ [Ptr ()] ww_s95bK ds2_d8MKm
                  of
                  { (# ipv2_X7IBz, ipv3_X7IBB #) ->
                  let {
                    ipv4_X7IBv :: Ptr ()
                    [LclId, Unf=OtherCon []]
                    ipv4_X7IBv = GHC.Ptr.Ptr @ () ds3_d8MKl } in
                  case GHC.Prim.writeMutVar#
                         @ GHC.Prim.RealWorld
                         @ [Ptr ()]
                         ww_s95bK
                         (GHC.Types.:
                            @ (Ptr ())
                            ipv4_X7IBv
                            (Data.OldList.deleteBy
                               @ (Ptr ())
                               (GHC.Ptr.$fEqPtr_$c== @ ())
                               (GHC.Ptr.Ptr @ () ww1_s95bO)
                               ipv3_X7IBB))
                         ipv2_X7IBz
                  of s2#_i7IBe
                  { __DEFAULT ->
                  (# s2#_i7IBe,
                     ipv4_X7IBv
                     `cast` ((Ptr Univ(phantom phantom <*>_N :: (), a_s95bD))_R
                             :: (Ptr () :: *) ~R# (Ptr a_s95bD :: *)) #)
                  }
                  };
                1# ->
                  case GHC.Prim.raiseIO#
                         @ GHC.Exception.SomeException
                         @ (Ptr ())
                         Foreign.Marshal.Alloc.realloc2
                         ds2_d8MKm
                  of wild2_00 {
                  }
              }
              };
            0# ->
              case {__pkg_ccall base-4.11.0.0 Addr#
                           -> State# RealWorld -> (# State# RealWorld #)}_d8MKd
                     ww1_s95bO ipv_i7IAy
              of
              { (# ds2_d8MKb #) ->
              case GHC.Prim.readMutVar#
                     @ GHC.Prim.RealWorld @ [Ptr ()] ww_s95bK ds2_d8MKb
              of
              { (# ipv2_X7IBz, ipv3_X7IBB #) ->
              case GHC.Prim.writeMutVar#
                     @ GHC.Prim.RealWorld
                     @ [Ptr ()]
                     ww_s95bK
                     (GHC.Types.:
                        @ (Ptr ())
                        (GHC.Ptr.nullPtr @ ())
                        (Data.OldList.deleteBy
                           @ (Ptr ())
                           (GHC.Ptr.$fEqPtr_$c== @ ())
                           (GHC.Ptr.Ptr @ () ww1_s95bO)
                           ipv3_X7IBB))
                     ipv2_X7IBz
              of s2#_i7IBe
              { __DEFAULT ->
              (# s2#_i7IBe,
                 (GHC.Ptr.nullPtr @ ())
                 `cast` ((Ptr Univ(phantom phantom <*>_N :: (), a_s95bD))_R
                         :: (Ptr () :: *) ~R# (Ptr a_s95bD :: *)) #)
              }
              }
              }
          }
      }
      }

-- RHS size: {terms: 19, types: 24, coercions: 6, joins: 0/0}
Foreign.Marshal.Pool.pooledRealloc1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Pool
     -> Ptr a
     -> Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #)
[GblId,
 Arity=4,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(1*U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_s95bD)
                 (w_s95bE [Occ=Once] :: Pool)
                 (w1_s95bF [Occ=Once!] :: Ptr a_s95bD)
                 (w2_s95bG [Occ=Once!] :: Int)
                 (w3_s95bH [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w_s95bE
                      `cast` (Foreign.Marshal.Pool.N:Pool[0] ; GHC.IORef.N:IORef[0] <[Ptr
                                                                                        ()]>_N
                              :: (Pool :: *)
                                 ~R# (GHC.STRef.STRef GHC.Prim.RealWorld [Ptr ()] :: *))
                 of
                 { GHC.STRef.STRef ww1_s95bK [Occ=Once] ->
                 case w1_s95bF of { GHC.Ptr.Ptr ww3_s95bO [Occ=Once] ->
                 case w2_s95bG of { GHC.Types.I# ww5_s95bS [Occ=Once] ->
                 Foreign.Marshal.Pool.$wpooledReallocBytes
                   @ a_s95bD ww1_s95bK ww3_s95bO ww5_s95bS w3_s95bH
                 }
                 }
                 }}]
Foreign.Marshal.Pool.pooledRealloc1
  = \ (@ a_s95bD)
      (w_s95bE :: Pool)
      (w1_s95bF :: Ptr a_s95bD)
      (w2_s95bG :: Int)
      (w3_s95bH :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case w_s95bE
           `cast` (Foreign.Marshal.Pool.N:Pool[0] ; GHC.IORef.N:IORef[0] <[Ptr
                                                                             ()]>_N
                   :: (Pool :: *)
                      ~R# (GHC.STRef.STRef GHC.Prim.RealWorld [Ptr ()] :: *))
      of
      { GHC.STRef.STRef ww1_s95bK ->
      case w1_s95bF of { GHC.Ptr.Ptr ww3_s95bO ->
      case w2_s95bG of { GHC.Types.I# ww5_s95bS ->
      Foreign.Marshal.Pool.$wpooledReallocBytes
        @ a_s95bD ww1_s95bK ww3_s95bO ww5_s95bS w3_s95bH
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 14, joins: 0/0}
pooledReallocBytes :: forall a. Pool -> Ptr a -> Int -> IO (Ptr a)
[GblId,
 Arity=4,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(1*U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Foreign.Marshal.Pool.pooledRealloc1
               `cast` (forall (a :: <*>_N).
                       <Pool>_R
                       ->_R <Ptr a>_R
                       ->_R <Int>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Ptr a>_R)
                       :: (forall a.
                           Pool
                           -> Ptr a
                           -> Int
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #) :: *)
                          ~R# (forall a. Pool -> Ptr a -> Int -> IO (Ptr a) :: *))}]
pooledReallocBytes
  = Foreign.Marshal.Pool.pooledRealloc1
    `cast` (forall (a :: <*>_N).
            <Pool>_R
            ->_R <Ptr a>_R
            ->_R <Int>_R
            ->_R Sym (GHC.Types.N:IO[0] <Ptr a>_R)
            :: (forall a.
                Pool
                -> Ptr a
                -> Int
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #) :: *)
               ~R# (forall a. Pool -> Ptr a -> Int -> IO (Ptr a) :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl1_r95n5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl1_r95n5 = "undefined"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl2_r95n6 :: [GHC.Types.Char]
[GblId]
lvl2_r95n6 = GHC.CString.unpackCString# lvl1_r95n5

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl3_r95n7 :: [GHC.Types.Char]
[GblId]
lvl3_r95n7
  = GHC.CString.unpackCString# Foreign.Marshal.Pool.$trModule4

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl4_r95n8 :: [GHC.Types.Char]
[GblId]
lvl4_r95n8
  = GHC.CString.unpackCString# Foreign.Marshal.Pool.$trModule2

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl5_r95n9 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl5_r95n9 = "./Foreign/Marshal/Pool.hs"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl6_r95na :: [GHC.Types.Char]
[GblId]
lvl6_r95na = GHC.CString.unpackCString# lvl5_r95n9

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl7_r95nb :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl7_r95nb = GHC.Types.I# 159#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl8_r95nc :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl8_r95nc = GHC.Types.I# 26#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl9_r95nd :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl9_r95nd = GHC.Types.I# 35#

-- RHS size: {terms: 8, types: 0, coercions: 0, joins: 0/0}
lvl10_r95ne :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []]
lvl10_r95ne
  = GHC.Stack.Types.SrcLoc
      lvl3_r95n7
      lvl4_r95n8
      lvl6_r95na
      lvl7_r95nb
      lvl8_r95nc
      lvl7_r95nb
      lvl9_r95nd

-- RHS size: {terms: 4, types: 0, coercions: 0, joins: 0/0}
lvl11_r95nf :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []]
lvl11_r95nf
  = GHC.Stack.Types.PushCallStack
      lvl2_r95n6 lvl10_r95ne GHC.Stack.Types.EmptyCallStack

-- RHS size: {terms: 3, types: 4, coercions: 4, joins: 0/0}
Foreign.Marshal.Pool.pooledReallocArray1 :: forall a. a
[GblId, Str=x]
Foreign.Marshal.Pool.pooledReallocArray1
  = \ (@ a_a94L7) ->
      undefined
        @ 'GHC.Types.LiftedRep
        @ a_a94L7
        (lvl11_r95nf
         `cast` (Sym (GHC.Classes.N:IP[0]
                          <"callStack">_N <GHC.Stack.Types.CallStack>_N)
                 :: (GHC.Stack.Types.CallStack :: *)
                    ~R# (?callStack::GHC.Stack.Types.CallStack :: Constraint)))

-- RHS size: {terms: 29, types: 31, coercions: 17, joins: 0/1}
pooledReallocArray
  :: forall a. Storable a => Pool -> Ptr a -> Int -> IO (Ptr a)
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [30] 151 60}]
pooledReallocArray
  = \ (@ a_a94L7) ($dStorable_a94L9 :: Storable a_a94L7) ->
      let {
        lvl27_s94XM [Dmd=<L,U(U)>] :: Int
        [LclId]
        lvl27_s94XM
          = sizeOf
              @ a_a94L7
              $dStorable_a94L9
              (Foreign.Marshal.Pool.pooledReallocArray1 @ a_a94L7) } in
      (\ (pool_a94Gi :: Pool)
         (ptr_a94Gj :: Ptr a_a94L7)
         (size_a94Gk :: Int)
         (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
         case pool_a94Gi
              `cast` (Foreign.Marshal.Pool.N:Pool[0] ; GHC.IORef.N:IORef[0] <[Ptr
                                                                                ()]>_N
                      :: (Pool :: *)
                         ~R# (GHC.STRef.STRef GHC.Prim.RealWorld [Ptr ()] :: *))
         of
         { GHC.STRef.STRef ww1_s95bK ->
         case ptr_a94Gj of { GHC.Ptr.Ptr ww3_s95bO ->
         case size_a94Gk of { GHC.Types.I# x_i7MWL ->
         case lvl27_s94XM of { GHC.Types.I# y_i7MWP ->
         Foreign.Marshal.Pool.$wpooledReallocBytes
           @ a_a94L7 ww1_s95bK ww3_s95bO (GHC.Prim.*# x_i7MWL y_i7MWP) eta_B1
         }
         }
         }
         })
      `cast` (<Pool>_R
              ->_R <Ptr a_a94L7>_R
              ->_R <Int>_R
              ->_R Sym (GHC.Types.N:IO[0] <Ptr a_a94L7>_R)
              :: (Pool
                  -> Ptr a_a94L7
                  -> Int
                  -> GHC.Prim.State# GHC.Prim.RealWorld
                  -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a_a94L7 #) :: *)
                 ~R# (Pool -> Ptr a_a94L7 -> Int -> IO (Ptr a_a94L7) :: *))

-- RHS size: {terms: 29, types: 30, coercions: 6, joins: 0/0}
Foreign.Marshal.Pool.pooledReallocArray2
  :: forall a.
     Storable a =>
     Pool
     -> Ptr a
     -> Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #)
[GblId,
 Arity=5,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=5,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a94LK)
                 ($dStorable_a94LM [Occ=Once] :: Storable a_a94LK)
                 (pool_a94Gl [Occ=Once] :: Pool)
                 (ptr_a94Gm [Occ=Once] :: Ptr a_a94LK)
                 (size_a94Gn [Occ=Once!] :: Int)
                 (eta_B1 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case size_a94Gn of { GHC.Types.I# x_i7MX1 [Occ=Once] ->
                 case sizeOf
                        @ a_a94LK
                        $dStorable_a94LM
                        (Foreign.Marshal.Pool.pooledReallocArray1 @ a_a94LK)
                 of
                 { GHC.Types.I# y_i7MWP [Occ=Once] ->
                 Foreign.Marshal.Pool.pooledRealloc1
                   @ a_a94LK
                   pool_a94Gl
                   ptr_a94Gm
                   (GHC.Types.I# (GHC.Prim.*# (GHC.Prim.+# x_i7MX1 1#) y_i7MWP))
                   eta_B1
                 }
                 }}]
Foreign.Marshal.Pool.pooledReallocArray2
  = \ (@ a_a94LK)
      ($dStorable_a94LM :: Storable a_a94LK)
      (pool_a94Gl :: Pool)
      (ptr_a94Gm :: Ptr a_a94LK)
      (size_a94Gn :: Int)
      (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case pool_a94Gl
           `cast` (Foreign.Marshal.Pool.N:Pool[0] ; GHC.IORef.N:IORef[0] <[Ptr
                                                                             ()]>_N
                   :: (Pool :: *)
                      ~R# (GHC.STRef.STRef GHC.Prim.RealWorld [Ptr ()] :: *))
      of
      { GHC.STRef.STRef ww1_s95bK ->
      case ptr_a94Gm of { GHC.Ptr.Ptr ww3_s95bO ->
      case size_a94Gn of { GHC.Types.I# x_i7MX1 ->
      case sizeOf
             @ a_a94LK
             $dStorable_a94LM
             (Foreign.Marshal.Pool.pooledReallocArray1 @ a_a94LK)
      of
      { GHC.Types.I# y_i7MWP ->
      Foreign.Marshal.Pool.$wpooledReallocBytes
        @ a_a94LK
        ww1_s95bK
        ww3_s95bO
        (GHC.Prim.*# (GHC.Prim.+# x_i7MX1 1#) y_i7MWP)
        eta_B1
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 17, joins: 0/0}
pooledReallocArray0
  :: forall a. Storable a => Pool -> Ptr a -> Int -> IO (Ptr a)
[GblId,
 Arity=5,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><S(S),1*U(U)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Foreign.Marshal.Pool.pooledReallocArray2
               `cast` (forall (a :: <*>_N).
                       <Storable a>_R
                       ->_R <Pool>_R
                       ->_R <Ptr a>_R
                       ->_R <Int>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Ptr a>_R)
                       :: (forall a.
                           Storable a =>
                           Pool
                           -> Ptr a
                           -> Int
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #) :: *)
                          ~R# (forall a.
                               Storable a =>
                               Pool -> Ptr a -> Int -> IO (Ptr a) :: *))}]
pooledReallocArray0
  = Foreign.Marshal.Pool.pooledReallocArray2
    `cast` (forall (a :: <*>_N).
            <Storable a>_R
            ->_R <Pool>_R
            ->_R <Ptr a>_R
            ->_R <Int>_R
            ->_R Sym (GHC.Types.N:IO[0] <Ptr a>_R)
            :: (forall a.
                Storable a =>
                Pool
                -> Ptr a
                -> Int
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #) :: *)
               ~R# (forall a.
                    Storable a =>
                    Pool -> Ptr a -> Int -> IO (Ptr a) :: *))

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl12_r95ng :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl12_r95ng = GHC.Types.I# 124#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl13_r95nh :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl13_r95nh = GHC.Types.I# 20#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl14_r95ni :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl14_r95ni = GHC.Types.I# 29#

-- RHS size: {terms: 8, types: 0, coercions: 0, joins: 0/0}
lvl15_r95nj :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []]
lvl15_r95nj
  = GHC.Stack.Types.SrcLoc
      lvl3_r95n7
      lvl4_r95n8
      lvl6_r95na
      lvl12_r95ng
      lvl13_r95nh
      lvl12_r95ng
      lvl14_r95ni

-- RHS size: {terms: 4, types: 0, coercions: 0, joins: 0/0}
lvl16_r95nk :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []]
lvl16_r95nk
  = GHC.Stack.Types.PushCallStack
      lvl2_r95n6 lvl15_r95nj GHC.Stack.Types.EmptyCallStack

-- RHS size: {terms: 3, types: 4, coercions: 4, joins: 0/0}
Foreign.Marshal.Pool.pooledRealloc3 :: forall a. a
[GblId, Str=x]
Foreign.Marshal.Pool.pooledRealloc3
  = \ (@ a_a94LU) ->
      undefined
        @ 'GHC.Types.LiftedRep
        @ a_a94LU
        (lvl16_r95nk
         `cast` (Sym (GHC.Classes.N:IP[0]
                          <"callStack">_N <GHC.Stack.Types.CallStack>_N)
                 :: (GHC.Stack.Types.CallStack :: *)
                    ~R# (?callStack::GHC.Stack.Types.CallStack :: Constraint)))

-- RHS size: {terms: 14, types: 13, coercions: 9, joins: 0/1}
pooledRealloc
  :: forall a. Storable a => Pool -> Ptr a -> IO (Ptr a)
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [30] 100 60}]
pooledRealloc
  = \ (@ a_a94LU) ($dStorable_a94LW :: Storable a_a94LU) ->
      let {
        lvl27_s94Y7 [Dmd=<L,U(U)>] :: Int
        [LclId]
        lvl27_s94Y7
          = sizeOf
              @ a_a94LU
              $dStorable_a94LW
              (Foreign.Marshal.Pool.pooledRealloc3 @ a_a94LU) } in
      (\ (pool_a94G0 :: Pool)
         (ptr_a94G1 :: Ptr a_a94LU)
         (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
         Foreign.Marshal.Pool.pooledRealloc1
           @ a_a94LU pool_a94G0 ptr_a94G1 lvl27_s94Y7 eta_B1)
      `cast` (<Pool>_R
              ->_R <Ptr a_a94LU>_R
              ->_R Sym (GHC.Types.N:IO[0] <Ptr a_a94LU>_R)
              :: (Pool
                  -> Ptr a_a94LU
                  -> GHC.Prim.State# GHC.Prim.RealWorld
                  -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a_a94LU #) :: *)
                 ~R# (Pool -> Ptr a_a94LU -> IO (Ptr a_a94LU) :: *))

-- RHS size: {terms: 45, types: 80, coercions: 13, joins: 0/1}
Foreign.Marshal.Pool.pooledMallocBytes1
  :: forall a.
     Pool
     -> Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #)
[GblId,
 Arity=3,
 Str=<L,1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_a94Mt)
                 (ds_d94Rh [Occ=Once] :: Pool)
                 (size_a94FU [Occ=Once!] :: Int)
                 (s_i7IAv [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case size_a94FU of { GHC.Types.I# x#_i7NZc [Occ=Once] ->
                 case {__pkg_ccall base-4.11.0.0 Word#
                           -> State# RealWorld -> (# State# RealWorld, Addr# #)}_d8MKH
                        (GHC.Prim.int2Word# x#_i7NZc) s_i7IAv
                 of
                 { (# ds1_d8MKF [Occ=Once*], ds2_d8MKE #) ->
                 case GHC.Prim.eqAddr# ds2_d8MKE __NULL of {
                   __DEFAULT ->
                     case ds_d94Rh
                          `cast` (Foreign.Marshal.Pool.N:Pool[0] ; GHC.IORef.N:IORef[0] <[Ptr
                                                                                            ()]>_N
                                  :: (Pool :: *)
                                     ~R# (GHC.STRef.STRef GHC.Prim.RealWorld [Ptr ()] :: *))
                     of
                     { GHC.STRef.STRef var#_i7IB3 ->
                     case GHC.Prim.readMutVar#
                            @ GHC.Prim.RealWorld @ [Ptr ()] var#_i7IB3 ds1_d8MKF
                     of
                     { (# ipv_X7IBB [Occ=Once], ipv1_X7IBD [Occ=Once] #) ->
                     let {
                       ipv2_i7IAz :: Ptr ()
                       [LclId, Unf=OtherCon []]
                       ipv2_i7IAz = GHC.Ptr.Ptr @ () ds2_d8MKE } in
                     case GHC.Prim.writeMutVar#
                            @ GHC.Prim.RealWorld
                            @ [Ptr ()]
                            var#_i7IB3
                            (GHC.Types.: @ (Ptr ()) ipv2_i7IAz ipv1_X7IBD)
                            ipv_X7IBB
                     of s2#_i7IBe
                     { __DEFAULT ->
                     (# s2#_i7IBe,
                        ipv2_i7IAz
                        `cast` ((Ptr Univ(phantom phantom <*>_N :: (), a_a94Mt))_R
                                :: (Ptr () :: *) ~R# (Ptr a_a94Mt :: *)) #)
                     }
                     }
                     };
                   1# ->
                     case GHC.Prim.raiseIO#
                            @ GHC.Exception.SomeException
                            @ (Ptr ())
                            Foreign.Marshal.Alloc.malloc1
                            ds1_d8MKF
                     of {
                     }
                 }
                 }
                 }}]
Foreign.Marshal.Pool.pooledMallocBytes1
  = \ (@ a_a94Mt)
      (ds_d94Rh :: Pool)
      (size_a94FU :: Int)
      (s_i7IAv :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case size_a94FU of { GHC.Types.I# x#_i7NZc ->
      case {__pkg_ccall base-4.11.0.0 Word#
                           -> State# RealWorld -> (# State# RealWorld, Addr# #)}_d8MKH
             (GHC.Prim.int2Word# x#_i7NZc) s_i7IAv
      of
      { (# ds1_d8MKF, ds2_d8MKE #) ->
      case GHC.Prim.eqAddr# ds2_d8MKE __NULL of {
        __DEFAULT ->
          case ds_d94Rh
               `cast` (Foreign.Marshal.Pool.N:Pool[0] ; GHC.IORef.N:IORef[0] <[Ptr
                                                                                 ()]>_N
                       :: (Pool :: *)
                          ~R# (GHC.STRef.STRef GHC.Prim.RealWorld [Ptr ()] :: *))
          of
          { GHC.STRef.STRef var#_i7IB3 ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld @ [Ptr ()] var#_i7IB3 ds1_d8MKF
          of
          { (# ipv_X7IBB, ipv1_X7IBD #) ->
          let {
            ipv2_i7IAz :: Ptr ()
            [LclId, Unf=OtherCon []]
            ipv2_i7IAz = GHC.Ptr.Ptr @ () ds2_d8MKE } in
          case GHC.Prim.writeMutVar#
                 @ GHC.Prim.RealWorld
                 @ [Ptr ()]
                 var#_i7IB3
                 (GHC.Types.: @ (Ptr ()) ipv2_i7IAz ipv1_X7IBD)
                 ipv_X7IBB
          of s2#_i7IBe
          { __DEFAULT ->
          (# s2#_i7IBe,
             ipv2_i7IAz
             `cast` ((Ptr Univ(phantom phantom <*>_N :: (), a_a94Mt))_R
                     :: (Ptr () :: *) ~R# (Ptr a_a94Mt :: *)) #)
          }
          }
          };
        1# ->
          case GHC.Prim.raiseIO#
                 @ GHC.Exception.SomeException
                 @ (Ptr ())
                 Foreign.Marshal.Alloc.malloc1
                 ds1_d8MKF
          of wild2_00 {
          }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 11, joins: 0/0}
pooledMallocBytes :: forall a. Pool -> Int -> IO (Ptr a)
[GblId,
 Arity=3,
 Str=<L,1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Foreign.Marshal.Pool.pooledMallocBytes1
               `cast` (forall (a :: <*>_N).
                       <Pool>_R ->_R <Int>_R ->_R Sym (GHC.Types.N:IO[0] <Ptr a>_R)
                       :: (forall a.
                           Pool
                           -> Int
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #) :: *)
                          ~R# (forall a. Pool -> Int -> IO (Ptr a) :: *))}]
pooledMallocBytes
  = Foreign.Marshal.Pool.pooledMallocBytes1
    `cast` (forall (a :: <*>_N).
            <Pool>_R ->_R <Int>_R ->_R Sym (GHC.Types.N:IO[0] <Ptr a>_R)
            :: (forall a.
                Pool
                -> Int
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #) :: *)
               ~R# (forall a. Pool -> Int -> IO (Ptr a) :: *))

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl17_r95nl :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl17_r95nl = GHC.Types.I# 144#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl18_r95nm :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl18_r95nm = GHC.Types.I# 25#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl19_r95nn :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl19_r95nn = GHC.Types.I# 34#

-- RHS size: {terms: 8, types: 0, coercions: 0, joins: 0/0}
lvl20_r95no :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []]
lvl20_r95no
  = GHC.Stack.Types.SrcLoc
      lvl3_r95n7
      lvl4_r95n8
      lvl6_r95na
      lvl17_r95nl
      lvl18_r95nm
      lvl17_r95nl
      lvl19_r95nn

-- RHS size: {terms: 4, types: 0, coercions: 0, joins: 0/0}
lvl21_r95np :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []]
lvl21_r95np
  = GHC.Stack.Types.PushCallStack
      lvl2_r95n6 lvl20_r95no GHC.Stack.Types.EmptyCallStack

-- RHS size: {terms: 3, types: 4, coercions: 4, joins: 0/0}
Foreign.Marshal.Pool.pooledMallocArray1 :: forall a. a
[GblId, Str=x]
Foreign.Marshal.Pool.pooledMallocArray1
  = \ (@ a_a94MR) ->
      undefined
        @ 'GHC.Types.LiftedRep
        @ a_a94MR
        (lvl21_r95np
         `cast` (Sym (GHC.Classes.N:IP[0]
                          <"callStack">_N <GHC.Stack.Types.CallStack>_N)
                 :: (GHC.Stack.Types.CallStack :: *)
                    ~R# (?callStack::GHC.Stack.Types.CallStack :: Constraint)))

-- RHS size: {terms: 55, types: 87, coercions: 21, joins: 0/2}
pooledMallocArray
  :: forall a. Storable a => Pool -> Int -> IO (Ptr a)
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [30] 170 60}]
pooledMallocArray
  = \ (@ a_a94MR) ($dStorable_a94MT :: Storable a_a94MR) ->
      let {
        lvl27_s94Ys [Dmd=<L,U(U)>] :: Int
        [LclId]
        lvl27_s94Ys
          = sizeOf
              @ a_a94MR
              $dStorable_a94MT
              (Foreign.Marshal.Pool.pooledMallocArray1 @ a_a94MR) } in
      (\ (pool_a94Gb :: Pool)
         (size_a94Gc :: Int)
         (s_i7IAv :: GHC.Prim.State# GHC.Prim.RealWorld) ->
         case size_a94Gc of { GHC.Types.I# x_i7MWL ->
         case lvl27_s94Ys of { GHC.Types.I# y_i7MWP ->
         case {__pkg_ccall base-4.11.0.0 Word#
                           -> State# RealWorld -> (# State# RealWorld, Addr# #)}_d8MKH
                (GHC.Prim.int2Word# (GHC.Prim.*# x_i7MWL y_i7MWP)) s_i7IAv
         of
         { (# ds_d8MKF, ds1_d8MKE #) ->
         case GHC.Prim.eqAddr# ds1_d8MKE __NULL of {
           __DEFAULT ->
             case pool_a94Gb
                  `cast` (Foreign.Marshal.Pool.N:Pool[0] ; GHC.IORef.N:IORef[0] <[Ptr
                                                                                    ()]>_N
                          :: (Pool :: *)
                             ~R# (GHC.STRef.STRef GHC.Prim.RealWorld [Ptr ()] :: *))
             of
             { GHC.STRef.STRef var#_i7IB3 ->
             case GHC.Prim.readMutVar#
                    @ GHC.Prim.RealWorld @ [Ptr ()] var#_i7IB3 ds_d8MKF
             of
             { (# ipv_X7IBB, ipv1_X7IBD #) ->
             let {
               ipv2_i7IAz :: Ptr ()
               [LclId, Unf=OtherCon []]
               ipv2_i7IAz = GHC.Ptr.Ptr @ () ds1_d8MKE } in
             case GHC.Prim.writeMutVar#
                    @ GHC.Prim.RealWorld
                    @ [Ptr ()]
                    var#_i7IB3
                    (GHC.Types.: @ (Ptr ()) ipv2_i7IAz ipv1_X7IBD)
                    ipv_X7IBB
             of s2#_i7IBe
             { __DEFAULT ->
             (# s2#_i7IBe,
                ipv2_i7IAz
                `cast` ((Ptr Univ(phantom phantom <*>_N :: (), a_a94MR))_R
                        :: (Ptr () :: *) ~R# (Ptr a_a94MR :: *)) #)
             }
             }
             };
           1# ->
             case GHC.Prim.raiseIO#
                    @ GHC.Exception.SomeException
                    @ (Ptr ())
                    Foreign.Marshal.Alloc.malloc1
                    ds_d8MKF
             of wild3_00 {
             }
         }
         }
         }
         })
      `cast` (<Pool>_R
              ->_R <Int>_R
              ->_R Sym (GHC.Types.N:IO[0] <Ptr a_a94MR>_R)
              :: (Pool
                  -> Int
                  -> GHC.Prim.State# GHC.Prim.RealWorld
                  -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a_a94MR #) :: *)
                 ~R# (Pool -> Int -> IO (Ptr a_a94MR) :: *))

-- RHS size: {terms: 52, types: 84, coercions: 13, joins: 0/1}
Foreign.Marshal.Pool.$wpooledMallocArray0 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Storable a =>
     Pool
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><L,1*U(U)><S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 20 0 0] 131 30}]
Foreign.Marshal.Pool.$wpooledMallocArray0
  = \ (@ a_s95c1)
      (w_s95c2 :: Storable a_s95c1)
      (w1_s95c3 :: Pool)
      (ww_s95c8 :: GHC.Prim.Int#)
      (w2_s95c5 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case sizeOf
             @ a_s95c1
             w_s95c2
             (Foreign.Marshal.Pool.pooledMallocArray1 @ a_s95c1)
      of
      { GHC.Types.I# y_i7MWP ->
      case {__pkg_ccall base-4.11.0.0 Word#
                           -> State# RealWorld -> (# State# RealWorld, Addr# #)}_d8MKH
             (GHC.Prim.int2Word#
                (GHC.Prim.*# (GHC.Prim.+# ww_s95c8 1#) y_i7MWP))
             w2_s95c5
      of
      { (# ds_d8MKF, ds1_d8MKE #) ->
      case GHC.Prim.eqAddr# ds1_d8MKE __NULL of {
        __DEFAULT ->
          case w1_s95c3
               `cast` (Foreign.Marshal.Pool.N:Pool[0] ; GHC.IORef.N:IORef[0] <[Ptr
                                                                                 ()]>_N
                       :: (Pool :: *)
                          ~R# (GHC.STRef.STRef GHC.Prim.RealWorld [Ptr ()] :: *))
          of
          { GHC.STRef.STRef var#_i7IB3 ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld @ [Ptr ()] var#_i7IB3 ds_d8MKF
          of
          { (# ipv_X7IBB, ipv1_X7IBD #) ->
          let {
            ipv2_i7IAz :: Ptr ()
            [LclId, Unf=OtherCon []]
            ipv2_i7IAz = GHC.Ptr.Ptr @ () ds1_d8MKE } in
          case GHC.Prim.writeMutVar#
                 @ GHC.Prim.RealWorld
                 @ [Ptr ()]
                 var#_i7IB3
                 (GHC.Types.: @ (Ptr ()) ipv2_i7IAz ipv1_X7IBD)
                 ipv_X7IBB
          of s2#_i7IBe
          { __DEFAULT ->
          (# s2#_i7IBe,
             ipv2_i7IAz
             `cast` ((Ptr Univ(phantom phantom <*>_N :: (), a_s95c1))_R
                     :: (Ptr () :: *) ~R# (Ptr a_s95c1 :: *)) #)
          }
          }
          };
        1# ->
          case GHC.Prim.raiseIO#
                 @ GHC.Exception.SomeException
                 @ (Ptr ())
                 Foreign.Marshal.Alloc.malloc1
                 ds_d8MKF
          of wild_00 {
          }
      }
      }
      }

-- RHS size: {terms: 13, types: 11, coercions: 0, joins: 0/0}
Foreign.Marshal.Pool.pooledMallocArray2 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Storable a =>
     Pool
     -> Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><L,1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_s95c1)
                 (w_s95c2 [Occ=Once] :: Storable a_s95c1)
                 (w1_s95c3 [Occ=Once] :: Pool)
                 (w2_s95c4 [Occ=Once!] :: Int)
                 (w3_s95c5 [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w2_s95c4 of { GHC.Types.I# ww1_s95c8 [Occ=Once] ->
                 Foreign.Marshal.Pool.$wpooledMallocArray0
                   @ a_s95c1 w_s95c2 w1_s95c3 ww1_s95c8 w3_s95c5
                 }}]
Foreign.Marshal.Pool.pooledMallocArray2
  = \ (@ a_s95c1)
      (w_s95c2 :: Storable a_s95c1)
      (w1_s95c3 :: Pool)
      (w2_s95c4 :: Int)
      (w3_s95c5 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case w2_s95c4 of { GHC.Types.I# ww1_s95c8 ->
      Foreign.Marshal.Pool.$wpooledMallocArray0
        @ a_s95c1 w_s95c2 w1_s95c3 ww1_s95c8 w3_s95c5
      }

-- RHS size: {terms: 1, types: 0, coercions: 14, joins: 0/0}
pooledMallocArray0
  :: forall a. Storable a => Pool -> Int -> IO (Ptr a)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),1*U(1*C1(U(U)),A,A,A,A,A,A,A)><L,1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Foreign.Marshal.Pool.pooledMallocArray2
               `cast` (forall (a :: <*>_N).
                       <Storable a>_R
                       ->_R <Pool>_R
                       ->_R <Int>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Ptr a>_R)
                       :: (forall a.
                           Storable a =>
                           Pool
                           -> Int
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #) :: *)
                          ~R# (forall a. Storable a => Pool -> Int -> IO (Ptr a) :: *))}]
pooledMallocArray0
  = Foreign.Marshal.Pool.pooledMallocArray2
    `cast` (forall (a :: <*>_N).
            <Storable a>_R
            ->_R <Pool>_R
            ->_R <Int>_R
            ->_R Sym (GHC.Types.N:IO[0] <Ptr a>_R)
            :: (forall a.
                Storable a =>
                Pool
                -> Int
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #) :: *)
               ~R# (forall a. Storable a => Pool -> Int -> IO (Ptr a) :: *))

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl22_r95nq :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl22_r95nq = GHC.Types.I# 106#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl23_r95nr :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl23_r95nr = GHC.Types.I# 19#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl24_r95ns :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl24_r95ns = GHC.Types.I# 28#

-- RHS size: {terms: 8, types: 0, coercions: 0, joins: 0/0}
lvl25_r95nt :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []]
lvl25_r95nt
  = GHC.Stack.Types.SrcLoc
      lvl3_r95n7
      lvl4_r95n8
      lvl6_r95na
      lvl22_r95nq
      lvl23_r95nr
      lvl22_r95nq
      lvl24_r95ns

-- RHS size: {terms: 4, types: 0, coercions: 0, joins: 0/0}
lvl26_r95nu :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []]
lvl26_r95nu
  = GHC.Stack.Types.PushCallStack
      lvl2_r95n6 lvl25_r95nt GHC.Stack.Types.EmptyCallStack

-- RHS size: {terms: 3, types: 4, coercions: 4, joins: 0/0}
Foreign.Marshal.Pool.pooledMalloc1 :: forall a. a
[GblId, Str=x]
Foreign.Marshal.Pool.pooledMalloc1
  = \ (@ a_a94Og) ->
      undefined
        @ 'GHC.Types.LiftedRep
        @ a_a94Og
        (lvl26_r95nu
         `cast` (Sym (GHC.Classes.N:IP[0]
                          <"callStack">_N <GHC.Stack.Types.CallStack>_N)
                 :: (GHC.Stack.Types.CallStack :: *)
                    ~R# (?callStack::GHC.Stack.Types.CallStack :: Constraint)))

-- RHS size: {terms: 49, types: 84, coercions: 19, joins: 0/2}
pooledMalloc :: forall a. Storable a => Pool -> IO (Ptr a)
[GblId,
 Arity=1,
 Str=<L,1*U(1*C1(U(U)),A,A,A,A,A,A,A)>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [30] 149 60}]
pooledMalloc
  = \ (@ a_a94Og) ($dStorable_a94Oi :: Storable a_a94Og) ->
      let {
        lvl27_s94YO [Dmd=<L,U(U)>] :: Int
        [LclId]
        lvl27_s94YO
          = sizeOf
              @ a_a94Og
              $dStorable_a94Oi
              (Foreign.Marshal.Pool.pooledMalloc1 @ a_a94Og) } in
      (\ (pool_a94FS :: Pool)
         (s_i7IAv :: GHC.Prim.State# GHC.Prim.RealWorld) ->
         case lvl27_s94YO of { GHC.Types.I# x#_i7NZc ->
         case {__pkg_ccall base-4.11.0.0 Word#
                           -> State# RealWorld -> (# State# RealWorld, Addr# #)}_d8MKH
                (GHC.Prim.int2Word# x#_i7NZc) s_i7IAv
         of
         { (# ds_d8MKF, ds1_d8MKE #) ->
         case GHC.Prim.eqAddr# ds1_d8MKE __NULL of {
           __DEFAULT ->
             case pool_a94FS
                  `cast` (Foreign.Marshal.Pool.N:Pool[0] ; GHC.IORef.N:IORef[0] <[Ptr
                                                                                    ()]>_N
                          :: (Pool :: *)
                             ~R# (GHC.STRef.STRef GHC.Prim.RealWorld [Ptr ()] :: *))
             of
             { GHC.STRef.STRef var#_i7IB3 ->
             case GHC.Prim.readMutVar#
                    @ GHC.Prim.RealWorld @ [Ptr ()] var#_i7IB3 ds_d8MKF
             of
             { (# ipv_X7IBB, ipv1_X7IBD #) ->
             let {
               ipv2_i7IAz :: Ptr ()
               [LclId, Unf=OtherCon []]
               ipv2_i7IAz = GHC.Ptr.Ptr @ () ds1_d8MKE } in
             case GHC.Prim.writeMutVar#
                    @ GHC.Prim.RealWorld
                    @ [Ptr ()]
                    var#_i7IB3
                    (GHC.Types.: @ (Ptr ()) ipv2_i7IAz ipv1_X7IBD)
                    ipv_X7IBB
             of s2#_i7IBe
             { __DEFAULT ->
             (# s2#_i7IBe,
                ipv2_i7IAz
                `cast` ((Ptr Univ(phantom phantom <*>_N :: (), a_a94Og))_R
                        :: (Ptr () :: *) ~R# (Ptr a_a94Og :: *)) #)
             }
             }
             };
           1# ->
             case GHC.Prim.raiseIO#
                    @ GHC.Exception.SomeException
                    @ (Ptr ())
                    Foreign.Marshal.Alloc.malloc1
                    ds_d8MKF
             of wild2_00 {
             }
         }
         }
         })
      `cast` (<Pool>_R ->_R Sym (GHC.Types.N:IO[0] <Ptr a_a94Og>_R)
              :: (Pool
                  -> GHC.Prim.State# GHC.Prim.RealWorld
                  -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a_a94Og #) :: *)
                 ~R# (Pool -> IO (Ptr a_a94Og) :: *))

-- RHS size: {terms: 66, types: 100, coercions: 20, joins: 0/1}
Foreign.Marshal.Pool.pooledNewArray2
  :: forall a.
     Storable a =>
     Pool
     -> a
     -> [a]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #)
[GblId,
 Arity=5,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,1*U(U)><L,U><S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 20 0 0 0] 231 30}]
Foreign.Marshal.Pool.pooledNewArray2
  = \ (@ a_a94NC)
      ($dStorable_a94NE :: Storable a_a94NC)
      (pool_a94Gu :: Pool)
      (marker_a94Gv :: a_a94NC)
      (vals_a94Gw :: [a_a94NC])
      (s_i7IAv :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case GHC.List.$wlenAcc @ a_a94NC vals_a94Gw 0# of ww2_i8PwI
      { __DEFAULT ->
      case sizeOf
             @ a_a94NC
             $dStorable_a94NE
             (Foreign.Marshal.Pool.pooledMallocArray1 @ a_a94NC)
      of
      { GHC.Types.I# y_i7MWP ->
      case {__pkg_ccall base-4.11.0.0 Word#
                           -> State# RealWorld -> (# State# RealWorld, Addr# #)}_d8MKH
             (GHC.Prim.int2Word#
                (GHC.Prim.*# (GHC.Prim.+# ww2_i8PwI 1#) y_i7MWP))
             s_i7IAv
      of
      { (# ds_d8MKF, ds1_d8MKE #) ->
      case GHC.Prim.eqAddr# ds1_d8MKE __NULL of {
        __DEFAULT ->
          case pool_a94Gu
               `cast` (Foreign.Marshal.Pool.N:Pool[0] ; GHC.IORef.N:IORef[0] <[Ptr
                                                                                 ()]>_N
                       :: (Pool :: *)
                          ~R# (GHC.STRef.STRef GHC.Prim.RealWorld [Ptr ()] :: *))
          of
          { GHC.STRef.STRef var#_i7IB3 ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld @ [Ptr ()] var#_i7IB3 ds_d8MKF
          of
          { (# ipv_X7IBB, ipv1_X7IBD #) ->
          let {
            ipv2_i7IAz :: Ptr ()
            [LclId, Unf=OtherCon []]
            ipv2_i7IAz = GHC.Ptr.Ptr @ () ds1_d8MKE } in
          case GHC.Prim.writeMutVar#
                 @ GHC.Prim.RealWorld
                 @ [Ptr ()]
                 var#_i7IB3
                 (GHC.Types.: @ (Ptr ()) ipv2_i7IAz ipv1_X7IBD)
                 ipv_X7IBB
          of s2#_i7IBe
          { __DEFAULT ->
          case Foreign.Marshal.Array.newArray4
                 @ a_a94NC
                 $dStorable_a94NE
                 marker_a94Gv
                 (ipv2_i7IAz
                  `cast` ((Ptr Univ(phantom phantom <*>_N :: (), a_a94NC))_R
                          :: (Ptr () :: *) ~R# (Ptr a_a94NC :: *)))
                 vals_a94Gw
                 s2#_i7IBe
          of
          { (# ipv3_i7JiK, ipv4_i7JiL #) ->
          (# ipv3_i7JiK,
             ipv2_i7IAz
             `cast` ((Ptr Univ(phantom phantom <*>_N :: (), a_a94NC))_R
                     :: (Ptr () :: *) ~R# (Ptr a_a94NC :: *)) #)
          }
          }
          }
          };
        1# ->
          case GHC.Prim.raiseIO#
                 @ GHC.Exception.SomeException
                 @ (Ptr ())
                 Foreign.Marshal.Alloc.malloc1
                 ds_d8MKF
          of wild_00 {
          }
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 17, joins: 0/0}
pooledNewArray0
  :: forall a. Storable a => Pool -> a -> [a] -> IO (Ptr a)
[GblId,
 Arity=5,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,C(C1(C1(C1(U(U,U))))),A,A,A,A)><L,1*U(U)><L,U><S,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Foreign.Marshal.Pool.pooledNewArray2
               `cast` (forall (a :: <*>_N).
                       <Storable a>_R
                       ->_R <Pool>_R
                       ->_R <a>_R
                       ->_R <[a]>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Ptr a>_R)
                       :: (forall a.
                           Storable a =>
                           Pool
                           -> a
                           -> [a]
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #) :: *)
                          ~R# (forall a.
                               Storable a =>
                               Pool -> a -> [a] -> IO (Ptr a) :: *))}]
pooledNewArray0
  = Foreign.Marshal.Pool.pooledNewArray2
    `cast` (forall (a :: <*>_N).
            <Storable a>_R
            ->_R <Pool>_R
            ->_R <a>_R
            ->_R <[a]>_R
            ->_R Sym (GHC.Types.N:IO[0] <Ptr a>_R)
            :: (forall a.
                Storable a =>
                Pool
                -> a
                -> [a]
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #) :: *)
               ~R# (forall a. Storable a => Pool -> a -> [a] -> IO (Ptr a) :: *))

-- RHS size: {terms: 62, types: 99, coercions: 20, joins: 0/1}
Foreign.Marshal.Pool.pooledNewArray1
  :: forall a.
     Storable a =>
     Pool
     -> [a]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,1*U(U)><S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [30 20 0 0] 220 30}]
Foreign.Marshal.Pool.pooledNewArray1
  = \ (@ a_a94NW)
      ($dStorable_a94NY :: Storable a_a94NW)
      (pool_a94Gr :: Pool)
      (vals_a94Gs :: [a_a94NW])
      (s_i7IAv :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case GHC.List.$wlenAcc @ a_a94NW vals_a94Gs 0# of ww2_i8PwI
      { __DEFAULT ->
      case sizeOf
             @ a_a94NW
             $dStorable_a94NY
             (Foreign.Marshal.Pool.pooledMallocArray1 @ a_a94NW)
      of
      { GHC.Types.I# y_i7MWP ->
      case {__pkg_ccall base-4.11.0.0 Word#
                           -> State# RealWorld -> (# State# RealWorld, Addr# #)}_d8MKH
             (GHC.Prim.int2Word# (GHC.Prim.*# ww2_i8PwI y_i7MWP)) s_i7IAv
      of
      { (# ds_d8MKF, ds1_d8MKE #) ->
      case GHC.Prim.eqAddr# ds1_d8MKE __NULL of {
        __DEFAULT ->
          case pool_a94Gr
               `cast` (Foreign.Marshal.Pool.N:Pool[0] ; GHC.IORef.N:IORef[0] <[Ptr
                                                                                 ()]>_N
                       :: (Pool :: *)
                          ~R# (GHC.STRef.STRef GHC.Prim.RealWorld [Ptr ()] :: *))
          of
          { GHC.STRef.STRef var#_i7IB3 ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld @ [Ptr ()] var#_i7IB3 ds_d8MKF
          of
          { (# ipv_X7IBB, ipv1_X7IBD #) ->
          let {
            ipv2_i7IAz :: Ptr ()
            [LclId, Unf=OtherCon []]
            ipv2_i7IAz = GHC.Ptr.Ptr @ () ds1_d8MKE } in
          case GHC.Prim.writeMutVar#
                 @ GHC.Prim.RealWorld
                 @ [Ptr ()]
                 var#_i7IB3
                 (GHC.Types.: @ (Ptr ()) ipv2_i7IAz ipv1_X7IBD)
                 ipv_X7IBB
          of s2#_i7IBe
          { __DEFAULT ->
          case Foreign.Marshal.Array.newArray2
                 @ a_a94NW
                 $dStorable_a94NY
                 (ipv2_i7IAz
                  `cast` ((Ptr Univ(phantom phantom <*>_N :: (), a_a94NW))_R
                          :: (Ptr () :: *) ~R# (Ptr a_a94NW :: *)))
                 vals_a94Gs
                 s2#_i7IBe
          of
          { (# ipv3_i7JiK, ipv4_i7JiL #) ->
          (# ipv3_i7JiK,
             ipv2_i7IAz
             `cast` ((Ptr Univ(phantom phantom <*>_N :: (), a_a94NW))_R
                     :: (Ptr () :: *) ~R# (Ptr a_a94NW :: *)) #)
          }
          }
          }
          };
        1# ->
          case GHC.Prim.raiseIO#
                 @ GHC.Exception.SomeException
                 @ (Ptr ())
                 Foreign.Marshal.Alloc.malloc1
                 ds_d8MKF
          of wild_00 {
          }
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 15, joins: 0/0}
pooledNewArray :: forall a. Storable a => Pool -> [a] -> IO (Ptr a)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,C(C1(C1(C1(U(U,A))))),A,A,A,A)><L,1*U(U)><S,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Foreign.Marshal.Pool.pooledNewArray1
               `cast` (forall (a :: <*>_N).
                       <Storable a>_R
                       ->_R <Pool>_R
                       ->_R <[a]>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Ptr a>_R)
                       :: (forall a.
                           Storable a =>
                           Pool
                           -> [a]
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #) :: *)
                          ~R# (forall a. Storable a => Pool -> [a] -> IO (Ptr a) :: *))}]
pooledNewArray
  = Foreign.Marshal.Pool.pooledNewArray1
    `cast` (forall (a :: <*>_N).
            <Storable a>_R
            ->_R <Pool>_R
            ->_R <[a]>_R
            ->_R Sym (GHC.Types.N:IO[0] <Ptr a>_R)
            :: (forall a.
                Storable a =>
                Pool
                -> [a]
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #) :: *)
               ~R# (forall a. Storable a => Pool -> [a] -> IO (Ptr a) :: *))

-- RHS size: {terms: 55, types: 96, coercions: 22, joins: 0/1}
Foreign.Marshal.Pool.pooledNew1
  :: forall a.
     Storable a =>
     Pool
     -> a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,A,A,A,A,1*C1(C1(C1(U(U,A)))))><L,1*U(U)><L,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [60 20 0 0] 189 30}]
Foreign.Marshal.Pool.pooledNew1
  = \ (@ a_a94ON)
      ($dStorable_a94OP :: Storable a_a94ON)
      (pool_a94Go :: Pool)
      (val_a94Gp :: a_a94ON)
      (s_i7IAv :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case sizeOf
             @ a_a94ON
             $dStorable_a94OP
             (Foreign.Marshal.Pool.pooledMalloc1 @ a_a94ON)
      of
      { GHC.Types.I# x#_i7NZc ->
      case {__pkg_ccall base-4.11.0.0 Word#
                           -> State# RealWorld -> (# State# RealWorld, Addr# #)}_d8MKH
             (GHC.Prim.int2Word# x#_i7NZc) s_i7IAv
      of
      { (# ds_d8MKF, ds1_d8MKE #) ->
      case GHC.Prim.eqAddr# ds1_d8MKE __NULL of {
        __DEFAULT ->
          case pool_a94Go
               `cast` (Foreign.Marshal.Pool.N:Pool[0] ; GHC.IORef.N:IORef[0] <[Ptr
                                                                                 ()]>_N
                       :: (Pool :: *)
                          ~R# (GHC.STRef.STRef GHC.Prim.RealWorld [Ptr ()] :: *))
          of
          { GHC.STRef.STRef var#_i7IB3 ->
          case GHC.Prim.readMutVar#
                 @ GHC.Prim.RealWorld @ [Ptr ()] var#_i7IB3 ds_d8MKF
          of
          { (# ipv_X7IBB, ipv1_X7IBD #) ->
          let {
            ipv2_i7IAz :: Ptr ()
            [LclId, Unf=OtherCon []]
            ipv2_i7IAz = GHC.Ptr.Ptr @ () ds1_d8MKE } in
          case GHC.Prim.writeMutVar#
                 @ GHC.Prim.RealWorld
                 @ [Ptr ()]
                 var#_i7IB3
                 (GHC.Types.: @ (Ptr ()) ipv2_i7IAz ipv1_X7IBD)
                 ipv_X7IBB
          of s2#_i7IBe
          { __DEFAULT ->
          case ((poke
                   @ a_a94ON
                   $dStorable_a94OP
                   (ipv2_i7IAz
                    `cast` ((Ptr Univ(phantom phantom <*>_N :: (), a_a94ON))_R
                            :: (Ptr () :: *) ~R# (Ptr a_a94ON :: *)))
                   val_a94Gp)
                `cast` (GHC.Types.N:IO[0] <()>_R
                        :: (IO () :: *)
                           ~R# (GHC.Prim.State# GHC.Prim.RealWorld
                                -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #) :: *)))
                 s2#_i7IBe
          of
          { (# ipv3_i7JiK, ipv4_i7JiL #) ->
          (# ipv3_i7JiK,
             ipv2_i7IAz
             `cast` ((Ptr Univ(phantom phantom <*>_N :: (), a_a94ON))_R
                     :: (Ptr () :: *) ~R# (Ptr a_a94ON :: *)) #)
          }
          }
          }
          };
        1# ->
          case GHC.Prim.raiseIO#
                 @ GHC.Exception.SomeException
                 @ (Ptr ())
                 Foreign.Marshal.Alloc.malloc1
                 ds_d8MKF
          of wild2_00 {
          }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 14, joins: 0/0}
pooledNew :: forall a. Storable a => Pool -> a -> IO (Ptr a)
[GblId,
 Arity=4,
 Str=<S(C(S(S))LLLLLLL),U(1*C1(U(U)),A,A,A,A,A,A,1*C1(C1(C1(U(U,A)))))><L,1*U(U)><L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Foreign.Marshal.Pool.pooledNew1
               `cast` (forall (a :: <*>_N).
                       <Storable a>_R
                       ->_R <Pool>_R
                       ->_R <a>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Ptr a>_R)
                       :: (forall a.
                           Storable a =>
                           Pool
                           -> a
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #) :: *)
                          ~R# (forall a. Storable a => Pool -> a -> IO (Ptr a) :: *))}]
pooledNew
  = Foreign.Marshal.Pool.pooledNew1
    `cast` (forall (a :: <*>_N).
            <Storable a>_R
            ->_R <Pool>_R
            ->_R <a>_R
            ->_R Sym (GHC.Types.N:IO[0] <Ptr a>_R)
            :: (forall a.
                Storable a =>
                Pool
                -> a
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, Ptr a #) :: *)
               ~R# (forall a. Storable a => Pool -> a -> IO (Ptr a) :: *))

Rec {
-- RHS size: {terms: 20, types: 31, coercions: 0, joins: 0/0}
Foreign.Marshal.Pool.freePool2 [Occ=LoopBreaker]
  :: [Ptr ()]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,1*U><S,U>, Unf=OtherCon []]
Foreign.Marshal.Pool.freePool2
  = \ (ds_d94RC :: [Ptr ()])
      (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case ds_d94RC of {
        [] -> (# eta_B1, GHC.Tuple.() #);
        : p_a94FI ps_a94FJ ->
          case p_a94FI of { GHC.Ptr.Ptr ds2_d8MKa ->
          case {__pkg_ccall base-4.11.0.0 Addr#
                           -> State# RealWorld -> (# State# RealWorld #)}_d8MKd
                 ds2_d8MKa eta_B1
          of
          { (# ds4_d8MKb #) ->
          Foreign.Marshal.Pool.freePool2 ps_a94FJ ds4_d8MKb
          }
          }
      }
end Rec }

-- RHS size: {terms: 13, types: 32, coercions: 6, joins: 0/0}
Foreign.Marshal.Pool.freePool1
  :: Pool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_d94Ry [Occ=Once] :: Pool)
                 (s_i7IAv [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case ds_d94Ry
                      `cast` (Foreign.Marshal.Pool.N:Pool[0] ; GHC.IORef.N:IORef[0] <[Ptr
                                                                                        ()]>_N
                              :: (Pool :: *)
                                 ~R# (GHC.STRef.STRef GHC.Prim.RealWorld [Ptr ()] :: *))
                 of
                 { GHC.STRef.STRef var#_i7IB3 [Occ=Once] ->
                 case GHC.Prim.readMutVar#
                        @ GHC.Prim.RealWorld @ [Ptr ()] var#_i7IB3 s_i7IAv
                 of
                 { (# ipv_i7IAy [Occ=Once], ipv1_i7IAz [Occ=Once] #) ->
                 Foreign.Marshal.Pool.freePool2 ipv1_i7IAz ipv_i7IAy
                 }
                 }}]
Foreign.Marshal.Pool.freePool1
  = \ (ds_d94Ry :: Pool)
      (s_i7IAv :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case ds_d94Ry
           `cast` (Foreign.Marshal.Pool.N:Pool[0] ; GHC.IORef.N:IORef[0] <[Ptr
                                                                             ()]>_N
                   :: (Pool :: *)
                      ~R# (GHC.STRef.STRef GHC.Prim.RealWorld [Ptr ()] :: *))
      of
      { GHC.STRef.STRef var#_i7IB3 ->
      case GHC.Prim.readMutVar#
             @ GHC.Prim.RealWorld @ [Ptr ()] var#_i7IB3 s_i7IAv
      of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      Foreign.Marshal.Pool.freePool2 ipv1_i7IAz ipv_i7IAy
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
freePool :: Pool -> IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Foreign.Marshal.Pool.freePool1
               `cast` (<Pool>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (Pool
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #) :: *)
                          ~R# (Pool -> IO () :: *))}]
freePool
  = Foreign.Marshal.Pool.freePool1
    `cast` (<Pool>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (Pool
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #) :: *)
               ~R# (Pool -> IO () :: *))

-- RHS size: {terms: 10, types: 38, coercions: 8, joins: 0/0}
Foreign.Marshal.Pool.newPool1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Pool #)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (s_i7IAv [Occ=Once]
                    :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.newMutVar#
                        @ [Ptr ()] @ GHC.Prim.RealWorld (GHC.Types.[] @ (Ptr ())) s_i7IAv
                 of
                 { (# ipv_i8ttV [Occ=Once], ipv1_i8ttW [Occ=Once] #) ->
                 (# ipv_i8ttV,
                    (GHC.STRef.STRef @ GHC.Prim.RealWorld @ [Ptr ()] ipv1_i8ttW)
                    `cast` (Sym (GHC.IORef.N:IORef[0]) <[Ptr
                                                           ()]>_N ; Sym (Foreign.Marshal.Pool.N:Pool[0])
                            :: (GHC.STRef.STRef GHC.Prim.RealWorld [Ptr ()] :: *)
                               ~R# (Pool :: *)) #)
                 }}]
Foreign.Marshal.Pool.newPool1
  = \ (s_i7IAv :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case GHC.Prim.newMutVar#
             @ [Ptr ()] @ GHC.Prim.RealWorld (GHC.Types.[] @ (Ptr ())) s_i7IAv
      of
      { (# ipv_i8ttV, ipv1_i8ttW #) ->
      (# ipv_i8ttV,
         (GHC.STRef.STRef @ GHC.Prim.RealWorld @ [Ptr ()] ipv1_i8ttW)
         `cast` (Sym (GHC.IORef.N:IORef[0]) <[Ptr
                                                ()]>_N ; Sym (Foreign.Marshal.Pool.N:Pool[0])
                 :: (GHC.STRef.STRef GHC.Prim.RealWorld [Ptr ()] :: *)
                    ~R# (Pool :: *)) #)
      }

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
newPool :: IO Pool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Foreign.Marshal.Pool.newPool1
               `cast` (Sym (GHC.Types.N:IO[0] <Pool>_R)
                       :: (GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, Pool #) :: *)
                          ~R# (IO Pool :: *))}]
newPool
  = Foreign.Marshal.Pool.newPool1
    `cast` (Sym (GHC.Types.N:IO[0] <Pool>_R)
            :: (GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, Pool #) :: *)
               ~R# (IO Pool :: *))

-- RHS size: {terms: 117, types: 304, coercions: 40, joins: 1/1}
Foreign.Marshal.Pool.withPool1
  :: forall b.
     (Pool -> IO b)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*C1(U)><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [60 0] 425 0}]
Foreign.Marshal.Pool.withPool1
  = \ (@ b_a94PM)
      (act_a94FK :: Pool -> IO b_a94PM)
      (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case GHC.Prim.getMaskingState# eta_B1 of
      { (# ipv_i94TO, ipv1_i94TP #) ->
      join {
        io_s94Xc [Dmd=<L,1*C1(C1(U(U,U)))>]
          :: (forall a. IO a -> IO a)
             -> GHC.Prim.State# GHC.Prim.RealWorld
             -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_a94PM #)
        [LclId[JoinId(2)],
         Arity=2,
         Str=<C(S),1*C1(U)><S,U>,
         Unf=OtherCon []]
        io_s94Xc (restore_a94FL [OS=OneShot] :: forall a. IO a -> IO a)
                 (s_X7IC1 [OS=OneShot] :: GHC.Prim.State# GHC.Prim.RealWorld)
          = case GHC.Prim.newMutVar#
                   @ [Ptr ()] @ GHC.Prim.RealWorld (GHC.Types.[] @ (Ptr ())) s_X7IC1
            of
            { (# ipv2_i8ttV, ipv3_i8ttW #) ->
            case (restore_a94FL
                    @ b_a94PM
                    (act_a94FK
                       ((GHC.STRef.STRef @ GHC.Prim.RealWorld @ [Ptr ()] ipv3_i8ttW)
                        `cast` (Sym (GHC.IORef.N:IORef[0]) <[Ptr
                                                               ()]>_N ; Sym (Foreign.Marshal.Pool.N:Pool[0])
                                :: (GHC.STRef.STRef GHC.Prim.RealWorld [Ptr ()] :: *)
                                   ~R# (Pool :: *)))))
                 `cast` (GHC.Types.N:IO[0] <b_a94PM>_R
                         :: (IO b_a94PM :: *)
                            ~R# (GHC.Prim.State# GHC.Prim.RealWorld
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, b_a94PM #) :: *))
            of io1_i94U1
            { __DEFAULT ->
            case GHC.Prim.catch#
                   @ b_a94PM
                   @ GHC.Exception.SomeException
                   io1_i94U1
                   (\ (ds2_i94U2 [OS=OneShot] :: GHC.Exception.SomeException) ->
                      case ds2_i94U2 of
                      { GHC.Exception.SomeException @ e_i94U5 $dException_i94U6
                                                    e1_i94U7 ->
                      \ (s1_i7JiH [OS=OneShot] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                        case GHC.Prim.readMutVar#
                               @ GHC.Prim.RealWorld @ [Ptr ()] ipv3_i8ttW s1_i7JiH
                        of
                        { (# ipv4_X7IDU, ipv5_X7IDW #) ->
                        case Foreign.Marshal.Pool.freePool2 ipv5_X7IDW ipv4_X7IDU of
                        { (# ipv6_i7JiK, ipv7_i7JiL #) ->
                        case throw @ e_i94U5 @ (IO b_a94PM) $dException_i94U6 e1_i94U7
                        of wild1_00 {
                        }
                        }
                        }
                      })
                   ipv2_i8ttV
            of
            { (# ipv4_X7ICd, ipv5_X7ICf #) ->
            case GHC.Prim.readMutVar#
                   @ GHC.Prim.RealWorld @ [Ptr ()] ipv3_i8ttW ipv4_X7ICd
            of
            { (# ipv6_X7IDQ, ipv7_X7IDS #) ->
            case Foreign.Marshal.Pool.freePool2 ipv7_X7IDS ipv6_X7IDQ of
            { (# ipv8_i7JiK, ipv9_i7JiL #) ->
            (# ipv8_i7JiK, ipv5_X7ICf #)
            }
            }
            }
            }
            } } in
      case ipv1_i94TP of {
        __DEFAULT ->
          jump io_s94Xc
            (GHC.Prim.maskAsyncExceptions#
             `cast` (forall (a :: <*>_N).
                     Sym (GHC.Types.N:IO[0] <a>_R) ->_R Sym (GHC.Types.N:IO[0] <a>_R)
                     :: (forall a.
                         (GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #))
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #) :: *)
                        ~R# (forall a. IO a -> IO a :: *)))
            ipv_i94TO;
        0# ->
          GHC.Prim.maskAsyncExceptions#
            @ b_a94PM
            (\ (s_X7IC1 [OS=OneShot] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
               case GHC.Prim.newMutVar#
                      @ [Ptr ()] @ GHC.Prim.RealWorld (GHC.Types.[] @ (Ptr ())) s_X7IC1
               of
               { (# ipv2_i8ttV, ipv3_i8ttW #) ->
               case GHC.Prim.catch#
                      @ b_a94PM
                      @ GHC.Exception.SomeException
                      (GHC.Prim.unmaskAsyncExceptions#
                         @ b_a94PM
                         ((act_a94FK
                             ((GHC.STRef.STRef @ GHC.Prim.RealWorld @ [Ptr ()] ipv3_i8ttW)
                              `cast` (Sym (GHC.IORef.N:IORef[0]) <[Ptr
                                                                     ()]>_N ; Sym (Foreign.Marshal.Pool.N:Pool[0])
                                      :: (GHC.STRef.STRef GHC.Prim.RealWorld [Ptr ()] :: *)
                                         ~R# (Pool :: *))))
                          `cast` (GHC.Types.N:IO[0] <b_a94PM>_R
                                  :: (IO b_a94PM :: *)
                                     ~R# (GHC.Prim.State# GHC.Prim.RealWorld
                                          -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                b_a94PM #) :: *))))
                      (\ (ds3_i94U2 [OS=OneShot] :: GHC.Exception.SomeException) ->
                         case ds3_i94U2 of
                         { GHC.Exception.SomeException @ e_i94U5 $dException_i94U6
                                                       e1_i94U7 ->
                         \ (s1_i7JiH [OS=OneShot] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                           case GHC.Prim.readMutVar#
                                  @ GHC.Prim.RealWorld @ [Ptr ()] ipv3_i8ttW s1_i7JiH
                           of
                           { (# ipv4_X7IDU, ipv5_X7IDW #) ->
                           case Foreign.Marshal.Pool.freePool2 ipv5_X7IDW ipv4_X7IDU of
                           { (# ipv6_i7JiK, ipv7_i7JiL #) ->
                           case throw @ e_i94U5 @ (IO b_a94PM) $dException_i94U6 e1_i94U7
                           of wild1_00 {
                           }
                           }
                           }
                         })
                      ipv2_i8ttV
               of
               { (# ipv4_X7ICd, ipv5_X7ICf #) ->
               case GHC.Prim.readMutVar#
                      @ GHC.Prim.RealWorld @ [Ptr ()] ipv3_i8ttW ipv4_X7ICd
               of
               { (# ipv6_X7IDQ, ipv7_X7IDS #) ->
               case Foreign.Marshal.Pool.freePool2 ipv7_X7IDS ipv6_X7IDQ of
               { (# ipv8_i7JiK, ipv9_i7JiL #) ->
               (# ipv8_i7JiK, ipv5_X7ICf #)
               }
               }
               }
               })
            ipv_i94TO;
        1# ->
          jump io_s94Xc
            (GHC.Prim.maskUninterruptible#
             `cast` (forall (a :: <*>_N).
                     Sym (GHC.Types.N:IO[0] <a>_R) ->_R Sym (GHC.Types.N:IO[0] <a>_R)
                     :: (forall a.
                         (GHC.Prim.State# GHC.Prim.RealWorld
                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #))
                         -> GHC.Prim.State# GHC.Prim.RealWorld
                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #) :: *)
                        ~R# (forall a. IO a -> IO a :: *)))
            ipv_i94TO
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 10, joins: 0/0}
withPool :: forall b. (Pool -> IO b) -> IO b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*C1(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Foreign.Marshal.Pool.withPool1
               `cast` (forall (b :: <*>_N).
                       <Pool -> IO b>_R ->_R Sym (GHC.Types.N:IO[0] <b>_R)
                       :: (forall b.
                           (Pool -> IO b)
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #) :: *)
                          ~R# (forall b. (Pool -> IO b) -> IO b :: *))}]
withPool
  = Foreign.Marshal.Pool.withPool1
    `cast` (forall (b :: <*>_N).
            <Pool -> IO b>_R ->_R Sym (GHC.Types.N:IO[0] <b>_R)
            :: (forall b.
                (Pool -> IO b)
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, b #) :: *)
               ~R# (forall b. (Pool -> IO b) -> IO b :: *))


