
==================== Pre unarise: ====================
2018-03-16 16:04:10.760033362 UTC

Foreign.Concurrent.newForeignPtr
  :: forall a.
     GHC.Ptr.Ptr a
     -> GHC.Types.IO () -> GHC.Types.IO (GHC.ForeignPtr.ForeignPtr a)
[GblId, Arity=3, Str=<S(S),1*U(U)><L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.ForeignPtr.newConcForeignPtr1 eta_B3 eta_B2 eta_B1;

Foreign.Concurrent.addForeignPtrFinalizer
  :: forall a.
     GHC.ForeignPtr.ForeignPtr a -> GHC.Types.IO () -> GHC.Types.IO ()
[GblId,
 Arity=3,
 Str=<S(LS),1*U(A,1*U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.ForeignPtr.addForeignPtrConcFinalizer1 eta_B3 eta_B2 eta_B1;

Foreign.Concurrent.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Foreign.Concurrent.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Concurrent.$trModule4];

Foreign.Concurrent.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.Concurrent"#;

Foreign.Concurrent.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Concurrent.$trModule2];

Foreign.Concurrent.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.Concurrent.$trModule3
                                     Foreign.Concurrent.$trModule1];


==================== STG syntax: ====================
2018-03-16 16:04:10.761304442 UTC

Foreign.Concurrent.newForeignPtr
  :: forall a.
     GHC.Ptr.Ptr a
     -> GHC.Types.IO () -> GHC.Types.IO (GHC.ForeignPtr.ForeignPtr a)
[GblId, Arity=3, Str=<S(S),1*U(U)><L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.ForeignPtr.newConcForeignPtr1 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.Concurrent.addForeignPtrFinalizer
  :: forall a.
     GHC.ForeignPtr.ForeignPtr a -> GHC.Types.IO () -> GHC.Types.IO ()
[GblId,
 Arity=3,
 Str=<S(LS),1*U(A,1*U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.ForeignPtr.addForeignPtrConcFinalizer1
            eta_B3 eta_B2 GHC.Prim.void#;

Foreign.Concurrent.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Foreign.Concurrent.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Concurrent.$trModule4];

Foreign.Concurrent.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.Concurrent"#;

Foreign.Concurrent.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Concurrent.$trModule2];

Foreign.Concurrent.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.Concurrent.$trModule3
                                     Foreign.Concurrent.$trModule1];


==================== Pre unarise: ====================
2018-03-16 16:04:10.810332307 UTC

Foreign.Concurrent.newForeignPtr
  :: forall a.
     GHC.Ptr.Ptr a
     -> GHC.Types.IO () -> GHC.Types.IO (GHC.ForeignPtr.ForeignPtr a)
[GblId, Arity=3, Str=<S(S),1*U(U)><L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.ForeignPtr.newConcForeignPtr1 eta_B3 eta_B2 eta_B1;

Foreign.Concurrent.addForeignPtrFinalizer
  :: forall a.
     GHC.ForeignPtr.ForeignPtr a -> GHC.Types.IO () -> GHC.Types.IO ()
[GblId,
 Arity=3,
 Str=<S(LS),1*U(A,1*U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.ForeignPtr.addForeignPtrConcFinalizer1 eta_B3 eta_B2 eta_B1;

Foreign.Concurrent.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Foreign.Concurrent.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Concurrent.$trModule4];

Foreign.Concurrent.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.Concurrent"#;

Foreign.Concurrent.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Concurrent.$trModule2];

Foreign.Concurrent.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.Concurrent.$trModule3
                                     Foreign.Concurrent.$trModule1];


==================== STG syntax: ====================
2018-03-16 16:04:10.811551965 UTC

Foreign.Concurrent.newForeignPtr
  :: forall a.
     GHC.Ptr.Ptr a
     -> GHC.Types.IO () -> GHC.Types.IO (GHC.ForeignPtr.ForeignPtr a)
[GblId, Arity=3, Str=<S(S),1*U(U)><L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.ForeignPtr.newConcForeignPtr1 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.Concurrent.addForeignPtrFinalizer
  :: forall a.
     GHC.ForeignPtr.ForeignPtr a -> GHC.Types.IO () -> GHC.Types.IO ()
[GblId,
 Arity=3,
 Str=<S(LS),1*U(A,1*U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.ForeignPtr.addForeignPtrConcFinalizer1
            eta_B3 eta_B2 GHC.Prim.void#;

Foreign.Concurrent.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Foreign.Concurrent.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Concurrent.$trModule4];

Foreign.Concurrent.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.Concurrent"#;

Foreign.Concurrent.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.Concurrent.$trModule2];

Foreign.Concurrent.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.Concurrent.$trModule3
                                     Foreign.Concurrent.$trModule1];

