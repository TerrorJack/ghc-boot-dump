
==================== Raw Cmm ====================
2018-03-16 16:02:53.935715514 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:02:53.938087345 UTC

[section ""data" . Foreign.ForeignPtr.Imp.$wnewForeignPtr_closure" {
     Foreign.ForeignPtr.Imp.$wnewForeignPtr_closure:
         const Foreign.ForeignPtr.Imp.$wnewForeignPtr_info;
         const 0;
 },
 Foreign.ForeignPtr.Imp.$wnewForeignPtr_entry() //  [R2, R3]
         { []
         }
     {offset
       c7Nfn: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c7Nfo; else goto c7Nfp;
       c7Nfo: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.ForeignPtr.Imp.$wnewForeignPtr_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7Nfp: // global
           I64[Sp - 24] = block_c7Nfh_info;
           R1 = GHC.ForeignPtr.NoFinalizers_closure+1;
           I64[Sp - 16] = R2;
           I64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.$wnewForeignPtr_info" {
     Foreign.ForeignPtr.Imp.$wnewForeignPtr_info:
         const Foreign.ForeignPtr.Imp.$wnewForeignPtr_entry;
         const 0;
         const 12884901902;
         const 12884901900;
         const S7N5Z_srt;
 },
 _c7Nfh() //  [R1]
         { []
         }
     {offset
       c7Nfh: // global
           I64[Sp] = block_c7Nfj_info;
           R6 = I64[Sp + 16];
           R5 = 0;
           R4 = 0;
           R3 = I64[Sp + 8];
           R2 = R1;
           P64[Sp - 8] = GHC.Tuple.()_closure+1;
           P64[Sp + 8] = R1;
           Sp = Sp - 8;
           call GHC.ForeignPtr.$winsertCFinalizer_entry(R6,
                                                        R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 16, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Nfh_info" {
     block_c7Nfh_info:
         const _c7Nfh;
         const 194;
         const 4294967326;
         const S7N5Z_srt;
 },
 _c7Nfj() //  [R1]
         { []
         }
     {offset
       c7Nfj: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c7Nft; else goto c7Nfs;
       c7Nft: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7Nfs: // global
           I64[Hp - 32] = GHC.ForeignPtr.PlainForeignPtr_con_info;
           P64[Hp - 24] = P64[Sp + 8];
           I64[Hp - 16] = GHC.ForeignPtr.ForeignPtr_con_info;
           P64[Hp - 8] = Hp - 31;
           I64[Hp] = I64[Sp + 16];
           R1 = Hp - 15;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Nfj_info" {
     block_c7Nfj_info:
         const _c7Nfj;
         const 130;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:53.946004999 UTC

[section ""data" . Foreign.ForeignPtr.Imp.newForeignPtr1_closure" {
     Foreign.ForeignPtr.Imp.newForeignPtr1_closure:
         const Foreign.ForeignPtr.Imp.newForeignPtr1_info;
         const 0;
 },
 Foreign.ForeignPtr.Imp.newForeignPtr1_entry() //  [R2, R3]
         { []
         }
     {offset
       c7NfQ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7NfU; else goto c7NfV;
       c7NfU: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.ForeignPtr.Imp.newForeignPtr1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7NfV: // global
           I64[Sp - 16] = block_c7NfN_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7Ng3; else goto c7NfO;
       u7Ng3: // global
           call _c7NfN(R1) args: 0, res: 0, upd: 0;
       c7NfO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.newForeignPtr1_info" {
     Foreign.ForeignPtr.Imp.newForeignPtr1_info:
         const Foreign.ForeignPtr.Imp.newForeignPtr1_entry;
         const 0;
         const 12884901902;
         const 12884901903;
         const S7N5Z_srt+8;
 },
 _c7NfN() //  [R1]
         { []
         }
     {offset
       c7NfN: // global
           I64[Sp] = block_c7NfT_info;
           _s7N4q::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s7N4q::I64;
           if (R1 & 7 != 0) goto u7Ng2; else goto c7NfX;
       u7Ng2: // global
           call _c7NfT(R1) args: 0, res: 0, upd: 0;
       c7NfX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7NfN_info" {
     block_c7NfN_info:
         const _c7NfN;
         const 1;
         const 4294967326;
         const S7N5Z_srt+8;
 },
 _c7NfT() //  [R1]
         { []
         }
     {offset
       c7NfT: // global
           R3 = I64[R1 + 7];
           R2 = I64[Sp + 8];
           Sp = Sp + 16;
           call Foreign.ForeignPtr.Imp.$wnewForeignPtr_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7NfT_info" {
     block_c7NfT_info:
         const _c7NfT;
         const 65;
         const 4294967326;
         const S7N5Z_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:53.952213593 UTC

[section ""data" . Foreign.ForeignPtr.Imp.newForeignPtr_closure" {
     Foreign.ForeignPtr.Imp.newForeignPtr_closure:
         const Foreign.ForeignPtr.Imp.newForeignPtr_info;
         const 0;
 },
 Foreign.ForeignPtr.Imp.newForeignPtr_entry() //  [R2, R3]
         { []
         }
     {offset
       c7Ngl: // global
           R3 = R3;
           R2 = R2;
           call Foreign.ForeignPtr.Imp.newForeignPtr1_entry(R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.newForeignPtr_info" {
     Foreign.ForeignPtr.Imp.newForeignPtr_info:
         const Foreign.ForeignPtr.Imp.newForeignPtr_entry;
         const 0;
         const 4294967310;
         const 12884901903;
         const S7N5Z_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:53.956437068 UTC

[section ""data" . Foreign.ForeignPtr.Imp.withForeignPtr1_closure" {
     Foreign.ForeignPtr.Imp.withForeignPtr1_closure:
         const Foreign.ForeignPtr.Imp.withForeignPtr1_info;
 },
 sat_s7N4w_entry() //  [R1]
         { []
         }
     {offset
       c7NgA: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7NgB; else goto c7NgC;
       c7NgB: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7NgC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.ForeignPtr.unsafeForeignPtrToPtr_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7N4w_info" {
     sat_s7N4w_info:
         const sat_s7N4w_entry;
         const 1;
         const 16;
 },
 Foreign.ForeignPtr.Imp.withForeignPtr1_entry() //  [R2, R3]
         { []
         }
     {offset
       c7NgI: // global
           _s7N4u::P64 = R3;
           _s7N4t::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto c7NgJ; else goto c7NgK;
       c7NgK: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7NgM; else goto c7NgL;
       c7NgM: // global
           HpAlloc = 24;
           goto c7NgJ;
       c7NgJ: // global
           R3 = _s7N4u::P64;
           R2 = _s7N4t::P64;
           R1 = Foreign.ForeignPtr.Imp.withForeignPtr1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7NgL: // global
           I64[Hp - 16] = sat_s7N4w_info;
           P64[Hp] = _s7N4t::P64;
           I64[Sp - 16] = block_c7NgD_info;
           R2 = Hp - 16;
           R1 = _s7N4u::P64;
           P64[Sp - 8] = _s7N4t::P64;
           Sp = Sp - 16;
           call stg_ap_pv_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.withForeignPtr1_info" {
     Foreign.ForeignPtr.Imp.withForeignPtr1_info:
         const Foreign.ForeignPtr.Imp.withForeignPtr1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c7NgD() //  [R1]
         { []
         }
     {offset
       c7NgD: // global
           I64[Sp] = block_c7NgF_info;
           _s7N4z::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s7N4z::P64;
           if (R1 & 7 != 0) goto u7NgS; else goto c7NgG;
       u7NgS: // global
           call _c7NgF(R1) args: 0, res: 0, upd: 0;
       c7NgG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7NgD_info" {
     block_c7NgD_info:
         const _c7NgD;
         const 1;
         const 30;
 },
 _c7NgF() //  [R1]
         { []
         }
     {offset
       c7NgF: // global
           _s7N4z::P64 = P64[Sp + 8];
           call MO_Touch(P64[R1 + 7]);
           R1 = _s7N4z::P64;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7NgF_info" {
     block_c7NgF_info:
         const _c7NgF;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:53.964733218 UTC

[section ""data" . Foreign.ForeignPtr.Imp.withForeignPtr_closure" {
     Foreign.ForeignPtr.Imp.withForeignPtr_closure:
         const Foreign.ForeignPtr.Imp.withForeignPtr_info;
 },
 Foreign.ForeignPtr.Imp.withForeignPtr_entry() //  [R2, R3]
         { []
         }
     {offset
       c7Nhe: // global
           R3 = R3;
           R2 = R2;
           call Foreign.ForeignPtr.Imp.withForeignPtr1_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.withForeignPtr_info" {
     Foreign.ForeignPtr.Imp.withForeignPtr_info:
         const Foreign.ForeignPtr.Imp.withForeignPtr_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:53.968789281 UTC

[section ""data" . Foreign.ForeignPtr.Imp.$wnewForeignPtrEnv_closure" {
     Foreign.ForeignPtr.Imp.$wnewForeignPtrEnv_closure:
         const Foreign.ForeignPtr.Imp.$wnewForeignPtrEnv_info;
         const 0;
 },
 Foreign.ForeignPtr.Imp.$wnewForeignPtrEnv_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c7Nhv: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c7Nhw; else goto c7Nhx;
       c7Nhw: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.ForeignPtr.Imp.$wnewForeignPtrEnv_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7Nhx: // global
           I64[Sp - 32] = block_c7Nhp_info;
           R1 = GHC.ForeignPtr.NoFinalizers_closure+1;
           I64[Sp - 24] = R2;
           I64[Sp - 16] = R3;
           I64[Sp - 8] = R4;
           Sp = Sp - 32;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.$wnewForeignPtrEnv_info" {
     Foreign.ForeignPtr.Imp.$wnewForeignPtrEnv_info:
         const Foreign.ForeignPtr.Imp.$wnewForeignPtrEnv_entry;
         const 0;
         const 38654705678;
         const 17179869200;
         const S7N5Z_srt;
 },
 _c7Nhp() //  [R1]
         { []
         }
     {offset
       c7Nhp: // global
           _s7N4E::I64 = I64[Sp + 8];
           I64[Sp + 8] = block_c7Nhr_info;
           R6 = I64[Sp + 24];
           R5 = I64[Sp + 16];
           R4 = 1;
           R3 = _s7N4E::I64;
           R2 = R1;
           P64[Sp] = GHC.Tuple.()_closure+1;
           P64[Sp + 16] = R1;
           call GHC.ForeignPtr.$winsertCFinalizer_entry(R6,
                                                        R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 16, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Nhp_info" {
     block_c7Nhp_info:
         const _c7Nhp;
         const 451;
         const 4294967326;
         const S7N5Z_srt;
 },
 _c7Nhr() //  [R1]
         { []
         }
     {offset
       c7Nhr: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c7NhB; else goto c7NhA;
       c7NhB: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7NhA: // global
           I64[Hp - 32] = GHC.ForeignPtr.PlainForeignPtr_con_info;
           P64[Hp - 24] = P64[Sp + 8];
           I64[Hp - 16] = GHC.ForeignPtr.ForeignPtr_con_info;
           P64[Hp - 8] = Hp - 31;
           I64[Hp] = I64[Sp + 16];
           R1 = Hp - 15;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Nhr_info" {
     block_c7Nhr_info:
         const _c7Nhr;
         const 130;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:53.977926192 UTC

[section ""data" . Foreign.ForeignPtr.Imp.newForeignPtrEnv1_closure" {
     Foreign.ForeignPtr.Imp.newForeignPtrEnv1_closure:
         const Foreign.ForeignPtr.Imp.newForeignPtrEnv1_info;
         const 0;
 },
 Foreign.ForeignPtr.Imp.newForeignPtrEnv1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c7NhY: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7Ni7; else goto c7Ni8;
       c7Ni7: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.ForeignPtr.Imp.newForeignPtrEnv1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7Ni8: // global
           I64[Sp - 24] = block_c7NhV_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u7Nih; else goto c7NhW;
       u7Nih: // global
           call _c7NhV(R1) args: 0, res: 0, upd: 0;
       c7NhW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.newForeignPtrEnv1_info" {
     Foreign.ForeignPtr.Imp.newForeignPtrEnv1_info:
         const Foreign.ForeignPtr.Imp.newForeignPtrEnv1_entry;
         const 0;
         const 12884901902;
         const 17179869207;
         const S7N5Z_srt+24;
 },
 _c7NhV() //  [R1]
         { []
         }
     {offset
       c7NhV: // global
           I64[Sp] = block_c7Ni1_info;
           _s7N4V::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s7N4V::I64;
           if (R1 & 7 != 0) goto u7Nig; else goto c7Ni2;
       u7Nig: // global
           call _c7Ni1(R1) args: 0, res: 0, upd: 0;
       c7Ni2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7NhV_info" {
     block_c7NhV_info:
         const _c7NhV;
         const 2;
         const 4294967326;
         const S7N5Z_srt+24;
 },
 _c7Ni1() //  [R1]
         { []
         }
     {offset
       c7Ni1: // global
           I64[Sp] = block_c7Ni6_info;
           _s7N4X::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s7N4X::I64;
           if (R1 & 7 != 0) goto u7Nii; else goto c7Nib;
       u7Nii: // global
           call _c7Ni6(R1) args: 0, res: 0, upd: 0;
       c7Nib: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Ni1_info" {
     block_c7Ni1_info:
         const _c7Ni1;
         const 66;
         const 4294967326;
         const S7N5Z_srt+24;
 },
 _c7Ni6() //  [R1]
         { []
         }
     {offset
       c7Ni6: // global
           R4 = I64[R1 + 7];
           R3 = I64[Sp + 16];
           R2 = I64[Sp + 8];
           Sp = Sp + 24;
           call Foreign.ForeignPtr.Imp.$wnewForeignPtrEnv_entry(R4,
                                                                R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Ni6_info" {
     block_c7Ni6_info:
         const _c7Ni6;
         const 194;
         const 4294967326;
         const S7N5Z_srt+24;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:53.98698163 UTC

[section ""data" . Foreign.ForeignPtr.Imp.newForeignPtrEnv_closure" {
     Foreign.ForeignPtr.Imp.newForeignPtrEnv_closure:
         const Foreign.ForeignPtr.Imp.newForeignPtrEnv_info;
         const 0;
 },
 Foreign.ForeignPtr.Imp.newForeignPtrEnv_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c7NiE: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.ForeignPtr.Imp.newForeignPtrEnv1_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.newForeignPtrEnv_info" {
     Foreign.ForeignPtr.Imp.newForeignPtrEnv_info:
         const Foreign.ForeignPtr.Imp.newForeignPtrEnv_entry;
         const 0;
         const 4294967310;
         const 17179869207;
         const S7N5Z_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:53.989999333 UTC

[section ""cstring" . lvl_r7N3Z_bytes" {
     lvl_r7N3Z_bytes:
         I8[] [117,110,100,101,102,105,110,101,100]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:53.992330726 UTC

[section ""data" . lvl1_r7N40_closure" {
     lvl1_r7N40_closure:
         const lvl1_r7N40_info;
         const 0;
         const 0;
         const 0;
 },
 lvl1_r7N40_entry() //  [R1]
         { []
         }
     {offset
       c7NiS: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7NiT; else goto c7NiU;
       c7NiT: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7NiU: // global
           (_c7NiP::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7NiP::I64 == 0) goto c7NiR; else goto c7NiQ;
       c7NiR: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7NiQ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7NiP::I64;
           R2 = lvl_r7N3Z_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl1_r7N40_info" {
     lvl1_r7N40_info:
         const lvl1_r7N40_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:53.995867228 UTC

[section ""cstring" . Foreign.ForeignPtr.Imp.$trModule4_bytes" {
     Foreign.ForeignPtr.Imp.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:53.997948668 UTC

[section ""data" . lvl2_r7N41_closure" {
     lvl2_r7N41_closure:
         const lvl2_r7N41_info;
         const 0;
         const 0;
         const 0;
 },
 lvl2_r7N41_entry() //  [R1]
         { []
         }
     {offset
       c7Nj9: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7Nja; else goto c7Njb;
       c7Nja: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7Njb: // global
           (_c7Nj6::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7Nj6::I64 == 0) goto c7Nj8; else goto c7Nj7;
       c7Nj8: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7Nj7: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7Nj6::I64;
           R2 = Foreign.ForeignPtr.Imp.$trModule4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl2_r7N41_info" {
     lvl2_r7N41_info:
         const lvl2_r7N41_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.001402125 UTC

[section ""cstring" . Foreign.ForeignPtr.Imp.$trModule2_bytes" {
     Foreign.ForeignPtr.Imp.$trModule2_bytes:
         I8[] [70,111,114,101,105,103,110,46,70,111,114,101,105,103,110,80,116,114,46,73,109,112]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.003451692 UTC

[section ""data" . lvl3_r7N42_closure" {
     lvl3_r7N42_closure:
         const lvl3_r7N42_info;
         const 0;
         const 0;
         const 0;
 },
 lvl3_r7N42_entry() //  [R1]
         { []
         }
     {offset
       c7Njq: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7Njr; else goto c7Njs;
       c7Njr: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7Njs: // global
           (_c7Njn::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7Njn::I64 == 0) goto c7Njp; else goto c7Njo;
       c7Njp: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7Njo: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7Njn::I64;
           R2 = Foreign.ForeignPtr.Imp.$trModule2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl3_r7N42_info" {
     lvl3_r7N42_info:
         const lvl3_r7N42_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.007269875 UTC

[section ""cstring" . lvl4_r7N43_bytes" {
     lvl4_r7N43_bytes:
         I8[] [46,47,70,111,114,101,105,103,110,47,70,111,114,101,105,103,110,80,116,114,47,73,109,112,46,104,115]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.00960962 UTC

[section ""data" . lvl5_r7N44_closure" {
     lvl5_r7N44_closure:
         const lvl5_r7N44_info;
         const 0;
         const 0;
         const 0;
 },
 lvl5_r7N44_entry() //  [R1]
         { []
         }
     {offset
       c7NjH: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7NjI; else goto c7NjJ;
       c7NjI: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7NjJ: // global
           (_c7NjE::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7NjE::I64 == 0) goto c7NjG; else goto c7NjF;
       c7NjG: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7NjF: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7NjE::I64;
           R2 = lvl4_r7N43_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl5_r7N44_info" {
     lvl5_r7N44_info:
         const lvl5_r7N44_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.012880051 UTC

[section ""data" . lvl6_r7N45_closure" {
     lvl6_r7N45_closure:
         const GHC.Types.I#_con_info;
         const 110;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.014808936 UTC

[section ""data" . lvl7_r7N46_closure" {
     lvl7_r7N46_closure:
         const GHC.Types.I#_con_info;
         const 35;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.016338225 UTC

[section ""data" . lvl8_r7N47_closure" {
     lvl8_r7N47_closure:
         const GHC.Types.I#_con_info;
         const 44;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.018164085 UTC

[section ""data" . lvl9_r7N48_closure" {
     lvl9_r7N48_closure:
         const GHC.Stack.Types.SrcLoc_con_info;
         const lvl2_r7N41_closure;
         const lvl3_r7N42_closure;
         const lvl5_r7N44_closure;
         const lvl6_r7N45_closure+1;
         const lvl7_r7N46_closure+1;
         const lvl6_r7N45_closure+1;
         const lvl8_r7N47_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.019832292 UTC

[section ""data" . lvl10_r7N49_closure" {
     lvl10_r7N49_closure:
         const GHC.Stack.Types.PushCallStack_con_info;
         const lvl1_r7N40_closure;
         const lvl9_r7N48_closure+1;
         const GHC.Stack.Types.EmptyCallStack_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.022379069 UTC

[section ""data" . Foreign.ForeignPtr.Imp.mallocForeignPtrArray1_closure" {
     Foreign.ForeignPtr.Imp.mallocForeignPtrArray1_closure:
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray1_info;
         const 0;
         const 0;
         const 0;
 },
 Foreign.ForeignPtr.Imp.mallocForeignPtrArray1_entry() //  [R1]
         { []
         }
     {offset
       c7Nk2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7Nk3; else goto c7Nk4;
       c7Nk3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7Nk4: // global
           (_c7NjZ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7NjZ::I64 == 0) goto c7Nk1; else goto c7Nk0;
       c7Nk1: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7Nk0: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7NjZ::I64;
           R2 = lvl10_r7N49_closure+2;
           Sp = Sp - 16;
           call GHC.Err.undefined_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.mallocForeignPtrArray1_info" {
     Foreign.ForeignPtr.Imp.mallocForeignPtrArray1_info:
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray1_entry;
         const 0;
         const 12884901909;
         const S7N5Z_srt+40;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.029597563 UTC

[section ""data" . Foreign.ForeignPtr.Imp.mallocForeignPtrArray_closure" {
     Foreign.ForeignPtr.Imp.mallocForeignPtrArray_closure:
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray_info;
         const 0;
 },
 lvl11_s7N51_entry() //  [R1]
         { []
         }
     {offset
       c7Nkk: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c7Nkl; else goto c7Nkm;
       c7Nkl: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7Nkm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.ForeignPtr.Imp.mallocForeignPtrArray1_closure;
           Sp = Sp - 32;
           call Foreign.Storable.sizeOf_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl11_s7N51_info" {
     lvl11_s7N51_info:
         const lvl11_s7N51_entry;
         const 1;
         const 4294967312;
         const S7N5Z_srt+56;
 },
 sat_s7N5k_entry() //  [R1, R2]
         { []
         }
     {offset
       c7Nkv: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7Nkz; else goto c7NkA;
       c7Nkz: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7NkA: // global
           I64[Sp - 16] = block_c7Nks_info;
           _s7N51::P64 = P64[R1 + 6];
           R1 = R2;
           P64[Sp - 8] = _s7N51::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7Nl4; else goto c7Nkt;
       u7Nl4: // global
           call _c7Nks(R1) args: 0, res: 0, upd: 0;
       c7Nkt: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s7N5k_info" {
     sat_s7N5k_info:
         const sat_s7N5k_entry;
         const 1;
         const 4294967305;
         const 8589934597;
         const S7N5Z_srt+64;
 },
 _c7Nks() //  [R1]
         { []
         }
     {offset
       c7Nks: // global
           I64[Sp] = block_c7Nky_info;
           _s7N55::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s7N55::I64;
           if (R1 & 7 != 0) goto u7Nl3; else goto c7NkC;
       u7Nl3: // global
           call _c7Nky(R1) args: 0, res: 0, upd: 0;
       c7NkC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Nks_info" {
     block_c7Nks_info:
         const _c7Nks;
         const 1;
         const 4294967326;
         const S7N5Z_srt+64;
 },
 _c7Nky() //  [R1]
         { []
         }
     {offset
       c7Nky: // global
           _s7N58::I64 = I64[Sp + 8] * I64[R1 + 7];
           if (%MO_S_Ge_W64(_s7N58::I64, 0)) goto c7NkX; else goto c7Nl2;
       c7NkX: // global
           I64[Sp] = block_c7NkN_info;
           R1 = GHC.ForeignPtr.NoFinalizers_closure+1;
           I64[Sp + 8] = _s7N58::I64;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
       c7Nl2: // global
           R1 = GHC.ForeignPtr.mallocForeignPtrBytes2_closure;
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Nky_info" {
     block_c7Nky_info:
         const _c7Nky;
         const 65;
         const 4294967326;
         const S7N5Z_srt+64;
 },
 _c7NkN() //  [R1]
         { []
         }
     {offset
       c7NkN: // global
           I64[Sp] = block_c7NkP_info;
           _s7N5c::P64 = R1;
           R1 = I64[Sp + 8];
           P64[Sp + 8] = _s7N5c::P64;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7NkN_info" {
     block_c7NkN_info:
         const _c7NkN;
         const 65;
         const 30;
 },
 _c7NkP() //  [R1]
         { []
         }
     {offset
       c7NkP: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7Nl1; else goto c7Nl0;
       c7Nl1: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7Nl0: // global
           I64[Hp - 40] = GHC.ForeignPtr.MallocPtr_con_info;
           P64[Hp - 32] = R1;
           P64[Hp - 24] = P64[Sp + 8];
           I64[Hp - 16] = GHC.ForeignPtr.ForeignPtr_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = R1 + 16;
           R1 = Hp - 15;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7NkP_info" {
     block_c7NkP_info:
         const _c7NkP;
         const 1;
         const 30;
 },
 Foreign.ForeignPtr.Imp.mallocForeignPtrArray_entry() //  [R2]
         { []
         }
     {offset
       c7Nl5: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c7Nl9; else goto c7Nl8;
       c7Nl9: // global
           HpAlloc = 40;
           R2 = R2;
           R1 = Foreign.ForeignPtr.Imp.mallocForeignPtrArray_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7Nl8: // global
           I64[Hp - 32] = lvl11_s7N51_info;
           P64[Hp - 16] = R2;
           I64[Hp - 8] = sat_s7N5k_info;
           P64[Hp] = Hp - 32;
           R1 = Hp - 6;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.mallocForeignPtrArray_info" {
     Foreign.ForeignPtr.Imp.mallocForeignPtrArray_info:
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray_entry;
         const 0;
         const 30064771086;
         const 4294967301;
         const S7N5Z_srt+56;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.044483793 UTC

[section ""data" . Foreign.ForeignPtr.Imp.$wmallocForeignPtrArray0_closure" {
     Foreign.ForeignPtr.Imp.$wmallocForeignPtrArray0_closure:
         const Foreign.ForeignPtr.Imp.$wmallocForeignPtrArray0_info;
         const 0;
 },
 Foreign.ForeignPtr.Imp.$wmallocForeignPtrArray0_entry() //  [R2,
                                                              R3]
         { []
         }
     {offset
       c7NlO: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c7NlP; else goto c7NlQ;
       c7NlP: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.ForeignPtr.Imp.$wmallocForeignPtrArray0_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7NlQ: // global
           I64[Sp - 16] = block_c7NlM_info;
           R2 = R2;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.ForeignPtr.Imp.mallocForeignPtrArray1_closure;
           I64[Sp - 8] = R3;
           Sp = Sp - 32;
           call Foreign.Storable.sizeOf_entry(R2) args: 24, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.$wmallocForeignPtrArray0_info" {
     Foreign.ForeignPtr.Imp.$wmallocForeignPtrArray0_info:
         const Foreign.ForeignPtr.Imp.$wmallocForeignPtrArray0_entry;
         const 0;
         const 47244640270;
         const 12884901902;
         const S7N5Z_srt+56;
 },
 _c7NlM() //  [R1]
         { []
         }
     {offset
       c7NlM: // global
           _s7N5q::I64 = (I64[Sp + 8] + 1) * I64[R1 + 7];
           if (%MO_S_Ge_W64(_s7N5q::I64, 0)) goto c7Nmd; else goto c7Nmi;
       c7Nmd: // global
           I64[Sp] = block_c7Nm3_info;
           R1 = GHC.ForeignPtr.NoFinalizers_closure+1;
           I64[Sp + 8] = _s7N5q::I64;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
       c7Nmi: // global
           R1 = GHC.ForeignPtr.mallocForeignPtrBytes2_closure;
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7NlM_info" {
     block_c7NlM_info:
         const _c7NlM;
         const 65;
         const 4294967326;
         const S7N5Z_srt+64;
 },
 _c7Nm3() //  [R1]
         { []
         }
     {offset
       c7Nm3: // global
           I64[Sp] = block_c7Nm5_info;
           _s7N5v::P64 = R1;
           R1 = I64[Sp + 8];
           P64[Sp + 8] = _s7N5v::P64;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Nm3_info" {
     block_c7Nm3_info:
         const _c7Nm3;
         const 65;
         const 30;
 },
 _c7Nm5() //  [R1]
         { []
         }
     {offset
       c7Nm5: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7Nmh; else goto c7Nmg;
       c7Nmh: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7Nmg: // global
           I64[Hp - 40] = GHC.ForeignPtr.MallocPtr_con_info;
           P64[Hp - 32] = R1;
           P64[Hp - 24] = P64[Sp + 8];
           I64[Hp - 16] = GHC.ForeignPtr.ForeignPtr_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = R1 + 16;
           R1 = Hp - 15;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Nm5_info" {
     block_c7Nm5_info:
         const _c7Nm5;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.054175409 UTC

[section ""data" . Foreign.ForeignPtr.Imp.mallocForeignPtrArray2_closure" {
     Foreign.ForeignPtr.Imp.mallocForeignPtrArray2_closure:
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray2_info;
         const 0;
 },
 Foreign.ForeignPtr.Imp.mallocForeignPtrArray2_entry() //  [R2, R3]
         { []
         }
     {offset
       c7NmL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7NmM; else goto c7NmN;
       c7NmM: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.ForeignPtr.Imp.mallocForeignPtrArray2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7NmN: // global
           I64[Sp - 16] = block_c7NmI_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7NmR; else goto c7NmJ;
       u7NmR: // global
           call _c7NmI(R1) args: 0, res: 0, upd: 0;
       c7NmJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.mallocForeignPtrArray2_info" {
     Foreign.ForeignPtr.Imp.mallocForeignPtrArray2_info:
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray2_entry;
         const 0;
         const 12884901902;
         const 12884901903;
         const S7N5Z_srt+80;
 },
 _c7NmI() //  [R1]
         { []
         }
     {offset
       c7NmI: // global
           R3 = I64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call Foreign.ForeignPtr.Imp.$wmallocForeignPtrArray0_entry(R3,
                                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7NmI_info" {
     block_c7NmI_info:
         const _c7NmI;
         const 1;
         const 4294967326;
         const S7N5Z_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.059294692 UTC

[section ""data" . Foreign.ForeignPtr.Imp.mallocForeignPtrArray0_closure" {
     Foreign.ForeignPtr.Imp.mallocForeignPtrArray0_closure:
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray0_info;
         const 0;
 },
 Foreign.ForeignPtr.Imp.mallocForeignPtrArray0_entry() //  [R2, R3]
         { []
         }
     {offset
       c7Nn5: // global
           R3 = R3;
           R2 = R2;
           call Foreign.ForeignPtr.Imp.mallocForeignPtrArray2_entry(R3,
                                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.mallocForeignPtrArray0_info" {
     Foreign.ForeignPtr.Imp.mallocForeignPtrArray0_info:
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray0_entry;
         const 0;
         const 4294967310;
         const 12884901903;
         const S7N5Z_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.062635422 UTC

[section ""data" . Foreign.ForeignPtr.Imp.$trModule3_closure" {
     Foreign.ForeignPtr.Imp.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.ForeignPtr.Imp.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.064245682 UTC

[section ""data" . Foreign.ForeignPtr.Imp.$trModule1_closure" {
     Foreign.ForeignPtr.Imp.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.ForeignPtr.Imp.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.066132711 UTC

[section ""data" . Foreign.ForeignPtr.Imp.$trModule_closure" {
     Foreign.ForeignPtr.Imp.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Foreign.ForeignPtr.Imp.$trModule3_closure+1;
         const Foreign.ForeignPtr.Imp.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.067934177 UTC

[section ""relreadonly" . S7N5Z_srt" {
     S7N5Z_srt:
         const GHC.ForeignPtr.$winsertCFinalizer_closure;
         const Foreign.ForeignPtr.Imp.$wnewForeignPtr_closure;
         const Foreign.ForeignPtr.Imp.newForeignPtr1_closure;
         const Foreign.ForeignPtr.Imp.$wnewForeignPtrEnv_closure;
         const Foreign.ForeignPtr.Imp.newForeignPtrEnv1_closure;
         const GHC.Err.undefined_closure;
         const lvl10_r7N49_closure;
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray1_closure;
         const GHC.ForeignPtr.mallocForeignPtrBytes2_closure;
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray_closure;
         const Foreign.ForeignPtr.Imp.$wmallocForeignPtrArray0_closure;
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray2_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.571704859 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:02:54.574182176 UTC

[section ""data" . Foreign.ForeignPtr.Imp.$wnewForeignPtr_closure" {
     Foreign.ForeignPtr.Imp.$wnewForeignPtr_closure:
         const Foreign.ForeignPtr.Imp.$wnewForeignPtr_info;
         const 0;
 },
 Foreign.ForeignPtr.Imp.$wnewForeignPtr_entry() //  [R2, R3]
         { []
         }
     {offset
       c7NoX: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c7NoY; else goto c7NoZ;
       c7NoY: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.ForeignPtr.Imp.$wnewForeignPtr_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7NoZ: // global
           I64[Sp - 24] = block_c7NoR_info;
           R1 = GHC.ForeignPtr.NoFinalizers_closure+1;
           I64[Sp - 16] = R2;
           I64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.$wnewForeignPtr_info" {
     Foreign.ForeignPtr.Imp.$wnewForeignPtr_info:
         const Foreign.ForeignPtr.Imp.$wnewForeignPtr_entry;
         const 0;
         const 12884901902;
         const 12884901900;
         const S7Np4_srt;
 },
 _c7NoR() //  [R1]
         { []
         }
     {offset
       c7NoR: // global
           I64[Sp] = block_c7NoT_info;
           R6 = I64[Sp + 16];
           R5 = 0;
           R4 = 0;
           R3 = I64[Sp + 8];
           R2 = R1;
           P64[Sp - 8] = GHC.Tuple.()_closure+1;
           P64[Sp + 8] = R1;
           Sp = Sp - 8;
           call GHC.ForeignPtr.$winsertCFinalizer_entry(R6,
                                                        R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 16, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7NoR_info" {
     block_c7NoR_info:
         const _c7NoR;
         const 194;
         const 4294967326;
         const S7Np4_srt;
 },
 _c7NoT() //  [R1]
         { []
         }
     {offset
       c7NoT: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c7Np3; else goto c7Np2;
       c7Np3: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7Np2: // global
           I64[Hp - 32] = GHC.ForeignPtr.PlainForeignPtr_con_info;
           P64[Hp - 24] = P64[Sp + 8];
           I64[Hp - 16] = GHC.ForeignPtr.ForeignPtr_con_info;
           P64[Hp - 8] = Hp - 31;
           I64[Hp] = I64[Sp + 16];
           R1 = Hp - 15;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7NoT_info" {
     block_c7NoT_info:
         const _c7NoT;
         const 130;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.582374854 UTC

[section ""data" . Foreign.ForeignPtr.Imp.newForeignPtr1_closure" {
     Foreign.ForeignPtr.Imp.newForeignPtr1_closure:
         const Foreign.ForeignPtr.Imp.newForeignPtr1_info;
         const 0;
 },
 Foreign.ForeignPtr.Imp.newForeignPtr1_entry() //  [R2, R3]
         { []
         }
     {offset
       c7Npy: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7NpC; else goto c7NpD;
       c7NpC: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.ForeignPtr.Imp.newForeignPtr1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7NpD: // global
           I64[Sp - 16] = block_c7Npv_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7NpL; else goto c7Npw;
       u7NpL: // global
           call _c7Npv(R1) args: 0, res: 0, upd: 0;
       c7Npw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.newForeignPtr1_info" {
     Foreign.ForeignPtr.Imp.newForeignPtr1_info:
         const Foreign.ForeignPtr.Imp.newForeignPtr1_entry;
         const 0;
         const 12884901902;
         const 12884901903;
         const S7Np4_srt+8;
 },
 _c7Npv() //  [R1]
         { []
         }
     {offset
       c7Npv: // global
           I64[Sp] = block_c7NpB_info;
           _s7Nnv::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s7Nnv::I64;
           if (R1 & 7 != 0) goto u7NpK; else goto c7NpF;
       u7NpK: // global
           call _c7NpB(R1) args: 0, res: 0, upd: 0;
       c7NpF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Npv_info" {
     block_c7Npv_info:
         const _c7Npv;
         const 1;
         const 4294967326;
         const S7Np4_srt+8;
 },
 _c7NpB() //  [R1]
         { []
         }
     {offset
       c7NpB: // global
           R3 = I64[R1 + 7];
           R2 = I64[Sp + 8];
           Sp = Sp + 16;
           call Foreign.ForeignPtr.Imp.$wnewForeignPtr_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7NpB_info" {
     block_c7NpB_info:
         const _c7NpB;
         const 65;
         const 4294967326;
         const S7Np4_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.589290307 UTC

[section ""data" . Foreign.ForeignPtr.Imp.newForeignPtr_closure" {
     Foreign.ForeignPtr.Imp.newForeignPtr_closure:
         const Foreign.ForeignPtr.Imp.newForeignPtr_info;
         const 0;
 },
 Foreign.ForeignPtr.Imp.newForeignPtr_entry() //  [R2, R3]
         { []
         }
     {offset
       c7Nq5: // global
           R3 = R3;
           R2 = R2;
           call Foreign.ForeignPtr.Imp.newForeignPtr1_entry(R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.newForeignPtr_info" {
     Foreign.ForeignPtr.Imp.newForeignPtr_info:
         const Foreign.ForeignPtr.Imp.newForeignPtr_entry;
         const 0;
         const 4294967310;
         const 12884901903;
         const S7Np4_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.593952484 UTC

[section ""data" . Foreign.ForeignPtr.Imp.withForeignPtr1_closure" {
     Foreign.ForeignPtr.Imp.withForeignPtr1_closure:
         const Foreign.ForeignPtr.Imp.withForeignPtr1_info;
 },
 sat_s7NnB_entry() //  [R1]
         { []
         }
     {offset
       c7Nqk: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7Nql; else goto c7Nqm;
       c7Nql: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7Nqm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.ForeignPtr.unsafeForeignPtrToPtr_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s7NnB_info" {
     sat_s7NnB_info:
         const sat_s7NnB_entry;
         const 1;
         const 16;
 },
 Foreign.ForeignPtr.Imp.withForeignPtr1_entry() //  [R2, R3]
         { []
         }
     {offset
       c7Nqs: // global
           _s7Nnz::P64 = R3;
           _s7Nny::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto c7Nqt; else goto c7Nqu;
       c7Nqu: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c7Nqw; else goto c7Nqv;
       c7Nqw: // global
           HpAlloc = 24;
           goto c7Nqt;
       c7Nqt: // global
           R3 = _s7Nnz::P64;
           R2 = _s7Nny::P64;
           R1 = Foreign.ForeignPtr.Imp.withForeignPtr1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7Nqv: // global
           I64[Hp - 16] = sat_s7NnB_info;
           P64[Hp] = _s7Nny::P64;
           I64[Sp - 16] = block_c7Nqn_info;
           R2 = Hp - 16;
           R1 = _s7Nnz::P64;
           P64[Sp - 8] = _s7Nny::P64;
           Sp = Sp - 16;
           call stg_ap_pv_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.withForeignPtr1_info" {
     Foreign.ForeignPtr.Imp.withForeignPtr1_info:
         const Foreign.ForeignPtr.Imp.withForeignPtr1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _c7Nqn() //  [R1]
         { []
         }
     {offset
       c7Nqn: // global
           I64[Sp] = block_c7Nqp_info;
           _s7NnE::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s7NnE::P64;
           if (R1 & 7 != 0) goto u7NqC; else goto c7Nqq;
       u7NqC: // global
           call _c7Nqp(R1) args: 0, res: 0, upd: 0;
       c7Nqq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Nqn_info" {
     block_c7Nqn_info:
         const _c7Nqn;
         const 1;
         const 30;
 },
 _c7Nqp() //  [R1]
         { []
         }
     {offset
       c7Nqp: // global
           _s7NnE::P64 = P64[Sp + 8];
           call MO_Touch(P64[R1 + 7]);
           R1 = _s7NnE::P64;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Nqp_info" {
     block_c7Nqp_info:
         const _c7Nqp;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.602796959 UTC

[section ""data" . Foreign.ForeignPtr.Imp.withForeignPtr_closure" {
     Foreign.ForeignPtr.Imp.withForeignPtr_closure:
         const Foreign.ForeignPtr.Imp.withForeignPtr_info;
 },
 Foreign.ForeignPtr.Imp.withForeignPtr_entry() //  [R2, R3]
         { []
         }
     {offset
       c7Nr2: // global
           R3 = R3;
           R2 = R2;
           call Foreign.ForeignPtr.Imp.withForeignPtr1_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.withForeignPtr_info" {
     Foreign.ForeignPtr.Imp.withForeignPtr_info:
         const Foreign.ForeignPtr.Imp.withForeignPtr_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.607848434 UTC

[section ""data" . Foreign.ForeignPtr.Imp.$wnewForeignPtrEnv_closure" {
     Foreign.ForeignPtr.Imp.$wnewForeignPtrEnv_closure:
         const Foreign.ForeignPtr.Imp.$wnewForeignPtrEnv_info;
         const 0;
 },
 Foreign.ForeignPtr.Imp.$wnewForeignPtrEnv_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c7Nrj: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c7Nrk; else goto c7Nrl;
       c7Nrk: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.ForeignPtr.Imp.$wnewForeignPtrEnv_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7Nrl: // global
           I64[Sp - 32] = block_c7Nrd_info;
           R1 = GHC.ForeignPtr.NoFinalizers_closure+1;
           I64[Sp - 24] = R2;
           I64[Sp - 16] = R3;
           I64[Sp - 8] = R4;
           Sp = Sp - 32;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.$wnewForeignPtrEnv_info" {
     Foreign.ForeignPtr.Imp.$wnewForeignPtrEnv_info:
         const Foreign.ForeignPtr.Imp.$wnewForeignPtrEnv_entry;
         const 0;
         const 38654705678;
         const 17179869200;
         const S7Np4_srt;
 },
 _c7Nrd() //  [R1]
         { []
         }
     {offset
       c7Nrd: // global
           _s7NnJ::I64 = I64[Sp + 8];
           I64[Sp + 8] = block_c7Nrf_info;
           R6 = I64[Sp + 24];
           R5 = I64[Sp + 16];
           R4 = 1;
           R3 = _s7NnJ::I64;
           R2 = R1;
           P64[Sp] = GHC.Tuple.()_closure+1;
           P64[Sp + 16] = R1;
           call GHC.ForeignPtr.$winsertCFinalizer_entry(R6,
                                                        R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 16, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Nrd_info" {
     block_c7Nrd_info:
         const _c7Nrd;
         const 451;
         const 4294967326;
         const S7Np4_srt;
 },
 _c7Nrf() //  [R1]
         { []
         }
     {offset
       c7Nrf: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c7Nrp; else goto c7Nro;
       c7Nrp: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7Nro: // global
           I64[Hp - 32] = GHC.ForeignPtr.PlainForeignPtr_con_info;
           P64[Hp - 24] = P64[Sp + 8];
           I64[Hp - 16] = GHC.ForeignPtr.ForeignPtr_con_info;
           P64[Hp - 8] = Hp - 31;
           I64[Hp] = I64[Sp + 16];
           R1 = Hp - 15;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Nrf_info" {
     block_c7Nrf_info:
         const _c7Nrf;
         const 130;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.616415009 UTC

[section ""data" . Foreign.ForeignPtr.Imp.newForeignPtrEnv1_closure" {
     Foreign.ForeignPtr.Imp.newForeignPtrEnv1_closure:
         const Foreign.ForeignPtr.Imp.newForeignPtrEnv1_info;
         const 0;
 },
 Foreign.ForeignPtr.Imp.newForeignPtrEnv1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c7NrT: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c7Ns2; else goto c7Ns3;
       c7Ns2: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.ForeignPtr.Imp.newForeignPtrEnv1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c7Ns3: // global
           I64[Sp - 24] = block_c7NrQ_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u7Nsc; else goto c7NrR;
       u7Nsc: // global
           call _c7NrQ(R1) args: 0, res: 0, upd: 0;
       c7NrR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.newForeignPtrEnv1_info" {
     Foreign.ForeignPtr.Imp.newForeignPtrEnv1_info:
         const Foreign.ForeignPtr.Imp.newForeignPtrEnv1_entry;
         const 0;
         const 12884901902;
         const 17179869207;
         const S7Np4_srt+24;
 },
 _c7NrQ() //  [R1]
         { []
         }
     {offset
       c7NrQ: // global
           I64[Sp] = block_c7NrW_info;
           _s7No0::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s7No0::I64;
           if (R1 & 7 != 0) goto u7Nsb; else goto c7NrX;
       u7Nsb: // global
           call _c7NrW(R1) args: 0, res: 0, upd: 0;
       c7NrX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7NrQ_info" {
     block_c7NrQ_info:
         const _c7NrQ;
         const 2;
         const 4294967326;
         const S7Np4_srt+24;
 },
 _c7NrW() //  [R1]
         { []
         }
     {offset
       c7NrW: // global
           I64[Sp] = block_c7Ns1_info;
           _s7No2::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s7No2::I64;
           if (R1 & 7 != 0) goto u7Nsd; else goto c7Ns6;
       u7Nsd: // global
           call _c7Ns1(R1) args: 0, res: 0, upd: 0;
       c7Ns6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7NrW_info" {
     block_c7NrW_info:
         const _c7NrW;
         const 66;
         const 4294967326;
         const S7Np4_srt+24;
 },
 _c7Ns1() //  [R1]
         { []
         }
     {offset
       c7Ns1: // global
           R4 = I64[R1 + 7];
           R3 = I64[Sp + 16];
           R2 = I64[Sp + 8];
           Sp = Sp + 24;
           call Foreign.ForeignPtr.Imp.$wnewForeignPtrEnv_entry(R4,
                                                                R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Ns1_info" {
     block_c7Ns1_info:
         const _c7Ns1;
         const 194;
         const 4294967326;
         const S7Np4_srt+24;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.626066117 UTC

[section ""data" . Foreign.ForeignPtr.Imp.newForeignPtrEnv_closure" {
     Foreign.ForeignPtr.Imp.newForeignPtrEnv_closure:
         const Foreign.ForeignPtr.Imp.newForeignPtrEnv_info;
         const 0;
 },
 Foreign.ForeignPtr.Imp.newForeignPtrEnv_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c7NsC: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.ForeignPtr.Imp.newForeignPtrEnv1_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.newForeignPtrEnv_info" {
     Foreign.ForeignPtr.Imp.newForeignPtrEnv_info:
         const Foreign.ForeignPtr.Imp.newForeignPtrEnv_entry;
         const 0;
         const 4294967310;
         const 17179869207;
         const S7Np4_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.629408619 UTC

[section ""cstring" . lvl_r7N3Z_bytes" {
     lvl_r7N3Z_bytes:
         I8[] [117,110,100,101,102,105,110,101,100]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.631904267 UTC

[section ""data" . lvl1_r7N40_closure" {
     lvl1_r7N40_closure:
         const lvl1_r7N40_info;
         const 0;
         const 0;
         const 0;
 },
 lvl1_r7N40_entry() //  [R1]
         { []
         }
     {offset
       c7NsQ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7NsR; else goto c7NsS;
       c7NsR: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7NsS: // global
           (_c7NsN::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7NsN::I64 == 0) goto c7NsP; else goto c7NsO;
       c7NsP: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7NsO: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7NsN::I64;
           R2 = lvl_r7N3Z_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl1_r7N40_info" {
     lvl1_r7N40_info:
         const lvl1_r7N40_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.63599715 UTC

[section ""cstring" . Foreign.ForeignPtr.Imp.$trModule4_bytes" {
     Foreign.ForeignPtr.Imp.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.638511189 UTC

[section ""data" . lvl2_r7N41_closure" {
     lvl2_r7N41_closure:
         const lvl2_r7N41_info;
         const 0;
         const 0;
         const 0;
 },
 lvl2_r7N41_entry() //  [R1]
         { []
         }
     {offset
       c7Nt8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7Nt9; else goto c7Nta;
       c7Nt9: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7Nta: // global
           (_c7Nt5::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7Nt5::I64 == 0) goto c7Nt7; else goto c7Nt6;
       c7Nt7: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7Nt6: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7Nt5::I64;
           R2 = Foreign.ForeignPtr.Imp.$trModule4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl2_r7N41_info" {
     lvl2_r7N41_info:
         const lvl2_r7N41_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.643256466 UTC

[section ""cstring" . Foreign.ForeignPtr.Imp.$trModule2_bytes" {
     Foreign.ForeignPtr.Imp.$trModule2_bytes:
         I8[] [70,111,114,101,105,103,110,46,70,111,114,101,105,103,110,80,116,114,46,73,109,112]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.645993139 UTC

[section ""data" . lvl3_r7N42_closure" {
     lvl3_r7N42_closure:
         const lvl3_r7N42_info;
         const 0;
         const 0;
         const 0;
 },
 lvl3_r7N42_entry() //  [R1]
         { []
         }
     {offset
       c7Ntq: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7Ntr; else goto c7Nts;
       c7Ntr: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7Nts: // global
           (_c7Ntn::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7Ntn::I64 == 0) goto c7Ntp; else goto c7Nto;
       c7Ntp: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7Nto: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7Ntn::I64;
           R2 = Foreign.ForeignPtr.Imp.$trModule2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl3_r7N42_info" {
     lvl3_r7N42_info:
         const lvl3_r7N42_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.649843438 UTC

[section ""cstring" . lvl4_r7N43_bytes" {
     lvl4_r7N43_bytes:
         I8[] [46,47,70,111,114,101,105,103,110,47,70,111,114,101,105,103,110,80,116,114,47,73,109,112,46,104,115]
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.652324116 UTC

[section ""data" . lvl5_r7N44_closure" {
     lvl5_r7N44_closure:
         const lvl5_r7N44_info;
         const 0;
         const 0;
         const 0;
 },
 lvl5_r7N44_entry() //  [R1]
         { []
         }
     {offset
       c7NtI: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7NtJ; else goto c7NtK;
       c7NtJ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7NtK: // global
           (_c7NtF::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7NtF::I64 == 0) goto c7NtH; else goto c7NtG;
       c7NtH: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7NtG: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7NtF::I64;
           R2 = lvl4_r7N43_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl5_r7N44_info" {
     lvl5_r7N44_info:
         const lvl5_r7N44_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.656759776 UTC

[section ""data" . lvl6_r7N45_closure" {
     lvl6_r7N45_closure:
         const GHC.Types.I#_con_info;
         const 110;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.658622208 UTC

[section ""data" . lvl7_r7N46_closure" {
     lvl7_r7N46_closure:
         const GHC.Types.I#_con_info;
         const 35;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.660374596 UTC

[section ""data" . lvl8_r7N47_closure" {
     lvl8_r7N47_closure:
         const GHC.Types.I#_con_info;
         const 44;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.66219846 UTC

[section ""data" . lvl9_r7N48_closure" {
     lvl9_r7N48_closure:
         const GHC.Stack.Types.SrcLoc_con_info;
         const lvl2_r7N41_closure;
         const lvl3_r7N42_closure;
         const lvl5_r7N44_closure;
         const lvl6_r7N45_closure+1;
         const lvl7_r7N46_closure+1;
         const lvl6_r7N45_closure+1;
         const lvl8_r7N47_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.664131121 UTC

[section ""data" . lvl10_r7N49_closure" {
     lvl10_r7N49_closure:
         const GHC.Stack.Types.PushCallStack_con_info;
         const lvl1_r7N40_closure;
         const lvl9_r7N48_closure+1;
         const GHC.Stack.Types.EmptyCallStack_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.666896468 UTC

[section ""data" . Foreign.ForeignPtr.Imp.mallocForeignPtrArray1_closure" {
     Foreign.ForeignPtr.Imp.mallocForeignPtrArray1_closure:
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray1_info;
         const 0;
         const 0;
         const 0;
 },
 Foreign.ForeignPtr.Imp.mallocForeignPtrArray1_entry() //  [R1]
         { []
         }
     {offset
       c7Nu4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7Nu5; else goto c7Nu6;
       c7Nu5: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7Nu6: // global
           (_c7Nu1::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c7Nu1::I64 == 0) goto c7Nu3; else goto c7Nu2;
       c7Nu3: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c7Nu2: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c7Nu1::I64;
           R2 = lvl10_r7N49_closure+2;
           Sp = Sp - 16;
           call GHC.Err.undefined_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.mallocForeignPtrArray1_info" {
     Foreign.ForeignPtr.Imp.mallocForeignPtrArray1_info:
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray1_entry;
         const 0;
         const 12884901909;
         const S7Np4_srt+40;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.674386689 UTC

[section ""data" . Foreign.ForeignPtr.Imp.mallocForeignPtrArray_closure" {
     Foreign.ForeignPtr.Imp.mallocForeignPtrArray_closure:
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray_info;
         const 0;
 },
 lvl11_s7No6_entry() //  [R1]
         { []
         }
     {offset
       c7Nun: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c7Nuo; else goto c7Nup;
       c7Nuo: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c7Nup: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.ForeignPtr.Imp.mallocForeignPtrArray1_closure;
           Sp = Sp - 32;
           call Foreign.Storable.sizeOf_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl11_s7No6_info" {
     lvl11_s7No6_info:
         const lvl11_s7No6_entry;
         const 1;
         const 4294967312;
         const S7Np4_srt+56;
 },
 sat_s7Nop_entry() //  [R1, R2]
         { []
         }
     {offset
       c7Nuy: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7NuC; else goto c7NuD;
       c7NuC: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7NuD: // global
           I64[Sp - 16] = block_c7Nuv_info;
           _s7No6::P64 = P64[R1 + 6];
           R1 = R2;
           P64[Sp - 8] = _s7No6::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7Nv7; else goto c7Nuw;
       u7Nv7: // global
           call _c7Nuv(R1) args: 0, res: 0, upd: 0;
       c7Nuw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s7Nop_info" {
     sat_s7Nop_info:
         const sat_s7Nop_entry;
         const 1;
         const 4294967305;
         const 8589934597;
         const S7Np4_srt+64;
 },
 _c7Nuv() //  [R1]
         { []
         }
     {offset
       c7Nuv: // global
           I64[Sp] = block_c7NuB_info;
           _s7Noa::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s7Noa::I64;
           if (R1 & 7 != 0) goto u7Nv6; else goto c7NuF;
       u7Nv6: // global
           call _c7NuB(R1) args: 0, res: 0, upd: 0;
       c7NuF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Nuv_info" {
     block_c7Nuv_info:
         const _c7Nuv;
         const 1;
         const 4294967326;
         const S7Np4_srt+64;
 },
 _c7NuB() //  [R1]
         { []
         }
     {offset
       c7NuB: // global
           _s7Nod::I64 = I64[Sp + 8] * I64[R1 + 7];
           if (%MO_S_Ge_W64(_s7Nod::I64, 0)) goto c7Nv0; else goto c7Nv5;
       c7Nv0: // global
           I64[Sp] = block_c7NuQ_info;
           R1 = GHC.ForeignPtr.NoFinalizers_closure+1;
           I64[Sp + 8] = _s7Nod::I64;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
       c7Nv5: // global
           R1 = GHC.ForeignPtr.mallocForeignPtrBytes2_closure;
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7NuB_info" {
     block_c7NuB_info:
         const _c7NuB;
         const 65;
         const 4294967326;
         const S7Np4_srt+64;
 },
 _c7NuQ() //  [R1]
         { []
         }
     {offset
       c7NuQ: // global
           I64[Sp] = block_c7NuS_info;
           _s7Noh::P64 = R1;
           R1 = I64[Sp + 8];
           P64[Sp + 8] = _s7Noh::P64;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7NuQ_info" {
     block_c7NuQ_info:
         const _c7NuQ;
         const 65;
         const 30;
 },
 _c7NuS() //  [R1]
         { []
         }
     {offset
       c7NuS: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7Nv4; else goto c7Nv3;
       c7Nv4: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7Nv3: // global
           I64[Hp - 40] = GHC.ForeignPtr.MallocPtr_con_info;
           P64[Hp - 32] = R1;
           P64[Hp - 24] = P64[Sp + 8];
           I64[Hp - 16] = GHC.ForeignPtr.ForeignPtr_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = R1 + 16;
           R1 = Hp - 15;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7NuS_info" {
     block_c7NuS_info:
         const _c7NuS;
         const 1;
         const 30;
 },
 Foreign.ForeignPtr.Imp.mallocForeignPtrArray_entry() //  [R2]
         { []
         }
     {offset
       c7Nv8: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c7Nvc; else goto c7Nvb;
       c7Nvc: // global
           HpAlloc = 40;
           R2 = R2;
           R1 = Foreign.ForeignPtr.Imp.mallocForeignPtrArray_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c7Nvb: // global
           I64[Hp - 32] = lvl11_s7No6_info;
           P64[Hp - 16] = R2;
           I64[Hp - 8] = sat_s7Nop_info;
           P64[Hp] = Hp - 32;
           R1 = Hp - 6;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.mallocForeignPtrArray_info" {
     Foreign.ForeignPtr.Imp.mallocForeignPtrArray_info:
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray_entry;
         const 0;
         const 30064771086;
         const 4294967301;
         const S7Np4_srt+56;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.691805635 UTC

[section ""data" . Foreign.ForeignPtr.Imp.$wmallocForeignPtrArray0_closure" {
     Foreign.ForeignPtr.Imp.$wmallocForeignPtrArray0_closure:
         const Foreign.ForeignPtr.Imp.$wmallocForeignPtrArray0_info;
         const 0;
 },
 Foreign.ForeignPtr.Imp.$wmallocForeignPtrArray0_entry() //  [R2,
                                                              R3]
         { []
         }
     {offset
       c7Nw3: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c7Nw4; else goto c7Nw5;
       c7Nw4: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.ForeignPtr.Imp.$wmallocForeignPtrArray0_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7Nw5: // global
           I64[Sp - 16] = block_c7Nw1_info;
           R2 = R2;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.ForeignPtr.Imp.mallocForeignPtrArray1_closure;
           I64[Sp - 8] = R3;
           Sp = Sp - 32;
           call Foreign.Storable.sizeOf_entry(R2) args: 24, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.$wmallocForeignPtrArray0_info" {
     Foreign.ForeignPtr.Imp.$wmallocForeignPtrArray0_info:
         const Foreign.ForeignPtr.Imp.$wmallocForeignPtrArray0_entry;
         const 0;
         const 47244640270;
         const 12884901902;
         const S7Np4_srt+56;
 },
 _c7Nw1() //  [R1]
         { []
         }
     {offset
       c7Nw1: // global
           _s7Nov::I64 = (I64[Sp + 8] + 1) * I64[R1 + 7];
           if (%MO_S_Ge_W64(_s7Nov::I64, 0)) goto c7Nws; else goto c7Nwx;
       c7Nws: // global
           I64[Sp] = block_c7Nwi_info;
           R1 = GHC.ForeignPtr.NoFinalizers_closure+1;
           I64[Sp + 8] = _s7Nov::I64;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
       c7Nwx: // global
           R1 = GHC.ForeignPtr.mallocForeignPtrBytes2_closure;
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Nw1_info" {
     block_c7Nw1_info:
         const _c7Nw1;
         const 65;
         const 4294967326;
         const S7Np4_srt+64;
 },
 _c7Nwi() //  [R1]
         { []
         }
     {offset
       c7Nwi: // global
           I64[Sp] = block_c7Nwk_info;
           _s7NoA::P64 = R1;
           R1 = I64[Sp + 8];
           P64[Sp + 8] = _s7NoA::P64;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Nwi_info" {
     block_c7Nwi_info:
         const _c7Nwi;
         const 65;
         const 30;
 },
 _c7Nwk() //  [R1]
         { []
         }
     {offset
       c7Nwk: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c7Nww; else goto c7Nwv;
       c7Nww: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c7Nwv: // global
           I64[Hp - 40] = GHC.ForeignPtr.MallocPtr_con_info;
           P64[Hp - 32] = R1;
           P64[Hp - 24] = P64[Sp + 8];
           I64[Hp - 16] = GHC.ForeignPtr.ForeignPtr_con_info;
           P64[Hp - 8] = Hp - 38;
           P64[Hp] = R1 + 16;
           R1 = Hp - 15;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Nwk_info" {
     block_c7Nwk_info:
         const _c7Nwk;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.702145523 UTC

[section ""data" . Foreign.ForeignPtr.Imp.mallocForeignPtrArray2_closure" {
     Foreign.ForeignPtr.Imp.mallocForeignPtrArray2_closure:
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray2_info;
         const 0;
 },
 Foreign.ForeignPtr.Imp.mallocForeignPtrArray2_entry() //  [R2, R3]
         { []
         }
     {offset
       c7Nx8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c7Nx9; else goto c7Nxa;
       c7Nx9: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.ForeignPtr.Imp.mallocForeignPtrArray2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c7Nxa: // global
           I64[Sp - 16] = block_c7Nx5_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u7Nxe; else goto c7Nx6;
       u7Nxe: // global
           call _c7Nx5(R1) args: 0, res: 0, upd: 0;
       c7Nx6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.mallocForeignPtrArray2_info" {
     Foreign.ForeignPtr.Imp.mallocForeignPtrArray2_info:
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray2_entry;
         const 0;
         const 12884901902;
         const 12884901903;
         const S7Np4_srt+80;
 },
 _c7Nx5() //  [R1]
         { []
         }
     {offset
       c7Nx5: // global
           R3 = I64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call Foreign.ForeignPtr.Imp.$wmallocForeignPtrArray0_entry(R3,
                                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c7Nx5_info" {
     block_c7Nx5_info:
         const _c7Nx5;
         const 1;
         const 4294967326;
         const S7Np4_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.707544752 UTC

[section ""data" . Foreign.ForeignPtr.Imp.mallocForeignPtrArray0_closure" {
     Foreign.ForeignPtr.Imp.mallocForeignPtrArray0_closure:
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray0_info;
         const 0;
 },
 Foreign.ForeignPtr.Imp.mallocForeignPtrArray0_entry() //  [R2, R3]
         { []
         }
     {offset
       c7Nxt: // global
           R3 = R3;
           R2 = R2;
           call Foreign.ForeignPtr.Imp.mallocForeignPtrArray2_entry(R3,
                                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.ForeignPtr.Imp.mallocForeignPtrArray0_info" {
     Foreign.ForeignPtr.Imp.mallocForeignPtrArray0_info:
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray0_entry;
         const 0;
         const 4294967310;
         const 12884901903;
         const S7Np4_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.710778797 UTC

[section ""data" . Foreign.ForeignPtr.Imp.$trModule3_closure" {
     Foreign.ForeignPtr.Imp.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.ForeignPtr.Imp.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.712640011 UTC

[section ""data" . Foreign.ForeignPtr.Imp.$trModule1_closure" {
     Foreign.ForeignPtr.Imp.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.ForeignPtr.Imp.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.714532565 UTC

[section ""data" . Foreign.ForeignPtr.Imp.$trModule_closure" {
     Foreign.ForeignPtr.Imp.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Foreign.ForeignPtr.Imp.$trModule3_closure+1;
         const Foreign.ForeignPtr.Imp.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:02:54.716375482 UTC

[section ""relreadonly" . S7Np4_srt" {
     S7Np4_srt:
         const GHC.ForeignPtr.$winsertCFinalizer_closure;
         const Foreign.ForeignPtr.Imp.$wnewForeignPtr_closure;
         const Foreign.ForeignPtr.Imp.newForeignPtr1_closure;
         const Foreign.ForeignPtr.Imp.$wnewForeignPtrEnv_closure;
         const Foreign.ForeignPtr.Imp.newForeignPtrEnv1_closure;
         const GHC.Err.undefined_closure;
         const lvl10_r7N49_closure;
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray1_closure;
         const GHC.ForeignPtr.mallocForeignPtrBytes2_closure;
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray_closure;
         const Foreign.ForeignPtr.Imp.$wmallocForeignPtrArray0_closure;
         const Foreign.ForeignPtr.Imp.mallocForeignPtrArray2_closure;
 }]

