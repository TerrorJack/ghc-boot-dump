
==================== Raw Cmm ====================
2018-03-16 16:04:11.920800287 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:04:11.921944657 UTC

[section ""cstring" . Foreign.C.Error.$trModule4_bytes" {
     Foreign.C.Error.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.923697503 UTC

[section ""data" . Foreign.C.Error.$trModule3_closure" {
     Foreign.C.Error.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.925336033 UTC

[section ""cstring" . Foreign.C.Error.$trModule2_bytes" {
     Foreign.C.Error.$trModule2_bytes:
         I8[] [70,111,114,101,105,103,110,46,67,46,69,114,114,111,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.926929593 UTC

[section ""data" . Foreign.C.Error.$trModule1_closure" {
     Foreign.C.Error.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.928591906 UTC

[section ""data" . Foreign.C.Error.$trModule_closure" {
     Foreign.C.Error.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Foreign.C.Error.$trModule3_closure+1;
         const Foreign.C.Error.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.93040981 UTC

[section ""data" . $krep_r92Th_closure" {
     $krep_r92Th_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Foreign.C.Types.$tcCInt_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.931997892 UTC

[section ""cstring" . Foreign.C.Error.$tcErrno2_bytes" {
     Foreign.C.Error.$tcErrno2_bytes:
         I8[] [69,114,114,110,111]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.933578632 UTC

[section ""data" . Foreign.C.Error.$tcErrno1_closure" {
     Foreign.C.Error.$tcErrno1_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$tcErrno2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.935253667 UTC

[section ""data" . Foreign.C.Error.$tcErrno_closure" {
     Foreign.C.Error.$tcErrno_closure:
         const GHC.Types.TyCon_con_info;
         const Foreign.C.Error.$trModule_closure+1;
         const Foreign.C.Error.$tcErrno1_closure+1;
         const GHC.Types.krep$*_closure;
         const 9614618910057470603;
         const 5790003468206630810;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.938325765 UTC

[section ""data" . $krep1_r92Ti_closure" {
     $krep1_r92Ti_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Foreign.C.Error.$tcErrno_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.940032998 UTC

[section ""data" . Foreign.C.Error.$tc'Errno1_closure" {
     Foreign.C.Error.$tc'Errno1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r92Th_closure+1;
         const $krep1_r92Ti_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.942080587 UTC

[section ""cstring" . Foreign.C.Error.$tc'Errno3_bytes" {
     Foreign.C.Error.$tc'Errno3_bytes:
         I8[] [39,69,114,114,110,111]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.943610669 UTC

[section ""data" . Foreign.C.Error.$tc'Errno2_closure" {
     Foreign.C.Error.$tc'Errno2_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$tc'Errno3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.945210838 UTC

[section ""data" . Foreign.C.Error.$tc'Errno_closure" {
     Foreign.C.Error.$tc'Errno_closure:
         const GHC.Types.TyCon_con_info;
         const Foreign.C.Error.$trModule_closure+1;
         const Foreign.C.Error.$tc'Errno2_closure+1;
         const Foreign.C.Error.$tc'Errno1_closure+4;
         const 18175500743799072511;
         const 6332857689812514354;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.94754837 UTC

[section ""data" . Foreign.C.Error.getErrno1_closure" {
     Foreign.C.Error.getErrno1_closure:
         const Foreign.C.Error.getErrno1_info;
 },
 Foreign.C.Error.getErrno1_entry() //  []
         { []
         }
     {offset
       c93y6: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c93yc; else goto c93yb;
       c93yc: // global
           HpAlloc = 16;
           R1 = Foreign.C.Error.getErrno1_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c93yb: // global
           (_s92To::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92To::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.getErrno1_info" {
     Foreign.C.Error.getErrno1_info:
         const Foreign.C.Error.getErrno1_entry;
         const 0;
         const 14;
         const 4294967299;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.951104731 UTC

[section ""data" . Foreign.C.Error.getErrno_closure" {
     Foreign.C.Error.getErrno_closure:
         const Foreign.C.Error.getErrno_info;
 },
 Foreign.C.Error.getErrno_entry() //  []
         { []
         }
     {offset
       c93yn: // global
           call Foreign.C.Error.getErrno1_entry() args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.getErrno_info" {
     Foreign.C.Error.getErrno_info:
         const Foreign.C.Error.getErrno_entry;
         const 0;
         const 14;
         const 4294967299;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.954321327 UTC

[section ""data" . Foreign.C.Error.resetErrno1_closure" {
     Foreign.C.Error.resetErrno1_closure:
         const Foreign.C.Error.resetErrno1_info;
 },
 Foreign.C.Error.resetErrno1_entry() //  []
         { []
         }
     {offset
       c93yA: // global
           call "ccall" arg hints:  [‘signed’]  result hints:  [] __hscore_set_errno(0);
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.resetErrno1_info" {
     Foreign.C.Error.resetErrno1_info:
         const Foreign.C.Error.resetErrno1_entry;
         const 0;
         const 14;
         const 4294967299;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.957921365 UTC

[section ""data" . Foreign.C.Error.resetErrno_closure" {
     Foreign.C.Error.resetErrno_closure:
         const Foreign.C.Error.resetErrno_info;
 },
 Foreign.C.Error.resetErrno_entry() //  []
         { []
         }
     {offset
       c93yM: // global
           call Foreign.C.Error.resetErrno1_entry() args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.resetErrno_info" {
     Foreign.C.Error.resetErrno_info:
         const Foreign.C.Error.resetErrno_entry;
         const 0;
         const 14;
         const 4294967299;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.961542406 UTC

[section ""data" . Foreign.C.Error.isValidErrno_closure" {
     Foreign.C.Error.isValidErrno_closure:
         const Foreign.C.Error.isValidErrno_info;
 },
 Foreign.C.Error.isValidErrno_entry() //  [R2]
         { []
         }
     {offset
       c93z0: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c93z1; else goto c93z2;
       c93z1: // global
           R2 = R2;
           R1 = Foreign.C.Error.isValidErrno_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c93z2: // global
           I64[Sp - 8] = block_c93yX_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u93za; else goto c93yY;
       u93za: // global
           call _c93yX(R1) args: 0, res: 0, upd: 0;
       c93yY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.isValidErrno_info" {
     Foreign.C.Error.isValidErrno_info:
         const Foreign.C.Error.isValidErrno_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c93yX() //  [R1]
         { []
         }
     {offset
       c93yX: // global
           if (I64[R1 + 7] == (-1)) goto c93z9; else goto c93z8;
       c93z9: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93z8: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c93yX_info" {
     block_c93yX_info:
         const _c93yX;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.967484933 UTC

[section ""data" . Foreign.C.Error.$fEqErrno_$c==_closure" {
     Foreign.C.Error.$fEqErrno_$c==_closure:
         const Foreign.C.Error.$fEqErrno_$c==_info;
 },
 Foreign.C.Error.$fEqErrno_$c==_entry() //  [R2, R3]
         { []
         }
     {offset
       c93zt: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c93zu; else goto c93zv;
       c93zu: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$fEqErrno_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93zv: // global
           I64[Sp - 16] = block_c93zq_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u93zU; else goto c93zr;
       u93zU: // global
           call _c93zq(R1) args: 0, res: 0, upd: 0;
       c93zr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.$fEqErrno_$c==_info" {
     Foreign.C.Error.$fEqErrno_$c==_info:
         const Foreign.C.Error.$fEqErrno_$c==_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c93zq() //  [R1]
         { []
         }
     {offset
       c93zq: // global
           _s92TD::I64 = I64[R1 + 7];
           if (_s92TD::I64 != (-1)) goto c93zD; else goto u93zQ;
       c93zD: // global
           I64[Sp] = block_c93zB_info;
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s92TD::I64;
           if (R1 & 7 != 0) goto u93zS; else goto c93zE;
       u93zS: // global
           call _c93zB(R1) args: 0, res: 0, upd: 0;
       c93zE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u93zQ: // global
           Sp = Sp + 16;
           call _c93zN() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c93zq_info" {
     block_c93zq_info:
         const _c93zq;
         const 1;
         const 30;
 },
 _c93zB() //  [R1]
         { []
         }
     {offset
       c93zB: // global
           _s92TG::I64 = I64[R1 + 7];
           if (_s92TG::I64 != (-1)) goto c93zL; else goto u93zR;
       c93zL: // global
           R1 = I64[((I64[Sp + 8] == _s92TG::I64) << 3) + GHC.Types.Bool_closure_tbl];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u93zR: // global
           Sp = Sp + 16;
           call _c93zN() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c93zB_info" {
     block_c93zB_info:
         const _c93zB;
         const 65;
         const 30;
 },
 _c93zN() //  []
         { []
         }
     {offset
       c93zN: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.976347007 UTC

[section ""data" . Foreign.C.Error.$fEqErrno_$c/=_closure" {
     Foreign.C.Error.$fEqErrno_$c/=_closure:
         const Foreign.C.Error.$fEqErrno_$c/=_info;
 },
 Foreign.C.Error.$fEqErrno_$c/=_entry() //  [R2, R3]
         { []
         }
     {offset
       c93Am: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c93An; else goto c93Ao;
       c93An: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$fEqErrno_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93Ao: // global
           I64[Sp - 16] = block_c93Aj_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u93AS; else goto c93Ak;
       u93AS: // global
           call _c93Aj(R1) args: 0, res: 0, upd: 0;
       c93Ak: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.$fEqErrno_$c/=_info" {
     Foreign.C.Error.$fEqErrno_$c/=_info:
         const Foreign.C.Error.$fEqErrno_$c/=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c93Aj() //  [R1]
         { []
         }
     {offset
       c93Aj: // global
           _s92TM::I64 = I64[R1 + 7];
           if (_s92TM::I64 != (-1)) goto c93Aw; else goto u93AN;
       c93Aw: // global
           I64[Sp] = block_c93Au_info;
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s92TM::I64;
           if (R1 & 7 != 0) goto u93AQ; else goto c93Ax;
       u93AQ: // global
           call _c93Au(R1) args: 0, res: 0, upd: 0;
       c93Ax: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u93AN: // global
           Sp = Sp + 16;
           call _c93AM() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c93Aj_info" {
     block_c93Aj_info:
         const _c93Aj;
         const 1;
         const 30;
 },
 _c93Au() //  [R1]
         { []
         }
     {offset
       c93Au: // global
           _s92TP::I64 = I64[R1 + 7];
           if (_s92TP::I64 != (-1)) goto c93AK; else goto u93AO;
       c93AK: // global
           if (I64[Sp + 8] == _s92TP::I64) goto c93AI; else goto u93AP;
       c93AI: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u93AP: // global
           Sp = Sp + 16;
           goto u93AU;
       u93AO: // global
           Sp = Sp + 16;
           goto u93AU;
       u93AU: // global
           call _c93AM() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c93Au_info" {
     block_c93Au_info:
         const _c93Au;
         const 65;
         const 30;
 },
 _c93AM() //  []
         { []
         }
     {offset
       c93AM: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.983690694 UTC

[section ""data" . Foreign.C.Error.$fEqErrno_closure" {
     Foreign.C.Error.$fEqErrno_closure:
         const GHC.Classes.C:Eq_con_info;
         const Foreign.C.Error.$fEqErrno_$c==_closure+2;
         const Foreign.C.Error.$fEqErrno_$c/=_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.985367166 UTC

[section ""data" . Foreign.C.Error.eXDEV1_closure" {
     Foreign.C.Error.eXDEV1_closure:
         const GHC.Int.I32#_con_info;
         const 18;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.986937847 UTC

[section ""data" . Foreign.C.Error.eXDEV_closure" {
     Foreign.C.Error.eXDEV_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eXDEV1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.988502573 UTC

[section ""data" . Foreign.C.Error.eAGAIN1_closure" {
     Foreign.C.Error.eAGAIN1_closure:
         const GHC.Int.I32#_con_info;
         const 11;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.99055062 UTC

[section ""data" . Foreign.C.Error.eWOULDBLOCK_closure" {
     Foreign.C.Error.eWOULDBLOCK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eAGAIN1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.992170306 UTC

[section ""data" . Foreign.C.Error.eUSERS1_closure" {
     Foreign.C.Error.eUSERS1_closure:
         const GHC.Int.I32#_con_info;
         const 87;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.993790823 UTC

[section ""data" . Foreign.C.Error.eUSERS_closure" {
     Foreign.C.Error.eUSERS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eUSERS1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.995355395 UTC

[section ""data" . Foreign.C.Error.eTXTBSY1_closure" {
     Foreign.C.Error.eTXTBSY1_closure:
         const GHC.Int.I32#_con_info;
         const 26;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.997465647 UTC

[section ""data" . Foreign.C.Error.eTXTBSY_closure" {
     Foreign.C.Error.eTXTBSY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTXTBSY1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:11.999010542 UTC

[section ""data" . Foreign.C.Error.eTOOMANYREFS1_closure" {
     Foreign.C.Error.eTOOMANYREFS1_closure:
         const GHC.Int.I32#_con_info;
         const 109;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.000455744 UTC

[section ""data" . Foreign.C.Error.eTOOMANYREFS_closure" {
     Foreign.C.Error.eTOOMANYREFS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTOOMANYREFS1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.002298024 UTC

[section ""data" . Foreign.C.Error.eTIMEDOUT1_closure" {
     Foreign.C.Error.eTIMEDOUT1_closure:
         const GHC.Int.I32#_con_info;
         const 110;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.003815914 UTC

[section ""data" . Foreign.C.Error.eTIMEDOUT_closure" {
     Foreign.C.Error.eTIMEDOUT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTIMEDOUT1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.005370861 UTC

[section ""data" . Foreign.C.Error.eTIME1_closure" {
     Foreign.C.Error.eTIME1_closure:
         const GHC.Int.I32#_con_info;
         const 62;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.006895135 UTC

[section ""data" . Foreign.C.Error.eTIME_closure" {
     Foreign.C.Error.eTIME_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTIME1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.008425141 UTC

[section ""data" . Foreign.C.Error.eSTALE1_closure" {
     Foreign.C.Error.eSTALE1_closure:
         const GHC.Int.I32#_con_info;
         const 116;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.010040151 UTC

[section ""data" . Foreign.C.Error.eSTALE_closure" {
     Foreign.C.Error.eSTALE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSTALE1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.011566525 UTC

[section ""data" . Foreign.C.Error.eSRMNT1_closure" {
     Foreign.C.Error.eSRMNT1_closure:
         const GHC.Int.I32#_con_info;
         const 69;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.013150332 UTC

[section ""data" . Foreign.C.Error.eSRMNT_closure" {
     Foreign.C.Error.eSRMNT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSRMNT1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.015148479 UTC

[section ""data" . Foreign.C.Error.eSRCH1_closure" {
     Foreign.C.Error.eSRCH1_closure:
         const GHC.Int.I32#_con_info;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.016712848 UTC

[section ""data" . Foreign.C.Error.eSRCH_closure" {
     Foreign.C.Error.eSRCH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSRCH1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.018332172 UTC

[section ""data" . Foreign.C.Error.eSPIPE1_closure" {
     Foreign.C.Error.eSPIPE1_closure:
         const GHC.Int.I32#_con_info;
         const 29;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.02040228 UTC

[section ""data" . Foreign.C.Error.eSPIPE_closure" {
     Foreign.C.Error.eSPIPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSPIPE1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.022090309 UTC

[section ""data" . Foreign.C.Error.eSOCKTNOSUPPORT1_closure" {
     Foreign.C.Error.eSOCKTNOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 94;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.023659045 UTC

[section ""data" . Foreign.C.Error.eSOCKTNOSUPPORT_closure" {
     Foreign.C.Error.eSOCKTNOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSOCKTNOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.02569625 UTC

[section ""data" . Foreign.C.Error.eSHUTDOWN1_closure" {
     Foreign.C.Error.eSHUTDOWN1_closure:
         const GHC.Int.I32#_con_info;
         const 108;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.027224876 UTC

[section ""data" . Foreign.C.Error.eSHUTDOWN_closure" {
     Foreign.C.Error.eSHUTDOWN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSHUTDOWN1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.028794253 UTC

[section ""data" . Foreign.C.Error.eBADRPC1_closure" {
     Foreign.C.Error.eBADRPC1_closure:
         const GHC.Int.I32#_con_info;
         const (-1);
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.030365014 UTC

[section ""data" . Foreign.C.Error.eRREMOTE_closure" {
     Foreign.C.Error.eRREMOTE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.031951571 UTC

[section ""data" . Foreign.C.Error.eRPCMISMATCH_closure" {
     Foreign.C.Error.eRPCMISMATCH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.033557257 UTC

[section ""data" . Foreign.C.Error.eROFS1_closure" {
     Foreign.C.Error.eROFS1_closure:
         const GHC.Int.I32#_con_info;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.035134316 UTC

[section ""data" . Foreign.C.Error.eROFS_closure" {
     Foreign.C.Error.eROFS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eROFS1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.036749772 UTC

[section ""data" . Foreign.C.Error.eREMOTE1_closure" {
     Foreign.C.Error.eREMOTE1_closure:
         const GHC.Int.I32#_con_info;
         const 66;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.03865902 UTC

[section ""data" . Foreign.C.Error.eREMOTE_closure" {
     Foreign.C.Error.eREMOTE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eREMOTE1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.040217705 UTC

[section ""data" . Foreign.C.Error.eREMCHG1_closure" {
     Foreign.C.Error.eREMCHG1_closure:
         const GHC.Int.I32#_con_info;
         const 78;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.041812178 UTC

[section ""data" . Foreign.C.Error.eREMCHG_closure" {
     Foreign.C.Error.eREMCHG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eREMCHG1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.043430933 UTC

[section ""data" . Foreign.C.Error.eRANGE1_closure" {
     Foreign.C.Error.eRANGE1_closure:
         const GHC.Int.I32#_con_info;
         const 34;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.045586165 UTC

[section ""data" . Foreign.C.Error.eRANGE_closure" {
     Foreign.C.Error.eRANGE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eRANGE1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.047179176 UTC

[section ""data" . Foreign.C.Error.ePROTOTYPE1_closure" {
     Foreign.C.Error.ePROTOTYPE1_closure:
         const GHC.Int.I32#_con_info;
         const 91;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.048743844 UTC

[section ""data" . Foreign.C.Error.ePROTOTYPE_closure" {
     Foreign.C.Error.ePROTOTYPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePROTOTYPE1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.050341551 UTC

[section ""data" . Foreign.C.Error.ePROTONOSUPPORT1_closure" {
     Foreign.C.Error.ePROTONOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 93;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.051914535 UTC

[section ""data" . Foreign.C.Error.ePROTONOSUPPORT_closure" {
     Foreign.C.Error.ePROTONOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePROTONOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.053567825 UTC

[section ""data" . Foreign.C.Error.ePROTO1_closure" {
     Foreign.C.Error.ePROTO1_closure:
         const GHC.Int.I32#_con_info;
         const 71;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.055141407 UTC

[section ""data" . Foreign.C.Error.ePROTO_closure" {
     Foreign.C.Error.ePROTO_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePROTO1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.056823391 UTC

[section ""data" . Foreign.C.Error.ePROGUNAVAIL_closure" {
     Foreign.C.Error.ePROGUNAVAIL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.058869029 UTC

[section ""data" . Foreign.C.Error.ePROGMISMATCH_closure" {
     Foreign.C.Error.ePROGMISMATCH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.060569756 UTC

[section ""data" . Foreign.C.Error.ePROCUNAVAIL_closure" {
     Foreign.C.Error.ePROCUNAVAIL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.062277582 UTC

[section ""data" . Foreign.C.Error.ePROCLIM_closure" {
     Foreign.C.Error.ePROCLIM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.063888996 UTC

[section ""data" . Foreign.C.Error.ePIPE1_closure" {
     Foreign.C.Error.ePIPE1_closure:
         const GHC.Int.I32#_con_info;
         const 32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.065534203 UTC

[section ""data" . Foreign.C.Error.ePIPE_closure" {
     Foreign.C.Error.ePIPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePIPE1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.067141221 UTC

[section ""data" . Foreign.C.Error.ePFNOSUPPORT1_closure" {
     Foreign.C.Error.ePFNOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 96;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.069357028 UTC

[section ""data" . Foreign.C.Error.ePFNOSUPPORT_closure" {
     Foreign.C.Error.ePFNOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePFNOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.070946185 UTC

[section ""data" . Foreign.C.Error.ePERM1_closure" {
     Foreign.C.Error.ePERM1_closure:
         const GHC.Int.I32#_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.07249018 UTC

[section ""data" . Foreign.C.Error.ePERM_closure" {
     Foreign.C.Error.ePERM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePERM1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.074141663 UTC

[section ""data" . Foreign.C.Error.eNOTSUP1_closure" {
     Foreign.C.Error.eNOTSUP1_closure:
         const GHC.Int.I32#_con_info;
         const 95;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.075761157 UTC

[section ""data" . Foreign.C.Error.eOPNOTSUPP_closure" {
     Foreign.C.Error.eOPNOTSUPP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTSUP1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.07802949 UTC

[section ""data" . Foreign.C.Error.eNXIO1_closure" {
     Foreign.C.Error.eNXIO1_closure:
         const GHC.Int.I32#_con_info;
         const 6;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.079620341 UTC

[section ""data" . Foreign.C.Error.eNXIO_closure" {
     Foreign.C.Error.eNXIO_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNXIO1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.081304185 UTC

[section ""data" . Foreign.C.Error.eNOTTY1_closure" {
     Foreign.C.Error.eNOTTY1_closure:
         const GHC.Int.I32#_con_info;
         const 25;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.082908388 UTC

[section ""data" . Foreign.C.Error.eNOTTY_closure" {
     Foreign.C.Error.eNOTTY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTTY1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.084518965 UTC

[section ""data" . Foreign.C.Error.eNOTSUP_closure" {
     Foreign.C.Error.eNOTSUP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTSUP1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.086143753 UTC

[section ""data" . Foreign.C.Error.eNOTSOCK1_closure" {
     Foreign.C.Error.eNOTSOCK1_closure:
         const GHC.Int.I32#_con_info;
         const 88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.08777127 UTC

[section ""data" . Foreign.C.Error.eNOTSOCK_closure" {
     Foreign.C.Error.eNOTSOCK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTSOCK1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.089699497 UTC

[section ""data" . Foreign.C.Error.eNOTEMPTY1_closure" {
     Foreign.C.Error.eNOTEMPTY1_closure:
         const GHC.Int.I32#_con_info;
         const 39;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.091348974 UTC

[section ""data" . Foreign.C.Error.eNOTEMPTY_closure" {
     Foreign.C.Error.eNOTEMPTY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTEMPTY1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.093463343 UTC

[section ""data" . Foreign.C.Error.eNOTDIR1_closure" {
     Foreign.C.Error.eNOTDIR1_closure:
         const GHC.Int.I32#_con_info;
         const 20;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.095150318 UTC

[section ""data" . Foreign.C.Error.eNOTDIR_closure" {
     Foreign.C.Error.eNOTDIR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTDIR1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.096815022 UTC

[section ""data" . Foreign.C.Error.eNOTCONN1_closure" {
     Foreign.C.Error.eNOTCONN1_closure:
         const GHC.Int.I32#_con_info;
         const 107;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.098460002 UTC

[section ""data" . Foreign.C.Error.eNOTCONN_closure" {
     Foreign.C.Error.eNOTCONN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTCONN1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.100103134 UTC

[section ""data" . Foreign.C.Error.eNOTBLK1_closure" {
     Foreign.C.Error.eNOTBLK1_closure:
         const GHC.Int.I32#_con_info;
         const 15;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.101743443 UTC

[section ""data" . Foreign.C.Error.eNOTBLK_closure" {
     Foreign.C.Error.eNOTBLK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTBLK1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.103416271 UTC

[section ""data" . Foreign.C.Error.eNOSYS1_closure" {
     Foreign.C.Error.eNOSYS1_closure:
         const GHC.Int.I32#_con_info;
         const 38;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.105114779 UTC

[section ""data" . Foreign.C.Error.eNOSYS_closure" {
     Foreign.C.Error.eNOSYS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSYS1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.107484325 UTC

[section ""data" . Foreign.C.Error.eNOSTR1_closure" {
     Foreign.C.Error.eNOSTR1_closure:
         const GHC.Int.I32#_con_info;
         const 60;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.109108744 UTC

[section ""data" . Foreign.C.Error.eNOSTR_closure" {
     Foreign.C.Error.eNOSTR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSTR1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.110737116 UTC

[section ""data" . Foreign.C.Error.eNOSR1_closure" {
     Foreign.C.Error.eNOSR1_closure:
         const GHC.Int.I32#_con_info;
         const 63;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.112284491 UTC

[section ""data" . Foreign.C.Error.eNOSR_closure" {
     Foreign.C.Error.eNOSR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSR1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.113964624 UTC

[section ""data" . Foreign.C.Error.eNOSPC1_closure" {
     Foreign.C.Error.eNOSPC1_closure:
         const GHC.Int.I32#_con_info;
         const 28;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.115577769 UTC

[section ""data" . Foreign.C.Error.eNOSPC_closure" {
     Foreign.C.Error.eNOSPC_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.117771851 UTC

[section ""data" . Foreign.C.Error.eNOPROTOOPT1_closure" {
     Foreign.C.Error.eNOPROTOOPT1_closure:
         const GHC.Int.I32#_con_info;
         const 92;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.119450747 UTC

[section ""data" . Foreign.C.Error.eNOPROTOOPT_closure" {
     Foreign.C.Error.eNOPROTOOPT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOPROTOOPT1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.121133558 UTC

[section ""data" . Foreign.C.Error.eNONET1_closure" {
     Foreign.C.Error.eNONET1_closure:
         const GHC.Int.I32#_con_info;
         const 64;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.122737263 UTC

[section ""data" . Foreign.C.Error.eNONET_closure" {
     Foreign.C.Error.eNONET_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNONET1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.124335279 UTC

[section ""data" . Foreign.C.Error.eNOMSG1_closure" {
     Foreign.C.Error.eNOMSG1_closure:
         const GHC.Int.I32#_con_info;
         const 42;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.126513123 UTC

[section ""data" . Foreign.C.Error.eNOMSG_closure" {
     Foreign.C.Error.eNOMSG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOMSG1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.128094254 UTC

[section ""data" . Foreign.C.Error.eNOMEM1_closure" {
     Foreign.C.Error.eNOMEM1_closure:
         const GHC.Int.I32#_con_info;
         const 12;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.129811561 UTC

[section ""data" . Foreign.C.Error.eNOMEM_closure" {
     Foreign.C.Error.eNOMEM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOMEM1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.131491616 UTC

[section ""data" . Foreign.C.Error.eNOLINK1_closure" {
     Foreign.C.Error.eNOLINK1_closure:
         const GHC.Int.I32#_con_info;
         const 67;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.133138834 UTC

[section ""data" . Foreign.C.Error.eNOLINK_closure" {
     Foreign.C.Error.eNOLINK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOLINK1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.134829063 UTC

[section ""data" . Foreign.C.Error.eNOLCK1_closure" {
     Foreign.C.Error.eNOLCK1_closure:
         const GHC.Int.I32#_con_info;
         const 37;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.136473516 UTC

[section ""data" . Foreign.C.Error.eNOLCK_closure" {
     Foreign.C.Error.eNOLCK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOLCK1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.138106625 UTC

[section ""data" . Foreign.C.Error.eNOEXEC1_closure" {
     Foreign.C.Error.eNOEXEC1_closure:
         const GHC.Int.I32#_con_info;
         const 8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.139747122 UTC

[section ""data" . Foreign.C.Error.eNOEXEC_closure" {
     Foreign.C.Error.eNOEXEC_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOEXEC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.141930855 UTC

[section ""data" . Foreign.C.Error.eNOENT1_closure" {
     Foreign.C.Error.eNOENT1_closure:
         const GHC.Int.I32#_con_info;
         const 2;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.143525551 UTC

[section ""data" . Foreign.C.Error.eNOENT_closure" {
     Foreign.C.Error.eNOENT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOENT1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.145169752 UTC

[section ""data" . Foreign.C.Error.eNODEV1_closure" {
     Foreign.C.Error.eNODEV1_closure:
         const GHC.Int.I32#_con_info;
         const 19;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.147395508 UTC

[section ""data" . Foreign.C.Error.eNODEV_closure" {
     Foreign.C.Error.eNODEV_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNODEV1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.149003843 UTC

[section ""data" . Foreign.C.Error.eNODATA1_closure" {
     Foreign.C.Error.eNODATA1_closure:
         const GHC.Int.I32#_con_info;
         const 61;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.150686256 UTC

[section ""data" . Foreign.C.Error.eNODATA_closure" {
     Foreign.C.Error.eNODATA_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNODATA1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.152386042 UTC

[section ""data" . Foreign.C.Error.eNOBUFS1_closure" {
     Foreign.C.Error.eNOBUFS1_closure:
         const GHC.Int.I32#_con_info;
         const 105;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.153986005 UTC

[section ""data" . Foreign.C.Error.eNOBUFS_closure" {
     Foreign.C.Error.eNOBUFS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOBUFS1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.155655642 UTC

[section ""data" . Foreign.C.Error.eNFILE1_closure" {
     Foreign.C.Error.eNFILE1_closure:
         const GHC.Int.I32#_con_info;
         const 23;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.157356511 UTC

[section ""data" . Foreign.C.Error.eNFILE_closure" {
     Foreign.C.Error.eNFILE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNFILE1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.159032057 UTC

[section ""data" . Foreign.C.Error.eNETUNREACH1_closure" {
     Foreign.C.Error.eNETUNREACH1_closure:
         const GHC.Int.I32#_con_info;
         const 101;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.160718799 UTC

[section ""data" . Foreign.C.Error.eNETUNREACH_closure" {
     Foreign.C.Error.eNETUNREACH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNETUNREACH1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.162984848 UTC

[section ""data" . Foreign.C.Error.eNETRESET1_closure" {
     Foreign.C.Error.eNETRESET1_closure:
         const GHC.Int.I32#_con_info;
         const 102;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.164626502 UTC

[section ""data" . Foreign.C.Error.eNETRESET_closure" {
     Foreign.C.Error.eNETRESET_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNETRESET1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.166255161 UTC

[section ""data" . Foreign.C.Error.eNETDOWN1_closure" {
     Foreign.C.Error.eNETDOWN1_closure:
         const GHC.Int.I32#_con_info;
         const 100;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.168390019 UTC

[section ""data" . Foreign.C.Error.eNETDOWN_closure" {
     Foreign.C.Error.eNETDOWN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNETDOWN1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.170004695 UTC

[section ""data" . Foreign.C.Error.eNAMETOOLONG1_closure" {
     Foreign.C.Error.eNAMETOOLONG1_closure:
         const GHC.Int.I32#_con_info;
         const 36;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.171587897 UTC

[section ""data" . Foreign.C.Error.eNAMETOOLONG_closure" {
     Foreign.C.Error.eNAMETOOLONG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNAMETOOLONG1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.173196898 UTC

[section ""data" . Foreign.C.Error.eMULTIHOP1_closure" {
     Foreign.C.Error.eMULTIHOP1_closure:
         const GHC.Int.I32#_con_info;
         const 72;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.17539765 UTC

[section ""data" . Foreign.C.Error.eMULTIHOP_closure" {
     Foreign.C.Error.eMULTIHOP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMULTIHOP1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.177037114 UTC

[section ""data" . Foreign.C.Error.eMSGSIZE1_closure" {
     Foreign.C.Error.eMSGSIZE1_closure:
         const GHC.Int.I32#_con_info;
         const 90;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.178733686 UTC

[section ""data" . Foreign.C.Error.eMSGSIZE_closure" {
     Foreign.C.Error.eMSGSIZE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMSGSIZE1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.180441152 UTC

[section ""data" . Foreign.C.Error.eMLINK1_closure" {
     Foreign.C.Error.eMLINK1_closure:
         const GHC.Int.I32#_con_info;
         const 31;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.182081204 UTC

[section ""data" . Foreign.C.Error.eMLINK_closure" {
     Foreign.C.Error.eMLINK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMLINK1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.183766476 UTC

[section ""data" . Foreign.C.Error.eMFILE1_closure" {
     Foreign.C.Error.eMFILE1_closure:
         const GHC.Int.I32#_con_info;
         const 24;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.185822317 UTC

[section ""data" . Foreign.C.Error.eMFILE_closure" {
     Foreign.C.Error.eMFILE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMFILE1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.187513757 UTC

[section ""data" . Foreign.C.Error.eLOOP1_closure" {
     Foreign.C.Error.eLOOP1_closure:
         const GHC.Int.I32#_con_info;
         const 40;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.18909783 UTC

[section ""data" . Foreign.C.Error.eLOOP_closure" {
     Foreign.C.Error.eLOOP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eLOOP1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.190785634 UTC

[section ""data" . Foreign.C.Error.eISDIR1_closure" {
     Foreign.C.Error.eISDIR1_closure:
         const GHC.Int.I32#_con_info;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.192932047 UTC

[section ""data" . Foreign.C.Error.eISDIR_closure" {
     Foreign.C.Error.eISDIR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eISDIR1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.19458202 UTC

[section ""data" . Foreign.C.Error.eISCONN1_closure" {
     Foreign.C.Error.eISCONN1_closure:
         const GHC.Int.I32#_con_info;
         const 106;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.196165076 UTC

[section ""data" . Foreign.C.Error.eISCONN_closure" {
     Foreign.C.Error.eISCONN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eISCONN1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.197837043 UTC

[section ""data" . Foreign.C.Error.eIO1_closure" {
     Foreign.C.Error.eIO1_closure:
         const GHC.Int.I32#_con_info;
         const 5;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.199411326 UTC

[section ""data" . Foreign.C.Error.eIO_closure" {
     Foreign.C.Error.eIO_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eIO1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.200995236 UTC

[section ""data" . Foreign.C.Error.eINVAL1_closure" {
     Foreign.C.Error.eINVAL1_closure:
         const GHC.Int.I32#_con_info;
         const 22;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.202980077 UTC

[section ""data" . Foreign.C.Error.eINVAL_closure" {
     Foreign.C.Error.eINVAL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eINVAL1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.204669514 UTC

[section ""data" . Foreign.C.Error.eINTR1_closure" {
     Foreign.C.Error.eINTR1_closure:
         const GHC.Int.I32#_con_info;
         const 4;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.206337483 UTC

[section ""data" . Foreign.C.Error.eINTR_closure" {
     Foreign.C.Error.eINTR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eINTR1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.208003395 UTC

[section ""data" . Foreign.C.Error.eINPROGRESS1_closure" {
     Foreign.C.Error.eINPROGRESS1_closure:
         const GHC.Int.I32#_con_info;
         const 115;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.20973182 UTC

[section ""data" . Foreign.C.Error.eINPROGRESS_closure" {
     Foreign.C.Error.eINPROGRESS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eINPROGRESS1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.211344373 UTC

[section ""data" . Foreign.C.Error.eILSEQ1_closure" {
     Foreign.C.Error.eILSEQ1_closure:
         const GHC.Int.I32#_con_info;
         const 84;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.213032509 UTC

[section ""data" . Foreign.C.Error.eILSEQ_closure" {
     Foreign.C.Error.eILSEQ_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eILSEQ1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.215297372 UTC

[section ""data" . Foreign.C.Error.eIDRM1_closure" {
     Foreign.C.Error.eIDRM1_closure:
         const GHC.Int.I32#_con_info;
         const 43;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.217405625 UTC

[section ""data" . Foreign.C.Error.eIDRM_closure" {
     Foreign.C.Error.eIDRM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eIDRM1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.219030029 UTC

[section ""data" . Foreign.C.Error.eHOSTUNREACH1_closure" {
     Foreign.C.Error.eHOSTUNREACH1_closure:
         const GHC.Int.I32#_con_info;
         const 113;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.220685863 UTC

[section ""data" . Foreign.C.Error.eHOSTUNREACH_closure" {
     Foreign.C.Error.eHOSTUNREACH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eHOSTUNREACH1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.222332248 UTC

[section ""data" . Foreign.C.Error.eHOSTDOWN1_closure" {
     Foreign.C.Error.eHOSTDOWN1_closure:
         const GHC.Int.I32#_con_info;
         const 112;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.223924931 UTC

[section ""data" . Foreign.C.Error.eHOSTDOWN_closure" {
     Foreign.C.Error.eHOSTDOWN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eHOSTDOWN1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.225614542 UTC

[section ""data" . Foreign.C.Error.eFTYPE_closure" {
     Foreign.C.Error.eFTYPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.227295293 UTC

[section ""data" . Foreign.C.Error.eFBIG1_closure" {
     Foreign.C.Error.eFBIG1_closure:
         const GHC.Int.I32#_con_info;
         const 27;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.22904189 UTC

[section ""data" . Foreign.C.Error.eFBIG_closure" {
     Foreign.C.Error.eFBIG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eFBIG1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.23114552 UTC

[section ""data" . Foreign.C.Error.eFAULT1_closure" {
     Foreign.C.Error.eFAULT1_closure:
         const GHC.Int.I32#_con_info;
         const 14;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.232788381 UTC

[section ""data" . Foreign.C.Error.eFAULT_closure" {
     Foreign.C.Error.eFAULT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eFAULT1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.234508149 UTC

[section ""data" . Foreign.C.Error.eEXIST1_closure" {
     Foreign.C.Error.eEXIST1_closure:
         const GHC.Int.I32#_con_info;
         const 17;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.236142497 UTC

[section ""data" . Foreign.C.Error.eEXIST_closure" {
     Foreign.C.Error.eEXIST_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eEXIST1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.237783681 UTC

[section ""data" . Foreign.C.Error.eDQUOT1_closure" {
     Foreign.C.Error.eDQUOT1_closure:
         const GHC.Int.I32#_con_info;
         const 122;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.239407545 UTC

[section ""data" . Foreign.C.Error.eDQUOT_closure" {
     Foreign.C.Error.eDQUOT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDQUOT1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.241496264 UTC

[section ""data" . Foreign.C.Error.eDOM1_closure" {
     Foreign.C.Error.eDOM1_closure:
         const GHC.Int.I32#_con_info;
         const 33;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.243104316 UTC

[section ""data" . Foreign.C.Error.eDOM_closure" {
     Foreign.C.Error.eDOM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDOM1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.244684468 UTC

[section ""data" . Foreign.C.Error.eDIRTY_closure" {
     Foreign.C.Error.eDIRTY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.246823873 UTC

[section ""data" . Foreign.C.Error.eDESTADDRREQ1_closure" {
     Foreign.C.Error.eDESTADDRREQ1_closure:
         const GHC.Int.I32#_con_info;
         const 89;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.24845101 UTC

[section ""data" . Foreign.C.Error.eDESTADDRREQ_closure" {
     Foreign.C.Error.eDESTADDRREQ_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDESTADDRREQ1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.250091701 UTC

[section ""data" . Foreign.C.Error.eDEADLK1_closure" {
     Foreign.C.Error.eDEADLK1_closure:
         const GHC.Int.I32#_con_info;
         const 35;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.251739543 UTC

[section ""data" . Foreign.C.Error.eDEADLK_closure" {
     Foreign.C.Error.eDEADLK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDEADLK1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.253399625 UTC

[section ""data" . Foreign.C.Error.eCONNRESET1_closure" {
     Foreign.C.Error.eCONNRESET1_closure:
         const GHC.Int.I32#_con_info;
         const 104;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.254978516 UTC

[section ""data" . Foreign.C.Error.eCONNRESET_closure" {
     Foreign.C.Error.eCONNRESET_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCONNRESET1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.256647963 UTC

[section ""data" . Foreign.C.Error.eCONNREFUSED1_closure" {
     Foreign.C.Error.eCONNREFUSED1_closure:
         const GHC.Int.I32#_con_info;
         const 111;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.258295984 UTC

[section ""data" . Foreign.C.Error.eCONNREFUSED_closure" {
     Foreign.C.Error.eCONNREFUSED_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCONNREFUSED1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.259960424 UTC

[section ""data" . Foreign.C.Error.eCONNABORTED1_closure" {
     Foreign.C.Error.eCONNABORTED1_closure:
         const GHC.Int.I32#_con_info;
         const 103;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.262134368 UTC

[section ""data" . Foreign.C.Error.eCONNABORTED_closure" {
     Foreign.C.Error.eCONNABORTED_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCONNABORTED1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.263701937 UTC

[section ""data" . Foreign.C.Error.eCOMM1_closure" {
     Foreign.C.Error.eCOMM1_closure:
         const GHC.Int.I32#_con_info;
         const 70;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.265406394 UTC

[section ""data" . Foreign.C.Error.eCOMM_closure" {
     Foreign.C.Error.eCOMM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCOMM1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.267666151 UTC

[section ""data" . Foreign.C.Error.eCHILD1_closure" {
     Foreign.C.Error.eCHILD1_closure:
         const GHC.Int.I32#_con_info;
         const 10;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.269371215 UTC

[section ""data" . Foreign.C.Error.eCHILD_closure" {
     Foreign.C.Error.eCHILD_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCHILD1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.270935428 UTC

[section ""data" . Foreign.C.Error.eBUSY1_closure" {
     Foreign.C.Error.eBUSY1_closure:
         const GHC.Int.I32#_con_info;
         const 16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.272526556 UTC

[section ""data" . Foreign.C.Error.eBUSY_closure" {
     Foreign.C.Error.eBUSY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBUSY1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.274767589 UTC

[section ""data" . Foreign.C.Error.eBADRPC_closure" {
     Foreign.C.Error.eBADRPC_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.276442075 UTC

[section ""data" . Foreign.C.Error.eBADMSG1_closure" {
     Foreign.C.Error.eBADMSG1_closure:
         const GHC.Int.I32#_con_info;
         const 74;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.278182637 UTC

[section ""data" . Foreign.C.Error.eBADMSG_closure" {
     Foreign.C.Error.eBADMSG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADMSG1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.279884858 UTC

[section ""data" . Foreign.C.Error.eBADF1_closure" {
     Foreign.C.Error.eBADF1_closure:
         const GHC.Int.I32#_con_info;
         const 9;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.28159366 UTC

[section ""data" . Foreign.C.Error.eBADF_closure" {
     Foreign.C.Error.eBADF_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADF1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.28333545 UTC

[section ""data" . Foreign.C.Error.eALREADY1_closure" {
     Foreign.C.Error.eALREADY1_closure:
         const GHC.Int.I32#_con_info;
         const 114;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.284967484 UTC

[section ""data" . Foreign.C.Error.eALREADY_closure" {
     Foreign.C.Error.eALREADY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eALREADY1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.287017629 UTC

[section ""data" . Foreign.C.Error.eAGAIN_closure" {
     Foreign.C.Error.eAGAIN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eAGAIN1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.288637673 UTC

[section ""data" . Foreign.C.Error.eAFNOSUPPORT1_closure" {
     Foreign.C.Error.eAFNOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 97;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.29038578 UTC

[section ""data" . Foreign.C.Error.eAFNOSUPPORT_closure" {
     Foreign.C.Error.eAFNOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eAFNOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.292606988 UTC

[section ""data" . Foreign.C.Error.eADV1_closure" {
     Foreign.C.Error.eADV1_closure:
         const GHC.Int.I32#_con_info;
         const 68;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.294309691 UTC

[section ""data" . Foreign.C.Error.eADV_closure" {
     Foreign.C.Error.eADV_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eADV1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.296007942 UTC

[section ""data" . Foreign.C.Error.eADDRNOTAVAIL1_closure" {
     Foreign.C.Error.eADDRNOTAVAIL1_closure:
         const GHC.Int.I32#_con_info;
         const 99;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.298072415 UTC

[section ""data" . Foreign.C.Error.eADDRNOTAVAIL_closure" {
     Foreign.C.Error.eADDRNOTAVAIL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eADDRNOTAVAIL1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.29966204 UTC

[section ""data" . Foreign.C.Error.eADDRINUSE1_closure" {
     Foreign.C.Error.eADDRINUSE1_closure:
         const GHC.Int.I32#_con_info;
         const 98;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.301289397 UTC

[section ""data" . Foreign.C.Error.eADDRINUSE_closure" {
     Foreign.C.Error.eADDRINUSE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eADDRINUSE1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.302950288 UTC

[section ""data" . Foreign.C.Error.eACCES1_closure" {
     Foreign.C.Error.eACCES1_closure:
         const GHC.Int.I32#_con_info;
         const 13;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.304575494 UTC

[section ""data" . Foreign.C.Error.eACCES_closure" {
     Foreign.C.Error.eACCES_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eACCES1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.306324375 UTC

[section ""data" . Foreign.C.Error.e2BIG1_closure" {
     Foreign.C.Error.e2BIG1_closure:
         const GHC.Int.I32#_con_info;
         const 7;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.307934567 UTC

[section ""data" . Foreign.C.Error.e2BIG_closure" {
     Foreign.C.Error.e2BIG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.e2BIG1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.310012223 UTC

[section ""data" . Foreign.C.Error.eOK1_closure" {
     Foreign.C.Error.eOK1_closure:
         const GHC.Int.I32#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.311629231 UTC

[section ""data" . Foreign.C.Error.eOK_closure" {
     Foreign.C.Error.eOK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eOK1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.318051852 UTC

[section ""data" . Foreign.C.Error.$werrnoToIOError_closure" {
     Foreign.C.Error.$werrnoToIOError_closure:
         const Foreign.C.Error.$werrnoToIOError_info;
         const 0;
 },
 Foreign.C.Error.$werrnoToIOError_slow() //  [R1]
         { []
         }
     {offset
       c93Ei: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2,
                                                       R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s92U7_entry() //  [R1]
         { []
         }
     {offset
       c93G0: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c93G1; else goto c93G2;
       c93G1: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93G2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s92U6::I64 = I64[R1 + 16];
           if (%MO_S_Lt_W64(_s92U6::I64, 60)) goto u93G3; else goto u93G6;
       u93G3: // global
           if (%MO_S_Ge_W64(_s92U6::I64, 44)) goto c93EC; else goto u93G4;
       u93G4: // global
           if (%MO_S_Lt_W64(_s92U6::I64, 1)) goto c93EC; else goto u93G5;
       u93G5: // global
           switch [1 .. 43] _s92U6::I64 {
               case 1 : goto c93FZ;
               case 2, 3 : goto c93FV;
               case 4 : goto c93EG;
               case 5 : goto c93EH;
               case 6 : goto c93FV;
               case 7 : goto c93FR;
               case 8, 9 : goto c93FP;
               case 10 : goto c93FV;
               case 11, 12 : goto c93FR;
               case 13 : goto c93FZ;
               case 15 : goto c93FP;
               case 16 : goto c93FH;
               case 17 : goto c93FX;
               case 18, 19 : goto c93FI;
               case 20, 21 : goto c93Ft;
               case 22 : goto c93FP;
               case 23, 24 : goto c93FR;
               case 25 : goto c93FQ;
               case 26 : goto c93FH;
               case 27 : goto c93FZ;
               case 28 : goto c93FR;
               case 29 : goto c93FI;
               case 30 : goto c93FZ;
               case 31 : goto c93FR;
               case 32 : goto c93FY;
               case 33 : goto c93FP;
               case 34 : goto c93FI;
               case 35 : goto c93FH;
               case 36 : goto c93FP;
               case 37 : goto c93FR;
               case 38 : goto c93FI;
               case 39 : goto c93Fp;
               case 40 : goto c93FP;
               case 42 : goto c93FV;
               case 43 : goto c93FY;
               default: {goto c93EC;}
           }
       c93EH: // global
           R1 = GHC.IO.Exception.HardwareFault_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93EG: // global
           R1 = GHC.IO.Exception.Interrupted_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       u93G6: // global
           if (%MO_S_Ge_W64(_s92U6::I64, 123)) goto c93EC; else goto u93G7;
       u93G7: // global
           switch [60 .. 122] _s92U6::I64 {
               case 60 : goto c93FP;
               case 61 : goto c93FV;
               case 62 : goto c93FS;
               case 63 : goto c93FR;
               case 64 : goto c93FV;
               case 66 : goto c93FQ;
               case 67 : goto c93FY;
               case 69 : goto c93Fp;
               case 70 : goto c93FY;
               case 71 : goto c93FC;
               case 72 : goto c93FI;
               case 74 : goto c93Ft;
               case 78 : goto c93FY;
               case 84 : goto c93FP;
               case 87 : goto c93FR;
               case 88, 89 : goto c93FP;
               case 90 : goto c93FR;
               case 91 : goto c93FC;
               case 92 : goto c93FI;
               case 93 : goto c93FC;
               case 94, 95, 96, 97 : goto c93FI;
               case 98 : goto c93FH;
               case 99 : goto c93FI;
               case 100 : goto c93FY;
               case 101 : goto c93FV;
               case 102, 104 : goto c93FY;
               case 105 : goto c93FR;
               case 106 : goto c93FX;
               case 107 : goto c93FP;
               case 108 : goto c93FQ;
               case 109 : goto c93FR;
               case 110 : goto c93FS;
               case 111, 112, 113 : goto c93FV;
               case 114, 115 : goto c93FX;
               case 116 : goto c93FY;
               case 122 : goto c93FZ;
               default: {goto c93EC;}
           }
       c93FZ: // global
           R1 = GHC.IO.Exception.PermissionDenied_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93FX: // global
           R1 = GHC.IO.Exception.AlreadyExists_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93FH: // global
           R1 = GHC.IO.Exception.ResourceBusy_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93Ft: // global
           R1 = GHC.IO.Exception.InappropriateType_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93FI: // global
           R1 = GHC.IO.Exception.UnsupportedOperation_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93FC: // global
           R1 = GHC.IO.Exception.ProtocolError_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93Fp: // global
           R1 = GHC.IO.Exception.UnsatisfiedConstraints_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93FY: // global
           R1 = GHC.IO.Exception.ResourceVanished_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93FQ: // global
           R1 = GHC.IO.Exception.IllegalOperation_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93FR: // global
           R1 = GHC.IO.Exception.ResourceExhausted_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93FS: // global
           R1 = GHC.IO.Exception.TimeExpired_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93FV: // global
           R1 = GHC.IO.Exception.NoSuchThing_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93FP: // global
           R1 = GHC.IO.Exception.InvalidArgument_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93EC: // global
           R1 = GHC.IO.Exception.OtherError_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s92U7_info" {
     sat_s92U7_info:
         const sat_s92U7_entry;
         const 4294967296;
         const 17;
 },
 Foreign.C.Error.$werrnoToIOError_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c93Gc: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c93Gd; else goto c93Ge;
       c93Gd: // global
           R1 = Foreign.C.Error.$werrnoToIOError_closure;
           P64[Sp - 32] = R2;
           I64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           call (stg_gc_fun)(R1) args: 40, res: 0, upd: 8;
       c93Ge: // global
           I64[Sp - 40] = block_c93Em_info;
           P64[Sp - 32] = R2;
           I64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 40;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.$werrnoToIOError_info" {
     Foreign.C.Error.$werrnoToIOError_info:
         const Foreign.C.Error.$werrnoToIOError_entry;
         const 0;
         const 30064771086;
         const 17179869184;
         const S932t_srt;
         const 132;
         const Foreign.C.Error.$werrnoToIOError_slow;
 },
 _c93Em() //  []
         { []
         }
     {offset
       c93Em: // global
           (_s92TZ::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [PtrHint] strerror(I64[Sp + 16]);
           I64[Sp - 8] = block_c93Eq_info;
           R1 = GHC.IO.Encoding.getForeignEncoding_closure;
           I64[Sp] = _s92TZ::I64;
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c93Em_info" {
     block_c93Em_info:
         const _c93Em;
         const 132;
         const 12884901918;
         const S932t_srt;
 },
 _c93Eq() //  [R1]
         { []
         }
     {offset
       c93Eq: // global
           _s92TZ::I64 = I64[Sp + 8];
           I64[Sp + 8] = block_c93Es_info;
           R3 = _s92TZ::I64;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Foreign.$wpeekCString_entry(R3,
                                                R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c93Eq_info" {
     block_c93Eq_info:
         const _c93Eq;
         const 325;
         const 4294967326;
         const S932t_srt+8;
 },
 _c93Es() //  [R1]
         { []
         }
     {offset
       c93Es: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto c93Gj; else goto c93Gi;
       c93Gj: // global
           HpAlloc = 112;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c93Gi: // global
           I64[Hp - 104] = GHC.Int.I32#_con_info;
           _s92TS::I64 = I64[Sp + 16];
           I64[Hp - 96] = _s92TS::I64;
           I64[Hp - 88] = GHC.Base.Just_con_info;
           P64[Hp - 80] = Hp - 103;
           I64[Hp - 72] = sat_s92U7_info;
           I64[Hp - 56] = _s92TS::I64;
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = P64[Sp + 24];
           P64[Hp - 32] = Hp - 72;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = R1;
           P64[Hp - 8] = Hp - 86;
           P64[Hp] = P64[Sp + 32];
           R1 = (Hp + -47) & (-8);
           Sp = Sp + 40;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c93Es_info" {
     block_c93Es_info:
         const _c93Es;
         const 132;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.332972557 UTC

[section ""data" . Foreign.C.Error.errnoToIOError_closure" {
     Foreign.C.Error.errnoToIOError_closure:
         const Foreign.C.Error.errnoToIOError_info;
         const 0;
 },
 Foreign.C.Error.errnoToIOError_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c93Hd: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93He; else goto c93Hf;
       c93He: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.errnoToIOError_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93Hf: // global
           I64[Sp - 32] = block_c93Ha_info;
           R1 = R3;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u93Hj; else goto c93Hb;
       u93Hj: // global
           call _c93Ha(R1) args: 0, res: 0, upd: 0;
       c93Hb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.errnoToIOError_info" {
     Foreign.C.Error.errnoToIOError_info:
         const Foreign.C.Error.errnoToIOError_entry;
         const 0;
         const 12884901902;
         const 17179869208;
         const S932t_srt+16;
 },
 _c93Ha() //  [R1]
         { []
         }
     {offset
       c93Ha: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 32;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c93Ha_info" {
     block_c93Ha_info:
         const _c93Ha;
         const 3;
         const 4294967326;
         const S932t_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.339226874 UTC

[section ""data" . Foreign.C.Error.$wlvl_closure" {
     Foreign.C.Error.$wlvl_closure:
         const Foreign.C.Error.$wlvl_info;
         const 0;
 },
 sat_s92Un_entry() //  [R1]
         { []
         }
     {offset
       c93HF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c93HG; else goto c93HH;
       c93HG: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93HH: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R5 = GHC.Base.Nothing_closure+1;
           R4 = GHC.Base.Nothing_closure+1;
           R3 = I64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s92Un_info" {
     sat_s92Un_info:
         const sat_s92Un_entry;
         const 4294967297;
         const 4294967315;
         const S932t_srt+16;
 },
 sat_s92Uo_entry() //  [R1]
         { []
         }
     {offset
       c93HI: // global
           _s92Uo::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c93HJ; else goto c93HK;
       c93HK: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c93HM; else goto c93HL;
       c93HM: // global
           HpAlloc = 32;
           goto c93HJ;
       c93HJ: // global
           R1 = _s92Uo::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93HL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92Uo::P64;
           _s92Uk::P64 = P64[_s92Uo::P64 + 16];
           _s92Ul::I64 = I64[_s92Uo::P64 + 24];
           I64[Hp - 24] = sat_s92Un_info;
           P64[Hp - 8] = _s92Uk::P64;
           I64[Hp] = _s92Ul::I64;
           R2 = Hp - 24;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s92Uo_info" {
     sat_s92Uo_info:
         const sat_s92Uo_entry;
         const 4294967297;
         const 21474836499;
         const S932t_srt+16;
 },
 Foreign.C.Error.$wlvl_entry() //  [R2, R3]
         { []
         }
     {offset
       c93HN: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c93HR; else goto c93HQ;
       c93HR: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$wlvl_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93HQ: // global
           I64[Hp - 24] = sat_s92Uo_info;
           P64[Hp - 8] = R2;
           I64[Hp] = R3;
           R1 = Hp - 24;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.$wlvl_info" {
     Foreign.C.Error.$wlvl_info:
         const Foreign.C.Error.$wlvl_entry;
         const 0;
         const 55834574862;
         const 12884901902;
         const S932t_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.34632223 UTC

[section ""data" . Foreign.C.Error.throwErrno1_closure" {
     Foreign.C.Error.throwErrno1_closure:
         const Foreign.C.Error.throwErrno1_info;
         const 0;
 },
 Foreign.C.Error.throwErrno1_entry() //  [R2]
         { []
         }
     {offset
       c93Ib: // global
           (_s92Uu::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92Uu::I64));
           R2 = R2;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrno1_info" {
     Foreign.C.Error.throwErrno1_info:
         const Foreign.C.Error.throwErrno1_entry;
         const 0;
         const 4294967310;
         const 8589934597;
         const S932t_srt+40;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.35252729 UTC

[section ""data" . Foreign.C.Error.throwErrno_closure" {
     Foreign.C.Error.throwErrno_closure:
         const Foreign.C.Error.throwErrno_info;
         const 0;
 },
 Foreign.C.Error.throwErrno_entry() //  [R2]
         { []
         }
     {offset
       c93Im: // global
           R2 = R2;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrno_info" {
     Foreign.C.Error.throwErrno_info:
         const Foreign.C.Error.throwErrno_entry;
         const 0;
         const 4294967310;
         const 8589934597;
         const S932t_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.357073687 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf1_closure" {
     Foreign.C.Error.throwErrnoIf1_closure:
         const Foreign.C.Error.throwErrnoIf1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c93IF: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93IG; else goto c93IH;
       c93IG: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIf1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93IH: // global
           I64[Sp - 24] = block_c93Ix_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIf1_info" {
     Foreign.C.Error.throwErrnoIf1_info:
         const Foreign.C.Error.throwErrnoIf1_entry;
         const 0;
         const 12884901902;
         const 17179869207;
         const S932t_srt+48;
 },
 _c93Ix() //  [R1]
         { []
         }
     {offset
       c93Ix: // global
           I64[Sp] = block_c93Iz_info;
           R2 = R1;
           _s92UC::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s92UC::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c93Ix_info" {
     block_c93Ix_info:
         const _c93Ix;
         const 2;
         const 4294967326;
         const S932t_srt+48;
 },
 _c93Iz() //  [R1]
         { []
         }
     {offset
       c93Iz: // global
           if (R1 & 7 == 1) goto c93IC; else goto c93ID;
       c93IC: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93ID: // global
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c93Iz_info" {
     block_c93Iz_info:
         const _c93Iz;
         const 2;
         const 4294967326;
         const S932t_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.366230288 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf_closure" {
     Foreign.C.Error.throwErrnoIf_closure:
         const Foreign.C.Error.throwErrnoIf_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c93J7: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIf1_entry(R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIf_info" {
     Foreign.C.Error.throwErrnoIf_info:
         const Foreign.C.Error.throwErrnoIf_entry;
         const 0;
         const 4294967310;
         const 17179869207;
         const S932t_srt+56;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.370887644 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf_1_closure" {
     Foreign.C.Error.throwErrnoIf_1_closure:
         const Foreign.C.Error.throwErrnoIf_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf_1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c93Jq: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93Jr; else goto c93Js;
       c93Jr: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIf_1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93Js: // global
           I64[Sp - 24] = block_c93Ji_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIf_1_info" {
     Foreign.C.Error.throwErrnoIf_1_info:
         const Foreign.C.Error.throwErrnoIf_1_entry;
         const 0;
         const 38654705678;
         const 17179869207;
         const S932t_srt+40;
 },
 _c93Ji() //  [R1]
         { []
         }
     {offset
       c93Ji: // global
           _s92UE::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c93Jk_info;
           R2 = R1;
           R1 = _s92UE::P64;
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c93Ji_info" {
     block_c93Ji_info:
         const _c93Ji;
         const 2;
         const 4294967326;
         const S932t_srt+40;
 },
 _c93Jk() //  [R1]
         { []
         }
     {offset
       c93Jk: // global
           if (R1 & 7 == 1) goto c93Jn; else goto c93Jo;
       c93Jn: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93Jo: // global
           _s92UF::P64 = P64[Sp + 8];
           (_s92UP::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92UP::I64));
           R2 = _s92UF::P64;
           Sp = Sp + 16;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c93Jk_info" {
     block_c93Jk_info:
         const _c93Jk;
         const 1;
         const 4294967326;
         const S932t_srt+40;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.378457731 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf__closure" {
     Foreign.C.Error.throwErrnoIf__closure:
         const Foreign.C.Error.throwErrnoIf__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf__entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c93JU: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIf_1_entry(R4,
                                                     R3,
                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIf__info" {
     Foreign.C.Error.throwErrnoIf__info:
         const Foreign.C.Error.throwErrnoIf__entry;
         const 0;
         const 4294967310;
         const 17179869207;
         const S932t_srt+64;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.382348271 UTC

[section ""data" . sat_s92US_closure" {
     sat_s92US_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.384362571 UTC

[section ""data" . sat_s92UT_closure" {
     sat_s92UT_closure:
         const :_con_info;
         const sat_s92US_closure+1;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.38697043 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus2_closure" {
     Foreign.C.Error.throwErrnoIfMinus2_closure:
         const Foreign.C.Error.throwErrnoIfMinus2_info;
         const 0;
         const 0;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus2_entry() //  [R1]
         { []
         }
     {offset
       c93K9: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c93Ka; else goto c93Kb;
       c93Ka: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Kb: // global
           (_c93K6::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c93K6::I64 == 0) goto c93K8; else goto c93K7;
       c93K8: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c93K7: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c93K6::I64;
           R3 = sat_s92UT_closure+2;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus2_info" {
     Foreign.C.Error.throwErrnoIfMinus2_info:
         const Foreign.C.Error.throwErrnoIfMinus2_entry;
         const 0;
         const 4294967317;
         const S932t_srt+72;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.394054612 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1__closure" {
     Foreign.C.Error.throwErrnoIfMinus1__closure:
         const Foreign.C.Error.throwErrnoIfMinus1__info;
         const 0;
 },
 sat_s92UX_entry() //  [R1]
         { []
         }
     {offset
       c93Kv: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93Kw; else goto c93Kx;
       c93Kw: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Kx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s92UX_info" {
     sat_s92UX_info:
         const sat_s92UX_entry;
         const 1;
         const 4294967312;
         const S932t_srt+80;
 },
 ds_s92UW_entry() //  [R1]
         { []
         }
     {offset
       c93Ky: // global
           _s92UW::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93Kz; else goto c93KA;
       c93KA: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93KC; else goto c93KB;
       c93KC: // global
           HpAlloc = 24;
           goto c93Kz;
       c93Kz: // global
           R1 = _s92UW::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93KB: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92UW::P64;
           _s92UV::P64 = P64[_s92UW::P64 + 16];
           I64[Hp - 16] = sat_s92UX_info;
           P64[Hp] = _s92UV::P64;
           R2 = _s92UV::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_s92UW_info" {
     ds_s92UW_info:
         const ds_s92UW_entry;
         const 1;
         const 4294967312;
         const S932t_srt+80;
 },
 sat_s92Vb_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c93KQ: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c93KR; else goto c93KS;
       c93KR: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93KS: // global
           I64[Sp - 32] = block_c93KI_info;
           _s92UU::P64 = P64[R1 + 5];
           _s92UW::P64 = P64[R1 + 13];
           R1 = R3;
           P64[Sp - 24] = _s92UU::P64;
           P64[Sp - 16] = _s92UW::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s92Vb_info" {
     sat_s92Vb_info:
         const sat_s92Vb_entry;
         const 2;
         const 4294967307;
         const 12884901903;
         const S932t_srt+40;
 },
 _c93KI() //  [R1]
         { []
         }
     {offset
       c93KI: // global
           _s92UW::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c93KK_info;
           R2 = P64[Sp + 8];
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = R1;
           P64[Sp + 8] = _s92UW::P64;
           Sp = Sp - 8;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c93KI_info" {
     block_c93KI_info:
         const _c93KI;
         const 3;
         const 4294967326;
         const S932t_srt+40;
 },
 _c93KK() //  [R1]
         { []
         }
     {offset
       c93KK: // global
           if (R1 & 7 == 1) goto c93KN; else goto c93KO;
       c93KN: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93KO: // global
           _s92UY::P64 = P64[Sp + 8];
           (_s92V8::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92V8::I64));
           R2 = _s92UY::P64;
           Sp = Sp + 16;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c93KK_info" {
     block_c93KK_info:
         const _c93KK;
         const 1;
         const 4294967326;
         const S932t_srt+40;
 },
 Foreign.C.Error.throwErrnoIfMinus1__entry() //  [R2, R3]
         { []
         }
     {offset
       c93L2: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c93L6; else goto c93L5;
       c93L6: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93L5: // global
           I64[Hp - 40] = ds_s92UW_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92Vb_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 13;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus1__info" {
     Foreign.C.Error.throwErrnoIfMinus1__info:
         const Foreign.C.Error.throwErrnoIfMinus1__entry;
         const 0;
         const 416611827726;
         const 8589934607;
         const S932t_srt+40;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.408876627 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1_closure" {
     Foreign.C.Error.throwErrnoIfMinus1_closure:
         const Foreign.C.Error.throwErrnoIfMinus1_info;
         const 0;
 },
 sat_s92Vf_entry() //  [R1]
         { []
         }
     {offset
       c93LL: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93LM; else goto c93LN;
       c93LM: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93LN: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s92Vf_info" {
     sat_s92Vf_info:
         const sat_s92Vf_entry;
         const 1;
         const 4294967312;
         const S932t_srt+80;
 },
 ds_s92Ve_entry() //  [R1]
         { []
         }
     {offset
       c93LO: // global
           _s92Ve::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93LP; else goto c93LQ;
       c93LQ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93LS; else goto c93LR;
       c93LS: // global
           HpAlloc = 24;
           goto c93LP;
       c93LP: // global
           R1 = _s92Ve::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93LR: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92Ve::P64;
           _s92Vd::P64 = P64[_s92Ve::P64 + 16];
           I64[Hp - 16] = sat_s92Vf_info;
           P64[Hp] = _s92Vd::P64;
           R2 = _s92Vd::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_s92Ve_info" {
     ds_s92Ve_info:
         const ds_s92Ve_entry;
         const 1;
         const 4294967312;
         const S932t_srt+80;
 },
 sat_s92Vn_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c93M6: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c93M7; else goto c93M8;
       c93M7: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93M8: // global
           I64[Sp - 32] = block_c93LY_info;
           _s92Vc::P64 = P64[R1 + 5];
           _s92Ve::P64 = P64[R1 + 13];
           R1 = R3;
           P64[Sp - 24] = _s92Vc::P64;
           P64[Sp - 16] = _s92Ve::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s92Vn_info" {
     sat_s92Vn_info:
         const sat_s92Vn_entry;
         const 2;
         const 4294967307;
         const 12884901903;
         const S932t_srt+48;
 },
 _c93LY() //  [R1]
         { []
         }
     {offset
       c93LY: // global
           _s92Vc::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c93M0_info;
           R2 = _s92Vc::P64;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = R1;
           P64[Sp] = P64[Sp + 16];
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c93LY_info" {
     block_c93LY_info:
         const _c93LY;
         const 3;
         const 4294967326;
         const S932t_srt+48;
 },
 _c93M0() //  [R1]
         { []
         }
     {offset
       c93M0: // global
           if (R1 & 7 == 1) goto c93M3; else goto c93M4;
       c93M3: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93M4: // global
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c93M0_info" {
     block_c93M0_info:
         const _c93M0;
         const 2;
         const 4294967326;
         const S932t_srt+48;
 },
 Foreign.C.Error.throwErrnoIfMinus1_entry() //  [R2, R3]
         { []
         }
     {offset
       c93Mg: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c93Mk; else goto c93Mj;
       c93Mk: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93Mj: // global
           I64[Hp - 40] = ds_s92Ve_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92Vn_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 13;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus1_info" {
     Foreign.C.Error.throwErrnoIfMinus1_info:
         const Foreign.C.Error.throwErrnoIfMinus1_entry;
         const 0;
         const 347892350990;
         const 8589934607;
         const S932t_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.421410536 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNull1_closure" {
     Foreign.C.Error.throwErrnoIfNull1_closure:
         const Foreign.C.Error.throwErrnoIfNull1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNull1_entry() //  [R2, R3]
         { []
         }
     {offset
       c93MX: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93MY; else goto c93MZ;
       c93MY: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfNull1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93MZ: // global
           I64[Sp - 16] = block_c93MS_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfNull1_info" {
     Foreign.C.Error.throwErrnoIfNull1_info:
         const Foreign.C.Error.throwErrnoIfNull1_entry;
         const 0;
         const 554050781198;
         const 12884901903;
         const S932t_srt+48;
 },
 _c93MS() //  [R1]
         { []
         }
     {offset
       c93MS: // global
           I64[Sp - 8] = block_c93MU_info;
           _s92Vt::P64 = R1;
           R1 = R1;
           P64[Sp] = _s92Vt::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u93N9; else goto c93MV;
       u93N9: // global
           call _c93MU(R1) args: 0, res: 0, upd: 0;
       c93MV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c93MS_info" {
     block_c93MS_info:
         const _c93MS;
         const 1;
         const 4294967326;
         const S932t_srt+48;
 },
 _c93MU() //  [R1]
         { []
         }
     {offset
       c93MU: // global
           if (I64[R1 + 7] == 0) goto c93N8; else goto c93N7;
       c93N8: // global
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
       c93N7: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c93MU_info" {
     block_c93MU_info:
         const _c93MU;
         const 2;
         const 4294967326;
         const S932t_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.427894332 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNull_closure" {
     Foreign.C.Error.throwErrnoIfNull_closure:
         const Foreign.C.Error.throwErrnoIfNull_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNull_entry() //  [R2, R3]
         { []
         }
     {offset
       c93Nr: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfNull1_entry(R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfNull_info" {
     Foreign.C.Error.throwErrnoIfNull_info:
         const Foreign.C.Error.throwErrnoIfNull_entry;
         const 0;
         const 4294967310;
         const 12884901903;
         const S932t_srt+104;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.432407192 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry2_closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry2_closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry2_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c93NK: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c93NL; else goto u93Oa;
       c93NL: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u93Oa: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c93Nz() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus1Retry2_info" {
     Foreign.C.Error.throwErrnoIfMinus1Retry2_info:
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_entry;
         const 0;
         const 1103806595086;
         const 17179869207;
         const S932t_srt+48;
 },
 _c93Nz() //  []
         { []
         }
     {offset
       c93Nz: // global
           I64[Sp - 8] = block_c93NC_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93NC() //  [R1]
         { []
         }
     {offset
       c93NC: // global
           I64[Sp - 8] = block_c93NE_info;
           R2 = R1;
           _s92VD::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp] = _s92VD::P64;
           Sp = Sp - 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c93NC_info" {
     block_c93NC_info:
         const _c93NC;
         const 3;
         const 4294967326;
         const S932t_srt+48;
 },
 _c93NE() //  [R1]
         { []
         }
     {offset
       c93NE: // global
           if (R1 & 7 == 1) goto c93NH; else goto c93NI;
       c93NH: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93NI: // global
           _s92Vx::P64 = P64[Sp + 16];
           _s92Vy::P64 = P64[Sp + 24];
           _s92Vz::P64 = P64[Sp + 32];
           (_s92VI::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           if (%MO_SS_Conv_W64_W32(_s92VI::I64) == 4 :: W32) goto c93O6; else goto c93O0;
       c93O6: // global
           P64[Sp + 16] = _s92Vx::P64;
           P64[Sp + 24] = _s92Vy::P64;
           P64[Sp + 32] = _s92Vz::P64;
           Sp = Sp + 16;
           call _c93Nz() args: 0, res: 0, upd: 0;
       c93O0: // global
           R2 = _s92Vy::P64;
           Sp = Sp + 40;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c93NE_info" {
     block_c93NE_info:
         const _c93NE;
         const 4;
         const 4294967326;
         const S932t_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.441190922 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetry_closure" {
     Foreign.C.Error.throwErrnoIfRetry_closure:
         const Foreign.C.Error.throwErrnoIfRetry_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetry_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c93Oy: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfRetry_info" {
     Foreign.C.Error.throwErrnoIfRetry_info:
         const Foreign.C.Error.throwErrnoIfRetry_entry;
         const 0;
         const 4294967310;
         const 17179869207;
         const S932t_srt+112;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.444900873 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetry_1_closure" {
     Foreign.C.Error.throwErrnoIfRetry_1_closure:
         const Foreign.C.Error.throwErrnoIfRetry_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetry_1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c93OL: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c93OM; else goto c93ON;
       c93OM: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfRetry_1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93ON: // global
           I64[Sp - 8] = block_c93OJ_info;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfRetry_1_info" {
     Foreign.C.Error.throwErrnoIfRetry_1_info:
         const Foreign.C.Error.throwErrnoIfRetry_1_entry;
         const 0;
         const 12884901902;
         const 17179869207;
         const S932t_srt+112;
 },
 _c93OJ() //  []
         { []
         }
     {offset
       c93OJ: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c93OJ_info" {
     block_c93OJ_info:
         const _c93OJ;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.449826274 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetry__closure" {
     Foreign.C.Error.throwErrnoIfRetry__closure:
         const Foreign.C.Error.throwErrnoIfRetry__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetry__entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c93P2: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfRetry_1_entry(R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfRetry__info" {
     Foreign.C.Error.throwErrnoIfRetry__info:
         const Foreign.C.Error.throwErrnoIfRetry__entry;
         const 0;
         const 4294967310;
         const 17179869207;
         const S932t_srt+120;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.455600038 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry__closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry__closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry__info;
         const 0;
 },
 sat_s92VU_entry() //  [R1]
         { []
         }
     {offset
       c93Pl: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93Pm; else goto c93Pn;
       c93Pm: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Pn: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s92VU_info" {
     sat_s92VU_info:
         const sat_s92VU_entry;
         const 1;
         const 4294967312;
         const S932t_srt+80;
 },
 ds_s92VT_entry() //  [R1]
         { []
         }
     {offset
       c93Po: // global
           _s92VT::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93Pp; else goto c93Pq;
       c93Pq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93Ps; else goto c93Pr;
       c93Ps: // global
           HpAlloc = 24;
           goto c93Pp;
       c93Pp: // global
           R1 = _s92VT::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Pr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92VT::P64;
           _s92VS::P64 = P64[_s92VT::P64 + 16];
           I64[Hp - 16] = sat_s92VU_info;
           P64[Hp] = _s92VS::P64;
           R2 = _s92VS::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_s92VT_info" {
     ds_s92VT_info:
         const ds_s92VT_entry;
         const 1;
         const 4294967312;
         const S932t_srt+80;
 },
 pred_s92VV_entry() //  [R1, R2]
         { []
         }
     {offset
       c93Py: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93Pz; else goto c93PA;
       c93Pz: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c93PA: // global
           _s92VW::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s92VW::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . pred_s92VV_info" {
     pred_s92VV_info:
         const pred_s92VV_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_s92W3_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c93PI: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c93PJ; else goto c93PK;
       c93PJ: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93PK: // global
           I64[Sp - 8] = block_c93PG_info;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s92W3_info" {
     sat_s92W3_info:
         const sat_s92W3_entry;
         const 1;
         const 4294967305;
         const 12884901903;
         const S932t_srt+112;
 },
 _c93PG() //  []
         { []
         }
     {offset
       c93PG: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c93PG_info" {
     block_c93PG_info:
         const _c93PG;
         const 0;
         const 30;
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry__entry() //  [R2, R3]
         { []
         }
     {offset
       c93PM: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c93PQ; else goto c93PP;
       c93PQ: // global
           HpAlloc = 64;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93PP: // global
           I64[Hp - 56] = ds_s92VT_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = pred_s92VV_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = Hp - 56;
           I64[Hp - 8] = sat_s92W3_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 5;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus1Retry__info" {
     Foreign.C.Error.throwErrnoIfMinus1Retry__info:
         const Foreign.C.Error.throwErrnoIfMinus1Retry__entry;
         const 0;
         const 347892350990;
         const 8589934607;
         const S932t_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.468541025 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry1_closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry1_closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry1_info;
         const 0;
 },
 sat_s92W7_entry() //  [R1]
         { []
         }
     {offset
       c93Qw: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93Qx; else goto c93Qy;
       c93Qx: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Qy: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s92W7_info" {
     sat_s92W7_info:
         const sat_s92W7_entry;
         const 1;
         const 4294967312;
         const S932t_srt+80;
 },
 ds_s92W6_entry() //  [R1]
         { []
         }
     {offset
       c93Qz: // global
           _s92W6::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93QA; else goto c93QB;
       c93QB: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93QD; else goto c93QC;
       c93QD: // global
           HpAlloc = 24;
           goto c93QA;
       c93QA: // global
           R1 = _s92W6::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93QC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92W6::P64;
           _s92W5::P64 = P64[_s92W6::P64 + 16];
           I64[Hp - 16] = sat_s92W7_info;
           P64[Hp] = _s92W5::P64;
           R2 = _s92W5::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_s92W6_info" {
     ds_s92W6_info:
         const ds_s92W6_entry;
         const 1;
         const 4294967312;
         const S932t_srt+80;
 },
 sat_s92W9_entry() //  [R1, R2]
         { []
         }
     {offset
       c93QJ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93QK; else goto c93QL;
       c93QK: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c93QL: // global
           _s92W8::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s92W8::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s92W9_info" {
     sat_s92W9_info:
         const sat_s92W9_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry1_entry() //  [R2, R3]
         { []
         }
     {offset
       c93QM: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c93QQ; else goto c93QP;
       c93QQ: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93QP: // global
           I64[Hp - 40] = ds_s92W6_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92W9_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R2 = Hp - 15;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry2_closure+4;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus1Retry1_info" {
     Foreign.C.Error.throwErrnoIfMinus1Retry1_info:
         const Foreign.C.Error.throwErrnoIfMinus1Retry1_entry;
         const 0;
         const 622770257934;
         const 8589934607;
         const S932t_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.478011713 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry_closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry_closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry_entry() //  [R2, R3]
         { []
         }
     {offset
       c93Re: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1Retry1_entry(R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus1Retry_info" {
     Foreign.C.Error.throwErrnoIfMinus1Retry_info:
         const Foreign.C.Error.throwErrnoIfMinus1Retry_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S932t_srt+136;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.481744756 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetry2_closure" {
     Foreign.C.Error.throwErrnoIfNullRetry2_closure:
         const Foreign.C.Error.throwErrnoIfNullRetry2_info;
 },
 Foreign.C.Error.throwErrnoIfNullRetry2_entry() //  [R2]
         { []
         }
     {offset
       c93Rs: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c93Rt; else goto c93Ru;
       c93Rt: // global
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfNullRetry2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c93Ru: // global
           I64[Sp - 8] = block_c93Rp_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u93Rz; else goto c93Rq;
       u93Rz: // global
           call _c93Rp(R1) args: 0, res: 0, upd: 0;
       c93Rq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfNullRetry2_info" {
     Foreign.C.Error.throwErrnoIfNullRetry2_info:
         const Foreign.C.Error.throwErrnoIfNullRetry2_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c93Rp() //  [R1]
         { []
         }
     {offset
       c93Rp: // global
           R1 = I64[((I64[R1 + 7] == 0) << 3) + GHC.Types.Bool_closure_tbl];
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c93Rp_info" {
     block_c93Rp_info:
         const _c93Rp;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.486682519 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetry1_closure" {
     Foreign.C.Error.throwErrnoIfNullRetry1_closure:
         const Foreign.C.Error.throwErrnoIfNullRetry1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetry1_entry() //  [R2, R3]
         { []
         }
     {offset
       c93RQ: // global
           R4 = R3;
           R3 = R2;
           R2 = Foreign.C.Error.throwErrnoIfNullRetry2_closure+1;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfNullRetry1_info" {
     Foreign.C.Error.throwErrnoIfNullRetry1_info:
         const Foreign.C.Error.throwErrnoIfNullRetry1_entry;
         const 0;
         const 4294967310;
         const 12884901903;
         const S932t_srt+112;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.489975294 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetry_closure" {
     Foreign.C.Error.throwErrnoIfNullRetry_closure:
         const Foreign.C.Error.throwErrnoIfNullRetry_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetry_entry() //  [R2, R3]
         { []
         }
     {offset
       c93S1: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfNullRetry1_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfNullRetry_info" {
     Foreign.C.Error.throwErrnoIfNullRetry_info:
         const Foreign.C.Error.throwErrnoIfNullRetry_entry;
         const 0;
         const 4294967310;
         const 12884901903;
         const S932t_srt+144;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.494837258 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry() //  [R2,
                                                               R3, R4, R5]
         { []
         }
     {offset
       c93Sk: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c93Sl; else goto u93SU;
       c93Sl: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u93SU: // global
           P64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           call _c93S9() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_info" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_info:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry;
         const 0;
         const 35188667056142;
         const 21474836504;
         const S932t_srt+48;
 },
 _c93S9() //  []
         { []
         }
     {offset
       c93S9: // global
           I64[Sp - 8] = block_c93Sc_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93Sc() //  [R1]
         { []
         }
     {offset
       c93Sc: // global
           I64[Sp - 8] = block_c93Se_info;
           R2 = R1;
           _s92Wl::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp] = _s92Wl::P64;
           Sp = Sp - 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c93Sc_info" {
     block_c93Sc_info:
         const _c93Sc;
         const 4;
         const 4294967326;
         const S932t_srt+48;
 },
 _c93Se() //  [R1]
         { []
         }
     {offset
       c93Se: // global
           if (R1 & 7 == 1) goto c93Sh; else goto c93Si;
       c93Sh: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93Si: // global
           _s92We::P64 = P64[Sp + 16];
           _s92Wf::P64 = P64[Sp + 24];
           _s92Wg::P64 = P64[Sp + 32];
           _s92Wh::P64 = P64[Sp + 40];
           (_s92Wq::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           _s92Wr::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92Wq::I64));
           if (_s92Wr::I64 != 4) goto u93ST; else goto c93SG;
       u93ST: // global
           if (_s92Wr::I64 != 11) goto c93SA; else goto c93SP;
       c93SA: // global
           R2 = _s92Wf::P64;
           Sp = Sp + 48;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
       c93SP: // global
           I64[Sp + 8] = block_c93SO_info;
           R1 = _s92Wh::P64;
           Sp = Sp + 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
       c93SG: // global
           P64[Sp + 16] = _s92We::P64;
           P64[Sp + 24] = _s92Wf::P64;
           P64[Sp + 32] = _s92Wg::P64;
           P64[Sp + 40] = _s92Wh::P64;
           Sp = Sp + 16;
           call _c93S9() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c93Se_info" {
     block_c93Se_info:
         const _c93Se;
         const 5;
         const 4294967326;
         const S932t_srt+48;
 },
 _c93SO() //  []
         { []
         }
     {offset
       c93SO: // global
           P64[Sp + 8] = P64[Sp + 8];
           P64[Sp + 16] = P64[Sp + 16];
           P64[Sp + 24] = P64[Sp + 24];
           P64[Sp + 32] = P64[Sp + 32];
           Sp = Sp + 8;
           call _c93S9() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c93SO_info" {
     block_c93SO_info:
         const _c93SO;
         const 4;
         const 4294967326;
         const S932t_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.504015566 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetryMayBlock_closure" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock_closure:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetryMayBlock_entry() //  [R2, R3, R4,
                                                        R5]
         { []
         }
     {offset
       c93Tr: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfRetryMayBlock_info" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock_info:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_entry;
         const 0;
         const 4294967310;
         const 21474836504;
         const S932t_srt+152;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.507983677 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetryMayBlock_1_entry() //  [R2, R3,
                                                          R4, R5]
         { []
         }
     {offset
       c93TE: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c93TF; else goto c93TG;
       c93TF: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93TG: // global
           I64[Sp - 8] = block_c93TC_info;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfRetryMayBlock_1_info" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock_1_info:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_1_entry;
         const 0;
         const 12884901902;
         const 21474836504;
         const S932t_srt+152;
 },
 _c93TC() //  []
         { []
         }
     {offset
       c93TC: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c93TC_info" {
     block_c93TC_info:
         const _c93TC;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.513518889 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetryMayBlock__closure" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock__closure:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetryMayBlock__entry() //  [R2, R3, R4,
                                                         R5]
         { []
         }
     {offset
       c93TV: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfRetryMayBlock_1_entry(R5,
                                                                  R4,
                                                                  R3,
                                                                  R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfRetryMayBlock__info" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock__info:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock__entry;
         const 0;
         const 4294967310;
         const 21474836504;
         const S932t_srt+160;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.519725835 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__info;
         const 0;
 },
 sat_s92WG_entry() //  [R1]
         { []
         }
     {offset
       c93Ue: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93Uf; else goto c93Ug;
       c93Uf: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Ug: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s92WG_info" {
     sat_s92WG_info:
         const sat_s92WG_entry;
         const 1;
         const 4294967312;
         const S932t_srt+80;
 },
 ds_s92WF_entry() //  [R1]
         { []
         }
     {offset
       c93Uh: // global
           _s92WF::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93Ui; else goto c93Uj;
       c93Uj: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93Ul; else goto c93Uk;
       c93Ul: // global
           HpAlloc = 24;
           goto c93Ui;
       c93Ui: // global
           R1 = _s92WF::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Uk: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92WF::P64;
           _s92WE::P64 = P64[_s92WF::P64 + 16];
           I64[Hp - 16] = sat_s92WG_info;
           P64[Hp] = _s92WE::P64;
           R2 = _s92WE::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_s92WF_info" {
     ds_s92WF_info:
         const ds_s92WF_entry;
         const 1;
         const 4294967312;
         const S932t_srt+80;
 },
 pred_s92WH_entry() //  [R1, R2]
         { []
         }
     {offset
       c93Ur: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93Us; else goto c93Ut;
       c93Us: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c93Ut: // global
           _s92WI::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s92WI::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . pred_s92WH_info" {
     pred_s92WH_info:
         const pred_s92WH_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_s92WQ_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c93UB: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c93UC; else goto c93UD;
       c93UC: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93UD: // global
           I64[Sp - 8] = block_c93Uz_info;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 4];
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s92WQ_info" {
     sat_s92WQ_info:
         const sat_s92WQ_entry;
         const 1;
         const 4294967305;
         const 17179869207;
         const S932t_srt+152;
 },
 _c93Uz() //  []
         { []
         }
     {offset
       c93Uz: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c93Uz_info" {
     block_c93Uz_info:
         const _c93Uz;
         const 0;
         const 30;
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__entry() //  [R2,
                                                               R3]
         { []
         }
     {offset
       c93UF: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c93UJ; else goto c93UI;
       c93UJ: // global
           HpAlloc = 64;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93UI: // global
           I64[Hp - 56] = ds_s92WF_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = pred_s92WH_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = Hp - 56;
           I64[Hp - 8] = sat_s92WQ_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 4;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__info" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__info:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__entry;
         const 0;
         const 10999411245070;
         const 8589934607;
         const S932t_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.532728128 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_info;
         const 0;
 },
 sat_s92WU_entry() //  [R1]
         { []
         }
     {offset
       c93Vp: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93Vq; else goto c93Vr;
       c93Vq: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Vr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s92WU_info" {
     sat_s92WU_info:
         const sat_s92WU_entry;
         const 1;
         const 4294967312;
         const S932t_srt+80;
 },
 ds_s92WT_entry() //  [R1]
         { []
         }
     {offset
       c93Vs: // global
           _s92WT::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93Vt; else goto c93Vu;
       c93Vu: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93Vw; else goto c93Vv;
       c93Vw: // global
           HpAlloc = 24;
           goto c93Vt;
       c93Vt: // global
           R1 = _s92WT::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Vv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92WT::P64;
           _s92WS::P64 = P64[_s92WT::P64 + 16];
           I64[Hp - 16] = sat_s92WU_info;
           P64[Hp] = _s92WS::P64;
           R2 = _s92WS::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_s92WT_info" {
     ds_s92WT_info:
         const ds_s92WT_entry;
         const 1;
         const 4294967312;
         const S932t_srt+80;
 },
 sat_s92WW_entry() //  [R1, R2]
         { []
         }
     {offset
       c93VC: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93VD; else goto c93VE;
       c93VD: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c93VE: // global
           _s92WV::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s92WV::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s92WW_info" {
     sat_s92WW_info:
         const sat_s92WW_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_entry() //  [R2,
                                                               R3]
         { []
         }
     {offset
       c93VF: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c93VJ; else goto c93VI;
       c93VJ: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93VI: // global
           I64[Hp - 40] = ds_s92WT_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92WW_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R2 = Hp - 15;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure+5;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_info" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_info:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_entry;
         const 0;
         const 19795504267278;
         const 8589934607;
         const S932t_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.54168802 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_entry() //  [R2,
                                                              R3]
         { []
         }
     {offset
       c93W7: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_entry(R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_info" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_info:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S932t_srt+176;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.545052913 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_closure" {
     Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_closure:
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_entry() //  [R2, R3,
                                                             R4]
         { []
         }
     {offset
       c93Wi: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = Foreign.C.Error.throwErrnoIfNullRetry2_closure+1;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_info" {
     Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_info:
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_entry;
         const 0;
         const 4294967310;
         const 17179869207;
         const S932t_srt+152;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.549387113 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetryMayBlock_closure" {
     Foreign.C.Error.throwErrnoIfNullRetryMayBlock_closure:
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetryMayBlock_entry() //  [R2, R3,
                                                            R4]
         { []
         }
     {offset
       c93Wt: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_entry(R4,
                                                                     R3,
                                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfNullRetryMayBlock_info" {
     Foreign.C.Error.throwErrnoIfNullRetryMayBlock_info:
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock_entry;
         const 0;
         const 4294967310;
         const 17179869207;
         const S932t_srt+184;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.554012311 UTC

[section ""data" . Foreign.C.Error.$wlvl1_closure" {
     Foreign.C.Error.$wlvl1_closure:
         const Foreign.C.Error.$wlvl1_info;
         const 0;
 },
 sat_s92X2_entry() //  [R1]
         { []
         }
     {offset
       c93WN: // global
           _s92X2::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c93WO; else goto c93WP;
       c93WP: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c93WR; else goto c93WQ;
       c93WR: // global
           HpAlloc = 16;
           goto c93WO;
       c93WO: // global
           R1 = _s92X2::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93WQ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92X2::P64;
           _s92WX::P64 = P64[_s92X2::P64 + 16];
           _s92WZ::P64 = P64[_s92X2::P64 + 24];
           _s92WY::I64 = I64[_s92X2::P64 + 32];
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = _s92WZ::P64;
           R5 = Hp - 6;
           R4 = GHC.Base.Nothing_closure+1;
           R3 = _s92WY::I64;
           R2 = _s92WX::P64;
           Sp = Sp - 16;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s92X2_info" {
     sat_s92X2_info:
         const sat_s92X2_entry;
         const 4294967298;
         const 4294967311;
         const S932t_srt+16;
 },
 sat_s92X3_entry() //  [R1]
         { []
         }
     {offset
       c93WS: // global
           _s92X3::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c93WT; else goto c93WU;
       c93WU: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c93WW; else goto c93WV;
       c93WW: // global
           HpAlloc = 40;
           goto c93WT;
       c93WT: // global
           R1 = _s92X3::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93WV: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92X3::P64;
           _s92WX::P64 = P64[_s92X3::P64 + 16];
           _s92WZ::P64 = P64[_s92X3::P64 + 24];
           _s92WY::I64 = I64[_s92X3::P64 + 32];
           I64[Hp - 32] = sat_s92X2_info;
           P64[Hp - 16] = _s92WX::P64;
           P64[Hp - 8] = _s92WZ::P64;
           I64[Hp] = _s92WY::I64;
           R2 = Hp - 32;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s92X3_info" {
     sat_s92X3_info:
         const sat_s92X3_entry;
         const 4294967298;
         const 21474836495;
         const S932t_srt+16;
 },
 Foreign.C.Error.$wlvl1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c93WX: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c93X1; else goto c93X0;
       c93X1: // global
           HpAlloc = 40;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$wlvl1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93X0: // global
           I64[Hp - 32] = sat_s92X3_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R4;
           I64[Hp] = R3;
           R1 = Hp - 32;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.$wlvl1_info" {
     Foreign.C.Error.$wlvl1_info:
         const Foreign.C.Error.$wlvl1_entry;
         const 0;
         const 18014419984318478;
         const 17179869205;
         const S932t_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.561417056 UTC

[section ""data" . Foreign.C.Error.throwErrnoPath1_closure" {
     Foreign.C.Error.throwErrnoPath1_closure:
         const Foreign.C.Error.throwErrnoPath1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPath1_entry() //  [R2, R3]
         { []
         }
     {offset
       c93Xl: // global
           _s92X5::P64 = R3;
           (_s92Xa::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R4 = _s92X5::P64;
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92Xa::I64));
           R2 = R2;
           call Foreign.C.Error.$wlvl1_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoPath1_info" {
     Foreign.C.Error.throwErrnoPath1_info:
         const Foreign.C.Error.throwErrnoPath1_entry;
         const 0;
         const 4294967310;
         const 12884901903;
         const S932t_srt+192;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.564940296 UTC

[section ""data" . Foreign.C.Error.throwErrnoPath_closure" {
     Foreign.C.Error.throwErrnoPath_closure:
         const Foreign.C.Error.throwErrnoPath_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPath_entry() //  [R2, R3]
         { []
         }
     {offset
       c93Xw: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoPath_info" {
     Foreign.C.Error.throwErrnoPath_info:
         const Foreign.C.Error.throwErrnoPath_entry;
         const 0;
         const 4294967310;
         const 12884901903;
         const S932t_srt+200;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.569122681 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf1_closure" {
     Foreign.C.Error.throwErrnoPathIf1_closure:
         const Foreign.C.Error.throwErrnoPathIf1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf1_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c93XP: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93XQ; else goto c93XR;
       c93XQ: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIf1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93XR: // global
           I64[Sp - 32] = block_c93XH_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoPathIf1_info" {
     Foreign.C.Error.throwErrnoPathIf1_info:
         const Foreign.C.Error.throwErrnoPathIf1_entry;
         const 0;
         const 12884901902;
         const 21474836504;
         const S932t_srt+200;
 },
 _c93XH() //  [R1]
         { []
         }
     {offset
       c93XH: // global
           I64[Sp] = block_c93XJ_info;
           R2 = R1;
           _s92Xj::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s92Xj::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c93XH_info" {
     block_c93XH_info:
         const _c93XH;
         const 3;
         const 4294967326;
         const S932t_srt+200;
 },
 _c93XJ() //  [R1]
         { []
         }
     {offset
       c93XJ: // global
           if (R1 & 7 == 1) goto c93XM; else goto c93XN;
       c93XM: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93XN: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c93XJ_info" {
     block_c93XJ_info:
         const _c93XJ;
         const 3;
         const 4294967326;
         const S932t_srt+200;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.576061535 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf_closure" {
     Foreign.C.Error.throwErrnoPathIf_closure:
         const Foreign.C.Error.throwErrnoPathIf_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c93Yh: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPathIf1_entry(R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoPathIf_info" {
     Foreign.C.Error.throwErrnoPathIf_info:
         const Foreign.C.Error.throwErrnoPathIf_entry;
         const 0;
         const 4294967310;
         const 21474836504;
         const S932t_srt+208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.580312507 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf_1_closure" {
     Foreign.C.Error.throwErrnoPathIf_1_closure:
         const Foreign.C.Error.throwErrnoPathIf_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf_1_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c93YA: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93YB; else goto c93YC;
       c93YB: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIf_1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93YC: // global
           I64[Sp - 32] = block_c93Ys_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoPathIf_1_info" {
     Foreign.C.Error.throwErrnoPathIf_1_info:
         const Foreign.C.Error.throwErrnoPathIf_1_entry;
         const 0;
         const 38654705678;
         const 21474836504;
         const S932t_srt+192;
 },
 _c93Ys() //  [R1]
         { []
         }
     {offset
       c93Ys: // global
           _s92Xl::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c93Yu_info;
           R2 = R1;
           R1 = _s92Xl::P64;
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c93Ys_info" {
     block_c93Ys_info:
         const _c93Ys;
         const 3;
         const 4294967326;
         const S932t_srt+192;
 },
 _c93Yu() //  [R1]
         { []
         }
     {offset
       c93Yu: // global
           if (R1 & 7 == 1) goto c93Yx; else goto c93Yy;
       c93Yx: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93Yy: // global
           _s92Xm::P64 = P64[Sp + 8];
           _s92Xn::P64 = P64[Sp + 16];
           (_s92Xx::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R4 = _s92Xn::P64;
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92Xx::I64));
           R2 = _s92Xm::P64;
           Sp = Sp + 24;
           call Foreign.C.Error.$wlvl1_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c93Yu_info" {
     block_c93Yu_info:
         const _c93Yu;
         const 2;
         const 4294967326;
         const S932t_srt+192;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.588250601 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf__closure" {
     Foreign.C.Error.throwErrnoPathIf__closure:
         const Foreign.C.Error.throwErrnoPathIf__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf__entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c93Z4: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPathIf_1_entry(R5,
                                                         R4,
                                                         R3,
                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoPathIf__info" {
     Foreign.C.Error.throwErrnoPathIf__info:
         const Foreign.C.Error.throwErrnoPathIf__entry;
         const 0;
         const 4294967310;
         const 21474836504;
         const S932t_srt+216;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.593774991 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfMinus1__closure" {
     Foreign.C.Error.throwErrnoPathIfMinus1__closure:
         const Foreign.C.Error.throwErrnoPathIfMinus1__info;
         const 0;
 },
 sat_s92XD_entry() //  [R1]
         { []
         }
     {offset
       c93Zn: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93Zo; else goto c93Zp;
       c93Zo: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Zp: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s92XD_info" {
     sat_s92XD_info:
         const sat_s92XD_entry;
         const 1;
         const 4294967312;
         const S932t_srt+80;
 },
 ds_s92XC_entry() //  [R1]
         { []
         }
     {offset
       c93Zq: // global
           _s92XC::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93Zr; else goto c93Zs;
       c93Zs: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93Zu; else goto c93Zt;
       c93Zu: // global
           HpAlloc = 24;
           goto c93Zr;
       c93Zr: // global
           R1 = _s92XC::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Zt: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92XC::P64;
           _s92XB::P64 = P64[_s92XC::P64 + 16];
           I64[Hp - 16] = sat_s92XD_info;
           P64[Hp] = _s92XB::P64;
           R2 = _s92XB::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_s92XC_info" {
     ds_s92XC_info:
         const ds_s92XC_entry;
         const 1;
         const 4294967312;
         const S932t_srt+80;
 },
 sat_s92XS_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c93ZI: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c93ZJ; else goto c93ZK;
       c93ZJ: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93ZK: // global
           I64[Sp - 40] = block_c93ZA_info;
           _s92XA::P64 = P64[R1 + 4];
           _s92XC::P64 = P64[R1 + 12];
           R1 = R4;
           P64[Sp - 32] = _s92XA::P64;
           P64[Sp - 24] = _s92XC::P64;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 40;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s92XS_info" {
     sat_s92XS_info:
         const sat_s92XS_entry;
         const 2;
         const 4294967307;
         const 17179869207;
         const S932t_srt+192;
 },
 _c93ZA() //  [R1]
         { []
         }
     {offset
       c93ZA: // global
           _s92XC::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c93ZC_info;
           R2 = P64[Sp + 8];
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = R1;
           P64[Sp + 8] = _s92XC::P64;
           Sp = Sp - 8;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c93ZA_info" {
     block_c93ZA_info:
         const _c93ZA;
         const 4;
         const 4294967326;
         const S932t_srt+192;
 },
 _c93ZC() //  [R1]
         { []
         }
     {offset
       c93ZC: // global
           if (R1 & 7 == 1) goto c93ZF; else goto c93ZG;
       c93ZF: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93ZG: // global
           _s92XE::P64 = P64[Sp + 8];
           _s92XF::P64 = P64[Sp + 16];
           (_s92XP::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R4 = _s92XF::P64;
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92XP::I64));
           R2 = _s92XE::P64;
           Sp = Sp + 24;
           call Foreign.C.Error.$wlvl1_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c93ZC_info" {
     block_c93ZC_info:
         const _c93ZC;
         const 2;
         const 4294967326;
         const S932t_srt+192;
 },
 Foreign.C.Error.throwErrnoPathIfMinus1__entry() //  [R2, R3]
         { []
         }
     {offset
       c93ZU: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c93ZY; else goto c93ZX;
       c93ZY: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIfMinus1__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93ZX: // global
           I64[Hp - 40] = ds_s92XC_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92XS_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 12;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoPathIfMinus1__info" {
     Foreign.C.Error.throwErrnoPathIfMinus1__info:
         const Foreign.C.Error.throwErrnoPathIfMinus1__entry;
         const 0;
         const 1196272945987598;
         const 8589934607;
         const S932t_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.606807009 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfNull1_closure" {
     Foreign.C.Error.throwErrnoPathIfNull1_closure:
         const Foreign.C.Error.throwErrnoPathIfNull1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIfNull1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c940A: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c940B; else goto c940C;
       c940B: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIfNull1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c940C: // global
           I64[Sp - 24] = block_c940v_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoPathIfNull1_info" {
     Foreign.C.Error.throwErrnoPathIfNull1_info:
         const Foreign.C.Error.throwErrnoPathIfNull1_entry;
         const 0;
         const 73014444046;
         const 17179869207;
         const S932t_srt+200;
 },
 _c940v() //  [R1]
         { []
         }
     {offset
       c940v: // global
           I64[Sp - 8] = block_c940x_info;
           _s92XZ::P64 = R1;
           R1 = R1;
           P64[Sp] = _s92XZ::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u940M; else goto c940y;
       u940M: // global
           call _c940x(R1) args: 0, res: 0, upd: 0;
       c940y: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c940v_info" {
     block_c940v_info:
         const _c940v;
         const 2;
         const 4294967326;
         const S932t_srt+200;
 },
 _c940x() //  [R1]
         { []
         }
     {offset
       c940x: // global
           if (I64[R1 + 7] == 0) goto c940L; else goto c940K;
       c940L: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
       c940K: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c940x_info" {
     block_c940x_info:
         const _c940x;
         const 3;
         const 4294967326;
         const S932t_srt+200;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.613634202 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfNull_closure" {
     Foreign.C.Error.throwErrnoPathIfNull_closure:
         const Foreign.C.Error.throwErrnoPathIfNull_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIfNull_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c9414: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPathIfNull1_entry(R4,
                                                            R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoPathIfNull_info" {
     Foreign.C.Error.throwErrnoPathIfNull_info:
         const Foreign.C.Error.throwErrnoPathIfNull_entry;
         const 0;
         const 4294967310;
         const 17179869207;
         const S932t_srt+232;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.619343759 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfMinus1_closure" {
     Foreign.C.Error.throwErrnoPathIfMinus1_closure:
         const Foreign.C.Error.throwErrnoPathIfMinus1_info;
         const 0;
 },
 sat_s92Y6_entry() //  [R1]
         { []
         }
     {offset
       c941n: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c941o; else goto c941p;
       c941o: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c941p: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s92Y6_info" {
     sat_s92Y6_info:
         const sat_s92Y6_entry;
         const 1;
         const 4294967312;
         const S932t_srt+80;
 },
 ds_s92Y5_entry() //  [R1]
         { []
         }
     {offset
       c941q: // global
           _s92Y5::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c941r; else goto c941s;
       c941s: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c941u; else goto c941t;
       c941u: // global
           HpAlloc = 24;
           goto c941r;
       c941r: // global
           R1 = _s92Y5::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c941t: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92Y5::P64;
           _s92Y4::P64 = P64[_s92Y5::P64 + 16];
           I64[Hp - 16] = sat_s92Y6_info;
           P64[Hp] = _s92Y4::P64;
           R2 = _s92Y4::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_s92Y5_info" {
     ds_s92Y5_info:
         const ds_s92Y5_entry;
         const 1;
         const 4294967312;
         const S932t_srt+80;
 },
 sat_s92Yf_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c941I: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c941J; else goto c941K;
       c941J: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c941K: // global
           I64[Sp - 40] = block_c941A_info;
           _s92Y3::P64 = P64[R1 + 4];
           _s92Y5::P64 = P64[R1 + 12];
           R1 = R4;
           P64[Sp - 32] = _s92Y3::P64;
           P64[Sp - 24] = _s92Y5::P64;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 40;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s92Yf_info" {
     sat_s92Yf_info:
         const sat_s92Yf_entry;
         const 2;
         const 4294967307;
         const 17179869207;
         const S932t_srt+200;
 },
 _c941A() //  [R1]
         { []
         }
     {offset
       c941A: // global
           _s92Y3::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c941C_info;
           R2 = _s92Y3::P64;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = R1;
           P64[Sp] = P64[Sp + 16];
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c941A_info" {
     block_c941A_info:
         const _c941A;
         const 4;
         const 4294967326;
         const S932t_srt+200;
 },
 _c941C() //  [R1]
         { []
         }
     {offset
       c941C: // global
           if (R1 & 7 == 1) goto c941F; else goto c941G;
       c941F: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c941G: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c941C_info" {
     block_c941C_info:
         const _c941C;
         const 3;
         const 4294967326;
         const S932t_srt+200;
 },
 Foreign.C.Error.throwErrnoPathIfMinus1_entry() //  [R2, R3]
         { []
         }
     {offset
       c941S: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c941W; else goto c941V;
       c941W: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIfMinus1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c941V: // global
           I64[Hp - 40] = ds_s92Y5_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92Yf_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 12;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoPathIfMinus1_info" {
     Foreign.C.Error.throwErrnoPathIfMinus1_info:
         const Foreign.C.Error.throwErrnoPathIfMinus1_entry;
         const 0;
         const 4644341410693134;
         const 8589934607;
         const S932t_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:12.632222639 UTC

[section ""relreadonly" . S932t_srt" {
     S932t_srt:
         const GHC.IO.Encoding.getForeignEncoding_closure;
         const GHC.Foreign.$wpeekCString_closure;
         const Foreign.C.Error.$werrnoToIOError_closure;
         const Foreign.C.Error.errnoToIOError_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const Foreign.C.Error.$wlvl_closure;
         const Foreign.C.Error.throwErrno1_closure;
         const Foreign.C.Error.throwErrnoIf1_closure;
         const Foreign.C.Error.throwErrnoIf_1_closure;
         const sat_s92UT_closure;
         const Foreign.C.Error.throwErrnoIfMinus2_closure;
         const Foreign.C.Error.throwErrnoIfMinus1__closure;
         const Foreign.C.Error.throwErrnoIfMinus1_closure;
         const Foreign.C.Error.throwErrnoIfNull1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
         const Foreign.C.Error.throwErrnoIfRetry_1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry__closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry1_closure;
         const Foreign.C.Error.throwErrnoIfNullRetry1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure;
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure;
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure;
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_closure;
         const Foreign.C.Error.$wlvl1_closure;
         const Foreign.C.Error.throwErrnoPath1_closure;
         const Foreign.C.Error.throwErrnoPathIf1_closure;
         const Foreign.C.Error.throwErrnoPathIf_1_closure;
         const Foreign.C.Error.throwErrnoPathIfMinus1__closure;
         const Foreign.C.Error.throwErrnoPathIfNull1_closure;
         const Foreign.C.Error.throwErrnoPathIfMinus1_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.779200767 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:04:13.780366763 UTC

[section ""cstring" . Foreign.C.Error.$trModule4_bytes" {
     Foreign.C.Error.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.782256321 UTC

[section ""data" . Foreign.C.Error.$trModule3_closure" {
     Foreign.C.Error.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.784085079 UTC

[section ""cstring" . Foreign.C.Error.$trModule2_bytes" {
     Foreign.C.Error.$trModule2_bytes:
         I8[] [70,111,114,101,105,103,110,46,67,46,69,114,114,111,114]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.785843879 UTC

[section ""data" . Foreign.C.Error.$trModule1_closure" {
     Foreign.C.Error.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.788031666 UTC

[section ""data" . Foreign.C.Error.$trModule_closure" {
     Foreign.C.Error.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Foreign.C.Error.$trModule3_closure+1;
         const Foreign.C.Error.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.789785044 UTC

[section ""data" . $krep_r92Th_closure" {
     $krep_r92Th_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Foreign.C.Types.$tcCInt_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.79146371 UTC

[section ""cstring" . Foreign.C.Error.$tcErrno2_bytes" {
     Foreign.C.Error.$tcErrno2_bytes:
         I8[] [69,114,114,110,111]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.793147158 UTC

[section ""data" . Foreign.C.Error.$tcErrno1_closure" {
     Foreign.C.Error.$tcErrno1_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$tcErrno2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.794975721 UTC

[section ""data" . Foreign.C.Error.$tcErrno_closure" {
     Foreign.C.Error.$tcErrno_closure:
         const GHC.Types.TyCon_con_info;
         const Foreign.C.Error.$trModule_closure+1;
         const Foreign.C.Error.$tcErrno1_closure+1;
         const GHC.Types.krep$*_closure;
         const 9614618910057470603;
         const 5790003468206630810;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.796761437 UTC

[section ""data" . $krep1_r92Ti_closure" {
     $krep1_r92Ti_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Foreign.C.Error.$tcErrno_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.798495446 UTC

[section ""data" . Foreign.C.Error.$tc'Errno1_closure" {
     Foreign.C.Error.$tc'Errno1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r92Th_closure+1;
         const $krep1_r92Ti_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.800250057 UTC

[section ""cstring" . Foreign.C.Error.$tc'Errno3_bytes" {
     Foreign.C.Error.$tc'Errno3_bytes:
         I8[] [39,69,114,114,110,111]
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.801963242 UTC

[section ""data" . Foreign.C.Error.$tc'Errno2_closure" {
     Foreign.C.Error.$tc'Errno2_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$tc'Errno3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.804197903 UTC

[section ""data" . Foreign.C.Error.$tc'Errno_closure" {
     Foreign.C.Error.$tc'Errno_closure:
         const GHC.Types.TyCon_con_info;
         const Foreign.C.Error.$trModule_closure+1;
         const Foreign.C.Error.$tc'Errno2_closure+1;
         const Foreign.C.Error.$tc'Errno1_closure+4;
         const 18175500743799072511;
         const 6332857689812514354;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.80666925 UTC

[section ""data" . Foreign.C.Error.getErrno1_closure" {
     Foreign.C.Error.getErrno1_closure:
         const Foreign.C.Error.getErrno1_info;
 },
 Foreign.C.Error.getErrno1_entry() //  []
         { []
         }
     {offset
       c947I: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c947O; else goto c947N;
       c947O: // global
           HpAlloc = 16;
           R1 = Foreign.C.Error.getErrno1_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c947N: // global
           (_s942v::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s942v::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.getErrno1_info" {
     Foreign.C.Error.getErrno1_info:
         const Foreign.C.Error.getErrno1_entry;
         const 0;
         const 14;
         const 4294967299;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.810998712 UTC

[section ""data" . Foreign.C.Error.getErrno_closure" {
     Foreign.C.Error.getErrno_closure:
         const Foreign.C.Error.getErrno_info;
 },
 Foreign.C.Error.getErrno_entry() //  []
         { []
         }
     {offset
       c9480: // global
           call Foreign.C.Error.getErrno1_entry() args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.getErrno_info" {
     Foreign.C.Error.getErrno_info:
         const Foreign.C.Error.getErrno_entry;
         const 0;
         const 14;
         const 4294967299;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.81439136 UTC

[section ""data" . Foreign.C.Error.resetErrno1_closure" {
     Foreign.C.Error.resetErrno1_closure:
         const Foreign.C.Error.resetErrno1_info;
 },
 Foreign.C.Error.resetErrno1_entry() //  []
         { []
         }
     {offset
       c948d: // global
           call "ccall" arg hints:  [‘signed’]  result hints:  [] __hscore_set_errno(0);
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.resetErrno1_info" {
     Foreign.C.Error.resetErrno1_info:
         const Foreign.C.Error.resetErrno1_entry;
         const 0;
         const 14;
         const 4294967299;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.817810294 UTC

[section ""data" . Foreign.C.Error.resetErrno_closure" {
     Foreign.C.Error.resetErrno_closure:
         const Foreign.C.Error.resetErrno_info;
 },
 Foreign.C.Error.resetErrno_entry() //  []
         { []
         }
     {offset
       c948q: // global
           call Foreign.C.Error.resetErrno1_entry() args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.resetErrno_info" {
     Foreign.C.Error.resetErrno_info:
         const Foreign.C.Error.resetErrno_entry;
         const 0;
         const 14;
         const 4294967299;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.822711704 UTC

[section ""data" . Foreign.C.Error.isValidErrno_closure" {
     Foreign.C.Error.isValidErrno_closure:
         const Foreign.C.Error.isValidErrno_info;
 },
 Foreign.C.Error.isValidErrno_entry() //  [R2]
         { []
         }
     {offset
       c948E: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c948F; else goto c948G;
       c948F: // global
           R2 = R2;
           R1 = Foreign.C.Error.isValidErrno_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c948G: // global
           I64[Sp - 8] = block_c948B_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u948O; else goto c948C;
       u948O: // global
           call _c948B(R1) args: 0, res: 0, upd: 0;
       c948C: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.isValidErrno_info" {
     Foreign.C.Error.isValidErrno_info:
         const Foreign.C.Error.isValidErrno_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c948B() //  [R1]
         { []
         }
     {offset
       c948B: // global
           if (I64[R1 + 7] == (-1)) goto c948N; else goto c948M;
       c948N: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c948M: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c948B_info" {
     block_c948B_info:
         const _c948B;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.828960096 UTC

[section ""data" . Foreign.C.Error.$fEqErrno_$c==_closure" {
     Foreign.C.Error.$fEqErrno_$c==_closure:
         const Foreign.C.Error.$fEqErrno_$c==_info;
 },
 Foreign.C.Error.$fEqErrno_$c==_entry() //  [R2, R3]
         { []
         }
     {offset
       c949a: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c949b; else goto c949c;
       c949b: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$fEqErrno_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c949c: // global
           I64[Sp - 16] = block_c9497_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u949B; else goto c9498;
       u949B: // global
           call _c9497(R1) args: 0, res: 0, upd: 0;
       c9498: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.$fEqErrno_$c==_info" {
     Foreign.C.Error.$fEqErrno_$c==_info:
         const Foreign.C.Error.$fEqErrno_$c==_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c9497() //  [R1]
         { []
         }
     {offset
       c9497: // global
           _s942K::I64 = I64[R1 + 7];
           if (_s942K::I64 != (-1)) goto c949k; else goto u949x;
       c949k: // global
           I64[Sp] = block_c949i_info;
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s942K::I64;
           if (R1 & 7 != 0) goto u949z; else goto c949l;
       u949z: // global
           call _c949i(R1) args: 0, res: 0, upd: 0;
       c949l: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u949x: // global
           Sp = Sp + 16;
           call _c949u() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c9497_info" {
     block_c9497_info:
         const _c9497;
         const 1;
         const 30;
 },
 _c949i() //  [R1]
         { []
         }
     {offset
       c949i: // global
           _s942N::I64 = I64[R1 + 7];
           if (_s942N::I64 != (-1)) goto c949s; else goto u949y;
       c949s: // global
           R1 = I64[((I64[Sp + 8] == _s942N::I64) << 3) + GHC.Types.Bool_closure_tbl];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u949y: // global
           Sp = Sp + 16;
           call _c949u() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c949i_info" {
     block_c949i_info:
         const _c949i;
         const 65;
         const 30;
 },
 _c949u() //  []
         { []
         }
     {offset
       c949u: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.837888738 UTC

[section ""data" . Foreign.C.Error.$fEqErrno_$c/=_closure" {
     Foreign.C.Error.$fEqErrno_$c/=_closure:
         const Foreign.C.Error.$fEqErrno_$c/=_info;
 },
 Foreign.C.Error.$fEqErrno_$c/=_entry() //  [R2, R3]
         { []
         }
     {offset
       c94a7: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c94a8; else goto c94a9;
       c94a8: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$fEqErrno_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94a9: // global
           I64[Sp - 16] = block_c94a4_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u94aD; else goto c94a5;
       u94aD: // global
           call _c94a4(R1) args: 0, res: 0, upd: 0;
       c94a5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.$fEqErrno_$c/=_info" {
     Foreign.C.Error.$fEqErrno_$c/=_info:
         const Foreign.C.Error.$fEqErrno_$c/=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c94a4() //  [R1]
         { []
         }
     {offset
       c94a4: // global
           _s942T::I64 = I64[R1 + 7];
           if (_s942T::I64 != (-1)) goto c94ah; else goto u94ay;
       c94ah: // global
           I64[Sp] = block_c94af_info;
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s942T::I64;
           if (R1 & 7 != 0) goto u94aB; else goto c94ai;
       u94aB: // global
           call _c94af(R1) args: 0, res: 0, upd: 0;
       c94ai: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u94ay: // global
           Sp = Sp + 16;
           call _c94ax() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c94a4_info" {
     block_c94a4_info:
         const _c94a4;
         const 1;
         const 30;
 },
 _c94af() //  [R1]
         { []
         }
     {offset
       c94af: // global
           _s942W::I64 = I64[R1 + 7];
           if (_s942W::I64 != (-1)) goto c94av; else goto u94az;
       c94av: // global
           if (I64[Sp + 8] == _s942W::I64) goto c94at; else goto u94aA;
       c94at: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u94aA: // global
           Sp = Sp + 16;
           goto u94aF;
       u94az: // global
           Sp = Sp + 16;
           goto u94aF;
       u94aF: // global
           call _c94ax() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c94af_info" {
     block_c94af_info:
         const _c94af;
         const 65;
         const 30;
 },
 _c94ax() //  []
         { []
         }
     {offset
       c94ax: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.846289584 UTC

[section ""data" . Foreign.C.Error.$fEqErrno_closure" {
     Foreign.C.Error.$fEqErrno_closure:
         const GHC.Classes.C:Eq_con_info;
         const Foreign.C.Error.$fEqErrno_$c==_closure+2;
         const Foreign.C.Error.$fEqErrno_$c/=_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.847918155 UTC

[section ""data" . Foreign.C.Error.eXDEV1_closure" {
     Foreign.C.Error.eXDEV1_closure:
         const GHC.Int.I32#_con_info;
         const 18;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.849563827 UTC

[section ""data" . Foreign.C.Error.eXDEV_closure" {
     Foreign.C.Error.eXDEV_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eXDEV1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.851273418 UTC

[section ""data" . Foreign.C.Error.eAGAIN1_closure" {
     Foreign.C.Error.eAGAIN1_closure:
         const GHC.Int.I32#_con_info;
         const 11;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.85297287 UTC

[section ""data" . Foreign.C.Error.eWOULDBLOCK_closure" {
     Foreign.C.Error.eWOULDBLOCK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eAGAIN1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.854916749 UTC

[section ""data" . Foreign.C.Error.eUSERS1_closure" {
     Foreign.C.Error.eUSERS1_closure:
         const GHC.Int.I32#_con_info;
         const 87;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.856677558 UTC

[section ""data" . Foreign.C.Error.eUSERS_closure" {
     Foreign.C.Error.eUSERS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eUSERS1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.858696273 UTC

[section ""data" . Foreign.C.Error.eTXTBSY1_closure" {
     Foreign.C.Error.eTXTBSY1_closure:
         const GHC.Int.I32#_con_info;
         const 26;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.860258142 UTC

[section ""data" . Foreign.C.Error.eTXTBSY_closure" {
     Foreign.C.Error.eTXTBSY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTXTBSY1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.861911276 UTC

[section ""data" . Foreign.C.Error.eTOOMANYREFS1_closure" {
     Foreign.C.Error.eTOOMANYREFS1_closure:
         const GHC.Int.I32#_con_info;
         const 109;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.863548141 UTC

[section ""data" . Foreign.C.Error.eTOOMANYREFS_closure" {
     Foreign.C.Error.eTOOMANYREFS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTOOMANYREFS1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.865736568 UTC

[section ""data" . Foreign.C.Error.eTIMEDOUT1_closure" {
     Foreign.C.Error.eTIMEDOUT1_closure:
         const GHC.Int.I32#_con_info;
         const 110;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.867456501 UTC

[section ""data" . Foreign.C.Error.eTIMEDOUT_closure" {
     Foreign.C.Error.eTIMEDOUT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTIMEDOUT1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.869183335 UTC

[section ""data" . Foreign.C.Error.eTIME1_closure" {
     Foreign.C.Error.eTIME1_closure:
         const GHC.Int.I32#_con_info;
         const 62;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.870961865 UTC

[section ""data" . Foreign.C.Error.eTIME_closure" {
     Foreign.C.Error.eTIME_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTIME1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.872702327 UTC

[section ""data" . Foreign.C.Error.eSTALE1_closure" {
     Foreign.C.Error.eSTALE1_closure:
         const GHC.Int.I32#_con_info;
         const 116;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.87483763 UTC

[section ""data" . Foreign.C.Error.eSTALE_closure" {
     Foreign.C.Error.eSTALE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSTALE1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.876500581 UTC

[section ""data" . Foreign.C.Error.eSRMNT1_closure" {
     Foreign.C.Error.eSRMNT1_closure:
         const GHC.Int.I32#_con_info;
         const 69;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.878581864 UTC

[section ""data" . Foreign.C.Error.eSRMNT_closure" {
     Foreign.C.Error.eSRMNT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSRMNT1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.880322629 UTC

[section ""data" . Foreign.C.Error.eSRCH1_closure" {
     Foreign.C.Error.eSRCH1_closure:
         const GHC.Int.I32#_con_info;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.882078428 UTC

[section ""data" . Foreign.C.Error.eSRCH_closure" {
     Foreign.C.Error.eSRCH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSRCH1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.883768327 UTC

[section ""data" . Foreign.C.Error.eSPIPE1_closure" {
     Foreign.C.Error.eSPIPE1_closure:
         const GHC.Int.I32#_con_info;
         const 29;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.885506451 UTC

[section ""data" . Foreign.C.Error.eSPIPE_closure" {
     Foreign.C.Error.eSPIPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSPIPE1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.887350692 UTC

[section ""data" . Foreign.C.Error.eSOCKTNOSUPPORT1_closure" {
     Foreign.C.Error.eSOCKTNOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 94;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.889040931 UTC

[section ""data" . Foreign.C.Error.eSOCKTNOSUPPORT_closure" {
     Foreign.C.Error.eSOCKTNOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSOCKTNOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.891696044 UTC

[section ""data" . Foreign.C.Error.eSHUTDOWN1_closure" {
     Foreign.C.Error.eSHUTDOWN1_closure:
         const GHC.Int.I32#_con_info;
         const 108;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.893379369 UTC

[section ""data" . Foreign.C.Error.eSHUTDOWN_closure" {
     Foreign.C.Error.eSHUTDOWN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSHUTDOWN1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.895069757 UTC

[section ""data" . Foreign.C.Error.eBADRPC1_closure" {
     Foreign.C.Error.eBADRPC1_closure:
         const GHC.Int.I32#_con_info;
         const (-1);
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.896750452 UTC

[section ""data" . Foreign.C.Error.eRREMOTE_closure" {
     Foreign.C.Error.eRREMOTE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.898472226 UTC

[section ""data" . Foreign.C.Error.eRPCMISMATCH_closure" {
     Foreign.C.Error.eRPCMISMATCH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.900126535 UTC

[section ""data" . Foreign.C.Error.eROFS1_closure" {
     Foreign.C.Error.eROFS1_closure:
         const GHC.Int.I32#_con_info;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.90220249 UTC

[section ""data" . Foreign.C.Error.eROFS_closure" {
     Foreign.C.Error.eROFS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eROFS1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.903952699 UTC

[section ""data" . Foreign.C.Error.eREMOTE1_closure" {
     Foreign.C.Error.eREMOTE1_closure:
         const GHC.Int.I32#_con_info;
         const 66;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.905662634 UTC

[section ""data" . Foreign.C.Error.eREMOTE_closure" {
     Foreign.C.Error.eREMOTE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eREMOTE1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.907842787 UTC

[section ""data" . Foreign.C.Error.eREMCHG1_closure" {
     Foreign.C.Error.eREMCHG1_closure:
         const GHC.Int.I32#_con_info;
         const 78;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.909482564 UTC

[section ""data" . Foreign.C.Error.eREMCHG_closure" {
     Foreign.C.Error.eREMCHG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eREMCHG1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.911110844 UTC

[section ""data" . Foreign.C.Error.eRANGE1_closure" {
     Foreign.C.Error.eRANGE1_closure:
         const GHC.Int.I32#_con_info;
         const 34;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.912656926 UTC

[section ""data" . Foreign.C.Error.eRANGE_closure" {
     Foreign.C.Error.eRANGE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eRANGE1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.914856592 UTC

[section ""data" . Foreign.C.Error.ePROTOTYPE1_closure" {
     Foreign.C.Error.ePROTOTYPE1_closure:
         const GHC.Int.I32#_con_info;
         const 91;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.916611805 UTC

[section ""data" . Foreign.C.Error.ePROTOTYPE_closure" {
     Foreign.C.Error.ePROTOTYPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePROTOTYPE1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.918395058 UTC

[section ""data" . Foreign.C.Error.ePROTONOSUPPORT1_closure" {
     Foreign.C.Error.ePROTONOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 93;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.920156655 UTC

[section ""data" . Foreign.C.Error.ePROTONOSUPPORT_closure" {
     Foreign.C.Error.ePROTONOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePROTONOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.921976553 UTC

[section ""data" . Foreign.C.Error.ePROTO1_closure" {
     Foreign.C.Error.ePROTO1_closure:
         const GHC.Int.I32#_con_info;
         const 71;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.924092974 UTC

[section ""data" . Foreign.C.Error.ePROTO_closure" {
     Foreign.C.Error.ePROTO_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePROTO1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.926222475 UTC

[section ""data" . Foreign.C.Error.ePROGUNAVAIL_closure" {
     Foreign.C.Error.ePROGUNAVAIL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.927852821 UTC

[section ""data" . Foreign.C.Error.ePROGMISMATCH_closure" {
     Foreign.C.Error.ePROGMISMATCH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.92954227 UTC

[section ""data" . Foreign.C.Error.ePROCUNAVAIL_closure" {
     Foreign.C.Error.ePROCUNAVAIL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.931267341 UTC

[section ""data" . Foreign.C.Error.ePROCLIM_closure" {
     Foreign.C.Error.ePROCLIM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.932970478 UTC

[section ""data" . Foreign.C.Error.ePIPE1_closure" {
     Foreign.C.Error.ePIPE1_closure:
         const GHC.Int.I32#_con_info;
         const 32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.935171395 UTC

[section ""data" . Foreign.C.Error.ePIPE_closure" {
     Foreign.C.Error.ePIPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePIPE1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.936901377 UTC

[section ""data" . Foreign.C.Error.ePFNOSUPPORT1_closure" {
     Foreign.C.Error.ePFNOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 96;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.938741918 UTC

[section ""data" . Foreign.C.Error.ePFNOSUPPORT_closure" {
     Foreign.C.Error.ePFNOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePFNOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.940871236 UTC

[section ""data" . Foreign.C.Error.ePERM1_closure" {
     Foreign.C.Error.ePERM1_closure:
         const GHC.Int.I32#_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.942531985 UTC

[section ""data" . Foreign.C.Error.ePERM_closure" {
     Foreign.C.Error.ePERM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePERM1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.944252141 UTC

[section ""data" . Foreign.C.Error.eNOTSUP1_closure" {
     Foreign.C.Error.eNOTSUP1_closure:
         const GHC.Int.I32#_con_info;
         const 95;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.945880695 UTC

[section ""data" . Foreign.C.Error.eOPNOTSUPP_closure" {
     Foreign.C.Error.eOPNOTSUPP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTSUP1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.947574985 UTC

[section ""data" . Foreign.C.Error.eNXIO1_closure" {
     Foreign.C.Error.eNXIO1_closure:
         const GHC.Int.I32#_con_info;
         const 6;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.949580514 UTC

[section ""data" . Foreign.C.Error.eNXIO_closure" {
     Foreign.C.Error.eNXIO_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNXIO1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.951207765 UTC

[section ""data" . Foreign.C.Error.eNOTTY1_closure" {
     Foreign.C.Error.eNOTTY1_closure:
         const GHC.Int.I32#_con_info;
         const 25;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.952868569 UTC

[section ""data" . Foreign.C.Error.eNOTTY_closure" {
     Foreign.C.Error.eNOTTY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTTY1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.956225721 UTC

[section ""data" . Foreign.C.Error.eNOTSUP_closure" {
     Foreign.C.Error.eNOTSUP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTSUP1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.957965253 UTC

[section ""data" . Foreign.C.Error.eNOTSOCK1_closure" {
     Foreign.C.Error.eNOTSOCK1_closure:
         const GHC.Int.I32#_con_info;
         const 88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.960152372 UTC

[section ""data" . Foreign.C.Error.eNOTSOCK_closure" {
     Foreign.C.Error.eNOTSOCK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTSOCK1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.961818372 UTC

[section ""data" . Foreign.C.Error.eNOTEMPTY1_closure" {
     Foreign.C.Error.eNOTEMPTY1_closure:
         const GHC.Int.I32#_con_info;
         const 39;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.963443103 UTC

[section ""data" . Foreign.C.Error.eNOTEMPTY_closure" {
     Foreign.C.Error.eNOTEMPTY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTEMPTY1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.965177706 UTC

[section ""data" . Foreign.C.Error.eNOTDIR1_closure" {
     Foreign.C.Error.eNOTDIR1_closure:
         const GHC.Int.I32#_con_info;
         const 20;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.967588772 UTC

[section ""data" . Foreign.C.Error.eNOTDIR_closure" {
     Foreign.C.Error.eNOTDIR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTDIR1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.969367996 UTC

[section ""data" . Foreign.C.Error.eNOTCONN1_closure" {
     Foreign.C.Error.eNOTCONN1_closure:
         const GHC.Int.I32#_con_info;
         const 107;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.971174055 UTC

[section ""data" . Foreign.C.Error.eNOTCONN_closure" {
     Foreign.C.Error.eNOTCONN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTCONN1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.972873701 UTC

[section ""data" . Foreign.C.Error.eNOTBLK1_closure" {
     Foreign.C.Error.eNOTBLK1_closure:
         const GHC.Int.I32#_con_info;
         const 15;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.97458933 UTC

[section ""data" . Foreign.C.Error.eNOTBLK_closure" {
     Foreign.C.Error.eNOTBLK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTBLK1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.976677977 UTC

[section ""data" . Foreign.C.Error.eNOSYS1_closure" {
     Foreign.C.Error.eNOSYS1_closure:
         const GHC.Int.I32#_con_info;
         const 38;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.978935184 UTC

[section ""data" . Foreign.C.Error.eNOSYS_closure" {
     Foreign.C.Error.eNOSYS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSYS1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.980621199 UTC

[section ""data" . Foreign.C.Error.eNOSTR1_closure" {
     Foreign.C.Error.eNOSTR1_closure:
         const GHC.Int.I32#_con_info;
         const 60;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.982306193 UTC

[section ""data" . Foreign.C.Error.eNOSTR_closure" {
     Foreign.C.Error.eNOSTR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSTR1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.983901768 UTC

[section ""data" . Foreign.C.Error.eNOSR1_closure" {
     Foreign.C.Error.eNOSR1_closure:
         const GHC.Int.I32#_con_info;
         const 63;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.985562725 UTC

[section ""data" . Foreign.C.Error.eNOSR_closure" {
     Foreign.C.Error.eNOSR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSR1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.987292283 UTC

[section ""data" . Foreign.C.Error.eNOSPC1_closure" {
     Foreign.C.Error.eNOSPC1_closure:
         const GHC.Int.I32#_con_info;
         const 28;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.988992864 UTC

[section ""data" . Foreign.C.Error.eNOSPC_closure" {
     Foreign.C.Error.eNOSPC_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.991144805 UTC

[section ""data" . Foreign.C.Error.eNOPROTOOPT1_closure" {
     Foreign.C.Error.eNOPROTOOPT1_closure:
         const GHC.Int.I32#_con_info;
         const 92;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.993218225 UTC

[section ""data" . Foreign.C.Error.eNOPROTOOPT_closure" {
     Foreign.C.Error.eNOPROTOOPT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOPROTOOPT1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.994883536 UTC

[section ""data" . Foreign.C.Error.eNONET1_closure" {
     Foreign.C.Error.eNONET1_closure:
         const GHC.Int.I32#_con_info;
         const 64;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.996435261 UTC

[section ""data" . Foreign.C.Error.eNONET_closure" {
     Foreign.C.Error.eNONET_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNONET1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.998079293 UTC

[section ""data" . Foreign.C.Error.eNOMSG1_closure" {
     Foreign.C.Error.eNOMSG1_closure:
         const GHC.Int.I32#_con_info;
         const 42;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:13.999699524 UTC

[section ""data" . Foreign.C.Error.eNOMSG_closure" {
     Foreign.C.Error.eNOMSG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOMSG1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.001275598 UTC

[section ""data" . Foreign.C.Error.eNOMEM1_closure" {
     Foreign.C.Error.eNOMEM1_closure:
         const GHC.Int.I32#_con_info;
         const 12;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.002880162 UTC

[section ""data" . Foreign.C.Error.eNOMEM_closure" {
     Foreign.C.Error.eNOMEM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOMEM1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.004532707 UTC

[section ""data" . Foreign.C.Error.eNOLINK1_closure" {
     Foreign.C.Error.eNOLINK1_closure:
         const GHC.Int.I32#_con_info;
         const 67;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.00673572 UTC

[section ""data" . Foreign.C.Error.eNOLINK_closure" {
     Foreign.C.Error.eNOLINK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOLINK1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.008428455 UTC

[section ""data" . Foreign.C.Error.eNOLCK1_closure" {
     Foreign.C.Error.eNOLCK1_closure:
         const GHC.Int.I32#_con_info;
         const 37;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.010556154 UTC

[section ""data" . Foreign.C.Error.eNOLCK_closure" {
     Foreign.C.Error.eNOLCK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOLCK1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.012219569 UTC

[section ""data" . Foreign.C.Error.eNOEXEC1_closure" {
     Foreign.C.Error.eNOEXEC1_closure:
         const GHC.Int.I32#_con_info;
         const 8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.013813226 UTC

[section ""data" . Foreign.C.Error.eNOEXEC_closure" {
     Foreign.C.Error.eNOEXEC_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOEXEC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.015449074 UTC

[section ""data" . Foreign.C.Error.eNOENT1_closure" {
     Foreign.C.Error.eNOENT1_closure:
         const GHC.Int.I32#_con_info;
         const 2;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.017157786 UTC

[section ""data" . Foreign.C.Error.eNOENT_closure" {
     Foreign.C.Error.eNOENT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOENT1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.019493565 UTC

[section ""data" . Foreign.C.Error.eNODEV1_closure" {
     Foreign.C.Error.eNODEV1_closure:
         const GHC.Int.I32#_con_info;
         const 19;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.02110785 UTC

[section ""data" . Foreign.C.Error.eNODEV_closure" {
     Foreign.C.Error.eNODEV_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNODEV1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.022780622 UTC

[section ""data" . Foreign.C.Error.eNODATA1_closure" {
     Foreign.C.Error.eNODATA1_closure:
         const GHC.Int.I32#_con_info;
         const 61;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.02451118 UTC

[section ""data" . Foreign.C.Error.eNODATA_closure" {
     Foreign.C.Error.eNODATA_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNODATA1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.026679318 UTC

[section ""data" . Foreign.C.Error.eNOBUFS1_closure" {
     Foreign.C.Error.eNOBUFS1_closure:
         const GHC.Int.I32#_con_info;
         const 105;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.028278943 UTC

[section ""data" . Foreign.C.Error.eNOBUFS_closure" {
     Foreign.C.Error.eNOBUFS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOBUFS1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.030017789 UTC

[section ""data" . Foreign.C.Error.eNFILE1_closure" {
     Foreign.C.Error.eNFILE1_closure:
         const GHC.Int.I32#_con_info;
         const 23;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.031755114 UTC

[section ""data" . Foreign.C.Error.eNFILE_closure" {
     Foreign.C.Error.eNFILE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNFILE1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.033867564 UTC

[section ""data" . Foreign.C.Error.eNETUNREACH1_closure" {
     Foreign.C.Error.eNETUNREACH1_closure:
         const GHC.Int.I32#_con_info;
         const 101;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.035584538 UTC

[section ""data" . Foreign.C.Error.eNETUNREACH_closure" {
     Foreign.C.Error.eNETUNREACH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNETUNREACH1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.037334569 UTC

[section ""data" . Foreign.C.Error.eNETRESET1_closure" {
     Foreign.C.Error.eNETRESET1_closure:
         const GHC.Int.I32#_con_info;
         const 102;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.038986352 UTC

[section ""data" . Foreign.C.Error.eNETRESET_closure" {
     Foreign.C.Error.eNETRESET_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNETRESET1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.040765556 UTC

[section ""data" . Foreign.C.Error.eNETDOWN1_closure" {
     Foreign.C.Error.eNETDOWN1_closure:
         const GHC.Int.I32#_con_info;
         const 100;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.042898756 UTC

[section ""data" . Foreign.C.Error.eNETDOWN_closure" {
     Foreign.C.Error.eNETDOWN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNETDOWN1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.044431453 UTC

[section ""data" . Foreign.C.Error.eNAMETOOLONG1_closure" {
     Foreign.C.Error.eNAMETOOLONG1_closure:
         const GHC.Int.I32#_con_info;
         const 36;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.046071517 UTC

[section ""data" . Foreign.C.Error.eNAMETOOLONG_closure" {
     Foreign.C.Error.eNAMETOOLONG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNAMETOOLONG1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.047744159 UTC

[section ""data" . Foreign.C.Error.eMULTIHOP1_closure" {
     Foreign.C.Error.eMULTIHOP1_closure:
         const GHC.Int.I32#_con_info;
         const 72;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.049475144 UTC

[section ""data" . Foreign.C.Error.eMULTIHOP_closure" {
     Foreign.C.Error.eMULTIHOP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMULTIHOP1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.051107015 UTC

[section ""data" . Foreign.C.Error.eMSGSIZE1_closure" {
     Foreign.C.Error.eMSGSIZE1_closure:
         const GHC.Int.I32#_con_info;
         const 90;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.052784625 UTC

[section ""data" . Foreign.C.Error.eMSGSIZE_closure" {
     Foreign.C.Error.eMSGSIZE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMSGSIZE1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.054949341 UTC

[section ""data" . Foreign.C.Error.eMLINK1_closure" {
     Foreign.C.Error.eMLINK1_closure:
         const GHC.Int.I32#_con_info;
         const 31;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.056734793 UTC

[section ""data" . Foreign.C.Error.eMLINK_closure" {
     Foreign.C.Error.eMLINK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMLINK1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.058502831 UTC

[section ""data" . Foreign.C.Error.eMFILE1_closure" {
     Foreign.C.Error.eMFILE1_closure:
         const GHC.Int.I32#_con_info;
         const 24;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.060625917 UTC

[section ""data" . Foreign.C.Error.eMFILE_closure" {
     Foreign.C.Error.eMFILE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMFILE1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.062295425 UTC

[section ""data" . Foreign.C.Error.eLOOP1_closure" {
     Foreign.C.Error.eLOOP1_closure:
         const GHC.Int.I32#_con_info;
         const 40;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.063834892 UTC

[section ""data" . Foreign.C.Error.eLOOP_closure" {
     Foreign.C.Error.eLOOP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eLOOP1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.065540208 UTC

[section ""data" . Foreign.C.Error.eISDIR1_closure" {
     Foreign.C.Error.eISDIR1_closure:
         const GHC.Int.I32#_con_info;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.067157647 UTC

[section ""data" . Foreign.C.Error.eISDIR_closure" {
     Foreign.C.Error.eISDIR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eISDIR1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.06893446 UTC

[section ""data" . Foreign.C.Error.eISCONN1_closure" {
     Foreign.C.Error.eISCONN1_closure:
         const GHC.Int.I32#_con_info;
         const 106;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.071245701 UTC

[section ""data" . Foreign.C.Error.eISCONN_closure" {
     Foreign.C.Error.eISCONN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eISCONN1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.07298168 UTC

[section ""data" . Foreign.C.Error.eIO1_closure" {
     Foreign.C.Error.eIO1_closure:
         const GHC.Int.I32#_con_info;
         const 5;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.074742962 UTC

[section ""data" . Foreign.C.Error.eIO_closure" {
     Foreign.C.Error.eIO_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eIO1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.076850173 UTC

[section ""data" . Foreign.C.Error.eINVAL1_closure" {
     Foreign.C.Error.eINVAL1_closure:
         const GHC.Int.I32#_con_info;
         const 22;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.078451583 UTC

[section ""data" . Foreign.C.Error.eINVAL_closure" {
     Foreign.C.Error.eINVAL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eINVAL1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.080112786 UTC

[section ""data" . Foreign.C.Error.eINTR1_closure" {
     Foreign.C.Error.eINTR1_closure:
         const GHC.Int.I32#_con_info;
         const 4;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.081811293 UTC

[section ""data" . Foreign.C.Error.eINTR_closure" {
     Foreign.C.Error.eINTR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eINTR1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.083429226 UTC

[section ""data" . Foreign.C.Error.eINPROGRESS1_closure" {
     Foreign.C.Error.eINPROGRESS1_closure:
         const GHC.Int.I32#_con_info;
         const 115;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.085045576 UTC

[section ""data" . Foreign.C.Error.eINPROGRESS_closure" {
     Foreign.C.Error.eINPROGRESS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eINPROGRESS1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.087266963 UTC

[section ""data" . Foreign.C.Error.eILSEQ1_closure" {
     Foreign.C.Error.eILSEQ1_closure:
         const GHC.Int.I32#_con_info;
         const 84;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.089047725 UTC

[section ""data" . Foreign.C.Error.eILSEQ_closure" {
     Foreign.C.Error.eILSEQ_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eILSEQ1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.090763396 UTC

[section ""data" . Foreign.C.Error.eIDRM1_closure" {
     Foreign.C.Error.eIDRM1_closure:
         const GHC.Int.I32#_con_info;
         const 43;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.092880271 UTC

[section ""data" . Foreign.C.Error.eIDRM_closure" {
     Foreign.C.Error.eIDRM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eIDRM1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.094622299 UTC

[section ""data" . Foreign.C.Error.eHOSTUNREACH1_closure" {
     Foreign.C.Error.eHOSTUNREACH1_closure:
         const GHC.Int.I32#_con_info;
         const 113;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.096256633 UTC

[section ""data" . Foreign.C.Error.eHOSTUNREACH_closure" {
     Foreign.C.Error.eHOSTUNREACH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eHOSTUNREACH1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.098388596 UTC

[section ""data" . Foreign.C.Error.eHOSTDOWN1_closure" {
     Foreign.C.Error.eHOSTDOWN1_closure:
         const GHC.Int.I32#_con_info;
         const 112;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.099996966 UTC

[section ""data" . Foreign.C.Error.eHOSTDOWN_closure" {
     Foreign.C.Error.eHOSTDOWN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eHOSTDOWN1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.101694666 UTC

[section ""data" . Foreign.C.Error.eFTYPE_closure" {
     Foreign.C.Error.eFTYPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.103339347 UTC

[section ""data" . Foreign.C.Error.eFBIG1_closure" {
     Foreign.C.Error.eFBIG1_closure:
         const GHC.Int.I32#_con_info;
         const 27;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.105080398 UTC

[section ""data" . Foreign.C.Error.eFBIG_closure" {
     Foreign.C.Error.eFBIG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eFBIG1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.10693951 UTC

[section ""data" . Foreign.C.Error.eFAULT1_closure" {
     Foreign.C.Error.eFAULT1_closure:
         const GHC.Int.I32#_con_info;
         const 14;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.108649427 UTC

[section ""data" . Foreign.C.Error.eFAULT_closure" {
     Foreign.C.Error.eFAULT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eFAULT1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.110842078 UTC

[section ""data" . Foreign.C.Error.eEXIST1_closure" {
     Foreign.C.Error.eEXIST1_closure:
         const GHC.Int.I32#_con_info;
         const 17;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.112373633 UTC

[section ""data" . Foreign.C.Error.eEXIST_closure" {
     Foreign.C.Error.eEXIST_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eEXIST1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.114392796 UTC

[section ""data" . Foreign.C.Error.eDQUOT1_closure" {
     Foreign.C.Error.eDQUOT1_closure:
         const GHC.Int.I32#_con_info;
         const 122;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.116084755 UTC

[section ""data" . Foreign.C.Error.eDQUOT_closure" {
     Foreign.C.Error.eDQUOT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDQUOT1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.117757112 UTC

[section ""data" . Foreign.C.Error.eDOM1_closure" {
     Foreign.C.Error.eDOM1_closure:
         const GHC.Int.I32#_con_info;
         const 33;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.119335852 UTC

[section ""data" . Foreign.C.Error.eDOM_closure" {
     Foreign.C.Error.eDOM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDOM1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.12099232 UTC

[section ""data" . Foreign.C.Error.eDIRTY_closure" {
     Foreign.C.Error.eDIRTY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.122721996 UTC

[section ""data" . Foreign.C.Error.eDESTADDRREQ1_closure" {
     Foreign.C.Error.eDESTADDRREQ1_closure:
         const GHC.Int.I32#_con_info;
         const 89;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.124479587 UTC

[section ""data" . Foreign.C.Error.eDESTADDRREQ_closure" {
     Foreign.C.Error.eDESTADDRREQ_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDESTADDRREQ1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.126528653 UTC

[section ""data" . Foreign.C.Error.eDEADLK1_closure" {
     Foreign.C.Error.eDEADLK1_closure:
         const GHC.Int.I32#_con_info;
         const 35;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.128172252 UTC

[section ""data" . Foreign.C.Error.eDEADLK_closure" {
     Foreign.C.Error.eDEADLK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDEADLK1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.130349322 UTC

[section ""data" . Foreign.C.Error.eCONNRESET1_closure" {
     Foreign.C.Error.eCONNRESET1_closure:
         const GHC.Int.I32#_con_info;
         const 104;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.132042078 UTC

[section ""data" . Foreign.C.Error.eCONNRESET_closure" {
     Foreign.C.Error.eCONNRESET_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCONNRESET1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.133777833 UTC

[section ""data" . Foreign.C.Error.eCONNREFUSED1_closure" {
     Foreign.C.Error.eCONNREFUSED1_closure:
         const GHC.Int.I32#_con_info;
         const 111;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.135467077 UTC

[section ""data" . Foreign.C.Error.eCONNREFUSED_closure" {
     Foreign.C.Error.eCONNREFUSED_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCONNREFUSED1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.137084365 UTC

[section ""data" . Foreign.C.Error.eCONNABORTED1_closure" {
     Foreign.C.Error.eCONNABORTED1_closure:
         const GHC.Int.I32#_con_info;
         const 103;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.138784344 UTC

[section ""data" . Foreign.C.Error.eCONNABORTED_closure" {
     Foreign.C.Error.eCONNABORTED_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCONNABORTED1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.14052617 UTC

[section ""data" . Foreign.C.Error.eCOMM1_closure" {
     Foreign.C.Error.eCOMM1_closure:
         const GHC.Int.I32#_con_info;
         const 70;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.142734696 UTC

[section ""data" . Foreign.C.Error.eCOMM_closure" {
     Foreign.C.Error.eCOMM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCOMM1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.144405006 UTC

[section ""data" . Foreign.C.Error.eCHILD1_closure" {
     Foreign.C.Error.eCHILD1_closure:
         const GHC.Int.I32#_con_info;
         const 10;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.146562989 UTC

[section ""data" . Foreign.C.Error.eCHILD_closure" {
     Foreign.C.Error.eCHILD_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCHILD1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.148222872 UTC

[section ""data" . Foreign.C.Error.eBUSY1_closure" {
     Foreign.C.Error.eBUSY1_closure:
         const GHC.Int.I32#_con_info;
         const 16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.149966605 UTC

[section ""data" . Foreign.C.Error.eBUSY_closure" {
     Foreign.C.Error.eBUSY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBUSY1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.151708729 UTC

[section ""data" . Foreign.C.Error.eBADRPC_closure" {
     Foreign.C.Error.eBADRPC_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.153486799 UTC

[section ""data" . Foreign.C.Error.eBADMSG1_closure" {
     Foreign.C.Error.eBADMSG1_closure:
         const GHC.Int.I32#_con_info;
         const 74;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.155248978 UTC

[section ""data" . Foreign.C.Error.eBADMSG_closure" {
     Foreign.C.Error.eBADMSG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADMSG1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.157027973 UTC

[section ""data" . Foreign.C.Error.eBADF1_closure" {
     Foreign.C.Error.eBADF1_closure:
         const GHC.Int.I32#_con_info;
         const 9;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.159776139 UTC

[section ""data" . Foreign.C.Error.eBADF_closure" {
     Foreign.C.Error.eBADF_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADF1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.161500342 UTC

[section ""data" . Foreign.C.Error.eALREADY1_closure" {
     Foreign.C.Error.eALREADY1_closure:
         const GHC.Int.I32#_con_info;
         const 114;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.163109887 UTC

[section ""data" . Foreign.C.Error.eALREADY_closure" {
     Foreign.C.Error.eALREADY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eALREADY1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.164807183 UTC

[section ""data" . Foreign.C.Error.eAGAIN_closure" {
     Foreign.C.Error.eAGAIN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eAGAIN1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.166507537 UTC

[section ""data" . Foreign.C.Error.eAFNOSUPPORT1_closure" {
     Foreign.C.Error.eAFNOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 97;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.168124283 UTC

[section ""data" . Foreign.C.Error.eAFNOSUPPORT_closure" {
     Foreign.C.Error.eAFNOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eAFNOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.169801315 UTC

[section ""data" . Foreign.C.Error.eADV1_closure" {
     Foreign.C.Error.eADV1_closure:
         const GHC.Int.I32#_con_info;
         const 68;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.1716418 UTC

[section ""data" . Foreign.C.Error.eADV_closure" {
     Foreign.C.Error.eADV_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eADV1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.173421312 UTC

[section ""data" . Foreign.C.Error.eADDRNOTAVAIL1_closure" {
     Foreign.C.Error.eADDRNOTAVAIL1_closure:
         const GHC.Int.I32#_con_info;
         const 99;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.175614958 UTC

[section ""data" . Foreign.C.Error.eADDRNOTAVAIL_closure" {
     Foreign.C.Error.eADDRNOTAVAIL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eADDRNOTAVAIL1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.177677685 UTC

[section ""data" . Foreign.C.Error.eADDRINUSE1_closure" {
     Foreign.C.Error.eADDRINUSE1_closure:
         const GHC.Int.I32#_con_info;
         const 98;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.179317017 UTC

[section ""data" . Foreign.C.Error.eADDRINUSE_closure" {
     Foreign.C.Error.eADDRINUSE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eADDRINUSE1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.181078953 UTC

[section ""data" . Foreign.C.Error.eACCES1_closure" {
     Foreign.C.Error.eACCES1_closure:
         const GHC.Int.I32#_con_info;
         const 13;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.182779346 UTC

[section ""data" . Foreign.C.Error.eACCES_closure" {
     Foreign.C.Error.eACCES_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eACCES1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.184502689 UTC

[section ""data" . Foreign.C.Error.e2BIG1_closure" {
     Foreign.C.Error.e2BIG1_closure:
         const GHC.Int.I32#_con_info;
         const 7;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.186246534 UTC

[section ""data" . Foreign.C.Error.e2BIG_closure" {
     Foreign.C.Error.e2BIG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.e2BIG1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.187994279 UTC

[section ""data" . Foreign.C.Error.eOK1_closure" {
     Foreign.C.Error.eOK1_closure:
         const GHC.Int.I32#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.18976577 UTC

[section ""data" . Foreign.C.Error.eOK_closure" {
     Foreign.C.Error.eOK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eOK1_closure+1;
         const 0;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.197564099 UTC

[section ""data" . Foreign.C.Error.$werrnoToIOError_closure" {
     Foreign.C.Error.$werrnoToIOError_closure:
         const Foreign.C.Error.$werrnoToIOError_info;
         const 0;
 },
 Foreign.C.Error.$werrnoToIOError_slow() //  [R1]
         { []
         }
     {offset
       c94e7: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2,
                                                       R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s943e_entry() //  [R1]
         { []
         }
     {offset
       c94fP: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c94fQ; else goto c94fR;
       c94fQ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94fR: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s943d::I64 = I64[R1 + 16];
           if (%MO_S_Lt_W64(_s943d::I64, 60)) goto u94fS; else goto u94fV;
       u94fS: // global
           if (%MO_S_Ge_W64(_s943d::I64, 44)) goto c94er; else goto u94fT;
       u94fT: // global
           if (%MO_S_Lt_W64(_s943d::I64, 1)) goto c94er; else goto u94fU;
       u94fU: // global
           switch [1 .. 43] _s943d::I64 {
               case 1 : goto c94fO;
               case 2, 3 : goto c94fK;
               case 4 : goto c94ev;
               case 5 : goto c94ew;
               case 6 : goto c94fK;
               case 7 : goto c94fG;
               case 8, 9 : goto c94fE;
               case 10 : goto c94fK;
               case 11, 12 : goto c94fG;
               case 13 : goto c94fO;
               case 15 : goto c94fE;
               case 16 : goto c94fw;
               case 17 : goto c94fM;
               case 18, 19 : goto c94fx;
               case 20, 21 : goto c94fi;
               case 22 : goto c94fE;
               case 23, 24 : goto c94fG;
               case 25 : goto c94fF;
               case 26 : goto c94fw;
               case 27 : goto c94fO;
               case 28 : goto c94fG;
               case 29 : goto c94fx;
               case 30 : goto c94fO;
               case 31 : goto c94fG;
               case 32 : goto c94fN;
               case 33 : goto c94fE;
               case 34 : goto c94fx;
               case 35 : goto c94fw;
               case 36 : goto c94fE;
               case 37 : goto c94fG;
               case 38 : goto c94fx;
               case 39 : goto c94fe;
               case 40 : goto c94fE;
               case 42 : goto c94fK;
               case 43 : goto c94fN;
               default: {goto c94er;}
           }
       c94ew: // global
           R1 = GHC.IO.Exception.HardwareFault_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94ev: // global
           R1 = GHC.IO.Exception.Interrupted_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       u94fV: // global
           if (%MO_S_Ge_W64(_s943d::I64, 123)) goto c94er; else goto u94fW;
       u94fW: // global
           switch [60 .. 122] _s943d::I64 {
               case 60 : goto c94fE;
               case 61 : goto c94fK;
               case 62 : goto c94fH;
               case 63 : goto c94fG;
               case 64 : goto c94fK;
               case 66 : goto c94fF;
               case 67 : goto c94fN;
               case 69 : goto c94fe;
               case 70 : goto c94fN;
               case 71 : goto c94fr;
               case 72 : goto c94fx;
               case 74 : goto c94fi;
               case 78 : goto c94fN;
               case 84 : goto c94fE;
               case 87 : goto c94fG;
               case 88, 89 : goto c94fE;
               case 90 : goto c94fG;
               case 91 : goto c94fr;
               case 92 : goto c94fx;
               case 93 : goto c94fr;
               case 94, 95, 96, 97 : goto c94fx;
               case 98 : goto c94fw;
               case 99 : goto c94fx;
               case 100 : goto c94fN;
               case 101 : goto c94fK;
               case 102, 104 : goto c94fN;
               case 105 : goto c94fG;
               case 106 : goto c94fM;
               case 107 : goto c94fE;
               case 108 : goto c94fF;
               case 109 : goto c94fG;
               case 110 : goto c94fH;
               case 111, 112, 113 : goto c94fK;
               case 114, 115 : goto c94fM;
               case 116 : goto c94fN;
               case 122 : goto c94fO;
               default: {goto c94er;}
           }
       c94fO: // global
           R1 = GHC.IO.Exception.PermissionDenied_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fM: // global
           R1 = GHC.IO.Exception.AlreadyExists_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fw: // global
           R1 = GHC.IO.Exception.ResourceBusy_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fi: // global
           R1 = GHC.IO.Exception.InappropriateType_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fx: // global
           R1 = GHC.IO.Exception.UnsupportedOperation_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fr: // global
           R1 = GHC.IO.Exception.ProtocolError_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fe: // global
           R1 = GHC.IO.Exception.UnsatisfiedConstraints_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fN: // global
           R1 = GHC.IO.Exception.ResourceVanished_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fF: // global
           R1 = GHC.IO.Exception.IllegalOperation_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fG: // global
           R1 = GHC.IO.Exception.ResourceExhausted_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fH: // global
           R1 = GHC.IO.Exception.TimeExpired_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fK: // global
           R1 = GHC.IO.Exception.NoSuchThing_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fE: // global
           R1 = GHC.IO.Exception.InvalidArgument_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94er: // global
           R1 = GHC.IO.Exception.OtherError_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s943e_info" {
     sat_s943e_info:
         const sat_s943e_entry;
         const 4294967296;
         const 17;
 },
 Foreign.C.Error.$werrnoToIOError_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c94g1: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c94g2; else goto c94g3;
       c94g2: // global
           R1 = Foreign.C.Error.$werrnoToIOError_closure;
           P64[Sp - 32] = R2;
           I64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           call (stg_gc_fun)(R1) args: 40, res: 0, upd: 8;
       c94g3: // global
           I64[Sp - 40] = block_c94eb_info;
           P64[Sp - 32] = R2;
           I64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 40;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.$werrnoToIOError_info" {
     Foreign.C.Error.$werrnoToIOError_info:
         const Foreign.C.Error.$werrnoToIOError_entry;
         const 0;
         const 30064771086;
         const 17179869184;
         const S94ga_srt;
         const 132;
         const Foreign.C.Error.$werrnoToIOError_slow;
 },
 _c94eb() //  []
         { []
         }
     {offset
       c94eb: // global
           (_s9436::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [PtrHint] strerror(I64[Sp + 16]);
           I64[Sp - 8] = block_c94ef_info;
           R1 = GHC.IO.Encoding.getForeignEncoding_closure;
           I64[Sp] = _s9436::I64;
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c94eb_info" {
     block_c94eb_info:
         const _c94eb;
         const 132;
         const 12884901918;
         const S94ga_srt;
 },
 _c94ef() //  [R1]
         { []
         }
     {offset
       c94ef: // global
           _s9436::I64 = I64[Sp + 8];
           I64[Sp + 8] = block_c94eh_info;
           R3 = _s9436::I64;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Foreign.$wpeekCString_entry(R3,
                                                R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c94ef_info" {
     block_c94ef_info:
         const _c94ef;
         const 325;
         const 4294967326;
         const S94ga_srt+8;
 },
 _c94eh() //  [R1]
         { []
         }
     {offset
       c94eh: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto c94g8; else goto c94g7;
       c94g8: // global
           HpAlloc = 112;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c94g7: // global
           I64[Hp - 104] = GHC.Int.I32#_con_info;
           _s942Z::I64 = I64[Sp + 16];
           I64[Hp - 96] = _s942Z::I64;
           I64[Hp - 88] = GHC.Base.Just_con_info;
           P64[Hp - 80] = Hp - 103;
           I64[Hp - 72] = sat_s943e_info;
           I64[Hp - 56] = _s942Z::I64;
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = P64[Sp + 24];
           P64[Hp - 32] = Hp - 72;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = R1;
           P64[Hp - 8] = Hp - 86;
           P64[Hp] = P64[Sp + 32];
           R1 = (Hp + -47) & (-8);
           Sp = Sp + 40;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c94eh_info" {
     block_c94eh_info:
         const _c94eh;
         const 132;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.21397448 UTC

[section ""data" . Foreign.C.Error.errnoToIOError_closure" {
     Foreign.C.Error.errnoToIOError_closure:
         const Foreign.C.Error.errnoToIOError_info;
         const 0;
 },
 Foreign.C.Error.errnoToIOError_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c94hv: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94hw; else goto c94hx;
       c94hw: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.errnoToIOError_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94hx: // global
           I64[Sp - 32] = block_c94hs_info;
           R1 = R3;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u94hB; else goto c94ht;
       u94hB: // global
           call _c94hs(R1) args: 0, res: 0, upd: 0;
       c94ht: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.errnoToIOError_info" {
     Foreign.C.Error.errnoToIOError_info:
         const Foreign.C.Error.errnoToIOError_entry;
         const 0;
         const 12884901902;
         const 17179869208;
         const S94ga_srt+16;
 },
 _c94hs() //  [R1]
         { []
         }
     {offset
       c94hs: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 32;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c94hs_info" {
     block_c94hs_info:
         const _c94hs;
         const 3;
         const 4294967326;
         const S94ga_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.220266064 UTC

[section ""data" . Foreign.C.Error.$wlvl_closure" {
     Foreign.C.Error.$wlvl_closure:
         const Foreign.C.Error.$wlvl_info;
         const 0;
 },
 sat_s943u_entry() //  [R1]
         { []
         }
     {offset
       c94hY: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c94hZ; else goto c94i0;
       c94hZ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94i0: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R5 = GHC.Base.Nothing_closure+1;
           R4 = GHC.Base.Nothing_closure+1;
           R3 = I64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s943u_info" {
     sat_s943u_info:
         const sat_s943u_entry;
         const 4294967297;
         const 4294967315;
         const S94ga_srt+16;
 },
 sat_s943v_entry() //  [R1]
         { []
         }
     {offset
       c94i1: // global
           _s943v::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c94i2; else goto c94i3;
       c94i3: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c94i5; else goto c94i4;
       c94i5: // global
           HpAlloc = 32;
           goto c94i2;
       c94i2: // global
           R1 = _s943v::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94i4: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s943v::P64;
           _s943r::P64 = P64[_s943v::P64 + 16];
           _s943s::I64 = I64[_s943v::P64 + 24];
           I64[Hp - 24] = sat_s943u_info;
           P64[Hp - 8] = _s943r::P64;
           I64[Hp] = _s943s::I64;
           R2 = Hp - 24;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s943v_info" {
     sat_s943v_info:
         const sat_s943v_entry;
         const 4294967297;
         const 21474836499;
         const S94ga_srt+16;
 },
 Foreign.C.Error.$wlvl_entry() //  [R2, R3]
         { []
         }
     {offset
       c94i6: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c94ia; else goto c94i9;
       c94ia: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$wlvl_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94i9: // global
           I64[Hp - 24] = sat_s943v_info;
           P64[Hp - 8] = R2;
           I64[Hp] = R3;
           R1 = Hp - 24;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.$wlvl_info" {
     Foreign.C.Error.$wlvl_info:
         const Foreign.C.Error.$wlvl_entry;
         const 0;
         const 55834574862;
         const 12884901902;
         const S94ga_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.227749108 UTC

[section ""data" . Foreign.C.Error.throwErrno1_closure" {
     Foreign.C.Error.throwErrno1_closure:
         const Foreign.C.Error.throwErrno1_info;
         const 0;
 },
 Foreign.C.Error.throwErrno1_entry() //  [R2]
         { []
         }
     {offset
       c94iA: // global
           (_s943B::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s943B::I64));
           R2 = R2;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrno1_info" {
     Foreign.C.Error.throwErrno1_info:
         const Foreign.C.Error.throwErrno1_entry;
         const 0;
         const 4294967310;
         const 8589934597;
         const S94ga_srt+40;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.231676738 UTC

[section ""data" . Foreign.C.Error.throwErrno_closure" {
     Foreign.C.Error.throwErrno_closure:
         const Foreign.C.Error.throwErrno_info;
         const 0;
 },
 Foreign.C.Error.throwErrno_entry() //  [R2]
         { []
         }
     {offset
       c94iL: // global
           R2 = R2;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrno_info" {
     Foreign.C.Error.throwErrno_info:
         const Foreign.C.Error.throwErrno_entry;
         const 0;
         const 4294967310;
         const 8589934597;
         const S94ga_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.235685127 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf1_closure" {
     Foreign.C.Error.throwErrnoIf1_closure:
         const Foreign.C.Error.throwErrnoIf1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c94j4: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c94j5; else goto c94j6;
       c94j5: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIf1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94j6: // global
           I64[Sp - 24] = block_c94iW_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIf1_info" {
     Foreign.C.Error.throwErrnoIf1_info:
         const Foreign.C.Error.throwErrnoIf1_entry;
         const 0;
         const 12884901902;
         const 17179869207;
         const S94ga_srt+48;
 },
 _c94iW() //  [R1]
         { []
         }
     {offset
       c94iW: // global
           I64[Sp] = block_c94iY_info;
           R2 = R1;
           _s943J::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s943J::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c94iW_info" {
     block_c94iW_info:
         const _c94iW;
         const 2;
         const 4294967326;
         const S94ga_srt+48;
 },
 _c94iY() //  [R1]
         { []
         }
     {offset
       c94iY: // global
           if (R1 & 7 == 1) goto c94j1; else goto c94j2;
       c94j1: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c94j2: // global
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c94iY_info" {
     block_c94iY_info:
         const _c94iY;
         const 2;
         const 4294967326;
         const S94ga_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.242613875 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf_closure" {
     Foreign.C.Error.throwErrnoIf_closure:
         const Foreign.C.Error.throwErrnoIf_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c94jy: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIf1_entry(R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIf_info" {
     Foreign.C.Error.throwErrnoIf_info:
         const Foreign.C.Error.throwErrnoIf_entry;
         const 0;
         const 4294967310;
         const 17179869207;
         const S94ga_srt+56;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.247376858 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf_1_closure" {
     Foreign.C.Error.throwErrnoIf_1_closure:
         const Foreign.C.Error.throwErrnoIf_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf_1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c94jR: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c94jS; else goto c94jT;
       c94jS: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIf_1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94jT: // global
           I64[Sp - 24] = block_c94jJ_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIf_1_info" {
     Foreign.C.Error.throwErrnoIf_1_info:
         const Foreign.C.Error.throwErrnoIf_1_entry;
         const 0;
         const 38654705678;
         const 17179869207;
         const S94ga_srt+40;
 },
 _c94jJ() //  [R1]
         { []
         }
     {offset
       c94jJ: // global
           _s943L::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c94jL_info;
           R2 = R1;
           R1 = _s943L::P64;
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c94jJ_info" {
     block_c94jJ_info:
         const _c94jJ;
         const 2;
         const 4294967326;
         const S94ga_srt+40;
 },
 _c94jL() //  [R1]
         { []
         }
     {offset
       c94jL: // global
           if (R1 & 7 == 1) goto c94jO; else goto c94jP;
       c94jO: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c94jP: // global
           _s943M::P64 = P64[Sp + 8];
           (_s943W::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s943W::I64));
           R2 = _s943M::P64;
           Sp = Sp + 16;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c94jL_info" {
     block_c94jL_info:
         const _c94jL;
         const 1;
         const 4294967326;
         const S94ga_srt+40;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.254153455 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf__closure" {
     Foreign.C.Error.throwErrnoIf__closure:
         const Foreign.C.Error.throwErrnoIf__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf__entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c94ko: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIf_1_entry(R4,
                                                     R3,
                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIf__info" {
     Foreign.C.Error.throwErrnoIf__info:
         const Foreign.C.Error.throwErrnoIf__entry;
         const 0;
         const 4294967310;
         const 17179869207;
         const S94ga_srt+64;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.257214804 UTC

[section ""data" . sat_s943Z_closure" {
     sat_s943Z_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.259328854 UTC

[section ""data" . sat_s9440_closure" {
     sat_s9440_closure:
         const :_con_info;
         const sat_s943Z_closure+1;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.261717471 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus2_closure" {
     Foreign.C.Error.throwErrnoIfMinus2_closure:
         const Foreign.C.Error.throwErrnoIfMinus2_info;
         const 0;
         const 0;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus2_entry() //  [R1]
         { []
         }
     {offset
       c94kD: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c94kE; else goto c94kF;
       c94kE: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94kF: // global
           (_c94kA::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c94kA::I64 == 0) goto c94kC; else goto c94kB;
       c94kC: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c94kB: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c94kA::I64;
           R3 = sat_s9440_closure+2;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus2_info" {
     Foreign.C.Error.throwErrnoIfMinus2_info:
         const Foreign.C.Error.throwErrnoIfMinus2_entry;
         const 0;
         const 4294967317;
         const S94ga_srt+72;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.268358204 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1__closure" {
     Foreign.C.Error.throwErrnoIfMinus1__closure:
         const Foreign.C.Error.throwErrnoIfMinus1__info;
         const 0;
 },
 sat_s9444_entry() //  [R1]
         { []
         }
     {offset
       c94l1: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94l2; else goto c94l3;
       c94l2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94l3: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9444_info" {
     sat_s9444_info:
         const sat_s9444_entry;
         const 1;
         const 4294967312;
         const S94ga_srt+80;
 },
 ds_s9443_entry() //  [R1]
         { []
         }
     {offset
       c94l4: // global
           _s9443::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c94l5; else goto c94l6;
       c94l6: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c94l8; else goto c94l7;
       c94l8: // global
           HpAlloc = 24;
           goto c94l5;
       c94l5: // global
           R1 = _s9443::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94l7: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9443::P64;
           _s9442::P64 = P64[_s9443::P64 + 16];
           I64[Hp - 16] = sat_s9444_info;
           P64[Hp] = _s9442::P64;
           R2 = _s9442::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_s9443_info" {
     ds_s9443_info:
         const ds_s9443_entry;
         const 1;
         const 4294967312;
         const S94ga_srt+80;
 },
 sat_s944i_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c94lm: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c94ln; else goto c94lo;
       c94ln: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94lo: // global
           I64[Sp - 32] = block_c94le_info;
           _s9441::P64 = P64[R1 + 5];
           _s9443::P64 = P64[R1 + 13];
           R1 = R3;
           P64[Sp - 24] = _s9441::P64;
           P64[Sp - 16] = _s9443::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s944i_info" {
     sat_s944i_info:
         const sat_s944i_entry;
         const 2;
         const 4294967307;
         const 12884901903;
         const S94ga_srt+40;
 },
 _c94le() //  [R1]
         { []
         }
     {offset
       c94le: // global
           _s9443::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c94lg_info;
           R2 = P64[Sp + 8];
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = R1;
           P64[Sp + 8] = _s9443::P64;
           Sp = Sp - 8;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c94le_info" {
     block_c94le_info:
         const _c94le;
         const 3;
         const 4294967326;
         const S94ga_srt+40;
 },
 _c94lg() //  [R1]
         { []
         }
     {offset
       c94lg: // global
           if (R1 & 7 == 1) goto c94lj; else goto c94lk;
       c94lj: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c94lk: // global
           _s9445::P64 = P64[Sp + 8];
           (_s944f::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s944f::I64));
           R2 = _s9445::P64;
           Sp = Sp + 16;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c94lg_info" {
     block_c94lg_info:
         const _c94lg;
         const 1;
         const 4294967326;
         const S94ga_srt+40;
 },
 Foreign.C.Error.throwErrnoIfMinus1__entry() //  [R2, R3]
         { []
         }
     {offset
       c94ly: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c94lC; else goto c94lB;
       c94lC: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94lB: // global
           I64[Hp - 40] = ds_s9443_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s944i_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 13;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus1__info" {
     Foreign.C.Error.throwErrnoIfMinus1__info:
         const Foreign.C.Error.throwErrnoIfMinus1__entry;
         const 0;
         const 416611827726;
         const 8589934607;
         const S94ga_srt+40;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.283332332 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1_closure" {
     Foreign.C.Error.throwErrnoIfMinus1_closure:
         const Foreign.C.Error.throwErrnoIfMinus1_info;
         const 0;
 },
 sat_s944m_entry() //  [R1]
         { []
         }
     {offset
       c94mt: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94mu; else goto c94mv;
       c94mu: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94mv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s944m_info" {
     sat_s944m_info:
         const sat_s944m_entry;
         const 1;
         const 4294967312;
         const S94ga_srt+80;
 },
 ds_s944l_entry() //  [R1]
         { []
         }
     {offset
       c94mw: // global
           _s944l::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c94mx; else goto c94my;
       c94my: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c94mA; else goto c94mz;
       c94mA: // global
           HpAlloc = 24;
           goto c94mx;
       c94mx: // global
           R1 = _s944l::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94mz: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s944l::P64;
           _s944k::P64 = P64[_s944l::P64 + 16];
           I64[Hp - 16] = sat_s944m_info;
           P64[Hp] = _s944k::P64;
           R2 = _s944k::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_s944l_info" {
     ds_s944l_info:
         const ds_s944l_entry;
         const 1;
         const 4294967312;
         const S94ga_srt+80;
 },
 sat_s944u_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c94mO: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c94mP; else goto c94mQ;
       c94mP: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94mQ: // global
           I64[Sp - 32] = block_c94mG_info;
           _s944j::P64 = P64[R1 + 5];
           _s944l::P64 = P64[R1 + 13];
           R1 = R3;
           P64[Sp - 24] = _s944j::P64;
           P64[Sp - 16] = _s944l::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s944u_info" {
     sat_s944u_info:
         const sat_s944u_entry;
         const 2;
         const 4294967307;
         const 12884901903;
         const S94ga_srt+48;
 },
 _c94mG() //  [R1]
         { []
         }
     {offset
       c94mG: // global
           _s944j::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c94mI_info;
           R2 = _s944j::P64;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = R1;
           P64[Sp] = P64[Sp + 16];
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c94mG_info" {
     block_c94mG_info:
         const _c94mG;
         const 3;
         const 4294967326;
         const S94ga_srt+48;
 },
 _c94mI() //  [R1]
         { []
         }
     {offset
       c94mI: // global
           if (R1 & 7 == 1) goto c94mL; else goto c94mM;
       c94mL: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c94mM: // global
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c94mI_info" {
     block_c94mI_info:
         const _c94mI;
         const 2;
         const 4294967326;
         const S94ga_srt+48;
 },
 Foreign.C.Error.throwErrnoIfMinus1_entry() //  [R2, R3]
         { []
         }
     {offset
       c94mY: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c94n2; else goto c94n1;
       c94n2: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94n1: // global
           I64[Hp - 40] = ds_s944l_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s944u_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 13;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus1_info" {
     Foreign.C.Error.throwErrnoIfMinus1_info:
         const Foreign.C.Error.throwErrnoIfMinus1_entry;
         const 0;
         const 347892350990;
         const 8589934607;
         const S94ga_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.296437719 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNull1_closure" {
     Foreign.C.Error.throwErrnoIfNull1_closure:
         const Foreign.C.Error.throwErrnoIfNull1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNull1_entry() //  [R2, R3]
         { []
         }
     {offset
       c94nQ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c94nR; else goto c94nS;
       c94nR: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfNull1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94nS: // global
           I64[Sp - 16] = block_c94nL_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfNull1_info" {
     Foreign.C.Error.throwErrnoIfNull1_info:
         const Foreign.C.Error.throwErrnoIfNull1_entry;
         const 0;
         const 554050781198;
         const 12884901903;
         const S94ga_srt+48;
 },
 _c94nL() //  [R1]
         { []
         }
     {offset
       c94nL: // global
           I64[Sp - 8] = block_c94nN_info;
           _s944A::P64 = R1;
           R1 = R1;
           P64[Sp] = _s944A::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u94o2; else goto c94nO;
       u94o2: // global
           call _c94nN(R1) args: 0, res: 0, upd: 0;
       c94nO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c94nL_info" {
     block_c94nL_info:
         const _c94nL;
         const 1;
         const 4294967326;
         const S94ga_srt+48;
 },
 _c94nN() //  [R1]
         { []
         }
     {offset
       c94nN: // global
           if (I64[R1 + 7] == 0) goto c94o1; else goto c94o0;
       c94o1: // global
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
       c94o0: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c94nN_info" {
     block_c94nN_info:
         const _c94nN;
         const 2;
         const 4294967326;
         const S94ga_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.304205365 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNull_closure" {
     Foreign.C.Error.throwErrnoIfNull_closure:
         const Foreign.C.Error.throwErrnoIfNull_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNull_entry() //  [R2, R3]
         { []
         }
     {offset
       c94om: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfNull1_entry(R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfNull_info" {
     Foreign.C.Error.throwErrnoIfNull_info:
         const Foreign.C.Error.throwErrnoIfNull_entry;
         const 0;
         const 4294967310;
         const 12884901903;
         const S94ga_srt+104;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.308613925 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry2_closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry2_closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry2_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c94oF: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c94oG; else goto u94p5;
       c94oG: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u94p5: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c94ou() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus1Retry2_info" {
     Foreign.C.Error.throwErrnoIfMinus1Retry2_info:
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_entry;
         const 0;
         const 1103806595086;
         const 17179869207;
         const S94ga_srt+48;
 },
 _c94ou() //  []
         { []
         }
     {offset
       c94ou: // global
           I64[Sp - 8] = block_c94ox_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94ox() //  [R1]
         { []
         }
     {offset
       c94ox: // global
           I64[Sp - 8] = block_c94oz_info;
           R2 = R1;
           _s944K::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp] = _s944K::P64;
           Sp = Sp - 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c94ox_info" {
     block_c94ox_info:
         const _c94ox;
         const 3;
         const 4294967326;
         const S94ga_srt+48;
 },
 _c94oz() //  [R1]
         { []
         }
     {offset
       c94oz: // global
           if (R1 & 7 == 1) goto c94oC; else goto c94oD;
       c94oC: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c94oD: // global
           _s944E::P64 = P64[Sp + 16];
           _s944F::P64 = P64[Sp + 24];
           _s944G::P64 = P64[Sp + 32];
           (_s944P::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           if (%MO_SS_Conv_W64_W32(_s944P::I64) == 4 :: W32) goto c94p1; else goto c94oV;
       c94p1: // global
           P64[Sp + 16] = _s944E::P64;
           P64[Sp + 24] = _s944F::P64;
           P64[Sp + 32] = _s944G::P64;
           Sp = Sp + 16;
           call _c94ou() args: 0, res: 0, upd: 0;
       c94oV: // global
           R2 = _s944F::P64;
           Sp = Sp + 40;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c94oz_info" {
     block_c94oz_info:
         const _c94oz;
         const 4;
         const 4294967326;
         const S94ga_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.316604756 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetry_closure" {
     Foreign.C.Error.throwErrnoIfRetry_closure:
         const Foreign.C.Error.throwErrnoIfRetry_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetry_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c94pv: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfRetry_info" {
     Foreign.C.Error.throwErrnoIfRetry_info:
         const Foreign.C.Error.throwErrnoIfRetry_entry;
         const 0;
         const 4294967310;
         const 17179869207;
         const S94ga_srt+112;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.320889079 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetry_1_closure" {
     Foreign.C.Error.throwErrnoIfRetry_1_closure:
         const Foreign.C.Error.throwErrnoIfRetry_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetry_1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c94pI: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c94pJ; else goto c94pK;
       c94pJ: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfRetry_1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94pK: // global
           I64[Sp - 8] = block_c94pG_info;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfRetry_1_info" {
     Foreign.C.Error.throwErrnoIfRetry_1_info:
         const Foreign.C.Error.throwErrnoIfRetry_1_entry;
         const 0;
         const 12884901902;
         const 17179869207;
         const S94ga_srt+112;
 },
 _c94pG() //  []
         { []
         }
     {offset
       c94pG: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c94pG_info" {
     block_c94pG_info:
         const _c94pG;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.326093625 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetry__closure" {
     Foreign.C.Error.throwErrnoIfRetry__closure:
         const Foreign.C.Error.throwErrnoIfRetry__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetry__entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c94q1: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfRetry_1_entry(R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfRetry__info" {
     Foreign.C.Error.throwErrnoIfRetry__info:
         const Foreign.C.Error.throwErrnoIfRetry__entry;
         const 0;
         const 4294967310;
         const 17179869207;
         const S94ga_srt+120;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.33133426 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry__closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry__closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry__info;
         const 0;
 },
 sat_s9451_entry() //  [R1]
         { []
         }
     {offset
       c94qk: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94ql; else goto c94qm;
       c94ql: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94qm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9451_info" {
     sat_s9451_info:
         const sat_s9451_entry;
         const 1;
         const 4294967312;
         const S94ga_srt+80;
 },
 ds_s9450_entry() //  [R1]
         { []
         }
     {offset
       c94qn: // global
           _s9450::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c94qo; else goto c94qp;
       c94qp: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c94qr; else goto c94qq;
       c94qr: // global
           HpAlloc = 24;
           goto c94qo;
       c94qo: // global
           R1 = _s9450::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94qq: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9450::P64;
           _s944Z::P64 = P64[_s9450::P64 + 16];
           I64[Hp - 16] = sat_s9451_info;
           P64[Hp] = _s944Z::P64;
           R2 = _s944Z::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_s9450_info" {
     ds_s9450_info:
         const ds_s9450_entry;
         const 1;
         const 4294967312;
         const S94ga_srt+80;
 },
 pred_s9452_entry() //  [R1, R2]
         { []
         }
     {offset
       c94qx: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c94qy; else goto c94qz;
       c94qy: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c94qz: // global
           _s9453::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s9453::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . pred_s9452_info" {
     pred_s9452_info:
         const pred_s9452_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_s945a_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       c94qH: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c94qI; else goto c94qJ;
       c94qI: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94qJ: // global
           I64[Sp - 8] = block_c94qF_info;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s945a_info" {
     sat_s945a_info:
         const sat_s945a_entry;
         const 1;
         const 4294967305;
         const 12884901903;
         const S94ga_srt+112;
 },
 _c94qF() //  []
         { []
         }
     {offset
       c94qF: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c94qF_info" {
     block_c94qF_info:
         const _c94qF;
         const 0;
         const 30;
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry__entry() //  [R2, R3]
         { []
         }
     {offset
       c94qL: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c94qP; else goto c94qO;
       c94qP: // global
           HpAlloc = 64;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94qO: // global
           I64[Hp - 56] = ds_s9450_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = pred_s9452_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = Hp - 56;
           I64[Hp - 8] = sat_s945a_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 5;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus1Retry__info" {
     Foreign.C.Error.throwErrnoIfMinus1Retry__info:
         const Foreign.C.Error.throwErrnoIfMinus1Retry__entry;
         const 0;
         const 347892350990;
         const 8589934607;
         const S94ga_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.345224292 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry1_closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry1_closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry1_info;
         const 0;
 },
 sat_s945e_entry() //  [R1]
         { []
         }
     {offset
       c94rH: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94rI; else goto c94rJ;
       c94rI: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94rJ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s945e_info" {
     sat_s945e_info:
         const sat_s945e_entry;
         const 1;
         const 4294967312;
         const S94ga_srt+80;
 },
 ds_s945d_entry() //  [R1]
         { []
         }
     {offset
       c94rK: // global
           _s945d::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c94rL; else goto c94rM;
       c94rM: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c94rO; else goto c94rN;
       c94rO: // global
           HpAlloc = 24;
           goto c94rL;
       c94rL: // global
           R1 = _s945d::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94rN: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s945d::P64;
           _s945c::P64 = P64[_s945d::P64 + 16];
           I64[Hp - 16] = sat_s945e_info;
           P64[Hp] = _s945c::P64;
           R2 = _s945c::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_s945d_info" {
     ds_s945d_info:
         const ds_s945d_entry;
         const 1;
         const 4294967312;
         const S94ga_srt+80;
 },
 sat_s945g_entry() //  [R1, R2]
         { []
         }
     {offset
       c94rU: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c94rV; else goto c94rW;
       c94rV: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c94rW: // global
           _s945f::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s945f::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s945g_info" {
     sat_s945g_info:
         const sat_s945g_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry1_entry() //  [R2, R3]
         { []
         }
     {offset
       c94rX: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c94s1; else goto c94s0;
       c94s1: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94s0: // global
           I64[Hp - 40] = ds_s945d_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s945g_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R2 = Hp - 15;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry2_closure+4;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus1Retry1_info" {
     Foreign.C.Error.throwErrnoIfMinus1Retry1_info:
         const Foreign.C.Error.throwErrnoIfMinus1Retry1_entry;
         const 0;
         const 622770257934;
         const 8589934607;
         const S94ga_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.354710752 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry_closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry_closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry_entry() //  [R2, R3]
         { []
         }
     {offset
       c94sy: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1Retry1_entry(R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus1Retry_info" {
     Foreign.C.Error.throwErrnoIfMinus1Retry_info:
         const Foreign.C.Error.throwErrnoIfMinus1Retry_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S94ga_srt+136;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.35895474 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetry2_closure" {
     Foreign.C.Error.throwErrnoIfNullRetry2_closure:
         const Foreign.C.Error.throwErrnoIfNullRetry2_info;
 },
 Foreign.C.Error.throwErrnoIfNullRetry2_entry() //  [R2]
         { []
         }
     {offset
       c94sM: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c94sN; else goto c94sO;
       c94sN: // global
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfNullRetry2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c94sO: // global
           I64[Sp - 8] = block_c94sJ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u94sT; else goto c94sK;
       u94sT: // global
           call _c94sJ(R1) args: 0, res: 0, upd: 0;
       c94sK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfNullRetry2_info" {
     Foreign.C.Error.throwErrnoIfNullRetry2_info:
         const Foreign.C.Error.throwErrnoIfNullRetry2_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c94sJ() //  [R1]
         { []
         }
     {offset
       c94sJ: // global
           R1 = I64[((I64[R1 + 7] == 0) << 3) + GHC.Types.Bool_closure_tbl];
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c94sJ_info" {
     block_c94sJ_info:
         const _c94sJ;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.364038545 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetry1_closure" {
     Foreign.C.Error.throwErrnoIfNullRetry1_closure:
         const Foreign.C.Error.throwErrnoIfNullRetry1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetry1_entry() //  [R2, R3]
         { []
         }
     {offset
       c94tc: // global
           R4 = R3;
           R3 = R2;
           R2 = Foreign.C.Error.throwErrnoIfNullRetry2_closure+1;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfNullRetry1_info" {
     Foreign.C.Error.throwErrnoIfNullRetry1_info:
         const Foreign.C.Error.throwErrnoIfNullRetry1_entry;
         const 0;
         const 4294967310;
         const 12884901903;
         const S94ga_srt+112;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.367960949 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetry_closure" {
     Foreign.C.Error.throwErrnoIfNullRetry_closure:
         const Foreign.C.Error.throwErrnoIfNullRetry_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetry_entry() //  [R2, R3]
         { []
         }
     {offset
       c94tn: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfNullRetry1_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfNullRetry_info" {
     Foreign.C.Error.throwErrnoIfNullRetry_info:
         const Foreign.C.Error.throwErrnoIfNullRetry_entry;
         const 0;
         const 4294967310;
         const 12884901903;
         const S94ga_srt+144;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.373199002 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry() //  [R2,
                                                               R3, R4, R5]
         { []
         }
     {offset
       c94tG: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c94tH; else goto u94ug;
       c94tH: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u94ug: // global
           P64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           call _c94tv() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_info" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_info:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry;
         const 0;
         const 35188667056142;
         const 21474836504;
         const S94ga_srt+48;
 },
 _c94tv() //  []
         { []
         }
     {offset
       c94tv: // global
           I64[Sp - 8] = block_c94ty_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94ty() //  [R1]
         { []
         }
     {offset
       c94ty: // global
           I64[Sp - 8] = block_c94tA_info;
           R2 = R1;
           _s945s::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp] = _s945s::P64;
           Sp = Sp - 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c94ty_info" {
     block_c94ty_info:
         const _c94ty;
         const 4;
         const 4294967326;
         const S94ga_srt+48;
 },
 _c94tA() //  [R1]
         { []
         }
     {offset
       c94tA: // global
           if (R1 & 7 == 1) goto c94tD; else goto c94tE;
       c94tD: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c94tE: // global
           _s945l::P64 = P64[Sp + 16];
           _s945m::P64 = P64[Sp + 24];
           _s945n::P64 = P64[Sp + 32];
           _s945o::P64 = P64[Sp + 40];
           (_s945x::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           _s945y::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s945x::I64));
           if (_s945y::I64 != 4) goto u94uf; else goto c94u2;
       u94uf: // global
           if (_s945y::I64 != 11) goto c94tW; else goto c94ub;
       c94tW: // global
           R2 = _s945m::P64;
           Sp = Sp + 48;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
       c94ub: // global
           I64[Sp + 8] = block_c94ua_info;
           R1 = _s945o::P64;
           Sp = Sp + 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
       c94u2: // global
           P64[Sp + 16] = _s945l::P64;
           P64[Sp + 24] = _s945m::P64;
           P64[Sp + 32] = _s945n::P64;
           P64[Sp + 40] = _s945o::P64;
           Sp = Sp + 16;
           call _c94tv() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c94tA_info" {
     block_c94tA_info:
         const _c94tA;
         const 5;
         const 4294967326;
         const S94ga_srt+48;
 },
 _c94ua() //  []
         { []
         }
     {offset
       c94ua: // global
           P64[Sp + 8] = P64[Sp + 8];
           P64[Sp + 16] = P64[Sp + 16];
           P64[Sp + 24] = P64[Sp + 24];
           P64[Sp + 32] = P64[Sp + 32];
           Sp = Sp + 8;
           call _c94tv() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c94ua_info" {
     block_c94ua_info:
         const _c94ua;
         const 4;
         const 4294967326;
         const S94ga_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.383960606 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetryMayBlock_closure" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock_closure:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetryMayBlock_entry() //  [R2, R3, R4,
                                                        R5]
         { []
         }
     {offset
       c94uQ: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfRetryMayBlock_info" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock_info:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_entry;
         const 0;
         const 4294967310;
         const 21474836504;
         const S94ga_srt+152;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.387678784 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetryMayBlock_1_entry() //  [R2, R3,
                                                          R4, R5]
         { []
         }
     {offset
       c94v3: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c94v4; else goto c94v5;
       c94v4: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94v5: // global
           I64[Sp - 8] = block_c94v1_info;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfRetryMayBlock_1_info" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock_1_info:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_1_entry;
         const 0;
         const 12884901902;
         const 21474836504;
         const S94ga_srt+152;
 },
 _c94v1() //  []
         { []
         }
     {offset
       c94v1: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c94v1_info" {
     block_c94v1_info:
         const _c94v1;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.393790269 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetryMayBlock__closure" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock__closure:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetryMayBlock__entry() //  [R2, R3, R4,
                                                         R5]
         { []
         }
     {offset
       c94vm: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfRetryMayBlock_1_entry(R5,
                                                                  R4,
                                                                  R3,
                                                                  R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfRetryMayBlock__info" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock__info:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock__entry;
         const 0;
         const 4294967310;
         const 21474836504;
         const S94ga_srt+160;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.399175104 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__info;
         const 0;
 },
 sat_s945N_entry() //  [R1]
         { []
         }
     {offset
       c94vF: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94vG; else goto c94vH;
       c94vG: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94vH: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s945N_info" {
     sat_s945N_info:
         const sat_s945N_entry;
         const 1;
         const 4294967312;
         const S94ga_srt+80;
 },
 ds_s945M_entry() //  [R1]
         { []
         }
     {offset
       c94vI: // global
           _s945M::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c94vJ; else goto c94vK;
       c94vK: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c94vM; else goto c94vL;
       c94vM: // global
           HpAlloc = 24;
           goto c94vJ;
       c94vJ: // global
           R1 = _s945M::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94vL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s945M::P64;
           _s945L::P64 = P64[_s945M::P64 + 16];
           I64[Hp - 16] = sat_s945N_info;
           P64[Hp] = _s945L::P64;
           R2 = _s945L::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_s945M_info" {
     ds_s945M_info:
         const ds_s945M_entry;
         const 1;
         const 4294967312;
         const S94ga_srt+80;
 },
 pred_s945O_entry() //  [R1, R2]
         { []
         }
     {offset
       c94vS: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c94vT; else goto c94vU;
       c94vT: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c94vU: // global
           _s945P::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s945P::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . pred_s945O_info" {
     pred_s945O_info:
         const pred_s945O_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_s945X_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c94w2: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c94w3; else goto c94w4;
       c94w3: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94w4: // global
           I64[Sp - 8] = block_c94w0_info;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 4];
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s945X_info" {
     sat_s945X_info:
         const sat_s945X_entry;
         const 1;
         const 4294967305;
         const 17179869207;
         const S94ga_srt+152;
 },
 _c94w0() //  []
         { []
         }
     {offset
       c94w0: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c94w0_info" {
     block_c94w0_info:
         const _c94w0;
         const 0;
         const 30;
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__entry() //  [R2,
                                                               R3]
         { []
         }
     {offset
       c94w6: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c94wa; else goto c94w9;
       c94wa: // global
           HpAlloc = 64;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94w9: // global
           I64[Hp - 56] = ds_s945M_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = pred_s945O_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = Hp - 56;
           I64[Hp - 8] = sat_s945X_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 4;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__info" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__info:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__entry;
         const 0;
         const 10999411245070;
         const 8589934607;
         const S94ga_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.413184673 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_info;
         const 0;
 },
 sat_s9461_entry() //  [R1]
         { []
         }
     {offset
       c94x2: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94x3; else goto c94x4;
       c94x3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94x4: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9461_info" {
     sat_s9461_info:
         const sat_s9461_entry;
         const 1;
         const 4294967312;
         const S94ga_srt+80;
 },
 ds_s9460_entry() //  [R1]
         { []
         }
     {offset
       c94x5: // global
           _s9460::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c94x6; else goto c94x7;
       c94x7: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c94x9; else goto c94x8;
       c94x9: // global
           HpAlloc = 24;
           goto c94x6;
       c94x6: // global
           R1 = _s9460::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94x8: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9460::P64;
           _s945Z::P64 = P64[_s9460::P64 + 16];
           I64[Hp - 16] = sat_s9461_info;
           P64[Hp] = _s945Z::P64;
           R2 = _s945Z::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_s9460_info" {
     ds_s9460_info:
         const ds_s9460_entry;
         const 1;
         const 4294967312;
         const S94ga_srt+80;
 },
 sat_s9463_entry() //  [R1, R2]
         { []
         }
     {offset
       c94xf: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c94xg; else goto c94xh;
       c94xg: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c94xh: // global
           _s9462::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s9462::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s9463_info" {
     sat_s9463_info:
         const sat_s9463_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_entry() //  [R2,
                                                               R3]
         { []
         }
     {offset
       c94xi: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c94xm; else goto c94xl;
       c94xm: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94xl: // global
           I64[Hp - 40] = ds_s9460_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s9463_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R2 = Hp - 15;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure+5;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_info" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_info:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_entry;
         const 0;
         const 19795504267278;
         const 8589934607;
         const S94ga_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.42230626 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_entry() //  [R2,
                                                              R3]
         { []
         }
     {offset
       c94xT: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_entry(R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_info" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_info:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S94ga_srt+176;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.425742413 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_closure" {
     Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_closure:
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_entry() //  [R2, R3,
                                                             R4]
         { []
         }
     {offset
       c94y4: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = Foreign.C.Error.throwErrnoIfNullRetry2_closure+1;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_info" {
     Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_info:
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_entry;
         const 0;
         const 4294967310;
         const 17179869207;
         const S94ga_srt+152;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.430009281 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetryMayBlock_closure" {
     Foreign.C.Error.throwErrnoIfNullRetryMayBlock_closure:
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetryMayBlock_entry() //  [R2, R3,
                                                            R4]
         { []
         }
     {offset
       c94yf: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_entry(R4,
                                                                     R3,
                                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoIfNullRetryMayBlock_info" {
     Foreign.C.Error.throwErrnoIfNullRetryMayBlock_info:
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock_entry;
         const 0;
         const 4294967310;
         const 17179869207;
         const S94ga_srt+184;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.434638347 UTC

[section ""data" . Foreign.C.Error.$wlvl1_closure" {
     Foreign.C.Error.$wlvl1_closure:
         const Foreign.C.Error.$wlvl1_info;
         const 0;
 },
 sat_s9469_entry() //  [R1]
         { []
         }
     {offset
       c94yz: // global
           _s9469::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c94yA; else goto c94yB;
       c94yB: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c94yD; else goto c94yC;
       c94yD: // global
           HpAlloc = 16;
           goto c94yA;
       c94yA: // global
           R1 = _s9469::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94yC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9469::P64;
           _s9464::P64 = P64[_s9469::P64 + 16];
           _s9466::P64 = P64[_s9469::P64 + 24];
           _s9465::I64 = I64[_s9469::P64 + 32];
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = _s9466::P64;
           R5 = Hp - 6;
           R4 = GHC.Base.Nothing_closure+1;
           R3 = _s9465::I64;
           R2 = _s9464::P64;
           Sp = Sp - 16;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s9469_info" {
     sat_s9469_info:
         const sat_s9469_entry;
         const 4294967298;
         const 4294967311;
         const S94ga_srt+16;
 },
 sat_s946a_entry() //  [R1]
         { []
         }
     {offset
       c94yE: // global
           _s946a::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c94yF; else goto c94yG;
       c94yG: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c94yI; else goto c94yH;
       c94yI: // global
           HpAlloc = 40;
           goto c94yF;
       c94yF: // global
           R1 = _s946a::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94yH: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s946a::P64;
           _s9464::P64 = P64[_s946a::P64 + 16];
           _s9466::P64 = P64[_s946a::P64 + 24];
           _s9465::I64 = I64[_s946a::P64 + 32];
           I64[Hp - 32] = sat_s9469_info;
           P64[Hp - 16] = _s9464::P64;
           P64[Hp - 8] = _s9466::P64;
           I64[Hp] = _s9465::I64;
           R2 = Hp - 32;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s946a_info" {
     sat_s946a_info:
         const sat_s946a_entry;
         const 4294967298;
         const 21474836495;
         const S94ga_srt+16;
 },
 Foreign.C.Error.$wlvl1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c94yJ: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c94yN; else goto c94yM;
       c94yN: // global
           HpAlloc = 40;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$wlvl1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94yM: // global
           I64[Hp - 32] = sat_s946a_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R4;
           I64[Hp] = R3;
           R1 = Hp - 32;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.$wlvl1_info" {
     Foreign.C.Error.$wlvl1_info:
         const Foreign.C.Error.$wlvl1_entry;
         const 0;
         const 18014419984318478;
         const 17179869205;
         const S94ga_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.442361344 UTC

[section ""data" . Foreign.C.Error.throwErrnoPath1_closure" {
     Foreign.C.Error.throwErrnoPath1_closure:
         const Foreign.C.Error.throwErrnoPath1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPath1_entry() //  [R2, R3]
         { []
         }
     {offset
       c94zd: // global
           _s946c::P64 = R3;
           (_s946h::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R4 = _s946c::P64;
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s946h::I64));
           R2 = R2;
           call Foreign.C.Error.$wlvl1_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoPath1_info" {
     Foreign.C.Error.throwErrnoPath1_info:
         const Foreign.C.Error.throwErrnoPath1_entry;
         const 0;
         const 4294967310;
         const 12884901903;
         const S94ga_srt+192;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.446356936 UTC

[section ""data" . Foreign.C.Error.throwErrnoPath_closure" {
     Foreign.C.Error.throwErrnoPath_closure:
         const Foreign.C.Error.throwErrnoPath_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPath_entry() //  [R2, R3]
         { []
         }
     {offset
       c94zo: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoPath_info" {
     Foreign.C.Error.throwErrnoPath_info:
         const Foreign.C.Error.throwErrnoPath_entry;
         const 0;
         const 4294967310;
         const 12884901903;
         const S94ga_srt+200;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.450989659 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf1_closure" {
     Foreign.C.Error.throwErrnoPathIf1_closure:
         const Foreign.C.Error.throwErrnoPathIf1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf1_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c94zH: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94zI; else goto c94zJ;
       c94zI: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIf1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94zJ: // global
           I64[Sp - 32] = block_c94zz_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoPathIf1_info" {
     Foreign.C.Error.throwErrnoPathIf1_info:
         const Foreign.C.Error.throwErrnoPathIf1_entry;
         const 0;
         const 12884901902;
         const 21474836504;
         const S94ga_srt+200;
 },
 _c94zz() //  [R1]
         { []
         }
     {offset
       c94zz: // global
           I64[Sp] = block_c94zB_info;
           R2 = R1;
           _s946q::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s946q::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c94zz_info" {
     block_c94zz_info:
         const _c94zz;
         const 3;
         const 4294967326;
         const S94ga_srt+200;
 },
 _c94zB() //  [R1]
         { []
         }
     {offset
       c94zB: // global
           if (R1 & 7 == 1) goto c94zE; else goto c94zF;
       c94zE: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c94zF: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c94zB_info" {
     block_c94zB_info:
         const _c94zB;
         const 3;
         const 4294967326;
         const S94ga_srt+200;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.457786921 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf_closure" {
     Foreign.C.Error.throwErrnoPathIf_closure:
         const Foreign.C.Error.throwErrnoPathIf_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c94Ab: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPathIf1_entry(R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoPathIf_info" {
     Foreign.C.Error.throwErrnoPathIf_info:
         const Foreign.C.Error.throwErrnoPathIf_entry;
         const 0;
         const 4294967310;
         const 21474836504;
         const S94ga_srt+208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.462583562 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf_1_closure" {
     Foreign.C.Error.throwErrnoPathIf_1_closure:
         const Foreign.C.Error.throwErrnoPathIf_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf_1_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c94Au: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94Av; else goto c94Aw;
       c94Av: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIf_1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94Aw: // global
           I64[Sp - 32] = block_c94Am_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoPathIf_1_info" {
     Foreign.C.Error.throwErrnoPathIf_1_info:
         const Foreign.C.Error.throwErrnoPathIf_1_entry;
         const 0;
         const 38654705678;
         const 21474836504;
         const S94ga_srt+192;
 },
 _c94Am() //  [R1]
         { []
         }
     {offset
       c94Am: // global
           _s946s::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c94Ao_info;
           R2 = R1;
           R1 = _s946s::P64;
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c94Am_info" {
     block_c94Am_info:
         const _c94Am;
         const 3;
         const 4294967326;
         const S94ga_srt+192;
 },
 _c94Ao() //  [R1]
         { []
         }
     {offset
       c94Ao: // global
           if (R1 & 7 == 1) goto c94Ar; else goto c94As;
       c94Ar: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c94As: // global
           _s946t::P64 = P64[Sp + 8];
           _s946u::P64 = P64[Sp + 16];
           (_s946E::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R4 = _s946u::P64;
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s946E::I64));
           R2 = _s946t::P64;
           Sp = Sp + 24;
           call Foreign.C.Error.$wlvl1_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c94Ao_info" {
     block_c94Ao_info:
         const _c94Ao;
         const 2;
         const 4294967326;
         const S94ga_srt+192;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.470054059 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf__closure" {
     Foreign.C.Error.throwErrnoPathIf__closure:
         const Foreign.C.Error.throwErrnoPathIf__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf__entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c94B1: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPathIf_1_entry(R5,
                                                         R4,
                                                         R3,
                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoPathIf__info" {
     Foreign.C.Error.throwErrnoPathIf__info:
         const Foreign.C.Error.throwErrnoPathIf__entry;
         const 0;
         const 4294967310;
         const 21474836504;
         const S94ga_srt+216;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.475987899 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfMinus1__closure" {
     Foreign.C.Error.throwErrnoPathIfMinus1__closure:
         const Foreign.C.Error.throwErrnoPathIfMinus1__info;
         const 0;
 },
 sat_s946K_entry() //  [R1]
         { []
         }
     {offset
       c94Bk: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94Bl; else goto c94Bm;
       c94Bl: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94Bm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s946K_info" {
     sat_s946K_info:
         const sat_s946K_entry;
         const 1;
         const 4294967312;
         const S94ga_srt+80;
 },
 ds_s946J_entry() //  [R1]
         { []
         }
     {offset
       c94Bn: // global
           _s946J::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c94Bo; else goto c94Bp;
       c94Bp: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c94Br; else goto c94Bq;
       c94Br: // global
           HpAlloc = 24;
           goto c94Bo;
       c94Bo: // global
           R1 = _s946J::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94Bq: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s946J::P64;
           _s946I::P64 = P64[_s946J::P64 + 16];
           I64[Hp - 16] = sat_s946K_info;
           P64[Hp] = _s946I::P64;
           R2 = _s946I::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_s946J_info" {
     ds_s946J_info:
         const ds_s946J_entry;
         const 1;
         const 4294967312;
         const S94ga_srt+80;
 },
 sat_s946Z_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c94BF: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c94BG; else goto c94BH;
       c94BG: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94BH: // global
           I64[Sp - 40] = block_c94Bx_info;
           _s946H::P64 = P64[R1 + 4];
           _s946J::P64 = P64[R1 + 12];
           R1 = R4;
           P64[Sp - 32] = _s946H::P64;
           P64[Sp - 24] = _s946J::P64;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 40;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s946Z_info" {
     sat_s946Z_info:
         const sat_s946Z_entry;
         const 2;
         const 4294967307;
         const 17179869207;
         const S94ga_srt+192;
 },
 _c94Bx() //  [R1]
         { []
         }
     {offset
       c94Bx: // global
           _s946J::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c94Bz_info;
           R2 = P64[Sp + 8];
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = R1;
           P64[Sp + 8] = _s946J::P64;
           Sp = Sp - 8;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c94Bx_info" {
     block_c94Bx_info:
         const _c94Bx;
         const 4;
         const 4294967326;
         const S94ga_srt+192;
 },
 _c94Bz() //  [R1]
         { []
         }
     {offset
       c94Bz: // global
           if (R1 & 7 == 1) goto c94BC; else goto c94BD;
       c94BC: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c94BD: // global
           _s946L::P64 = P64[Sp + 8];
           _s946M::P64 = P64[Sp + 16];
           (_s946W::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R4 = _s946M::P64;
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s946W::I64));
           R2 = _s946L::P64;
           Sp = Sp + 24;
           call Foreign.C.Error.$wlvl1_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c94Bz_info" {
     block_c94Bz_info:
         const _c94Bz;
         const 2;
         const 4294967326;
         const S94ga_srt+192;
 },
 Foreign.C.Error.throwErrnoPathIfMinus1__entry() //  [R2, R3]
         { []
         }
     {offset
       c94BR: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c94BV; else goto c94BU;
       c94BV: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIfMinus1__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94BU: // global
           I64[Hp - 40] = ds_s946J_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s946Z_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 12;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoPathIfMinus1__info" {
     Foreign.C.Error.throwErrnoPathIfMinus1__info:
         const Foreign.C.Error.throwErrnoPathIfMinus1__entry;
         const 0;
         const 1196272945987598;
         const 8589934607;
         const S94ga_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.491230833 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfNull1_closure" {
     Foreign.C.Error.throwErrnoPathIfNull1_closure:
         const Foreign.C.Error.throwErrnoPathIfNull1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIfNull1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c94CJ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94CK; else goto c94CL;
       c94CK: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIfNull1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94CL: // global
           I64[Sp - 24] = block_c94CE_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoPathIfNull1_info" {
     Foreign.C.Error.throwErrnoPathIfNull1_info:
         const Foreign.C.Error.throwErrnoPathIfNull1_entry;
         const 0;
         const 73014444046;
         const 17179869207;
         const S94ga_srt+200;
 },
 _c94CE() //  [R1]
         { []
         }
     {offset
       c94CE: // global
           I64[Sp - 8] = block_c94CG_info;
           _s9476::P64 = R1;
           R1 = R1;
           P64[Sp] = _s9476::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u94CV; else goto c94CH;
       u94CV: // global
           call _c94CG(R1) args: 0, res: 0, upd: 0;
       c94CH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c94CE_info" {
     block_c94CE_info:
         const _c94CE;
         const 2;
         const 4294967326;
         const S94ga_srt+200;
 },
 _c94CG() //  [R1]
         { []
         }
     {offset
       c94CG: // global
           if (I64[R1 + 7] == 0) goto c94CU; else goto c94CT;
       c94CU: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
       c94CT: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c94CG_info" {
     block_c94CG_info:
         const _c94CG;
         const 3;
         const 4294967326;
         const S94ga_srt+200;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.497984566 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfNull_closure" {
     Foreign.C.Error.throwErrnoPathIfNull_closure:
         const Foreign.C.Error.throwErrnoPathIfNull_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIfNull_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c94Df: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPathIfNull1_entry(R4,
                                                            R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoPathIfNull_info" {
     Foreign.C.Error.throwErrnoPathIfNull_info:
         const Foreign.C.Error.throwErrnoPathIfNull_entry;
         const 0;
         const 4294967310;
         const 17179869207;
         const S94ga_srt+232;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.50355077 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfMinus1_closure" {
     Foreign.C.Error.throwErrnoPathIfMinus1_closure:
         const Foreign.C.Error.throwErrnoPathIfMinus1_info;
         const 0;
 },
 sat_s947d_entry() //  [R1]
         { []
         }
     {offset
       c94Dy: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94Dz; else goto c94DA;
       c94Dz: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94DA: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s947d_info" {
     sat_s947d_info:
         const sat_s947d_entry;
         const 1;
         const 4294967312;
         const S94ga_srt+80;
 },
 ds_s947c_entry() //  [R1]
         { []
         }
     {offset
       c94DB: // global
           _s947c::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c94DC; else goto c94DD;
       c94DD: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c94DF; else goto c94DE;
       c94DF: // global
           HpAlloc = 24;
           goto c94DC;
       c94DC: // global
           R1 = _s947c::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94DE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s947c::P64;
           _s947b::P64 = P64[_s947c::P64 + 16];
           I64[Hp - 16] = sat_s947d_info;
           P64[Hp] = _s947b::P64;
           R2 = _s947b::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_s947c_info" {
     ds_s947c_info:
         const ds_s947c_entry;
         const 1;
         const 4294967312;
         const S94ga_srt+80;
 },
 sat_s947m_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       c94DT: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c94DU; else goto c94DV;
       c94DU: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94DV: // global
           I64[Sp - 40] = block_c94DL_info;
           _s947a::P64 = P64[R1 + 4];
           _s947c::P64 = P64[R1 + 12];
           R1 = R4;
           P64[Sp - 32] = _s947a::P64;
           P64[Sp - 24] = _s947c::P64;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 40;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_s947m_info" {
     sat_s947m_info:
         const sat_s947m_entry;
         const 2;
         const 4294967307;
         const 17179869207;
         const S94ga_srt+200;
 },
 _c94DL() //  [R1]
         { []
         }
     {offset
       c94DL: // global
           _s947a::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c94DN_info;
           R2 = _s947a::P64;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = R1;
           P64[Sp] = P64[Sp + 16];
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c94DL_info" {
     block_c94DL_info:
         const _c94DL;
         const 4;
         const 4294967326;
         const S94ga_srt+200;
 },
 _c94DN() //  [R1]
         { []
         }
     {offset
       c94DN: // global
           if (R1 & 7 == 1) goto c94DQ; else goto c94DR;
       c94DQ: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c94DR: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c94DN_info" {
     block_c94DN_info:
         const _c94DN;
         const 3;
         const 4294967326;
         const S94ga_srt+200;
 },
 Foreign.C.Error.throwErrnoPathIfMinus1_entry() //  [R2, R3]
         { []
         }
     {offset
       c94E3: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c94E7; else goto c94E6;
       c94E7: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIfMinus1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94E6: // global
           I64[Hp - 40] = ds_s947c_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s947m_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 12;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Foreign.C.Error.throwErrnoPathIfMinus1_info" {
     Foreign.C.Error.throwErrnoPathIfMinus1_info:
         const Foreign.C.Error.throwErrnoPathIfMinus1_entry;
         const 0;
         const 4644341410693134;
         const 8589934607;
         const S94ga_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:04:14.516000702 UTC

[section ""relreadonly" . S94ga_srt" {
     S94ga_srt:
         const GHC.IO.Encoding.getForeignEncoding_closure;
         const GHC.Foreign.$wpeekCString_closure;
         const Foreign.C.Error.$werrnoToIOError_closure;
         const Foreign.C.Error.errnoToIOError_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const Foreign.C.Error.$wlvl_closure;
         const Foreign.C.Error.throwErrno1_closure;
         const Foreign.C.Error.throwErrnoIf1_closure;
         const Foreign.C.Error.throwErrnoIf_1_closure;
         const sat_s9440_closure;
         const Foreign.C.Error.throwErrnoIfMinus2_closure;
         const Foreign.C.Error.throwErrnoIfMinus1__closure;
         const Foreign.C.Error.throwErrnoIfMinus1_closure;
         const Foreign.C.Error.throwErrnoIfNull1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
         const Foreign.C.Error.throwErrnoIfRetry_1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry__closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry1_closure;
         const Foreign.C.Error.throwErrnoIfNullRetry1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure;
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure;
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure;
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_closure;
         const Foreign.C.Error.$wlvl1_closure;
         const Foreign.C.Error.throwErrnoPath1_closure;
         const Foreign.C.Error.throwErrnoPathIf1_closure;
         const Foreign.C.Error.throwErrnoPathIf_1_closure;
         const Foreign.C.Error.throwErrnoPathIfMinus1__closure;
         const Foreign.C.Error.throwErrnoPathIfNull1_closure;
         const Foreign.C.Error.throwErrnoPathIfMinus1_closure;
 }]

