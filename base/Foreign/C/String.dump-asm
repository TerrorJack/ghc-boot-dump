
==================== Asm code ====================
2018-03-16 16:04:07.674046349 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.C.String.$trModule4_bytes
.type Foreign.C.String.$trModule4_bytes, @object
Foreign.C.String.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:04:07.675802389 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.$trModule3_closure
.type Foreign.C.String.$trModule3_closure, @object
Foreign.C.String.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Foreign.C.String.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:04:07.677737988 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.C.String.$trModule2_bytes
.type Foreign.C.String.$trModule2_bytes, @object
Foreign.C.String.$trModule2_bytes:
	.asciz "Foreign.C.String"


==================== Asm code ====================
2018-03-16 16:04:07.679369468 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.$trModule1_closure
.type Foreign.C.String.$trModule1_closure, @object
Foreign.C.String.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Foreign.C.String.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:04:07.68111477 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.$trModule_closure
.type Foreign.C.String.$trModule_closure, @object
Foreign.C.String.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	Foreign.C.String.$trModule3_closure+1
	.quad	Foreign.C.String.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:07.692605215 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCStringLen1_closure
.type Foreign.C.String.withCStringLen1_closure, @object
Foreign.C.String.withCStringLen1_closure:
	.quad	Foreign.C.String.withCStringLen1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.693871924 UTC

.section .text
.align 8
$wgo_s8YpD_entry:
_c8ZD0:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ZD1
_c8ZD2:
	movq $block_c8ZCV_info,-48(%rbp)
	movq %rbx,%rax
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rdx
	movq 22(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-48,%rbp
	jmp stg_newPinnedByteArray#
_c8ZD1:
	jmp *-8(%r13)
	.size $wgo_s8YpD_entry, .-$wgo_s8YpD_entry


==================== Asm code ====================
2018-03-16 16:04:07.694564983 UTC

.section .data.rel.ro
.align 8
.align 1
$wgo_s8YpD_info:
	.quad	$wgo_s8YpD_entry
	.quad	3
	.quad	8
	.quad	8589934596


==================== Asm code ====================
2018-03-16 16:04:07.695326942 UTC

.section .text
.align 8
_c8ZCV:
_c8ZCV:
	movq $block_c8ZCX_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8ZCX
_c8ZCY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZCV, .-_c8ZCV


==================== Asm code ====================
2018-03-16 16:04:07.697597967 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZCV_info:
	.quad	_c8ZCV
	.quad	1029
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.698376985 UTC

.section .text
.align 8
_c8ZCX:
_c8ZCX:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8ZD8
_c8ZD7:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq 40(%rbp),%rcx
	movq %rcx,(%r12)
	movq 8(%rbp),%rcx
	movq $block_c8ZDd_info,8(%rbp)
	movq 16(%rbp),%rdx
	leaq 16(%rdx),%r9
	movq 24(%rbp),%r8
	movl $GHC.Types.False_closure+1,%edi
	movq %rbx,%rsi
	movq %rax,%r14
	leaq -7(%r12),%rax
	movq %rax,-8(%rbp)
	movq %rcx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Foreign.$wtryFillBufferAndCall_entry
_c8ZD8:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8ZCX, .-_c8ZCX


==================== Asm code ====================
2018-03-16 16:04:07.699080473 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZCX_info:
	.quad	_c8ZCX
	.quad	1029
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.699718867 UTC

.section .text
.align 8
_c8ZDd:
_c8ZDd:
	movq $block_c8ZDf_info,(%rbp)
	testb $7,%bl
	jne _c8ZDf
_c8ZDh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZDd, .-_c8ZDd


==================== Asm code ====================
2018-03-16 16:04:07.700299627 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZDd_info:
	.quad	_c8ZDd
	.quad	644
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.700988606 UTC

.section .text
.align 8
_c8ZDf:
_c8ZDf:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8ZDr
_c8ZDx:
	movq 6(%rbx),%rax
	movq %rax,%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ZDr:
	movq $block_c8ZDp_info,(%rbp)
	movq 32(%rbp),%r14
	shlq $1,%r14
	movq 24(%rbp),%rbx
	jmp $wgo_s8YpD_entry
	.size _c8ZDf, .-_c8ZDf


==================== Asm code ====================
2018-03-16 16:04:07.701617837 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZDf_info:
	.quad	_c8ZDf
	.quad	644
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.702251567 UTC

.section .text
.align 8
_c8ZDp:
_c8ZDp:
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8ZDp, .-_c8ZDp


==================== Asm code ====================
2018-03-16 16:04:07.702811489 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZDp_info:
	.quad	_c8ZDp
	.quad	900
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.703543482 UTC

.section .text
.align 8
sat_s8Yql_entry:
_c8ZDD:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ZDE
_c8ZDF:
	movq $block_c8ZCv_info,-32(%rbp)
	xorl %esi,%esi
	movq 6(%rbx),%rax
	movq %r14,%rcx
	movq %rax,%r14
	movq %rax,-24(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.List.$wlenAcc_entry
_c8ZDE:
	jmp *-8(%r13)
	.size sat_s8Yql_entry, .-sat_s8Yql_entry


==================== Asm code ====================
2018-03-16 16:04:07.704197194 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Yql_info:
	.quad	sat_s8Yql_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:07.704868463 UTC

.section .text
.align 8
_c8ZCv:
_c8ZCv:
	movq $block_c8ZCC_info,-8(%rbp)
	movl $4,%r14d
	movq %rbx,%rax
	shlq $2,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_newAlignedPinnedByteArray#
	.size _c8ZCv, .-_c8ZCv


==================== Asm code ====================
2018-03-16 16:04:07.705733423 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZCv_info:
	.quad	_c8ZCv
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.706399562 UTC

.section .text
.align 8
_c8ZCC:
_c8ZCC:
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	movq $0,-8(%rbp)
	leaq 16(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-16,%rbp
	jmp _c8ZDU
	.size _c8ZCC, .-_c8ZCC


==================== Asm code ====================
2018-03-16 16:04:07.706964685 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZCC_info:
	.quad	_c8ZCC
	.quad	68
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.707630485 UTC

.section .text
.align 8
_c8ZDU:
_c8ZDU:
	movq (%rbp),%rax
	movq $block_c8ZDX_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8ZDX
_c8ZDZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZDU, .-_c8ZDU


==================== Asm code ====================
2018-03-16 16:04:07.708408449 UTC

.section .text
.align 8
_c8ZDX:
_c8ZDX:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8ZE5
_c8ZEa:
	movq $block_c8ZE8_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8ZE8
_c8ZEb:
	movq (%rbx),%rax
	jmp *(%rax)
_c8ZE5:
	movq $block_c8ZCM_info,8(%rbp)
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	addq $8,%rbp
	jmp stg_newMutVar#
	.size _c8ZDX, .-_c8ZDX


==================== Asm code ====================
2018-03-16 16:04:07.709089315 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZDX_info:
	.quad	_c8ZDX
	.quad	454
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.70991478 UTC

.section .text
.align 8
_c8ZCM:
_c8ZCM:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _c8ZDL
_c8ZDK:
	movq $GHC.ForeignPtr.PlainForeignPtr_con_info,-96(%r12)
	movq %rbx,-88(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-80(%r12)
	leaq -95(%r12),%rax
	movq %rax,-72(%r12)
	movq $GHC.IO.Buffer.ReadBuffer_closure+1,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-48(%r12)
	movq $0,-40(%r12)
	movq %rax,-32(%r12)
	movq $$wgo_s8YpD_info,-24(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-8(%r12)
	leaq -79(%r12),%rbx
	movq %rbx,(%r12)
	movq $block_c8ZDP_info,16(%rbp)
	leaq 1(%rax),%r14
	leaq -22(%r12),%rbx
	addq $16,%rbp
	jmp $wgo_s8YpD_entry
_c8ZDL:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8ZCM, .-_c8ZCM


==================== Asm code ====================
2018-03-16 16:04:07.710637194 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZCM_info:
	.quad	_c8ZCM
	.quad	197
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.711240015 UTC

.section .text
.align 8
_c8ZDP:
_c8ZDP:
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c8ZDP, .-_c8ZDP


==================== Asm code ====================
2018-03-16 16:04:07.711826574 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZDP_info:
	.quad	_c8ZDP
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.712486564 UTC

.section .text
.align 8
_c8ZE8:
_c8ZE8:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movl %ebx,(%rdx,%rax,4)
	movq %rcx,8(%rbp)
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c8ZDU
	.size _c8ZE8, .-_c8ZE8


==================== Asm code ====================
2018-03-16 16:04:07.7130711 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZE8_info:
	.quad	_c8ZE8
	.quad	903
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.713798653 UTC

.section .text
.align 8
.globl Foreign.C.String.withCStringLen1_entry
.type Foreign.C.String.withCStringLen1_entry, @object
Foreign.C.String.withCStringLen1_entry:
_c8ZEp:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ZEq
_c8ZEr:
	movq $block_c8ZCj_info,-24(%rbp)
	movl $GHC.IO.Encoding.getForeignEncoding_closure,%ebx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp stg_ap_v_fast
_c8ZEq:
	movl $Foreign.C.String.withCStringLen1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.withCStringLen1_entry, .-Foreign.C.String.withCStringLen1_entry


==================== Asm code ====================
2018-03-16 16:04:07.714464346 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCStringLen1_info
.type Foreign.C.String.withCStringLen1_info, @object
Foreign.C.String.withCStringLen1_info:
	.quad	Foreign.C.String.withCStringLen1_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S8YDv_srt


==================== Asm code ====================
2018-03-16 16:04:07.715118115 UTC

.section .text
.align 8
_c8ZCj:
_c8ZCj:
	movq $block_c8ZCl_info,(%rbp)
	testb $7,%bl
	jne _c8ZCl
_c8ZCm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZCj, .-_c8ZCj


==================== Asm code ====================
2018-03-16 16:04:07.715703744 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZCj_info:
	.quad	_c8ZCj
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.716385403 UTC

.section .text
.align 8
_c8ZCl:
_c8ZCl:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8ZEv
_c8ZEu:
	movq 23(%rbx),%rax
	movq $sat_s8Yql_info,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rdi
	movl $GHC.IO.Encoding.Types.close_closure+1,%esi
	movq %rax,%r14
	addq $24,%rbp
	jmp GHC.IO.bracket1_entry
_c8ZEv:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8ZCl, .-_c8ZCl


==================== Asm code ====================
2018-03-16 16:04:07.717018353 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZCl_info:
	.quad	_c8ZCl
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.719344679 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCStringLen_closure
.type Foreign.C.String.withCStringLen_closure, @object
Foreign.C.String.withCStringLen_closure:
	.quad	Foreign.C.String.withCStringLen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.719985776 UTC

.section .text
.align 8
.globl Foreign.C.String.withCStringLen_entry
.type Foreign.C.String.withCStringLen_entry, @object
Foreign.C.String.withCStringLen_entry:
_c8ZFV:
	jmp Foreign.C.String.withCStringLen1_entry
	.size Foreign.C.String.withCStringLen_entry, .-Foreign.C.String.withCStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:07.720552707 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCStringLen_info
.type Foreign.C.String.withCStringLen_info, @object
Foreign.C.String.withCStringLen_info:
	.quad	Foreign.C.String.withCStringLen_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	S8YDv_srt+8


==================== Asm code ====================
2018-03-16 16:04:07.723372122 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCString1_closure
.type Foreign.C.String.withCString1_closure, @object
Foreign.C.String.withCString1_closure:
	.quad	Foreign.C.String.withCString1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.724096141 UTC

.section .text
.align 8
.globl Foreign.C.String.withCString1_entry
.type Foreign.C.String.withCString1_entry, @object
Foreign.C.String.withCString1_entry:
_c8ZG8:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ZG9
_c8ZGa:
	movq $block_c8ZG6_info,-24(%rbp)
	movl $GHC.IO.Encoding.getForeignEncoding_closure,%ebx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp stg_ap_v_fast
_c8ZG9:
	movl $Foreign.C.String.withCString1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.withCString1_entry, .-Foreign.C.String.withCString1_entry


==================== Asm code ====================
2018-03-16 16:04:07.724789536 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCString1_info
.type Foreign.C.String.withCString1_info, @object
Foreign.C.String.withCString1_info:
	.quad	Foreign.C.String.withCString1_entry
	.quad	0
	.quad	21474836494
	.quad	12884901903
	.quad	S8YDv_srt


==================== Asm code ====================
2018-03-16 16:04:07.725492274 UTC

.section .text
.align 8
_c8ZG6:
_c8ZG6:
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $24,%rbp
	jmp GHC.Foreign.charIsRepresentable3_entry
	.size _c8ZG6, .-_c8ZG6


==================== Asm code ====================
2018-03-16 16:04:07.7260619 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZG6_info:
	.quad	_c8ZG6
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.728914276 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCString_closure
.type Foreign.C.String.withCString_closure, @object
Foreign.C.String.withCString_closure:
	.quad	Foreign.C.String.withCString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.72954471 UTC

.section .text
.align 8
.globl Foreign.C.String.withCString_entry
.type Foreign.C.String.withCString_entry, @object
Foreign.C.String.withCString_entry:
_c8ZGo:
	jmp Foreign.C.String.withCString1_entry
	.size Foreign.C.String.withCString_entry, .-Foreign.C.String.withCString_entry


==================== Asm code ====================
2018-03-16 16:04:07.730160965 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCString_info
.type Foreign.C.String.withCString_info, @object
Foreign.C.String.withCString_info:
	.quad	Foreign.C.String.withCString_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	S8YDv_srt+16


==================== Asm code ====================
2018-03-16 16:04:07.732775715 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.charIsRepresentable1_closure
.type Foreign.C.String.charIsRepresentable1_closure, @object
Foreign.C.String.charIsRepresentable1_closure:
	.quad	Foreign.C.String.charIsRepresentable1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.733516948 UTC

.section .text
.align 8
.globl Foreign.C.String.charIsRepresentable1_entry
.type Foreign.C.String.charIsRepresentable1_entry, @object
Foreign.C.String.charIsRepresentable1_entry:
_c8ZGB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ZGC
_c8ZGD:
	movq $block_c8ZGz_info,-16(%rbp)
	movl $GHC.IO.Encoding.getForeignEncoding_closure,%ebx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_v_fast
_c8ZGC:
	movl $Foreign.C.String.charIsRepresentable1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.charIsRepresentable1_entry, .-Foreign.C.String.charIsRepresentable1_entry


==================== Asm code ====================
2018-03-16 16:04:07.734133429 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.charIsRepresentable1_info
.type Foreign.C.String.charIsRepresentable1_info, @object
Foreign.C.String.charIsRepresentable1_info:
	.quad	Foreign.C.String.charIsRepresentable1_entry
	.quad	0
	.quad	107374182414
	.quad	8589934597
	.quad	S8YDv_srt


==================== Asm code ====================
2018-03-16 16:04:07.734814279 UTC

.section .text
.align 8
_c8ZGz:
_c8ZGz:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Foreign.charIsRepresentable1_entry
	.size _c8ZGz, .-_c8ZGz


==================== Asm code ====================
2018-03-16 16:04:07.735417551 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZGz_info:
	.quad	_c8ZGz
	.quad	1
	.quad	4294967326
	.quad	S8YDv_srt+24


==================== Asm code ====================
2018-03-16 16:04:07.73820134 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.charIsRepresentable_closure
.type Foreign.C.String.charIsRepresentable_closure, @object
Foreign.C.String.charIsRepresentable_closure:
	.quad	Foreign.C.String.charIsRepresentable_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.738803408 UTC

.section .text
.align 8
.globl Foreign.C.String.charIsRepresentable_entry
.type Foreign.C.String.charIsRepresentable_entry, @object
Foreign.C.String.charIsRepresentable_entry:
_c8ZGR:
	jmp Foreign.C.String.charIsRepresentable1_entry
	.size Foreign.C.String.charIsRepresentable_entry, .-Foreign.C.String.charIsRepresentable_entry


==================== Asm code ====================
2018-03-16 16:04:07.739365295 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.charIsRepresentable_info
.type Foreign.C.String.charIsRepresentable_info, @object
Foreign.C.String.charIsRepresentable_info:
	.quad	Foreign.C.String.charIsRepresentable_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S8YDv_srt+32


==================== Asm code ====================
2018-03-16 16:04:07.741047921 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCStringLen2_closure
.type Foreign.C.String.newCStringLen2_closure, @object
Foreign.C.String.newCStringLen2_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.759566276 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCStringLen1_closure
.type Foreign.C.String.newCStringLen1_closure, @object
Foreign.C.String.newCStringLen1_closure:
	.quad	Foreign.C.String.newCStringLen1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.760454239 UTC

.section .text
.align 8
sat_s8Ysq_entry:
_c8ZIC:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ZIH
_c8ZII:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c8ZIz_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rcx,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c8ZIz
_c8ZIA:
	movq (%rbx),%rax
	jmp *(%rax)
_c8ZIH:
	jmp *-16(%r13)
	.size sat_s8Ysq_entry, .-sat_s8Ysq_entry


==================== Asm code ====================
2018-03-16 16:04:07.761158389 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Ysq_info:
	.quad	sat_s8Ysq_entry
	.quad	4294967298
	.quad	15


==================== Asm code ====================
2018-03-16 16:04:07.762110082 UTC

.section .text
.align 8
_c8ZIz:
_c8ZIz:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c8ZIL
_c8ZIK:
	movq 7(%rbx),%rax
	movq $GHC.ForeignPtr.PlainForeignPtr_con_info,-64(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	leaq -63(%r12),%rbx
	movq %rbx,-40(%r12)
	movq $GHC.IO.Buffer.WriteBuffer_closure+2,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ZIL:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8ZIz, .-_c8ZIz


==================== Asm code ====================
2018-03-16 16:04:07.762791981 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZIz_info:
	.quad	_c8ZIz
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.763573162 UTC

.section .text
.align 8
sat_s8YsE_entry:
_c8ZIN:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ZIO
_c8ZIP:
	movq $block_c8ZHf_info,-24(%rbp)
	xorl %esi,%esi
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,%r14
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.List.$wlenAcc_entry
_c8ZIO:
	jmp *-8(%r13)
	.size sat_s8YsE_entry, .-sat_s8YsE_entry


==================== Asm code ====================
2018-03-16 16:04:07.76422763 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8YsE_info:
	.quad	sat_s8YsE_entry
	.quad	1
	.quad	12884901897
	.quad	8589934597
	.quad	S8YDv_srt+40


==================== Asm code ====================
2018-03-16 16:04:07.764853411 UTC

.section .text
.align 8
_c8ZHf:
_c8ZHf:
	movq $block_c8ZHm_info,-8(%rbp)
	movl $4,%r14d
	movq %rbx,%rax
	shlq $2,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_newAlignedPinnedByteArray#
	.size _c8ZHf, .-_c8ZHf


==================== Asm code ====================
2018-03-16 16:04:07.765463912 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZHf_info:
	.quad	_c8ZHf
	.quad	2
	.quad	12884901918
	.quad	S8YDv_srt+40


==================== Asm code ====================
2018-03-16 16:04:07.766097512 UTC

.section .text
.align 8
_c8ZHm:
_c8ZHm:
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	movq $0,-8(%rbp)
	leaq 16(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-16,%rbp
	jmp _c8ZKD
	.size _c8ZHm, .-_c8ZHm


==================== Asm code ====================
2018-03-16 16:04:07.766688678 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZHm_info:
	.quad	_c8ZHm
	.quad	67
	.quad	12884901918
	.quad	S8YDv_srt+40


==================== Asm code ====================
2018-03-16 16:04:07.767365171 UTC

.section .text
.align 8
_c8ZKD:
_c8ZKD:
	movq (%rbp),%rax
	movq $block_c8ZKG_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8ZKG
_c8ZKI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZKD, .-_c8ZKD


==================== Asm code ====================
2018-03-16 16:04:07.768208901 UTC

.section .text
.align 8
_c8ZKG:
_c8ZKG:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8ZKO
_c8ZKT:
	movq $block_c8ZKR_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c8ZKR
_c8ZKU:
	movq (%rbx),%rax
	jmp *(%rax)
_c8ZKO:
	movq $block_c8ZHw_info,8(%rbp)
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	addq $8,%rbp
	jmp stg_newMutVar#
	.size _c8ZKG, .-_c8ZKG


==================== Asm code ====================
2018-03-16 16:04:07.768921166 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZKG_info:
	.quad	_c8ZKG
	.quad	453
	.quad	12884901918
	.quad	S8YDv_srt+40


==================== Asm code ====================
2018-03-16 16:04:07.769895079 UTC

.section .text
.align 8
_c8ZHw:
_c8ZHw:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c8ZIV
_c8ZIU:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	leaq 1(%rax),%rdx
	subq $8,%rsp
	movq %rdx,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rsi,%r14
	movq %rcx,72(%rsp)
	movq %rdx,80(%rsp)
	call malloc
	addq $8,%rsp
	testq %rax,%rax
	je _c8ZKA
_c8ZKz:
	movq $GHC.ForeignPtr.PlainForeignPtr_con_info,-80(%r12)
	movq %rbx,-72(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-64(%r12)
	leaq -79(%r12),%rbx
	movq %rbx,-56(%r12)
	movq $GHC.IO.Buffer.ReadBuffer_closure+1,-48(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-40(%r12)
	movq %r14,-32(%r12)
	movq $0,-24(%r12)
	movq %r14,-16(%r12)
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	leaq -63(%r12),%rax
	movq %rax,16(%rbp)
	jmp _c8ZHQ
_c8ZKA:
	addq $-88,%r12
	movl $Foreign.Marshal.Alloc.malloc1_closure,%ebx
	addq $40,%rbp
	jmp stg_raiseIO#
_c8ZIV:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8ZHw, .-_c8ZHw


==================== Asm code ====================
2018-03-16 16:04:07.770777946 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZHw_info:
	.quad	_c8ZHw
	.quad	196
	.quad	12884901918
	.quad	S8YDv_srt+40


==================== Asm code ====================
2018-03-16 16:04:07.771473498 UTC

.section .text
.align 8
_c8ZHQ:
_c8ZHQ:
	movq $block_c8ZHT_info,-8(%rbp)
	movq 32(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8ZHT
_c8ZHU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZHQ, .-_c8ZHQ


==================== Asm code ====================
2018-03-16 16:04:07.772172763 UTC

.section .text
.align 8
_c8ZHT:
_c8ZHT:
	movq $block_c8ZHY_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp stg_newMutVar#
	.size _c8ZHT, .-_c8ZHT


==================== Asm code ====================
2018-03-16 16:04:07.77279781 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZHT_info:
	.quad	_c8ZHT
	.quad	133
	.quad	4294967326
	.quad	S8YDv_srt+48


==================== Asm code ====================
2018-03-16 16:04:07.7735373 UTC

.section .text
.align 8
_c8ZHY:
_c8ZHY:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8ZJ4
_c8ZJ3:
	movq $sat_s8Ysq_info,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq -32(%r12),%rax
	movq %rax,-8(%rbp)
	movq 40(%rbp),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp _c8ZJP
_c8ZJ4:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8ZHY, .-_c8ZHY


==================== Asm code ====================
2018-03-16 16:04:07.774187344 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZHY_info:
	.quad	_c8ZHY
	.quad	519
	.quad	4294967326
	.quad	S8YDv_srt+48


==================== Asm code ====================
2018-03-16 16:04:07.775459427 UTC

.section .text
.align 8
_c8ZJP:
_c8ZJP:
	movq 8(%rbp),%rax
	movq $block_c8ZJR_info,8(%rbp)
	movq (%rbp),%rsi
	movq %rax,%r14
	movq 24(%rbp),%rbx
	addq $8,%rbp
	jmp stg_ap_ppv_fast
	.size _c8ZJP, .-_c8ZJP


==================== Asm code ====================
2018-03-16 16:04:07.776202034 UTC

.section .text
.align 8
_c8ZJR:
_c8ZJR:
	movq $block_c8ZJT_info,(%rbp)
	testb $7,%bl
	jne _c8ZJT
_c8ZJU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZJR, .-_c8ZJR


==================== Asm code ====================
2018-03-16 16:04:07.776801767 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZJR_info:
	.quad	_c8ZJR
	.quad	519
	.quad	4294967326
	.quad	S8YDv_srt+48


==================== Asm code ====================
2018-03-16 16:04:07.777571714 UTC

.section .text
.align 8
_c8ZJT:
_c8ZJT:
	movq $block_c8ZJY_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8ZJY
_c8ZK2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZJT, .-_c8ZJT


==================== Asm code ====================
2018-03-16 16:04:07.778184903 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZJT_info:
	.quad	_c8ZJT
	.quad	519
	.quad	4294967326
	.quad	S8YDv_srt+48


==================== Asm code ====================
2018-03-16 16:04:07.778893133 UTC

.section .text
.align 8
_c8ZJY:
_c8ZJY:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _c8ZKx
_c8ZKc:
	movq $block_c8ZKa_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8ZKa
_c8ZKd:
	movq (%rbx),%rax
	jmp *(%rax)
_c8ZKx:
	movq $block_c8ZJD_info,32(%rbp)
	movq 8(%rbp),%rbx
	addq $32,%rbp
	testb $7,%bl
	jne _c8ZJD
_c8ZJF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZJY, .-_c8ZJY


==================== Asm code ====================
2018-03-16 16:04:07.779519416 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZJY_info:
	.quad	_c8ZJY
	.quad	2057
	.quad	4294967326
	.quad	S8YDv_srt+48


==================== Asm code ====================
2018-03-16 16:04:07.780287052 UTC

.section .text
.align 8
_c8ZJD:
_c8ZJD:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c8ZJL
_c8ZJK:
	movq 23(%rbx),%rax
	movq 39(%rbx),%rcx
	movq 47(%rbx),%rbx
	movq $GHC.Types.I#_con_info,-64(%r12)
	subq %rcx,%rbx
	movq %rbx,-56(%r12)
	movq $GHC.Ptr.Ptr_con_info,-48(%r12)
	movq %rax,-40(%r12)
	movq $(,)_con_info,-32(%r12)
	leaq -47(%r12),%rax
	movq %rax,-24(%r12)
	leaq -63(%r12),%rax
	movq %rax,-16(%r12)
	movq $GHC.Base.Just_con_info,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rax
	movq %rax,(%rbp)
	jmp _s8Yrm
_c8ZJL:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8ZJD, .-_c8ZJD


==================== Asm code ====================
2018-03-16 16:04:07.780980068 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZJD_info:
	.quad	_c8ZJD
	.quad	133
	.quad	4294967326
	.quad	S8YDv_srt+48


==================== Asm code ====================
2018-03-16 16:04:07.781710176 UTC

.section .text
.align 8
_c8ZKa:
_c8ZKa:
	andl $7,%ebx
	cmpq $2,%rbx
	je _c8ZKw
_c8ZKm:
	movq 16(%rbp),%rax
	movq $block_c8ZKh_info,16(%rbp)
	movq 8(%rbp),%rsi
	movq %rax,%r14
	movq 24(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_ppv_fast
_c8ZKw:
	movq $GHC.Base.Nothing_closure+1,32(%rbp)
	addq $32,%rbp
	jmp _s8Yrm
	.size _c8ZKa, .-_c8ZKa


==================== Asm code ====================
2018-03-16 16:04:07.782332882 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZKa_info:
	.quad	_c8ZKa
	.quad	2057
	.quad	4294967326
	.quad	S8YDv_srt+48


==================== Asm code ====================
2018-03-16 16:04:07.782963611 UTC

.section .text
.align 8
_s8Yrm:
_s8Yrm:
	movq (%rbp),%rax
	movq $block_c8ZI7_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c8ZI7
_c8ZI8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s8Yrm, .-_s8Yrm


==================== Asm code ====================
2018-03-16 16:04:07.783783518 UTC

.section .text
.align 8
_c8ZI7:
_c8ZI7:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c8ZJ8
_c8ZJr:
	movq 6(%rbx),%rax
	movq %rax,%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ZJ8:
	movq 8(%rbp),%rax
	movq $block_c8ZIc_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8ZIc
_c8ZId:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZI7, .-_c8ZI7


==================== Asm code ====================
2018-03-16 16:04:07.784411571 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZI7_info:
	.quad	_c8ZI7
	.quad	133
	.quad	4294967326
	.quad	S8YDv_srt+48


==================== Asm code ====================
2018-03-16 16:04:07.785154482 UTC

.section .text
.align 8
_c8ZIc:
_c8ZIc:
	movq 7(%rbx),%rax
	shlq $1,%rax
	testq %rax,%rax
	jne _u8ZLl
_c8ZJk:
	subq $8,%rsp
	movq 8(%rbp),%rdi
	xorl %eax,%eax
	call free
	addq $8,%rsp
	movq $0,8(%rbp)
	movq $Foreign.C.String.newCStringLen2_closure+1,(%rbp)
	jmp _c8ZHQ
_u8ZLl:
	movq %rax,(%rbp)
	jmp _c8ZIl
	.size _c8ZIc, .-_c8ZIc


==================== Asm code ====================
2018-03-16 16:04:07.785808089 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZIc_info:
	.quad	_c8ZIc
	.quad	68
	.quad	4294967326
	.quad	S8YDv_srt+48


==================== Asm code ====================
2018-03-16 16:04:07.786605207 UTC

.section .text
.align 8
_c8ZIl:
_c8ZIl:
	addq $16,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c8ZJe
_c8ZJd:
	subq $8,%rsp
	movq %rax,%rsi
	movq 8(%rbp),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call realloc
	addq $8,%rsp
	testq %rax,%rax
	je _c8ZJh
_c8ZJg:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,8(%rbp)
	leaq -7(%r12),%rax
	movq %rax,(%rbp)
	jmp _c8ZHQ
_c8ZJh:
	addq $-16,%r12
	movl $Foreign.Marshal.Alloc.realloc2_closure,%ebx
	addq $40,%rbp
	jmp stg_raiseIO#
_c8ZJe:
	movq $16,904(%r13)
	movq $block_c8ZIk_info,(%rbp)
	movq %rax,%rbx
	jmp stg_gc_unbx_r1
	.size _c8ZIl, .-_c8ZIl


==================== Asm code ====================
2018-03-16 16:04:07.787372701 UTC

.section .text
.align 8
_c8ZIk:
_c8ZIk:
	movq %rbx,(%rbp)
	jmp _c8ZIl
	.size _c8ZIk, .-_c8ZIk


==================== Asm code ====================
2018-03-16 16:04:07.7879615 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZIk_info:
	.quad	_c8ZIk
	.quad	68
	.quad	4294967326
	.quad	S8YDv_srt+48


==================== Asm code ====================
2018-03-16 16:04:07.788602359 UTC

.section .text
.align 8
_c8ZKh:
_c8ZKh:
	movq $block_c8ZKj_info,(%rbp)
	testb $7,%bl
	jne _c8ZKj
_c8ZKo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZKh, .-_c8ZKh


==================== Asm code ====================
2018-03-16 16:04:07.789191196 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZKh_info:
	.quad	_c8ZKh
	.quad	519
	.quad	4294967326
	.quad	S8YDv_srt+48


==================== Asm code ====================
2018-03-16 16:04:07.789861764 UTC

.section .text
.align 8
_c8ZKj:
_c8ZKj:
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp _c8ZJP
	.size _c8ZKj, .-_c8ZKj


==================== Asm code ====================
2018-03-16 16:04:07.790419909 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZKj_info:
	.quad	_c8ZKj
	.quad	519
	.quad	4294967326
	.quad	S8YDv_srt+48


==================== Asm code ====================
2018-03-16 16:04:07.791085916 UTC

.section .text
.align 8
_c8ZKR:
_c8ZKR:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movl %ebx,(%rdx,%rax,4)
	movq %rcx,8(%rbp)
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c8ZKD
	.size _c8ZKR, .-_c8ZKR


==================== Asm code ====================
2018-03-16 16:04:07.791695132 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZKR_info:
	.quad	_c8ZKR
	.quad	902
	.quad	12884901918
	.quad	S8YDv_srt+40


==================== Asm code ====================
2018-03-16 16:04:07.792384602 UTC

.section .text
.align 8
.globl Foreign.C.String.newCStringLen1_entry
.type Foreign.C.String.newCStringLen1_entry, @object
Foreign.C.String.newCStringLen1_entry:
_c8ZLK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ZLL
_c8ZLM:
	movq $block_c8ZH3_info,-16(%rbp)
	movl $GHC.IO.Encoding.getForeignEncoding_closure,%ebx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_v_fast
_c8ZLL:
	movl $Foreign.C.String.newCStringLen1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.newCStringLen1_entry, .-Foreign.C.String.newCStringLen1_entry


==================== Asm code ====================
2018-03-16 16:04:07.793037835 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCStringLen1_info
.type Foreign.C.String.newCStringLen1_info, @object
Foreign.C.String.newCStringLen1_info:
	.quad	Foreign.C.String.newCStringLen1_entry
	.quad	0
	.quad	966367641614
	.quad	8589934597
	.quad	S8YDv_srt


==================== Asm code ====================
2018-03-16 16:04:07.794144543 UTC

.section .text
.align 8
_c8ZH3:
_c8ZH3:
	movq $block_c8ZH5_info,(%rbp)
	testb $7,%bl
	jne _c8ZH5
_c8ZH6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZH3, .-_c8ZH3


==================== Asm code ====================
2018-03-16 16:04:07.794708911 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZH3_info:
	.quad	_c8ZH3
	.quad	1
	.quad	12884901918
	.quad	S8YDv_srt+40


==================== Asm code ====================
2018-03-16 16:04:07.795411864 UTC

.section .text
.align 8
_c8ZH5:
_c8ZH5:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8ZLQ
_c8ZLP:
	movq 23(%rbx),%rax
	movq $sat_s8YsE_info,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -6(%r12),%rdi
	movl $GHC.IO.Encoding.Types.close_closure+1,%esi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.IO.bracket1_entry
_c8ZLQ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8ZH5, .-_c8ZH5


==================== Asm code ====================
2018-03-16 16:04:07.796058404 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZH5_info:
	.quad	_c8ZH5
	.quad	1
	.quad	12884901918
	.quad	S8YDv_srt+40


==================== Asm code ====================
2018-03-16 16:04:07.798327972 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCStringLen_closure
.type Foreign.C.String.newCStringLen_closure, @object
Foreign.C.String.newCStringLen_closure:
	.quad	Foreign.C.String.newCStringLen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.798934843 UTC

.section .text
.align 8
.globl Foreign.C.String.newCStringLen_entry
.type Foreign.C.String.newCStringLen_entry, @object
Foreign.C.String.newCStringLen_entry:
_c8ZO1:
	jmp Foreign.C.String.newCStringLen1_entry
	.size Foreign.C.String.newCStringLen_entry, .-Foreign.C.String.newCStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:07.799527789 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCStringLen_info
.type Foreign.C.String.newCStringLen_info, @object
Foreign.C.String.newCStringLen_info:
	.quad	Foreign.C.String.newCStringLen_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S8YDv_srt+56


==================== Asm code ====================
2018-03-16 16:04:07.802177998 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCString1_closure
.type Foreign.C.String.newCString1_closure, @object
Foreign.C.String.newCString1_closure:
	.quad	Foreign.C.String.newCString1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.802885324 UTC

.section .text
.align 8
.globl Foreign.C.String.newCString1_entry
.type Foreign.C.String.newCString1_entry, @object
Foreign.C.String.newCString1_entry:
_c8ZOe:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ZOf
_c8ZOg:
	movq $block_c8ZOc_info,-16(%rbp)
	movl $GHC.IO.Encoding.getForeignEncoding_closure,%ebx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_v_fast
_c8ZOf:
	movl $Foreign.C.String.newCString1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.newCString1_entry, .-Foreign.C.String.newCString1_entry


==================== Asm code ====================
2018-03-16 16:04:07.803539776 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCString1_info
.type Foreign.C.String.newCString1_info, @object
Foreign.C.String.newCString1_info:
	.quad	Foreign.C.String.newCString1_entry
	.quad	0
	.quad	3302829850638
	.quad	8589934597
	.quad	S8YDv_srt


==================== Asm code ====================
2018-03-16 16:04:07.804159402 UTC

.section .text
.align 8
_c8ZOc:
_c8ZOc:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Foreign.newCString1_entry
	.size _c8ZOc, .-_c8ZOc


==================== Asm code ====================
2018-03-16 16:04:07.804759704 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZOc_info:
	.quad	_c8ZOc
	.quad	1
	.quad	4294967326
	.quad	S8YDv_srt+64


==================== Asm code ====================
2018-03-16 16:04:07.807301728 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCString_closure
.type Foreign.C.String.newCString_closure, @object
Foreign.C.String.newCString_closure:
	.quad	Foreign.C.String.newCString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.807887604 UTC

.section .text
.align 8
.globl Foreign.C.String.newCString_entry
.type Foreign.C.String.newCString_entry, @object
Foreign.C.String.newCString_entry:
_c8ZOu:
	jmp Foreign.C.String.newCString1_entry
	.size Foreign.C.String.newCString_entry, .-Foreign.C.String.newCString_entry


==================== Asm code ====================
2018-03-16 16:04:07.808461715 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCString_info
.type Foreign.C.String.newCString_info, @object
Foreign.C.String.newCString_info:
	.quad	Foreign.C.String.newCString_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S8YDv_srt+72


==================== Asm code ====================
2018-03-16 16:04:07.829409877 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCStringLen1_closure
.type Foreign.C.String.peekCStringLen1_closure, @object
Foreign.C.String.peekCStringLen1_closure:
	.quad	Foreign.C.String.peekCStringLen1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.830329755 UTC

.section .text
.align 8
sat_s8Yu1_entry:
_c8ZQS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ZQT
_c8ZQU:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8ZQW
_c8ZQV:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $GHC.Types.C#_con_info,-32(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	movq %rcx,%rsi
	leaq -14(%r12),%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_c8ZQW:
	movq $40,904(%r13)
_c8ZQT:
	jmp *-16(%r13)
	.size sat_s8Yu1_entry, .-sat_s8Yu1_entry


==================== Asm code ====================
2018-03-16 16:04:07.831046729 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Yu1_info:
	.quad	sat_s8Yu1_entry
	.quad	4294967298
	.quad	15


==================== Asm code ====================
2018-03-16 16:04:07.831782126 UTC

.section .text
.align 8
sat_s8Yui_entry:
_c8ZR5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ZR6
_c8ZR7:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movl $GHC.Types.[]_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_c8ZR6:
	jmp *-16(%r13)
	.size sat_s8Yui_entry, .-sat_s8Yui_entry


==================== Asm code ====================
2018-03-16 16:04:07.832386467 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Yui_info:
	.quad	sat_s8Yui_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:04:07.833143346 UTC

.section .text
.align 8
$wgo_s8Yti_entry:
_c8ZR8:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ZR9
_c8ZRa:
	movq $block_c8ZPx_info,-32(%rbp)
	movq %rbx,%rax
	movq 14(%rbx),%rcx
	movq 6(%rbx),%rbx
	movq %rcx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c8ZPx
_c8ZPy:
	movq (%rbx),%rax
	jmp *(%rax)
_c8ZR9:
	jmp *-8(%r13)
	.size $wgo_s8Yti_entry, .-$wgo_s8Yti_entry


==================== Asm code ====================
2018-03-16 16:04:07.833849849 UTC

.section .data.rel.ro
.align 8
.align 1
$wgo_s8Yti_info:
	.quad	$wgo_s8Yti_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:07.834506371 UTC

.section .text
.align 8
_c8ZPx:
_c8ZPx:
	movq 8(%rbp),%rax
	movq $block_c8ZPC_info,8(%rbp)
	movq %rax,%rsi
	movq 24(%rbp),%r14
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp stg_ap_ppv_fast
	.size _c8ZPx, .-_c8ZPx


==================== Asm code ====================
2018-03-16 16:04:07.835114446 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZPx_info:
	.quad	_c8ZPx
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.835759134 UTC

.section .text
.align 8
_c8ZPC:
_c8ZPC:
	movq $block_c8ZPE_info,(%rbp)
	testb $7,%bl
	jne _c8ZPE
_c8ZPF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZPC, .-_c8ZPC


==================== Asm code ====================
2018-03-16 16:04:07.836309119 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZPC_info:
	.quad	_c8ZPC
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.837006167 UTC

.section .text
.align 8
_c8ZPE:
_c8ZPE:
	movq $block_c8ZPJ_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c8ZPJ
_c8ZPK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZPE, .-_c8ZPE


==================== Asm code ====================
2018-03-16 16:04:07.837829343 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZPE_info:
	.quad	_c8ZPE
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.838566362 UTC

.section .text
.align 8
_c8ZPJ:
_c8ZPJ:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _c8ZS5
_c8ZRy:
	movq $block_c8ZRf_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8ZRf
_c8ZRz:
	movq (%rbx),%rax
	jmp *(%rax)
_c8ZS5:
	movq $block_c8ZQh_info,32(%rbp)
	movq 8(%rbp),%rbx
	addq $32,%rbp
	testb $7,%bl
	jne _c8ZQh
_c8ZQi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZPJ, .-_c8ZPJ


==================== Asm code ====================
2018-03-16 16:04:07.839227126 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZPJ_info:
	.quad	_c8ZPJ
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.839959574 UTC

.section .text
.align 8
_c8ZQh:
_c8ZQh:
	movq 7(%rbx),%rax
	leaq 39(%rbx),%rcx
	movq 47(%rbx),%rdx
	subq (%rcx),%rdx
	testq %rdx,%rdx
	jg _c8ZSn
_c8ZSo:
	movl $GHC.Types.[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ZSn:
	movq %rax,-24(%rbp)
	leaq -1(%rdx),%rax
	movq %rax,-16(%rbp)
	movq $GHC.Types.[]_closure+1,-8(%rbp)
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	addq $-32,%rbp
	jmp _c8ZQz
	.size _c8ZQh, .-_c8ZQh


==================== Asm code ====================
2018-03-16 16:04:07.840605845 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZQh_info:
	.quad	_c8ZQh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.841433526 UTC

.section .text
.align 8
_c8ZQz:
_c8ZQz:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8ZSi
_c8ZSh:
	movq 24(%rbp),%rax
	movq 16(%rbp),%rbx
	testq %rbx,%rbx
	jne _c8ZSk
_c8ZSl:
	addq $-40,%r12
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c8ZS8
_c8ZSk:
	movq $GHC.Types.C#_con_info,-32(%r12)
	movq 32(%rbp),%rcx
	movl (%rcx,%rbx,4),%ecx
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -1(%rbx),%rax
	movq %rax,16(%rbp)
	leaq -14(%r12),%rax
	movq %rax,24(%rbp)
	jmp _c8ZQz
_c8ZSi:
	movq $40,904(%r13)
	movq $block_c8ZQz_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8ZQz, .-_c8ZQz


==================== Asm code ====================
2018-03-16 16:04:07.842185384 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZQz_info:
	.quad	_c8ZQz
	.quad	644
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.842944845 UTC

.section .text
.align 8
_c8ZS8:
_c8ZS8:
	addq $40,%r12
	movq 16(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c8ZSf
_c8ZSe:
	movq 24(%rbp),%rbx
	movl (%rbx),%ebx
	movq $GHC.Types.C#_con_info,-32(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ZSf:
	movq $40,904(%r13)
	movq $block_c8ZS7_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unpt_r1
	.size _c8ZS8, .-_c8ZS8


==================== Asm code ====================
2018-03-16 16:04:07.843700311 UTC

.section .text
.align 8
_c8ZS7:
_c8ZS7:
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp _c8ZS8
	.size _c8ZS7, .-_c8ZS7


==================== Asm code ====================
2018-03-16 16:04:07.844306217 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZS7_info:
	.quad	_c8ZS7
	.quad	900
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.845106022 UTC

.section .text
.align 8
_c8ZRf:
_c8ZRf:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $2,%rbx
	je _c8ZRZ
_c8ZRN:
	movq 16(%rbp),%rbx
	movq $block_c8ZRD_info,16(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	movq 32(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_ppv_fast
_c8ZRZ:
	movq $block_c8ZRX_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c8ZRX
_c8ZS0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZRf, .-_c8ZRf


==================== Asm code ====================
2018-03-16 16:04:07.845811542 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZRf_info:
	.quad	_c8ZRf
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.846488278 UTC

.section .text
.align 8
_c8ZRX:
_c8ZRX:
	movq 8(%rbp),%rax
	movq %rax,24(%rbp)
	movq 23(%rbx),%rax
	movq %rax,8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp _s8YtG
	.size _c8ZRX, .-_c8ZRX


==================== Asm code ====================
2018-03-16 16:04:07.84713736 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZRX_info:
	.quad	_c8ZRX
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.847782498 UTC

.section .text
.align 8
_c8ZRD:
_c8ZRD:
	movq $block_c8ZRF_info,(%rbp)
	testb $7,%bl
	jne _c8ZRF
_c8ZRG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZRD, .-_c8ZRD


==================== Asm code ====================
2018-03-16 16:04:07.848401206 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZRD_info:
	.quad	_c8ZRD
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.849083986 UTC

.section .text
.align 8
_c8ZRF:
_c8ZRF:
	movq $block_c8ZRK_info,(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8ZRK
_c8ZRQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZRF, .-_c8ZRF


==================== Asm code ====================
2018-03-16 16:04:07.849767941 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZRF_info:
	.quad	_c8ZRF
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.85045902 UTC

.section .text
.align 8
_c8ZRK:
_c8ZRK:
	movq 7(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 47(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	addq $-24,%rbp
	jmp _s8YtG
	.size _c8ZRK, .-_c8ZRK


==================== Asm code ====================
2018-03-16 16:04:07.851017237 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZRK_info:
	.quad	_c8ZRK
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.851780302 UTC

.section .text
.align 8
_s8YtG:
_s8YtG:
	movq 16(%rbp),%rax
	subq 8(%rbp),%rax
	testq %rax,%rax
	jg _c8ZRs
_c8ZRt:
	movq 32(%rbp),%rax
	movq 40(%rbp),%rbx
	movq $block_c8ZQZ_info,40(%rbp)
	movq %rbx,%r14
	movq %rax,%rbx
	addq $40,%rbp
	jmp $wgo_s8Yti_entry
_c8ZRs:
	movq $GHC.Types.[]_closure+1,8(%rbp)
	decq %rax
	movq %rax,16(%rbp)
	addq $-8,%rbp
	jmp _c8ZQ9
	.size _s8YtG, .-_s8YtG


==================== Asm code ====================
2018-03-16 16:04:07.852766413 UTC

.section .text
.align 8
_c8ZQ9:
_c8ZQ9:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8ZRn
_c8ZRm:
	movq 32(%rbp),%rax
	movq 16(%rbp),%rbx
	movq 24(%rbp),%rcx
	testq %rcx,%rcx
	jne _c8ZRp
_c8ZRq:
	addq $-40,%r12
	movq 40(%rbp),%rcx
	movq 48(%rbp),%rdx
	movl (%rax),%eax
	movq $block_c8ZQK_info,32(%rbp)
	movq %rdx,%r14
	movq %rbx,%rdx
	movq %rcx,%rbx
	movq %rax,40(%rbp)
	movq %rdx,48(%rbp)
	addq $32,%rbp
	jmp $wgo_s8Yti_entry
_c8ZRp:
	movl (%rax,%rcx,4),%eax
	movq $GHC.Types.C#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -1(%rcx),%rax
	movq %rax,24(%rbp)
	leaq -14(%r12),%rax
	movq %rax,16(%rbp)
	jmp _c8ZQ9
_c8ZRn:
	movq $40,904(%r13)
	movq $block_c8ZQ9_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8ZQ9, .-_c8ZQ9


==================== Asm code ====================
2018-03-16 16:04:07.853614804 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZQ9_info:
	.quad	_c8ZQ9
	.quad	774
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.855001929 UTC

.section .text
.align 8
_c8ZQK:
_c8ZQK:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8ZRk
_c8ZRj:
	movq $sat_s8Yu1_info,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -32(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ZRk:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8ZQK, .-_c8ZQK


==================== Asm code ====================
2018-03-16 16:04:07.8556633 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZQK_info:
	.quad	_c8ZQK
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.856328179 UTC

.section .text
.align 8
_c8ZQZ:
_c8ZQZ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8ZRw
_c8ZRv:
	movq $sat_s8Yui_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ZRw:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8ZQZ, .-_c8ZQZ


==================== Asm code ====================
2018-03-16 16:04:07.856907802 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZQZ_info:
	.quad	_c8ZQZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.857839252 UTC

.section .text
.align 8
sat_s8Yvd_entry:
_c8ZSS:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ZST
_c8ZSU:
	movq $block_c8ZOW_info,-24(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c8ZOW
_c8ZOX:
	movq (%rbx),%rax
	jmp *(%rax)
_c8ZST:
	jmp *-8(%r13)
	.size sat_s8Yvd_entry, .-sat_s8Yvd_entry


==================== Asm code ====================
2018-03-16 16:04:07.858458815 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Yvd_info:
	.quad	sat_s8Yvd_entry
	.quad	2
	.quad	4294967307
	.quad	8589934597
	.quad	S8YDv_srt+80


==================== Asm code ====================
2018-03-16 16:04:07.859156575 UTC

.section .text
.align 8
_c8ZOW:
_c8ZOW:
	movq $block_c8ZP1_info,-8(%rbp)
	movq 7(%rbx),%rax
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_newMutVar#
	.size _c8ZOW, .-_c8ZOW


==================== Asm code ====================
2018-03-16 16:04:07.859714673 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZOW_info:
	.quad	_c8ZOW
	.quad	2
	.quad	4294967326
	.quad	S8YDv_srt+80


==================== Asm code ====================
2018-03-16 16:04:07.860432099 UTC

.section .text
.align 8
_c8ZP1:
_c8ZP1:
	movq $block_c8ZP3_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c8ZP3
_c8ZP4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZP1, .-_c8ZP1


==================== Asm code ====================
2018-03-16 16:04:07.861022812 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZP1_info:
	.quad	_c8ZP1
	.quad	67
	.quad	4294967326
	.quad	S8YDv_srt+80


==================== Asm code ====================
2018-03-16 16:04:07.861822104 UTC

.section .text
.align 8
_c8ZP3:
_c8ZP3:
	movq 7(%rbx),%rax
	cmpq $1,%rax
	jg _c8ZTb
_c8ZTc:
	movl $1,%ebx
_s8Yt5:
	movq %rbx,%rcx
	shlq $2,%rcx
	testq %rcx,%rcx
	jge _c8ZT2
_c8ZT7:
	movl $GHC.ForeignPtr.mallocForeignPtrBytes2_closure,%ebx
	addq $32,%rbp
	jmp stg_ap_0_fast
_c8ZTb:
	movq %rax,%rbx
	jmp _s8Yt5
_c8ZT2:
	movq $block_c8ZPj_info,-24(%rbp)
	movq %rbx,%rdx
	movl $GHC.ForeignPtr.NoFinalizers_closure+1,%ebx
	movq %rdx,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	jmp stg_newMutVar#
	.size _c8ZP3, .-_c8ZP3


==================== Asm code ====================
2018-03-16 16:04:07.862485773 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZP3_info:
	.quad	_c8ZP3
	.quad	67
	.quad	4294967326
	.quad	S8YDv_srt+80


==================== Asm code ====================
2018-03-16 16:04:07.863153162 UTC

.section .text
.align 8
_c8ZPj:
_c8ZPj:
	movq $block_c8ZPl_info,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp stg_newPinnedByteArray#
	.size _c8ZPj, .-_c8ZPj


==================== Asm code ====================
2018-03-16 16:04:07.863728475 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZPj_info:
	.quad	_c8ZPj
	.quad	966
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.86454933 UTC

.section .text
.align 8
_c8ZPl:
_c8ZPl:
	addq $176,%r12
	cmpq 856(%r13),%r12
	ja _c8ZT6
_c8ZT5:
	movq $GHC.ForeignPtr.MallocPtr_con_info,-168(%r12)
	movq %rbx,-160(%r12)
	movq 16(%rbp),%rax
	movq %rax,-152(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-144(%r12)
	leaq -166(%r12),%rax
	movq %rax,-136(%r12)
	movq $GHC.IO.Buffer.WriteBuffer_closure+2,-128(%r12)
	leaq 16(%rbx),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq $0,-104(%r12)
	movq $0,-96(%r12)
	movq $$wgo_s8Yti_info,-88(%r12)
	movq 48(%rbp),%rax
	movq %rax,-80(%r12)
	leaq -143(%r12),%rax
	movq %rax,-72(%r12)
	movq $GHC.ForeignPtr.PlainForeignPtr_con_info,-64(%r12)
	movq 40(%rbp),%rax
	movq %rax,-56(%r12)
	movq $GHC.IO.Buffer.Buffer_con_info,-48(%r12)
	leaq -63(%r12),%rax
	movq %rax,-40(%r12)
	movq $GHC.IO.Buffer.ReadBuffer_closure+1,-32(%r12)
	movq 32(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	leaq -86(%r12),%rbx
	addq $56,%rbp
	jmp $wgo_s8Yti_entry
_c8ZT6:
	movq $176,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8ZPl, .-_c8ZPl


==================== Asm code ====================
2018-03-16 16:04:07.865429858 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZPl_info:
	.quad	_c8ZPl
	.quad	838
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.866117085 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCStringLen1_entry
.type Foreign.C.String.peekCStringLen1_entry, @object
Foreign.C.String.peekCStringLen1_entry:
_c8ZTf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ZTg
_c8ZTh:
	movq $block_c8ZOF_info,-16(%rbp)
	movl $GHC.IO.Encoding.getForeignEncoding_closure,%ebx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_v_fast
_c8ZTg:
	movl $Foreign.C.String.peekCStringLen1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.peekCStringLen1_entry, .-Foreign.C.String.peekCStringLen1_entry


==================== Asm code ====================
2018-03-16 16:04:07.866781841 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCStringLen1_info
.type Foreign.C.String.peekCStringLen1_info, @object
Foreign.C.String.peekCStringLen1_info:
	.quad	Foreign.C.String.peekCStringLen1_entry
	.quad	0
	.quad	13198434500622
	.quad	8589934597
	.quad	S8YDv_srt


==================== Asm code ====================
2018-03-16 16:04:07.86742832 UTC

.section .text
.align 8
_c8ZOF:
_c8ZOF:
	movq $block_c8ZOH_info,(%rbp)
	testb $7,%bl
	jne _c8ZOH
_c8ZOI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZOF, .-_c8ZOF


==================== Asm code ====================
2018-03-16 16:04:07.867998069 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZOF_info:
	.quad	_c8ZOF
	.quad	1
	.quad	4294967326
	.quad	S8YDv_srt+80


==================== Asm code ====================
2018-03-16 16:04:07.868667262 UTC

.section .text
.align 8
_c8ZOH:
_c8ZOH:
	movq $block_c8ZOM_info,(%rbp)
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c8ZOM
_c8ZON:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c8ZOH, .-_c8ZOH


==================== Asm code ====================
2018-03-16 16:04:07.869299606 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZOH_info:
	.quad	_c8ZOH
	.quad	1
	.quad	4294967326
	.quad	S8YDv_srt+80


==================== Asm code ====================
2018-03-16 16:04:07.870025065 UTC

.section .text
.align 8
_c8ZOM:
_c8ZOM:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c8ZTm
_c8ZTl:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $sat_s8Yvd_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rdi
	movl $GHC.IO.Encoding.Types.close_closure+1,%esi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.IO.bracket1_entry
_c8ZTm:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8ZOM, .-_c8ZOM


==================== Asm code ====================
2018-03-16 16:04:07.870670533 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZOM_info:
	.quad	_c8ZOM
	.quad	1
	.quad	4294967326
	.quad	S8YDv_srt+80


==================== Asm code ====================
2018-03-16 16:04:07.872900328 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCStringLen_closure
.type Foreign.C.String.peekCStringLen_closure, @object
Foreign.C.String.peekCStringLen_closure:
	.quad	Foreign.C.String.peekCStringLen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.873567533 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCStringLen_entry
.type Foreign.C.String.peekCStringLen_entry, @object
Foreign.C.String.peekCStringLen_entry:
_c8ZVU:
	jmp Foreign.C.String.peekCStringLen1_entry
	.size Foreign.C.String.peekCStringLen_entry, .-Foreign.C.String.peekCStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:07.87414502 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCStringLen_info
.type Foreign.C.String.peekCStringLen_info, @object
Foreign.C.String.peekCStringLen_info:
	.quad	Foreign.C.String.peekCStringLen_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S8YDv_srt+88


==================== Asm code ====================
2018-03-16 16:04:07.876769247 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCString1_closure
.type Foreign.C.String.peekCString1_closure, @object
Foreign.C.String.peekCString1_closure:
	.quad	Foreign.C.String.peekCString1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.877519261 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCString1_entry
.type Foreign.C.String.peekCString1_entry, @object
Foreign.C.String.peekCString1_entry:
_c8ZW7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ZW8
_c8ZW9:
	movq $block_c8ZW5_info,-16(%rbp)
	movl $GHC.IO.Encoding.getForeignEncoding_closure,%ebx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_v_fast
_c8ZW8:
	movl $Foreign.C.String.peekCString1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.peekCString1_entry, .-Foreign.C.String.peekCString1_entry


==================== Asm code ====================
2018-03-16 16:04:07.878193276 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCString1_info
.type Foreign.C.String.peekCString1_info, @object
Foreign.C.String.peekCString1_info:
	.quad	Foreign.C.String.peekCString1_entry
	.quad	0
	.quad	52780853100558
	.quad	8589934597
	.quad	S8YDv_srt


==================== Asm code ====================
2018-03-16 16:04:07.87882902 UTC

.section .text
.align 8
_c8ZW5:
_c8ZW5:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Foreign.peekCString1_entry
	.size _c8ZW5, .-_c8ZW5


==================== Asm code ====================
2018-03-16 16:04:07.879371435 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZW5_info:
	.quad	_c8ZW5
	.quad	1
	.quad	4294967326
	.quad	S8YDv_srt+96


==================== Asm code ====================
2018-03-16 16:04:07.881511392 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCString_closure
.type Foreign.C.String.peekCString_closure, @object
Foreign.C.String.peekCString_closure:
	.quad	Foreign.C.String.peekCString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.882127581 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCString_entry
.type Foreign.C.String.peekCString_entry, @object
Foreign.C.String.peekCString_entry:
_c8ZWn:
	jmp Foreign.C.String.peekCString1_entry
	.size Foreign.C.String.peekCString_entry, .-Foreign.C.String.peekCString_entry


==================== Asm code ====================
2018-03-16 16:04:07.882712156 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCString_info
.type Foreign.C.String.peekCString_info, @object
Foreign.C.String.peekCString_info:
	.quad	Foreign.C.String.peekCString_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S8YDv_srt+104


==================== Asm code ====================
2018-03-16 16:04:07.886783243 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.castCSCharToChar_closure
.type Foreign.C.String.castCSCharToChar_closure, @object
Foreign.C.String.castCSCharToChar_closure:
	.quad	Foreign.C.String.castCSCharToChar_info


==================== Asm code ====================
2018-03-16 16:04:07.887609136 UTC

.section .text
.align 8
.globl Foreign.C.String.castCSCharToChar_entry
.type Foreign.C.String.castCSCharToChar_entry, @object
Foreign.C.String.castCSCharToChar_entry:
_c8ZWB:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ZWR
_c8ZWS:
	movq $block_c8ZWy_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8ZWy
_c8ZWz:
	movq (%rbx),%rax
	jmp *(%rax)
_c8ZWR:
	movl $Foreign.C.String.castCSCharToChar_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.castCSCharToChar_entry, .-Foreign.C.String.castCSCharToChar_entry


==================== Asm code ====================
2018-03-16 16:04:07.888268478 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.castCSCharToChar_info
.type Foreign.C.String.castCSCharToChar_info, @object
Foreign.C.String.castCSCharToChar_info:
	.quad	Foreign.C.String.castCSCharToChar_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:07.888958425 UTC

.section .text
.align 8
_c8ZWy:
_c8ZWy:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8ZWV
_c8ZWU:
	movq 7(%rbx),%rax
	movzbl %al,%eax
	movq $GHC.Types.C#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ZWV:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8ZWy, .-_c8ZWy


==================== Asm code ====================
2018-03-16 16:04:07.889603991 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZWy_info:
	.quad	_c8ZWy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.892450707 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.castCUCharToChar_closure
.type Foreign.C.String.castCUCharToChar_closure, @object
Foreign.C.String.castCUCharToChar_closure:
	.quad	Foreign.C.String.castCUCharToChar_info


==================== Asm code ====================
2018-03-16 16:04:07.893175192 UTC

.section .text
.align 8
.globl Foreign.C.String.castCUCharToChar_entry
.type Foreign.C.String.castCUCharToChar_entry, @object
Foreign.C.String.castCUCharToChar_entry:
_c8ZXf:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ZXp
_c8ZXq:
	movq $block_c8ZXc_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8ZXc
_c8ZXd:
	movq (%rbx),%rax
	jmp *(%rax)
_c8ZXp:
	movl $Foreign.C.String.castCUCharToChar_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.castCUCharToChar_entry, .-Foreign.C.String.castCUCharToChar_entry


==================== Asm code ====================
2018-03-16 16:04:07.893817686 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.castCUCharToChar_info
.type Foreign.C.String.castCUCharToChar_info, @object
Foreign.C.String.castCUCharToChar_info:
	.quad	Foreign.C.String.castCUCharToChar_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:07.894544807 UTC

.section .text
.align 8
_c8ZXc:
_c8ZXc:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8ZXt
_c8ZXs:
	movq 7(%rbx),%rax
	movq $GHC.Types.C#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ZXt:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8ZXc, .-_c8ZXc


==================== Asm code ====================
2018-03-16 16:04:07.895135137 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZXc_info:
	.quad	_c8ZXc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.897995856 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.castCCharToChar_closure
.type Foreign.C.String.castCCharToChar_closure, @object
Foreign.C.String.castCCharToChar_closure:
	.quad	Foreign.C.String.castCCharToChar_info


==================== Asm code ====================
2018-03-16 16:04:07.898695315 UTC

.section .text
.align 8
.globl Foreign.C.String.castCCharToChar_entry
.type Foreign.C.String.castCCharToChar_entry, @object
Foreign.C.String.castCCharToChar_entry:
_c8ZXM:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ZY2
_c8ZY3:
	movq $block_c8ZXJ_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c8ZXJ
_c8ZXK:
	movq (%rbx),%rax
	jmp *(%rax)
_c8ZY2:
	movl $Foreign.C.String.castCCharToChar_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.castCCharToChar_entry, .-Foreign.C.String.castCCharToChar_entry


==================== Asm code ====================
2018-03-16 16:04:07.899317028 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.castCCharToChar_info
.type Foreign.C.String.castCCharToChar_info, @object
Foreign.C.String.castCCharToChar_info:
	.quad	Foreign.C.String.castCCharToChar_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:07.900043341 UTC

.section .text
.align 8
_c8ZXJ:
_c8ZXJ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c8ZY6
_c8ZY5:
	movq 7(%rbx),%rax
	movzbl %al,%eax
	movq $GHC.Types.C#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ZY6:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c8ZXJ, .-_c8ZXJ


==================== Asm code ====================
2018-03-16 16:04:07.900676208 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZXJ_info:
	.quad	_c8ZXJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.905568216 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.$wpeekCAString_closure
.type Foreign.C.String.$wpeekCAString_closure, @object
Foreign.C.String.$wpeekCAString_closure:
	.quad	Foreign.C.String.$wpeekCAString_info


==================== Asm code ====================
2018-03-16 16:04:07.906443198 UTC

.section .text
.align 8
.globl Foreign.C.String.$wpeekCAString_entry
.type Foreign.C.String.$wpeekCAString_entry, @object
Foreign.C.String.$wpeekCAString_entry:
_c8ZYZ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c8ZZ0
_c8ZZ1:
	xorl %eax,%eax
_c8ZZs:
	cmpb $0,(%r14,%rax,1)
	je _c8ZZy
_c8ZZx:
	incq %rax
	jmp _c8ZZs
_c8ZZy:
	testq %rax,%rax
	jg _c8ZZp
_c8ZZq:
	movl $GHC.Types.[]_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_c8ZZp:
	movq %r14,-24(%rbp)
	movq $GHC.Types.[]_closure+1,-16(%rbp)
	decq %rax
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp _c8ZYA
_c8ZZ0:
	movl $Foreign.C.String.$wpeekCAString_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.$wpeekCAString_entry, .-Foreign.C.String.$wpeekCAString_entry


==================== Asm code ====================
2018-03-16 16:04:07.90715795 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.$wpeekCAString_info
.type Foreign.C.String.$wpeekCAString_info, @object
Foreign.C.String.$wpeekCAString_info:
	.quad	Foreign.C.String.$wpeekCAString_entry
	.quad	0
	.quad	14
	.quad	8589934596


==================== Asm code ====================
2018-03-16 16:04:07.907981866 UTC

.section .text
.align 8
_c8ZYA:
_c8ZYA:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c8ZZ5
_c8ZZ4:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rbx
	movq 8(%rbp),%rcx
	movsbq (%rcx,%rbx,1),%rcx
	testq %rbx,%rbx
	jg _c8ZZ7
_c8ZZn:
	movq $GHC.Types.C#_con_info,-32(%r12)
	movzbl %cl,%ebx
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c8ZZ7:
	movq $GHC.Types.C#_con_info,-32(%r12)
	movzbl %cl,%ecx
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rax
	movq %rax,16(%rbp)
	leaq -1(%rbx),%rax
	movq %rax,24(%rbp)
	jmp _c8ZYA
_c8ZZ5:
	movq $40,904(%r13)
	movq $block_c8ZYA_info,(%rbp)
	jmp stg_gc_noregs
	.size _c8ZYA, .-_c8ZYA


==================== Asm code ====================
2018-03-16 16:04:07.908754886 UTC

.section .data.rel.ro
.align 8
.align 1
block_c8ZYA_info:
	.quad	_c8ZYA
	.quad	323
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.911385998 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCAString1_closure
.type Foreign.C.String.peekCAString1_closure, @object
Foreign.C.String.peekCAString1_closure:
	.quad	Foreign.C.String.peekCAString1_info


==================== Asm code ====================
2018-03-16 16:04:07.912137986 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCAString1_entry
.type Foreign.C.String.peekCAString1_entry, @object
Foreign.C.String.peekCAString1_entry:
_c9006:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c9007
_c9008:
	movq $block_c9003_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c9003
_c9004:
	movq (%rbx),%rax
	jmp *(%rax)
_c9007:
	movl $Foreign.C.String.peekCAString1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.peekCAString1_entry, .-Foreign.C.String.peekCAString1_entry


==================== Asm code ====================
2018-03-16 16:04:07.912826504 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCAString1_info
.type Foreign.C.String.peekCAString1_info, @object
Foreign.C.String.peekCAString1_info:
	.quad	Foreign.C.String.peekCAString1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:07.913462175 UTC

.section .text
.align 8
_c9003:
_c9003:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp Foreign.C.String.$wpeekCAString_entry
	.size _c9003, .-_c9003


==================== Asm code ====================
2018-03-16 16:04:07.914007311 UTC

.section .data.rel.ro
.align 8
.align 1
block_c9003_info:
	.quad	_c9003
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.916088582 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCAString_closure
.type Foreign.C.String.peekCAString_closure, @object
Foreign.C.String.peekCAString_closure:
	.quad	Foreign.C.String.peekCAString_info


==================== Asm code ====================
2018-03-16 16:04:07.916744054 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCAString_entry
.type Foreign.C.String.peekCAString_entry, @object
Foreign.C.String.peekCAString_entry:
_c900q:
	jmp Foreign.C.String.peekCAString1_entry
	.size Foreign.C.String.peekCAString_entry, .-Foreign.C.String.peekCAString_entry


==================== Asm code ====================
2018-03-16 16:04:07.917712435 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCAString_info
.type Foreign.C.String.peekCAString_info, @object
Foreign.C.String.peekCAString_info:
	.quad	Foreign.C.String.peekCAString_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:07.921947768 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.$wpeekCAStringLen_closure
.type Foreign.C.String.$wpeekCAStringLen_closure, @object
Foreign.C.String.$wpeekCAStringLen_closure:
	.quad	Foreign.C.String.$wpeekCAStringLen_info


==================== Asm code ====================
2018-03-16 16:04:07.922745522 UTC

.section .text
.align 8
.globl Foreign.C.String.$wpeekCAStringLen_entry
.type Foreign.C.String.$wpeekCAStringLen_entry, @object
Foreign.C.String.$wpeekCAStringLen_entry:
_c901d:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c901e
_c901f:
	testq %rsi,%rsi
	jg _c901b
_c901c:
	movl $GHC.Types.[]_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_c901e:
	movl $Foreign.C.String.$wpeekCAStringLen_closure,%ebx
	jmp *-8(%r13)
_c901b:
	movq %r14,-24(%rbp)
	movq $GHC.Types.[]_closure+1,-16(%rbp)
	leaq -1(%rsi),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp _c900J
	.size Foreign.C.String.$wpeekCAStringLen_entry, .-Foreign.C.String.$wpeekCAStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:07.923445434 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.$wpeekCAStringLen_info
.type Foreign.C.String.$wpeekCAStringLen_info, @object
Foreign.C.String.$wpeekCAStringLen_info:
	.quad	Foreign.C.String.$wpeekCAStringLen_entry
	.quad	0
	.quad	14
	.quad	12884901902


==================== Asm code ====================
2018-03-16 16:04:07.924613886 UTC

.section .text
.align 8
_c900J:
_c900J:
	movq $block_c900M_info,-8(%rbp)
	movq (%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c900M
_c900N:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c900J, .-_c900J


==================== Asm code ====================
2018-03-16 16:04:07.925565725 UTC

.section .text
.align 8
_c900M:
_c900M:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c901j
_c901i:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 7(%rbx),%rbx
	movsbq (%rbx,%rcx,1),%rbx
	testq %rcx,%rcx
	je _c901B
_c901l:
	movq $GHC.Types.C#_con_info,-32(%r12)
	movzbl %bl,%ebx
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rax
	movq %rax,16(%rbp)
	leaq -1(%rcx),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c900J
_c901B:
	movq $GHC.Types.C#_con_info,-32(%r12)
	movzbl %bl,%ebx
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c901j:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c900M, .-_c900M


==================== Asm code ====================
2018-03-16 16:04:07.926316157 UTC

.section .data.rel.ro
.align 8
.align 1
block_c900M_info:
	.quad	_c900M
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.92981127 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCAStringLen1_closure
.type Foreign.C.String.peekCAStringLen1_closure, @object
Foreign.C.String.peekCAStringLen1_closure:
	.quad	Foreign.C.String.peekCAStringLen1_info


==================== Asm code ====================
2018-03-16 16:04:07.930518431 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCAStringLen1_entry
.type Foreign.C.String.peekCAStringLen1_entry, @object
Foreign.C.String.peekCAStringLen1_entry:
_c902b:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c902f
_c902g:
	movq $block_c9028_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c9028
_c9029:
	movq (%rbx),%rax
	jmp *(%rax)
_c902f:
	movl $Foreign.C.String.peekCAStringLen1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.peekCAStringLen1_entry, .-Foreign.C.String.peekCAStringLen1_entry


==================== Asm code ====================
2018-03-16 16:04:07.931179038 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCAStringLen1_info
.type Foreign.C.String.peekCAStringLen1_info, @object
Foreign.C.String.peekCAStringLen1_info:
	.quad	Foreign.C.String.peekCAStringLen1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:07.931853824 UTC

.section .text
.align 8
_c9028:
_c9028:
	movq $block_c902e_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c902e
_c902i:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c9028, .-_c9028


==================== Asm code ====================
2018-03-16 16:04:07.932430237 UTC

.section .data.rel.ro
.align 8
.align 1
block_c9028_info:
	.quad	_c9028
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.933065993 UTC

.section .text
.align 8
_c902e:
_c902e:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp Foreign.C.String.$wpeekCAStringLen_entry
	.size _c902e, .-_c902e


==================== Asm code ====================
2018-03-16 16:04:07.934418679 UTC

.section .data.rel.ro
.align 8
.align 1
block_c902e_info:
	.quad	_c902e
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:07.936444932 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCAStringLen_closure
.type Foreign.C.String.peekCAStringLen_closure, @object
Foreign.C.String.peekCAStringLen_closure:
	.quad	Foreign.C.String.peekCAStringLen_info


==================== Asm code ====================
2018-03-16 16:04:07.937042768 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCAStringLen_entry
.type Foreign.C.String.peekCAStringLen_entry, @object
Foreign.C.String.peekCAStringLen_entry:
_c902G:
	jmp Foreign.C.String.peekCAStringLen1_entry
	.size Foreign.C.String.peekCAStringLen_entry, .-Foreign.C.String.peekCAStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:07.937658675 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCAStringLen_info
.type Foreign.C.String.peekCAStringLen_info, @object
Foreign.C.String.peekCAStringLen_info:
	.quad	Foreign.C.String.peekCAStringLen_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:07.940865922 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.castCWcharToChar_closure
.type Foreign.C.String.castCWcharToChar_closure, @object
Foreign.C.String.castCWcharToChar_closure:
	.quad	Foreign.C.String.castCWcharToChar_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.941813172 UTC

.section .text
.align 8
.globl Foreign.C.String.castCWcharToChar_entry
.type Foreign.C.String.castCWcharToChar_entry, @object
Foreign.C.String.castCWcharToChar_entry:
_c902U:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c902V
_c902W:
	movq $block_c902R_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c902R
_c902S:
	movq (%rbx),%rax
	jmp *(%rax)
_c902V:
	movl $Foreign.C.String.castCWcharToChar_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.castCWcharToChar_entry, .-Foreign.C.String.castCWcharToChar_entry


==================== Asm code ====================
2018-03-16 16:04:07.942468679 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.castCWcharToChar_info
.type Foreign.C.String.castCWcharToChar_info, @object
Foreign.C.String.castCWcharToChar_info:
	.quad	Foreign.C.String.castCWcharToChar_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S8YDv_srt+112


==================== Asm code ====================
2018-03-16 16:04:07.943282777 UTC

.section .text
.align 8
_c902R:
_c902R:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c9031
_c9030:
	movq 7(%rbx),%rax
	cmpq $1114111,%rax
	ja _c9038
_c903f:
	movq $GHC.Types.C#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c9038:
	addq $-16,%r12
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Char.$wlvl_entry
_c9031:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c902R, .-_c902R


==================== Asm code ====================
2018-03-16 16:04:07.943973608 UTC

.section .data.rel.ro
.align 8
.align 1
block_c902R_info:
	.quad	_c902R
	.quad	0
	.quad	4294967326
	.quad	S8YDv_srt+112


==================== Asm code ====================
2018-03-16 16:04:07.94650849 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCWString2_closure
.type Foreign.C.String.peekCWString2_closure, @object
Foreign.C.String.peekCWString2_closure:
	.quad	Foreign.C.String.peekCWString2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.947353451 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCWString2_entry
.type Foreign.C.String.peekCWString2_entry, @object
Foreign.C.String.peekCWString2_entry:
_c903x:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c903y
_c903z:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c903w
_c903v:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Types.[]_closure+1,%esi
	movl $Foreign.C.String.castCWcharToChar_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Base.map_entry
_c903y:
	jmp *-16(%r13)
_c903w:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.C.String.peekCWString2_entry, .-Foreign.C.String.peekCWString2_entry


==================== Asm code ====================
2018-03-16 16:04:07.948074036 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCWString2_info
.type Foreign.C.String.peekCWString2_info, @object
Foreign.C.String.peekCWString2_info:
	.quad	Foreign.C.String.peekCWString2_entry
	.quad	0
	.quad	4294967317
	.quad	S8YDv_srt+120


==================== Asm code ====================
2018-03-16 16:04:07.953921147 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.$wpeekCWStringLen_closure
.type Foreign.C.String.$wpeekCWStringLen_closure, @object
Foreign.C.String.$wpeekCWStringLen_closure:
	.quad	Foreign.C.String.$wpeekCWStringLen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.954750912 UTC

.section .text
.align 8
sat_s8Yx9_entry:
_c904l:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c904m
_c904n:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c904p
_c904o:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $GHC.Int.I32#_con_info,-32(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movl $Foreign.C.String.castCWcharToChar_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Base.map_entry
_c904p:
	movq $40,904(%r13)
_c904m:
	jmp *-16(%r13)
	.size sat_s8Yx9_entry, .-sat_s8Yx9_entry


==================== Asm code ====================
2018-03-16 16:04:07.955406472 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Yx9_info:
	.quad	sat_s8Yx9_entry
	.quad	4294967297
	.quad	4294967315
	.quad	S8YDv_srt+120


==================== Asm code ====================
2018-03-16 16:04:07.956121389 UTC

.section .text
.align 8
.globl Foreign.C.String.$wpeekCWStringLen_entry
.type Foreign.C.String.$wpeekCWStringLen_entry, @object
Foreign.C.String.$wpeekCWStringLen_entry:
_c904t:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c904u
_c904v:
	testq %rsi,%rsi
	jg _c904r
_c904s:
	movl $Foreign.C.String.peekCWString2_closure,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_c904u:
	movl $Foreign.C.String.$wpeekCWStringLen_closure,%ebx
	jmp *-8(%r13)
_c904r:
	movq %r14,-24(%rbp)
	leaq -1(%rsi),%rax
	movq %rax,-16(%rbp)
	movq $GHC.Types.[]_closure+1,-8(%rbp)
	addq $-24,%rbp
	jmp _c903V
	.size Foreign.C.String.$wpeekCWStringLen_entry, .-Foreign.C.String.$wpeekCWStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:07.956816445 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.$wpeekCWStringLen_info
.type Foreign.C.String.$wpeekCWStringLen_info, @object
Foreign.C.String.$wpeekCWStringLen_info:
	.quad	Foreign.C.String.$wpeekCWStringLen_entry
	.quad	0
	.quad	30064771086
	.quad	12884901902
	.quad	S8YDv_srt+120


==================== Asm code ====================
2018-03-16 16:04:07.957631111 UTC

.section .text
.align 8
_c903V:
_c903V:
	movq (%rbp),%rax
	movq 8(%rbp),%rbx
	testq %rbx,%rbx
	jne _c904C
_c904G:
	movq $block_c904a_info,8(%rbp)
	movq %rax,%rbx
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c904a
_c904b:
	movq (%rbx),%rax
	jmp *(%rax)
_c904C:
	movq $block_c9040_info,-8(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c9040
_c9041:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c903V, .-_c903V


==================== Asm code ====================
2018-03-16 16:04:07.95853297 UTC

.section .text
.align 8
_c9040:
_c9040:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c904F
_c904E:
	movq 16(%rbp),%rax
	movq 7(%rbx),%rbx
	movslq (%rbx,%rax,4),%rbx
	movq $GHC.Int.I32#_con_info,-32(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,(%r12)
	decq %rax
	movq %rax,16(%rbp)
	leaq -14(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c903V
_c904F:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c9040, .-_c9040


==================== Asm code ====================
2018-03-16 16:04:07.959196339 UTC

.section .data.rel.ro
.align 8
.align 1
block_c9040_info:
	.quad	_c9040
	.quad	131
	.quad	4294967326
	.quad	S8YDv_srt+120


==================== Asm code ====================
2018-03-16 16:04:07.959895996 UTC

.section .text
.align 8
_c904a:
_c904a:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c904z
_c904y:
	movq 7(%rbx),%rax
	movslq (%rax),%rax
	movq $sat_s8Yx9_info,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -24(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c904z:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c904a, .-_c904a


==================== Asm code ====================
2018-03-16 16:04:07.960544261 UTC

.section .data.rel.ro
.align 8
.align 1
block_c904a_info:
	.quad	_c904a
	.quad	1
	.quad	4294967326
	.quad	S8YDv_srt+120


==================== Asm code ====================
2018-03-16 16:04:07.964691114 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCWStringLen1_closure
.type Foreign.C.String.peekCWStringLen1_closure, @object
Foreign.C.String.peekCWStringLen1_closure:
	.quad	Foreign.C.String.peekCWStringLen1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.965424128 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCWStringLen1_entry
.type Foreign.C.String.peekCWStringLen1_entry, @object
Foreign.C.String.peekCWStringLen1_entry:
_c905q:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c905u
_c905v:
	movq $block_c905n_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c905n
_c905o:
	movq (%rbx),%rax
	jmp *(%rax)
_c905u:
	movl $Foreign.C.String.peekCWStringLen1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.peekCWStringLen1_entry, .-Foreign.C.String.peekCWStringLen1_entry


==================== Asm code ====================
2018-03-16 16:04:07.9660433 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCWStringLen1_info
.type Foreign.C.String.peekCWStringLen1_info, @object
Foreign.C.String.peekCWStringLen1_info:
	.quad	Foreign.C.String.peekCWStringLen1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	S8YDv_srt+136


==================== Asm code ====================
2018-03-16 16:04:07.96669426 UTC

.section .text
.align 8
_c905n:
_c905n:
	movq $block_c905t_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c905t
_c905x:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c905n, .-_c905n


==================== Asm code ====================
2018-03-16 16:04:07.967240517 UTC

.section .data.rel.ro
.align 8
.align 1
block_c905n_info:
	.quad	_c905n
	.quad	0
	.quad	4294967326
	.quad	S8YDv_srt+136


==================== Asm code ====================
2018-03-16 16:04:07.967884931 UTC

.section .text
.align 8
_c905t:
_c905t:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp Foreign.C.String.$wpeekCWStringLen_entry
	.size _c905t, .-_c905t


==================== Asm code ====================
2018-03-16 16:04:07.968467824 UTC

.section .data.rel.ro
.align 8
.align 1
block_c905t_info:
	.quad	_c905t
	.quad	1
	.quad	4294967326
	.quad	S8YDv_srt+136


==================== Asm code ====================
2018-03-16 16:04:07.970410003 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCWStringLen_closure
.type Foreign.C.String.peekCWStringLen_closure, @object
Foreign.C.String.peekCWStringLen_closure:
	.quad	Foreign.C.String.peekCWStringLen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.971029166 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCWStringLen_entry
.type Foreign.C.String.peekCWStringLen_entry, @object
Foreign.C.String.peekCWStringLen_entry:
_c905V:
	jmp Foreign.C.String.peekCWStringLen1_entry
	.size Foreign.C.String.peekCWStringLen_entry, .-Foreign.C.String.peekCWStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:07.971584534 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCWStringLen_info
.type Foreign.C.String.peekCWStringLen_info, @object
Foreign.C.String.peekCWStringLen_info:
	.quad	Foreign.C.String.peekCWStringLen_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S8YDv_srt+144


==================== Asm code ====================
2018-03-16 16:04:07.973659458 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCWString3_closure
.type Foreign.C.String.newCWString3_closure, @object
Foreign.C.String.newCWString3_closure:
	.quad	GHC.Int.I32#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.97922818 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.$wpeekCWString_closure
.type Foreign.C.String.$wpeekCWString_closure, @object
Foreign.C.String.$wpeekCWString_closure:
	.quad	Foreign.C.String.$wpeekCWString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.980034484 UTC

.section .text
.align 8
sat_s8YxJ_entry:
_c906C:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c906D
_c906E:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c906G
_c906F:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $GHC.Int.I32#_con_info,-32(%r12)
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movl $Foreign.C.String.castCWcharToChar_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Base.map_entry
_c906G:
	movq $40,904(%r13)
_c906D:
	jmp *-16(%r13)
	.size sat_s8YxJ_entry, .-sat_s8YxJ_entry


==================== Asm code ====================
2018-03-16 16:04:07.9807481 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8YxJ_info:
	.quad	sat_s8YxJ_entry
	.quad	4294967297
	.quad	4294967315
	.quad	S8YDv_srt+120


==================== Asm code ====================
2018-03-16 16:04:07.981586557 UTC

.section .text
.align 8
.globl Foreign.C.String.$wpeekCWString_entry
.type Foreign.C.String.$wpeekCWString_entry, @object
Foreign.C.String.$wpeekCWString_entry:
_c906J:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c906K
_c906L:
	xorl %eax,%eax
_c9070:
	cmpl $0,(%r14,%rax,4)
	je _c9076
_c9075:
	incq %rax
	jmp _c9070
_c9076:
	testq %rax,%rax
	jg _c906X
_c906Y:
	movl $Foreign.C.String.peekCWString2_closure,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
_c906X:
	movq %r14,-24(%rbp)
	decq %rax
	movq %rax,-16(%rbp)
	movq $GHC.Types.[]_closure+1,-8(%rbp)
	addq $-32,%rbp
	jmp _c906m
_c906K:
	movl $Foreign.C.String.$wpeekCWString_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.$wpeekCWString_entry, .-Foreign.C.String.$wpeekCWString_entry


==================== Asm code ====================
2018-03-16 16:04:07.982301441 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.$wpeekCWString_info
.type Foreign.C.String.$wpeekCWString_info, @object
Foreign.C.String.$wpeekCWString_info:
	.quad	Foreign.C.String.$wpeekCWString_entry
	.quad	0
	.quad	81604378638
	.quad	8589934596
	.quad	S8YDv_srt+120


==================== Asm code ====================
2018-03-16 16:04:07.983104459 UTC

.section .text
.align 8
_c906m:
_c906m:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c906S
_c906R:
	movq 24(%rbp),%rax
	movq 16(%rbp),%rbx
	testq %rbx,%rbx
	jne _c906U
_c906V:
	addq $-40,%r12
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c906u
_c906U:
	movq $GHC.Int.I32#_con_info,-32(%r12)
	movq 8(%rbp),%rcx
	movslq (%rcx,%rbx,4),%rcx
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -1(%rbx),%rax
	movq %rax,16(%rbp)
	leaq -14(%r12),%rax
	movq %rax,24(%rbp)
	jmp _c906m
_c906S:
	movq $40,904(%r13)
	movq $block_c906m_info,(%rbp)
	jmp stg_gc_noregs
	.size _c906m, .-_c906m


==================== Asm code ====================
2018-03-16 16:04:07.983780027 UTC

.section .data.rel.ro
.align 8
.align 1
block_c906m_info:
	.quad	_c906m
	.quad	195
	.quad	4294967326
	.quad	S8YDv_srt+120


==================== Asm code ====================
2018-03-16 16:04:07.984498648 UTC

.section .text
.align 8
_c906u:
_c906u:
	addq $32,%r12
	movq 16(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c906P
_c906O:
	movq $sat_s8YxJ_info,-24(%r12)
	movq %rax,-8(%r12)
	movq (%rbp),%rax
	movslq (%rax),%rax
	movq %rax,(%r12)
	leaq -24(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c906P:
	movq $32,904(%r13)
	movq $block_c906t_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unpt_r1
	.size _c906u, .-_c906u


==================== Asm code ====================
2018-03-16 16:04:07.98518625 UTC

.section .text
.align 8
_c906t:
_c906t:
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp _c906u
	.size _c906t, .-_c906t


==================== Asm code ====================
2018-03-16 16:04:07.985695898 UTC

.section .data.rel.ro
.align 8
.align 1
block_c906t_info:
	.quad	_c906t
	.quad	451
	.quad	4294967326
	.quad	S8YDv_srt+120


==================== Asm code ====================
2018-03-16 16:04:07.988408286 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCWString1_closure
.type Foreign.C.String.peekCWString1_closure, @object
Foreign.C.String.peekCWString1_closure:
	.quad	Foreign.C.String.peekCWString1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.989113556 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCWString1_entry
.type Foreign.C.String.peekCWString1_entry, @object
Foreign.C.String.peekCWString1_entry:
_c907R:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c907S
_c907T:
	movq $block_c907O_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c907O
_c907P:
	movq (%rbx),%rax
	jmp *(%rax)
_c907S:
	movl $Foreign.C.String.peekCWString1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.peekCWString1_entry, .-Foreign.C.String.peekCWString1_entry


==================== Asm code ====================
2018-03-16 16:04:07.990064985 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCWString1_info
.type Foreign.C.String.peekCWString1_info, @object
Foreign.C.String.peekCWString1_info:
	.quad	Foreign.C.String.peekCWString1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	S8YDv_srt+152


==================== Asm code ====================
2018-03-16 16:04:07.99066367 UTC

.section .text
.align 8
_c907O:
_c907O:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp Foreign.C.String.$wpeekCWString_entry
	.size _c907O, .-_c907O


==================== Asm code ====================
2018-03-16 16:04:07.991243299 UTC

.section .data.rel.ro
.align 8
.align 1
block_c907O_info:
	.quad	_c907O
	.quad	0
	.quad	4294967326
	.quad	S8YDv_srt+152


==================== Asm code ====================
2018-03-16 16:04:07.993356108 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCWString_closure
.type Foreign.C.String.peekCWString_closure, @object
Foreign.C.String.peekCWString_closure:
	.quad	Foreign.C.String.peekCWString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:07.993953332 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCWString_entry
.type Foreign.C.String.peekCWString_entry, @object
Foreign.C.String.peekCWString_entry:
_c908b:
	jmp Foreign.C.String.peekCWString1_entry
	.size Foreign.C.String.peekCWString_entry, .-Foreign.C.String.peekCWString_entry


==================== Asm code ====================
2018-03-16 16:04:07.99452156 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCWString_info
.type Foreign.C.String.peekCWString_info, @object
Foreign.C.String.peekCWString_info:
	.quad	Foreign.C.String.peekCWString_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S8YDv_srt+160


==================== Asm code ====================
2018-03-16 16:04:07.997460246 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCWString2_closure
.type Foreign.C.String.newCWString2_closure, @object
Foreign.C.String.newCWString2_closure:
	.quad	Foreign.C.String.newCWString2_info


==================== Asm code ====================
2018-03-16 16:04:07.998688519 UTC

.section .text
.align 8
.globl Foreign.C.String.newCWString2_entry
.type Foreign.C.String.newCWString2_entry, @object
Foreign.C.String.newCWString2_entry:
_c908p:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c908z
_c908A:
	movq $block_c908m_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c908m
_c908n:
	movq (%rbx),%rax
	jmp *(%rax)
_c908z:
	movl $Foreign.C.String.newCWString2_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.newCWString2_entry, .-Foreign.C.String.newCWString2_entry


==================== Asm code ====================
2018-03-16 16:04:07.999358262 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCWString2_info
.type Foreign.C.String.newCWString2_info, @object
Foreign.C.String.newCWString2_info:
	.quad	Foreign.C.String.newCWString2_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:08.000042821 UTC

.section .text
.align 8
_c908m:
_c908m:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c908D
_c908C:
	movq 7(%rbx),%rax
	movslq %eax,%rax
	movq $GHC.Int.I32#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c908D:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c908m, .-_c908m


==================== Asm code ====================
2018-03-16 16:04:08.00058092 UTC

.section .data.rel.ro
.align 8
.align 1
block_c908m_info:
	.quad	_c908m
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.006687187 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCWStringLen1_closure
.type Foreign.C.String.withCWStringLen1_closure, @object
Foreign.C.String.withCWStringLen1_closure:
	.quad	Foreign.C.String.withCWStringLen1_info


==================== Asm code ====================
2018-03-16 16:04:08.007420603 UTC

.section .text
.align 8
.globl Foreign.C.String.withCWStringLen1_entry
.type Foreign.C.String.withCWStringLen1_entry, @object
Foreign.C.String.withCWStringLen1_entry:
_c908W:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c9090
_c9091:
	movq $block_c908U_info,-16(%rbp)
	movq %rsi,%rax
	movq %r14,%rsi
	movl $Foreign.C.String.newCWString2_closure+1,%r14d
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.map_entry
_c9090:
	movl $Foreign.C.String.withCWStringLen1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.withCWStringLen1_entry, .-Foreign.C.String.withCWStringLen1_entry


==================== Asm code ====================
2018-03-16 16:04:08.00806478 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCWStringLen1_info
.type Foreign.C.String.withCWStringLen1_info, @object
Foreign.C.String.withCWStringLen1_info:
	.quad	Foreign.C.String.withCWStringLen1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:04:08.00867692 UTC

.section .text
.align 8
_c908U:
_c908U:
	movq $block_c908Z_info,-8(%rbp)
	xorl %esi,%esi
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.List.$wlenAcc_entry
	.size _c908U, .-_c908U


==================== Asm code ====================
2018-03-16 16:04:08.009218127 UTC

.section .data.rel.ro
.align 8
.align 1
block_c908U_info:
	.quad	_c908U
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.009859951 UTC

.section .text
.align 8
_c908Z:
_c908Z:
	movq $block_c909a_info,-8(%rbp)
	movl $4,%r14d
	movq %rbx,%rax
	shlq $2,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_newAlignedPinnedByteArray#
	.size _c908Z, .-_c908Z


==================== Asm code ====================
2018-03-16 16:04:08.010449132 UTC

.section .data.rel.ro
.align 8
.align 1
block_c908Z_info:
	.quad	_c908Z
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.011085588 UTC

.section .text
.align 8
_c909a:
_c909a:
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	movq $0,-8(%rbp)
	leaq 16(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-16,%rbp
	jmp _c909w
	.size _c909a, .-_c909a


==================== Asm code ====================
2018-03-16 16:04:08.011637384 UTC

.section .data.rel.ro
.align 8
.align 1
block_c909a_info:
	.quad	_c909a
	.quad	67
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.012254578 UTC

.section .text
.align 8
_c909w:
_c909w:
	movq (%rbp),%rax
	movq $block_c909z_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c909z
_c909B:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c909w, .-_c909w


==================== Asm code ====================
2018-03-16 16:04:08.013000668 UTC

.section .text
.align 8
_c909z:
_c909z:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u909W
_c909M:
	movq $block_c909K_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c909K
_c909N:
	movq (%rbx),%rax
	jmp *(%rax)
_u909W:
	addq $8,%rbp
	jmp _c909j
	.size _c909z, .-_c909z


==================== Asm code ====================
2018-03-16 16:04:08.013643794 UTC

.section .data.rel.ro
.align 8
.align 1
block_c909z_info:
	.quad	_c909z
	.quad	453
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.014361722 UTC

.section .text
.align 8
_c909j:
_c909j:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c909r
_c909q:
	movq $GHC.Types.I#_con_info,-48(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq $GHC.Ptr.Ptr_con_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	movq $block_c909o_info,16(%rbp)
	leaq -15(%r12),%r14
	movq 32(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_pv_fast
_c909r:
	movq $56,904(%r13)
	movq $block_c909j_info,(%rbp)
	jmp stg_gc_noregs
	.size _c909j, .-_c909j


==================== Asm code ====================
2018-03-16 16:04:08.015028348 UTC

.section .data.rel.ro
.align 8
.align 1
block_c909j_info:
	.quad	_c909j
	.quad	196
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.015618266 UTC

.section .text
.align 8
_c909o:
_c909o:
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c909o, .-_c909o


==================== Asm code ====================
2018-03-16 16:04:08.016167597 UTC

.section .data.rel.ro
.align 8
.align 1
block_c909o_info:
	.quad	_c909o
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.016799637 UTC

.section .text
.align 8
_c909K:
_c909K:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movl %ebx,(%rdx,%rax,4)
	movq %rcx,8(%rbp)
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c909w
	.size _c909K, .-_c909K


==================== Asm code ====================
2018-03-16 16:04:08.017443392 UTC

.section .data.rel.ro
.align 8
.align 1
block_c909K_info:
	.quad	_c909K
	.quad	902
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.019554999 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCWStringLen_closure
.type Foreign.C.String.withCWStringLen_closure, @object
Foreign.C.String.withCWStringLen_closure:
	.quad	Foreign.C.String.withCWStringLen_info


==================== Asm code ====================
2018-03-16 16:04:08.020136909 UTC

.section .text
.align 8
.globl Foreign.C.String.withCWStringLen_entry
.type Foreign.C.String.withCWStringLen_entry, @object
Foreign.C.String.withCWStringLen_entry:
_c90aN:
	jmp Foreign.C.String.withCWStringLen1_entry
	.size Foreign.C.String.withCWStringLen_entry, .-Foreign.C.String.withCWStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:08.020701266 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCWStringLen_info
.type Foreign.C.String.withCWStringLen_info, @object
Foreign.C.String.withCWStringLen_info:
	.quad	Foreign.C.String.withCWStringLen_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:04:08.025084775 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCWString_closure
.type Foreign.C.String.withCWString_closure, @object
Foreign.C.String.withCWString_closure:
	.quad	Foreign.C.String.withCWString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:08.025792972 UTC

.section .text
.align 8
vals_s8YyL_entry:
_c90b2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c90b3
_c90b4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movl $Foreign.C.String.newCWString2_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Base.map_entry
_c90b3:
	jmp *-16(%r13)
	.size vals_s8YyL_entry, .-vals_s8YyL_entry


==================== Asm code ====================
2018-03-16 16:04:08.026406843 UTC

.section .data.rel.ro
.align 8
.align 1
vals_s8YyL_info:
	.quad	vals_s8YyL_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:04:08.027038052 UTC

.section .text
.align 8
sat_s8YyO_entry:
_c90bf:
	movq 7(%rbx),%rbx
	jmp stg_ap_0_fast
	.size sat_s8YyO_entry, .-sat_s8YyO_entry


==================== Asm code ====================
2018-03-16 16:04:08.027591433 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8YyO_info:
	.quad	sat_s8YyO_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:08.028323269 UTC

.section .text
.align 8
sat_s8YyP_entry:
_c90bi:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c90bm
_c90bl:
	movq 7(%rbx),%rax
	movq $sat_s8YyO_info,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%r8
	movq %rax,%rdi
	movl $Foreign.C.String.newCWString3_closure+1,%esi
	movl $Foreign.C.Types.$fStorableCWchar_closure,%r14d
	jmp Foreign.Marshal.Array.withArrayLen0_entry
_c90bm:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_s8YyP_entry, .-sat_s8YyP_entry


==================== Asm code ====================
2018-03-16 16:04:08.028948207 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8YyP_info:
	.quad	sat_s8YyP_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S8YDv_srt+168


==================== Asm code ====================
2018-03-16 16:04:08.029666073 UTC

.section .text
.align 8
.globl Foreign.C.String.withCWString_entry
.type Foreign.C.String.withCWString_entry, @object
Foreign.C.String.withCWString_entry:
_c90bn:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c90br
_c90bq:
	movq $vals_s8YyL_info,-32(%r12)
	movq %r14,-16(%r12)
	movq $sat_s8YyP_info,-8(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c90br:
	movq $40,904(%r13)
	movl $Foreign.C.String.withCWString_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.withCWString_entry, .-Foreign.C.String.withCWString_entry


==================== Asm code ====================
2018-03-16 16:04:08.030328123 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCWString_info
.type Foreign.C.String.withCWString_info, @object
Foreign.C.String.withCWString_info:
	.quad	Foreign.C.String.withCWString_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S8YDv_srt+168


==================== Asm code ====================
2018-03-16 16:04:08.032935371 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCWString1_closure
.type Foreign.C.String.newCWString1_closure, @object
Foreign.C.String.newCWString1_closure:
	.quad	Foreign.C.String.newCWString1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:08.034174134 UTC

.section .text
.align 8
.globl Foreign.C.String.newCWString1_entry
.type Foreign.C.String.newCWString1_entry, @object
Foreign.C.String.newCWString1_entry:
_c90bO:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c90bP
_c90bQ:
	movq $block_c90bM_info,-8(%rbp)
	movq %r14,%rsi
	movl $Foreign.C.String.newCWString2_closure+1,%r14d
	addq $-8,%rbp
	jmp GHC.Base.map_entry
_c90bP:
	movl $Foreign.C.String.newCWString1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.newCWString1_entry, .-Foreign.C.String.newCWString1_entry


==================== Asm code ====================
2018-03-16 16:04:08.034822984 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCWString1_info
.type Foreign.C.String.newCWString1_info, @object
Foreign.C.String.newCWString1_info:
	.quad	Foreign.C.String.newCWString1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	S8YDv_srt+184


==================== Asm code ====================
2018-03-16 16:04:08.035444718 UTC

.section .text
.align 8
_c90bM:
_c90bM:
	movq %rbx,%rdi
	movl $Foreign.C.String.newCWString3_closure+1,%esi
	movl $Foreign.C.Types.$fStorableCWchar_closure,%r14d
	addq $8,%rbp
	jmp Foreign.Marshal.Array.newArray3_entry
	.size _c90bM, .-_c90bM


==================== Asm code ====================
2018-03-16 16:04:08.036040831 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90bM_info:
	.quad	_c90bM
	.quad	0
	.quad	4294967326
	.quad	S8YDv_srt+184


==================== Asm code ====================
2018-03-16 16:04:08.03850442 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCWString_closure
.type Foreign.C.String.newCWString_closure, @object
Foreign.C.String.newCWString_closure:
	.quad	Foreign.C.String.newCWString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:08.039117107 UTC

.section .text
.align 8
.globl Foreign.C.String.newCWString_entry
.type Foreign.C.String.newCWString_entry, @object
Foreign.C.String.newCWString_entry:
_c90c6:
	jmp Foreign.C.String.newCWString1_entry
	.size Foreign.C.String.newCWString_entry, .-Foreign.C.String.newCWString_entry


==================== Asm code ====================
2018-03-16 16:04:08.039726031 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCWString_info
.type Foreign.C.String.newCWString_info, @object
Foreign.C.String.newCWString_info:
	.quad	Foreign.C.String.newCWString_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S8YDv_srt+192


==================== Asm code ====================
2018-03-16 16:04:08.043957958 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCWStringLen1_closure
.type Foreign.C.String.newCWStringLen1_closure, @object
Foreign.C.String.newCWStringLen1_closure:
	.quad	Foreign.C.String.newCWStringLen1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:08.044683352 UTC

.section .text
.align 8
sat_s8Yz0_entry:
_c90ct:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c90cx
_c90cy:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c90cr_info,-24(%rbp)
	xorl %esi,%esi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.List.$wlenAcc_entry
_c90cx:
	jmp *-16(%r13)
	.size sat_s8Yz0_entry, .-sat_s8Yz0_entry


==================== Asm code ====================
2018-03-16 16:04:08.045270382 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s8Yz0_info:
	.quad	sat_s8Yz0_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:04:08.045948427 UTC

.section .text
.align 8
_c90cr:
_c90cr:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c90cB
_c90cA:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c90cB:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c90cr, .-_c90cr


==================== Asm code ====================
2018-03-16 16:04:08.046572748 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90cr_info:
	.quad	_c90cr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.047258198 UTC

.section .text
.align 8
.globl Foreign.C.String.newCWStringLen1_entry
.type Foreign.C.String.newCWStringLen1_entry, @object
Foreign.C.String.newCWStringLen1_entry:
_c90cC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c90cE
_c90cF:
	movq $block_c90ch_info,-8(%rbp)
	movq %r14,%rsi
	movl $Foreign.C.String.newCWString2_closure+1,%r14d
	addq $-8,%rbp
	jmp GHC.Base.map_entry
_c90cE:
	movl $Foreign.C.String.newCWStringLen1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.newCWStringLen1_entry, .-Foreign.C.String.newCWStringLen1_entry


==================== Asm code ====================
2018-03-16 16:04:08.047890019 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCWStringLen1_info
.type Foreign.C.String.newCWStringLen1_info, @object
Foreign.C.String.newCWStringLen1_info:
	.quad	Foreign.C.String.newCWStringLen1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	S8YDv_srt+200


==================== Asm code ====================
2018-03-16 16:04:08.048549649 UTC

.section .text
.align 8
_c90ch:
_c90ch:
	movq $block_c90cl_info,-8(%rbp)
	movq %rbx,%rsi
	movl $Foreign.C.Types.$fStorableCWchar_closure,%r14d
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp Foreign.Marshal.Array.newArray1_entry
	.size _c90ch, .-_c90ch


==================== Asm code ====================
2018-03-16 16:04:08.049113247 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90ch_info:
	.quad	_c90ch
	.quad	0
	.quad	4294967326
	.quad	S8YDv_srt+200


==================== Asm code ====================
2018-03-16 16:04:08.04983527 UTC

.section .text
.align 8
_c90cl:
_c90cl:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c90cJ
_c90cI:
	movq $sat_s8Yz0_info,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c90cJ:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c90cl, .-_c90cl


==================== Asm code ====================
2018-03-16 16:04:08.050466273 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90cl_info:
	.quad	_c90cl
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.052538476 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCWStringLen_closure
.type Foreign.C.String.newCWStringLen_closure, @object
Foreign.C.String.newCWStringLen_closure:
	.quad	Foreign.C.String.newCWStringLen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:08.053120053 UTC

.section .text
.align 8
.globl Foreign.C.String.newCWStringLen_entry
.type Foreign.C.String.newCWStringLen_entry, @object
Foreign.C.String.newCWStringLen_entry:
_c90da:
	jmp Foreign.C.String.newCWStringLen1_entry
	.size Foreign.C.String.newCWStringLen_entry, .-Foreign.C.String.newCWStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:08.054124036 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCWStringLen_info
.type Foreign.C.String.newCWStringLen_info, @object
Foreign.C.String.newCWStringLen_info:
	.quad	Foreign.C.String.newCWStringLen_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S8YDv_srt+208


==================== Asm code ====================
2018-03-16 16:04:08.057082833 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.castCharToCChar1_closure
.type Foreign.C.String.castCharToCChar1_closure, @object
Foreign.C.String.castCharToCChar1_closure:
	.quad	Foreign.C.String.castCharToCChar1_info


==================== Asm code ====================
2018-03-16 16:04:08.057854429 UTC

.section .text
.align 8
.globl Foreign.C.String.castCharToCChar1_entry
.type Foreign.C.String.castCharToCChar1_entry, @object
Foreign.C.String.castCharToCChar1_entry:
_c90do:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c90dy
_c90dz:
	movq $block_c90dl_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c90dl
_c90dm:
	movq (%rbx),%rax
	jmp *(%rax)
_c90dy:
	movl $Foreign.C.String.castCharToCChar1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.castCharToCChar1_entry, .-Foreign.C.String.castCharToCChar1_entry


==================== Asm code ====================
2018-03-16 16:04:08.058506141 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.castCharToCChar1_info
.type Foreign.C.String.castCharToCChar1_info, @object
Foreign.C.String.castCharToCChar1_info:
	.quad	Foreign.C.String.castCharToCChar1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:08.059240555 UTC

.section .text
.align 8
_c90dl:
_c90dl:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c90dC
_c90dB:
	movq 7(%rbx),%rax
	movsbq %al,%rax
	movq $GHC.Int.I8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c90dC:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c90dl, .-_c90dl


==================== Asm code ====================
2018-03-16 16:04:08.059839561 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90dl_info:
	.quad	_c90dl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.061836356 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.castCharToCSChar_closure
.type Foreign.C.String.castCharToCSChar_closure, @object
Foreign.C.String.castCharToCSChar_closure:
	.quad	Foreign.C.String.castCharToCSChar_info


==================== Asm code ====================
2018-03-16 16:04:08.06242201 UTC

.section .text
.align 8
.globl Foreign.C.String.castCharToCSChar_entry
.type Foreign.C.String.castCharToCSChar_entry, @object
Foreign.C.String.castCharToCSChar_entry:
_c90dT:
	jmp Foreign.C.String.castCharToCChar1_entry
	.size Foreign.C.String.castCharToCSChar_entry, .-Foreign.C.String.castCharToCSChar_entry


==================== Asm code ====================
2018-03-16 16:04:08.06294905 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.castCharToCSChar_info
.type Foreign.C.String.castCharToCSChar_info, @object
Foreign.C.String.castCharToCSChar_info:
	.quad	Foreign.C.String.castCharToCSChar_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:08.065867997 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.castCharToCUChar1_closure
.type Foreign.C.String.castCharToCUChar1_closure, @object
Foreign.C.String.castCharToCUChar1_closure:
	.quad	Foreign.C.String.castCharToCUChar1_info


==================== Asm code ====================
2018-03-16 16:04:08.067063292 UTC

.section .text
.align 8
.globl Foreign.C.String.castCharToCUChar1_entry
.type Foreign.C.String.castCharToCUChar1_entry, @object
Foreign.C.String.castCharToCUChar1_entry:
_c90e7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c90ek
_c90el:
	movq $block_c90e4_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c90e4
_c90e5:
	movq (%rbx),%rax
	jmp *(%rax)
_c90ek:
	movl $Foreign.C.String.castCharToCUChar1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.castCharToCUChar1_entry, .-Foreign.C.String.castCharToCUChar1_entry


==================== Asm code ====================
2018-03-16 16:04:08.067769433 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.castCharToCUChar1_info
.type Foreign.C.String.castCharToCUChar1_info, @object
Foreign.C.String.castCharToCUChar1_info:
	.quad	Foreign.C.String.castCharToCUChar1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:08.068488692 UTC

.section .text
.align 8
_c90e4:
_c90e4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c90eo
_c90en:
	movq 7(%rbx),%rax
	movzbl %al,%eax
	movq $GHC.Word.W8#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c90eo:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c90e4, .-_c90e4


==================== Asm code ====================
2018-03-16 16:04:08.069098917 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90e4_info:
	.quad	_c90e4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.071507683 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.castCharToCUChar_closure
.type Foreign.C.String.castCharToCUChar_closure, @object
Foreign.C.String.castCharToCUChar_closure:
	.quad	Foreign.C.String.castCharToCUChar_info


==================== Asm code ====================
2018-03-16 16:04:08.072098455 UTC

.section .text
.align 8
.globl Foreign.C.String.castCharToCUChar_entry
.type Foreign.C.String.castCharToCUChar_entry, @object
Foreign.C.String.castCharToCUChar_entry:
_c90eF:
	jmp Foreign.C.String.castCharToCUChar1_entry
	.size Foreign.C.String.castCharToCUChar_entry, .-Foreign.C.String.castCharToCUChar_entry


==================== Asm code ====================
2018-03-16 16:04:08.072649254 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.castCharToCUChar_info
.type Foreign.C.String.castCharToCUChar_info, @object
Foreign.C.String.castCharToCUChar_info:
	.quad	Foreign.C.String.castCharToCUChar_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:08.0747223 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.castCharToCChar_closure
.type Foreign.C.String.castCharToCChar_closure, @object
Foreign.C.String.castCharToCChar_closure:
	.quad	Foreign.C.String.castCharToCChar_info


==================== Asm code ====================
2018-03-16 16:04:08.075302458 UTC

.section .text
.align 8
.globl Foreign.C.String.castCharToCChar_entry
.type Foreign.C.String.castCharToCChar_entry, @object
Foreign.C.String.castCharToCChar_entry:
_c90eQ:
	jmp Foreign.C.String.castCharToCChar1_entry
	.size Foreign.C.String.castCharToCChar_entry, .-Foreign.C.String.castCharToCChar_entry


==================== Asm code ====================
2018-03-16 16:04:08.075839558 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.castCharToCChar_info
.type Foreign.C.String.castCharToCChar_info, @object
Foreign.C.String.castCharToCChar_info:
	.quad	Foreign.C.String.castCharToCChar_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:08.081226437 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCAString1_closure
.type Foreign.C.String.newCAString1_closure, @object
Foreign.C.String.newCAString1_closure:
	.quad	Foreign.C.String.newCAString1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:08.08199552 UTC

.section .text
.align 8
.globl Foreign.C.String.newCAString1_entry
.type Foreign.C.String.newCAString1_entry, @object
Foreign.C.String.newCAString1_entry:
_c90f3:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c90f4
_c90f5:
	movq $block_c90f1_info,-16(%rbp)
	xorl %esi,%esi
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.List.$wlenAcc_entry
_c90f4:
	movl $Foreign.C.String.newCAString1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.newCAString1_entry, .-Foreign.C.String.newCAString1_entry


==================== Asm code ====================
2018-03-16 16:04:08.082602143 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCAString1_info
.type Foreign.C.String.newCAString1_info, @object
Foreign.C.String.newCAString1_info:
	.quad	Foreign.C.String.newCAString1_entry
	.quad	0
	.quad	18014402804449294
	.quad	8589934597
	.quad	S8YDv_srt+40


==================== Asm code ====================
2018-03-16 16:04:08.083374216 UTC

.section .text
.align 8
_c90f1:
_c90f1:
	movq 8(%rbp),%rax
	subq $8,%rsp
	leaq 1(%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call malloc
	addq $8,%rsp
	testq %rax,%rax
	je _c90fT
_c90fS:
	movq $0,-8(%rbp)
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp _c90fv
_c90fT:
	movl $Foreign.Marshal.Alloc.malloc1_closure,%ebx
	addq $16,%rbp
	jmp stg_raiseIO#
	.size _c90f1, .-_c90f1


==================== Asm code ====================
2018-03-16 16:04:08.08399266 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90f1_info:
	.quad	_c90f1
	.quad	1
	.quad	4294967326
	.quad	S8YDv_srt+40


==================== Asm code ====================
2018-03-16 16:04:08.084675648 UTC

.section .text
.align 8
_c90fv:
_c90fv:
	movq $block_c90fy_info,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c90fy
_c90fA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90fv, .-_c90fv


==================== Asm code ====================
2018-03-16 16:04:08.085444433 UTC

.section .text
.align 8
_c90fy:
_c90fy:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c90fG
_c90fL:
	movq $block_c90fJ_info,(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c90fJ
_c90fM:
	movq (%rbx),%rax
	jmp *(%rax)
_c90fG:
	movq 8(%rbp),%rax
	movq %rax,16(%rbp)
	addq $16,%rbp
	jmp _c90fn
	.size _c90fy, .-_c90fy


==================== Asm code ====================
2018-03-16 16:04:08.086094192 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90fy_info:
	.quad	_c90fy
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.086835681 UTC

.section .text
.align 8
_c90fn:
_c90fn:
	addq $16,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c90fs
_c90fr:
	movq 8(%rbp),%rbx
	movb $0,(%rbx,%rax,1)
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c90fs:
	movq $16,904(%r13)
	movq $block_c90fm_info,(%rbp)
	movq %rax,%rbx
	jmp stg_gc_unbx_r1
	.size _c90fn, .-_c90fn


==================== Asm code ====================
2018-03-16 16:04:08.087556467 UTC

.section .text
.align 8
_c90fm:
_c90fm:
	movq %rbx,(%rbp)
	jmp _c90fn
	.size _c90fm, .-_c90fm


==================== Asm code ====================
2018-03-16 16:04:08.08812544 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90fm_info:
	.quad	_c90fm
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.088700814 UTC

.section .text
.align 8
_c90fJ:
_c90fJ:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movb %bl,(%rdx,%rax,1)
	movq %rcx,16(%rbp)
	incq %rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _c90fv
	.size _c90fJ, .-_c90fJ


==================== Asm code ====================
2018-03-16 16:04:08.089709745 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90fJ_info:
	.quad	_c90fJ
	.quad	323
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.091830908 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCAString_closure
.type Foreign.C.String.newCAString_closure, @object
Foreign.C.String.newCAString_closure:
	.quad	Foreign.C.String.newCAString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:08.092446359 UTC

.section .text
.align 8
.globl Foreign.C.String.newCAString_entry
.type Foreign.C.String.newCAString_entry, @object
Foreign.C.String.newCAString_entry:
_c90gK:
	jmp Foreign.C.String.newCAString1_entry
	.size Foreign.C.String.newCAString_entry, .-Foreign.C.String.newCAString_entry


==================== Asm code ====================
2018-03-16 16:04:08.093009108 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCAString_info
.type Foreign.C.String.newCAString_info, @object
Foreign.C.String.newCAString_info:
	.quad	Foreign.C.String.newCAString_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S8YDv_srt+216


==================== Asm code ====================
2018-03-16 16:04:08.09828101 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCAStringLen1_closure
.type Foreign.C.String.newCAStringLen1_closure, @object
Foreign.C.String.newCAStringLen1_closure:
	.quad	Foreign.C.String.newCAStringLen1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:08.098989952 UTC

.section .text
.align 8
.globl Foreign.C.String.newCAStringLen1_entry
.type Foreign.C.String.newCAStringLen1_entry, @object
Foreign.C.String.newCAStringLen1_entry:
_c90gX:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c90gY
_c90gZ:
	movq $block_c90gV_info,-16(%rbp)
	xorl %esi,%esi
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.List.$wlenAcc_entry
_c90gY:
	movl $Foreign.C.String.newCAStringLen1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.newCAStringLen1_entry, .-Foreign.C.String.newCAStringLen1_entry


==================== Asm code ====================
2018-03-16 16:04:08.099589798 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCAStringLen1_info
.type Foreign.C.String.newCAStringLen1_info, @object
Foreign.C.String.newCAStringLen1_info:
	.quad	Foreign.C.String.newCAStringLen1_entry
	.quad	0
	.quad	36028801313931278
	.quad	8589934597
	.quad	S8YDv_srt+40


==================== Asm code ====================
2018-03-16 16:04:08.100386039 UTC

.section .text
.align 8
_c90gV:
_c90gV:
	movq 8(%rbp),%rax
	subq $8,%rsp
	leaq 1(%rbx),%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call malloc
	addq $8,%rsp
	testq %rax,%rax
	je _c90hP
_c90hO:
	movq %r14,-16(%rbp)
	movq $0,-8(%rbp)
	movq %rax,(%rbp)
	movq %rbx,8(%rbp)
	addq $-16,%rbp
	jmp _c90hr
_c90hP:
	movl $Foreign.Marshal.Alloc.malloc1_closure,%ebx
	addq $16,%rbp
	jmp stg_raiseIO#
	.size _c90gV, .-_c90gV


==================== Asm code ====================
2018-03-16 16:04:08.101025853 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90gV_info:
	.quad	_c90gV
	.quad	1
	.quad	4294967326
	.quad	S8YDv_srt+40


==================== Asm code ====================
2018-03-16 16:04:08.102180076 UTC

.section .text
.align 8
_c90hr:
_c90hr:
	movq (%rbp),%rax
	movq $block_c90hu_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c90hu
_c90hw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90hr, .-_c90hr


==================== Asm code ====================
2018-03-16 16:04:08.10292102 UTC

.section .text
.align 8
_c90hu:
_c90hu:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u90hZ
_c90hH:
	movq $block_c90hF_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c90hF
_c90hI:
	movq (%rbx),%rax
	jmp *(%rax)
_u90hZ:
	addq $8,%rbp
	jmp _c90hh
	.size _c90hu, .-_c90hu


==================== Asm code ====================
2018-03-16 16:04:08.104008892 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90hu_info:
	.quad	_c90hu
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.104786911 UTC

.section .text
.align 8
_c90hh:
_c90hh:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c90ho
_c90hn:
	movq $GHC.Types.I#_con_info,-48(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq $GHC.Ptr.Ptr_con_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c90ho:
	movq $56,904(%r13)
	movq $block_c90hh_info,(%rbp)
	jmp stg_gc_noregs
	.size _c90hh, .-_c90hh


==================== Asm code ====================
2018-03-16 16:04:08.105539498 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90hh_info:
	.quad	_c90hh
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.106184144 UTC

.section .text
.align 8
_c90hF:
_c90hF:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movb %bl,(%rdx,%rax,1)
	movq %rcx,8(%rbp)
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c90hr
	.size _c90hF, .-_c90hF


==================== Asm code ====================
2018-03-16 16:04:08.106794726 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90hF_info:
	.quad	_c90hF
	.quad	900
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.108782631 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCAStringLen_closure
.type Foreign.C.String.newCAStringLen_closure, @object
Foreign.C.String.newCAStringLen_closure:
	.quad	Foreign.C.String.newCAStringLen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:08.109415751 UTC

.section .text
.align 8
.globl Foreign.C.String.newCAStringLen_entry
.type Foreign.C.String.newCAStringLen_entry, @object
Foreign.C.String.newCAStringLen_entry:
_c90iF:
	jmp Foreign.C.String.newCAStringLen1_entry
	.size Foreign.C.String.newCAStringLen_entry, .-Foreign.C.String.newCAStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:08.109981868 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCAStringLen_info
.type Foreign.C.String.newCAStringLen_info, @object
Foreign.C.String.newCAStringLen_info:
	.quad	Foreign.C.String.newCAStringLen_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S8YDv_srt+224


==================== Asm code ====================
2018-03-16 16:04:08.116051576 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCAString1_closure
.type Foreign.C.String.withCAString1_closure, @object
Foreign.C.String.withCAString1_closure:
	.quad	Foreign.C.String.withCAString1_info


==================== Asm code ====================
2018-03-16 16:04:08.116903251 UTC

.section .text
.align 8
.globl Foreign.C.String.withCAString1_entry
.type Foreign.C.String.withCAString1_entry, @object
Foreign.C.String.withCAString1_entry:
_c90iS:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c90iT
_c90iU:
	movq $block_c90iQ_info,-24(%rbp)
	movq %rsi,%rax
	xorl %esi,%esi
	movq %r14,%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.List.$wlenAcc_entry
_c90iT:
	movl $Foreign.C.String.withCAString1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.withCAString1_entry, .-Foreign.C.String.withCAString1_entry


==================== Asm code ====================
2018-03-16 16:04:08.117614451 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCAString1_info
.type Foreign.C.String.withCAString1_info, @object
Foreign.C.String.withCAString1_info:
	.quad	Foreign.C.String.withCAString1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:04:08.118265348 UTC

.section .text
.align 8
_c90iQ:
_c90iQ:
	movq $block_c90j1_info,(%rbp)
	movl $1,%r14d
	incq %rbx
	jmp stg_newAlignedPinnedByteArray#
	.size _c90iQ, .-_c90iQ


==================== Asm code ====================
2018-03-16 16:04:08.118838746 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90iQ_info:
	.quad	_c90iQ
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.11947211 UTC

.section .text
.align 8
_c90j1:
_c90j1:
	movq 8(%rbp),%rax
	movq %rax,-16(%rbp)
	movq $0,-8(%rbp)
	leaq 16(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,8(%rbp)
	addq $-16,%rbp
	jmp _c90jl
	.size _c90j1, .-_c90j1


==================== Asm code ====================
2018-03-16 16:04:08.120081525 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90j1_info:
	.quad	_c90j1
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.120699813 UTC

.section .text
.align 8
_c90jl:
_c90jl:
	movq (%rbp),%rax
	movq $block_c90jo_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c90jo
_c90jq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90jl, .-_c90jl


==================== Asm code ====================
2018-03-16 16:04:08.121552604 UTC

.section .text
.align 8
_c90jo:
_c90jo:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c90jw
_c90jB:
	movq $block_c90jz_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c90jz
_c90jC:
	movq (%rbx),%rax
	jmp *(%rax)
_c90jw:
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _c90ja
	.size _c90jo, .-_c90jo


==================== Asm code ====================
2018-03-16 16:04:08.122175484 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90jo_info:
	.quad	_c90jo
	.quad	196
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.122892903 UTC

.section .text
.align 8
_c90ja:
_c90ja:
	addq $16,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c90jg
_c90jf:
	movq 24(%rbp),%rbx
	movq 8(%rbp),%rcx
	movb $0,(%rcx,%rax,1)
	movq $GHC.Ptr.Ptr_con_info,-8(%r12)
	movq %rcx,(%r12)
	movq $block_c90jd_info,8(%rbp)
	leaq -7(%r12),%r14
	addq $8,%rbp
	jmp stg_ap_pv_fast
_c90jg:
	movq $16,904(%r13)
	movq $block_c90j9_info,(%rbp)
	movq %rax,%rbx
	jmp stg_gc_unbx_r1
	.size _c90ja, .-_c90ja


==================== Asm code ====================
2018-03-16 16:04:08.123628899 UTC

.section .text
.align 8
_c90j9:
_c90j9:
	movq %rbx,(%rbp)
	jmp _c90ja
	.size _c90j9, .-_c90j9


==================== Asm code ====================
2018-03-16 16:04:08.1241937 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90j9_info:
	.quad	_c90j9
	.quad	67
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.124769796 UTC

.section .text
.align 8
_c90jd:
_c90jd:
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c90jd, .-_c90jd


==================== Asm code ====================
2018-03-16 16:04:08.125359518 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90jd_info:
	.quad	_c90jd
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.126036759 UTC

.section .text
.align 8
_c90jz:
_c90jz:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movb %bl,(%rdx,%rax,1)
	movq %rcx,8(%rbp)
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c90jl
	.size _c90jz, .-_c90jz


==================== Asm code ====================
2018-03-16 16:04:08.126612378 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90jz_info:
	.quad	_c90jz
	.quad	389
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.128900351 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCAString_closure
.type Foreign.C.String.withCAString_closure, @object
Foreign.C.String.withCAString_closure:
	.quad	Foreign.C.String.withCAString_info


==================== Asm code ====================
2018-03-16 16:04:08.129581484 UTC

.section .text
.align 8
.globl Foreign.C.String.withCAString_entry
.type Foreign.C.String.withCAString_entry, @object
Foreign.C.String.withCAString_entry:
_c90kG:
	jmp Foreign.C.String.withCAString1_entry
	.size Foreign.C.String.withCAString_entry, .-Foreign.C.String.withCAString_entry


==================== Asm code ====================
2018-03-16 16:04:08.130158279 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCAString_info
.type Foreign.C.String.withCAString_info, @object
Foreign.C.String.withCAString_info:
	.quad	Foreign.C.String.withCAString_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:04:08.136240228 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCAStringLen1_closure
.type Foreign.C.String.withCAStringLen1_closure, @object
Foreign.C.String.withCAStringLen1_closure:
	.quad	Foreign.C.String.withCAStringLen1_info


==================== Asm code ====================
2018-03-16 16:04:08.1370305 UTC

.section .text
.align 8
.globl Foreign.C.String.withCAStringLen1_entry
.type Foreign.C.String.withCAStringLen1_entry, @object
Foreign.C.String.withCAStringLen1_entry:
_c90kT:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c90kU
_c90kV:
	movq $block_c90kR_info,-24(%rbp)
	movq %rsi,%rax
	xorl %esi,%esi
	movq %r14,%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.List.$wlenAcc_entry
_c90kU:
	movl $Foreign.C.String.withCAStringLen1_closure,%ebx
	jmp *-8(%r13)
	.size Foreign.C.String.withCAStringLen1_entry, .-Foreign.C.String.withCAStringLen1_entry


==================== Asm code ====================
2018-03-16 16:04:08.137704332 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCAStringLen1_info
.type Foreign.C.String.withCAStringLen1_info, @object
Foreign.C.String.withCAStringLen1_info:
	.quad	Foreign.C.String.withCAStringLen1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:04:08.138342549 UTC

.section .text
.align 8
_c90kR:
_c90kR:
	movq $block_c90kY_info,-8(%rbp)
	movl $1,%r14d
	movq %rbx,%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_newAlignedPinnedByteArray#
	.size _c90kR, .-_c90kR


==================== Asm code ====================
2018-03-16 16:04:08.138939325 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90kR_info:
	.quad	_c90kR
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.139554229 UTC

.section .text
.align 8
_c90kY:
_c90kY:
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	movq $0,-8(%rbp)
	leaq 16(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-16,%rbp
	jmp _c90ll
	.size _c90kY, .-_c90kY


==================== Asm code ====================
2018-03-16 16:04:08.140132237 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90kY_info:
	.quad	_c90kY
	.quad	67
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.141417504 UTC

.section .text
.align 8
_c90ll:
_c90ll:
	movq (%rbp),%rax
	movq $block_c90lo_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c90lo
_c90lq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90ll, .-_c90ll


==================== Asm code ====================
2018-03-16 16:04:08.142164819 UTC

.section .text
.align 8
_c90lo:
_c90lo:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u90lR
_c90lB:
	movq $block_c90lz_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c90lz
_c90lC:
	movq (%rbx),%rax
	jmp *(%rax)
_u90lR:
	addq $8,%rbp
	jmp _c90l8
	.size _c90lo, .-_c90lo


==================== Asm code ====================
2018-03-16 16:04:08.142781617 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90lo_info:
	.quad	_c90lo
	.quad	453
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.143520644 UTC

.section .text
.align 8
_c90l8:
_c90l8:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c90lg
_c90lf:
	movq $GHC.Types.I#_con_info,-48(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq $GHC.Ptr.Ptr_con_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	movq $block_c90ld_info,16(%rbp)
	leaq -15(%r12),%r14
	movq 32(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_pv_fast
_c90lg:
	movq $56,904(%r13)
	movq $block_c90l8_info,(%rbp)
	jmp stg_gc_noregs
	.size _c90l8, .-_c90l8


==================== Asm code ====================
2018-03-16 16:04:08.144199705 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90l8_info:
	.quad	_c90l8
	.quad	196
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.144814708 UTC

.section .text
.align 8
_c90ld:
_c90ld:
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c90ld, .-_c90ld


==================== Asm code ====================
2018-03-16 16:04:08.145400622 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90ld_info:
	.quad	_c90ld
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.146029614 UTC

.section .text
.align 8
_c90lz:
_c90lz:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movb %bl,(%rdx,%rax,1)
	movq %rcx,8(%rbp)
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c90ll
	.size _c90lz, .-_c90lz


==================== Asm code ====================
2018-03-16 16:04:08.146609066 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90lz_info:
	.quad	_c90lz
	.quad	902
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:08.148873539 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCAStringLen_closure
.type Foreign.C.String.withCAStringLen_closure, @object
Foreign.C.String.withCAStringLen_closure:
	.quad	Foreign.C.String.withCAStringLen_info


==================== Asm code ====================
2018-03-16 16:04:08.149969244 UTC

.section .text
.align 8
.globl Foreign.C.String.withCAStringLen_entry
.type Foreign.C.String.withCAStringLen_entry, @object
Foreign.C.String.withCAStringLen_entry:
_c90mF:
	jmp Foreign.C.String.withCAStringLen1_entry
	.size Foreign.C.String.withCAStringLen_entry, .-Foreign.C.String.withCAStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:08.150505118 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCAStringLen_info
.type Foreign.C.String.withCAStringLen_info, @object
Foreign.C.String.withCAStringLen_info:
	.quad	Foreign.C.String.withCAStringLen_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:04:08.152551092 UTC

.section .data.rel.ro
.align 8
.align 1
S8YDv_srt:
	.quad	GHC.IO.Encoding.getForeignEncoding_closure
	.quad	Foreign.C.String.withCStringLen1_closure
	.quad	Foreign.C.String.withCString1_closure
	.quad	GHC.Foreign.charIsRepresentable1_closure
	.quad	Foreign.C.String.charIsRepresentable1_closure
	.quad	Foreign.Marshal.Alloc.malloc1_closure
	.quad	Foreign.Marshal.Alloc.realloc2_closure
	.quad	Foreign.C.String.newCStringLen1_closure
	.quad	GHC.Foreign.newCString1_closure
	.quad	Foreign.C.String.newCString1_closure
	.quad	GHC.ForeignPtr.mallocForeignPtrBytes2_closure
	.quad	Foreign.C.String.peekCStringLen1_closure
	.quad	GHC.Foreign.peekCString1_closure
	.quad	Foreign.C.String.peekCString1_closure
	.quad	GHC.Char.$wlvl_closure
	.quad	Foreign.C.String.castCWcharToChar_closure
	.quad	Foreign.C.String.peekCWString2_closure
	.quad	Foreign.C.String.$wpeekCWStringLen_closure
	.quad	Foreign.C.String.peekCWStringLen1_closure
	.quad	Foreign.C.String.$wpeekCWString_closure
	.quad	Foreign.C.String.peekCWString1_closure
	.quad	Foreign.Marshal.Array.withArrayLen0_closure
	.quad	Foreign.C.String.withCWString_closure
	.quad	Foreign.Marshal.Array.newArray3_closure
	.quad	Foreign.C.String.newCWString1_closure
	.quad	Foreign.Marshal.Array.newArray1_closure
	.quad	Foreign.C.String.newCWStringLen1_closure
	.quad	Foreign.C.String.newCAString1_closure
	.quad	Foreign.C.String.newCAStringLen1_closure


==================== Asm code ====================
2018-03-16 16:04:10.203829145 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.C.String.$trModule4_bytes
.type Foreign.C.String.$trModule4_bytes, @object
Foreign.C.String.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:04:10.205400335 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.$trModule3_closure
.type Foreign.C.String.$trModule3_closure, @object
Foreign.C.String.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Foreign.C.String.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:04:10.207117108 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Foreign.C.String.$trModule2_bytes
.type Foreign.C.String.$trModule2_bytes, @object
Foreign.C.String.$trModule2_bytes:
	.asciz "Foreign.C.String"


==================== Asm code ====================
2018-03-16 16:04:10.208693597 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.$trModule1_closure
.type Foreign.C.String.$trModule1_closure, @object
Foreign.C.String.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Foreign.C.String.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:04:10.210231585 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.$trModule_closure
.type Foreign.C.String.$trModule_closure, @object
Foreign.C.String.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	Foreign.C.String.$trModule3_closure+1
	.quad	Foreign.C.String.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:04:10.221182133 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCStringLen1_closure
.type Foreign.C.String.withCStringLen1_closure, @object
Foreign.C.String.withCStringLen1_closure:
	.quad	Foreign.C.String.withCStringLen1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.221991579 UTC

.section .text
.align 8
$wgo_s90nf_entry:
_c90zF:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c90zG
_c90zH:
	leaq block_c90zA_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq %rbx,%rax
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rdx
	movq 22(%rbx),%rbx
	movq %rbx,%rsi
	movq %r14,%rbx
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-48,%rbp
	jmp *stg_newPinnedByteArray#@gotpcrel(%rip)
_c90zG:
	jmp *-8(%r13)
	.size $wgo_s90nf_entry, .-$wgo_s90nf_entry


==================== Asm code ====================
2018-03-16 16:04:10.222602189 UTC

.section .data.rel.ro
.align 8
.align 1
$wgo_s90nf_info:
	.quad	$wgo_s90nf_entry
	.quad	3
	.quad	8
	.quad	8589934596


==================== Asm code ====================
2018-03-16 16:04:10.223254797 UTC

.section .text
.align 8
_c90zA:
_c90zA:
	leaq block_c90zC_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c90zC
_c90zD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90zA, .-_c90zA


==================== Asm code ====================
2018-03-16 16:04:10.223957694 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90zA_info:
	.quad	_c90zA
	.quad	1029
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.224726364 UTC

.section .text
.align 8
_c90zC:
_c90zC:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c90zN
_c90zM:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq 40(%rbp),%rcx
	movq %rcx,(%r12)
	movq 8(%rbp),%rcx
	leaq block_c90zS_info(%rip),%rdx
	movq %rdx,8(%rbp)
	movq 16(%rbp),%rdx
	leaq 16(%rdx),%r9
	movq 24(%rbp),%r8
	movq GHC.Types.False_closure@gotpcrel(%rip),%rdx
	leaq 1(%rdx),%rdi
	movq %rbx,%rsi
	movq %rax,%r14
	leaq -7(%r12),%rax
	movq %rax,-8(%rbp)
	movq %rcx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Foreign.$wtryFillBufferAndCall_entry@gotpcrel(%rip)
_c90zN:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c90zC, .-_c90zC


==================== Asm code ====================
2018-03-16 16:04:10.225430055 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90zC_info:
	.quad	_c90zC
	.quad	1029
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.226048897 UTC

.section .text
.align 8
_c90zS:
_c90zS:
	leaq block_c90zU_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c90zU
_c90zW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90zS, .-_c90zS


==================== Asm code ====================
2018-03-16 16:04:10.226622494 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90zS_info:
	.quad	_c90zS
	.quad	644
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.227312946 UTC

.section .text
.align 8
_c90zU:
_c90zU:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c90A6
_c90Ac:
	movq 6(%rbx),%rax
	movq %rax,%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c90A6:
	leaq block_c90A4_info(%rip),%rax
	movq %rax,(%rbp)
	movq 32(%rbp),%r14
	shlq $1,%r14
	movq 24(%rbp),%rbx
	jmp $wgo_s90nf_entry
	.size _c90zU, .-_c90zU


==================== Asm code ====================
2018-03-16 16:04:10.228012611 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90zU_info:
	.quad	_c90zU
	.quad	644
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.22857575 UTC

.section .text
.align 8
_c90A4:
_c90A4:
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c90A4, .-_c90A4


==================== Asm code ====================
2018-03-16 16:04:10.229042878 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90A4_info:
	.quad	_c90A4
	.quad	900
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.22976938 UTC

.section .text
.align 8
sat_s90nX_entry:
_c90Ai:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c90Aj
_c90Ak:
	leaq block_c90za_info(%rip),%rax
	movq %rax,-32(%rbp)
	xorl %esi,%esi
	movq 6(%rbx),%rax
	movq %r14,%rcx
	movq %rax,%r14
	movq %rax,-24(%rbp)
	movq 14(%rbx),%rax
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-32,%rbp
	jmp *GHC.List.$wlenAcc_entry@gotpcrel(%rip)
_c90Aj:
	jmp *-8(%r13)
	.size sat_s90nX_entry, .-sat_s90nX_entry


==================== Asm code ====================
2018-03-16 16:04:10.230359703 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s90nX_info:
	.quad	sat_s90nX_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:10.230972544 UTC

.section .text
.align 8
_c90za:
_c90za:
	leaq block_c90zh_info(%rip),%rax
	movq %rax,-8(%rbp)
	movl $4,%r14d
	movq %rbx,%rax
	shlq $2,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_newAlignedPinnedByteArray#@gotpcrel(%rip)
	.size _c90za, .-_c90za


==================== Asm code ====================
2018-03-16 16:04:10.231513221 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90za_info:
	.quad	_c90za
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.232261495 UTC

.section .text
.align 8
_c90zh:
_c90zh:
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	movq $0,-8(%rbp)
	leaq 16(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-16,%rbp
	jmp _c90Az
	.size _c90zh, .-_c90zh


==================== Asm code ====================
2018-03-16 16:04:10.232776962 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90zh_info:
	.quad	_c90zh
	.quad	68
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.233753842 UTC

.section .text
.align 8
_c90Az:
_c90Az:
	movq (%rbp),%rax
	leaq block_c90AC_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c90AC
_c90AE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90Az, .-_c90Az


==================== Asm code ====================
2018-03-16 16:04:10.234521237 UTC

.section .text
.align 8
_c90AC:
_c90AC:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c90AK
_c90AP:
	leaq block_c90AN_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c90AN
_c90AQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c90AK:
	leaq block_c90zr_info(%rip),%rax
	movq %rax,8(%rbp)
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _c90AC, .-_c90AC


==================== Asm code ====================
2018-03-16 16:04:10.235121448 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90AC_info:
	.quad	_c90AC
	.quad	454
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.235887497 UTC

.section .text
.align 8
_c90zr:
_c90zr:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _c90Aq
_c90Ap:
	movq GHC.ForeignPtr.PlainForeignPtr_con_info@gotpcrel(%rip),%rax
	movq %rax,-96(%r12)
	movq %rbx,-88(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-80(%r12)
	leaq -95(%r12),%rax
	movq %rax,-72(%r12)
	movq GHC.IO.Buffer.ReadBuffer_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-48(%r12)
	movq $0,-40(%r12)
	movq %rax,-32(%r12)
	leaq $wgo_s90nf_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-8(%r12)
	leaq -79(%r12),%rbx
	movq %rbx,(%r12)
	leaq block_c90Au_info(%rip),%rbx
	movq %rbx,16(%rbp)
	leaq 1(%rax),%r14
	leaq -22(%r12),%rbx
	addq $16,%rbp
	jmp $wgo_s90nf_entry
_c90Aq:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c90zr, .-_c90zr


==================== Asm code ====================
2018-03-16 16:04:10.236806939 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90zr_info:
	.quad	_c90zr
	.quad	197
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.237405397 UTC

.section .text
.align 8
_c90Au:
_c90Au:
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c90Au, .-_c90Au


==================== Asm code ====================
2018-03-16 16:04:10.23796441 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Au_info:
	.quad	_c90Au
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.238575996 UTC

.section .text
.align 8
_c90AN:
_c90AN:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movl %ebx,(%rdx,%rax,4)
	movq %rcx,8(%rbp)
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c90Az
	.size _c90AN, .-_c90AN


==================== Asm code ====================
2018-03-16 16:04:10.239112712 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90AN_info:
	.quad	_c90AN
	.quad	903
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.239763743 UTC

.section .text
.align 8
.globl Foreign.C.String.withCStringLen1_entry
.type Foreign.C.String.withCStringLen1_entry, @object
Foreign.C.String.withCStringLen1_entry:
_c90B4:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c90B5
_c90B6:
	leaq block_c90yY_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq GHC.IO.Encoding.getForeignEncoding_closure@gotpcrel(%rip),%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_c90B5:
	leaq Foreign.C.String.withCStringLen1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.withCStringLen1_entry, .-Foreign.C.String.withCStringLen1_entry


==================== Asm code ====================
2018-03-16 16:04:10.240386663 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCStringLen1_info
.type Foreign.C.String.withCStringLen1_info, @object
Foreign.C.String.withCStringLen1_info:
	.quad	Foreign.C.String.withCStringLen1_entry
	.quad	0
	.quad	12884901902
	.quad	12884901903
	.quad	S90Bc_srt


==================== Asm code ====================
2018-03-16 16:04:10.241123256 UTC

.section .text
.align 8
_c90yY:
_c90yY:
	leaq block_c90z0_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c90z0
_c90z1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90yY, .-_c90yY


==================== Asm code ====================
2018-03-16 16:04:10.241704106 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90yY_info:
	.quad	_c90yY
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.242378567 UTC

.section .text
.align 8
_c90z0:
_c90z0:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c90Ba
_c90B9:
	movq 23(%rbx),%rax
	leaq sat_s90nX_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rdi
	movq GHC.IO.Encoding.Types.close_closure@gotpcrel(%rip),%rbx
	leaq 1(%rbx),%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp *GHC.IO.bracket1_entry@gotpcrel(%rip)
_c90Ba:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c90z0, .-_c90z0


==================== Asm code ====================
2018-03-16 16:04:10.243012054 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90z0_info:
	.quad	_c90z0
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.245073613 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCStringLen_closure
.type Foreign.C.String.withCStringLen_closure, @object
Foreign.C.String.withCStringLen_closure:
	.quad	Foreign.C.String.withCStringLen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.24599763 UTC

.section .text
.align 8
.globl Foreign.C.String.withCStringLen_entry
.type Foreign.C.String.withCStringLen_entry, @object
Foreign.C.String.withCStringLen_entry:
_c90CY:
	jmp Foreign.C.String.withCStringLen1_entry
	.size Foreign.C.String.withCStringLen_entry, .-Foreign.C.String.withCStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:10.246508757 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCStringLen_info
.type Foreign.C.String.withCStringLen_info, @object
Foreign.C.String.withCStringLen_info:
	.quad	Foreign.C.String.withCStringLen_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	S90Bc_srt+8


==================== Asm code ====================
2018-03-16 16:04:10.248981182 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCString1_closure
.type Foreign.C.String.withCString1_closure, @object
Foreign.C.String.withCString1_closure:
	.quad	Foreign.C.String.withCString1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.249855874 UTC

.section .text
.align 8
.globl Foreign.C.String.withCString1_entry
.type Foreign.C.String.withCString1_entry, @object
Foreign.C.String.withCString1_entry:
_c90Db:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c90Dc
_c90Dd:
	leaq block_c90D9_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq GHC.IO.Encoding.getForeignEncoding_closure@gotpcrel(%rip),%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_c90Dc:
	leaq Foreign.C.String.withCString1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.withCString1_entry, .-Foreign.C.String.withCString1_entry


==================== Asm code ====================
2018-03-16 16:04:10.250442237 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCString1_info
.type Foreign.C.String.withCString1_info, @object
Foreign.C.String.withCString1_info:
	.quad	Foreign.C.String.withCString1_entry
	.quad	0
	.quad	21474836494
	.quad	12884901903
	.quad	S90Bc_srt


==================== Asm code ====================
2018-03-16 16:04:10.251041536 UTC

.section .text
.align 8
_c90D9:
_c90D9:
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $24,%rbp
	jmp *GHC.Foreign.charIsRepresentable3_entry@gotpcrel(%rip)
	.size _c90D9, .-_c90D9


==================== Asm code ====================
2018-03-16 16:04:10.251568873 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90D9_info:
	.quad	_c90D9
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.253686227 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCString_closure
.type Foreign.C.String.withCString_closure, @object
Foreign.C.String.withCString_closure:
	.quad	Foreign.C.String.withCString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.254273456 UTC

.section .text
.align 8
.globl Foreign.C.String.withCString_entry
.type Foreign.C.String.withCString_entry, @object
Foreign.C.String.withCString_entry:
_c90Ds:
	jmp Foreign.C.String.withCString1_entry
	.size Foreign.C.String.withCString_entry, .-Foreign.C.String.withCString_entry


==================== Asm code ====================
2018-03-16 16:04:10.254776921 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCString_info
.type Foreign.C.String.withCString_info, @object
Foreign.C.String.withCString_info:
	.quad	Foreign.C.String.withCString_entry
	.quad	0
	.quad	4294967310
	.quad	12884901903
	.quad	S90Bc_srt+16


==================== Asm code ====================
2018-03-16 16:04:10.257350155 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.charIsRepresentable1_closure
.type Foreign.C.String.charIsRepresentable1_closure, @object
Foreign.C.String.charIsRepresentable1_closure:
	.quad	Foreign.C.String.charIsRepresentable1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.258018928 UTC

.section .text
.align 8
.globl Foreign.C.String.charIsRepresentable1_entry
.type Foreign.C.String.charIsRepresentable1_entry, @object
Foreign.C.String.charIsRepresentable1_entry:
_c90DF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c90DG
_c90DH:
	leaq block_c90DD_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq GHC.IO.Encoding.getForeignEncoding_closure@gotpcrel(%rip),%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_c90DG:
	leaq Foreign.C.String.charIsRepresentable1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.charIsRepresentable1_entry, .-Foreign.C.String.charIsRepresentable1_entry


==================== Asm code ====================
2018-03-16 16:04:10.258618047 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.charIsRepresentable1_info
.type Foreign.C.String.charIsRepresentable1_info, @object
Foreign.C.String.charIsRepresentable1_info:
	.quad	Foreign.C.String.charIsRepresentable1_entry
	.quad	0
	.quad	107374182414
	.quad	8589934597
	.quad	S90Bc_srt


==================== Asm code ====================
2018-03-16 16:04:10.259218036 UTC

.section .text
.align 8
_c90DD:
_c90DD:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Foreign.charIsRepresentable1_entry@gotpcrel(%rip)
	.size _c90DD, .-_c90DD


==================== Asm code ====================
2018-03-16 16:04:10.259731839 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90DD_info:
	.quad	_c90DD
	.quad	1
	.quad	4294967326
	.quad	S90Bc_srt+24


==================== Asm code ====================
2018-03-16 16:04:10.262143121 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.charIsRepresentable_closure
.type Foreign.C.String.charIsRepresentable_closure, @object
Foreign.C.String.charIsRepresentable_closure:
	.quad	Foreign.C.String.charIsRepresentable_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.262728217 UTC

.section .text
.align 8
.globl Foreign.C.String.charIsRepresentable_entry
.type Foreign.C.String.charIsRepresentable_entry, @object
Foreign.C.String.charIsRepresentable_entry:
_c90DW:
	jmp Foreign.C.String.charIsRepresentable1_entry
	.size Foreign.C.String.charIsRepresentable_entry, .-Foreign.C.String.charIsRepresentable_entry


==================== Asm code ====================
2018-03-16 16:04:10.26322927 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.charIsRepresentable_info
.type Foreign.C.String.charIsRepresentable_info, @object
Foreign.C.String.charIsRepresentable_info:
	.quad	Foreign.C.String.charIsRepresentable_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S90Bc_srt+32


==================== Asm code ====================
2018-03-16 16:04:10.264760237 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCStringLen2_closure
.type Foreign.C.String.newCStringLen2_closure, @object
Foreign.C.String.newCStringLen2_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.282534038 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCStringLen1_closure
.type Foreign.C.String.newCStringLen1_closure, @object
Foreign.C.String.newCStringLen1_closure:
	.quad	Foreign.C.String.newCStringLen1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.283452209 UTC

.section .text
.align 8
sat_s90q2_entry:
_c90FH:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c90FM
_c90FN:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c90FE_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rcx,-32(%rbp)
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c90FE
_c90FF:
	movq (%rbx),%rax
	jmp *(%rax)
_c90FM:
	jmp *-16(%r13)
	.size sat_s90q2_entry, .-sat_s90q2_entry


==================== Asm code ====================
2018-03-16 16:04:10.284081822 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s90q2_info:
	.quad	sat_s90q2_entry
	.quad	4294967298
	.quad	15


==================== Asm code ====================
2018-03-16 16:04:10.284788549 UTC

.section .text
.align 8
_c90FE:
_c90FE:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c90FQ
_c90FP:
	movq 7(%rbx),%rax
	movq GHC.ForeignPtr.PlainForeignPtr_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-56(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	leaq -63(%r12),%rbx
	movq %rbx,-40(%r12)
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rbx
	addq $2,%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq $0,(%r12)
	leaq -47(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c90FQ:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c90FE, .-_c90FE


==================== Asm code ====================
2018-03-16 16:04:10.285593177 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90FE_info:
	.quad	_c90FE
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.286267999 UTC

.section .text
.align 8
sat_s90qg_entry:
_c90FS:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _c90FT
_c90FU:
	leaq block_c90Ek_info(%rip),%rax
	movq %rax,-24(%rbp)
	xorl %esi,%esi
	movq 6(%rbx),%rax
	movq %r14,%rbx
	movq %rax,%r14
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.List.$wlenAcc_entry@gotpcrel(%rip)
_c90FT:
	jmp *-8(%r13)
	.size sat_s90qg_entry, .-sat_s90qg_entry


==================== Asm code ====================
2018-03-16 16:04:10.286857575 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s90qg_info:
	.quad	sat_s90qg_entry
	.quad	1
	.quad	12884901897
	.quad	8589934597
	.quad	S90Bc_srt+40


==================== Asm code ====================
2018-03-16 16:04:10.287574255 UTC

.section .text
.align 8
_c90Ek:
_c90Ek:
	leaq block_c90Er_info(%rip),%rax
	movq %rax,-8(%rbp)
	movl $4,%r14d
	movq %rbx,%rax
	shlq $2,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_newAlignedPinnedByteArray#@gotpcrel(%rip)
	.size _c90Ek, .-_c90Ek


==================== Asm code ====================
2018-03-16 16:04:10.288125178 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Ek_info:
	.quad	_c90Ek
	.quad	2
	.quad	12884901918
	.quad	S90Bc_srt+40


==================== Asm code ====================
2018-03-16 16:04:10.288712079 UTC

.section .text
.align 8
_c90Er:
_c90Er:
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	movq $0,-8(%rbp)
	leaq 16(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-16,%rbp
	jmp _c90HI
	.size _c90Er, .-_c90Er


==================== Asm code ====================
2018-03-16 16:04:10.289292249 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Er_info:
	.quad	_c90Er
	.quad	67
	.quad	12884901918
	.quad	S90Bc_srt+40


==================== Asm code ====================
2018-03-16 16:04:10.289948689 UTC

.section .text
.align 8
_c90HI:
_c90HI:
	movq (%rbp),%rax
	leaq block_c90HL_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c90HL
_c90HN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90HI, .-_c90HI


==================== Asm code ====================
2018-03-16 16:04:10.290718695 UTC

.section .text
.align 8
_c90HL:
_c90HL:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c90HT
_c90HY:
	leaq block_c90HW_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c90HW
_c90HZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c90HT:
	leaq block_c90EB_info(%rip),%rax
	movq %rax,8(%rbp)
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _c90HL, .-_c90HL


==================== Asm code ====================
2018-03-16 16:04:10.291520663 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90HL_info:
	.quad	_c90HL
	.quad	453
	.quad	12884901918
	.quad	S90Bc_srt+40


==================== Asm code ====================
2018-03-16 16:04:10.292396201 UTC

.section .text
.align 8
_c90EB:
_c90EB:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c90G0
_c90FZ:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	leaq 1(%rax),%rdx
	subq $8,%rsp
	movq %rdx,%rdi
	movq %rax,%rsi
	xorl %eax,%eax
	movq %rsi,%r14
	movq %rcx,72(%rsp)
	movq %rdx,80(%rsp)
	call malloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c90HF
_c90HE:
	movq GHC.ForeignPtr.PlainForeignPtr_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-80(%r12)
	movq %rbx,-72(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	leaq -79(%r12),%rbx
	movq %rbx,-56(%r12)
	movq GHC.IO.Buffer.ReadBuffer_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,-48(%r12)
	movq 64(%rsp),%rbx
	movq %rbx,-40(%r12)
	movq %r14,-32(%r12)
	movq $0,-24(%r12)
	movq %r14,-16(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq 72(%rsp),%rbx
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	leaq -63(%r12),%rax
	movq %rax,16(%rbp)
	jmp _c90EV
_c90HF:
	addq $-88,%r12
	movq Foreign.Marshal.Alloc.malloc1_closure@gotpcrel(%rip),%rbx
	addq $40,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_c90G0:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c90EB, .-_c90EB


==================== Asm code ====================
2018-03-16 16:04:10.293176049 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90EB_info:
	.quad	_c90EB
	.quad	196
	.quad	12884901918
	.quad	S90Bc_srt+40


==================== Asm code ====================
2018-03-16 16:04:10.293807474 UTC

.section .text
.align 8
_c90EV:
_c90EV:
	leaq block_c90EY_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 32(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c90EY
_c90EZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90EV, .-_c90EV


==================== Asm code ====================
2018-03-16 16:04:10.294484644 UTC

.section .text
.align 8
_c90EY:
_c90EY:
	leaq block_c90F3_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rcx
	movq %rbx,%rdx
	leaq 1(%rcx),%rbx
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _c90EY, .-_c90EY


==================== Asm code ====================
2018-03-16 16:04:10.295069374 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90EY_info:
	.quad	_c90EY
	.quad	133
	.quad	4294967326
	.quad	S90Bc_srt+48


==================== Asm code ====================
2018-03-16 16:04:10.295917007 UTC

.section .text
.align 8
_c90F3:
_c90F3:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c90G9
_c90G8:
	leaq sat_s90q2_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq -32(%r12),%rax
	movq %rax,-8(%rbp)
	movq 40(%rbp),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp _c90GU
_c90G9:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c90F3, .-_c90F3


==================== Asm code ====================
2018-03-16 16:04:10.296537959 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90F3_info:
	.quad	_c90F3
	.quad	519
	.quad	4294967326
	.quad	S90Bc_srt+48


==================== Asm code ====================
2018-03-16 16:04:10.29719557 UTC

.section .text
.align 8
_c90GU:
_c90GU:
	movq 8(%rbp),%rax
	leaq block_c90GW_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq (%rbp),%rsi
	movq %rax,%r14
	movq 24(%rbp),%rbx
	addq $8,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
	.size _c90GU, .-_c90GU


==================== Asm code ====================
2018-03-16 16:04:10.297865067 UTC

.section .text
.align 8
_c90GW:
_c90GW:
	leaq block_c90GY_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c90GY
_c90GZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90GW, .-_c90GW


==================== Asm code ====================
2018-03-16 16:04:10.298434474 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90GW_info:
	.quad	_c90GW
	.quad	519
	.quad	4294967326
	.quad	S90Bc_srt+48


==================== Asm code ====================
2018-03-16 16:04:10.299071962 UTC

.section .text
.align 8
_c90GY:
_c90GY:
	leaq block_c90H3_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c90H3
_c90H7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90GY, .-_c90GY


==================== Asm code ====================
2018-03-16 16:04:10.299801477 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90GY_info:
	.quad	_c90GY
	.quad	519
	.quad	4294967326
	.quad	S90Bc_srt+48


==================== Asm code ====================
2018-03-16 16:04:10.300527132 UTC

.section .text
.align 8
_c90H3:
_c90H3:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _c90HC
_c90Hh:
	leaq block_c90Hf_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c90Hf
_c90Hi:
	movq (%rbx),%rax
	jmp *(%rax)
_c90HC:
	leaq block_c90GI_info(%rip),%rax
	movq %rax,32(%rbp)
	movq 8(%rbp),%rbx
	addq $32,%rbp
	testb $7,%bl
	jne _c90GI
_c90GK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90H3, .-_c90H3


==================== Asm code ====================
2018-03-16 16:04:10.301141633 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90H3_info:
	.quad	_c90H3
	.quad	2057
	.quad	4294967326
	.quad	S90Bc_srt+48


==================== Asm code ====================
2018-03-16 16:04:10.30203025 UTC

.section .text
.align 8
_c90GI:
_c90GI:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c90GQ
_c90GP:
	movq 23(%rbx),%rax
	movq 39(%rbx),%rcx
	movq 47(%rbx),%rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-64(%r12)
	subq %rcx,%rbx
	movq %rbx,-56(%r12)
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-40(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq -47(%r12),%rax
	movq %rax,-24(%r12)
	leaq -63(%r12),%rax
	movq %rax,-16(%r12)
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rax
	movq %rax,(%rbp)
	jmp _s90oY
_c90GQ:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c90GI, .-_c90GI


==================== Asm code ====================
2018-03-16 16:04:10.30269304 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90GI_info:
	.quad	_c90GI
	.quad	133
	.quad	4294967326
	.quad	S90Bc_srt+48


==================== Asm code ====================
2018-03-16 16:04:10.303532521 UTC

.section .text
.align 8
_c90Hf:
_c90Hf:
	andl $7,%ebx
	cmpq $2,%rbx
	je _c90HB
_c90Hr:
	movq 16(%rbp),%rax
	leaq block_c90Hm_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq 8(%rbp),%rsi
	movq %rax,%r14
	movq 24(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
_c90HB:
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,32(%rbp)
	addq $32,%rbp
	jmp _s90oY
	.size _c90Hf, .-_c90Hf


==================== Asm code ====================
2018-03-16 16:04:10.304174088 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Hf_info:
	.quad	_c90Hf
	.quad	2057
	.quad	4294967326
	.quad	S90Bc_srt+48


==================== Asm code ====================
2018-03-16 16:04:10.30478534 UTC

.section .text
.align 8
_s90oY:
_s90oY:
	movq (%rbp),%rax
	leaq block_c90Fc_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c90Fc
_c90Fd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s90oY, .-_s90oY


==================== Asm code ====================
2018-03-16 16:04:10.305543586 UTC

.section .text
.align 8
_c90Fc:
_c90Fc:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c90Gd
_c90Gw:
	movq 6(%rbx),%rax
	movq %rax,%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c90Gd:
	movq 8(%rbp),%rax
	leaq block_c90Fh_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c90Fh
_c90Fi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90Fc, .-_c90Fc


==================== Asm code ====================
2018-03-16 16:04:10.306179591 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Fc_info:
	.quad	_c90Fc
	.quad	133
	.quad	4294967326
	.quad	S90Bc_srt+48


==================== Asm code ====================
2018-03-16 16:04:10.306884614 UTC

.section .text
.align 8
_c90Fh:
_c90Fh:
	movq 7(%rbx),%rax
	shlq $1,%rax
	testq %rax,%rax
	jne _u90Iq
_c90Gp:
	subq $8,%rsp
	movq 8(%rbp),%rdi
	xorl %eax,%eax
	call free@plt
	addq $8,%rsp
	movq $0,8(%rbp)
	leaq Foreign.C.String.newCStringLen2_closure+1(%rip),%rax
	movq %rax,(%rbp)
	jmp _c90EV
_u90Iq:
	movq %rax,(%rbp)
	jmp _c90Fq
	.size _c90Fh, .-_c90Fh


==================== Asm code ====================
2018-03-16 16:04:10.307679619 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Fh_info:
	.quad	_c90Fh
	.quad	68
	.quad	4294967326
	.quad	S90Bc_srt+48


==================== Asm code ====================
2018-03-16 16:04:10.308449386 UTC

.section .text
.align 8
_c90Fq:
_c90Fq:
	addq $16,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c90Gj
_c90Gi:
	subq $8,%rsp
	movq %rax,%rsi
	movq 8(%rbp),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call realloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c90Gm
_c90Gl:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,8(%rbp)
	leaq -7(%r12),%rax
	movq %rax,(%rbp)
	jmp _c90EV
_c90Gm:
	addq $-16,%r12
	movq Foreign.Marshal.Alloc.realloc2_closure@gotpcrel(%rip),%rbx
	addq $40,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
_c90Gj:
	movq $16,904(%r13)
	leaq block_c90Fp_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c90Fq, .-_c90Fq


==================== Asm code ====================
2018-03-16 16:04:10.309204924 UTC

.section .text
.align 8
_c90Fp:
_c90Fp:
	movq %rbx,(%rbp)
	jmp _c90Fq
	.size _c90Fp, .-_c90Fp


==================== Asm code ====================
2018-03-16 16:04:10.309754447 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Fp_info:
	.quad	_c90Fp
	.quad	68
	.quad	4294967326
	.quad	S90Bc_srt+48


==================== Asm code ====================
2018-03-16 16:04:10.310402653 UTC

.section .text
.align 8
_c90Hm:
_c90Hm:
	leaq block_c90Ho_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c90Ho
_c90Ht:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90Hm, .-_c90Hm


==================== Asm code ====================
2018-03-16 16:04:10.31094326 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Hm_info:
	.quad	_c90Hm
	.quad	519
	.quad	4294967326
	.quad	S90Bc_srt+48


==================== Asm code ====================
2018-03-16 16:04:10.311677869 UTC

.section .text
.align 8
_c90Ho:
_c90Ho:
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp _c90GU
	.size _c90Ho, .-_c90Ho


==================== Asm code ====================
2018-03-16 16:04:10.312241223 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Ho_info:
	.quad	_c90Ho
	.quad	519
	.quad	4294967326
	.quad	S90Bc_srt+48


==================== Asm code ====================
2018-03-16 16:04:10.312873127 UTC

.section .text
.align 8
_c90HW:
_c90HW:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movl %ebx,(%rdx,%rax,4)
	movq %rcx,8(%rbp)
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c90HI
	.size _c90HW, .-_c90HW


==================== Asm code ====================
2018-03-16 16:04:10.313864286 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90HW_info:
	.quad	_c90HW
	.quad	902
	.quad	12884901918
	.quad	S90Bc_srt+40


==================== Asm code ====================
2018-03-16 16:04:10.314513406 UTC

.section .text
.align 8
.globl Foreign.C.String.newCStringLen1_entry
.type Foreign.C.String.newCStringLen1_entry, @object
Foreign.C.String.newCStringLen1_entry:
_c90IP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c90IQ
_c90IR:
	leaq block_c90E8_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq GHC.IO.Encoding.getForeignEncoding_closure@gotpcrel(%rip),%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_c90IQ:
	leaq Foreign.C.String.newCStringLen1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.newCStringLen1_entry, .-Foreign.C.String.newCStringLen1_entry


==================== Asm code ====================
2018-03-16 16:04:10.315123489 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCStringLen1_info
.type Foreign.C.String.newCStringLen1_info, @object
Foreign.C.String.newCStringLen1_info:
	.quad	Foreign.C.String.newCStringLen1_entry
	.quad	0
	.quad	966367641614
	.quad	8589934597
	.quad	S90Bc_srt


==================== Asm code ====================
2018-03-16 16:04:10.315931586 UTC

.section .text
.align 8
_c90E8:
_c90E8:
	leaq block_c90Ea_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c90Ea
_c90Eb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90E8, .-_c90E8


==================== Asm code ====================
2018-03-16 16:04:10.316473526 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90E8_info:
	.quad	_c90E8
	.quad	1
	.quad	12884901918
	.quad	S90Bc_srt+40


==================== Asm code ====================
2018-03-16 16:04:10.317165723 UTC

.section .text
.align 8
_c90Ea:
_c90Ea:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c90IV
_c90IU:
	movq 23(%rbx),%rax
	leaq sat_s90qg_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	leaq -6(%r12),%rdi
	movq GHC.IO.Encoding.Types.close_closure@gotpcrel(%rip),%rbx
	leaq 1(%rbx),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp *GHC.IO.bracket1_entry@gotpcrel(%rip)
_c90IV:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c90Ea, .-_c90Ea


==================== Asm code ====================
2018-03-16 16:04:10.317802603 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Ea_info:
	.quad	_c90Ea
	.quad	1
	.quad	12884901918
	.quad	S90Bc_srt+40


==================== Asm code ====================
2018-03-16 16:04:10.319833265 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCStringLen_closure
.type Foreign.C.String.newCStringLen_closure, @object
Foreign.C.String.newCStringLen_closure:
	.quad	Foreign.C.String.newCStringLen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.320394939 UTC

.section .text
.align 8
.globl Foreign.C.String.newCStringLen_entry
.type Foreign.C.String.newCStringLen_entry, @object
Foreign.C.String.newCStringLen_entry:
_c90LN:
	jmp Foreign.C.String.newCStringLen1_entry
	.size Foreign.C.String.newCStringLen_entry, .-Foreign.C.String.newCStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:10.320929418 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCStringLen_info
.type Foreign.C.String.newCStringLen_info, @object
Foreign.C.String.newCStringLen_info:
	.quad	Foreign.C.String.newCStringLen_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S90Bc_srt+56


==================== Asm code ====================
2018-03-16 16:04:10.323467606 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCString1_closure
.type Foreign.C.String.newCString1_closure, @object
Foreign.C.String.newCString1_closure:
	.quad	Foreign.C.String.newCString1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.324127214 UTC

.section .text
.align 8
.globl Foreign.C.String.newCString1_entry
.type Foreign.C.String.newCString1_entry, @object
Foreign.C.String.newCString1_entry:
_c90M0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c90M1
_c90M2:
	leaq block_c90LY_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq GHC.IO.Encoding.getForeignEncoding_closure@gotpcrel(%rip),%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_c90M1:
	leaq Foreign.C.String.newCString1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.newCString1_entry, .-Foreign.C.String.newCString1_entry


==================== Asm code ====================
2018-03-16 16:04:10.324745996 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCString1_info
.type Foreign.C.String.newCString1_info, @object
Foreign.C.String.newCString1_info:
	.quad	Foreign.C.String.newCString1_entry
	.quad	0
	.quad	3302829850638
	.quad	8589934597
	.quad	S90Bc_srt


==================== Asm code ====================
2018-03-16 16:04:10.325631746 UTC

.section .text
.align 8
_c90LY:
_c90LY:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Foreign.newCString1_entry@gotpcrel(%rip)
	.size _c90LY, .-_c90LY


==================== Asm code ====================
2018-03-16 16:04:10.326157039 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90LY_info:
	.quad	_c90LY
	.quad	1
	.quad	4294967326
	.quad	S90Bc_srt+64


==================== Asm code ====================
2018-03-16 16:04:10.328214883 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCString_closure
.type Foreign.C.String.newCString_closure, @object
Foreign.C.String.newCString_closure:
	.quad	Foreign.C.String.newCString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.328768776 UTC

.section .text
.align 8
.globl Foreign.C.String.newCString_entry
.type Foreign.C.String.newCString_entry, @object
Foreign.C.String.newCString_entry:
_c90Mh:
	jmp Foreign.C.String.newCString1_entry
	.size Foreign.C.String.newCString_entry, .-Foreign.C.String.newCString_entry


==================== Asm code ====================
2018-03-16 16:04:10.329263148 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCString_info
.type Foreign.C.String.newCString_info, @object
Foreign.C.String.newCString_info:
	.quad	Foreign.C.String.newCString_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S90Bc_srt+72


==================== Asm code ====================
2018-03-16 16:04:10.349337435 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCStringLen1_closure
.type Foreign.C.String.peekCStringLen1_closure, @object
Foreign.C.String.peekCStringLen1_closure:
	.quad	Foreign.C.String.peekCStringLen1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.35009833 UTC

.section .text
.align 8
sat_s90rD_entry:
_c90OF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c90OG
_c90OH:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c90OJ
_c90OI:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-32(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	movq %rcx,%rsi
	leaq -14(%r12),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c90OJ:
	movq $40,904(%r13)
_c90OG:
	jmp *-16(%r13)
	.size sat_s90rD_entry, .-sat_s90rD_entry


==================== Asm code ====================
2018-03-16 16:04:10.350784062 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s90rD_info:
	.quad	sat_s90rD_entry
	.quad	4294967298
	.quad	15


==================== Asm code ====================
2018-03-16 16:04:10.351440336 UTC

.section .text
.align 8
sat_s90rU_entry:
_c90OS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c90OT
_c90OU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c90OT:
	jmp *-16(%r13)
	.size sat_s90rU_entry, .-sat_s90rU_entry


==================== Asm code ====================
2018-03-16 16:04:10.351986225 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s90rU_info:
	.quad	sat_s90rU_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:04:10.352822113 UTC

.section .text
.align 8
$wgo_s90qU_entry:
_c90OV:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c90OW
_c90OX:
	leaq block_c90Nk_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%rax
	movq 14(%rbx),%rcx
	movq 6(%rbx),%rbx
	movq %rcx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c90Nk
_c90Nl:
	movq (%rbx),%rax
	jmp *(%rax)
_c90OW:
	jmp *-8(%r13)
	.size $wgo_s90qU_entry, .-$wgo_s90qU_entry


==================== Asm code ====================
2018-03-16 16:04:10.353591603 UTC

.section .data.rel.ro
.align 8
.align 1
$wgo_s90qU_info:
	.quad	$wgo_s90qU_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:10.354214907 UTC

.section .text
.align 8
_c90Nk:
_c90Nk:
	movq 8(%rbp),%rax
	leaq block_c90Np_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 24(%rbp),%r14
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
	.size _c90Nk, .-_c90Nk


==================== Asm code ====================
2018-03-16 16:04:10.354761003 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Nk_info:
	.quad	_c90Nk
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.355415726 UTC

.section .text
.align 8
_c90Np:
_c90Np:
	leaq block_c90Nr_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c90Nr
_c90Ns:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90Np, .-_c90Np


==================== Asm code ====================
2018-03-16 16:04:10.356111547 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Np_info:
	.quad	_c90Np
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.356814424 UTC

.section .text
.align 8
_c90Nr:
_c90Nr:
	leaq block_c90Nw_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c90Nw
_c90Nx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90Nr, .-_c90Nr


==================== Asm code ====================
2018-03-16 16:04:10.357350438 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Nr_info:
	.quad	_c90Nr
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.358066293 UTC

.section .text
.align 8
_c90Nw:
_c90Nw:
	movq 39(%rbx),%rax
	cmpq 47(%rbx),%rax
	je _c90PS
_c90Pl:
	leaq block_c90P2_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c90P2
_c90Pm:
	movq (%rbx),%rax
	jmp *(%rax)
_c90PS:
	leaq block_c90O4_info(%rip),%rax
	movq %rax,32(%rbp)
	movq 8(%rbp),%rbx
	addq $32,%rbp
	testb $7,%bl
	jne _c90O4
_c90O5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90Nw, .-_c90Nw


==================== Asm code ====================
2018-03-16 16:04:10.358715477 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Nw_info:
	.quad	_c90Nw
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.359443089 UTC

.section .text
.align 8
_c90O4:
_c90O4:
	movq 7(%rbx),%rax
	leaq 39(%rbx),%rcx
	movq 47(%rbx),%rdx
	subq (%rcx),%rdx
	testq %rdx,%rdx
	jg _c90Qa
_c90Qb:
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c90Qa:
	movq %rax,-24(%rbp)
	leaq -1(%rdx),%rax
	movq %rax,-16(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%rbp)
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	addq $-32,%rbp
	jmp _c90Om
	.size _c90O4, .-_c90O4


==================== Asm code ====================
2018-03-16 16:04:10.360261854 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90O4_info:
	.quad	_c90O4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.361019485 UTC

.section .text
.align 8
_c90Om:
_c90Om:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c90Q5
_c90Q4:
	movq 24(%rbp),%rax
	movq 16(%rbp),%rbx
	testq %rbx,%rbx
	jne _c90Q7
_c90Q8:
	addq $-40,%r12
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c90PV
_c90Q7:
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq 32(%rbp),%rcx
	movl (%rcx,%rbx,4),%ecx
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -1(%rbx),%rax
	movq %rax,16(%rbp)
	leaq -14(%r12),%rax
	movq %rax,24(%rbp)
	jmp _c90Om
_c90Q5:
	movq $40,904(%r13)
	leaq block_c90Om_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c90Om, .-_c90Om


==================== Asm code ====================
2018-03-16 16:04:10.361750944 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Om_info:
	.quad	_c90Om
	.quad	644
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.36244175 UTC

.section .text
.align 8
_c90PV:
_c90PV:
	addq $40,%r12
	movq 16(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c90Q2
_c90Q1:
	movq 24(%rbp),%rbx
	movl (%rbx),%ebx
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c90Q2:
	movq $40,904(%r13)
	leaq block_c90PU_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c90PV, .-_c90PV


==================== Asm code ====================
2018-03-16 16:04:10.363138625 UTC

.section .text
.align 8
_c90PU:
_c90PU:
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp _c90PV
	.size _c90PU, .-_c90PU


==================== Asm code ====================
2018-03-16 16:04:10.363617155 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90PU_info:
	.quad	_c90PU
	.quad	900
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.364421014 UTC

.section .text
.align 8
_c90P2:
_c90P2:
	movq 8(%rbp),%rax
	andl $7,%ebx
	cmpq $2,%rbx
	je _c90PM
_c90PA:
	movq 16(%rbp),%rbx
	leaq block_c90Pq_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	movq 32(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_ppv_fast@gotpcrel(%rip)
_c90PM:
	leaq block_c90PK_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c90PK
_c90PN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90P2, .-_c90P2


==================== Asm code ====================
2018-03-16 16:04:10.365048291 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90P2_info:
	.quad	_c90P2
	.quad	4
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.365688908 UTC

.section .text
.align 8
_c90PK:
_c90PK:
	movq 8(%rbp),%rax
	movq %rax,24(%rbp)
	movq 23(%rbx),%rax
	movq %rax,8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 47(%rbx),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp _s90ri
	.size _c90PK, .-_c90PK


==================== Asm code ====================
2018-03-16 16:04:10.366278941 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90PK_info:
	.quad	_c90PK
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.366910435 UTC

.section .text
.align 8
_c90Pq:
_c90Pq:
	leaq block_c90Ps_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c90Ps
_c90Pt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90Pq, .-_c90Pq


==================== Asm code ====================
2018-03-16 16:04:10.367462795 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Pq_info:
	.quad	_c90Pq
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.368255281 UTC

.section .text
.align 8
_c90Ps:
_c90Ps:
	leaq block_c90Px_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c90Px
_c90PD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90Ps, .-_c90Ps


==================== Asm code ====================
2018-03-16 16:04:10.368847152 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Ps_info:
	.quad	_c90Ps
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.369613611 UTC

.section .text
.align 8
_c90Px:
_c90Px:
	movq 7(%rbx),%rax
	movq %rax,-24(%rbp)
	movq 39(%rbx),%rax
	movq %rax,-16(%rbp)
	movq 47(%rbx),%rax
	movq %rax,-8(%rbp)
	movq 23(%rbx),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	addq $-24,%rbp
	jmp _s90ri
	.size _c90Px, .-_c90Px


==================== Asm code ====================
2018-03-16 16:04:10.370184646 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Px_info:
	.quad	_c90Px
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.370891888 UTC

.section .text
.align 8
_s90ri:
_s90ri:
	movq 16(%rbp),%rax
	subq 8(%rbp),%rax
	testq %rax,%rax
	jg _c90Pf
_c90Pg:
	movq 32(%rbp),%rax
	movq 40(%rbp),%rbx
	leaq block_c90OM_info(%rip),%rcx
	movq %rcx,40(%rbp)
	movq %rbx,%r14
	movq %rax,%rbx
	addq $40,%rbp
	jmp $wgo_s90qU_entry
_c90Pf:
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,8(%rbp)
	decq %rax
	movq %rax,16(%rbp)
	addq $-8,%rbp
	jmp _c90NW
	.size _s90ri, .-_s90ri


==================== Asm code ====================
2018-03-16 16:04:10.371942817 UTC

.section .text
.align 8
_c90NW:
_c90NW:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c90Pa
_c90P9:
	movq 32(%rbp),%rax
	movq 16(%rbp),%rbx
	movq 24(%rbp),%rcx
	testq %rcx,%rcx
	jne _c90Pc
_c90Pd:
	addq $-40,%r12
	movq 40(%rbp),%rcx
	movq 48(%rbp),%rdx
	movl (%rax),%eax
	leaq block_c90Ox_info(%rip),%rsi
	movq %rsi,32(%rbp)
	movq %rdx,%r14
	movq %rbx,%rdx
	movq %rcx,%rbx
	movq %rax,40(%rbp)
	movq %rdx,48(%rbp)
	addq $32,%rbp
	jmp $wgo_s90qU_entry
_c90Pc:
	movl (%rax,%rcx,4),%eax
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -1(%rcx),%rax
	movq %rax,24(%rbp)
	leaq -14(%r12),%rax
	movq %rax,16(%rbp)
	jmp _c90NW
_c90Pa:
	movq $40,904(%r13)
	leaq block_c90NW_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c90NW, .-_c90NW


==================== Asm code ====================
2018-03-16 16:04:10.372708981 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90NW_info:
	.quad	_c90NW
	.quad	774
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.373431376 UTC

.section .text
.align 8
_c90Ox:
_c90Ox:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c90P7
_c90P6:
	leaq sat_s90rD_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 16(%rbp),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -32(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c90P7:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c90Ox, .-_c90Ox


==================== Asm code ====================
2018-03-16 16:04:10.374034759 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Ox_info:
	.quad	_c90Ox
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.374707571 UTC

.section .text
.align 8
_c90OM:
_c90OM:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c90Pj
_c90Pi:
	leaq sat_s90rU_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c90Pj:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c90OM, .-_c90OM


==================== Asm code ====================
2018-03-16 16:04:10.375463304 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90OM_info:
	.quad	_c90OM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.376123072 UTC

.section .text
.align 8
sat_s90sP_entry:
_c90QF:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c90QG
_c90QH:
	leaq block_c90MJ_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c90MJ
_c90MK:
	movq (%rbx),%rax
	jmp *(%rax)
_c90QG:
	jmp *-8(%r13)
	.size sat_s90sP_entry, .-sat_s90sP_entry


==================== Asm code ====================
2018-03-16 16:04:10.376724674 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s90sP_info:
	.quad	sat_s90sP_entry
	.quad	2
	.quad	4294967307
	.quad	8589934597
	.quad	S90Bc_srt+80


==================== Asm code ====================
2018-03-16 16:04:10.377397301 UTC

.section .text
.align 8
_c90MJ:
_c90MJ:
	leaq block_c90MO_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _c90MJ, .-_c90MJ


==================== Asm code ====================
2018-03-16 16:04:10.377974353 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90MJ_info:
	.quad	_c90MJ
	.quad	2
	.quad	4294967326
	.quad	S90Bc_srt+80


==================== Asm code ====================
2018-03-16 16:04:10.378661964 UTC

.section .text
.align 8
_c90MO:
_c90MO:
	leaq block_c90MQ_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c90MQ
_c90MR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90MO, .-_c90MO


==================== Asm code ====================
2018-03-16 16:04:10.379404876 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90MO_info:
	.quad	_c90MO
	.quad	67
	.quad	4294967326
	.quad	S90Bc_srt+80


==================== Asm code ====================
2018-03-16 16:04:10.380177274 UTC

.section .text
.align 8
_c90MQ:
_c90MQ:
	movq 7(%rbx),%rax
	cmpq $1,%rax
	jg _c90QY
_c90QZ:
	movl $1,%ebx
_s90qH:
	movq %rbx,%rcx
	shlq $2,%rcx
	testq %rcx,%rcx
	jge _c90QP
_c90QU:
	movq GHC.ForeignPtr.mallocForeignPtrBytes2_closure@gotpcrel(%rip),%rbx
	addq $32,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c90QY:
	movq %rax,%rbx
	jmp _s90qH
_c90QP:
	leaq block_c90N6_info(%rip),%rdx
	movq %rdx,-24(%rbp)
	movq GHC.ForeignPtr.NoFinalizers_closure@gotpcrel(%rip),%rdx
	movq %rbx,%rsi
	leaq 1(%rdx),%rbx
	movq %rsi,-16(%rbp)
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-24,%rbp
	jmp *stg_newMutVar#@gotpcrel(%rip)
	.size _c90MQ, .-_c90MQ


==================== Asm code ====================
2018-03-16 16:04:10.380857007 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90MQ_info:
	.quad	_c90MQ
	.quad	67
	.quad	4294967326
	.quad	S90Bc_srt+80


==================== Asm code ====================
2018-03-16 16:04:10.381885399 UTC

.section .text
.align 8
_c90N6:
_c90N6:
	leaq block_c90N8_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	jmp *stg_newPinnedByteArray#@gotpcrel(%rip)
	.size _c90N6, .-_c90N6


==================== Asm code ====================
2018-03-16 16:04:10.382443409 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90N6_info:
	.quad	_c90N6
	.quad	966
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.383457474 UTC

.section .text
.align 8
_c90N8:
_c90N8:
	addq $176,%r12
	cmpq 856(%r13),%r12
	ja _c90QT
_c90QS:
	movq GHC.ForeignPtr.MallocPtr_con_info@gotpcrel(%rip),%rax
	movq %rax,-168(%r12)
	movq %rbx,-160(%r12)
	movq 16(%rbp),%rax
	movq %rax,-152(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-144(%r12)
	leaq -166(%r12),%rax
	movq %rax,-136(%r12)
	movq GHC.IO.Buffer.WriteBuffer_closure@gotpcrel(%rip),%rax
	addq $2,%rax
	movq %rax,-128(%r12)
	leaq 16(%rbx),%rax
	movq %rax,-120(%r12)
	movq 8(%rbp),%rax
	movq %rax,-112(%r12)
	movq $0,-104(%r12)
	movq $0,-96(%r12)
	leaq $wgo_s90qU_info(%rip),%rax
	movq %rax,-88(%r12)
	movq 48(%rbp),%rax
	movq %rax,-80(%r12)
	leaq -143(%r12),%rax
	movq %rax,-72(%r12)
	movq GHC.ForeignPtr.PlainForeignPtr_con_info@gotpcrel(%rip),%rax
	movq %rax,-64(%r12)
	movq 40(%rbp),%rax
	movq %rax,-56(%r12)
	movq GHC.IO.Buffer.Buffer_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	leaq -63(%r12),%rax
	movq %rax,-40(%r12)
	movq GHC.IO.Buffer.ReadBuffer_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-32(%r12)
	movq 32(%rbp),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-16(%r12)
	movq $0,-8(%r12)
	movq %rax,(%r12)
	leaq -47(%r12),%r14
	leaq -86(%r12),%rbx
	addq $56,%rbp
	jmp $wgo_s90qU_entry
_c90QT:
	movq $176,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c90N8, .-_c90N8


==================== Asm code ====================
2018-03-16 16:04:10.384287742 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90N8_info:
	.quad	_c90N8
	.quad	838
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.384912906 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCStringLen1_entry
.type Foreign.C.String.peekCStringLen1_entry, @object
Foreign.C.String.peekCStringLen1_entry:
_c90R2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c90R3
_c90R4:
	leaq block_c90Ms_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq GHC.IO.Encoding.getForeignEncoding_closure@gotpcrel(%rip),%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_c90R3:
	leaq Foreign.C.String.peekCStringLen1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.peekCStringLen1_entry, .-Foreign.C.String.peekCStringLen1_entry


==================== Asm code ====================
2018-03-16 16:04:10.38552898 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCStringLen1_info
.type Foreign.C.String.peekCStringLen1_info, @object
Foreign.C.String.peekCStringLen1_info:
	.quad	Foreign.C.String.peekCStringLen1_entry
	.quad	0
	.quad	13198434500622
	.quad	8589934597
	.quad	S90Bc_srt


==================== Asm code ====================
2018-03-16 16:04:10.386140543 UTC

.section .text
.align 8
_c90Ms:
_c90Ms:
	leaq block_c90Mu_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _c90Mu
_c90Mv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90Ms, .-_c90Ms


==================== Asm code ====================
2018-03-16 16:04:10.386724711 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Ms_info:
	.quad	_c90Ms
	.quad	1
	.quad	4294967326
	.quad	S90Bc_srt+80


==================== Asm code ====================
2018-03-16 16:04:10.387539129 UTC

.section .text
.align 8
_c90Mu:
_c90Mu:
	leaq block_c90Mz_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c90Mz
_c90MA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90Mu, .-_c90Mu


==================== Asm code ====================
2018-03-16 16:04:10.38813528 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Mu_info:
	.quad	_c90Mu
	.quad	1
	.quad	4294967326
	.quad	S90Bc_srt+80


==================== Asm code ====================
2018-03-16 16:04:10.388821296 UTC

.section .text
.align 8
_c90Mz:
_c90Mz:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c90R9
_c90R8:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq sat_s90sP_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rdi
	movq GHC.IO.Encoding.Types.close_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp *GHC.IO.bracket1_entry@gotpcrel(%rip)
_c90R9:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c90Mz, .-_c90Mz


==================== Asm code ====================
2018-03-16 16:04:10.389434629 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Mz_info:
	.quad	_c90Mz
	.quad	1
	.quad	4294967326
	.quad	S90Bc_srt+80


==================== Asm code ====================
2018-03-16 16:04:10.391549019 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCStringLen_closure
.type Foreign.C.String.peekCStringLen_closure, @object
Foreign.C.String.peekCStringLen_closure:
	.quad	Foreign.C.String.peekCStringLen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.392145395 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCStringLen_entry
.type Foreign.C.String.peekCStringLen_entry, @object
Foreign.C.String.peekCStringLen_entry:
_c90Uz:
	jmp Foreign.C.String.peekCStringLen1_entry
	.size Foreign.C.String.peekCStringLen_entry, .-Foreign.C.String.peekCStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:10.392638615 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCStringLen_info
.type Foreign.C.String.peekCStringLen_info, @object
Foreign.C.String.peekCStringLen_info:
	.quad	Foreign.C.String.peekCStringLen_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S90Bc_srt+88


==================== Asm code ====================
2018-03-16 16:04:10.395474383 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCString1_closure
.type Foreign.C.String.peekCString1_closure, @object
Foreign.C.String.peekCString1_closure:
	.quad	Foreign.C.String.peekCString1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.39616415 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCString1_entry
.type Foreign.C.String.peekCString1_entry, @object
Foreign.C.String.peekCString1_entry:
_c90UM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c90UN
_c90UO:
	leaq block_c90UK_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq GHC.IO.Encoding.getForeignEncoding_closure@gotpcrel(%rip),%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
_c90UN:
	leaq Foreign.C.String.peekCString1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.peekCString1_entry, .-Foreign.C.String.peekCString1_entry


==================== Asm code ====================
2018-03-16 16:04:10.396760618 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCString1_info
.type Foreign.C.String.peekCString1_info, @object
Foreign.C.String.peekCString1_info:
	.quad	Foreign.C.String.peekCString1_entry
	.quad	0
	.quad	52780853100558
	.quad	8589934597
	.quad	S90Bc_srt


==================== Asm code ====================
2018-03-16 16:04:10.397390927 UTC

.section .text
.align 8
_c90UK:
_c90UK:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Foreign.peekCString1_entry@gotpcrel(%rip)
	.size _c90UK, .-_c90UK


==================== Asm code ====================
2018-03-16 16:04:10.397965479 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90UK_info:
	.quad	_c90UK
	.quad	1
	.quad	4294967326
	.quad	S90Bc_srt+96


==================== Asm code ====================
2018-03-16 16:04:10.400039093 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCString_closure
.type Foreign.C.String.peekCString_closure, @object
Foreign.C.String.peekCString_closure:
	.quad	Foreign.C.String.peekCString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.400580856 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCString_entry
.type Foreign.C.String.peekCString_entry, @object
Foreign.C.String.peekCString_entry:
_c90V3:
	jmp Foreign.C.String.peekCString1_entry
	.size Foreign.C.String.peekCString_entry, .-Foreign.C.String.peekCString_entry


==================== Asm code ====================
2018-03-16 16:04:10.401082687 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCString_info
.type Foreign.C.String.peekCString_info, @object
Foreign.C.String.peekCString_info:
	.quad	Foreign.C.String.peekCString_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S90Bc_srt+104


==================== Asm code ====================
2018-03-16 16:04:10.403989939 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.castCSCharToChar_closure
.type Foreign.C.String.castCSCharToChar_closure, @object
Foreign.C.String.castCSCharToChar_closure:
	.quad	Foreign.C.String.castCSCharToChar_info


==================== Asm code ====================
2018-03-16 16:04:10.404677565 UTC

.section .text
.align 8
.globl Foreign.C.String.castCSCharToChar_entry
.type Foreign.C.String.castCSCharToChar_entry, @object
Foreign.C.String.castCSCharToChar_entry:
_c90Vh:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c90Vx
_c90Vy:
	leaq block_c90Ve_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c90Ve
_c90Vf:
	movq (%rbx),%rax
	jmp *(%rax)
_c90Vx:
	leaq Foreign.C.String.castCSCharToChar_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.castCSCharToChar_entry, .-Foreign.C.String.castCSCharToChar_entry


==================== Asm code ====================
2018-03-16 16:04:10.405312797 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.castCSCharToChar_info
.type Foreign.C.String.castCSCharToChar_info, @object
Foreign.C.String.castCSCharToChar_info:
	.quad	Foreign.C.String.castCSCharToChar_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:10.406007403 UTC

.section .text
.align 8
_c90Ve:
_c90Ve:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c90VB
_c90VA:
	movq 7(%rbx),%rax
	movzbl %al,%eax
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c90VB:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c90Ve, .-_c90Ve


==================== Asm code ====================
2018-03-16 16:04:10.406771043 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Ve_info:
	.quad	_c90Ve
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.409766439 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.castCUCharToChar_closure
.type Foreign.C.String.castCUCharToChar_closure, @object
Foreign.C.String.castCUCharToChar_closure:
	.quad	Foreign.C.String.castCUCharToChar_info


==================== Asm code ====================
2018-03-16 16:04:10.410458932 UTC

.section .text
.align 8
.globl Foreign.C.String.castCUCharToChar_entry
.type Foreign.C.String.castCUCharToChar_entry, @object
Foreign.C.String.castCUCharToChar_entry:
_c90VX:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c90W7
_c90W8:
	leaq block_c90VU_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c90VU
_c90VV:
	movq (%rbx),%rax
	jmp *(%rax)
_c90W7:
	leaq Foreign.C.String.castCUCharToChar_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.castCUCharToChar_entry, .-Foreign.C.String.castCUCharToChar_entry


==================== Asm code ====================
2018-03-16 16:04:10.411237086 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.castCUCharToChar_info
.type Foreign.C.String.castCUCharToChar_info, @object
Foreign.C.String.castCUCharToChar_info:
	.quad	Foreign.C.String.castCUCharToChar_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:10.411902394 UTC

.section .text
.align 8
_c90VU:
_c90VU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c90Wb
_c90Wa:
	movq 7(%rbx),%rax
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c90Wb:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c90VU, .-_c90VU


==================== Asm code ====================
2018-03-16 16:04:10.412502334 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90VU_info:
	.quad	_c90VU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.415402568 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.castCCharToChar_closure
.type Foreign.C.String.castCCharToChar_closure, @object
Foreign.C.String.castCCharToChar_closure:
	.quad	Foreign.C.String.castCCharToChar_info


==================== Asm code ====================
2018-03-16 16:04:10.416084361 UTC

.section .text
.align 8
.globl Foreign.C.String.castCCharToChar_entry
.type Foreign.C.String.castCCharToChar_entry, @object
Foreign.C.String.castCCharToChar_entry:
_c90Ww:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c90WM
_c90WN:
	leaq block_c90Wt_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c90Wt
_c90Wu:
	movq (%rbx),%rax
	jmp *(%rax)
_c90WM:
	leaq Foreign.C.String.castCCharToChar_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.castCCharToChar_entry, .-Foreign.C.String.castCCharToChar_entry


==================== Asm code ====================
2018-03-16 16:04:10.416699235 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.castCCharToChar_info
.type Foreign.C.String.castCCharToChar_info, @object
Foreign.C.String.castCCharToChar_info:
	.quad	Foreign.C.String.castCCharToChar_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:10.417406107 UTC

.section .text
.align 8
_c90Wt:
_c90Wt:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c90WQ
_c90WP:
	movq 7(%rbx),%rax
	movzbl %al,%eax
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c90WQ:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c90Wt, .-_c90Wt


==================== Asm code ====================
2018-03-16 16:04:10.418034619 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Wt_info:
	.quad	_c90Wt
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.422260782 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.$wpeekCAString_closure
.type Foreign.C.String.$wpeekCAString_closure, @object
Foreign.C.String.$wpeekCAString_closure:
	.quad	Foreign.C.String.$wpeekCAString_info


==================== Asm code ====================
2018-03-16 16:04:10.423264528 UTC

.section .text
.align 8
.globl Foreign.C.String.$wpeekCAString_entry
.type Foreign.C.String.$wpeekCAString_entry, @object
Foreign.C.String.$wpeekCAString_entry:
_c90XL:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c90XM
_c90XN:
	xorl %eax,%eax
_c90Ye:
	cmpb $0,(%r14,%rax,1)
	je _c90Yk
_c90Yj:
	incq %rax
	jmp _c90Ye
_c90Yk:
	testq %rax,%rax
	jg _c90Yb
_c90Yc:
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c90Yb:
	movq %r14,-24(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rbx
	incq %rbx
	movq %rbx,-16(%rbp)
	decq %rax
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp _c90Xm
_c90XM:
	leaq Foreign.C.String.$wpeekCAString_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.$wpeekCAString_entry, .-Foreign.C.String.$wpeekCAString_entry


==================== Asm code ====================
2018-03-16 16:04:10.423967495 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.$wpeekCAString_info
.type Foreign.C.String.$wpeekCAString_info, @object
Foreign.C.String.$wpeekCAString_info:
	.quad	Foreign.C.String.$wpeekCAString_entry
	.quad	0
	.quad	14
	.quad	8589934596


==================== Asm code ====================
2018-03-16 16:04:10.424768879 UTC

.section .text
.align 8
_c90Xm:
_c90Xm:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c90XR
_c90XQ:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rbx
	movq 8(%rbp),%rcx
	movsbq (%rcx,%rbx,1),%rcx
	testq %rbx,%rbx
	jg _c90XT
_c90Y9:
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movzbl %cl,%ebx
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c90XT:
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-32(%r12)
	movzbl %cl,%ecx
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rax
	movq %rax,16(%rbp)
	leaq -1(%rbx),%rax
	movq %rax,24(%rbp)
	jmp _c90Xm
_c90XR:
	movq $40,904(%r13)
	leaq block_c90Xm_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c90Xm, .-_c90Xm


==================== Asm code ====================
2018-03-16 16:04:10.425529668 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90Xm_info:
	.quad	_c90Xm
	.quad	323
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.428078111 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCAString1_closure
.type Foreign.C.String.peekCAString1_closure, @object
Foreign.C.String.peekCAString1_closure:
	.quad	Foreign.C.String.peekCAString1_info


==================== Asm code ====================
2018-03-16 16:04:10.42875417 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCAString1_entry
.type Foreign.C.String.peekCAString1_entry, @object
Foreign.C.String.peekCAString1_entry:
_c90Z0:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c90Z1
_c90Z2:
	leaq block_c90YX_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c90YX
_c90YY:
	movq (%rbx),%rax
	jmp *(%rax)
_c90Z1:
	leaq Foreign.C.String.peekCAString1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.peekCAString1_entry, .-Foreign.C.String.peekCAString1_entry


==================== Asm code ====================
2018-03-16 16:04:10.429376804 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCAString1_info
.type Foreign.C.String.peekCAString1_info, @object
Foreign.C.String.peekCAString1_info:
	.quad	Foreign.C.String.peekCAString1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:10.429945377 UTC

.section .text
.align 8
_c90YX:
_c90YX:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp Foreign.C.String.$wpeekCAString_entry
	.size _c90YX, .-_c90YX


==================== Asm code ====================
2018-03-16 16:04:10.430589989 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90YX_info:
	.quad	_c90YX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.432436832 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCAString_closure
.type Foreign.C.String.peekCAString_closure, @object
Foreign.C.String.peekCAString_closure:
	.quad	Foreign.C.String.peekCAString_info


==================== Asm code ====================
2018-03-16 16:04:10.432944348 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCAString_entry
.type Foreign.C.String.peekCAString_entry, @object
Foreign.C.String.peekCAString_entry:
_c90Zl:
	jmp Foreign.C.String.peekCAString1_entry
	.size Foreign.C.String.peekCAString_entry, .-Foreign.C.String.peekCAString_entry


==================== Asm code ====================
2018-03-16 16:04:10.433752849 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCAString_info
.type Foreign.C.String.peekCAString_info, @object
Foreign.C.String.peekCAString_info:
	.quad	Foreign.C.String.peekCAString_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:10.437734631 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.$wpeekCAStringLen_closure
.type Foreign.C.String.$wpeekCAStringLen_closure, @object
Foreign.C.String.$wpeekCAStringLen_closure:
	.quad	Foreign.C.String.$wpeekCAStringLen_info


==================== Asm code ====================
2018-03-16 16:04:10.438653754 UTC

.section .text
.align 8
.globl Foreign.C.String.$wpeekCAStringLen_entry
.type Foreign.C.String.$wpeekCAStringLen_entry, @object
Foreign.C.String.$wpeekCAStringLen_entry:
_c9108:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c9109
_c910a:
	testq %rsi,%rsi
	jg _c9106
_c9107:
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c9109:
	leaq Foreign.C.String.$wpeekCAStringLen_closure(%rip),%rbx
	jmp *-8(%r13)
_c9106:
	movq %r14,-24(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%rbp)
	leaq -1(%rsi),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp _c90ZE
	.size Foreign.C.String.$wpeekCAStringLen_entry, .-Foreign.C.String.$wpeekCAStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:10.439357942 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.$wpeekCAStringLen_info
.type Foreign.C.String.$wpeekCAStringLen_info, @object
Foreign.C.String.$wpeekCAStringLen_info:
	.quad	Foreign.C.String.$wpeekCAStringLen_entry
	.quad	0
	.quad	14
	.quad	12884901902


==================== Asm code ====================
2018-03-16 16:04:10.440025226 UTC

.section .text
.align 8
_c90ZE:
_c90ZE:
	leaq block_c90ZH_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq (%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c90ZH
_c90ZI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c90ZE, .-_c90ZE


==================== Asm code ====================
2018-03-16 16:04:10.440836404 UTC

.section .text
.align 8
_c90ZH:
_c90ZH:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c910e
_c910d:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 7(%rbx),%rbx
	movsbq (%rbx,%rcx,1),%rbx
	testq %rcx,%rcx
	je _c910w
_c910g:
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-32(%r12)
	movzbl %bl,%ebx
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rax
	movq %rax,16(%rbp)
	leaq -1(%rcx),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c90ZE
_c910w:
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movzbl %bl,%ebx
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c910e:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c90ZH, .-_c90ZH


==================== Asm code ====================
2018-03-16 16:04:10.441588432 UTC

.section .data.rel.ro
.align 8
.align 1
block_c90ZH_info:
	.quad	_c90ZH
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.444646373 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCAStringLen1_closure
.type Foreign.C.String.peekCAStringLen1_closure, @object
Foreign.C.String.peekCAStringLen1_closure:
	.quad	Foreign.C.String.peekCAStringLen1_info


==================== Asm code ====================
2018-03-16 16:04:10.445617642 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCAStringLen1_entry
.type Foreign.C.String.peekCAStringLen1_entry, @object
Foreign.C.String.peekCAStringLen1_entry:
_c911e:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c911i
_c911j:
	leaq block_c911b_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c911b
_c911c:
	movq (%rbx),%rax
	jmp *(%rax)
_c911i:
	leaq Foreign.C.String.peekCAStringLen1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.peekCAStringLen1_entry, .-Foreign.C.String.peekCAStringLen1_entry


==================== Asm code ====================
2018-03-16 16:04:10.446231739 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCAStringLen1_info
.type Foreign.C.String.peekCAStringLen1_info, @object
Foreign.C.String.peekCAStringLen1_info:
	.quad	Foreign.C.String.peekCAStringLen1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:10.44705021 UTC

.section .text
.align 8
_c911b:
_c911b:
	leaq block_c911h_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c911h
_c911l:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c911b, .-_c911b


==================== Asm code ====================
2018-03-16 16:04:10.44762264 UTC

.section .data.rel.ro
.align 8
.align 1
block_c911b_info:
	.quad	_c911b
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.44819697 UTC

.section .text
.align 8
_c911h:
_c911h:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp Foreign.C.String.$wpeekCAStringLen_entry
	.size _c911h, .-_c911h


==================== Asm code ====================
2018-03-16 16:04:10.448748354 UTC

.section .data.rel.ro
.align 8
.align 1
block_c911h_info:
	.quad	_c911h
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.452378348 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCAStringLen_closure
.type Foreign.C.String.peekCAStringLen_closure, @object
Foreign.C.String.peekCAStringLen_closure:
	.quad	Foreign.C.String.peekCAStringLen_info


==================== Asm code ====================
2018-03-16 16:04:10.452948724 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCAStringLen_entry
.type Foreign.C.String.peekCAStringLen_entry, @object
Foreign.C.String.peekCAStringLen_entry:
_c911L:
	jmp Foreign.C.String.peekCAStringLen1_entry
	.size Foreign.C.String.peekCAStringLen_entry, .-Foreign.C.String.peekCAStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:10.453518739 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCAStringLen_info
.type Foreign.C.String.peekCAStringLen_info, @object
Foreign.C.String.peekCAStringLen_info:
	.quad	Foreign.C.String.peekCAStringLen_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:04:10.456585014 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.castCWcharToChar_closure
.type Foreign.C.String.castCWcharToChar_closure, @object
Foreign.C.String.castCWcharToChar_closure:
	.quad	Foreign.C.String.castCWcharToChar_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.457338264 UTC

.section .text
.align 8
.globl Foreign.C.String.castCWcharToChar_entry
.type Foreign.C.String.castCWcharToChar_entry, @object
Foreign.C.String.castCWcharToChar_entry:
_c911Z:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c9120
_c9121:
	leaq block_c911W_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c911W
_c911X:
	movq (%rbx),%rax
	jmp *(%rax)
_c9120:
	leaq Foreign.C.String.castCWcharToChar_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.castCWcharToChar_entry, .-Foreign.C.String.castCWcharToChar_entry


==================== Asm code ====================
2018-03-16 16:04:10.457912712 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.castCWcharToChar_info
.type Foreign.C.String.castCWcharToChar_info, @object
Foreign.C.String.castCWcharToChar_info:
	.quad	Foreign.C.String.castCWcharToChar_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S90Bc_srt+112


==================== Asm code ====================
2018-03-16 16:04:10.458611569 UTC

.section .text
.align 8
_c911W:
_c911W:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c9126
_c9125:
	movq 7(%rbx),%rax
	cmpq $1114111,%rax
	ja _c912d
_c912k:
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c912d:
	addq $-16,%r12
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Char.$wlvl_entry@gotpcrel(%rip)
_c9126:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c911W, .-_c911W


==================== Asm code ====================
2018-03-16 16:04:10.459254133 UTC

.section .data.rel.ro
.align 8
.align 1
block_c911W_info:
	.quad	_c911W
	.quad	0
	.quad	4294967326
	.quad	S90Bc_srt+112


==================== Asm code ====================
2018-03-16 16:04:10.461774441 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCWString2_closure
.type Foreign.C.String.peekCWString2_closure, @object
Foreign.C.String.peekCWString2_closure:
	.quad	Foreign.C.String.peekCWString2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.462547983 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCWString2_entry
.type Foreign.C.String.peekCWString2_entry, @object
Foreign.C.String.peekCWString2_entry:
_c912E:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c912F
_c912G:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c912D
_c912C:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	leaq Foreign.C.String.castCWcharToChar_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c912F:
	jmp *-16(%r13)
_c912D:
	movq (%rbx),%rax
	jmp *(%rax)
	.size Foreign.C.String.peekCWString2_entry, .-Foreign.C.String.peekCWString2_entry


==================== Asm code ====================
2018-03-16 16:04:10.463301862 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCWString2_info
.type Foreign.C.String.peekCWString2_info, @object
Foreign.C.String.peekCWString2_info:
	.quad	Foreign.C.String.peekCWString2_entry
	.quad	0
	.quad	4294967317
	.quad	S90Bc_srt+120


==================== Asm code ====================
2018-03-16 16:04:10.469156888 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.$wpeekCWStringLen_closure
.type Foreign.C.String.$wpeekCWStringLen_closure, @object
Foreign.C.String.$wpeekCWStringLen_closure:
	.quad	Foreign.C.String.$wpeekCWStringLen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.469983461 UTC

.section .text
.align 8
sat_s90uL_entry:
_c913u:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c913v
_c913w:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c913y
_c913x:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	leaq Foreign.C.String.castCWcharToChar_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c913y:
	movq $40,904(%r13)
_c913v:
	jmp *-16(%r13)
	.size sat_s90uL_entry, .-sat_s90uL_entry


==================== Asm code ====================
2018-03-16 16:04:10.470690238 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s90uL_info:
	.quad	sat_s90uL_entry
	.quad	4294967297
	.quad	4294967315
	.quad	S90Bc_srt+120


==================== Asm code ====================
2018-03-16 16:04:10.471397129 UTC

.section .text
.align 8
.globl Foreign.C.String.$wpeekCWStringLen_entry
.type Foreign.C.String.$wpeekCWStringLen_entry, @object
Foreign.C.String.$wpeekCWStringLen_entry:
_c913C:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c913D
_c913E:
	testq %rsi,%rsi
	jg _c913A
_c913B:
	leaq Foreign.C.String.peekCWString2_closure(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c913D:
	leaq Foreign.C.String.$wpeekCWStringLen_closure(%rip),%rbx
	jmp *-8(%r13)
_c913A:
	movq %r14,-24(%rbp)
	leaq -1(%rsi),%rax
	movq %rax,-16(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp _c9134
	.size Foreign.C.String.$wpeekCWStringLen_entry, .-Foreign.C.String.$wpeekCWStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:10.472192751 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.$wpeekCWStringLen_info
.type Foreign.C.String.$wpeekCWStringLen_info, @object
Foreign.C.String.$wpeekCWStringLen_info:
	.quad	Foreign.C.String.$wpeekCWStringLen_entry
	.quad	0
	.quad	30064771086
	.quad	12884901902
	.quad	S90Bc_srt+120


==================== Asm code ====================
2018-03-16 16:04:10.472964039 UTC

.section .text
.align 8
_c9134:
_c9134:
	movq (%rbp),%rax
	movq 8(%rbp),%rbx
	testq %rbx,%rbx
	jne _c913L
_c913P:
	leaq block_c913j_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	movq 16(%rbp),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	testb $7,%bl
	jne _c913j
_c913k:
	movq (%rbx),%rax
	jmp *(%rax)
_c913L:
	leaq block_c9139_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c9139
_c913a:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c9134, .-_c9134


==================== Asm code ====================
2018-03-16 16:04:10.473869979 UTC

.section .text
.align 8
_c9139:
_c9139:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c913O
_c913N:
	movq 16(%rbp),%rax
	movq 7(%rbx),%rbx
	movslq (%rbx,%rax,4),%rbx
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,(%r12)
	decq %rax
	movq %rax,16(%rbp)
	leaq -14(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c9134
_c913O:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c9139, .-_c9139


==================== Asm code ====================
2018-03-16 16:04:10.474528425 UTC

.section .data.rel.ro
.align 8
.align 1
block_c9139_info:
	.quad	_c9139
	.quad	131
	.quad	4294967326
	.quad	S90Bc_srt+120


==================== Asm code ====================
2018-03-16 16:04:10.475199163 UTC

.section .text
.align 8
_c913j:
_c913j:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c913I
_c913H:
	movq 7(%rbx),%rax
	movslq (%rax),%rax
	leaq sat_s90uL_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -24(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c913I:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c913j, .-_c913j


==================== Asm code ====================
2018-03-16 16:04:10.475989081 UTC

.section .data.rel.ro
.align 8
.align 1
block_c913j_info:
	.quad	_c913j
	.quad	1
	.quad	4294967326
	.quad	S90Bc_srt+120


==================== Asm code ====================
2018-03-16 16:04:10.478958946 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCWStringLen1_closure
.type Foreign.C.String.peekCWStringLen1_closure, @object
Foreign.C.String.peekCWStringLen1_closure:
	.quad	Foreign.C.String.peekCWStringLen1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.479864071 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCWStringLen1_entry
.type Foreign.C.String.peekCWStringLen1_entry, @object
Foreign.C.String.peekCWStringLen1_entry:
_c914J:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c914N
_c914O:
	leaq block_c914G_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c914G
_c914H:
	movq (%rbx),%rax
	jmp *(%rax)
_c914N:
	leaq Foreign.C.String.peekCWStringLen1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.peekCWStringLen1_entry, .-Foreign.C.String.peekCWStringLen1_entry


==================== Asm code ====================
2018-03-16 16:04:10.480523784 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCWStringLen1_info
.type Foreign.C.String.peekCWStringLen1_info, @object
Foreign.C.String.peekCWStringLen1_info:
	.quad	Foreign.C.String.peekCWStringLen1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	S90Bc_srt+136


==================== Asm code ====================
2018-03-16 16:04:10.481155209 UTC

.section .text
.align 8
_c914G:
_c914G:
	leaq block_c914M_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c914M
_c914Q:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c914G, .-_c914G


==================== Asm code ====================
2018-03-16 16:04:10.481777161 UTC

.section .data.rel.ro
.align 8
.align 1
block_c914G_info:
	.quad	_c914G
	.quad	0
	.quad	4294967326
	.quad	S90Bc_srt+136


==================== Asm code ====================
2018-03-16 16:04:10.482361086 UTC

.section .text
.align 8
_c914M:
_c914M:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp Foreign.C.String.$wpeekCWStringLen_entry
	.size _c914M, .-_c914M


==================== Asm code ====================
2018-03-16 16:04:10.482889641 UTC

.section .data.rel.ro
.align 8
.align 1
block_c914M_info:
	.quad	_c914M
	.quad	1
	.quad	4294967326
	.quad	S90Bc_srt+136


==================== Asm code ====================
2018-03-16 16:04:10.485026932 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCWStringLen_closure
.type Foreign.C.String.peekCWStringLen_closure, @object
Foreign.C.String.peekCWStringLen_closure:
	.quad	Foreign.C.String.peekCWStringLen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.486037058 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCWStringLen_entry
.type Foreign.C.String.peekCWStringLen_entry, @object
Foreign.C.String.peekCWStringLen_entry:
_c915g:
	jmp Foreign.C.String.peekCWStringLen1_entry
	.size Foreign.C.String.peekCWStringLen_entry, .-Foreign.C.String.peekCWStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:10.486567648 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCWStringLen_info
.type Foreign.C.String.peekCWStringLen_info, @object
Foreign.C.String.peekCWStringLen_info:
	.quad	Foreign.C.String.peekCWStringLen_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S90Bc_srt+144


==================== Asm code ====================
2018-03-16 16:04:10.488265039 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCWString3_closure
.type Foreign.C.String.newCWString3_closure, @object
Foreign.C.String.newCWString3_closure:
	.quad	GHC.Int.I32#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.493744961 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.$wpeekCWString_closure
.type Foreign.C.String.$wpeekCWString_closure, @object
Foreign.C.String.$wpeekCWString_closure:
	.quad	Foreign.C.String.$wpeekCWString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.494515992 UTC

.section .text
.align 8
sat_s90vl_entry:
_c915X:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c915Y
_c915Z:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c9161
_c9160:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	leaq Foreign.C.String.castCWcharToChar_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c9161:
	movq $40,904(%r13)
_c915Y:
	jmp *-16(%r13)
	.size sat_s90vl_entry, .-sat_s90vl_entry


==================== Asm code ====================
2018-03-16 16:04:10.495344058 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s90vl_info:
	.quad	sat_s90vl_entry
	.quad	4294967297
	.quad	4294967315
	.quad	S90Bc_srt+120


==================== Asm code ====================
2018-03-16 16:04:10.496132934 UTC

.section .text
.align 8
.globl Foreign.C.String.$wpeekCWString_entry
.type Foreign.C.String.$wpeekCWString_entry, @object
Foreign.C.String.$wpeekCWString_entry:
_c9164:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c9165
_c9166:
	xorl %eax,%eax
_c916l:
	cmpl $0,(%r14,%rax,4)
	je _c916r
_c916q:
	incq %rax
	jmp _c916l
_c916r:
	testq %rax,%rax
	jg _c916i
_c916j:
	leaq Foreign.C.String.peekCWString2_closure(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c916i:
	movq %r14,-24(%rbp)
	decq %rax
	movq %rax,-16(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp _c915H
_c9165:
	leaq Foreign.C.String.$wpeekCWString_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.$wpeekCWString_entry, .-Foreign.C.String.$wpeekCWString_entry


==================== Asm code ====================
2018-03-16 16:04:10.496802485 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.$wpeekCWString_info
.type Foreign.C.String.$wpeekCWString_info, @object
Foreign.C.String.$wpeekCWString_info:
	.quad	Foreign.C.String.$wpeekCWString_entry
	.quad	0
	.quad	81604378638
	.quad	8589934596
	.quad	S90Bc_srt+120


==================== Asm code ====================
2018-03-16 16:04:10.497949 UTC

.section .text
.align 8
_c915H:
_c915H:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c916d
_c916c:
	movq 24(%rbp),%rax
	movq 16(%rbp),%rbx
	testq %rbx,%rbx
	jne _c916f
_c916g:
	addq $-40,%r12
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _c915P
_c916f:
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq 8(%rbp),%rcx
	movslq (%rcx,%rbx,4),%rcx
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -1(%rbx),%rax
	movq %rax,16(%rbp)
	leaq -14(%r12),%rax
	movq %rax,24(%rbp)
	jmp _c915H
_c916d:
	movq $40,904(%r13)
	leaq block_c915H_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c915H, .-_c915H


==================== Asm code ====================
2018-03-16 16:04:10.498609419 UTC

.section .data.rel.ro
.align 8
.align 1
block_c915H_info:
	.quad	_c915H
	.quad	195
	.quad	4294967326
	.quad	S90Bc_srt+120


==================== Asm code ====================
2018-03-16 16:04:10.499442385 UTC

.section .text
.align 8
_c915P:
_c915P:
	addq $32,%r12
	movq 16(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c916a
_c9169:
	leaq sat_s90vl_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-8(%r12)
	movq (%rbp),%rax
	movslq (%rax),%rax
	movq %rax,(%r12)
	leaq -24(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c916a:
	movq $32,904(%r13)
	leaq block_c915O_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c915P, .-_c915P


==================== Asm code ====================
2018-03-16 16:04:10.500103816 UTC

.section .text
.align 8
_c915O:
_c915O:
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp _c915P
	.size _c915O, .-_c915O


==================== Asm code ====================
2018-03-16 16:04:10.500620762 UTC

.section .data.rel.ro
.align 8
.align 1
block_c915O_info:
	.quad	_c915O
	.quad	451
	.quad	4294967326
	.quad	S90Bc_srt+120


==================== Asm code ====================
2018-03-16 16:04:10.502996802 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCWString1_closure
.type Foreign.C.String.peekCWString1_closure, @object
Foreign.C.String.peekCWString1_closure:
	.quad	Foreign.C.String.peekCWString1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.503789936 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCWString1_entry
.type Foreign.C.String.peekCWString1_entry, @object
Foreign.C.String.peekCWString1_entry:
_c917m:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c917n
_c917o:
	leaq block_c917j_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c917j
_c917k:
	movq (%rbx),%rax
	jmp *(%rax)
_c917n:
	leaq Foreign.C.String.peekCWString1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.peekCWString1_entry, .-Foreign.C.String.peekCWString1_entry


==================== Asm code ====================
2018-03-16 16:04:10.504348839 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCWString1_info
.type Foreign.C.String.peekCWString1_info, @object
Foreign.C.String.peekCWString1_info:
	.quad	Foreign.C.String.peekCWString1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	S90Bc_srt+152


==================== Asm code ====================
2018-03-16 16:04:10.504927768 UTC

.section .text
.align 8
_c917j:
_c917j:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp Foreign.C.String.$wpeekCWString_entry
	.size _c917j, .-_c917j


==================== Asm code ====================
2018-03-16 16:04:10.505482238 UTC

.section .data.rel.ro
.align 8
.align 1
block_c917j_info:
	.quad	_c917j
	.quad	0
	.quad	4294967326
	.quad	S90Bc_srt+152


==================== Asm code ====================
2018-03-16 16:04:10.507578054 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.peekCWString_closure
.type Foreign.C.String.peekCWString_closure, @object
Foreign.C.String.peekCWString_closure:
	.quad	Foreign.C.String.peekCWString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.508109087 UTC

.section .text
.align 8
.globl Foreign.C.String.peekCWString_entry
.type Foreign.C.String.peekCWString_entry, @object
Foreign.C.String.peekCWString_entry:
_c917H:
	jmp Foreign.C.String.peekCWString1_entry
	.size Foreign.C.String.peekCWString_entry, .-Foreign.C.String.peekCWString_entry


==================== Asm code ====================
2018-03-16 16:04:10.508618695 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.peekCWString_info
.type Foreign.C.String.peekCWString_info, @object
Foreign.C.String.peekCWString_info:
	.quad	Foreign.C.String.peekCWString_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S90Bc_srt+160


==================== Asm code ====================
2018-03-16 16:04:10.511633059 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCWString2_closure
.type Foreign.C.String.newCWString2_closure, @object
Foreign.C.String.newCWString2_closure:
	.quad	Foreign.C.String.newCWString2_info


==================== Asm code ====================
2018-03-16 16:04:10.512336999 UTC

.section .text
.align 8
.globl Foreign.C.String.newCWString2_entry
.type Foreign.C.String.newCWString2_entry, @object
Foreign.C.String.newCWString2_entry:
_c917V:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c9185
_c9186:
	leaq block_c917S_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c917S
_c917T:
	movq (%rbx),%rax
	jmp *(%rax)
_c9185:
	leaq Foreign.C.String.newCWString2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.newCWString2_entry, .-Foreign.C.String.newCWString2_entry


==================== Asm code ====================
2018-03-16 16:04:10.512961414 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCWString2_info
.type Foreign.C.String.newCWString2_info, @object
Foreign.C.String.newCWString2_info:
	.quad	Foreign.C.String.newCWString2_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:10.513676265 UTC

.section .text
.align 8
_c917S:
_c917S:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c9189
_c9188:
	movq 7(%rbx),%rax
	movslq %eax,%rax
	movq GHC.Int.I32#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c9189:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c917S, .-_c917S


==================== Asm code ====================
2018-03-16 16:04:10.51429306 UTC

.section .data.rel.ro
.align 8
.align 1
block_c917S_info:
	.quad	_c917S
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.520032737 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCWStringLen1_closure
.type Foreign.C.String.withCWStringLen1_closure, @object
Foreign.C.String.withCWStringLen1_closure:
	.quad	Foreign.C.String.withCWStringLen1_info


==================== Asm code ====================
2018-03-16 16:04:10.520717515 UTC

.section .text
.align 8
.globl Foreign.C.String.withCWStringLen1_entry
.type Foreign.C.String.withCWStringLen1_entry, @object
Foreign.C.String.withCWStringLen1_entry:
_c918u:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c918y
_c918z:
	leaq block_c918s_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rax
	movq %r14,%rsi
	leaq Foreign.C.String.newCWString2_closure+1(%rip),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c918y:
	leaq Foreign.C.String.withCWStringLen1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.withCWStringLen1_entry, .-Foreign.C.String.withCWStringLen1_entry


==================== Asm code ====================
2018-03-16 16:04:10.521648395 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCWStringLen1_info
.type Foreign.C.String.withCWStringLen1_info, @object
Foreign.C.String.withCWStringLen1_info:
	.quad	Foreign.C.String.withCWStringLen1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:04:10.522261581 UTC

.section .text
.align 8
_c918s:
_c918s:
	leaq block_c918x_info(%rip),%rax
	movq %rax,-8(%rbp)
	xorl %esi,%esi
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.List.$wlenAcc_entry@gotpcrel(%rip)
	.size _c918s, .-_c918s


==================== Asm code ====================
2018-03-16 16:04:10.52303536 UTC

.section .data.rel.ro
.align 8
.align 1
block_c918s_info:
	.quad	_c918s
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.52362921 UTC

.section .text
.align 8
_c918x:
_c918x:
	leaq block_c918I_info(%rip),%rax
	movq %rax,-8(%rbp)
	movl $4,%r14d
	movq %rbx,%rax
	shlq $2,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_newAlignedPinnedByteArray#@gotpcrel(%rip)
	.size _c918x, .-_c918x


==================== Asm code ====================
2018-03-16 16:04:10.524183381 UTC

.section .data.rel.ro
.align 8
.align 1
block_c918x_info:
	.quad	_c918x
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.524766617 UTC

.section .text
.align 8
_c918I:
_c918I:
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	movq $0,-8(%rbp)
	leaq 16(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-16,%rbp
	jmp _c9194
	.size _c918I, .-_c918I


==================== Asm code ====================
2018-03-16 16:04:10.52537509 UTC

.section .data.rel.ro
.align 8
.align 1
block_c918I_info:
	.quad	_c918I
	.quad	67
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.526014389 UTC

.section .text
.align 8
_c9194:
_c9194:
	movq (%rbp),%rax
	leaq block_c9197_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c9197
_c9199:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c9194, .-_c9194


==================== Asm code ====================
2018-03-16 16:04:10.526869925 UTC

.section .text
.align 8
_c9197:
_c9197:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u919u
_c919k:
	leaq block_c919i_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c919i
_c919l:
	movq (%rbx),%rax
	jmp *(%rax)
_u919u:
	addq $8,%rbp
	jmp _c918R
	.size _c9197, .-_c9197


==================== Asm code ====================
2018-03-16 16:04:10.527408594 UTC

.section .data.rel.ro
.align 8
.align 1
block_c9197_info:
	.quad	_c9197
	.quad	453
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.528146391 UTC

.section .text
.align 8
_c918R:
_c918R:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c918Z
_c918Y:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq block_c918W_info(%rip),%rax
	movq %rax,16(%rbp)
	leaq -15(%r12),%r14
	movq 32(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
_c918Z:
	movq $56,904(%r13)
	leaq block_c918R_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c918R, .-_c918R


==================== Asm code ====================
2018-03-16 16:04:10.528837316 UTC

.section .data.rel.ro
.align 8
.align 1
block_c918R_info:
	.quad	_c918R
	.quad	196
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.529431762 UTC

.section .text
.align 8
_c918W:
_c918W:
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c918W, .-_c918W


==================== Asm code ====================
2018-03-16 16:04:10.529957462 UTC

.section .data.rel.ro
.align 8
.align 1
block_c918W_info:
	.quad	_c918W
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.530694748 UTC

.section .text
.align 8
_c919i:
_c919i:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movl %ebx,(%rdx,%rax,4)
	movq %rcx,8(%rbp)
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c9194
	.size _c919i, .-_c919i


==================== Asm code ====================
2018-03-16 16:04:10.531284095 UTC

.section .data.rel.ro
.align 8
.align 1
block_c919i_info:
	.quad	_c919i
	.quad	902
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.533205015 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCWStringLen_closure
.type Foreign.C.String.withCWStringLen_closure, @object
Foreign.C.String.withCWStringLen_closure:
	.quad	Foreign.C.String.withCWStringLen_info


==================== Asm code ====================
2018-03-16 16:04:10.533966088 UTC

.section .text
.align 8
.globl Foreign.C.String.withCWStringLen_entry
.type Foreign.C.String.withCWStringLen_entry, @object
Foreign.C.String.withCWStringLen_entry:
_c91av:
	jmp Foreign.C.String.withCWStringLen1_entry
	.size Foreign.C.String.withCWStringLen_entry, .-Foreign.C.String.withCWStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:10.53465343 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCWStringLen_info
.type Foreign.C.String.withCWStringLen_info, @object
Foreign.C.String.withCWStringLen_info:
	.quad	Foreign.C.String.withCWStringLen_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:04:10.538507061 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCWString_closure
.type Foreign.C.String.withCWString_closure, @object
Foreign.C.String.withCWString_closure:
	.quad	Foreign.C.String.withCWString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.53921771 UTC

.section .text
.align 8
vals_s90wn_entry:
_c91aK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c91aL
_c91aM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	leaq Foreign.C.String.newCWString2_closure+1(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c91aL:
	jmp *-16(%r13)
	.size vals_s90wn_entry, .-vals_s90wn_entry


==================== Asm code ====================
2018-03-16 16:04:10.539825191 UTC

.section .data.rel.ro
.align 8
.align 1
vals_s90wn_info:
	.quad	vals_s90wn_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:04:10.54041344 UTC

.section .text
.align 8
sat_s90wq_entry:
_c91aX:
	movq 7(%rbx),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size sat_s90wq_entry, .-sat_s90wq_entry


==================== Asm code ====================
2018-03-16 16:04:10.540908144 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s90wq_info:
	.quad	sat_s90wq_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:10.54159358 UTC

.section .text
.align 8
sat_s90wr_entry:
_c91b0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c91b4
_c91b3:
	movq 7(%rbx),%rax
	leaq sat_s90wq_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%r8
	movq %rax,%rdi
	leaq Foreign.C.String.newCWString3_closure+1(%rip),%rsi
	movq Foreign.C.Types.$fStorableCWchar_closure@gotpcrel(%rip),%r14
	jmp *Foreign.Marshal.Array.withArrayLen0_entry@gotpcrel(%rip)
_c91b4:
	movq $16,904(%r13)
	jmp *-8(%r13)
	.size sat_s90wr_entry, .-sat_s90wr_entry


==================== Asm code ====================
2018-03-16 16:04:10.542376998 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s90wr_info:
	.quad	sat_s90wr_entry
	.quad	1
	.quad	4294967305
	.quad	4294967301
	.quad	S90Bc_srt+168


==================== Asm code ====================
2018-03-16 16:04:10.543065659 UTC

.section .text
.align 8
.globl Foreign.C.String.withCWString_entry
.type Foreign.C.String.withCWString_entry, @object
Foreign.C.String.withCWString_entry:
_c91b5:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c91b9
_c91b8:
	leaq vals_s90wn_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	leaq sat_s90wr_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -32(%r12),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c91b9:
	movq $40,904(%r13)
	leaq Foreign.C.String.withCWString_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.withCWString_entry, .-Foreign.C.String.withCWString_entry


==================== Asm code ====================
2018-03-16 16:04:10.543692071 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCWString_info
.type Foreign.C.String.withCWString_info, @object
Foreign.C.String.withCWString_info:
	.quad	Foreign.C.String.withCWString_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S90Bc_srt+168


==================== Asm code ====================
2018-03-16 16:04:10.546642202 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCWString1_closure
.type Foreign.C.String.newCWString1_closure, @object
Foreign.C.String.newCWString1_closure:
	.quad	Foreign.C.String.newCWString1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.547309245 UTC

.section .text
.align 8
.globl Foreign.C.String.newCWString1_entry
.type Foreign.C.String.newCWString1_entry, @object
Foreign.C.String.newCWString1_entry:
_c91bA:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c91bB
_c91bC:
	leaq block_c91by_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rsi
	leaq Foreign.C.String.newCWString2_closure+1(%rip),%r14
	addq $-8,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c91bB:
	leaq Foreign.C.String.newCWString1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.newCWString1_entry, .-Foreign.C.String.newCWString1_entry


==================== Asm code ====================
2018-03-16 16:04:10.547933093 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCWString1_info
.type Foreign.C.String.newCWString1_info, @object
Foreign.C.String.newCWString1_info:
	.quad	Foreign.C.String.newCWString1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	S90Bc_srt+184


==================== Asm code ====================
2018-03-16 16:04:10.548536705 UTC

.section .text
.align 8
_c91by:
_c91by:
	movq %rbx,%rdi
	leaq Foreign.C.String.newCWString3_closure+1(%rip),%rsi
	movq Foreign.C.Types.$fStorableCWchar_closure@gotpcrel(%rip),%r14
	addq $8,%rbp
	jmp *Foreign.Marshal.Array.newArray3_entry@gotpcrel(%rip)
	.size _c91by, .-_c91by


==================== Asm code ====================
2018-03-16 16:04:10.549096752 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91by_info:
	.quad	_c91by
	.quad	0
	.quad	4294967326
	.quad	S90Bc_srt+184


==================== Asm code ====================
2018-03-16 16:04:10.551166755 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCWString_closure
.type Foreign.C.String.newCWString_closure, @object
Foreign.C.String.newCWString_closure:
	.quad	Foreign.C.String.newCWString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.551710755 UTC

.section .text
.align 8
.globl Foreign.C.String.newCWString_entry
.type Foreign.C.String.newCWString_entry, @object
Foreign.C.String.newCWString_entry:
_c91bT:
	jmp Foreign.C.String.newCWString1_entry
	.size Foreign.C.String.newCWString_entry, .-Foreign.C.String.newCWString_entry


==================== Asm code ====================
2018-03-16 16:04:10.552214475 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCWString_info
.type Foreign.C.String.newCWString_info, @object
Foreign.C.String.newCWString_info:
	.quad	Foreign.C.String.newCWString_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S90Bc_srt+192


==================== Asm code ====================
2018-03-16 16:04:10.556306017 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCWStringLen1_closure
.type Foreign.C.String.newCWStringLen1_closure, @object
Foreign.C.String.newCWStringLen1_closure:
	.quad	Foreign.C.String.newCWStringLen1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.556984127 UTC

.section .text
.align 8
sat_s90wC_entry:
_c91cg:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c91ck
_c91cl:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c91ce_info(%rip),%rax
	movq %rax,-24(%rbp)
	xorl %esi,%esi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp *GHC.List.$wlenAcc_entry@gotpcrel(%rip)
_c91ck:
	jmp *-16(%r13)
	.size sat_s90wC_entry, .-sat_s90wC_entry


==================== Asm code ====================
2018-03-16 16:04:10.557747096 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s90wC_info:
	.quad	sat_s90wC_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 16:04:10.558378234 UTC

.section .text
.align 8
_c91ce:
_c91ce:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c91co
_c91cn:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c91co:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c91ce, .-_c91ce


==================== Asm code ====================
2018-03-16 16:04:10.558988664 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91ce_info:
	.quad	_c91ce
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.559646077 UTC

.section .text
.align 8
.globl Foreign.C.String.newCWStringLen1_entry
.type Foreign.C.String.newCWStringLen1_entry, @object
Foreign.C.String.newCWStringLen1_entry:
_c91cp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c91cr
_c91cs:
	leaq block_c91c4_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rsi
	leaq Foreign.C.String.newCWString2_closure+1(%rip),%r14
	addq $-8,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c91cr:
	leaq Foreign.C.String.newCWStringLen1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.newCWStringLen1_entry, .-Foreign.C.String.newCWStringLen1_entry


==================== Asm code ====================
2018-03-16 16:04:10.560255524 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCWStringLen1_info
.type Foreign.C.String.newCWStringLen1_info, @object
Foreign.C.String.newCWStringLen1_info:
	.quad	Foreign.C.String.newCWStringLen1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934597
	.quad	S90Bc_srt+200


==================== Asm code ====================
2018-03-16 16:04:10.560880345 UTC

.section .text
.align 8
_c91c4:
_c91c4:
	leaq block_c91c8_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rsi
	movq Foreign.C.Types.$fStorableCWchar_closure@gotpcrel(%rip),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *Foreign.Marshal.Array.newArray1_entry@gotpcrel(%rip)
	.size _c91c4, .-_c91c4


==================== Asm code ====================
2018-03-16 16:04:10.561870974 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91c4_info:
	.quad	_c91c4
	.quad	0
	.quad	4294967326
	.quad	S90Bc_srt+200


==================== Asm code ====================
2018-03-16 16:04:10.562565559 UTC

.section .text
.align 8
_c91c8:
_c91c8:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c91cw
_c91cv:
	leaq sat_s90wC_info(%rip),%rax
	movq %rax,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c91cw:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c91c8, .-_c91c8


==================== Asm code ====================
2018-03-16 16:04:10.563202461 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91c8_info:
	.quad	_c91c8
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.565327899 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCWStringLen_closure
.type Foreign.C.String.newCWStringLen_closure, @object
Foreign.C.String.newCWStringLen_closure:
	.quad	Foreign.C.String.newCWStringLen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.565907795 UTC

.section .text
.align 8
.globl Foreign.C.String.newCWStringLen_entry
.type Foreign.C.String.newCWStringLen_entry, @object
Foreign.C.String.newCWStringLen_entry:
_c91d4:
	jmp Foreign.C.String.newCWStringLen1_entry
	.size Foreign.C.String.newCWStringLen_entry, .-Foreign.C.String.newCWStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:10.566428685 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCWStringLen_info
.type Foreign.C.String.newCWStringLen_info, @object
Foreign.C.String.newCWStringLen_info:
	.quad	Foreign.C.String.newCWStringLen_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S90Bc_srt+208


==================== Asm code ====================
2018-03-16 16:04:10.569354381 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.castCharToCChar1_closure
.type Foreign.C.String.castCharToCChar1_closure, @object
Foreign.C.String.castCharToCChar1_closure:
	.quad	Foreign.C.String.castCharToCChar1_info


==================== Asm code ====================
2018-03-16 16:04:10.570037496 UTC

.section .text
.align 8
.globl Foreign.C.String.castCharToCChar1_entry
.type Foreign.C.String.castCharToCChar1_entry, @object
Foreign.C.String.castCharToCChar1_entry:
_c91di:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c91ds
_c91dt:
	leaq block_c91df_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c91df
_c91dg:
	movq (%rbx),%rax
	jmp *(%rax)
_c91ds:
	leaq Foreign.C.String.castCharToCChar1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.castCharToCChar1_entry, .-Foreign.C.String.castCharToCChar1_entry


==================== Asm code ====================
2018-03-16 16:04:10.570636754 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.castCharToCChar1_info
.type Foreign.C.String.castCharToCChar1_info, @object
Foreign.C.String.castCharToCChar1_info:
	.quad	Foreign.C.String.castCharToCChar1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:10.571306606 UTC

.section .text
.align 8
_c91df:
_c91df:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c91dw
_c91dv:
	movq 7(%rbx),%rax
	movsbq %al,%rax
	movq GHC.Int.I8#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c91dw:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c91df, .-_c91df


==================== Asm code ====================
2018-03-16 16:04:10.571859938 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91df_info:
	.quad	_c91df
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.574276316 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.castCharToCSChar_closure
.type Foreign.C.String.castCharToCSChar_closure, @object
Foreign.C.String.castCharToCSChar_closure:
	.quad	Foreign.C.String.castCharToCSChar_info


==================== Asm code ====================
2018-03-16 16:04:10.574824235 UTC

.section .text
.align 8
.globl Foreign.C.String.castCharToCSChar_entry
.type Foreign.C.String.castCharToCSChar_entry, @object
Foreign.C.String.castCharToCSChar_entry:
_c91dP:
	jmp Foreign.C.String.castCharToCChar1_entry
	.size Foreign.C.String.castCharToCSChar_entry, .-Foreign.C.String.castCharToCSChar_entry


==================== Asm code ====================
2018-03-16 16:04:10.575339153 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.castCharToCSChar_info
.type Foreign.C.String.castCharToCSChar_info, @object
Foreign.C.String.castCharToCSChar_info:
	.quad	Foreign.C.String.castCharToCSChar_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:10.578249282 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.castCharToCUChar1_closure
.type Foreign.C.String.castCharToCUChar1_closure, @object
Foreign.C.String.castCharToCUChar1_closure:
	.quad	Foreign.C.String.castCharToCUChar1_info


==================== Asm code ====================
2018-03-16 16:04:10.578924132 UTC

.section .text
.align 8
.globl Foreign.C.String.castCharToCUChar1_entry
.type Foreign.C.String.castCharToCUChar1_entry, @object
Foreign.C.String.castCharToCUChar1_entry:
_c91e3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c91eg
_c91eh:
	leaq block_c91e0_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c91e0
_c91e1:
	movq (%rbx),%rax
	jmp *(%rax)
_c91eg:
	leaq Foreign.C.String.castCharToCUChar1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.castCharToCUChar1_entry, .-Foreign.C.String.castCharToCUChar1_entry


==================== Asm code ====================
2018-03-16 16:04:10.579548025 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.castCharToCUChar1_info
.type Foreign.C.String.castCharToCUChar1_info, @object
Foreign.C.String.castCharToCUChar1_info:
	.quad	Foreign.C.String.castCharToCUChar1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:10.58037442 UTC

.section .text
.align 8
_c91e0:
_c91e0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c91ek
_c91ej:
	movq 7(%rbx),%rax
	movzbl %al,%eax
	movq GHC.Word.W8#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c91ek:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c91e0, .-_c91e0


==================== Asm code ====================
2018-03-16 16:04:10.580983062 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91e0_info:
	.quad	_c91e0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.58279538 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.castCharToCUChar_closure
.type Foreign.C.String.castCharToCUChar_closure, @object
Foreign.C.String.castCharToCUChar_closure:
	.quad	Foreign.C.String.castCharToCUChar_info


==================== Asm code ====================
2018-03-16 16:04:10.583343682 UTC

.section .text
.align 8
.globl Foreign.C.String.castCharToCUChar_entry
.type Foreign.C.String.castCharToCUChar_entry, @object
Foreign.C.String.castCharToCUChar_entry:
_c91eD:
	jmp Foreign.C.String.castCharToCUChar1_entry
	.size Foreign.C.String.castCharToCUChar_entry, .-Foreign.C.String.castCharToCUChar_entry


==================== Asm code ====================
2018-03-16 16:04:10.584011906 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.castCharToCUChar_info
.type Foreign.C.String.castCharToCUChar_info, @object
Foreign.C.String.castCharToCUChar_info:
	.quad	Foreign.C.String.castCharToCUChar_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:10.585914833 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.castCharToCChar_closure
.type Foreign.C.String.castCharToCChar_closure, @object
Foreign.C.String.castCharToCChar_closure:
	.quad	Foreign.C.String.castCharToCChar_info


==================== Asm code ====================
2018-03-16 16:04:10.586484807 UTC

.section .text
.align 8
.globl Foreign.C.String.castCharToCChar_entry
.type Foreign.C.String.castCharToCChar_entry, @object
Foreign.C.String.castCharToCChar_entry:
_c91eO:
	jmp Foreign.C.String.castCharToCChar1_entry
	.size Foreign.C.String.castCharToCChar_entry, .-Foreign.C.String.castCharToCChar_entry


==================== Asm code ====================
2018-03-16 16:04:10.5869912 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.castCharToCChar_info
.type Foreign.C.String.castCharToCChar_info, @object
Foreign.C.String.castCharToCChar_info:
	.quad	Foreign.C.String.castCharToCChar_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:04:10.592423275 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCAString1_closure
.type Foreign.C.String.newCAString1_closure, @object
Foreign.C.String.newCAString1_closure:
	.quad	Foreign.C.String.newCAString1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.593116054 UTC

.section .text
.align 8
.globl Foreign.C.String.newCAString1_entry
.type Foreign.C.String.newCAString1_entry, @object
Foreign.C.String.newCAString1_entry:
_c91f1:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c91f2
_c91f3:
	leaq block_c91eZ_info(%rip),%rax
	movq %rax,-16(%rbp)
	xorl %esi,%esi
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.List.$wlenAcc_entry@gotpcrel(%rip)
_c91f2:
	leaq Foreign.C.String.newCAString1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.newCAString1_entry, .-Foreign.C.String.newCAString1_entry


==================== Asm code ====================
2018-03-16 16:04:10.593761273 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCAString1_info
.type Foreign.C.String.newCAString1_info, @object
Foreign.C.String.newCAString1_info:
	.quad	Foreign.C.String.newCAString1_entry
	.quad	0
	.quad	18014402804449294
	.quad	8589934597
	.quad	S90Bc_srt+40


==================== Asm code ====================
2018-03-16 16:04:10.594434311 UTC

.section .text
.align 8
_c91eZ:
_c91eZ:
	movq 8(%rbp),%rax
	subq $8,%rsp
	leaq 1(%rbx),%rdi
	movq %rax,%rbx
	xorl %eax,%eax
	call malloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c91fR
_c91fQ:
	movq $0,-8(%rbp)
	movq %rbx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp _c91ft
_c91fR:
	movq Foreign.Marshal.Alloc.malloc1_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _c91eZ, .-_c91eZ


==================== Asm code ====================
2018-03-16 16:04:10.595069872 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91eZ_info:
	.quad	_c91eZ
	.quad	1
	.quad	4294967326
	.quad	S90Bc_srt+40


==================== Asm code ====================
2018-03-16 16:04:10.5958661 UTC

.section .text
.align 8
_c91ft:
_c91ft:
	leaq block_c91fw_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c91fw
_c91fy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c91ft, .-_c91ft


==================== Asm code ====================
2018-03-16 16:04:10.596591641 UTC

.section .text
.align 8
_c91fw:
_c91fw:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c91fE
_c91fJ:
	leaq block_c91fH_info(%rip),%rax
	movq %rax,(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c91fH
_c91fK:
	movq (%rbx),%rax
	jmp *(%rax)
_c91fE:
	movq 8(%rbp),%rax
	movq %rax,16(%rbp)
	addq $16,%rbp
	jmp _c91fl
	.size _c91fw, .-_c91fw


==================== Asm code ====================
2018-03-16 16:04:10.597192292 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91fw_info:
	.quad	_c91fw
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.597909825 UTC

.section .text
.align 8
_c91fl:
_c91fl:
	addq $16,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c91fq
_c91fp:
	movq 8(%rbp),%rbx
	movb $0,(%rbx,%rax,1)
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c91fq:
	movq $16,904(%r13)
	leaq block_c91fk_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c91fl, .-_c91fl


==================== Asm code ====================
2018-03-16 16:04:10.598588512 UTC

.section .text
.align 8
_c91fk:
_c91fk:
	movq %rbx,(%rbp)
	jmp _c91fl
	.size _c91fk, .-_c91fk


==================== Asm code ====================
2018-03-16 16:04:10.599066694 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91fk_info:
	.quad	_c91fk
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.599825029 UTC

.section .text
.align 8
_c91fH:
_c91fH:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movb %bl,(%rdx,%rax,1)
	movq %rcx,16(%rbp)
	incq %rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _c91ft
	.size _c91fH, .-_c91fH


==================== Asm code ====================
2018-03-16 16:04:10.600359035 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91fH_info:
	.quad	_c91fH
	.quad	323
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.60262783 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCAString_closure
.type Foreign.C.String.newCAString_closure, @object
Foreign.C.String.newCAString_closure:
	.quad	Foreign.C.String.newCAString_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.60334684 UTC

.section .text
.align 8
.globl Foreign.C.String.newCAString_entry
.type Foreign.C.String.newCAString_entry, @object
Foreign.C.String.newCAString_entry:
_c91gN:
	jmp Foreign.C.String.newCAString1_entry
	.size Foreign.C.String.newCAString_entry, .-Foreign.C.String.newCAString_entry


==================== Asm code ====================
2018-03-16 16:04:10.603882645 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCAString_info
.type Foreign.C.String.newCAString_info, @object
Foreign.C.String.newCAString_info:
	.quad	Foreign.C.String.newCAString_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S90Bc_srt+216


==================== Asm code ====================
2018-03-16 16:04:10.608860806 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCAStringLen1_closure
.type Foreign.C.String.newCAStringLen1_closure, @object
Foreign.C.String.newCAStringLen1_closure:
	.quad	Foreign.C.String.newCAStringLen1_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.609585063 UTC

.section .text
.align 8
.globl Foreign.C.String.newCAStringLen1_entry
.type Foreign.C.String.newCAStringLen1_entry, @object
Foreign.C.String.newCAStringLen1_entry:
_c91h0:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c91h1
_c91h2:
	leaq block_c91gY_info(%rip),%rax
	movq %rax,-16(%rbp)
	xorl %esi,%esi
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.List.$wlenAcc_entry@gotpcrel(%rip)
_c91h1:
	leaq Foreign.C.String.newCAStringLen1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.newCAStringLen1_entry, .-Foreign.C.String.newCAStringLen1_entry


==================== Asm code ====================
2018-03-16 16:04:10.610207951 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCAStringLen1_info
.type Foreign.C.String.newCAStringLen1_info, @object
Foreign.C.String.newCAStringLen1_info:
	.quad	Foreign.C.String.newCAStringLen1_entry
	.quad	0
	.quad	36028801313931278
	.quad	8589934597
	.quad	S90Bc_srt+40


==================== Asm code ====================
2018-03-16 16:04:10.611132315 UTC

.section .text
.align 8
_c91gY:
_c91gY:
	movq 8(%rbp),%rax
	subq $8,%rsp
	leaq 1(%rbx),%rdi
	movq %rax,%rcx
	xorl %eax,%eax
	movq %rcx,%r14
	call malloc@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c91hS
_c91hR:
	movq %r14,-16(%rbp)
	movq $0,-8(%rbp)
	movq %rax,(%rbp)
	movq %rbx,8(%rbp)
	addq $-16,%rbp
	jmp _c91hu
_c91hS:
	movq Foreign.Marshal.Alloc.malloc1_closure@gotpcrel(%rip),%rbx
	addq $16,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _c91gY, .-_c91gY


==================== Asm code ====================
2018-03-16 16:04:10.61174993 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91gY_info:
	.quad	_c91gY
	.quad	1
	.quad	4294967326
	.quad	S90Bc_srt+40


==================== Asm code ====================
2018-03-16 16:04:10.612384893 UTC

.section .text
.align 8
_c91hu:
_c91hu:
	movq (%rbp),%rax
	leaq block_c91hx_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c91hx
_c91hz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c91hu, .-_c91hu


==================== Asm code ====================
2018-03-16 16:04:10.613142059 UTC

.section .text
.align 8
_c91hx:
_c91hx:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u91i2
_c91hK:
	leaq block_c91hI_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c91hI
_c91hL:
	movq (%rbx),%rax
	jmp *(%rax)
_u91i2:
	addq $8,%rbp
	jmp _c91hk
	.size _c91hx, .-_c91hx


==================== Asm code ====================
2018-03-16 16:04:10.613752887 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91hx_info:
	.quad	_c91hx
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.614625227 UTC

.section .text
.align 8
_c91hk:
_c91hk:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c91hr
_c91hq:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c91hr:
	movq $56,904(%r13)
	leaq block_c91hk_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c91hk, .-_c91hk


==================== Asm code ====================
2018-03-16 16:04:10.615289267 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91hk_info:
	.quad	_c91hk
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.615903609 UTC

.section .text
.align 8
_c91hI:
_c91hI:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movb %bl,(%rdx,%rax,1)
	movq %rcx,8(%rbp)
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c91hu
	.size _c91hI, .-_c91hI


==================== Asm code ====================
2018-03-16 16:04:10.616445737 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91hI_info:
	.quad	_c91hI
	.quad	900
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.618817622 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.newCAStringLen_closure
.type Foreign.C.String.newCAStringLen_closure, @object
Foreign.C.String.newCAStringLen_closure:
	.quad	Foreign.C.String.newCAStringLen_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:04:10.619398547 UTC

.section .text
.align 8
.globl Foreign.C.String.newCAStringLen_entry
.type Foreign.C.String.newCAStringLen_entry, @object
Foreign.C.String.newCAStringLen_entry:
_c91iP:
	jmp Foreign.C.String.newCAStringLen1_entry
	.size Foreign.C.String.newCAStringLen_entry, .-Foreign.C.String.newCAStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:10.619932756 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.newCAStringLen_info
.type Foreign.C.String.newCAStringLen_info, @object
Foreign.C.String.newCAStringLen_info:
	.quad	Foreign.C.String.newCAStringLen_entry
	.quad	0
	.quad	4294967310
	.quad	8589934597
	.quad	S90Bc_srt+224


==================== Asm code ====================
2018-03-16 16:04:10.625610294 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCAString1_closure
.type Foreign.C.String.withCAString1_closure, @object
Foreign.C.String.withCAString1_closure:
	.quad	Foreign.C.String.withCAString1_info


==================== Asm code ====================
2018-03-16 16:04:10.626462995 UTC

.section .text
.align 8
.globl Foreign.C.String.withCAString1_entry
.type Foreign.C.String.withCAString1_entry, @object
Foreign.C.String.withCAString1_entry:
_c91j2:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c91j3
_c91j4:
	leaq block_c91j0_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	xorl %esi,%esi
	movq %r14,%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.List.$wlenAcc_entry@gotpcrel(%rip)
_c91j3:
	leaq Foreign.C.String.withCAString1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.withCAString1_entry, .-Foreign.C.String.withCAString1_entry


==================== Asm code ====================
2018-03-16 16:04:10.627117859 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCAString1_info
.type Foreign.C.String.withCAString1_info, @object
Foreign.C.String.withCAString1_info:
	.quad	Foreign.C.String.withCAString1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:04:10.62771325 UTC

.section .text
.align 8
_c91j0:
_c91j0:
	leaq block_c91jb_info(%rip),%rax
	movq %rax,(%rbp)
	movl $1,%r14d
	incq %rbx
	jmp *stg_newAlignedPinnedByteArray#@gotpcrel(%rip)
	.size _c91j0, .-_c91j0


==================== Asm code ====================
2018-03-16 16:04:10.628263123 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91j0_info:
	.quad	_c91j0
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.628917905 UTC

.section .text
.align 8
_c91jb:
_c91jb:
	movq 8(%rbp),%rax
	movq %rax,-16(%rbp)
	movq $0,-8(%rbp)
	leaq 16(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,8(%rbp)
	addq $-16,%rbp
	jmp _c91jv
	.size _c91jb, .-_c91jb


==================== Asm code ====================
2018-03-16 16:04:10.62995873 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91jb_info:
	.quad	_c91jb
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.630574218 UTC

.section .text
.align 8
_c91jv:
_c91jv:
	movq (%rbp),%rax
	leaq block_c91jy_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c91jy
_c91jA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c91jv, .-_c91jv


==================== Asm code ====================
2018-03-16 16:04:10.631320558 UTC

.section .text
.align 8
_c91jy:
_c91jy:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c91jG
_c91jL:
	leaq block_c91jJ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c91jJ
_c91jM:
	movq (%rbx),%rax
	jmp *(%rax)
_c91jG:
	movq 8(%rbp),%rax
	movq %rax,8(%rbp)
	addq $8,%rbp
	jmp _c91jk
	.size _c91jy, .-_c91jy


==================== Asm code ====================
2018-03-16 16:04:10.631957262 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91jy_info:
	.quad	_c91jy
	.quad	196
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.632672465 UTC

.section .text
.align 8
_c91jk:
_c91jk:
	addq $16,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c91jq
_c91jp:
	movq 24(%rbp),%rbx
	movq 8(%rbp),%rcx
	movb $0,(%rcx,%rax,1)
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq block_c91jn_info(%rip),%rax
	movq %rax,8(%rbp)
	leaq -7(%r12),%r14
	addq $8,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
_c91jq:
	movq $16,904(%r13)
	leaq block_c91jj_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c91jk, .-_c91jk


==================== Asm code ====================
2018-03-16 16:04:10.633539344 UTC

.section .text
.align 8
_c91jj:
_c91jj:
	movq %rbx,(%rbp)
	jmp _c91jk
	.size _c91jj, .-_c91jj


==================== Asm code ====================
2018-03-16 16:04:10.634054213 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91jj_info:
	.quad	_c91jj
	.quad	67
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.634685214 UTC

.section .text
.align 8
_c91jn:
_c91jn:
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c91jn, .-_c91jn


==================== Asm code ====================
2018-03-16 16:04:10.635231486 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91jn_info:
	.quad	_c91jn
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.635855414 UTC

.section .text
.align 8
_c91jJ:
_c91jJ:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movb %bl,(%rdx,%rax,1)
	movq %rcx,8(%rbp)
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c91jv
	.size _c91jJ, .-_c91jJ


==================== Asm code ====================
2018-03-16 16:04:10.63640465 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91jJ_info:
	.quad	_c91jJ
	.quad	389
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.638490972 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCAString_closure
.type Foreign.C.String.withCAString_closure, @object
Foreign.C.String.withCAString_closure:
	.quad	Foreign.C.String.withCAString_info


==================== Asm code ====================
2018-03-16 16:04:10.639096724 UTC

.section .text
.align 8
.globl Foreign.C.String.withCAString_entry
.type Foreign.C.String.withCAString_entry, @object
Foreign.C.String.withCAString_entry:
_c91kX:
	jmp Foreign.C.String.withCAString1_entry
	.size Foreign.C.String.withCAString_entry, .-Foreign.C.String.withCAString_entry


==================== Asm code ====================
2018-03-16 16:04:10.639622649 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCAString_info
.type Foreign.C.String.withCAString_info, @object
Foreign.C.String.withCAString_info:
	.quad	Foreign.C.String.withCAString_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:04:10.645451799 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCAStringLen1_closure
.type Foreign.C.String.withCAStringLen1_closure, @object
Foreign.C.String.withCAStringLen1_closure:
	.quad	Foreign.C.String.withCAStringLen1_info


==================== Asm code ====================
2018-03-16 16:04:10.646121601 UTC

.section .text
.align 8
.globl Foreign.C.String.withCAStringLen1_entry
.type Foreign.C.String.withCAStringLen1_entry, @object
Foreign.C.String.withCAStringLen1_entry:
_c91la:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c91lb
_c91lc:
	leaq block_c91l8_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	xorl %esi,%esi
	movq %r14,%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.List.$wlenAcc_entry@gotpcrel(%rip)
_c91lb:
	leaq Foreign.C.String.withCAStringLen1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Foreign.C.String.withCAStringLen1_entry, .-Foreign.C.String.withCAStringLen1_entry


==================== Asm code ====================
2018-03-16 16:04:10.6467567 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCAStringLen1_info
.type Foreign.C.String.withCAStringLen1_info, @object
Foreign.C.String.withCAStringLen1_info:
	.quad	Foreign.C.String.withCAStringLen1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:04:10.647355469 UTC

.section .text
.align 8
_c91l8:
_c91l8:
	leaq block_c91lf_info(%rip),%rax
	movq %rax,-8(%rbp)
	movl $1,%r14d
	movq %rbx,%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_newAlignedPinnedByteArray#@gotpcrel(%rip)
	.size _c91l8, .-_c91l8


==================== Asm code ====================
2018-03-16 16:04:10.647925483 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91l8_info:
	.quad	_c91l8
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.648695705 UTC

.section .text
.align 8
_c91lf:
_c91lf:
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	movq $0,-8(%rbp)
	leaq 16(%rbx),%rax
	movq %rax,(%rbp)
	movq %rbx,16(%rbp)
	addq $-16,%rbp
	jmp _c91lC
	.size _c91lf, .-_c91lf


==================== Asm code ====================
2018-03-16 16:04:10.649263153 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91lf_info:
	.quad	_c91lf
	.quad	67
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.649919057 UTC

.section .text
.align 8
_c91lC:
_c91lC:
	movq (%rbp),%rax
	leaq block_c91lF_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c91lF
_c91lH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c91lC, .-_c91lC


==================== Asm code ====================
2018-03-16 16:04:10.650624974 UTC

.section .text
.align 8
_c91lF:
_c91lF:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u91m8
_c91lS:
	leaq block_c91lQ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c91lQ
_c91lT:
	movq (%rbx),%rax
	jmp *(%rax)
_u91m8:
	addq $8,%rbp
	jmp _c91lp
	.size _c91lF, .-_c91lF


==================== Asm code ====================
2018-03-16 16:04:10.651287345 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91lF_info:
	.quad	_c91lF
	.quad	453
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.652168876 UTC

.section .text
.align 8
_c91lp:
_c91lp:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c91lx
_c91lw:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq GHC.Ptr.Ptr_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -47(%r12),%rax
	movq %rax,(%r12)
	leaq block_c91lu_info(%rip),%rax
	movq %rax,16(%rbp)
	leaq -15(%r12),%r14
	movq 32(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_pv_fast@gotpcrel(%rip)
_c91lx:
	movq $56,904(%r13)
	leaq block_c91lp_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c91lp, .-_c91lp


==================== Asm code ====================
2018-03-16 16:04:10.652847622 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91lp_info:
	.quad	_c91lp
	.quad	196
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.653757886 UTC

.section .text
.align 8
_c91lu:
_c91lu:
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c91lu, .-_c91lu


==================== Asm code ====================
2018-03-16 16:04:10.65429646 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91lu_info:
	.quad	_c91lu
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.654944425 UTC

.section .text
.align 8
_c91lQ:
_c91lQ:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 7(%rbx),%rbx
	movq 24(%rbp),%rdx
	movb %bl,(%rdx,%rax,1)
	movq %rcx,8(%rbp)
	incq %rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _c91lC
	.size _c91lQ, .-_c91lQ


==================== Asm code ====================
2018-03-16 16:04:10.655656471 UTC

.section .data.rel.ro
.align 8
.align 1
block_c91lQ_info:
	.quad	_c91lQ
	.quad	902
	.quad	30


==================== Asm code ====================
2018-03-16 16:04:10.657670573 UTC

.section .data
.align 8
.align 1
.globl Foreign.C.String.withCAStringLen_closure
.type Foreign.C.String.withCAStringLen_closure, @object
Foreign.C.String.withCAStringLen_closure:
	.quad	Foreign.C.String.withCAStringLen_info


==================== Asm code ====================
2018-03-16 16:04:10.658269952 UTC

.section .text
.align 8
.globl Foreign.C.String.withCAStringLen_entry
.type Foreign.C.String.withCAStringLen_entry, @object
Foreign.C.String.withCAStringLen_entry:
_c91n5:
	jmp Foreign.C.String.withCAStringLen1_entry
	.size Foreign.C.String.withCAStringLen_entry, .-Foreign.C.String.withCAStringLen_entry


==================== Asm code ====================
2018-03-16 16:04:10.658790636 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Foreign.C.String.withCAStringLen_info
.type Foreign.C.String.withCAStringLen_info, @object
Foreign.C.String.withCAStringLen_info:
	.quad	Foreign.C.String.withCAStringLen_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:04:10.660798364 UTC

.section .data.rel.ro
.align 8
.align 1
S90Bc_srt:
	.quad	GHC.IO.Encoding.getForeignEncoding_closure
	.quad	Foreign.C.String.withCStringLen1_closure
	.quad	Foreign.C.String.withCString1_closure
	.quad	GHC.Foreign.charIsRepresentable1_closure
	.quad	Foreign.C.String.charIsRepresentable1_closure
	.quad	Foreign.Marshal.Alloc.malloc1_closure
	.quad	Foreign.Marshal.Alloc.realloc2_closure
	.quad	Foreign.C.String.newCStringLen1_closure
	.quad	GHC.Foreign.newCString1_closure
	.quad	Foreign.C.String.newCString1_closure
	.quad	GHC.ForeignPtr.mallocForeignPtrBytes2_closure
	.quad	Foreign.C.String.peekCStringLen1_closure
	.quad	GHC.Foreign.peekCString1_closure
	.quad	Foreign.C.String.peekCString1_closure
	.quad	GHC.Char.$wlvl_closure
	.quad	Foreign.C.String.castCWcharToChar_closure
	.quad	Foreign.C.String.peekCWString2_closure
	.quad	Foreign.C.String.$wpeekCWStringLen_closure
	.quad	Foreign.C.String.peekCWStringLen1_closure
	.quad	Foreign.C.String.$wpeekCWString_closure
	.quad	Foreign.C.String.peekCWString1_closure
	.quad	Foreign.Marshal.Array.withArrayLen0_closure
	.quad	Foreign.C.String.withCWString_closure
	.quad	Foreign.Marshal.Array.newArray3_closure
	.quad	Foreign.C.String.newCWString1_closure
	.quad	Foreign.Marshal.Array.newArray1_closure
	.quad	Foreign.C.String.newCWStringLen1_closure
	.quad	Foreign.C.String.newCAString1_closure
	.quad	Foreign.C.String.newCAStringLen1_closure

