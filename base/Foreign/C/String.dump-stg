
==================== Pre unarise: ====================
2018-03-16 16:04:07.36117917 UTC

Foreign.C.String.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Foreign.C.String.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.String.$trModule4];

Foreign.C.String.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.C.String"#;

Foreign.C.String.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.String.$trModule2];

Foreign.C.String.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.C.String.$trModule3
                                     Foreign.C.String.$trModule1];

Foreign.C.String.withCStringLen1
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CStringLen -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Str=<L,U><L,C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [s_s8Ypb f_s8Ypc s1_s8Ypd]
        case GHC.IO.Encoding.getForeignEncoding s1_s8Ypd of {
          (#,#) ipv_s8Ypf [Occ=Once] ipv1_s8Ypg [Occ=Once!] ->
              case ipv1_s8Ypg of {
                GHC.IO.Encoding.Types.TextEncoding _ [Occ=Dead]
                                                   _ [Occ=Dead]
                                                   ds4_s8Ypk [Occ=Once] ->
                    let {
                      sat_s8Yql [Occ=Once]
                        :: GHC.IO.Encoding.Types.TextEncoder estate_a8RVZ
                           -> GHC.Types.IO a_a8X7M
                      [LclId] =
                          [s_s8Ypb f_s8Ypc] \r [encoder_s8Ypl eta1_s8Ypm]
                              case GHC.List.$wlenAcc s_s8Ypb 0# of ww2_s8Ypn {
                                __DEFAULT ->
                                    case *# [ww2_s8Ypn 4#] of sat_s8Ypo {
                                      __DEFAULT ->
                                          case
                                              newAlignedPinnedByteArray# [sat_s8Ypo 4# eta1_s8Ypm]
                                          of
                                          { (#,#) ipv2_s8Ypq [Occ=Once] ipv3_s8Ypr [Occ=Once] ->
                                                case
                                                    unsafeFreezeByteArray# [ipv3_s8Ypr ipv2_s8Ypq]
                                                of
                                                { (#,#) ipv4_s8Ypt [Occ=Once] ipv5_s8Ypu ->
                                                      case
                                                          byteArrayContents# [ipv5_s8Ypu]
                                                      of
                                                      ptr_s8Ypv
                                                      { __DEFAULT ->
                                                            let-no-escape {
                                                              $w$j_s8Ypw [InlPrag=NOUSERINLINE[0],
                                                                          Occ=OnceL!T[1],
                                                                          Dmd=<C(S),C(U)>]
                                                                :: GHC.Prim.State#
                                                                     GHC.Prim.RealWorld
                                                                   -> (# GHC.Prim.State#
                                                                           GHC.Prim.RealWorld,
                                                                         a_a8X7M #)
                                                              [LclId[JoinId(1)],
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [f_s8Ypc
                                                                            encoder_s8Ypl
                                                                            ww2_s8Ypn
                                                                            ipv5_s8Ypu
                                                                            ptr_s8Ypv] \r [w_s8Ypx]
                                                                      case
                                                                          newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                                                      w_s8Ypx]
                                                                      of
                                                                      { (#,#) ipv6_s8Ypz [Occ=Once]
                                                                              ipv7_s8YpA [Occ=OnceL] ->
                                                                            let {
                                                                              ipv8_s8YpB [Occ=OnceL]
                                                                                :: GHC.ForeignPtr.ForeignPtrContents
                                                                              [LclId,
                                                                               Unf=OtherCon []] =
                                                                                  CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv7_s8YpA]; } in
                                                                            let {
                                                                              ipv9_s8YpC [Occ=OnceL]
                                                                                :: GHC.IO.Buffer.Buffer
                                                                                     GHC.Types.Char
                                                                              [LclId,
                                                                               Unf=OtherCon []] =
                                                                                  CCCS GHC.IO.Buffer.Buffer! [ptr_s8Ypv
                                                                                                              ipv8_s8YpB
                                                                                                              GHC.IO.Buffer.ReadBuffer
                                                                                                              ww2_s8Ypn
                                                                                                              0#
                                                                                                              ww2_s8Ypn]; } in
                                                                            let {
                                                                              $wgo_s8YpD [InlPrag=NOUSERINLINE[0],
                                                                                          Occ=LoopBreaker]
                                                                                :: GHC.Prim.Int#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld,
                                                                                         a_a8X7M #)
                                                                              [LclId,
                                                                               Arity=2,
                                                                               Str=<S,U><S,U>,
                                                                               Unf=OtherCon []] =
                                                                                  sat-only [f_s8Ypc
                                                                                            encoder_s8Ypl
                                                                                            ipv9_s8YpC
                                                                                            $wgo_s8YpD] \r [ww_s8YpE
                                                                                                            w1_s8YpF]
                                                                                      case
                                                                                          newPinnedByteArray# [ww_s8YpE
                                                                                                               w1_s8YpF]
                                                                                      of
                                                                                      { (#,#) ipv10_s8YpH [Occ=Once]
                                                                                              ipv11_s8YpI [Occ=Once] ->
                                                                                            case
                                                                                                unsafeFreezeByteArray# [ipv11_s8YpI
                                                                                                                        ipv10_s8YpH]
                                                                                            of
                                                                                            { (#,#) ipv12_s8YpK [Occ=Once]
                                                                                                    ipv13_s8YpL ->
                                                                                                  case
                                                                                                      encoder_s8Ypl
                                                                                                  of
                                                                                                  { GHC.IO.Encoding.Types.BufferCodec ww3_s8YpN [Occ=Once]
                                                                                                                                      ww4_s8YpO [Occ=Once]
                                                                                                                                      _ [Occ=Dead]
                                                                                                                                      _ [Occ=Dead]
                                                                                                                                      _ [Occ=Dead] ->
                                                                                                        let {
                                                                                                          sat_s8YpT [Occ=Once]
                                                                                                            :: GHC.Types.Int
                                                                                                          [LclId] =
                                                                                                              CCCS GHC.Types.I#! [ww_s8YpE];
                                                                                                        } in 
                                                                                                          case
                                                                                                              byteArrayContents# [ipv13_s8YpL]
                                                                                                          of
                                                                                                          sat_s8YpS
                                                                                                          { __DEFAULT ->
                                                                                                                case
                                                                                                                    GHC.Foreign.$wtryFillBufferAndCall
                                                                                                                        ww3_s8YpN
                                                                                                                        ww4_s8YpO
                                                                                                                        GHC.Types.False
                                                                                                                        ipv9_s8YpC
                                                                                                                        sat_s8YpS
                                                                                                                        sat_s8YpT
                                                                                                                        f_s8Ypc
                                                                                                                        ipv12_s8YpK
                                                                                                                of
                                                                                                                { (#,#) ipv14_s8YpV [Occ=Once*]
                                                                                                                        ipv15_s8YpW [Occ=Once!] ->
                                                                                                                      case
                                                                                                                          ipv15_s8YpW
                                                                                                                      of
                                                                                                                      { GHC.Base.Nothing ->
                                                                                                                            case
                                                                                                                                *# [ww_s8YpE
                                                                                                                                    2#]
                                                                                                                            of
                                                                                                                            sat_s8YpY
                                                                                                                            { __DEFAULT ->
                                                                                                                                  case
                                                                                                                                      $wgo_s8YpD
                                                                                                                                          sat_s8YpY
                                                                                                                                          ipv14_s8YpV
                                                                                                                                  of
                                                                                                                                  { (#,#) ipv16_s8Yq0 [Occ=Once]
                                                                                                                                          ipv17_s8Yq1 [Occ=Once] ->
                                                                                                                                        case
                                                                                                                                            touch# [ipv13_s8YpL
                                                                                                                                                    ipv16_s8Yq0]
                                                                                                                                        of
                                                                                                                                        s4_s8Yq2
                                                                                                                                        { __DEFAULT ->
                                                                                                                                              (#,#) [s4_s8Yq2
                                                                                                                                                     ipv17_s8Yq1];
                                                                                                                                        };
                                                                                                                                  };
                                                                                                                            };
                                                                                                                        GHC.Base.Just res_s8Yq3 [Occ=Once] ->
                                                                                                                            case
                                                                                                                                touch# [ipv13_s8YpL
                                                                                                                                        ipv14_s8YpV]
                                                                                                                            of
                                                                                                                            s4_s8Yq4
                                                                                                                            { __DEFAULT ->
                                                                                                                                  (#,#) [s4_s8Yq4
                                                                                                                                         res_s8Yq3];
                                                                                                                            };
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                            } in 
                                                                              case
                                                                                  +# [ww2_s8Ypn 1#]
                                                                              of
                                                                              sat_s8Yq5
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        $wgo_s8YpD
                                                                                            sat_s8Yq5
                                                                                            ipv6_s8Ypz
                                                                                    of
                                                                                    { (#,#) ipv10_s8Yq7 [Occ=Once]
                                                                                            ipv11_s8Yq8 [Occ=Once] ->
                                                                                          case
                                                                                              touch# [ipv5_s8Ypu
                                                                                                      ipv10_s8Yq7]
                                                                                          of
                                                                                          s4_s8Yq9
                                                                                          { __DEFAULT ->
                                                                                                (#,#) [s4_s8Yq9
                                                                                                       ipv11_s8Yq8];
                                                                                          };
                                                                                    };
                                                                              };
                                                                      };
                                                            } in 
                                                              let-no-escape {
                                                                go_s8Yqa [Occ=LoopBreakerT[3]]
                                                                  :: [GHC.Types.Char]
                                                                     -> GHC.Prim.Int#
                                                                     -> GHC.Prim.State#
                                                                          GHC.Prim.RealWorld
                                                                     -> (# GHC.Prim.State#
                                                                             GHC.Prim.RealWorld,
                                                                           a_a8X7M #)
                                                                [LclId[JoinId(3)],
                                                                 Arity=3,
                                                                 Str=<S,1*U><L,U><S,U>,
                                                                 Unf=OtherCon []] =
                                                                    sat-only [ptr_s8Ypv
                                                                              $w$j_s8Ypw
                                                                              go_s8Yqa] \r [ds7_s8Yqb
                                                                                            ds8_s8Yqc
                                                                                            eta2_s8Yqd]
                                                                        case ds7_s8Yqb of {
                                                                          [] ->
                                                                              $w$j_s8Ypw eta2_s8Yqd;
                                                                          : val_s8Yqf [Occ=Once!]
                                                                            vals_s8Yqg [Occ=Once] ->
                                                                              case val_s8Yqf of {
                                                                                GHC.Types.C# x_s8Yqi [Occ=Once] ->
                                                                                    case
                                                                                        writeWideCharOffAddr# [ptr_s8Ypv
                                                                                                               ds8_s8Yqc
                                                                                                               x_s8Yqi
                                                                                                               eta2_s8Yqd]
                                                                                    of
                                                                                    s2_s8Yqj
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              +# [ds8_s8Yqc
                                                                                                  1#]
                                                                                          of
                                                                                          sat_s8Yqk
                                                                                          { __DEFAULT ->
                                                                                                go_s8Yqa
                                                                                                    vals_s8Yqg
                                                                                                    sat_s8Yqk
                                                                                                    s2_s8Yqj;
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                              } in  go_s8Yqa s_s8Ypb 0# ipv4_s8Ypt;
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.bracket1
                          ds4_s8Ypk GHC.IO.Encoding.Types.close sat_s8Yql ipv_s8Ypf;
              };
        };

Foreign.C.String.withCStringLen
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CStringLen -> GHC.Types.IO a)
     -> GHC.Types.IO a
[GblId,
 Arity=3,
 Str=<L,U><L,C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.C.String.withCStringLen1 eta_B3 eta_B2 eta_B1;

Foreign.C.String.withCString1
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CString -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Str=<L,U><L,C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [s_s8Yqm f_s8Yqn s1_s8Yqo]
        case GHC.IO.Encoding.getForeignEncoding s1_s8Yqo of {
          (#,#) ipv_s8Yqq [Occ=Once] ipv1_s8Yqr [Occ=Once] ->
              GHC.Foreign.charIsRepresentable3
                  ipv1_s8Yqr s_s8Yqm f_s8Yqn ipv_s8Yqq;
        };

Foreign.C.String.withCString
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CString -> GHC.Types.IO a) -> GHC.Types.IO a
[GblId,
 Arity=3,
 Str=<L,U><L,C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.C.String.withCString1 eta_B3 eta_B2 eta_B1;

Foreign.C.String.charIsRepresentable1
  :: GHC.Types.Char
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=2, Str=<L,U(U)><S,U>, Unf=OtherCon []] =
    [] \r [c_s8Yqs s_s8Yqt]
        case GHC.IO.Encoding.getForeignEncoding s_s8Yqt of {
          (#,#) ipv_s8Yqv [Occ=Once] ipv1_s8Yqw [Occ=Once] ->
              GHC.Foreign.charIsRepresentable1 ipv1_s8Yqw c_s8Yqs ipv_s8Yqv;
        };

Foreign.C.String.charIsRepresentable
  :: GHC.Types.Char -> GHC.Types.IO GHC.Types.Bool
[GblId, Arity=2, Str=<L,U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.String.charIsRepresentable1 eta_B2 eta_B1;

Foreign.C.String.newCStringLen2 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

Foreign.C.String.newCStringLen1
  :: GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Foreign.CStringLen #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [s_s8Yqx s1_s8Yqy]
        case GHC.IO.Encoding.getForeignEncoding s1_s8Yqy of {
          (#,#) ipv_s8YqA [Occ=Once] ipv1_s8YqB [Occ=Once!] ->
              case ipv1_s8YqB of {
                GHC.IO.Encoding.Types.TextEncoding _ [Occ=Dead]
                                                   _ [Occ=Dead]
                                                   ds4_s8YqF [Occ=Once] ->
                    let {
                      sat_s8YsE [Occ=Once]
                        :: GHC.IO.Encoding.Types.TextEncoder estate_a8RYT
                           -> GHC.Types.IO GHC.Foreign.CStringLen
                      [LclId] =
                          [s_s8Yqx] \r [encoder_s8YqG eta1_s8YqH]
                              case GHC.List.$wlenAcc s_s8Yqx 0# of ww2_s8YqI {
                                __DEFAULT ->
                                    case *# [ww2_s8YqI 4#] of sat_s8YqJ {
                                      __DEFAULT ->
                                          case
                                              newAlignedPinnedByteArray# [sat_s8YqJ 4# eta1_s8YqH]
                                          of
                                          { (#,#) ipv2_s8YqL [Occ=Once] ipv3_s8YqM [Occ=Once] ->
                                                case
                                                    unsafeFreezeByteArray# [ipv3_s8YqM ipv2_s8YqL]
                                                of
                                                { (#,#) ipv4_s8YqO [Occ=Once] ipv5_s8YqP ->
                                                      case
                                                          byteArrayContents# [ipv5_s8YqP]
                                                      of
                                                      ptr_s8YqQ
                                                      { __DEFAULT ->
                                                            let-no-escape {
                                                              $w$j_s8YqR [InlPrag=NOUSERINLINE[0],
                                                                          Occ=OnceL!T[1],
                                                                          Dmd=<C(S),C(U)>]
                                                                :: GHC.Prim.State#
                                                                     GHC.Prim.RealWorld
                                                                   -> (# GHC.Prim.State#
                                                                           GHC.Prim.RealWorld,
                                                                         GHC.Foreign.CStringLen #)
                                                              [LclId[JoinId(1)],
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [encoder_s8YqG
                                                                            ww2_s8YqI
                                                                            ipv5_s8YqP
                                                                            ptr_s8YqQ] \r [w_s8YqS]
                                                                      case
                                                                          newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                                                      w_s8YqS]
                                                                      of
                                                                      { (#,#) ipv6_s8YqU [Occ=Once]
                                                                              ipv7_s8YqV [Occ=OnceL] ->
                                                                            case
                                                                                +# [ww2_s8YqI 1#]
                                                                            of
                                                                            to_sz_bytes_s8YqW [Dmd=<S,U>]
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      int2Word# [to_sz_bytes_s8YqW]
                                                                                  of
                                                                                  sat_s8YqY
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            __pkg_ccall base-4.11.0.0 [sat_s8YqY
                                                                                                                       ipv6_s8YqU]
                                                                                        of
                                                                                        { (#,#) ds8_s8Yr0 [Occ=Once*]
                                                                                                ds9_s8Yr1 ->
                                                                                              case
                                                                                                  eqAddr# [ds9_s8Yr1
                                                                                                           __NULL]
                                                                                              of
                                                                                              { __DEFAULT ->
                                                                                                    let {
                                                                                                      ipv8_s8Yr3 [Occ=OnceL]
                                                                                                        :: GHC.ForeignPtr.ForeignPtrContents
                                                                                                      [LclId,
                                                                                                       Unf=OtherCon []] =
                                                                                                          CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv7_s8YqV]; } in
                                                                                                    let {
                                                                                                      ipv9_s8Yr4 [Occ=OnceL]
                                                                                                        :: GHC.IO.Buffer.Buffer
                                                                                                             GHC.Types.Char
                                                                                                      [LclId,
                                                                                                       Unf=OtherCon []] =
                                                                                                          CCCS GHC.IO.Buffer.Buffer! [ptr_s8YqQ
                                                                                                                                      ipv8_s8Yr3
                                                                                                                                      GHC.IO.Buffer.ReadBuffer
                                                                                                                                      ww2_s8YqI
                                                                                                                                      0#
                                                                                                                                      ww2_s8YqI]; } in
                                                                                                    let {
                                                                                                      sat_s8Ysr [Occ=Once]
                                                                                                        :: GHC.Types.Int
                                                                                                      [LclId] =
                                                                                                          CCCS GHC.Types.I#! [to_sz_bytes_s8YqW];
                                                                                                    } in 
                                                                                                      let-no-escape {
                                                                                                        $j_s8Yr5 [Occ=OnceL!T[2],
                                                                                                                  Dmd=<L,C(C1(U))>]
                                                                                                          :: GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                             -> GHC.Foreign.CStringLen
                                                                                                             -> (# GHC.Prim.State#
                                                                                                                     GHC.Prim.RealWorld,
                                                                                                                   GHC.Foreign.CStringLen #)
                                                                                                        [LclId[JoinId(2)],
                                                                                                         Arity=2,
                                                                                                         Str=<S,U><L,U>,
                                                                                                         Unf=OtherCon []] =
                                                                                                            sat-only [ipv5_s8YqP] \r [ipv10_s8Yr6
                                                                                                                                      ipv11_s8Yr7]
                                                                                                                case
                                                                                                                    touch# [ipv5_s8YqP
                                                                                                                            ipv10_s8Yr6]
                                                                                                                of
                                                                                                                s4_s8Yr8
                                                                                                                { __DEFAULT ->
                                                                                                                      (#,#) [s4_s8Yr8
                                                                                                                             ipv11_s8Yr7];
                                                                                                                };
                                                                                                      } in 
                                                                                                        let-no-escape {
                                                                                                          $wgo_s8Yr9 [InlPrag=NOUSERINLINE[0],
                                                                                                                      Occ=LoopBreakerT[3]]
                                                                                                            :: GHC.Prim.Addr#
                                                                                                               -> GHC.Types.Int
                                                                                                               -> GHC.Prim.State#
                                                                                                                    GHC.Prim.RealWorld
                                                                                                               -> (# GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld,
                                                                                                                     GHC.Foreign.CStringLen #)
                                                                                                          [LclId[JoinId(3)],
                                                                                                           Arity=3,
                                                                                                           Str=<L,U><L,U(U)><S,U>,
                                                                                                           Unf=OtherCon []] =
                                                                                                              sat-only [encoder_s8YqG
                                                                                                                        ipv9_s8Yr4
                                                                                                                        $j_s8Yr5
                                                                                                                        $wgo_s8Yr9] \r [ww_s8Yra
                                                                                                                                        w1_s8Yrb
                                                                                                                                        w2_s8Yrc]
                                                                                                                  case
                                                                                                                      encoder_s8YqG
                                                                                                                  of
                                                                                                                  { GHC.IO.Encoding.Types.BufferCodec ww3_s8Yre [Occ=OnceL!]
                                                                                                                                                      ww4_s8Yrf [Occ=OnceL!]
                                                                                                                                                      _ [Occ=Dead]
                                                                                                                                                      _ [Occ=Dead]
                                                                                                                                                      _ [Occ=Dead] ->
                                                                                                                        case
                                                                                                                            newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                                                                                                        w2_s8Yrc]
                                                                                                                        of
                                                                                                                        { (#,#) ipv12_s8Yrk [Occ=Once]
                                                                                                                                ipv13_s8Yrl [Occ=Once] ->
                                                                                                                              let {
                                                                                                                                sat_s8Ysq [Occ=Once]
                                                                                                                                  :: GHC.IO.Buffer.Buffer
                                                                                                                                       GHC.Word.Word8
                                                                                                                                [LclId] =
                                                                                                                                    [ww_s8Yra
                                                                                                                                     w1_s8Yrb
                                                                                                                                     ipv13_s8Yrl] \u []
                                                                                                                                        case
                                                                                                                                            w1_s8Yrb
                                                                                                                                        of
                                                                                                                                        { GHC.Types.I# dt4_s8Yso [Occ=Once] ->
                                                                                                                                              let {
                                                                                                                                                sat_s8Ysp [Occ=Once]
                                                                                                                                                  :: GHC.ForeignPtr.ForeignPtrContents
                                                                                                                                                [LclId] =
                                                                                                                                                    CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv13_s8Yrl];
                                                                                                                                              } in 
                                                                                                                                                GHC.IO.Buffer.Buffer [ww_s8Yra
                                                                                                                                                                      sat_s8Ysp
                                                                                                                                                                      GHC.IO.Buffer.WriteBuffer
                                                                                                                                                                      dt4_s8Yso
                                                                                                                                                                      0#
                                                                                                                                                                      0#];
                                                                                                                                        };
                                                                                                                              } in 
                                                                                                                                let-no-escape {
                                                                                                                                  $j1_s8Yrm [Dmd=<L,C(C1(U))>]
                                                                                                                                    :: GHC.Prim.State#
                                                                                                                                         GHC.Prim.RealWorld
                                                                                                                                       -> GHC.Base.Maybe
                                                                                                                                            GHC.Foreign.CStringLen
                                                                                                                                       -> (# GHC.Prim.State#
                                                                                                                                               GHC.Prim.RealWorld,
                                                                                                                                             GHC.Foreign.CStringLen #)
                                                                                                                                  [LclId[JoinId(2)],
                                                                                                                                   Arity=2,
                                                                                                                                   Str=<S,U><S,1*U>,
                                                                                                                                   Unf=OtherCon []] =
                                                                                                                                      sat-only [$j_s8Yr5
                                                                                                                                                $wgo_s8Yr9
                                                                                                                                                ww_s8Yra
                                                                                                                                                w1_s8Yrb] \r [ipv10_s8Yrn
                                                                                                                                                              ipv11_s8Yro]
                                                                                                                                          case
                                                                                                                                              ipv11_s8Yro
                                                                                                                                          of
                                                                                                                                          { GHC.Base.Nothing ->
                                                                                                                                                case
                                                                                                                                                    w1_s8Yrb
                                                                                                                                                of
                                                                                                                                                { GHC.Types.I# x_s8Yrr [Occ=Once] ->
                                                                                                                                                      case
                                                                                                                                                          *# [x_s8Yrr
                                                                                                                                                              2#]
                                                                                                                                                      of
                                                                                                                                                      ds_s8Yrs
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            case
                                                                                                                                                                int2Word# [ds_s8Yrs]
                                                                                                                                                            of
                                                                                                                                                            sat_s8Yru
                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                  case
                                                                                                                                                                      __pkg_ccall base-4.11.0.0 [ww_s8Yra
                                                                                                                                                                                                 sat_s8Yru
                                                                                                                                                                                                 ipv10_s8Yrn]
                                                                                                                                                                  of
                                                                                                                                                                  { (#,#) ds11_s8Yrw [Occ=Once*]
                                                                                                                                                                          ds12_s8Yrx ->
                                                                                                                                                                        case
                                                                                                                                                                            eqAddr# [ds12_s8Yrx
                                                                                                                                                                                     __NULL]
                                                                                                                                                                        of
                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                              let {
                                                                                                                                                                                sat_s8Yrz [Occ=Once]
                                                                                                                                                                                  :: GHC.Types.Int
                                                                                                                                                                                [LclId] =
                                                                                                                                                                                    CCCS GHC.Types.I#! [ds_s8Yrs];
                                                                                                                                                                              } in 
                                                                                                                                                                                $wgo_s8Yr9
                                                                                                                                                                                    ds12_s8Yrx
                                                                                                                                                                                    sat_s8Yrz
                                                                                                                                                                                    ds11_s8Yrw;
                                                                                                                                                                          1# ->
                                                                                                                                                                              raiseIO# [Foreign.Marshal.Alloc.realloc2
                                                                                                                                                                                        ds11_s8Yrw];
                                                                                                                                                                        };
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                        0# ->
                                                                                                                                                            case
                                                                                                                                                                __pkg_ccall base-4.11.0.0 [ww_s8Yra
                                                                                                                                                                                           ipv10_s8Yrn]
                                                                                                                                                            of
                                                                                                                                                            { Unit# ds11_s8YrD [Occ=Once] ->
                                                                                                                                                                  $wgo_s8Yr9
                                                                                                                                                                      __NULL
                                                                                                                                                                      Foreign.C.String.newCStringLen2
                                                                                                                                                                      ds11_s8YrD;
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                            GHC.Base.Just res_s8YrE [Occ=Once] ->
                                                                                                                                                $j_s8Yr5
                                                                                                                                                    ipv10_s8Yrn
                                                                                                                                                    res_s8YrE;
                                                                                                                                          };
                                                                                                                                } in 
                                                                                                                                  let-no-escape {
                                                                                                                                    exit_s8YrF [Occ=OnceL!T[1],
                                                                                                                                                Dmd=<L,C(U)>]
                                                                                                                                      :: GHC.Prim.State#
                                                                                                                                           GHC.Prim.RealWorld
                                                                                                                                         -> (# GHC.Prim.State#
                                                                                                                                                 GHC.Prim.RealWorld,
                                                                                                                                               GHC.Foreign.CStringLen #)
                                                                                                                                    [LclId[JoinId(1)],
                                                                                                                                     Arity=1,
                                                                                                                                     Str=<S,U>,
                                                                                                                                     Unf=OtherCon []] =
                                                                                                                                        sat-only [$j1_s8Yrm] \r [ipv14_s8YrG]
                                                                                                                                            $j1_s8Yrm
                                                                                                                                                ipv14_s8YrG
                                                                                                                                                GHC.Base.Nothing;
                                                                                                                                  } in 
                                                                                                                                    let-no-escape {
                                                                                                                                      exit1_s8YrH [Occ=OnceL!T[2],
                                                                                                                                                   Dmd=<L,C(C1(U))>]
                                                                                                                                        :: GHC.Prim.State#
                                                                                                                                             GHC.Prim.RealWorld
                                                                                                                                           -> GHC.IO.Buffer.Buffer
                                                                                                                                                GHC.Word.Word8
                                                                                                                                           -> (# GHC.Prim.State#
                                                                                                                                                   GHC.Prim.RealWorld,
                                                                                                                                                 GHC.Foreign.CStringLen #)
                                                                                                                                      [LclId[JoinId(2)],
                                                                                                                                       Arity=2,
                                                                                                                                       Str=<S,U><S,1*U(U,U,A,A,U,U)>,
                                                                                                                                       Unf=OtherCon []] =
                                                                                                                                          sat-only [$j1_s8Yrm] \r [ipv14_s8YrI
                                                                                                                                                                   to'_s8YrJ]
                                                                                                                                              case
                                                                                                                                                  to'_s8YrJ
                                                                                                                                              of
                                                                                                                                              { GHC.IO.Buffer.Buffer ww9_s8YrL [Occ=Once]
                                                                                                                                                                     ww10_s8YrM [Occ=Once]
                                                                                                                                                                     _ [Occ=Dead]
                                                                                                                                                                     _ [Occ=Dead]
                                                                                                                                                                     ww13_s8YrP [Occ=Once]
                                                                                                                                                                     ww14_s8YrQ [Occ=Once] ->
                                                                                                                                                    case
                                                                                                                                                        touch# [ww10_s8YrM
                                                                                                                                                                ipv14_s8YrI]
                                                                                                                                                    of
                                                                                                                                                    s'_s8YrR
                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                          case
                                                                                                                                                              -# [ww14_s8YrQ
                                                                                                                                                                  ww13_s8YrP]
                                                                                                                                                          of
                                                                                                                                                          sat_s8YrT
                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                let {
                                                                                                                                                                  sat_s8YrU [Occ=Once]
                                                                                                                                                                    :: GHC.Types.Int
                                                                                                                                                                  [LclId] =
                                                                                                                                                                      CCCS GHC.Types.I#! [sat_s8YrT]; } in
                                                                                                                                                                let {
                                                                                                                                                                  sat_s8YrS [Occ=Once]
                                                                                                                                                                    :: GHC.Ptr.Ptr
                                                                                                                                                                         Foreign.C.Types.CChar
                                                                                                                                                                  [LclId] =
                                                                                                                                                                      CCCS GHC.Ptr.Ptr! [ww9_s8YrL]; } in
                                                                                                                                                                let {
                                                                                                                                                                  sat_s8YrV [Occ=Once]
                                                                                                                                                                    :: GHC.Foreign.CStringLen
                                                                                                                                                                  [LclId] =
                                                                                                                                                                      CCCS (,)! [sat_s8YrS
                                                                                                                                                                                 sat_s8YrU]; } in
                                                                                                                                                                let {
                                                                                                                                                                  sat_s8YrW [Occ=Once]
                                                                                                                                                                    :: GHC.Base.Maybe
                                                                                                                                                                         GHC.Foreign.CStringLen
                                                                                                                                                                  [LclId] =
                                                                                                                                                                      CCCS GHC.Base.Just! [sat_s8YrV];
                                                                                                                                                                } in 
                                                                                                                                                                  $j1_s8Yrm
                                                                                                                                                                      s'_s8YrR
                                                                                                                                                                      sat_s8YrW;
                                                                                                                                                          };
                                                                                                                                                    };
                                                                                                                                              };
                                                                                                                                    } in 
                                                                                                                                      let-no-escape {
                                                                                                                                        $wgo1_s8YrX [InlPrag=NOUSERINLINE[0],
                                                                                                                                                     Occ=LoopBreakerT[3]]
                                                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                                                                             -> GHC.IO.Buffer.Buffer
                                                                                                                                                  GHC.Word.Word8
                                                                                                                                             -> GHC.Prim.State#
                                                                                                                                                  GHC.Prim.RealWorld
                                                                                                                                             -> (# GHC.Prim.State#
                                                                                                                                                     GHC.Prim.RealWorld,
                                                                                                                                                   GHC.Foreign.CStringLen #)
                                                                                                                                        [LclId[JoinId(3)],
                                                                                                                                         Arity=3,
                                                                                                                                         Str=<L,U><L,U><S,U>,
                                                                                                                                         Unf=OtherCon []] =
                                                                                                                                            sat-only [ww3_s8Yre
                                                                                                                                                      ww4_s8Yrf
                                                                                                                                                      exit_s8YrF
                                                                                                                                                      exit1_s8YrH
                                                                                                                                                      $wgo1_s8YrX] \r [ww8_s8YrY
                                                                                                                                                                       ww9_s8YrZ
                                                                                                                                                                       w5_s8Ys0]
                                                                                                                                                case
                                                                                                                                                    ww3_s8Yre
                                                                                                                                                        ww8_s8YrY
                                                                                                                                                        ww9_s8YrZ
                                                                                                                                                        w5_s8Ys0
                                                                                                                                                of
                                                                                                                                                { (#,#) ipv14_s8Ys2 [Occ=Once*]
                                                                                                                                                        ipv15_s8Ys3 [Occ=Once!] ->
                                                                                                                                                      case
                                                                                                                                                          ipv15_s8Ys3
                                                                                                                                                      of
                                                                                                                                                      { (,,) why_s8Ys5 [Occ=Once!]
                                                                                                                                                             from'_s8Ys6 [Occ=Once!]
                                                                                                                                                             to'_s8Ys7 [Occ=Once*] ->
                                                                                                                                                            case
                                                                                                                                                                from'_s8Ys6
                                                                                                                                                            of
                                                                                                                                                            wild3_s8Ys8
                                                                                                                                                            { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                                                                                                                   _ [Occ=Dead]
                                                                                                                                                                                   _ [Occ=Dead]
                                                                                                                                                                                   _ [Occ=Dead]
                                                                                                                                                                                   dt3_s8Ysd [Occ=Once]
                                                                                                                                                                                   dt4_s8Yse [Occ=Once] ->
                                                                                                                                                                  case
                                                                                                                                                                      ==# [dt3_s8Ysd
                                                                                                                                                                           dt4_s8Yse]
                                                                                                                                                                  of
                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                        case
                                                                                                                                                                            why_s8Ys5
                                                                                                                                                                        of
                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                              case
                                                                                                                                                                                  ww4_s8Yrf
                                                                                                                                                                                      wild3_s8Ys8
                                                                                                                                                                                      to'_s8Ys7
                                                                                                                                                                                      ipv14_s8Ys2
                                                                                                                                                                              of
                                                                                                                                                                              { (#,#) ipv16_s8Ysi [Occ=Once]
                                                                                                                                                                                      ipv17_s8Ysj [Occ=Once!] ->
                                                                                                                                                                                    case
                                                                                                                                                                                        ipv17_s8Ysj
                                                                                                                                                                                    of
                                                                                                                                                                                    { (,) ww11_s8Ysl [Occ=Once]
                                                                                                                                                                                          ww12_s8Ysm [Occ=Once] ->
                                                                                                                                                                                          $wgo1_s8YrX
                                                                                                                                                                                              ww11_s8Ysl
                                                                                                                                                                                              ww12_s8Ysm
                                                                                                                                                                                              ipv16_s8Ysi;
                                                                                                                                                                                    };
                                                                                                                                                                              };
                                                                                                                                                                          GHC.IO.Encoding.Types.OutputUnderflow ->
                                                                                                                                                                              exit_s8YrF
                                                                                                                                                                                  ipv14_s8Ys2;
                                                                                                                                                                        };
                                                                                                                                                                    1# ->
                                                                                                                                                                        exit1_s8YrH
                                                                                                                                                                            ipv14_s8Ys2
                                                                                                                                                                            to'_s8Ys7;
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                      } in 
                                                                                                                                        $wgo1_s8YrX
                                                                                                                                            ipv9_s8Yr4
                                                                                                                                            sat_s8Ysq
                                                                                                                                            ipv12_s8Yrk;
                                                                                                                        };
                                                                                                                  };
                                                                                                        } in 
                                                                                                          $wgo_s8Yr9
                                                                                                              ds9_s8Yr1
                                                                                                              sat_s8Ysr
                                                                                                              ds8_s8Yr0;
                                                                                                1# ->
                                                                                                    raiseIO# [Foreign.Marshal.Alloc.malloc1
                                                                                                              ds8_s8Yr0];
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                      };
                                                            } in 
                                                              let-no-escape {
                                                                go_s8Yst [Occ=LoopBreakerT[3]]
                                                                  :: [GHC.Types.Char]
                                                                     -> GHC.Prim.Int#
                                                                     -> GHC.Prim.State#
                                                                          GHC.Prim.RealWorld
                                                                     -> (# GHC.Prim.State#
                                                                             GHC.Prim.RealWorld,
                                                                           GHC.Foreign.CStringLen #)
                                                                [LclId[JoinId(3)],
                                                                 Arity=3,
                                                                 Str=<S,1*U><L,U><S,U>,
                                                                 Unf=OtherCon []] =
                                                                    sat-only [ptr_s8YqQ
                                                                              $w$j_s8YqR
                                                                              go_s8Yst] \r [ds7_s8Ysu
                                                                                            ds8_s8Ysv
                                                                                            eta2_s8Ysw]
                                                                        case ds7_s8Ysu of {
                                                                          [] ->
                                                                              $w$j_s8YqR eta2_s8Ysw;
                                                                          : val_s8Ysy [Occ=Once!]
                                                                            vals_s8Ysz [Occ=Once] ->
                                                                              case val_s8Ysy of {
                                                                                GHC.Types.C# x_s8YsB [Occ=Once] ->
                                                                                    case
                                                                                        writeWideCharOffAddr# [ptr_s8YqQ
                                                                                                               ds8_s8Ysv
                                                                                                               x_s8YsB
                                                                                                               eta2_s8Ysw]
                                                                                    of
                                                                                    s2_s8YsC
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              +# [ds8_s8Ysv
                                                                                                  1#]
                                                                                          of
                                                                                          sat_s8YsD
                                                                                          { __DEFAULT ->
                                                                                                go_s8Yst
                                                                                                    vals_s8Ysz
                                                                                                    sat_s8YsD
                                                                                                    s2_s8YsC;
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                              } in  go_s8Yst s_s8Yqx 0# ipv4_s8YqO;
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.bracket1
                          ds4_s8YqF GHC.IO.Encoding.Types.close sat_s8YsE ipv_s8YqA;
              };
        };

Foreign.C.String.newCStringLen
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CStringLen
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.String.newCStringLen1 eta_B2 eta_B1;

Foreign.C.String.newCString1
  :: GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Foreign.CString #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [s_s8YsF s1_s8YsG]
        case GHC.IO.Encoding.getForeignEncoding s1_s8YsG of {
          (#,#) ipv_s8YsI [Occ=Once] ipv1_s8YsJ [Occ=Once] ->
              GHC.Foreign.newCString1 ipv1_s8YsJ s_s8YsF ipv_s8YsI;
        };

Foreign.C.String.newCString
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CString
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] Foreign.C.String.newCString1 eta_B2 eta_B1;

Foreign.C.String.peekCStringLen1
  :: Foreign.C.String.CStringLen
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=2,
 Str=<L,1*U(1*U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [s_s8YsK s1_s8YsL]
        case GHC.IO.Encoding.getForeignEncoding s1_s8YsL of {
          (#,#) ipv_s8YsN [Occ=Once] ipv1_s8YsO [Occ=Once!] ->
              case ipv1_s8YsO of {
                GHC.IO.Encoding.Types.TextEncoding _ [Occ=Dead]
                                                   ds3_s8YsR [Occ=Once]
                                                   _ [Occ=Dead] ->
                    case s_s8YsK of {
                      (,) p_s8YsU [Occ=Once] sz_bytes_s8YsV [Occ=Once!] ->
                          let {
                            sat_s8Yvd [Occ=Once]
                              :: GHC.IO.Encoding.Types.TextDecoder dstate_a8RPc
                                 -> GHC.Types.IO [GHC.IO.Buffer.CharBufElem]
                            [LclId] =
                                [p_s8YsU sz_bytes_s8YsV] \r [decoder_s8YsW s2_s8YsX]
                                    case p_s8YsU of {
                                      GHC.Ptr.Ptr obj_s8YsZ [Occ=Once] ->
                                          case
                                              newMutVar# [GHC.ForeignPtr.NoFinalizers s2_s8YsX]
                                          of
                                          { (#,#) ipv2_s8Yt1 [Occ=Once] ipv3_s8Yt2 [Occ=Once] ->
                                                case sz_bytes_s8YsV of {
                                                  GHC.Types.I# x1_s8Yt4 ->
                                                      let-no-escape {
                                                        $j_s8Yt5 [Occ=Once*!T[1],
                                                                  Dmd=<C(S),1*C1(U)>]
                                                          :: GHC.Prim.Int#
                                                             -> (# GHC.Prim.State#
                                                                     GHC.Prim.RealWorld,
                                                                   [GHC.IO.Buffer.CharBufElem] #)
                                                        [LclId[JoinId(1)],
                                                         Arity=1,
                                                         Str=<S,U>,
                                                         Unf=OtherCon []] =
                                                            sat-only [decoder_s8YsW
                                                                      obj_s8YsZ
                                                                      ipv2_s8Yt1
                                                                      ipv3_s8Yt2
                                                                      x1_s8Yt4] \r [x_s8Yt6]
                                                                case
                                                                    *# [x_s8Yt6 4#]
                                                                of
                                                                x2_s8Yt7 [Dmd=<S,U>]
                                                                { __DEFAULT ->
                                                                      case <# [x2_s8Yt7 0#] of {
                                                                        __DEFAULT ->
                                                                            case
                                                                                newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                                                            ipv2_s8Yt1]
                                                                            of
                                                                            { (#,#) ipv4_s8Yta [Occ=Once]
                                                                                    ipv5_s8Ytb [Occ=OnceL] ->
                                                                                  case
                                                                                      newPinnedByteArray# [x2_s8Yt7
                                                                                                           ipv4_s8Yta]
                                                                                  of
                                                                                  { (#,#) ipv6_s8Ytd [Occ=Once]
                                                                                          ipv7_s8Yte ->
                                                                                        case
                                                                                            byteArrayContents# [ipv7_s8Yte]
                                                                                        of
                                                                                        ipv8_s8Ytf
                                                                                        { __DEFAULT ->
                                                                                              let {
                                                                                                ipv9_s8Ytg [Occ=OnceL]
                                                                                                  :: GHC.ForeignPtr.ForeignPtrContents
                                                                                                [LclId,
                                                                                                 Unf=OtherCon []] =
                                                                                                    CCCS GHC.ForeignPtr.MallocPtr! [ipv7_s8Yte
                                                                                                                                    ipv5_s8Ytb]; } in
                                                                                              let {
                                                                                                ipv10_s8Yth [Occ=OnceL]
                                                                                                  :: GHC.IO.Buffer.CharBuffer
                                                                                                [LclId,
                                                                                                 Unf=OtherCon []] =
                                                                                                    CCCS GHC.IO.Buffer.Buffer! [ipv8_s8Ytf
                                                                                                                                ipv9_s8Ytg
                                                                                                                                GHC.IO.Buffer.WriteBuffer
                                                                                                                                x_s8Yt6
                                                                                                                                0#
                                                                                                                                0#]; } in
                                                                                              let {
                                                                                                $wgo_s8Yti [InlPrag=NOUSERINLINE[0],
                                                                                                            Occ=LoopBreaker]
                                                                                                  :: GHC.IO.Buffer.Buffer
                                                                                                       GHC.Word.Word8
                                                                                                     -> GHC.Prim.State#
                                                                                                          GHC.Prim.RealWorld
                                                                                                     -> (# GHC.Prim.State#
                                                                                                             GHC.Prim.RealWorld,
                                                                                                           [GHC.IO.Buffer.CharBufElem] #)
                                                                                                [LclId,
                                                                                                 Arity=2,
                                                                                                 Str=<L,U><S,U>,
                                                                                                 Unf=OtherCon []] =
                                                                                                    sat-only [decoder_s8YsW
                                                                                                              ipv10_s8Yth
                                                                                                              $wgo_s8Yti] \r [w_s8Ytj
                                                                                                                              w1_s8Ytk]
                                                                                                        case
                                                                                                            decoder_s8YsW
                                                                                                        of
                                                                                                        { GHC.IO.Encoding.Types.BufferCodec ds8_s8Ytm [Occ=Once!]
                                                                                                                                            ds9_s8Ytn [Occ=Once!]
                                                                                                                                            _ [Occ=Dead]
                                                                                                                                            _ [Occ=Dead]
                                                                                                                                            _ [Occ=Dead] ->
                                                                                                              case
                                                                                                                  ds8_s8Ytm
                                                                                                                      w_s8Ytj
                                                                                                                      ipv10_s8Yth
                                                                                                                      w1_s8Ytk
                                                                                                              of
                                                                                                              { (#,#) ipv11_s8Yts [Occ=Once*]
                                                                                                                      ipv12_s8Ytt [Occ=Once!] ->
                                                                                                                    case
                                                                                                                        ipv12_s8Ytt
                                                                                                                    of
                                                                                                                    { (,,) why_s8Ytv [Occ=Once!]
                                                                                                                           from'_s8Ytw [Occ=Once!]
                                                                                                                           to'_s8Ytx [Occ=Once*] ->
                                                                                                                          case
                                                                                                                              from'_s8Ytw
                                                                                                                          of
                                                                                                                          wild6_s8Yty
                                                                                                                          { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                                                                                 _ [Occ=Dead]
                                                                                                                                                 _ [Occ=Dead]
                                                                                                                                                 _ [Occ=Dead]
                                                                                                                                                 dt3_s8YtD [Occ=Once]
                                                                                                                                                 dt4_s8YtE [Occ=Once] ->
                                                                                                                                case
                                                                                                                                    ==# [dt3_s8YtD
                                                                                                                                         dt4_s8YtE]
                                                                                                                                of
                                                                                                                                { __DEFAULT ->
                                                                                                                                      let-no-escape {
                                                                                                                                        $w$j1_s8YtG [InlPrag=NOUSERINLINE[0],
                                                                                                                                                     Occ=Once*!T[6],
                                                                                                                                                     Dmd=<L,1*C1(C1(C1(C1(C1(C1(U(U,U)))))))>]
                                                                                                                                          :: GHC.Prim.State#
                                                                                                                                               GHC.Prim.RealWorld
                                                                                                                                             -> GHC.IO.Buffer.Buffer
                                                                                                                                                  GHC.Word.Word8
                                                                                                                                             -> GHC.Prim.Addr#
                                                                                                                                             -> GHC.ForeignPtr.ForeignPtrContents
                                                                                                                                             -> GHC.Prim.Int#
                                                                                                                                             -> GHC.Prim.Int#
                                                                                                                                             -> (# GHC.Prim.State#
                                                                                                                                                     GHC.Prim.RealWorld,
                                                                                                                                                   [GHC.IO.Buffer.CharBufElem] #)
                                                                                                                                        [LclId[JoinId(6)],
                                                                                                                                         Arity=6,
                                                                                                                                         Str=<S,U><L,U><L,U><L,U><S,U><S,U>,
                                                                                                                                         Unf=OtherCon []] =
                                                                                                                                            sat-only [$wgo_s8Yti] \r [w2_s8YtH
                                                                                                                                                                      ww_s8YtI
                                                                                                                                                                      ww1_s8YtJ
                                                                                                                                                                      ww2_s8YtK
                                                                                                                                                                      ww3_s8YtL
                                                                                                                                                                      ww4_s8YtM]
                                                                                                                                                case
                                                                                                                                                    -# [ww4_s8YtM
                                                                                                                                                        ww3_s8YtL]
                                                                                                                                                of
                                                                                                                                                ww5_s8YtN [Dmd=<S,U>]
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      case
                                                                                                                                                          <=# [ww5_s8YtN
                                                                                                                                                               0#]
                                                                                                                                                      of
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            case
                                                                                                                                                                -# [ww5_s8YtN
                                                                                                                                                                    1#]
                                                                                                                                                            of
                                                                                                                                                            sat_s8Yud
                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                  let-no-escape {
                                                                                                                                                                    exit_s8YtP [Occ=OnceL!T[2],
                                                                                                                                                                                Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                                                                                                                                                      :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                         -> GHC.Prim.State#
                                                                                                                                                                              GHC.Prim.RealWorld
                                                                                                                                                                         -> (# GHC.Prim.State#
                                                                                                                                                                                 GHC.Prim.RealWorld,
                                                                                                                                                                               [GHC.IO.Buffer.CharBufElem] #)
                                                                                                                                                                    [LclId[JoinId(2)],
                                                                                                                                                                     Arity=2,
                                                                                                                                                                     Str=<L,U><S,U>,
                                                                                                                                                                     Unf=OtherCon []] =
                                                                                                                                                                        sat-only [$wgo_s8Yti
                                                                                                                                                                                  ww_s8YtI
                                                                                                                                                                                  ww1_s8YtJ
                                                                                                                                                                                  ww2_s8YtK] \r [w3_s8YtQ
                                                                                                                                                                                                 w4_s8YtR]
                                                                                                                                                                            case
                                                                                                                                                                                readWideCharOffAddr# [ww1_s8YtJ
                                                                                                                                                                                                      0#
                                                                                                                                                                                                      w4_s8YtR]
                                                                                                                                                                            of
                                                                                                                                                                            { (#,#) ipv13_s8YtT [Occ=Once]
                                                                                                                                                                                    ipv14_s8YtU [Occ=Once] ->
                                                                                                                                                                                  case
                                                                                                                                                                                      touch# [ww2_s8YtK
                                                                                                                                                                                              ipv13_s8YtT]
                                                                                                                                                                                  of
                                                                                                                                                                                  s'_s8YtV
                                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                                        case
                                                                                                                                                                                            $wgo_s8Yti
                                                                                                                                                                                                ww_s8YtI
                                                                                                                                                                                                s'_s8YtV
                                                                                                                                                                                        of
                                                                                                                                                                                        { (#,#) ipv15_s8YtX [Occ=Once]
                                                                                                                                                                                                ipv16_s8YtY [Occ=Once] ->
                                                                                                                                                                                              let {
                                                                                                                                                                                                sat_s8Yu1 [Occ=Once]
                                                                                                                                                                                                  :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                                                [LclId] =
                                                                                                                                                                                                    [w3_s8YtQ
                                                                                                                                                                                                     ipv14_s8YtU
                                                                                                                                                                                                     ipv16_s8YtY] \u []
                                                                                                                                                                                                        let {
                                                                                                                                                                                                          sat_s8YtZ [Occ=Once]
                                                                                                                                                                                                            :: GHC.IO.Buffer.CharBufElem
                                                                                                                                                                                                          [LclId] =
                                                                                                                                                                                                              CCCS GHC.Types.C#! [ipv14_s8YtU]; } in
                                                                                                                                                                                                        let {
                                                                                                                                                                                                          sat_s8Yu0 [Occ=Once]
                                                                                                                                                                                                            :: [GHC.Types.Char]
                                                                                                                                                                                                          [LclId] =
                                                                                                                                                                                                              CCCS :! [sat_s8YtZ
                                                                                                                                                                                                                       w3_s8YtQ];
                                                                                                                                                                                                        } in 
                                                                                                                                                                                                          GHC.Base.++
                                                                                                                                                                                                              sat_s8Yu0
                                                                                                                                                                                                              ipv16_s8YtY;
                                                                                                                                                                                              } in 
                                                                                                                                                                                                (#,#) [ipv15_s8YtX
                                                                                                                                                                                                       sat_s8Yu1];
                                                                                                                                                                                        };
                                                                                                                                                                                  };
                                                                                                                                                                            };
                                                                                                                                                                  } in 
                                                                                                                                                                    let-no-escape {
                                                                                                                                                                      $wf_s8Yu2 [InlPrag=NOUSERINLINE[0],
                                                                                                                                                                                 Occ=LoopBreakerT[3]]
                                                                                                                                                                        :: GHC.Prim.Int#
                                                                                                                                                                           -> [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                           -> GHC.Prim.State#
                                                                                                                                                                                GHC.Prim.RealWorld
                                                                                                                                                                           -> (# GHC.Prim.State#
                                                                                                                                                                                   GHC.Prim.RealWorld,
                                                                                                                                                                                 [GHC.IO.Buffer.CharBufElem] #)
                                                                                                                                                                      [LclId[JoinId(3)],
                                                                                                                                                                       Arity=3,
                                                                                                                                                                       Str=<S,1*U><L,U><S,U>,
                                                                                                                                                                       Unf=OtherCon []] =
                                                                                                                                                                          sat-only [ww1_s8YtJ
                                                                                                                                                                                    exit_s8YtP
                                                                                                                                                                                    $wf_s8Yu2] \r [ww6_s8Yu3
                                                                                                                                                                                                   w3_s8Yu4
                                                                                                                                                                                                   w4_s8Yu5]
                                                                                                                                                                              case
                                                                                                                                                                                  ww6_s8Yu3
                                                                                                                                                                              of
                                                                                                                                                                              ds_s8Yu6
                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                    case
                                                                                                                                                                                        readWideCharOffAddr# [ww1_s8YtJ
                                                                                                                                                                                                              ds_s8Yu6
                                                                                                                                                                                                              w4_s8Yu5]
                                                                                                                                                                                    of
                                                                                                                                                                                    { (#,#) ipv13_s8Yu8 [Occ=Once]
                                                                                                                                                                                            ipv14_s8Yu9 [Occ=Once] ->
                                                                                                                                                                                          let {
                                                                                                                                                                                            sat_s8Yub [Occ=Once]
                                                                                                                                                                                              :: GHC.IO.Buffer.CharBufElem
                                                                                                                                                                                            [LclId] =
                                                                                                                                                                                                CCCS GHC.Types.C#! [ipv14_s8Yu9]; } in
                                                                                                                                                                                          let {
                                                                                                                                                                                            sat_s8Yuc [Occ=Once]
                                                                                                                                                                                              :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                                            [LclId] =
                                                                                                                                                                                                CCCS :! [sat_s8Yub
                                                                                                                                                                                                         w3_s8Yu4];
                                                                                                                                                                                          } in 
                                                                                                                                                                                            case
                                                                                                                                                                                                -# [ds_s8Yu6
                                                                                                                                                                                                    1#]
                                                                                                                                                                                            of
                                                                                                                                                                                            sat_s8Yua
                                                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                                                  $wf_s8Yu2
                                                                                                                                                                                                      sat_s8Yua
                                                                                                                                                                                                      sat_s8Yuc
                                                                                                                                                                                                      ipv13_s8Yu8;
                                                                                                                                                                                            };
                                                                                                                                                                                    };
                                                                                                                                                                                0# ->
                                                                                                                                                                                    exit_s8YtP
                                                                                                                                                                                        w3_s8Yu4
                                                                                                                                                                                        w4_s8Yu5;
                                                                                                                                                                              };
                                                                                                                                                                    } in 
                                                                                                                                                                      $wf_s8Yu2
                                                                                                                                                                          sat_s8Yud
                                                                                                                                                                          GHC.Types.[]
                                                                                                                                                                          w2_s8YtH;
                                                                                                                                                            };
                                                                                                                                                        1# ->
                                                                                                                                                            case
                                                                                                                                                                touch# [ww2_s8YtK
                                                                                                                                                                        w2_s8YtH]
                                                                                                                                                            of
                                                                                                                                                            s'_s8Yue
                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                  case
                                                                                                                                                                      $wgo_s8Yti
                                                                                                                                                                          ww_s8YtI
                                                                                                                                                                          s'_s8Yue
                                                                                                                                                                  of
                                                                                                                                                                  { (#,#) ipv15_s8Yug [Occ=Once]
                                                                                                                                                                          ipv16_s8Yuh [Occ=Once] ->
                                                                                                                                                                        let {
                                                                                                                                                                          sat_s8Yui [Occ=Once]
                                                                                                                                                                            :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                          [LclId] =
                                                                                                                                                                              [ipv16_s8Yuh] \u []
                                                                                                                                                                                  GHC.Base.++
                                                                                                                                                                                      GHC.Types.[]
                                                                                                                                                                                      ipv16_s8Yuh;
                                                                                                                                                                        } in 
                                                                                                                                                                          (#,#) [ipv15_s8Yug
                                                                                                                                                                                 sat_s8Yui];
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                      } in 
                                                                                                                                        case
                                                                                                                                            why_s8Ytv
                                                                                                                                        of
                                                                                                                                        { __DEFAULT ->
                                                                                                                                              case
                                                                                                                                                  ds9_s8Ytn
                                                                                                                                                      wild6_s8Yty
                                                                                                                                                      to'_s8Ytx
                                                                                                                                                      ipv11_s8Yts
                                                                                                                                              of
                                                                                                                                              { (#,#) ipv13_s8Yul [Occ=Once]
                                                                                                                                                      ipv14_s8Yum [Occ=Once!] ->
                                                                                                                                                    case
                                                                                                                                                        ipv14_s8Yum
                                                                                                                                                    of
                                                                                                                                                    { (,) ww1_s8Yuo [Occ=Once]
                                                                                                                                                          ww2_s8Yup [Occ=Once!] ->
                                                                                                                                                          case
                                                                                                                                                              ww2_s8Yup
                                                                                                                                                          of
                                                                                                                                                          { GHC.IO.Buffer.Buffer ww4_s8Yur [Occ=Once]
                                                                                                                                                                                 ww5_s8Yus [Occ=Once]
                                                                                                                                                                                 _ [Occ=Dead]
                                                                                                                                                                                 _ [Occ=Dead]
                                                                                                                                                                                 ww8_s8Yuv [Occ=Once]
                                                                                                                                                                                 ww9_s8Yuw [Occ=Once] ->
                                                                                                                                                                $w$j1_s8YtG
                                                                                                                                                                    ipv13_s8Yul
                                                                                                                                                                    ww1_s8Yuo
                                                                                                                                                                    ww4_s8Yur
                                                                                                                                                                    ww5_s8Yus
                                                                                                                                                                    ww8_s8Yuv
                                                                                                                                                                    ww9_s8Yuw;
                                                                                                                                                          };
                                                                                                                                                    };
                                                                                                                                              };
                                                                                                                                          GHC.IO.Encoding.Types.OutputUnderflow ->
                                                                                                                                              case
                                                                                                                                                  to'_s8Ytx
                                                                                                                                              of
                                                                                                                                              { GHC.IO.Buffer.Buffer ww1_s8Yuy [Occ=Once]
                                                                                                                                                                     ww2_s8Yuz [Occ=Once]
                                                                                                                                                                     _ [Occ=Dead]
                                                                                                                                                                     _ [Occ=Dead]
                                                                                                                                                                     ww5_s8YuC [Occ=Once]
                                                                                                                                                                     ww6_s8YuD [Occ=Once] ->
                                                                                                                                                    $w$j1_s8YtG
                                                                                                                                                        ipv11_s8Yts
                                                                                                                                                        wild6_s8Yty
                                                                                                                                                        ww1_s8Yuy
                                                                                                                                                        ww2_s8Yuz
                                                                                                                                                        ww5_s8YuC
                                                                                                                                                        ww6_s8YuD;
                                                                                                                                              };
                                                                                                                                        };
                                                                                                                                  1# ->
                                                                                                                                      case
                                                                                                                                          to'_s8Ytx
                                                                                                                                      of
                                                                                                                                      { GHC.IO.Buffer.Buffer dt7_s8YuF
                                                                                                                                                             dt8_s8YuG [Occ=Once*]
                                                                                                                                                             _ [Occ=Dead]
                                                                                                                                                             _ [Occ=Dead]
                                                                                                                                                             dt10_s8YuJ [Occ=Once]
                                                                                                                                                             dt11_s8YuK [Occ=Once] ->
                                                                                                                                            case
                                                                                                                                                -# [dt11_s8YuK
                                                                                                                                                    dt10_s8YuJ]
                                                                                                                                            of
                                                                                                                                            ww_s8YuL [Dmd=<S,U>]
                                                                                                                                            { __DEFAULT ->
                                                                                                                                                  case
                                                                                                                                                      <=# [ww_s8YuL
                                                                                                                                                           0#]
                                                                                                                                                  of
                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                        case
                                                                                                                                                            -# [ww_s8YuL
                                                                                                                                                                1#]
                                                                                                                                                        of
                                                                                                                                                        sat_s8Yv7
                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                              let-no-escape {
                                                                                                                                                                exit_s8YuN [Occ=OnceL!T[2],
                                                                                                                                                                            Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                                                                                                                                                  :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                     -> GHC.Prim.State#
                                                                                                                                                                          GHC.Prim.RealWorld
                                                                                                                                                                     -> (# GHC.Prim.State#
                                                                                                                                                                             GHC.Prim.RealWorld,
                                                                                                                                                                           [GHC.IO.Buffer.CharBufElem] #)
                                                                                                                                                                [LclId[JoinId(2)],
                                                                                                                                                                 Arity=2,
                                                                                                                                                                 Str=<L,U><S,U>,
                                                                                                                                                                 Unf=OtherCon []] =
                                                                                                                                                                    sat-only [dt7_s8YuF
                                                                                                                                                                              dt8_s8YuG] \r [w3_s8YuO
                                                                                                                                                                                             w4_s8YuP]
                                                                                                                                                                        case
                                                                                                                                                                            readWideCharOffAddr# [dt7_s8YuF
                                                                                                                                                                                                  0#
                                                                                                                                                                                                  w4_s8YuP]
                                                                                                                                                                        of
                                                                                                                                                                        { (#,#) ipv13_s8YuR [Occ=Once]
                                                                                                                                                                                ipv14_s8YuS [Occ=Once] ->
                                                                                                                                                                              case
                                                                                                                                                                                  touch# [dt8_s8YuG
                                                                                                                                                                                          ipv13_s8YuR]
                                                                                                                                                                              of
                                                                                                                                                                              s'_s8YuT
                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                    let {
                                                                                                                                                                                      sat_s8YuU [Occ=Once]
                                                                                                                                                                                        :: GHC.IO.Buffer.CharBufElem
                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                          CCCS GHC.Types.C#! [ipv14_s8YuS]; } in
                                                                                                                                                                                    let {
                                                                                                                                                                                      sat_s8YuV [Occ=Once]
                                                                                                                                                                                        :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                          CCCS :! [sat_s8YuU
                                                                                                                                                                                                   w3_s8YuO];
                                                                                                                                                                                    } in 
                                                                                                                                                                                      (#,#) [s'_s8YuT
                                                                                                                                                                                             sat_s8YuV];
                                                                                                                                                                              };
                                                                                                                                                                        };
                                                                                                                                                              } in 
                                                                                                                                                                let-no-escape {
                                                                                                                                                                  $wf_s8YuW [InlPrag=NOUSERINLINE[0],
                                                                                                                                                                             Occ=LoopBreakerT[3]]
                                                                                                                                                                    :: GHC.Prim.Int#
                                                                                                                                                                       -> [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                       -> GHC.Prim.State#
                                                                                                                                                                            GHC.Prim.RealWorld
                                                                                                                                                                       -> (# GHC.Prim.State#
                                                                                                                                                                               GHC.Prim.RealWorld,
                                                                                                                                                                             [GHC.IO.Buffer.CharBufElem] #)
                                                                                                                                                                  [LclId[JoinId(3)],
                                                                                                                                                                   Arity=3,
                                                                                                                                                                   Str=<S,1*U><L,U><S,U>,
                                                                                                                                                                   Unf=OtherCon []] =
                                                                                                                                                                      sat-only [dt7_s8YuF
                                                                                                                                                                                exit_s8YuN
                                                                                                                                                                                $wf_s8YuW] \r [ww1_s8YuX
                                                                                                                                                                                               w3_s8YuY
                                                                                                                                                                                               w4_s8YuZ]
                                                                                                                                                                          case
                                                                                                                                                                              ww1_s8YuX
                                                                                                                                                                          of
                                                                                                                                                                          ds_s8Yv0
                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                case
                                                                                                                                                                                    readWideCharOffAddr# [dt7_s8YuF
                                                                                                                                                                                                          ds_s8Yv0
                                                                                                                                                                                                          w4_s8YuZ]
                                                                                                                                                                                of
                                                                                                                                                                                { (#,#) ipv13_s8Yv2 [Occ=Once]
                                                                                                                                                                                        ipv14_s8Yv3 [Occ=Once] ->
                                                                                                                                                                                      let {
                                                                                                                                                                                        sat_s8Yv5 [Occ=Once]
                                                                                                                                                                                          :: GHC.IO.Buffer.CharBufElem
                                                                                                                                                                                        [LclId] =
                                                                                                                                                                                            CCCS GHC.Types.C#! [ipv14_s8Yv3]; } in
                                                                                                                                                                                      let {
                                                                                                                                                                                        sat_s8Yv6 [Occ=Once]
                                                                                                                                                                                          :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                                        [LclId] =
                                                                                                                                                                                            CCCS :! [sat_s8Yv5
                                                                                                                                                                                                     w3_s8YuY];
                                                                                                                                                                                      } in 
                                                                                                                                                                                        case
                                                                                                                                                                                            -# [ds_s8Yv0
                                                                                                                                                                                                1#]
                                                                                                                                                                                        of
                                                                                                                                                                                        sat_s8Yv4
                                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                                              $wf_s8YuW
                                                                                                                                                                                                  sat_s8Yv4
                                                                                                                                                                                                  sat_s8Yv6
                                                                                                                                                                                                  ipv13_s8Yv2;
                                                                                                                                                                                        };
                                                                                                                                                                                };
                                                                                                                                                                            0# ->
                                                                                                                                                                                exit_s8YuN
                                                                                                                                                                                    w3_s8YuY
                                                                                                                                                                                    w4_s8YuZ;
                                                                                                                                                                          };
                                                                                                                                                                } in 
                                                                                                                                                                  $wf_s8YuW
                                                                                                                                                                      sat_s8Yv7
                                                                                                                                                                      GHC.Types.[]
                                                                                                                                                                      ipv11_s8Yts;
                                                                                                                                                        };
                                                                                                                                                    1# ->
                                                                                                                                                        case
                                                                                                                                                            touch# [dt8_s8YuG
                                                                                                                                                                    ipv11_s8Yts]
                                                                                                                                                        of
                                                                                                                                                        s'_s8Yv8
                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                              (#,#) [s'_s8Yv8
                                                                                                                                                                     GHC.Types.[]];
                                                                                                                                                        };
                                                                                                                                                  };
                                                                                                                                            };
                                                                                                                                      };
                                                                                                                                };
                                                                                                                          };
                                                                                                                    };
                                                                                                              };
                                                                                                        }; } in
                                                                                              let {
                                                                                                sat_s8Yv9 [Occ=Once]
                                                                                                  :: GHC.ForeignPtr.ForeignPtrContents
                                                                                                [LclId] =
                                                                                                    CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv3_s8Yt2]; } in
                                                                                              let {
                                                                                                sat_s8Yva [Occ=Once]
                                                                                                  :: GHC.IO.Buffer.Buffer
                                                                                                       GHC.Word.Word8
                                                                                                [LclId] =
                                                                                                    CCCS GHC.IO.Buffer.Buffer! [obj_s8YsZ
                                                                                                                                sat_s8Yv9
                                                                                                                                GHC.IO.Buffer.ReadBuffer
                                                                                                                                x1_s8Yt4
                                                                                                                                0#
                                                                                                                                x1_s8Yt4];
                                                                                              } in 
                                                                                                $wgo_s8Yti
                                                                                                    sat_s8Yva
                                                                                                    ipv6_s8Ytd;
                                                                                        };
                                                                                  };
                                                                            };
                                                                        1# ->
                                                                            GHC.ForeignPtr.mallocForeignPtrBytes2;
                                                                      };
                                                                };
                                                      } in 
                                                        case <=# [x1_s8Yt4 1#] of {
                                                          __DEFAULT -> $j_s8Yt5 x1_s8Yt4;
                                                          1# -> $j_s8Yt5 1#;
                                                        };
                                                };
                                          };
                                    };
                          } in 
                            GHC.IO.bracket1
                                ds3_s8YsR GHC.IO.Encoding.Types.close sat_s8Yvd ipv_s8YsN;
                    };
              };
        };

Foreign.C.String.peekCStringLen
  :: Foreign.C.String.CStringLen -> GHC.Types.IO GHC.Base.String
[GblId,
 Arity=2,
 Str=<L,1*U(1*U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.String.peekCStringLen1 eta_B2 eta_B1;

Foreign.C.String.peekCString1
  :: Foreign.C.String.CString
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<L,1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [s_s8Yve s1_s8Yvf]
        case GHC.IO.Encoding.getForeignEncoding s1_s8Yvf of {
          (#,#) ipv_s8Yvh [Occ=Once] ipv1_s8Yvi [Occ=Once] ->
              GHC.Foreign.peekCString1 ipv1_s8Yvi s_s8Yve ipv_s8Yvh;
        };

Foreign.C.String.peekCString
  :: Foreign.C.String.CString -> GHC.Types.IO GHC.Base.String
[GblId, Arity=2, Str=<L,1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] Foreign.C.String.peekCString1 eta_B2 eta_B1;

Foreign.C.String.castCSCharToChar
  :: Foreign.C.Types.CSChar -> GHC.Types.Char
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s8Yvj]
        case ch_s8Yvj of {
          GHC.Int.I8# x#_s8Yvl [Occ=Once] ->
              case int2Word# [x#_s8Yvl] of sat_s8Yvm {
                __DEFAULT ->
                    case narrow8Word# [sat_s8Yvm] of sat_s8Yvn {
                      __DEFAULT ->
                          case word2Int# [sat_s8Yvn] of sat_s8Yvo {
                            __DEFAULT ->
                                case chr# [sat_s8Yvo] of sat_s8Yvp {
                                  __DEFAULT -> GHC.Types.C# [sat_s8Yvp];
                                };
                          };
                    };
              };
        };

Foreign.C.String.castCUCharToChar
  :: Foreign.C.Types.CUChar -> GHC.Types.Char
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s8Yvq]
        case ch_s8Yvq of {
          GHC.Word.W8# x#_s8Yvs [Occ=Once] ->
              case word2Int# [x#_s8Yvs] of sat_s8Yvt {
                __DEFAULT ->
                    case chr# [sat_s8Yvt] of sat_s8Yvu {
                      __DEFAULT -> GHC.Types.C# [sat_s8Yvu];
                    };
              };
        };

Foreign.C.String.castCCharToChar
  :: Foreign.C.Types.CChar -> GHC.Types.Char
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s8Yvv]
        case ch_s8Yvv of {
          GHC.Int.I8# x#_s8Yvx [Occ=Once] ->
              case int2Word# [x#_s8Yvx] of sat_s8Yvy {
                __DEFAULT ->
                    case narrow8Word# [sat_s8Yvy] of sat_s8Yvz {
                      __DEFAULT ->
                          case word2Int# [sat_s8Yvz] of sat_s8YvA {
                            __DEFAULT ->
                                case chr# [sat_s8YvA] of sat_s8YvB {
                                  __DEFAULT -> GHC.Types.C# [sat_s8YvB];
                                };
                          };
                    };
              };
        };

Foreign.C.String.$wpeekCAString [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Addr#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_s8YvC w_s8YvD]
        let-no-escape {
          $w$j_s8YvE [InlPrag=NOUSERINLINE[0],
                      Occ=OnceL!T[2],
                      Dmd=<C(C(S)),C(C1(U(U,U)))>]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> GHC.Prim.Int#
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
          [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
              sat-only [ww_s8YvC] \r [w1_s8YvF ww1_s8YvG]
                  case <=# [ww1_s8YvG 0#] of {
                    __DEFAULT ->
                        case -# [ww1_s8YvG 1#] of sat_s8Yw3 {
                          __DEFAULT ->
                              let-no-escape {
                                $wloop_s8YvI [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                  :: [GHC.Types.Char]
                                     -> GHC.Prim.Int#
                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                                [LclId[JoinId(3)], Arity=3, Str=<L,U><S,U><S,U>, Unf=OtherCon []] =
                                    sat-only [ww_s8YvC $wloop_s8YvI] \r [w2_s8YvJ
                                                                         ww2_s8YvK
                                                                         w3_s8YvL]
                                        case readInt8OffAddr# [ww_s8YvC ww2_s8YvK w3_s8YvL] of {
                                          (#,#) ipv_s8YvN [Occ=Once*] ipv1_s8YvO [Occ=Once*] ->
                                              case <=# [ww2_s8YvK 0#] of {
                                                __DEFAULT ->
                                                    case -# [ww2_s8YvK 1#] of sat_s8YvW {
                                                      __DEFAULT ->
                                                          case int2Word# [ipv1_s8YvO] of sat_s8YvQ {
                                                            __DEFAULT ->
                                                                case
                                                                    narrow8Word# [sat_s8YvQ]
                                                                of
                                                                sat_s8YvR
                                                                { __DEFAULT ->
                                                                      case
                                                                          word2Int# [sat_s8YvR]
                                                                      of
                                                                      sat_s8YvS
                                                                      { __DEFAULT ->
                                                                            case
                                                                                chr# [sat_s8YvS]
                                                                            of
                                                                            sat_s8YvT
                                                                            { __DEFAULT ->
                                                                                  let {
                                                                                    sat_s8YvU [Occ=Once]
                                                                                      :: GHC.Types.Char
                                                                                    [LclId] =
                                                                                        CCCS GHC.Types.C#! [sat_s8YvT]; } in
                                                                                  let {
                                                                                    sat_s8YvV [Occ=Once]
                                                                                      :: [GHC.Types.Char]
                                                                                    [LclId] =
                                                                                        CCCS :! [sat_s8YvU
                                                                                                 w2_s8YvJ];
                                                                                  } in 
                                                                                    $wloop_s8YvI
                                                                                        sat_s8YvV
                                                                                        sat_s8YvW
                                                                                        ipv_s8YvN;
                                                                            };
                                                                      };
                                                                };
                                                          };
                                                    };
                                                1# ->
                                                    case int2Word# [ipv1_s8YvO] of sat_s8YvX {
                                                      __DEFAULT ->
                                                          case
                                                              narrow8Word# [sat_s8YvX]
                                                          of
                                                          sat_s8YvY
                                                          { __DEFAULT ->
                                                                case
                                                                    word2Int# [sat_s8YvY]
                                                                of
                                                                sat_s8YvZ
                                                                { __DEFAULT ->
                                                                      case
                                                                          chr# [sat_s8YvZ]
                                                                      of
                                                                      sat_s8Yw0
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s8Yw1 [Occ=Once]
                                                                                :: GHC.Types.Char
                                                                              [LclId] =
                                                                                  CCCS GHC.Types.C#! [sat_s8Yw0]; } in
                                                                            let {
                                                                              sat_s8Yw2 [Occ=Once]
                                                                                :: [GHC.Types.Char]
                                                                              [LclId] =
                                                                                  CCCS :! [sat_s8Yw1
                                                                                           w2_s8YvJ];
                                                                            } in 
                                                                              (#,#) [ipv_s8YvN
                                                                                     sat_s8Yw2];
                                                                      };
                                                                };
                                                          };
                                                    };
                                              };
                                        };
                              } in  $wloop_s8YvI GHC.Types.[] sat_s8Yw3 w1_s8YvF;
                        };
                    1# -> (#,#) [w1_s8YvF GHC.Types.[]];
                  };
        } in 
          let-no-escape {
            $wloop_s8Yw4 [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[2]]
              :: GHC.Prim.Int#
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
            [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
                sat-only [ww_s8YvC $w$j_s8YvE $wloop_s8Yw4] \r [ww1_s8Yw5 w1_s8Yw6]
                    case readInt8OffAddr# [ww_s8YvC ww1_s8Yw5 w1_s8Yw6] of {
                      (#,#) ipv_s8Yw8 [Occ=Once*] ipv1_s8Yw9 [Occ=Once!] ->
                          case ipv1_s8Yw9 of {
                            __DEFAULT ->
                                case +# [ww1_s8Yw5 1#] of sat_s8Ywb {
                                  __DEFAULT -> $wloop_s8Yw4 sat_s8Ywb ipv_s8Yw8;
                                };
                            0# -> $w$j_s8YvE ipv_s8Yw8 ww1_s8Yw5;
                          };
                    };
          } in  $wloop_s8Yw4 0# w_s8YvD;

Foreign.C.String.peekCAString1 [InlPrag=NOUSERINLINE[0]]
  :: Foreign.C.String.CString
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8Ywc w1_s8Ywd]
        case w_s8Ywc of {
          GHC.Ptr.Ptr ww1_s8Ywf [Occ=Once] ->
              Foreign.C.String.$wpeekCAString ww1_s8Ywf w1_s8Ywd;
        };

Foreign.C.String.peekCAString
  :: Foreign.C.String.CString -> GHC.Types.IO GHC.Base.String
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] Foreign.C.String.peekCAString1 eta_B2 eta_B1;

Foreign.C.String.$wpeekCAStringLen [InlPrag=NOUSERINLINE[0]]
  :: GHC.Ptr.Ptr Foreign.C.Types.CChar
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_s8Ywg ww1_s8Ywh w_s8Ywi]
        case <=# [ww1_s8Ywh 0#] of {
          __DEFAULT ->
              case -# [ww1_s8Ywh 1#] of sat_s8YwH {
                __DEFAULT ->
                    let-no-escape {
                      $wloop_s8Ywk [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                        :: [GHC.Types.Char]
                           -> GHC.Prim.Int#
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                      [LclId[JoinId(3)], Arity=3, Str=<L,U><S,U><S,U>, Unf=OtherCon []] =
                          sat-only [ww_s8Ywg $wloop_s8Ywk] \r [w1_s8Ywl ww2_s8Ywm w2_s8Ywn]
                              case ww_s8Ywg of {
                                GHC.Ptr.Ptr a_s8Ywp [Occ=Once] ->
                                    case readInt8OffAddr# [a_s8Ywp ww2_s8Ywm w2_s8Ywn] of {
                                      (#,#) ipv_s8Ywr [Occ=Once*] ipv1_s8Yws [Occ=Once*] ->
                                          case ww2_s8Ywm of wild1_s8Ywt {
                                            __DEFAULT ->
                                                case -# [wild1_s8Ywt 1#] of sat_s8YwA {
                                                  __DEFAULT ->
                                                      case int2Word# [ipv1_s8Yws] of sat_s8Ywu {
                                                        __DEFAULT ->
                                                            case
                                                                narrow8Word# [sat_s8Ywu]
                                                            of
                                                            sat_s8Ywv
                                                            { __DEFAULT ->
                                                                  case
                                                                      word2Int# [sat_s8Ywv]
                                                                  of
                                                                  sat_s8Yww
                                                                  { __DEFAULT ->
                                                                        case
                                                                            chr# [sat_s8Yww]
                                                                        of
                                                                        sat_s8Ywx
                                                                        { __DEFAULT ->
                                                                              let {
                                                                                sat_s8Ywy [Occ=Once]
                                                                                  :: GHC.Types.Char
                                                                                [LclId] =
                                                                                    CCCS GHC.Types.C#! [sat_s8Ywx]; } in
                                                                              let {
                                                                                sat_s8Ywz [Occ=Once]
                                                                                  :: [GHC.Types.Char]
                                                                                [LclId] =
                                                                                    CCCS :! [sat_s8Ywy
                                                                                             w1_s8Ywl];
                                                                              } in 
                                                                                $wloop_s8Ywk
                                                                                    sat_s8Ywz
                                                                                    sat_s8YwA
                                                                                    ipv_s8Ywr;
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                            0# ->
                                                case int2Word# [ipv1_s8Yws] of sat_s8YwB {
                                                  __DEFAULT ->
                                                      case narrow8Word# [sat_s8YwB] of sat_s8YwC {
                                                        __DEFAULT ->
                                                            case
                                                                word2Int# [sat_s8YwC]
                                                            of
                                                            sat_s8YwD
                                                            { __DEFAULT ->
                                                                  case
                                                                      chr# [sat_s8YwD]
                                                                  of
                                                                  sat_s8YwE
                                                                  { __DEFAULT ->
                                                                        let {
                                                                          sat_s8YwF [Occ=Once]
                                                                            :: GHC.Types.Char
                                                                          [LclId] =
                                                                              CCCS GHC.Types.C#! [sat_s8YwE]; } in
                                                                        let {
                                                                          sat_s8YwG [Occ=Once]
                                                                            :: [GHC.Types.Char]
                                                                          [LclId] =
                                                                              CCCS :! [sat_s8YwF
                                                                                       w1_s8Ywl];
                                                                        } in 
                                                                          (#,#) [ipv_s8Ywr
                                                                                 sat_s8YwG];
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in  $wloop_s8Ywk GHC.Types.[] sat_s8YwH w_s8Ywi;
              };
          1# -> (#,#) [w_s8Ywi GHC.Types.[]];
        };

Foreign.C.String.peekCAStringLen1 [InlPrag=NOUSERINLINE[0]]
  :: (GHC.Ptr.Ptr Foreign.C.Types.CChar, GHC.Types.Int)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LS(S)),1*U(U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8YwI w1_s8YwJ]
        case w_s8YwI of {
          (,) ww1_s8YwL [Occ=Once] ww2_s8YwM [Occ=Once!] ->
              case ww2_s8YwM of {
                GHC.Types.I# ww4_s8YwO [Occ=Once] ->
                    Foreign.C.String.$wpeekCAStringLen ww1_s8YwL ww4_s8YwO w1_s8YwJ;
              };
        };

Foreign.C.String.peekCAStringLen
  :: Foreign.C.String.CStringLen -> GHC.Types.IO GHC.Base.String
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LS(S)),1*U(U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.String.peekCAStringLen1 eta_B2 eta_B1;

Foreign.C.String.castCWcharToChar
  :: Foreign.C.Types.CWchar -> GHC.Types.Char
[GblId, Arity=1, Str=<S(S),1*U(U)>m, Unf=OtherCon []] =
    [] \r [ch_s8YwP]
        case ch_s8YwP of {
          GHC.Int.I32# x#_s8YwR ->
              case int2Word# [x#_s8YwR] of sat_s8YwS {
                __DEFAULT ->
                    case leWord# [sat_s8YwS 1114111##] of {
                      __DEFAULT -> GHC.Char.$wlvl x#_s8YwR;
                      1# ->
                          case chr# [x#_s8YwR] of sat_s8YwU {
                            __DEFAULT -> GHC.Types.C# [sat_s8YwU];
                          };
                    };
              };
        };

Foreign.C.String.peekCWString2 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.Base.map Foreign.C.String.castCWcharToChar GHC.Types.[];

Foreign.C.String.$wpeekCWStringLen [InlPrag=NOUSERINLINE[0]]
  :: GHC.Ptr.Ptr Foreign.C.Types.CWchar
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=3, Str=<L,U(U)><S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_s8YwV ww1_s8YwW w_s8YwX]
        case <=# [ww1_s8YwW 0#] of {
          __DEFAULT ->
              case -# [ww1_s8YwW 1#] of sat_s8Yxn {
                __DEFAULT ->
                    let-no-escape {
                      exit_s8YwZ [Occ=OnceL!T[2], Dmd=<C(C(S)),C(C1(U(U,U)))>]
                        :: [Foreign.C.Types.CWchar]
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                      [LclId[JoinId(2)], Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
                          sat-only [ww_s8YwV] \r [w3_s8Yx0 w4_s8Yx1]
                              case ww_s8YwV of {
                                GHC.Ptr.Ptr a_s8Yx3 [Occ=Once] ->
                                    case readInt32OffAddr# [a_s8Yx3 0# w4_s8Yx1] of {
                                      (#,#) ipv_s8Yx5 [Occ=Once] ipv1_s8Yx6 [Occ=Once] ->
                                          let {
                                            sat_s8Yx9 [Occ=Once] :: [GHC.Types.Char]
                                            [LclId] =
                                                [w3_s8Yx0 ipv1_s8Yx6] \u []
                                                    let {
                                                      sat_s8Yx7 [Occ=Once] :: Foreign.C.Types.CWchar
                                                      [LclId] =
                                                          CCCS GHC.Int.I32#! [ipv1_s8Yx6]; } in
                                                    let {
                                                      sat_s8Yx8 [Occ=Once]
                                                        :: [Foreign.C.Types.CWchar]
                                                      [LclId] =
                                                          CCCS :! [sat_s8Yx7 w3_s8Yx0];
                                                    } in 
                                                      GHC.Base.map
                                                          Foreign.C.String.castCWcharToChar
                                                          sat_s8Yx8;
                                          } in  (#,#) [ipv_s8Yx5 sat_s8Yx9];
                                    };
                              };
                    } in 
                      let-no-escape {
                        $wf_s8Yxa [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                          :: GHC.Prim.Int#
                             -> [Foreign.C.Types.CWchar]
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                        [LclId[JoinId(3)],
                         Arity=3,
                         Str=<S,1*U><L,U><S,U>,
                         Unf=OtherCon []] =
                            sat-only [ww_s8YwV exit_s8YwZ $wf_s8Yxa] \r [ww2_s8Yxb
                                                                         w3_s8Yxc
                                                                         w4_s8Yxd]
                                case ww2_s8Yxb of ds_s8Yxe {
                                  __DEFAULT ->
                                      case ww_s8YwV of {
                                        GHC.Ptr.Ptr a_s8Yxg [Occ=Once] ->
                                            case readInt32OffAddr# [a_s8Yxg ds_s8Yxe w4_s8Yxd] of {
                                              (#,#) ipv_s8Yxi [Occ=Once] ipv1_s8Yxj [Occ=Once] ->
                                                  let {
                                                    sat_s8Yxl [Occ=Once] :: Foreign.C.Types.CWchar
                                                    [LclId] =
                                                        CCCS GHC.Int.I32#! [ipv1_s8Yxj]; } in
                                                  let {
                                                    sat_s8Yxm [Occ=Once] :: [Foreign.C.Types.CWchar]
                                                    [LclId] =
                                                        CCCS :! [sat_s8Yxl w3_s8Yxc];
                                                  } in 
                                                    case -# [ds_s8Yxe 1#] of sat_s8Yxk {
                                                      __DEFAULT ->
                                                          $wf_s8Yxa sat_s8Yxk sat_s8Yxm ipv_s8Yxi;
                                                    };
                                            };
                                      };
                                  0# -> exit_s8YwZ w3_s8Yxc w4_s8Yxd;
                                };
                      } in  $wf_s8Yxa sat_s8Yxn GHC.Types.[] w_s8YwX;
              };
          1# -> (#,#) [w_s8YwX Foreign.C.String.peekCWString2];
        };

Foreign.C.String.peekCWStringLen1 [InlPrag=NOUSERINLINE[0]]
  :: (GHC.Ptr.Ptr Foreign.C.Types.CWchar, GHC.Types.Int)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=2,
 Str=<S(LS(S)),1*U(U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8Yxo w1_s8Yxp]
        case w_s8Yxo of {
          (,) ww1_s8Yxr [Occ=Once] ww2_s8Yxs [Occ=Once!] ->
              case ww2_s8Yxs of {
                GHC.Types.I# ww4_s8Yxu [Occ=Once] ->
                    Foreign.C.String.$wpeekCWStringLen ww1_s8Yxr ww4_s8Yxu w1_s8Yxp;
              };
        };

Foreign.C.String.peekCWStringLen
  :: Foreign.C.String.CWStringLen -> GHC.Types.IO GHC.Base.String
[GblId,
 Arity=2,
 Str=<S(LS(S)),1*U(U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.String.peekCWStringLen1 eta_B2 eta_B1;

Foreign.C.String.newCWString3 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [0#];

Foreign.C.String.$wpeekCWString [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Addr#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_s8Yxv w_s8Yxw]
        let-no-escape {
          $w$j_s8Yxx [InlPrag=NOUSERINLINE[0],
                      Occ=OnceL!T[2],
                      Dmd=<C(C(S)),C(C1(U(U,U)))>]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> GHC.Prim.Int#
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
          [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
              sat-only [ww_s8Yxv] \r [w1_s8Yxy ww1_s8Yxz]
                  case <=# [ww1_s8Yxz 0#] of {
                    __DEFAULT ->
                        case -# [ww1_s8Yxz 1#] of sat_s8YxV {
                          __DEFAULT ->
                              let-no-escape {
                                exit_s8YxB [Occ=OnceL!T[2], Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                  :: [Foreign.C.Types.CWchar]
                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                                [LclId[JoinId(2)], Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
                                    sat-only [ww_s8Yxv] \r [w3_s8YxC w4_s8YxD]
                                        case readInt32OffAddr# [ww_s8Yxv 0# w4_s8YxD] of {
                                          (#,#) ipv_s8YxF [Occ=Once] ipv1_s8YxG [Occ=Once] ->
                                              let {
                                                sat_s8YxJ [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    [w3_s8YxC ipv1_s8YxG] \u []
                                                        let {
                                                          sat_s8YxH [Occ=Once]
                                                            :: Foreign.C.Types.CWchar
                                                          [LclId] =
                                                              CCCS GHC.Int.I32#! [ipv1_s8YxG]; } in
                                                        let {
                                                          sat_s8YxI [Occ=Once]
                                                            :: [Foreign.C.Types.CWchar]
                                                          [LclId] =
                                                              CCCS :! [sat_s8YxH w3_s8YxC];
                                                        } in 
                                                          GHC.Base.map
                                                              Foreign.C.String.castCWcharToChar
                                                              sat_s8YxI;
                                              } in  (#,#) [ipv_s8YxF sat_s8YxJ];
                                        };
                              } in 
                                let-no-escape {
                                  $wf_s8YxK [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                    :: GHC.Prim.Int#
                                       -> [Foreign.C.Types.CWchar]
                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                                  [LclId[JoinId(3)],
                                   Arity=3,
                                   Str=<S,1*U><L,U><S,U>,
                                   Unf=OtherCon []] =
                                      sat-only [ww_s8Yxv exit_s8YxB $wf_s8YxK] \r [ww2_s8YxL
                                                                                   w3_s8YxM
                                                                                   w4_s8YxN]
                                          case ww2_s8YxL of ds_s8YxO {
                                            __DEFAULT ->
                                                case
                                                    readInt32OffAddr# [ww_s8Yxv ds_s8YxO w4_s8YxN]
                                                of
                                                { (#,#) ipv_s8YxQ [Occ=Once]
                                                        ipv1_s8YxR [Occ=Once] ->
                                                      let {
                                                        sat_s8YxT [Occ=Once]
                                                          :: Foreign.C.Types.CWchar
                                                        [LclId] =
                                                            CCCS GHC.Int.I32#! [ipv1_s8YxR]; } in
                                                      let {
                                                        sat_s8YxU [Occ=Once]
                                                          :: [Foreign.C.Types.CWchar]
                                                        [LclId] =
                                                            CCCS :! [sat_s8YxT w3_s8YxM];
                                                      } in 
                                                        case -# [ds_s8YxO 1#] of sat_s8YxS {
                                                          __DEFAULT ->
                                                              $wf_s8YxK
                                                                  sat_s8YxS sat_s8YxU ipv_s8YxQ;
                                                        };
                                                };
                                            0# -> exit_s8YxB w3_s8YxM w4_s8YxN;
                                          };
                                } in  $wf_s8YxK sat_s8YxV GHC.Types.[] w1_s8Yxy;
                        };
                    1# -> (#,#) [w1_s8Yxy Foreign.C.String.peekCWString2];
                  };
        } in 
          let-no-escape {
            $wloop_s8YxW [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[2]]
              :: GHC.Prim.Int#
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
            [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
                sat-only [ww_s8Yxv $w$j_s8Yxx $wloop_s8YxW] \r [ww1_s8YxX w1_s8YxY]
                    case readInt32OffAddr# [ww_s8Yxv ww1_s8YxX w1_s8YxY] of {
                      (#,#) ipv_s8Yy0 [Occ=Once*] ipv1_s8Yy1 [Occ=Once!] ->
                          case ipv1_s8Yy1 of {
                            __DEFAULT ->
                                case +# [ww1_s8YxX 1#] of sat_s8Yy3 {
                                  __DEFAULT -> $wloop_s8YxW sat_s8Yy3 ipv_s8Yy0;
                                };
                            0# -> $w$j_s8Yxx ipv_s8Yy0 ww1_s8YxX;
                          };
                    };
          } in  $wloop_s8YxW 0# w_s8Yxw;

Foreign.C.String.peekCWString1 [InlPrag=NOUSERINLINE[0]]
  :: Foreign.C.String.CWString
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [w_s8Yy4 w1_s8Yy5]
        case w_s8Yy4 of {
          GHC.Ptr.Ptr ww1_s8Yy7 [Occ=Once] ->
              Foreign.C.String.$wpeekCWString ww1_s8Yy7 w1_s8Yy5;
        };

Foreign.C.String.peekCWString
  :: Foreign.C.String.CWString -> GHC.Types.IO GHC.Base.String
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] Foreign.C.String.peekCWString1 eta_B2 eta_B1;

Foreign.C.String.newCWString2 :: GHC.Types.Char -> GHC.Int.Int32
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s8Yy8]
        case ch_s8Yy8 of {
          GHC.Types.C# c#_s8Yya [Occ=Once] ->
              case ord# [c#_s8Yya] of sat_s8Yyb {
                __DEFAULT ->
                    case narrow32Int# [sat_s8Yyb] of sat_s8Yyc {
                      __DEFAULT -> GHC.Int.I32# [sat_s8Yyc];
                    };
              };
        };

Foreign.C.String.withCWStringLen1
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CWStringLen -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [str_s8Yyd f_s8Yye eta_s8Yyf]
        case
            GHC.Base.map Foreign.C.String.newCWString2 str_s8Yyd
        of
        vals_s8Yyg [Dmd=<S,U>]
        { __DEFAULT ->
              case GHC.List.$wlenAcc vals_s8Yyg 0# of ww2_s8Yyh {
                __DEFAULT ->
                    case *# [ww2_s8Yyh 4#] of sat_s8Yyi {
                      __DEFAULT ->
                          case newAlignedPinnedByteArray# [sat_s8Yyi 4# eta_s8Yyf] of {
                            (#,#) ipv_s8Yyk [Occ=Once] ipv1_s8Yyl [Occ=Once] ->
                                case unsafeFreezeByteArray# [ipv1_s8Yyl ipv_s8Yyk] of {
                                  (#,#) ipv2_s8Yyn [Occ=Once] ipv3_s8Yyo ->
                                      case byteArrayContents# [ipv3_s8Yyo] of ptr_s8Yyp {
                                        __DEFAULT ->
                                            let-no-escape {
                                              exit_s8Yyq [Occ=OnceL!T[1], Dmd=<C(S),C(U(U,U))>]
                                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         a_a8WZM #)
                                              [LclId[JoinId(1)],
                                               Arity=1,
                                               Str=<S,U>,
                                               Unf=OtherCon []] =
                                                  sat-only [f_s8Yye
                                                            ww2_s8Yyh
                                                            ipv3_s8Yyo
                                                            ptr_s8Yyp] \r [eta1_s8Yyr]
                                                      let {
                                                        sat_s8Yyt [Occ=Once] :: GHC.Types.Int
                                                        [LclId] =
                                                            CCCS GHC.Types.I#! [ww2_s8Yyh]; } in
                                                      let {
                                                        sat_s8Yys [Occ=Once]
                                                          :: GHC.Ptr.Ptr Foreign.C.Types.CWchar
                                                        [LclId] =
                                                            CCCS GHC.Ptr.Ptr! [ptr_s8Yyp]; } in
                                                      let {
                                                        sat_s8Yyu [Occ=Once]
                                                          :: Foreign.C.String.CWStringLen
                                                        [LclId] =
                                                            CCCS (,)! [sat_s8Yys sat_s8Yyt];
                                                      } in 
                                                        case f_s8Yye sat_s8Yyu eta1_s8Yyr of {
                                                          (#,#) ipv4_s8Yyw [Occ=Once]
                                                                ipv5_s8Yyx [Occ=Once] ->
                                                              case
                                                                  touch# [ipv3_s8Yyo ipv4_s8Yyw]
                                                              of
                                                              s4_s8Yyy
                                                              { __DEFAULT ->
                                                                    (#,#) [s4_s8Yyy ipv5_s8Yyx];
                                                              };
                                                        };
                                            } in 
                                              let-no-escape {
                                                go_s8Yyz [Occ=LoopBreakerT[3]]
                                                  :: [Foreign.C.Types.CWchar]
                                                     -> GHC.Prim.Int#
                                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                           a_a8WZM #)
                                                [LclId[JoinId(3)],
                                                 Arity=3,
                                                 Str=<S,1*U><L,U><S,U>,
                                                 Unf=OtherCon []] =
                                                    sat-only [ptr_s8Yyp
                                                              exit_s8Yyq
                                                              go_s8Yyz] \r [ds_s8YyA
                                                                            ds1_s8YyB
                                                                            eta1_s8YyC]
                                                        case ds_s8YyA of {
                                                          [] -> exit_s8Yyq eta1_s8YyC;
                                                          : val_s8YyE [Occ=Once]
                                                            vals1_s8YyF [Occ=Once] ->
                                                              case val_s8YyE of {
                                                                GHC.Int.I32# x_s8YyH [Occ=Once] ->
                                                                    case
                                                                        writeInt32OffAddr# [ptr_s8Yyp
                                                                                            ds1_s8YyB
                                                                                            x_s8YyH
                                                                                            eta1_s8YyC]
                                                                    of
                                                                    s2_s8YyI
                                                                    { __DEFAULT ->
                                                                          case
                                                                              +# [ds1_s8YyB 1#]
                                                                          of
                                                                          sat_s8YyJ
                                                                          { __DEFAULT ->
                                                                                go_s8Yyz
                                                                                    vals1_s8YyF
                                                                                    sat_s8YyJ
                                                                                    s2_s8YyI;
                                                                          };
                                                                    };
                                                              };
                                                        };
                                              } in  go_s8Yyz vals_s8Yyg 0# ipv2_s8Yyn;
                                      };
                                };
                          };
                    };
              };
        };

Foreign.C.String.withCWStringLen
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CWStringLen -> GHC.Types.IO a)
     -> GHC.Types.IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.C.String.withCWStringLen1 eta_B3 eta_B2 eta_B1;

Foreign.C.String.withCWString
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CWString -> GHC.Types.IO a) -> GHC.Types.IO a
[GblId, Arity=1, Str=<L,1*U>, Unf=OtherCon []] =
    [] \r [x_s8YyK]
        let {
          vals_s8YyL [Occ=OnceL] :: [Foreign.C.Types.CWchar]
          [LclId] =
              [x_s8YyK] \u []
                  GHC.Base.map Foreign.C.String.newCWString2 x_s8YyK; } in
        let {
          sat_s8YyP [Occ=OnceT[0]]
            :: (GHC.Ptr.Ptr Foreign.C.Types.CWchar -> GHC.Types.IO a_a8WZU)
               -> GHC.Types.IO a_a8WZU
          [LclId] =
              [vals_s8YyL] \r [x1_s8YyM]
                  let {
                    sat_s8YyO [Occ=Once]
                      :: GHC.Types.Int
                         -> GHC.Ptr.Ptr Foreign.C.Types.CWchar -> GHC.Types.IO a_a8WZU
                    [LclId] =
                        [x1_s8YyM] \r [ds_s8YyN] x1_s8YyM;
                  } in 
                    Foreign.Marshal.Array.withArrayLen0
                        Foreign.C.Types.$fStorableCWchar
                        Foreign.C.String.newCWString3
                        vals_s8YyL
                        sat_s8YyO;
        } in  sat_s8YyP;

Foreign.C.String.newCWString1
  :: [GHC.Types.Char]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Ptr.Ptr Foreign.C.Types.CWchar #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [x_s8YyQ eta_s8YyR]
        case
            GHC.Base.map Foreign.C.String.newCWString2 x_s8YyQ
        of
        sat_s8YyS
        { __DEFAULT ->
              Foreign.Marshal.Array.newArray3
                  Foreign.C.Types.$fStorableCWchar
                  Foreign.C.String.newCWString3
                  sat_s8YyS
                  eta_s8YyR;
        };

Foreign.C.String.newCWString
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CWString
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] Foreign.C.String.newCWString1 eta_B2 eta_B1;

Foreign.C.String.newCWStringLen1
  :: GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Ptr.Ptr Foreign.C.Types.CWchar, GHC.Types.Int) #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [str_s8YyT eta_s8YyU]
        case
            GHC.Base.map Foreign.C.String.newCWString2 str_s8YyT
        of
        xs_s8YyV [Dmd=<S,U>]
        { __DEFAULT ->
              case
                  Foreign.Marshal.Array.newArray1
                      Foreign.C.Types.$fStorableCWchar xs_s8YyV eta_s8YyU
              of
              { (#,#) ipv_s8YyX [Occ=Once] ipv1_s8YyY [Occ=Once] ->
                    let {
                      sat_s8Yz0 [Occ=Once] :: GHC.Types.Int
                      [LclId] =
                          [xs_s8YyV] \u []
                              case GHC.List.$wlenAcc xs_s8YyV 0# of ww2_s8YyZ {
                                __DEFAULT -> GHC.Types.I# [ww2_s8YyZ];
                              }; } in
                    let {
                      sat_s8Yz1 [Occ=Once]
                        :: (GHC.Ptr.Ptr Foreign.C.Types.CWchar, GHC.Types.Int)
                      [LclId] =
                          CCCS (,)! [ipv1_s8YyY sat_s8Yz0];
                    } in  (#,#) [ipv_s8YyX sat_s8Yz1];
              };
        };

Foreign.C.String.newCWStringLen
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CWStringLen
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.String.newCWStringLen1 eta_B2 eta_B1;

Foreign.C.String.castCharToCChar1 :: GHC.Types.Char -> GHC.Int.Int8
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s8Yz2]
        case ch_s8Yz2 of {
          GHC.Types.C# c#_s8Yz4 [Occ=Once] ->
              case ord# [c#_s8Yz4] of sat_s8Yz5 {
                __DEFAULT ->
                    case narrow8Int# [sat_s8Yz5] of sat_s8Yz6 {
                      __DEFAULT -> GHC.Int.I8# [sat_s8Yz6];
                    };
              };
        };

Foreign.C.String.castCharToCSChar
  :: GHC.Types.Char -> Foreign.C.Types.CSChar
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] Foreign.C.String.castCharToCChar1 eta_B1;

Foreign.C.String.castCharToCUChar1
  :: GHC.Types.Char -> GHC.Word.Word8
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s8Yz7]
        case ch_s8Yz7 of {
          GHC.Types.C# c#_s8Yz9 [Occ=Once] ->
              case ord# [c#_s8Yz9] of sat_s8Yza {
                __DEFAULT ->
                    case int2Word# [sat_s8Yza] of sat_s8Yzb {
                      __DEFAULT ->
                          case narrow8Word# [sat_s8Yzb] of sat_s8Yzc {
                            __DEFAULT -> GHC.Word.W8# [sat_s8Yzc];
                          };
                    };
              };
        };

Foreign.C.String.castCharToCUChar
  :: GHC.Types.Char -> Foreign.C.Types.CUChar
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] Foreign.C.String.castCharToCUChar1 eta_B1;

Foreign.C.String.castCharToCChar
  :: GHC.Types.Char -> Foreign.C.Types.CChar
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] Foreign.C.String.castCharToCChar1 eta_B1;

Foreign.C.String.newCAString1
  :: GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Foreign.C.String.CString #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [str_s8Yzd s_s8Yze]
        case GHC.List.$wlenAcc str_s8Yzd 0# of ww2_s8Yzf {
          __DEFAULT ->
              case +# [ww2_s8Yzf 1#] of sat_s8Yzh {
                __DEFAULT ->
                    case int2Word# [sat_s8Yzh] of sat_s8Yzi {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [sat_s8Yzi s_s8Yze] of {
                            (#,#) ds_s8Yzk [Occ=Once*] ds1_s8Yzl ->
                                case eqAddr# [ds1_s8Yzl __NULL] of {
                                  __DEFAULT ->
                                      let-no-escape {
                                        exit_s8Yzn [Occ=OnceL!T[2], Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                          :: GHC.Prim.Int#
                                             -> GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                   Foreign.C.String.CString #)
                                        [LclId[JoinId(2)],
                                         Arity=2,
                                         Str=<S,U><S,U>,
                                         Unf=OtherCon []] =
                                            sat-only [ds1_s8Yzl] \r [ww_s8Yzo w_s8Yzp]
                                                case
                                                    writeInt8OffAddr# [ds1_s8Yzl
                                                                       ww_s8Yzo
                                                                       0#
                                                                       w_s8Yzp]
                                                of
                                                s2_s8Yzq
                                                { __DEFAULT ->
                                                      let {
                                                        sat_s8Yzr [Occ=Once]
                                                          :: GHC.Ptr.Ptr Foreign.C.Types.CChar
                                                        [LclId] =
                                                            CCCS GHC.Ptr.Ptr! [ds1_s8Yzl];
                                                      } in  (#,#) [s2_s8Yzq sat_s8Yzr];
                                                };
                                      } in 
                                        let-no-escape {
                                          $wgo_s8Yzs [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                            :: [GHC.Types.Char]
                                               -> GHC.Prim.Int#
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     Foreign.C.String.CString #)
                                          [LclId[JoinId(3)],
                                           Arity=3,
                                           Str=<S,1*U><S,U><S,U>,
                                           Unf=OtherCon []] =
                                              sat-only [ds1_s8Yzl exit_s8Yzn $wgo_s8Yzs] \r [w_s8Yzt
                                                                                             ww_s8Yzu
                                                                                             w1_s8Yzv]
                                                  case w_s8Yzt of {
                                                    [] -> exit_s8Yzn ww_s8Yzu w1_s8Yzv;
                                                    : c_s8Yzx [Occ=Once!] cs_s8Yzy [Occ=Once] ->
                                                        case c_s8Yzx of {
                                                          GHC.Types.C# c#_s8YzA [Occ=Once] ->
                                                              case ord# [c#_s8YzA] of sat_s8YzB {
                                                                __DEFAULT ->
                                                                    case
                                                                        narrow8Int# [sat_s8YzB]
                                                                    of
                                                                    sat_s8YzC
                                                                    { __DEFAULT ->
                                                                          case
                                                                              writeInt8OffAddr# [ds1_s8Yzl
                                                                                                 ww_s8Yzu
                                                                                                 sat_s8YzC
                                                                                                 w1_s8Yzv]
                                                                          of
                                                                          s2_s8YzD
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    +# [ww_s8Yzu 1#]
                                                                                of
                                                                                sat_s8YzE
                                                                                { __DEFAULT ->
                                                                                      $wgo_s8Yzs
                                                                                          cs_s8Yzy
                                                                                          sat_s8YzE
                                                                                          s2_s8YzD;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                        } in  $wgo_s8Yzs str_s8Yzd 0# ds_s8Yzk;
                                  1# -> raiseIO# [Foreign.Marshal.Alloc.malloc1 ds_s8Yzk];
                                };
                          };
                    };
              };
        };

Foreign.C.String.newCAString
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CString
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] Foreign.C.String.newCAString1 eta_B2 eta_B1;

Foreign.C.String.newCAStringLen1
  :: GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Foreign.C.String.CStringLen #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [str_s8YzF eta_s8YzG]
        case GHC.List.$wlenAcc str_s8YzF 0# of ww2_s8YzH {
          __DEFAULT ->
              case +# [ww2_s8YzH 1#] of sat_s8YzJ {
                __DEFAULT ->
                    case int2Word# [sat_s8YzJ] of sat_s8YzK {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [sat_s8YzK eta_s8YzG] of {
                            (#,#) ds_s8YzM [Occ=Once*] ds1_s8YzN ->
                                case eqAddr# [ds1_s8YzN __NULL] of {
                                  __DEFAULT ->
                                      let-no-escape {
                                        exit_s8YzP [Occ=OnceL!T[1], Dmd=<C(S),C(U(U,U))>]
                                          :: GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                   Foreign.C.String.CStringLen #)
                                        [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                            sat-only [ww2_s8YzH ds1_s8YzN] \r [w_s8YzQ]
                                                let {
                                                  sat_s8YzS [Occ=Once] :: GHC.Types.Int
                                                  [LclId] =
                                                      CCCS GHC.Types.I#! [ww2_s8YzH]; } in
                                                let {
                                                  sat_s8YzR [Occ=Once]
                                                    :: GHC.Ptr.Ptr Foreign.C.Types.CChar
                                                  [LclId] =
                                                      CCCS GHC.Ptr.Ptr! [ds1_s8YzN]; } in
                                                let {
                                                  sat_s8YzT [Occ=Once]
                                                    :: (GHC.Ptr.Ptr Foreign.C.Types.CChar,
                                                        GHC.Types.Int)
                                                  [LclId] =
                                                      CCCS (,)! [sat_s8YzR sat_s8YzS];
                                                } in  (#,#) [w_s8YzQ sat_s8YzT];
                                      } in 
                                        let-no-escape {
                                          $wgo_s8YzU [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                            :: [GHC.Types.Char]
                                               -> GHC.Prim.Int#
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     Foreign.C.String.CStringLen #)
                                          [LclId[JoinId(3)],
                                           Arity=3,
                                           Str=<S,1*U><L,U><S,U>,
                                           Unf=OtherCon []] =
                                              sat-only [ds1_s8YzN exit_s8YzP $wgo_s8YzU] \r [w_s8YzV
                                                                                             ww_s8YzW
                                                                                             w1_s8YzX]
                                                  case w_s8YzV of {
                                                    [] -> exit_s8YzP w1_s8YzX;
                                                    : c_s8YzZ [Occ=Once!] cs_s8YA0 [Occ=Once] ->
                                                        case c_s8YzZ of {
                                                          GHC.Types.C# c#_s8YA2 [Occ=Once] ->
                                                              case ord# [c#_s8YA2] of sat_s8YA3 {
                                                                __DEFAULT ->
                                                                    case
                                                                        narrow8Int# [sat_s8YA3]
                                                                    of
                                                                    sat_s8YA4
                                                                    { __DEFAULT ->
                                                                          case
                                                                              writeInt8OffAddr# [ds1_s8YzN
                                                                                                 ww_s8YzW
                                                                                                 sat_s8YA4
                                                                                                 w1_s8YzX]
                                                                          of
                                                                          s2_s8YA5
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    +# [ww_s8YzW 1#]
                                                                                of
                                                                                sat_s8YA6
                                                                                { __DEFAULT ->
                                                                                      $wgo_s8YzU
                                                                                          cs_s8YA0
                                                                                          sat_s8YA6
                                                                                          s2_s8YA5;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                        } in  $wgo_s8YzU str_s8YzF 0# ds_s8YzM;
                                  1# -> raiseIO# [Foreign.Marshal.Alloc.malloc1 ds_s8YzM];
                                };
                          };
                    };
              };
        };

Foreign.C.String.newCAStringLen
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CStringLen
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.String.newCAStringLen1 eta_B2 eta_B1;

Foreign.C.String.withCAString1
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CString -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [str_s8YA8 f_s8YA9 eta1_s8YAa]
        case GHC.List.$wlenAcc str_s8YA8 0# of ww2_s8YAb {
          __DEFAULT ->
              case +# [ww2_s8YAb 1#] of sat_s8YAc {
                __DEFAULT ->
                    case newAlignedPinnedByteArray# [sat_s8YAc 1# eta1_s8YAa] of {
                      (#,#) ipv_s8YAe [Occ=Once] ipv1_s8YAf [Occ=Once] ->
                          case unsafeFreezeByteArray# [ipv1_s8YAf ipv_s8YAe] of {
                            (#,#) ipv2_s8YAh [Occ=Once] ipv3_s8YAi ->
                                case byteArrayContents# [ipv3_s8YAi] of ptr_s8YAj [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      let-no-escape {
                                        exit_s8YAk [Occ=OnceL!T[2], Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                          :: GHC.Prim.Int#
                                             -> GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a8X3s #)
                                        [LclId[JoinId(2)],
                                         Arity=2,
                                         Str=<S,U><S,U>,
                                         Unf=OtherCon []] =
                                            sat-only [f_s8YA9 ipv3_s8YAi ptr_s8YAj] \r [ww_s8YAl
                                                                                        w_s8YAm]
                                                case
                                                    writeInt8OffAddr# [ptr_s8YAj
                                                                       ww_s8YAl
                                                                       0#
                                                                       w_s8YAm]
                                                of
                                                s2_s8YAn
                                                { __DEFAULT ->
                                                      let {
                                                        sat_s8YAo [Occ=Once]
                                                          :: Foreign.C.String.CString
                                                        [LclId] =
                                                            CCCS GHC.Ptr.Ptr! [ptr_s8YAj];
                                                      } in 
                                                        case f_s8YA9 sat_s8YAo s2_s8YAn of {
                                                          (#,#) ipv4_s8YAq [Occ=Once]
                                                                ipv5_s8YAr [Occ=Once] ->
                                                              case
                                                                  touch# [ipv3_s8YAi ipv4_s8YAq]
                                                              of
                                                              s4_s8YAs
                                                              { __DEFAULT ->
                                                                    (#,#) [s4_s8YAs ipv5_s8YAr];
                                                              };
                                                        };
                                                };
                                      } in 
                                        let-no-escape {
                                          $wgo_s8YAt [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                            :: [GHC.Types.Char]
                                               -> GHC.Prim.Int#
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a8X3s #)
                                          [LclId[JoinId(3)],
                                           Arity=3,
                                           Str=<S,1*U><S,U><S,U>,
                                           Unf=OtherCon []] =
                                              sat-only [ptr_s8YAj exit_s8YAk $wgo_s8YAt] \r [w_s8YAu
                                                                                             ww_s8YAv
                                                                                             w1_s8YAw]
                                                  case w_s8YAu of {
                                                    [] -> exit_s8YAk ww_s8YAv w1_s8YAw;
                                                    : c_s8YAy [Occ=Once!] cs_s8YAz [Occ=Once] ->
                                                        case c_s8YAy of {
                                                          GHC.Types.C# c#_s8YAB [Occ=Once] ->
                                                              case ord# [c#_s8YAB] of sat_s8YAC {
                                                                __DEFAULT ->
                                                                    case
                                                                        narrow8Int# [sat_s8YAC]
                                                                    of
                                                                    sat_s8YAD
                                                                    { __DEFAULT ->
                                                                          case
                                                                              writeInt8OffAddr# [ptr_s8YAj
                                                                                                 ww_s8YAv
                                                                                                 sat_s8YAD
                                                                                                 w1_s8YAw]
                                                                          of
                                                                          s2_s8YAE
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    +# [ww_s8YAv 1#]
                                                                                of
                                                                                sat_s8YAF
                                                                                { __DEFAULT ->
                                                                                      $wgo_s8YAt
                                                                                          cs_s8YAz
                                                                                          sat_s8YAF
                                                                                          s2_s8YAE;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                        } in  $wgo_s8YAt str_s8YA8 0# ipv2_s8YAh;
                                };
                          };
                    };
              };
        };

Foreign.C.String.withCAString
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CString -> GHC.Types.IO a) -> GHC.Types.IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.C.String.withCAString1 eta_B3 eta_B2 eta_B1;

Foreign.C.String.withCAStringLen1
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CStringLen -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [str_s8YAG f_s8YAH eta_s8YAI]
        case GHC.List.$wlenAcc str_s8YAG 0# of ww2_s8YAJ {
          __DEFAULT ->
              case newAlignedPinnedByteArray# [ww2_s8YAJ 1# eta_s8YAI] of {
                (#,#) ipv_s8YAL [Occ=Once] ipv1_s8YAM [Occ=Once] ->
                    case unsafeFreezeByteArray# [ipv1_s8YAM ipv_s8YAL] of {
                      (#,#) ipv2_s8YAO [Occ=Once] ipv3_s8YAP ->
                          case byteArrayContents# [ipv3_s8YAP] of ptr_s8YAQ {
                            __DEFAULT ->
                                let-no-escape {
                                  exit_s8YAR [Occ=OnceL!T[1], Dmd=<C(S),C(U(U,U))>]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a8X4j #)
                                  [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                      sat-only [f_s8YAH ww2_s8YAJ ipv3_s8YAP ptr_s8YAQ] \r [w_s8YAS]
                                          let {
                                            sat_s8YAU [Occ=Once] :: GHC.Types.Int
                                            [LclId] =
                                                CCCS GHC.Types.I#! [ww2_s8YAJ]; } in
                                          let {
                                            sat_s8YAT [Occ=Once]
                                              :: GHC.Ptr.Ptr Foreign.C.Types.CChar
                                            [LclId] =
                                                CCCS GHC.Ptr.Ptr! [ptr_s8YAQ]; } in
                                          let {
                                            sat_s8YAV [Occ=Once] :: Foreign.C.String.CStringLen
                                            [LclId] =
                                                CCCS (,)! [sat_s8YAT sat_s8YAU];
                                          } in 
                                            case f_s8YAH sat_s8YAV w_s8YAS of {
                                              (#,#) ipv4_s8YAX [Occ=Once] ipv5_s8YAY [Occ=Once] ->
                                                  case touch# [ipv3_s8YAP ipv4_s8YAX] of s4_s8YAZ {
                                                    __DEFAULT -> (#,#) [s4_s8YAZ ipv5_s8YAY];
                                                  };
                                            };
                                } in 
                                  let-no-escape {
                                    $wgo_s8YB0 [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                      :: [GHC.Types.Char]
                                         -> GHC.Prim.Int#
                                         -> GHC.Prim.State# GHC.Prim.RealWorld
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a8X4j #)
                                    [LclId[JoinId(3)],
                                     Arity=3,
                                     Str=<S,1*U><L,U><S,U>,
                                     Unf=OtherCon []] =
                                        sat-only [ptr_s8YAQ exit_s8YAR $wgo_s8YB0] \r [w_s8YB1
                                                                                       ww_s8YB2
                                                                                       w1_s8YB3]
                                            case w_s8YB1 of {
                                              [] -> exit_s8YAR w1_s8YB3;
                                              : c_s8YB5 [Occ=Once!] cs_s8YB6 [Occ=Once] ->
                                                  case c_s8YB5 of {
                                                    GHC.Types.C# c#_s8YB8 [Occ=Once] ->
                                                        case ord# [c#_s8YB8] of sat_s8YB9 {
                                                          __DEFAULT ->
                                                              case
                                                                  narrow8Int# [sat_s8YB9]
                                                              of
                                                              sat_s8YBa
                                                              { __DEFAULT ->
                                                                    case
                                                                        writeInt8OffAddr# [ptr_s8YAQ
                                                                                           ww_s8YB2
                                                                                           sat_s8YBa
                                                                                           w1_s8YB3]
                                                                    of
                                                                    s2_s8YBb
                                                                    { __DEFAULT ->
                                                                          case
                                                                              +# [ww_s8YB2 1#]
                                                                          of
                                                                          sat_s8YBc
                                                                          { __DEFAULT ->
                                                                                $wgo_s8YB0
                                                                                    cs_s8YB6
                                                                                    sat_s8YBc
                                                                                    s2_s8YBb;
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                  } in  $wgo_s8YB0 str_s8YAG 0# ipv2_s8YAO;
                          };
                    };
              };
        };

Foreign.C.String.withCAStringLen
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CStringLen -> GHC.Types.IO a)
     -> GHC.Types.IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.C.String.withCAStringLen1 eta_B3 eta_B2 eta_B1;


==================== STG syntax: ====================
2018-03-16 16:04:07.408317575 UTC

Foreign.C.String.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Foreign.C.String.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.String.$trModule4];

Foreign.C.String.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.C.String"#;

Foreign.C.String.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.String.$trModule2];

Foreign.C.String.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.C.String.$trModule3
                                     Foreign.C.String.$trModule1];

Foreign.C.String.withCStringLen1
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CStringLen -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Str=<L,U><L,C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [s_s8Ypb f_s8Ypc void_0E]
        case GHC.IO.Encoding.getForeignEncoding GHC.Prim.void# of {
          Unit# ipv1_s8Ypg [Occ=Once!] ->
              case ipv1_s8Ypg of {
                GHC.IO.Encoding.Types.TextEncoding _ [Occ=Dead]
                                                   _ [Occ=Dead]
                                                   ds4_s8Ypk [Occ=Once] ->
                    let {
                      sat_s8Yql [Occ=Once]
                        :: GHC.IO.Encoding.Types.TextEncoder estate_a8RVZ
                           -> GHC.Types.IO a_a8X7M
                      [LclId] =
                          [s_s8Ypb f_s8Ypc] \r [encoder_s8Ypl void_0E]
                              case GHC.List.$wlenAcc s_s8Ypb 0# of ww2_s8Ypn {
                                __DEFAULT ->
                                    case *# [ww2_s8Ypn 4#] of sat_s8Ypo {
                                      __DEFAULT ->
                                          case
                                              newAlignedPinnedByteArray# [sat_s8Ypo
                                                                          4#
                                                                          GHC.Prim.void#]
                                          of
                                          { Unit# ipv3_s8Ypr [Occ=Once] ->
                                                case
                                                    unsafeFreezeByteArray# [ipv3_s8Ypr
                                                                            GHC.Prim.void#]
                                                of
                                                { Unit# ipv5_s8Ypu ->
                                                      case
                                                          byteArrayContents# [ipv5_s8Ypu]
                                                      of
                                                      ptr_s8Ypv
                                                      { __DEFAULT ->
                                                            let-no-escape {
                                                              $w$j_s8Ypw [InlPrag=NOUSERINLINE[0],
                                                                          Occ=OnceL!T[1],
                                                                          Dmd=<C(S),C(U)>]
                                                                :: GHC.Prim.State#
                                                                     GHC.Prim.RealWorld
                                                                   -> (# GHC.Prim.State#
                                                                           GHC.Prim.RealWorld,
                                                                         a_a8X7M #)
                                                              [LclId[JoinId(1)],
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [f_s8Ypc
                                                                            encoder_s8Ypl
                                                                            ww2_s8Ypn
                                                                            ipv5_s8Ypu
                                                                            ptr_s8Ypv] \r [void_0E]
                                                                      case
                                                                          newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                                                      GHC.Prim.void#]
                                                                      of
                                                                      { Unit# ipv7_s8YpA [Occ=OnceL] ->
                                                                            let {
                                                                              ipv8_s8YpB [Occ=OnceL]
                                                                                :: GHC.ForeignPtr.ForeignPtrContents
                                                                              [LclId,
                                                                               Unf=OtherCon []] =
                                                                                  CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv7_s8YpA]; } in
                                                                            let {
                                                                              ipv9_s8YpC [Occ=OnceL]
                                                                                :: GHC.IO.Buffer.Buffer
                                                                                     GHC.Types.Char
                                                                              [LclId,
                                                                               Unf=OtherCon []] =
                                                                                  CCCS GHC.IO.Buffer.Buffer! [ptr_s8Ypv
                                                                                                              ipv8_s8YpB
                                                                                                              GHC.IO.Buffer.ReadBuffer
                                                                                                              ww2_s8Ypn
                                                                                                              0#
                                                                                                              ww2_s8Ypn]; } in
                                                                            let {
                                                                              $wgo_s8YpD [InlPrag=NOUSERINLINE[0],
                                                                                          Occ=LoopBreaker]
                                                                                :: GHC.Prim.Int#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld,
                                                                                         a_a8X7M #)
                                                                              [LclId,
                                                                               Arity=2,
                                                                               Str=<S,U><S,U>,
                                                                               Unf=OtherCon []] =
                                                                                  sat-only [f_s8Ypc
                                                                                            encoder_s8Ypl
                                                                                            ipv9_s8YpC
                                                                                            $wgo_s8YpD] \r [ww_s8YpE
                                                                                                            void_0E]
                                                                                      case
                                                                                          newPinnedByteArray# [ww_s8YpE
                                                                                                               GHC.Prim.void#]
                                                                                      of
                                                                                      { Unit# ipv11_s8YpI [Occ=Once] ->
                                                                                            case
                                                                                                unsafeFreezeByteArray# [ipv11_s8YpI
                                                                                                                        GHC.Prim.void#]
                                                                                            of
                                                                                            { Unit# ipv13_s8YpL ->
                                                                                                  case
                                                                                                      encoder_s8Ypl
                                                                                                  of
                                                                                                  { GHC.IO.Encoding.Types.BufferCodec ww3_s8YpN [Occ=Once]
                                                                                                                                      ww4_s8YpO [Occ=Once]
                                                                                                                                      _ [Occ=Dead]
                                                                                                                                      _ [Occ=Dead]
                                                                                                                                      _ [Occ=Dead] ->
                                                                                                        let {
                                                                                                          sat_s8YpT [Occ=Once]
                                                                                                            :: GHC.Types.Int
                                                                                                          [LclId] =
                                                                                                              CCCS GHC.Types.I#! [ww_s8YpE];
                                                                                                        } in 
                                                                                                          case
                                                                                                              byteArrayContents# [ipv13_s8YpL]
                                                                                                          of
                                                                                                          sat_s8YpS
                                                                                                          { __DEFAULT ->
                                                                                                                case
                                                                                                                    GHC.Foreign.$wtryFillBufferAndCall
                                                                                                                        ww3_s8YpN
                                                                                                                        ww4_s8YpO
                                                                                                                        GHC.Types.False
                                                                                                                        ipv9_s8YpC
                                                                                                                        sat_s8YpS
                                                                                                                        sat_s8YpT
                                                                                                                        f_s8Ypc
                                                                                                                        GHC.Prim.void#
                                                                                                                of
                                                                                                                { Unit# ipv15_s8YpW [Occ=Once!] ->
                                                                                                                      case
                                                                                                                          ipv15_s8YpW
                                                                                                                      of
                                                                                                                      { GHC.Base.Nothing ->
                                                                                                                            case
                                                                                                                                *# [ww_s8YpE
                                                                                                                                    2#]
                                                                                                                            of
                                                                                                                            sat_s8YpY
                                                                                                                            { __DEFAULT ->
                                                                                                                                  case
                                                                                                                                      $wgo_s8YpD
                                                                                                                                          sat_s8YpY
                                                                                                                                          GHC.Prim.void#
                                                                                                                                  of
                                                                                                                                  { Unit# ipv17_s8Yq1 [Occ=Once] ->
                                                                                                                                        case
                                                                                                                                            touch# [ipv13_s8YpL
                                                                                                                                                    GHC.Prim.void#]
                                                                                                                                        of
                                                                                                                                        s4_s8Yq2
                                                                                                                                        { (##) ->
                                                                                                                                              Unit# [ipv17_s8Yq1];
                                                                                                                                        };
                                                                                                                                  };
                                                                                                                            };
                                                                                                                        GHC.Base.Just res_s8Yq3 [Occ=Once] ->
                                                                                                                            case
                                                                                                                                touch# [ipv13_s8YpL
                                                                                                                                        GHC.Prim.void#]
                                                                                                                            of
                                                                                                                            s4_s8Yq4
                                                                                                                            { (##) ->
                                                                                                                                  Unit# [res_s8Yq3];
                                                                                                                            };
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                            } in 
                                                                              case
                                                                                  +# [ww2_s8Ypn 1#]
                                                                              of
                                                                              sat_s8Yq5
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        $wgo_s8YpD
                                                                                            sat_s8Yq5
                                                                                            GHC.Prim.void#
                                                                                    of
                                                                                    { Unit# ipv11_s8Yq8 [Occ=Once] ->
                                                                                          case
                                                                                              touch# [ipv5_s8Ypu
                                                                                                      GHC.Prim.void#]
                                                                                          of
                                                                                          s4_s8Yq9
                                                                                          { (##) ->
                                                                                                Unit# [ipv11_s8Yq8];
                                                                                          };
                                                                                    };
                                                                              };
                                                                      };
                                                            } in 
                                                              let-no-escape {
                                                                go_s8Yqa [Occ=LoopBreakerT[3]]
                                                                  :: [GHC.Types.Char]
                                                                     -> GHC.Prim.Int#
                                                                     -> GHC.Prim.State#
                                                                          GHC.Prim.RealWorld
                                                                     -> (# GHC.Prim.State#
                                                                             GHC.Prim.RealWorld,
                                                                           a_a8X7M #)
                                                                [LclId[JoinId(3)],
                                                                 Arity=3,
                                                                 Str=<S,1*U><L,U><S,U>,
                                                                 Unf=OtherCon []] =
                                                                    sat-only [ptr_s8Ypv
                                                                              $w$j_s8Ypw
                                                                              go_s8Yqa] \r [ds7_s8Yqb
                                                                                            ds8_s8Yqc
                                                                                            void_0E]
                                                                        case ds7_s8Yqb of {
                                                                          [] ->
                                                                              $w$j_s8Ypw
                                                                                  GHC.Prim.void#;
                                                                          : val_s8Yqf [Occ=Once!]
                                                                            vals_s8Yqg [Occ=Once] ->
                                                                              case val_s8Yqf of {
                                                                                GHC.Types.C# x_s8Yqi [Occ=Once] ->
                                                                                    case
                                                                                        writeWideCharOffAddr# [ptr_s8Ypv
                                                                                                               ds8_s8Yqc
                                                                                                               x_s8Yqi
                                                                                                               GHC.Prim.void#]
                                                                                    of
                                                                                    s2_s8Yqj
                                                                                    { (##) ->
                                                                                          case
                                                                                              +# [ds8_s8Yqc
                                                                                                  1#]
                                                                                          of
                                                                                          sat_s8Yqk
                                                                                          { __DEFAULT ->
                                                                                                go_s8Yqa
                                                                                                    vals_s8Yqg
                                                                                                    sat_s8Yqk
                                                                                                    GHC.Prim.void#;
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                              } in 
                                                                go_s8Yqa s_s8Ypb 0# GHC.Prim.void#;
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.bracket1
                          ds4_s8Ypk GHC.IO.Encoding.Types.close sat_s8Yql GHC.Prim.void#;
              };
        };

Foreign.C.String.withCStringLen
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CStringLen -> GHC.Types.IO a)
     -> GHC.Types.IO a
[GblId,
 Arity=3,
 Str=<L,U><L,C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.C.String.withCStringLen1 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.String.withCString1
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CString -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Str=<L,U><L,C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [s_s8Yqm f_s8Yqn void_0E]
        case GHC.IO.Encoding.getForeignEncoding GHC.Prim.void# of {
          Unit# ipv1_s8Yqr [Occ=Once] ->
              GHC.Foreign.charIsRepresentable3
                  ipv1_s8Yqr s_s8Yqm f_s8Yqn GHC.Prim.void#;
        };

Foreign.C.String.withCString
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CString -> GHC.Types.IO a) -> GHC.Types.IO a
[GblId,
 Arity=3,
 Str=<L,U><L,C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.C.String.withCString1 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.String.charIsRepresentable1
  :: GHC.Types.Char
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=2, Str=<L,U(U)><S,U>, Unf=OtherCon []] =
    [] \r [c_s8Yqs void_0E]
        case GHC.IO.Encoding.getForeignEncoding GHC.Prim.void# of {
          Unit# ipv1_s8Yqw [Occ=Once] ->
              GHC.Foreign.charIsRepresentable1 ipv1_s8Yqw c_s8Yqs GHC.Prim.void#;
        };

Foreign.C.String.charIsRepresentable
  :: GHC.Types.Char -> GHC.Types.IO GHC.Types.Bool
[GblId, Arity=2, Str=<L,U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.charIsRepresentable1 eta_B2 GHC.Prim.void#;

Foreign.C.String.newCStringLen2 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

Foreign.C.String.newCStringLen1
  :: GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Foreign.CStringLen #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [s_s8Yqx void_0E]
        case GHC.IO.Encoding.getForeignEncoding GHC.Prim.void# of {
          Unit# ipv1_s8YqB [Occ=Once!] ->
              case ipv1_s8YqB of {
                GHC.IO.Encoding.Types.TextEncoding _ [Occ=Dead]
                                                   _ [Occ=Dead]
                                                   ds4_s8YqF [Occ=Once] ->
                    let {
                      sat_s8YsE [Occ=Once]
                        :: GHC.IO.Encoding.Types.TextEncoder estate_a8RYT
                           -> GHC.Types.IO GHC.Foreign.CStringLen
                      [LclId] =
                          [s_s8Yqx] \r [encoder_s8YqG void_0E]
                              case GHC.List.$wlenAcc s_s8Yqx 0# of ww2_s8YqI {
                                __DEFAULT ->
                                    case *# [ww2_s8YqI 4#] of sat_s8YqJ {
                                      __DEFAULT ->
                                          case
                                              newAlignedPinnedByteArray# [sat_s8YqJ
                                                                          4#
                                                                          GHC.Prim.void#]
                                          of
                                          { Unit# ipv3_s8YqM [Occ=Once] ->
                                                case
                                                    unsafeFreezeByteArray# [ipv3_s8YqM
                                                                            GHC.Prim.void#]
                                                of
                                                { Unit# ipv5_s8YqP ->
                                                      case
                                                          byteArrayContents# [ipv5_s8YqP]
                                                      of
                                                      ptr_s8YqQ
                                                      { __DEFAULT ->
                                                            let-no-escape {
                                                              $w$j_s8YqR [InlPrag=NOUSERINLINE[0],
                                                                          Occ=OnceL!T[1],
                                                                          Dmd=<C(S),C(U)>]
                                                                :: GHC.Prim.State#
                                                                     GHC.Prim.RealWorld
                                                                   -> (# GHC.Prim.State#
                                                                           GHC.Prim.RealWorld,
                                                                         GHC.Foreign.CStringLen #)
                                                              [LclId[JoinId(1)],
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [encoder_s8YqG
                                                                            ww2_s8YqI
                                                                            ipv5_s8YqP
                                                                            ptr_s8YqQ] \r [void_0E]
                                                                      case
                                                                          newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                                                      GHC.Prim.void#]
                                                                      of
                                                                      { Unit# ipv7_s8YqV [Occ=OnceL] ->
                                                                            case
                                                                                +# [ww2_s8YqI 1#]
                                                                            of
                                                                            to_sz_bytes_s8YqW [Dmd=<S,U>]
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      int2Word# [to_sz_bytes_s8YqW]
                                                                                  of
                                                                                  sat_s8YqY
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            __pkg_ccall base-4.11.0.0 [sat_s8YqY
                                                                                                                       GHC.Prim.void#]
                                                                                        of
                                                                                        { Unit# ds9_s8Yr1 ->
                                                                                              case
                                                                                                  eqAddr# [ds9_s8Yr1
                                                                                                           __NULL]
                                                                                              of
                                                                                              { __DEFAULT ->
                                                                                                    let {
                                                                                                      ipv8_s8Yr3 [Occ=OnceL]
                                                                                                        :: GHC.ForeignPtr.ForeignPtrContents
                                                                                                      [LclId,
                                                                                                       Unf=OtherCon []] =
                                                                                                          CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv7_s8YqV]; } in
                                                                                                    let {
                                                                                                      ipv9_s8Yr4 [Occ=OnceL]
                                                                                                        :: GHC.IO.Buffer.Buffer
                                                                                                             GHC.Types.Char
                                                                                                      [LclId,
                                                                                                       Unf=OtherCon []] =
                                                                                                          CCCS GHC.IO.Buffer.Buffer! [ptr_s8YqQ
                                                                                                                                      ipv8_s8Yr3
                                                                                                                                      GHC.IO.Buffer.ReadBuffer
                                                                                                                                      ww2_s8YqI
                                                                                                                                      0#
                                                                                                                                      ww2_s8YqI]; } in
                                                                                                    let {
                                                                                                      sat_s8Ysr [Occ=Once]
                                                                                                        :: GHC.Types.Int
                                                                                                      [LclId] =
                                                                                                          CCCS GHC.Types.I#! [to_sz_bytes_s8YqW];
                                                                                                    } in 
                                                                                                      let-no-escape {
                                                                                                        $j_s8Yr5 [Occ=OnceL!T[2],
                                                                                                                  Dmd=<L,C(C1(U))>]
                                                                                                          :: GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                             -> GHC.Foreign.CStringLen
                                                                                                             -> (# GHC.Prim.State#
                                                                                                                     GHC.Prim.RealWorld,
                                                                                                                   GHC.Foreign.CStringLen #)
                                                                                                        [LclId[JoinId(2)],
                                                                                                         Arity=2,
                                                                                                         Str=<S,U><L,U>,
                                                                                                         Unf=OtherCon []] =
                                                                                                            sat-only [ipv5_s8YqP] \r [void_0E
                                                                                                                                      ipv11_s8Yr7]
                                                                                                                case
                                                                                                                    touch# [ipv5_s8YqP
                                                                                                                            GHC.Prim.void#]
                                                                                                                of
                                                                                                                s4_s8Yr8
                                                                                                                { (##) ->
                                                                                                                      Unit# [ipv11_s8Yr7];
                                                                                                                };
                                                                                                      } in 
                                                                                                        let-no-escape {
                                                                                                          $wgo_s8Yr9 [InlPrag=NOUSERINLINE[0],
                                                                                                                      Occ=LoopBreakerT[3]]
                                                                                                            :: GHC.Prim.Addr#
                                                                                                               -> GHC.Types.Int
                                                                                                               -> GHC.Prim.State#
                                                                                                                    GHC.Prim.RealWorld
                                                                                                               -> (# GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld,
                                                                                                                     GHC.Foreign.CStringLen #)
                                                                                                          [LclId[JoinId(3)],
                                                                                                           Arity=3,
                                                                                                           Str=<L,U><L,U(U)><S,U>,
                                                                                                           Unf=OtherCon []] =
                                                                                                              sat-only [encoder_s8YqG
                                                                                                                        ipv9_s8Yr4
                                                                                                                        $j_s8Yr5
                                                                                                                        $wgo_s8Yr9] \r [ww_s8Yra
                                                                                                                                        w1_s8Yrb
                                                                                                                                        void_0E]
                                                                                                                  case
                                                                                                                      encoder_s8YqG
                                                                                                                  of
                                                                                                                  { GHC.IO.Encoding.Types.BufferCodec ww3_s8Yre [Occ=OnceL!]
                                                                                                                                                      ww4_s8Yrf [Occ=OnceL!]
                                                                                                                                                      _ [Occ=Dead]
                                                                                                                                                      _ [Occ=Dead]
                                                                                                                                                      _ [Occ=Dead] ->
                                                                                                                        case
                                                                                                                            newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                                                                                                        GHC.Prim.void#]
                                                                                                                        of
                                                                                                                        { Unit# ipv13_s8Yrl [Occ=Once] ->
                                                                                                                              let {
                                                                                                                                sat_s8Ysq [Occ=Once]
                                                                                                                                  :: GHC.IO.Buffer.Buffer
                                                                                                                                       GHC.Word.Word8
                                                                                                                                [LclId] =
                                                                                                                                    [ww_s8Yra
                                                                                                                                     w1_s8Yrb
                                                                                                                                     ipv13_s8Yrl] \u []
                                                                                                                                        case
                                                                                                                                            w1_s8Yrb
                                                                                                                                        of
                                                                                                                                        { GHC.Types.I# dt4_s8Yso [Occ=Once] ->
                                                                                                                                              let {
                                                                                                                                                sat_s8Ysp [Occ=Once]
                                                                                                                                                  :: GHC.ForeignPtr.ForeignPtrContents
                                                                                                                                                [LclId] =
                                                                                                                                                    CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv13_s8Yrl];
                                                                                                                                              } in 
                                                                                                                                                GHC.IO.Buffer.Buffer [ww_s8Yra
                                                                                                                                                                      sat_s8Ysp
                                                                                                                                                                      GHC.IO.Buffer.WriteBuffer
                                                                                                                                                                      dt4_s8Yso
                                                                                                                                                                      0#
                                                                                                                                                                      0#];
                                                                                                                                        };
                                                                                                                              } in 
                                                                                                                                let-no-escape {
                                                                                                                                  $j1_s8Yrm [Dmd=<L,C(C1(U))>]
                                                                                                                                    :: GHC.Prim.State#
                                                                                                                                         GHC.Prim.RealWorld
                                                                                                                                       -> GHC.Base.Maybe
                                                                                                                                            GHC.Foreign.CStringLen
                                                                                                                                       -> (# GHC.Prim.State#
                                                                                                                                               GHC.Prim.RealWorld,
                                                                                                                                             GHC.Foreign.CStringLen #)
                                                                                                                                  [LclId[JoinId(2)],
                                                                                                                                   Arity=2,
                                                                                                                                   Str=<S,U><S,1*U>,
                                                                                                                                   Unf=OtherCon []] =
                                                                                                                                      sat-only [$j_s8Yr5
                                                                                                                                                $wgo_s8Yr9
                                                                                                                                                ww_s8Yra
                                                                                                                                                w1_s8Yrb] \r [void_0E
                                                                                                                                                              ipv11_s8Yro]
                                                                                                                                          case
                                                                                                                                              ipv11_s8Yro
                                                                                                                                          of
                                                                                                                                          { GHC.Base.Nothing ->
                                                                                                                                                case
                                                                                                                                                    w1_s8Yrb
                                                                                                                                                of
                                                                                                                                                { GHC.Types.I# x_s8Yrr [Occ=Once] ->
                                                                                                                                                      case
                                                                                                                                                          *# [x_s8Yrr
                                                                                                                                                              2#]
                                                                                                                                                      of
                                                                                                                                                      ds_s8Yrs
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            case
                                                                                                                                                                int2Word# [ds_s8Yrs]
                                                                                                                                                            of
                                                                                                                                                            sat_s8Yru
                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                  case
                                                                                                                                                                      __pkg_ccall base-4.11.0.0 [ww_s8Yra
                                                                                                                                                                                                 sat_s8Yru
                                                                                                                                                                                                 GHC.Prim.void#]
                                                                                                                                                                  of
                                                                                                                                                                  { Unit# ds12_s8Yrx ->
                                                                                                                                                                        case
                                                                                                                                                                            eqAddr# [ds12_s8Yrx
                                                                                                                                                                                     __NULL]
                                                                                                                                                                        of
                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                              let {
                                                                                                                                                                                sat_s8Yrz [Occ=Once]
                                                                                                                                                                                  :: GHC.Types.Int
                                                                                                                                                                                [LclId] =
                                                                                                                                                                                    CCCS GHC.Types.I#! [ds_s8Yrs];
                                                                                                                                                                              } in 
                                                                                                                                                                                $wgo_s8Yr9
                                                                                                                                                                                    ds12_s8Yrx
                                                                                                                                                                                    sat_s8Yrz
                                                                                                                                                                                    GHC.Prim.void#;
                                                                                                                                                                          1# ->
                                                                                                                                                                              raiseIO# [Foreign.Marshal.Alloc.realloc2
                                                                                                                                                                                        GHC.Prim.void#];
                                                                                                                                                                        };
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                        0# ->
                                                                                                                                                            case
                                                                                                                                                                __pkg_ccall base-4.11.0.0 [ww_s8Yra
                                                                                                                                                                                           GHC.Prim.void#]
                                                                                                                                                            of
                                                                                                                                                            { (##) ->
                                                                                                                                                                  $wgo_s8Yr9
                                                                                                                                                                      __NULL
                                                                                                                                                                      Foreign.C.String.newCStringLen2
                                                                                                                                                                      GHC.Prim.void#;
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                            GHC.Base.Just res_s8YrE [Occ=Once] ->
                                                                                                                                                $j_s8Yr5
                                                                                                                                                    GHC.Prim.void#
                                                                                                                                                    res_s8YrE;
                                                                                                                                          };
                                                                                                                                } in 
                                                                                                                                  let-no-escape {
                                                                                                                                    exit_s8YrF [Occ=OnceL!T[1],
                                                                                                                                                Dmd=<L,C(U)>]
                                                                                                                                      :: GHC.Prim.State#
                                                                                                                                           GHC.Prim.RealWorld
                                                                                                                                         -> (# GHC.Prim.State#
                                                                                                                                                 GHC.Prim.RealWorld,
                                                                                                                                               GHC.Foreign.CStringLen #)
                                                                                                                                    [LclId[JoinId(1)],
                                                                                                                                     Arity=1,
                                                                                                                                     Str=<S,U>,
                                                                                                                                     Unf=OtherCon []] =
                                                                                                                                        sat-only [$j1_s8Yrm] \r [void_0E]
                                                                                                                                            $j1_s8Yrm
                                                                                                                                                GHC.Prim.void#
                                                                                                                                                GHC.Base.Nothing;
                                                                                                                                  } in 
                                                                                                                                    let-no-escape {
                                                                                                                                      exit1_s8YrH [Occ=OnceL!T[2],
                                                                                                                                                   Dmd=<L,C(C1(U))>]
                                                                                                                                        :: GHC.Prim.State#
                                                                                                                                             GHC.Prim.RealWorld
                                                                                                                                           -> GHC.IO.Buffer.Buffer
                                                                                                                                                GHC.Word.Word8
                                                                                                                                           -> (# GHC.Prim.State#
                                                                                                                                                   GHC.Prim.RealWorld,
                                                                                                                                                 GHC.Foreign.CStringLen #)
                                                                                                                                      [LclId[JoinId(2)],
                                                                                                                                       Arity=2,
                                                                                                                                       Str=<S,U><S,1*U(U,U,A,A,U,U)>,
                                                                                                                                       Unf=OtherCon []] =
                                                                                                                                          sat-only [$j1_s8Yrm] \r [void_0E
                                                                                                                                                                   to'_s8YrJ]
                                                                                                                                              case
                                                                                                                                                  to'_s8YrJ
                                                                                                                                              of
                                                                                                                                              { GHC.IO.Buffer.Buffer ww9_s8YrL [Occ=Once]
                                                                                                                                                                     ww10_s8YrM [Occ=Once]
                                                                                                                                                                     _ [Occ=Dead]
                                                                                                                                                                     _ [Occ=Dead]
                                                                                                                                                                     ww13_s8YrP [Occ=Once]
                                                                                                                                                                     ww14_s8YrQ [Occ=Once] ->
                                                                                                                                                    case
                                                                                                                                                        touch# [ww10_s8YrM
                                                                                                                                                                GHC.Prim.void#]
                                                                                                                                                    of
                                                                                                                                                    s'_s8YrR
                                                                                                                                                    { (##) ->
                                                                                                                                                          case
                                                                                                                                                              -# [ww14_s8YrQ
                                                                                                                                                                  ww13_s8YrP]
                                                                                                                                                          of
                                                                                                                                                          sat_s8YrT
                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                let {
                                                                                                                                                                  sat_s8YrU [Occ=Once]
                                                                                                                                                                    :: GHC.Types.Int
                                                                                                                                                                  [LclId] =
                                                                                                                                                                      CCCS GHC.Types.I#! [sat_s8YrT]; } in
                                                                                                                                                                let {
                                                                                                                                                                  sat_s8YrS [Occ=Once]
                                                                                                                                                                    :: GHC.Ptr.Ptr
                                                                                                                                                                         Foreign.C.Types.CChar
                                                                                                                                                                  [LclId] =
                                                                                                                                                                      CCCS GHC.Ptr.Ptr! [ww9_s8YrL]; } in
                                                                                                                                                                let {
                                                                                                                                                                  sat_s8YrV [Occ=Once]
                                                                                                                                                                    :: GHC.Foreign.CStringLen
                                                                                                                                                                  [LclId] =
                                                                                                                                                                      CCCS (,)! [sat_s8YrS
                                                                                                                                                                                 sat_s8YrU]; } in
                                                                                                                                                                let {
                                                                                                                                                                  sat_s8YrW [Occ=Once]
                                                                                                                                                                    :: GHC.Base.Maybe
                                                                                                                                                                         GHC.Foreign.CStringLen
                                                                                                                                                                  [LclId] =
                                                                                                                                                                      CCCS GHC.Base.Just! [sat_s8YrV];
                                                                                                                                                                } in 
                                                                                                                                                                  $j1_s8Yrm
                                                                                                                                                                      GHC.Prim.void#
                                                                                                                                                                      sat_s8YrW;
                                                                                                                                                          };
                                                                                                                                                    };
                                                                                                                                              };
                                                                                                                                    } in 
                                                                                                                                      let-no-escape {
                                                                                                                                        $wgo1_s8YrX [InlPrag=NOUSERINLINE[0],
                                                                                                                                                     Occ=LoopBreakerT[3]]
                                                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                                                                             -> GHC.IO.Buffer.Buffer
                                                                                                                                                  GHC.Word.Word8
                                                                                                                                             -> GHC.Prim.State#
                                                                                                                                                  GHC.Prim.RealWorld
                                                                                                                                             -> (# GHC.Prim.State#
                                                                                                                                                     GHC.Prim.RealWorld,
                                                                                                                                                   GHC.Foreign.CStringLen #)
                                                                                                                                        [LclId[JoinId(3)],
                                                                                                                                         Arity=3,
                                                                                                                                         Str=<L,U><L,U><S,U>,
                                                                                                                                         Unf=OtherCon []] =
                                                                                                                                            sat-only [ww3_s8Yre
                                                                                                                                                      ww4_s8Yrf
                                                                                                                                                      exit_s8YrF
                                                                                                                                                      exit1_s8YrH
                                                                                                                                                      $wgo1_s8YrX] \r [ww8_s8YrY
                                                                                                                                                                       ww9_s8YrZ
                                                                                                                                                                       void_0E]
                                                                                                                                                case
                                                                                                                                                    ww3_s8Yre
                                                                                                                                                        ww8_s8YrY
                                                                                                                                                        ww9_s8YrZ
                                                                                                                                                        GHC.Prim.void#
                                                                                                                                                of
                                                                                                                                                { Unit# ipv15_s8Ys3 [Occ=Once!] ->
                                                                                                                                                      case
                                                                                                                                                          ipv15_s8Ys3
                                                                                                                                                      of
                                                                                                                                                      { (,,) why_s8Ys5 [Occ=Once!]
                                                                                                                                                             from'_s8Ys6 [Occ=Once!]
                                                                                                                                                             to'_s8Ys7 [Occ=Once*] ->
                                                                                                                                                            case
                                                                                                                                                                from'_s8Ys6
                                                                                                                                                            of
                                                                                                                                                            wild3_s8Ys8
                                                                                                                                                            { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                                                                                                                   _ [Occ=Dead]
                                                                                                                                                                                   _ [Occ=Dead]
                                                                                                                                                                                   _ [Occ=Dead]
                                                                                                                                                                                   dt3_s8Ysd [Occ=Once]
                                                                                                                                                                                   dt4_s8Yse [Occ=Once] ->
                                                                                                                                                                  case
                                                                                                                                                                      ==# [dt3_s8Ysd
                                                                                                                                                                           dt4_s8Yse]
                                                                                                                                                                  of
                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                        case
                                                                                                                                                                            why_s8Ys5
                                                                                                                                                                        of
                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                              case
                                                                                                                                                                                  ww4_s8Yrf
                                                                                                                                                                                      wild3_s8Ys8
                                                                                                                                                                                      to'_s8Ys7
                                                                                                                                                                                      GHC.Prim.void#
                                                                                                                                                                              of
                                                                                                                                                                              { Unit# ipv17_s8Ysj [Occ=Once!] ->
                                                                                                                                                                                    case
                                                                                                                                                                                        ipv17_s8Ysj
                                                                                                                                                                                    of
                                                                                                                                                                                    { (,) ww11_s8Ysl [Occ=Once]
                                                                                                                                                                                          ww12_s8Ysm [Occ=Once] ->
                                                                                                                                                                                          $wgo1_s8YrX
                                                                                                                                                                                              ww11_s8Ysl
                                                                                                                                                                                              ww12_s8Ysm
                                                                                                                                                                                              GHC.Prim.void#;
                                                                                                                                                                                    };
                                                                                                                                                                              };
                                                                                                                                                                          GHC.IO.Encoding.Types.OutputUnderflow ->
                                                                                                                                                                              exit_s8YrF
                                                                                                                                                                                  GHC.Prim.void#;
                                                                                                                                                                        };
                                                                                                                                                                    1# ->
                                                                                                                                                                        exit1_s8YrH
                                                                                                                                                                            GHC.Prim.void#
                                                                                                                                                                            to'_s8Ys7;
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                      } in 
                                                                                                                                        $wgo1_s8YrX
                                                                                                                                            ipv9_s8Yr4
                                                                                                                                            sat_s8Ysq
                                                                                                                                            GHC.Prim.void#;
                                                                                                                        };
                                                                                                                  };
                                                                                                        } in 
                                                                                                          $wgo_s8Yr9
                                                                                                              ds9_s8Yr1
                                                                                                              sat_s8Ysr
                                                                                                              GHC.Prim.void#;
                                                                                                1# ->
                                                                                                    raiseIO# [Foreign.Marshal.Alloc.malloc1
                                                                                                              GHC.Prim.void#];
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                      };
                                                            } in 
                                                              let-no-escape {
                                                                go_s8Yst [Occ=LoopBreakerT[3]]
                                                                  :: [GHC.Types.Char]
                                                                     -> GHC.Prim.Int#
                                                                     -> GHC.Prim.State#
                                                                          GHC.Prim.RealWorld
                                                                     -> (# GHC.Prim.State#
                                                                             GHC.Prim.RealWorld,
                                                                           GHC.Foreign.CStringLen #)
                                                                [LclId[JoinId(3)],
                                                                 Arity=3,
                                                                 Str=<S,1*U><L,U><S,U>,
                                                                 Unf=OtherCon []] =
                                                                    sat-only [ptr_s8YqQ
                                                                              $w$j_s8YqR
                                                                              go_s8Yst] \r [ds7_s8Ysu
                                                                                            ds8_s8Ysv
                                                                                            void_0E]
                                                                        case ds7_s8Ysu of {
                                                                          [] ->
                                                                              $w$j_s8YqR
                                                                                  GHC.Prim.void#;
                                                                          : val_s8Ysy [Occ=Once!]
                                                                            vals_s8Ysz [Occ=Once] ->
                                                                              case val_s8Ysy of {
                                                                                GHC.Types.C# x_s8YsB [Occ=Once] ->
                                                                                    case
                                                                                        writeWideCharOffAddr# [ptr_s8YqQ
                                                                                                               ds8_s8Ysv
                                                                                                               x_s8YsB
                                                                                                               GHC.Prim.void#]
                                                                                    of
                                                                                    s2_s8YsC
                                                                                    { (##) ->
                                                                                          case
                                                                                              +# [ds8_s8Ysv
                                                                                                  1#]
                                                                                          of
                                                                                          sat_s8YsD
                                                                                          { __DEFAULT ->
                                                                                                go_s8Yst
                                                                                                    vals_s8Ysz
                                                                                                    sat_s8YsD
                                                                                                    GHC.Prim.void#;
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                              } in 
                                                                go_s8Yst s_s8Yqx 0# GHC.Prim.void#;
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.bracket1
                          ds4_s8YqF GHC.IO.Encoding.Types.close sat_s8YsE GHC.Prim.void#;
              };
        };

Foreign.C.String.newCStringLen
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CStringLen
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.newCStringLen1 eta_B2 GHC.Prim.void#;

Foreign.C.String.newCString1
  :: GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Foreign.CString #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [s_s8YsF void_0E]
        case GHC.IO.Encoding.getForeignEncoding GHC.Prim.void# of {
          Unit# ipv1_s8YsJ [Occ=Once] ->
              GHC.Foreign.newCString1 ipv1_s8YsJ s_s8YsF GHC.Prim.void#;
        };

Foreign.C.String.newCString
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CString
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.newCString1 eta_B2 GHC.Prim.void#;

Foreign.C.String.peekCStringLen1
  :: Foreign.C.String.CStringLen
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=2,
 Str=<L,1*U(1*U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [s_s8YsK void_0E]
        case GHC.IO.Encoding.getForeignEncoding GHC.Prim.void# of {
          Unit# ipv1_s8YsO [Occ=Once!] ->
              case ipv1_s8YsO of {
                GHC.IO.Encoding.Types.TextEncoding _ [Occ=Dead]
                                                   ds3_s8YsR [Occ=Once]
                                                   _ [Occ=Dead] ->
                    case s_s8YsK of {
                      (,) p_s8YsU [Occ=Once] sz_bytes_s8YsV [Occ=Once!] ->
                          let {
                            sat_s8Yvd [Occ=Once]
                              :: GHC.IO.Encoding.Types.TextDecoder dstate_a8RPc
                                 -> GHC.Types.IO [GHC.IO.Buffer.CharBufElem]
                            [LclId] =
                                [p_s8YsU sz_bytes_s8YsV] \r [decoder_s8YsW void_0E]
                                    case p_s8YsU of {
                                      GHC.Ptr.Ptr obj_s8YsZ [Occ=Once] ->
                                          case
                                              newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                          GHC.Prim.void#]
                                          of
                                          { Unit# ipv3_s8Yt2 [Occ=Once] ->
                                                case sz_bytes_s8YsV of {
                                                  GHC.Types.I# x1_s8Yt4 ->
                                                      let-no-escape {
                                                        $j_s8Yt5 [Occ=Once*!T[1],
                                                                  Dmd=<C(S),1*C1(U)>]
                                                          :: GHC.Prim.Int#
                                                             -> (# GHC.Prim.State#
                                                                     GHC.Prim.RealWorld,
                                                                   [GHC.IO.Buffer.CharBufElem] #)
                                                        [LclId[JoinId(1)],
                                                         Arity=1,
                                                         Str=<S,U>,
                                                         Unf=OtherCon []] =
                                                            sat-only [decoder_s8YsW
                                                                      obj_s8YsZ
                                                                      ipv3_s8Yt2
                                                                      x1_s8Yt4] \r [x_s8Yt6]
                                                                case
                                                                    *# [x_s8Yt6 4#]
                                                                of
                                                                x2_s8Yt7 [Dmd=<S,U>]
                                                                { __DEFAULT ->
                                                                      case <# [x2_s8Yt7 0#] of {
                                                                        __DEFAULT ->
                                                                            case
                                                                                newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                                                            GHC.Prim.void#]
                                                                            of
                                                                            { Unit# ipv5_s8Ytb [Occ=OnceL] ->
                                                                                  case
                                                                                      newPinnedByteArray# [x2_s8Yt7
                                                                                                           GHC.Prim.void#]
                                                                                  of
                                                                                  { Unit# ipv7_s8Yte ->
                                                                                        case
                                                                                            byteArrayContents# [ipv7_s8Yte]
                                                                                        of
                                                                                        ipv8_s8Ytf
                                                                                        { __DEFAULT ->
                                                                                              let {
                                                                                                ipv9_s8Ytg [Occ=OnceL]
                                                                                                  :: GHC.ForeignPtr.ForeignPtrContents
                                                                                                [LclId,
                                                                                                 Unf=OtherCon []] =
                                                                                                    CCCS GHC.ForeignPtr.MallocPtr! [ipv7_s8Yte
                                                                                                                                    ipv5_s8Ytb]; } in
                                                                                              let {
                                                                                                ipv10_s8Yth [Occ=OnceL]
                                                                                                  :: GHC.IO.Buffer.CharBuffer
                                                                                                [LclId,
                                                                                                 Unf=OtherCon []] =
                                                                                                    CCCS GHC.IO.Buffer.Buffer! [ipv8_s8Ytf
                                                                                                                                ipv9_s8Ytg
                                                                                                                                GHC.IO.Buffer.WriteBuffer
                                                                                                                                x_s8Yt6
                                                                                                                                0#
                                                                                                                                0#]; } in
                                                                                              let {
                                                                                                $wgo_s8Yti [InlPrag=NOUSERINLINE[0],
                                                                                                            Occ=LoopBreaker]
                                                                                                  :: GHC.IO.Buffer.Buffer
                                                                                                       GHC.Word.Word8
                                                                                                     -> GHC.Prim.State#
                                                                                                          GHC.Prim.RealWorld
                                                                                                     -> (# GHC.Prim.State#
                                                                                                             GHC.Prim.RealWorld,
                                                                                                           [GHC.IO.Buffer.CharBufElem] #)
                                                                                                [LclId,
                                                                                                 Arity=2,
                                                                                                 Str=<L,U><S,U>,
                                                                                                 Unf=OtherCon []] =
                                                                                                    sat-only [decoder_s8YsW
                                                                                                              ipv10_s8Yth
                                                                                                              $wgo_s8Yti] \r [w_s8Ytj
                                                                                                                              void_0E]
                                                                                                        case
                                                                                                            decoder_s8YsW
                                                                                                        of
                                                                                                        { GHC.IO.Encoding.Types.BufferCodec ds8_s8Ytm [Occ=Once!]
                                                                                                                                            ds9_s8Ytn [Occ=Once!]
                                                                                                                                            _ [Occ=Dead]
                                                                                                                                            _ [Occ=Dead]
                                                                                                                                            _ [Occ=Dead] ->
                                                                                                              case
                                                                                                                  ds8_s8Ytm
                                                                                                                      w_s8Ytj
                                                                                                                      ipv10_s8Yth
                                                                                                                      GHC.Prim.void#
                                                                                                              of
                                                                                                              { Unit# ipv12_s8Ytt [Occ=Once!] ->
                                                                                                                    case
                                                                                                                        ipv12_s8Ytt
                                                                                                                    of
                                                                                                                    { (,,) why_s8Ytv [Occ=Once!]
                                                                                                                           from'_s8Ytw [Occ=Once!]
                                                                                                                           to'_s8Ytx [Occ=Once*] ->
                                                                                                                          case
                                                                                                                              from'_s8Ytw
                                                                                                                          of
                                                                                                                          wild6_s8Yty
                                                                                                                          { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                                                                                 _ [Occ=Dead]
                                                                                                                                                 _ [Occ=Dead]
                                                                                                                                                 _ [Occ=Dead]
                                                                                                                                                 dt3_s8YtD [Occ=Once]
                                                                                                                                                 dt4_s8YtE [Occ=Once] ->
                                                                                                                                case
                                                                                                                                    ==# [dt3_s8YtD
                                                                                                                                         dt4_s8YtE]
                                                                                                                                of
                                                                                                                                { __DEFAULT ->
                                                                                                                                      let-no-escape {
                                                                                                                                        $w$j1_s8YtG [InlPrag=NOUSERINLINE[0],
                                                                                                                                                     Occ=Once*!T[6],
                                                                                                                                                     Dmd=<L,1*C1(C1(C1(C1(C1(C1(U(U,U)))))))>]
                                                                                                                                          :: GHC.Prim.State#
                                                                                                                                               GHC.Prim.RealWorld
                                                                                                                                             -> GHC.IO.Buffer.Buffer
                                                                                                                                                  GHC.Word.Word8
                                                                                                                                             -> GHC.Prim.Addr#
                                                                                                                                             -> GHC.ForeignPtr.ForeignPtrContents
                                                                                                                                             -> GHC.Prim.Int#
                                                                                                                                             -> GHC.Prim.Int#
                                                                                                                                             -> (# GHC.Prim.State#
                                                                                                                                                     GHC.Prim.RealWorld,
                                                                                                                                                   [GHC.IO.Buffer.CharBufElem] #)
                                                                                                                                        [LclId[JoinId(6)],
                                                                                                                                         Arity=6,
                                                                                                                                         Str=<S,U><L,U><L,U><L,U><S,U><S,U>,
                                                                                                                                         Unf=OtherCon []] =
                                                                                                                                            sat-only [$wgo_s8Yti] \r [void_0E
                                                                                                                                                                      ww_s8YtI
                                                                                                                                                                      ww1_s8YtJ
                                                                                                                                                                      ww2_s8YtK
                                                                                                                                                                      ww3_s8YtL
                                                                                                                                                                      ww4_s8YtM]
                                                                                                                                                case
                                                                                                                                                    -# [ww4_s8YtM
                                                                                                                                                        ww3_s8YtL]
                                                                                                                                                of
                                                                                                                                                ww5_s8YtN [Dmd=<S,U>]
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      case
                                                                                                                                                          <=# [ww5_s8YtN
                                                                                                                                                               0#]
                                                                                                                                                      of
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            case
                                                                                                                                                                -# [ww5_s8YtN
                                                                                                                                                                    1#]
                                                                                                                                                            of
                                                                                                                                                            sat_s8Yud
                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                  let-no-escape {
                                                                                                                                                                    exit_s8YtP [Occ=OnceL!T[2],
                                                                                                                                                                                Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                                                                                                                                                      :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                         -> GHC.Prim.State#
                                                                                                                                                                              GHC.Prim.RealWorld
                                                                                                                                                                         -> (# GHC.Prim.State#
                                                                                                                                                                                 GHC.Prim.RealWorld,
                                                                                                                                                                               [GHC.IO.Buffer.CharBufElem] #)
                                                                                                                                                                    [LclId[JoinId(2)],
                                                                                                                                                                     Arity=2,
                                                                                                                                                                     Str=<L,U><S,U>,
                                                                                                                                                                     Unf=OtherCon []] =
                                                                                                                                                                        sat-only [$wgo_s8Yti
                                                                                                                                                                                  ww_s8YtI
                                                                                                                                                                                  ww1_s8YtJ
                                                                                                                                                                                  ww2_s8YtK] \r [w3_s8YtQ
                                                                                                                                                                                                 void_0E]
                                                                                                                                                                            case
                                                                                                                                                                                readWideCharOffAddr# [ww1_s8YtJ
                                                                                                                                                                                                      0#
                                                                                                                                                                                                      GHC.Prim.void#]
                                                                                                                                                                            of
                                                                                                                                                                            { Unit# ipv14_s8YtU [Occ=Once] ->
                                                                                                                                                                                  case
                                                                                                                                                                                      touch# [ww2_s8YtK
                                                                                                                                                                                              GHC.Prim.void#]
                                                                                                                                                                                  of
                                                                                                                                                                                  s'_s8YtV
                                                                                                                                                                                  { (##) ->
                                                                                                                                                                                        case
                                                                                                                                                                                            $wgo_s8Yti
                                                                                                                                                                                                ww_s8YtI
                                                                                                                                                                                                GHC.Prim.void#
                                                                                                                                                                                        of
                                                                                                                                                                                        { Unit# ipv16_s8YtY [Occ=Once] ->
                                                                                                                                                                                              let {
                                                                                                                                                                                                sat_s8Yu1 [Occ=Once]
                                                                                                                                                                                                  :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                                                [LclId] =
                                                                                                                                                                                                    [w3_s8YtQ
                                                                                                                                                                                                     ipv14_s8YtU
                                                                                                                                                                                                     ipv16_s8YtY] \u []
                                                                                                                                                                                                        let {
                                                                                                                                                                                                          sat_s8YtZ [Occ=Once]
                                                                                                                                                                                                            :: GHC.IO.Buffer.CharBufElem
                                                                                                                                                                                                          [LclId] =
                                                                                                                                                                                                              CCCS GHC.Types.C#! [ipv14_s8YtU]; } in
                                                                                                                                                                                                        let {
                                                                                                                                                                                                          sat_s8Yu0 [Occ=Once]
                                                                                                                                                                                                            :: [GHC.Types.Char]
                                                                                                                                                                                                          [LclId] =
                                                                                                                                                                                                              CCCS :! [sat_s8YtZ
                                                                                                                                                                                                                       w3_s8YtQ];
                                                                                                                                                                                                        } in 
                                                                                                                                                                                                          GHC.Base.++
                                                                                                                                                                                                              sat_s8Yu0
                                                                                                                                                                                                              ipv16_s8YtY;
                                                                                                                                                                                              } in 
                                                                                                                                                                                                Unit# [sat_s8Yu1];
                                                                                                                                                                                        };
                                                                                                                                                                                  };
                                                                                                                                                                            };
                                                                                                                                                                  } in 
                                                                                                                                                                    let-no-escape {
                                                                                                                                                                      $wf_s8Yu2 [InlPrag=NOUSERINLINE[0],
                                                                                                                                                                                 Occ=LoopBreakerT[3]]
                                                                                                                                                                        :: GHC.Prim.Int#
                                                                                                                                                                           -> [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                           -> GHC.Prim.State#
                                                                                                                                                                                GHC.Prim.RealWorld
                                                                                                                                                                           -> (# GHC.Prim.State#
                                                                                                                                                                                   GHC.Prim.RealWorld,
                                                                                                                                                                                 [GHC.IO.Buffer.CharBufElem] #)
                                                                                                                                                                      [LclId[JoinId(3)],
                                                                                                                                                                       Arity=3,
                                                                                                                                                                       Str=<S,1*U><L,U><S,U>,
                                                                                                                                                                       Unf=OtherCon []] =
                                                                                                                                                                          sat-only [ww1_s8YtJ
                                                                                                                                                                                    exit_s8YtP
                                                                                                                                                                                    $wf_s8Yu2] \r [ww6_s8Yu3
                                                                                                                                                                                                   w3_s8Yu4
                                                                                                                                                                                                   void_0E]
                                                                                                                                                                              case
                                                                                                                                                                                  ww6_s8Yu3
                                                                                                                                                                              of
                                                                                                                                                                              ds_s8Yu6
                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                    case
                                                                                                                                                                                        readWideCharOffAddr# [ww1_s8YtJ
                                                                                                                                                                                                              ds_s8Yu6
                                                                                                                                                                                                              GHC.Prim.void#]
                                                                                                                                                                                    of
                                                                                                                                                                                    { Unit# ipv14_s8Yu9 [Occ=Once] ->
                                                                                                                                                                                          let {
                                                                                                                                                                                            sat_s8Yub [Occ=Once]
                                                                                                                                                                                              :: GHC.IO.Buffer.CharBufElem
                                                                                                                                                                                            [LclId] =
                                                                                                                                                                                                CCCS GHC.Types.C#! [ipv14_s8Yu9]; } in
                                                                                                                                                                                          let {
                                                                                                                                                                                            sat_s8Yuc [Occ=Once]
                                                                                                                                                                                              :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                                            [LclId] =
                                                                                                                                                                                                CCCS :! [sat_s8Yub
                                                                                                                                                                                                         w3_s8Yu4];
                                                                                                                                                                                          } in 
                                                                                                                                                                                            case
                                                                                                                                                                                                -# [ds_s8Yu6
                                                                                                                                                                                                    1#]
                                                                                                                                                                                            of
                                                                                                                                                                                            sat_s8Yua
                                                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                                                  $wf_s8Yu2
                                                                                                                                                                                                      sat_s8Yua
                                                                                                                                                                                                      sat_s8Yuc
                                                                                                                                                                                                      GHC.Prim.void#;
                                                                                                                                                                                            };
                                                                                                                                                                                    };
                                                                                                                                                                                0# ->
                                                                                                                                                                                    exit_s8YtP
                                                                                                                                                                                        w3_s8Yu4
                                                                                                                                                                                        GHC.Prim.void#;
                                                                                                                                                                              };
                                                                                                                                                                    } in 
                                                                                                                                                                      $wf_s8Yu2
                                                                                                                                                                          sat_s8Yud
                                                                                                                                                                          GHC.Types.[]
                                                                                                                                                                          GHC.Prim.void#;
                                                                                                                                                            };
                                                                                                                                                        1# ->
                                                                                                                                                            case
                                                                                                                                                                touch# [ww2_s8YtK
                                                                                                                                                                        GHC.Prim.void#]
                                                                                                                                                            of
                                                                                                                                                            s'_s8Yue
                                                                                                                                                            { (##) ->
                                                                                                                                                                  case
                                                                                                                                                                      $wgo_s8Yti
                                                                                                                                                                          ww_s8YtI
                                                                                                                                                                          GHC.Prim.void#
                                                                                                                                                                  of
                                                                                                                                                                  { Unit# ipv16_s8Yuh [Occ=Once] ->
                                                                                                                                                                        let {
                                                                                                                                                                          sat_s8Yui [Occ=Once]
                                                                                                                                                                            :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                          [LclId] =
                                                                                                                                                                              [ipv16_s8Yuh] \u []
                                                                                                                                                                                  GHC.Base.++
                                                                                                                                                                                      GHC.Types.[]
                                                                                                                                                                                      ipv16_s8Yuh;
                                                                                                                                                                        } in 
                                                                                                                                                                          Unit# [sat_s8Yui];
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                      } in 
                                                                                                                                        case
                                                                                                                                            why_s8Ytv
                                                                                                                                        of
                                                                                                                                        { __DEFAULT ->
                                                                                                                                              case
                                                                                                                                                  ds9_s8Ytn
                                                                                                                                                      wild6_s8Yty
                                                                                                                                                      to'_s8Ytx
                                                                                                                                                      GHC.Prim.void#
                                                                                                                                              of
                                                                                                                                              { Unit# ipv14_s8Yum [Occ=Once!] ->
                                                                                                                                                    case
                                                                                                                                                        ipv14_s8Yum
                                                                                                                                                    of
                                                                                                                                                    { (,) ww1_s8Yuo [Occ=Once]
                                                                                                                                                          ww2_s8Yup [Occ=Once!] ->
                                                                                                                                                          case
                                                                                                                                                              ww2_s8Yup
                                                                                                                                                          of
                                                                                                                                                          { GHC.IO.Buffer.Buffer ww4_s8Yur [Occ=Once]
                                                                                                                                                                                 ww5_s8Yus [Occ=Once]
                                                                                                                                                                                 _ [Occ=Dead]
                                                                                                                                                                                 _ [Occ=Dead]
                                                                                                                                                                                 ww8_s8Yuv [Occ=Once]
                                                                                                                                                                                 ww9_s8Yuw [Occ=Once] ->
                                                                                                                                                                $w$j1_s8YtG
                                                                                                                                                                    GHC.Prim.void#
                                                                                                                                                                    ww1_s8Yuo
                                                                                                                                                                    ww4_s8Yur
                                                                                                                                                                    ww5_s8Yus
                                                                                                                                                                    ww8_s8Yuv
                                                                                                                                                                    ww9_s8Yuw;
                                                                                                                                                          };
                                                                                                                                                    };
                                                                                                                                              };
                                                                                                                                          GHC.IO.Encoding.Types.OutputUnderflow ->
                                                                                                                                              case
                                                                                                                                                  to'_s8Ytx
                                                                                                                                              of
                                                                                                                                              { GHC.IO.Buffer.Buffer ww1_s8Yuy [Occ=Once]
                                                                                                                                                                     ww2_s8Yuz [Occ=Once]
                                                                                                                                                                     _ [Occ=Dead]
                                                                                                                                                                     _ [Occ=Dead]
                                                                                                                                                                     ww5_s8YuC [Occ=Once]
                                                                                                                                                                     ww6_s8YuD [Occ=Once] ->
                                                                                                                                                    $w$j1_s8YtG
                                                                                                                                                        GHC.Prim.void#
                                                                                                                                                        wild6_s8Yty
                                                                                                                                                        ww1_s8Yuy
                                                                                                                                                        ww2_s8Yuz
                                                                                                                                                        ww5_s8YuC
                                                                                                                                                        ww6_s8YuD;
                                                                                                                                              };
                                                                                                                                        };
                                                                                                                                  1# ->
                                                                                                                                      case
                                                                                                                                          to'_s8Ytx
                                                                                                                                      of
                                                                                                                                      { GHC.IO.Buffer.Buffer dt7_s8YuF
                                                                                                                                                             dt8_s8YuG [Occ=Once*]
                                                                                                                                                             _ [Occ=Dead]
                                                                                                                                                             _ [Occ=Dead]
                                                                                                                                                             dt10_s8YuJ [Occ=Once]
                                                                                                                                                             dt11_s8YuK [Occ=Once] ->
                                                                                                                                            case
                                                                                                                                                -# [dt11_s8YuK
                                                                                                                                                    dt10_s8YuJ]
                                                                                                                                            of
                                                                                                                                            ww_s8YuL [Dmd=<S,U>]
                                                                                                                                            { __DEFAULT ->
                                                                                                                                                  case
                                                                                                                                                      <=# [ww_s8YuL
                                                                                                                                                           0#]
                                                                                                                                                  of
                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                        case
                                                                                                                                                            -# [ww_s8YuL
                                                                                                                                                                1#]
                                                                                                                                                        of
                                                                                                                                                        sat_s8Yv7
                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                              let-no-escape {
                                                                                                                                                                exit_s8YuN [Occ=OnceL!T[2],
                                                                                                                                                                            Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                                                                                                                                                  :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                     -> GHC.Prim.State#
                                                                                                                                                                          GHC.Prim.RealWorld
                                                                                                                                                                     -> (# GHC.Prim.State#
                                                                                                                                                                             GHC.Prim.RealWorld,
                                                                                                                                                                           [GHC.IO.Buffer.CharBufElem] #)
                                                                                                                                                                [LclId[JoinId(2)],
                                                                                                                                                                 Arity=2,
                                                                                                                                                                 Str=<L,U><S,U>,
                                                                                                                                                                 Unf=OtherCon []] =
                                                                                                                                                                    sat-only [dt7_s8YuF
                                                                                                                                                                              dt8_s8YuG] \r [w3_s8YuO
                                                                                                                                                                                             void_0E]
                                                                                                                                                                        case
                                                                                                                                                                            readWideCharOffAddr# [dt7_s8YuF
                                                                                                                                                                                                  0#
                                                                                                                                                                                                  GHC.Prim.void#]
                                                                                                                                                                        of
                                                                                                                                                                        { Unit# ipv14_s8YuS [Occ=Once] ->
                                                                                                                                                                              case
                                                                                                                                                                                  touch# [dt8_s8YuG
                                                                                                                                                                                          GHC.Prim.void#]
                                                                                                                                                                              of
                                                                                                                                                                              s'_s8YuT
                                                                                                                                                                              { (##) ->
                                                                                                                                                                                    let {
                                                                                                                                                                                      sat_s8YuU [Occ=Once]
                                                                                                                                                                                        :: GHC.IO.Buffer.CharBufElem
                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                          CCCS GHC.Types.C#! [ipv14_s8YuS]; } in
                                                                                                                                                                                    let {
                                                                                                                                                                                      sat_s8YuV [Occ=Once]
                                                                                                                                                                                        :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                          CCCS :! [sat_s8YuU
                                                                                                                                                                                                   w3_s8YuO];
                                                                                                                                                                                    } in 
                                                                                                                                                                                      Unit# [sat_s8YuV];
                                                                                                                                                                              };
                                                                                                                                                                        };
                                                                                                                                                              } in 
                                                                                                                                                                let-no-escape {
                                                                                                                                                                  $wf_s8YuW [InlPrag=NOUSERINLINE[0],
                                                                                                                                                                             Occ=LoopBreakerT[3]]
                                                                                                                                                                    :: GHC.Prim.Int#
                                                                                                                                                                       -> [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                       -> GHC.Prim.State#
                                                                                                                                                                            GHC.Prim.RealWorld
                                                                                                                                                                       -> (# GHC.Prim.State#
                                                                                                                                                                               GHC.Prim.RealWorld,
                                                                                                                                                                             [GHC.IO.Buffer.CharBufElem] #)
                                                                                                                                                                  [LclId[JoinId(3)],
                                                                                                                                                                   Arity=3,
                                                                                                                                                                   Str=<S,1*U><L,U><S,U>,
                                                                                                                                                                   Unf=OtherCon []] =
                                                                                                                                                                      sat-only [dt7_s8YuF
                                                                                                                                                                                exit_s8YuN
                                                                                                                                                                                $wf_s8YuW] \r [ww1_s8YuX
                                                                                                                                                                                               w3_s8YuY
                                                                                                                                                                                               void_0E]
                                                                                                                                                                          case
                                                                                                                                                                              ww1_s8YuX
                                                                                                                                                                          of
                                                                                                                                                                          ds_s8Yv0
                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                case
                                                                                                                                                                                    readWideCharOffAddr# [dt7_s8YuF
                                                                                                                                                                                                          ds_s8Yv0
                                                                                                                                                                                                          GHC.Prim.void#]
                                                                                                                                                                                of
                                                                                                                                                                                { Unit# ipv14_s8Yv3 [Occ=Once] ->
                                                                                                                                                                                      let {
                                                                                                                                                                                        sat_s8Yv5 [Occ=Once]
                                                                                                                                                                                          :: GHC.IO.Buffer.CharBufElem
                                                                                                                                                                                        [LclId] =
                                                                                                                                                                                            CCCS GHC.Types.C#! [ipv14_s8Yv3]; } in
                                                                                                                                                                                      let {
                                                                                                                                                                                        sat_s8Yv6 [Occ=Once]
                                                                                                                                                                                          :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                                        [LclId] =
                                                                                                                                                                                            CCCS :! [sat_s8Yv5
                                                                                                                                                                                                     w3_s8YuY];
                                                                                                                                                                                      } in 
                                                                                                                                                                                        case
                                                                                                                                                                                            -# [ds_s8Yv0
                                                                                                                                                                                                1#]
                                                                                                                                                                                        of
                                                                                                                                                                                        sat_s8Yv4
                                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                                              $wf_s8YuW
                                                                                                                                                                                                  sat_s8Yv4
                                                                                                                                                                                                  sat_s8Yv6
                                                                                                                                                                                                  GHC.Prim.void#;
                                                                                                                                                                                        };
                                                                                                                                                                                };
                                                                                                                                                                            0# ->
                                                                                                                                                                                exit_s8YuN
                                                                                                                                                                                    w3_s8YuY
                                                                                                                                                                                    GHC.Prim.void#;
                                                                                                                                                                          };
                                                                                                                                                                } in 
                                                                                                                                                                  $wf_s8YuW
                                                                                                                                                                      sat_s8Yv7
                                                                                                                                                                      GHC.Types.[]
                                                                                                                                                                      GHC.Prim.void#;
                                                                                                                                                        };
                                                                                                                                                    1# ->
                                                                                                                                                        case
                                                                                                                                                            touch# [dt8_s8YuG
                                                                                                                                                                    GHC.Prim.void#]
                                                                                                                                                        of
                                                                                                                                                        s'_s8Yv8
                                                                                                                                                        { (##) ->
                                                                                                                                                              Unit# [GHC.Types.[]];
                                                                                                                                                        };
                                                                                                                                                  };
                                                                                                                                            };
                                                                                                                                      };
                                                                                                                                };
                                                                                                                          };
                                                                                                                    };
                                                                                                              };
                                                                                                        }; } in
                                                                                              let {
                                                                                                sat_s8Yv9 [Occ=Once]
                                                                                                  :: GHC.ForeignPtr.ForeignPtrContents
                                                                                                [LclId] =
                                                                                                    CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv3_s8Yt2]; } in
                                                                                              let {
                                                                                                sat_s8Yva [Occ=Once]
                                                                                                  :: GHC.IO.Buffer.Buffer
                                                                                                       GHC.Word.Word8
                                                                                                [LclId] =
                                                                                                    CCCS GHC.IO.Buffer.Buffer! [obj_s8YsZ
                                                                                                                                sat_s8Yv9
                                                                                                                                GHC.IO.Buffer.ReadBuffer
                                                                                                                                x1_s8Yt4
                                                                                                                                0#
                                                                                                                                x1_s8Yt4];
                                                                                              } in 
                                                                                                $wgo_s8Yti
                                                                                                    sat_s8Yva
                                                                                                    GHC.Prim.void#;
                                                                                        };
                                                                                  };
                                                                            };
                                                                        1# ->
                                                                            GHC.ForeignPtr.mallocForeignPtrBytes2;
                                                                      };
                                                                };
                                                      } in 
                                                        case <=# [x1_s8Yt4 1#] of {
                                                          __DEFAULT -> $j_s8Yt5 x1_s8Yt4;
                                                          1# -> $j_s8Yt5 1#;
                                                        };
                                                };
                                          };
                                    };
                          } in 
                            GHC.IO.bracket1
                                ds3_s8YsR GHC.IO.Encoding.Types.close sat_s8Yvd GHC.Prim.void#;
                    };
              };
        };

Foreign.C.String.peekCStringLen
  :: Foreign.C.String.CStringLen -> GHC.Types.IO GHC.Base.String
[GblId,
 Arity=2,
 Str=<L,1*U(1*U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.peekCStringLen1 eta_B2 GHC.Prim.void#;

Foreign.C.String.peekCString1
  :: Foreign.C.String.CString
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<L,1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [s_s8Yve void_0E]
        case GHC.IO.Encoding.getForeignEncoding GHC.Prim.void# of {
          Unit# ipv1_s8Yvi [Occ=Once] ->
              GHC.Foreign.peekCString1 ipv1_s8Yvi s_s8Yve GHC.Prim.void#;
        };

Foreign.C.String.peekCString
  :: Foreign.C.String.CString -> GHC.Types.IO GHC.Base.String
[GblId, Arity=2, Str=<L,1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.peekCString1 eta_B2 GHC.Prim.void#;

Foreign.C.String.castCSCharToChar
  :: Foreign.C.Types.CSChar -> GHC.Types.Char
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s8Yvj]
        case ch_s8Yvj of {
          GHC.Int.I8# x#_s8Yvl [Occ=Once] ->
              case int2Word# [x#_s8Yvl] of sat_s8Yvm {
                __DEFAULT ->
                    case narrow8Word# [sat_s8Yvm] of sat_s8Yvn {
                      __DEFAULT ->
                          case word2Int# [sat_s8Yvn] of sat_s8Yvo {
                            __DEFAULT ->
                                case chr# [sat_s8Yvo] of sat_s8Yvp {
                                  __DEFAULT -> GHC.Types.C# [sat_s8Yvp];
                                };
                          };
                    };
              };
        };

Foreign.C.String.castCUCharToChar
  :: Foreign.C.Types.CUChar -> GHC.Types.Char
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s8Yvq]
        case ch_s8Yvq of {
          GHC.Word.W8# x#_s8Yvs [Occ=Once] ->
              case word2Int# [x#_s8Yvs] of sat_s8Yvt {
                __DEFAULT ->
                    case chr# [sat_s8Yvt] of sat_s8Yvu {
                      __DEFAULT -> GHC.Types.C# [sat_s8Yvu];
                    };
              };
        };

Foreign.C.String.castCCharToChar
  :: Foreign.C.Types.CChar -> GHC.Types.Char
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s8Yvv]
        case ch_s8Yvv of {
          GHC.Int.I8# x#_s8Yvx [Occ=Once] ->
              case int2Word# [x#_s8Yvx] of sat_s8Yvy {
                __DEFAULT ->
                    case narrow8Word# [sat_s8Yvy] of sat_s8Yvz {
                      __DEFAULT ->
                          case word2Int# [sat_s8Yvz] of sat_s8YvA {
                            __DEFAULT ->
                                case chr# [sat_s8YvA] of sat_s8YvB {
                                  __DEFAULT -> GHC.Types.C# [sat_s8YvB];
                                };
                          };
                    };
              };
        };

Foreign.C.String.$wpeekCAString [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Addr#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_s8YvC void_0E]
        let-no-escape {
          $w$j_s8YvE [InlPrag=NOUSERINLINE[0],
                      Occ=OnceL!T[2],
                      Dmd=<C(C(S)),C(C1(U(U,U)))>]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> GHC.Prim.Int#
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
          [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
              sat-only [ww_s8YvC] \r [void_0E ww1_s8YvG]
                  case <=# [ww1_s8YvG 0#] of {
                    __DEFAULT ->
                        case -# [ww1_s8YvG 1#] of sat_s8Yw3 {
                          __DEFAULT ->
                              let-no-escape {
                                $wloop_s8YvI [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                  :: [GHC.Types.Char]
                                     -> GHC.Prim.Int#
                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                                [LclId[JoinId(3)], Arity=3, Str=<L,U><S,U><S,U>, Unf=OtherCon []] =
                                    sat-only [ww_s8YvC $wloop_s8YvI] \r [w2_s8YvJ ww2_s8YvK void_0E]
                                        case
                                            readInt8OffAddr# [ww_s8YvC ww2_s8YvK GHC.Prim.void#]
                                        of
                                        { Unit# ipv1_s8YvO [Occ=Once*] ->
                                              case <=# [ww2_s8YvK 0#] of {
                                                __DEFAULT ->
                                                    case -# [ww2_s8YvK 1#] of sat_s8YvW {
                                                      __DEFAULT ->
                                                          case int2Word# [ipv1_s8YvO] of sat_s8YvQ {
                                                            __DEFAULT ->
                                                                case
                                                                    narrow8Word# [sat_s8YvQ]
                                                                of
                                                                sat_s8YvR
                                                                { __DEFAULT ->
                                                                      case
                                                                          word2Int# [sat_s8YvR]
                                                                      of
                                                                      sat_s8YvS
                                                                      { __DEFAULT ->
                                                                            case
                                                                                chr# [sat_s8YvS]
                                                                            of
                                                                            sat_s8YvT
                                                                            { __DEFAULT ->
                                                                                  let {
                                                                                    sat_s8YvU [Occ=Once]
                                                                                      :: GHC.Types.Char
                                                                                    [LclId] =
                                                                                        CCCS GHC.Types.C#! [sat_s8YvT]; } in
                                                                                  let {
                                                                                    sat_s8YvV [Occ=Once]
                                                                                      :: [GHC.Types.Char]
                                                                                    [LclId] =
                                                                                        CCCS :! [sat_s8YvU
                                                                                                 w2_s8YvJ];
                                                                                  } in 
                                                                                    $wloop_s8YvI
                                                                                        sat_s8YvV
                                                                                        sat_s8YvW
                                                                                        GHC.Prim.void#;
                                                                            };
                                                                      };
                                                                };
                                                          };
                                                    };
                                                1# ->
                                                    case int2Word# [ipv1_s8YvO] of sat_s8YvX {
                                                      __DEFAULT ->
                                                          case
                                                              narrow8Word# [sat_s8YvX]
                                                          of
                                                          sat_s8YvY
                                                          { __DEFAULT ->
                                                                case
                                                                    word2Int# [sat_s8YvY]
                                                                of
                                                                sat_s8YvZ
                                                                { __DEFAULT ->
                                                                      case
                                                                          chr# [sat_s8YvZ]
                                                                      of
                                                                      sat_s8Yw0
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s8Yw1 [Occ=Once]
                                                                                :: GHC.Types.Char
                                                                              [LclId] =
                                                                                  CCCS GHC.Types.C#! [sat_s8Yw0]; } in
                                                                            let {
                                                                              sat_s8Yw2 [Occ=Once]
                                                                                :: [GHC.Types.Char]
                                                                              [LclId] =
                                                                                  CCCS :! [sat_s8Yw1
                                                                                           w2_s8YvJ];
                                                                            } in  Unit# [sat_s8Yw2];
                                                                      };
                                                                };
                                                          };
                                                    };
                                              };
                                        };
                              } in  $wloop_s8YvI GHC.Types.[] sat_s8Yw3 GHC.Prim.void#;
                        };
                    1# -> Unit# [GHC.Types.[]];
                  };
        } in 
          let-no-escape {
            $wloop_s8Yw4 [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[2]]
              :: GHC.Prim.Int#
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
            [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
                sat-only [ww_s8YvC $w$j_s8YvE $wloop_s8Yw4] \r [ww1_s8Yw5 void_0E]
                    case readInt8OffAddr# [ww_s8YvC ww1_s8Yw5 GHC.Prim.void#] of {
                      Unit# ipv1_s8Yw9 [Occ=Once!] ->
                          case ipv1_s8Yw9 of {
                            __DEFAULT ->
                                case +# [ww1_s8Yw5 1#] of sat_s8Ywb {
                                  __DEFAULT -> $wloop_s8Yw4 sat_s8Ywb GHC.Prim.void#;
                                };
                            0# -> $w$j_s8YvE GHC.Prim.void# ww1_s8Yw5;
                          };
                    };
          } in  $wloop_s8Yw4 0# GHC.Prim.void#;

Foreign.C.String.peekCAString1 [InlPrag=NOUSERINLINE[0]]
  :: Foreign.C.String.CString
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8Ywc void_0E]
        case w_s8Ywc of {
          GHC.Ptr.Ptr ww1_s8Ywf [Occ=Once] ->
              Foreign.C.String.$wpeekCAString ww1_s8Ywf GHC.Prim.void#;
        };

Foreign.C.String.peekCAString
  :: Foreign.C.String.CString -> GHC.Types.IO GHC.Base.String
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.peekCAString1 eta_B2 GHC.Prim.void#;

Foreign.C.String.$wpeekCAStringLen [InlPrag=NOUSERINLINE[0]]
  :: GHC.Ptr.Ptr Foreign.C.Types.CChar
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_s8Ywg ww1_s8Ywh void_0E]
        case <=# [ww1_s8Ywh 0#] of {
          __DEFAULT ->
              case -# [ww1_s8Ywh 1#] of sat_s8YwH {
                __DEFAULT ->
                    let-no-escape {
                      $wloop_s8Ywk [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                        :: [GHC.Types.Char]
                           -> GHC.Prim.Int#
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                      [LclId[JoinId(3)], Arity=3, Str=<L,U><S,U><S,U>, Unf=OtherCon []] =
                          sat-only [ww_s8Ywg $wloop_s8Ywk] \r [w1_s8Ywl ww2_s8Ywm void_0E]
                              case ww_s8Ywg of {
                                GHC.Ptr.Ptr a_s8Ywp [Occ=Once] ->
                                    case readInt8OffAddr# [a_s8Ywp ww2_s8Ywm GHC.Prim.void#] of {
                                      Unit# ipv1_s8Yws [Occ=Once*] ->
                                          case ww2_s8Ywm of wild1_s8Ywt {
                                            __DEFAULT ->
                                                case -# [wild1_s8Ywt 1#] of sat_s8YwA {
                                                  __DEFAULT ->
                                                      case int2Word# [ipv1_s8Yws] of sat_s8Ywu {
                                                        __DEFAULT ->
                                                            case
                                                                narrow8Word# [sat_s8Ywu]
                                                            of
                                                            sat_s8Ywv
                                                            { __DEFAULT ->
                                                                  case
                                                                      word2Int# [sat_s8Ywv]
                                                                  of
                                                                  sat_s8Yww
                                                                  { __DEFAULT ->
                                                                        case
                                                                            chr# [sat_s8Yww]
                                                                        of
                                                                        sat_s8Ywx
                                                                        { __DEFAULT ->
                                                                              let {
                                                                                sat_s8Ywy [Occ=Once]
                                                                                  :: GHC.Types.Char
                                                                                [LclId] =
                                                                                    CCCS GHC.Types.C#! [sat_s8Ywx]; } in
                                                                              let {
                                                                                sat_s8Ywz [Occ=Once]
                                                                                  :: [GHC.Types.Char]
                                                                                [LclId] =
                                                                                    CCCS :! [sat_s8Ywy
                                                                                             w1_s8Ywl];
                                                                              } in 
                                                                                $wloop_s8Ywk
                                                                                    sat_s8Ywz
                                                                                    sat_s8YwA
                                                                                    GHC.Prim.void#;
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                            0# ->
                                                case int2Word# [ipv1_s8Yws] of sat_s8YwB {
                                                  __DEFAULT ->
                                                      case narrow8Word# [sat_s8YwB] of sat_s8YwC {
                                                        __DEFAULT ->
                                                            case
                                                                word2Int# [sat_s8YwC]
                                                            of
                                                            sat_s8YwD
                                                            { __DEFAULT ->
                                                                  case
                                                                      chr# [sat_s8YwD]
                                                                  of
                                                                  sat_s8YwE
                                                                  { __DEFAULT ->
                                                                        let {
                                                                          sat_s8YwF [Occ=Once]
                                                                            :: GHC.Types.Char
                                                                          [LclId] =
                                                                              CCCS GHC.Types.C#! [sat_s8YwE]; } in
                                                                        let {
                                                                          sat_s8YwG [Occ=Once]
                                                                            :: [GHC.Types.Char]
                                                                          [LclId] =
                                                                              CCCS :! [sat_s8YwF
                                                                                       w1_s8Ywl];
                                                                        } in  Unit# [sat_s8YwG];
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in  $wloop_s8Ywk GHC.Types.[] sat_s8YwH GHC.Prim.void#;
              };
          1# -> Unit# [GHC.Types.[]];
        };

Foreign.C.String.peekCAStringLen1 [InlPrag=NOUSERINLINE[0]]
  :: (GHC.Ptr.Ptr Foreign.C.Types.CChar, GHC.Types.Int)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LS(S)),1*U(U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8YwI void_0E]
        case w_s8YwI of {
          (,) ww1_s8YwL [Occ=Once] ww2_s8YwM [Occ=Once!] ->
              case ww2_s8YwM of {
                GHC.Types.I# ww4_s8YwO [Occ=Once] ->
                    Foreign.C.String.$wpeekCAStringLen
                        ww1_s8YwL ww4_s8YwO GHC.Prim.void#;
              };
        };

Foreign.C.String.peekCAStringLen
  :: Foreign.C.String.CStringLen -> GHC.Types.IO GHC.Base.String
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LS(S)),1*U(U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.peekCAStringLen1 eta_B2 GHC.Prim.void#;

Foreign.C.String.castCWcharToChar
  :: Foreign.C.Types.CWchar -> GHC.Types.Char
[GblId, Arity=1, Str=<S(S),1*U(U)>m, Unf=OtherCon []] =
    [] \r [ch_s8YwP]
        case ch_s8YwP of {
          GHC.Int.I32# x#_s8YwR ->
              case int2Word# [x#_s8YwR] of sat_s8YwS {
                __DEFAULT ->
                    case leWord# [sat_s8YwS 1114111##] of {
                      __DEFAULT -> GHC.Char.$wlvl x#_s8YwR;
                      1# ->
                          case chr# [x#_s8YwR] of sat_s8YwU {
                            __DEFAULT -> GHC.Types.C# [sat_s8YwU];
                          };
                    };
              };
        };

Foreign.C.String.peekCWString2 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.Base.map Foreign.C.String.castCWcharToChar GHC.Types.[];

Foreign.C.String.$wpeekCWStringLen [InlPrag=NOUSERINLINE[0]]
  :: GHC.Ptr.Ptr Foreign.C.Types.CWchar
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=3, Str=<L,U(U)><S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_s8YwV ww1_s8YwW void_0E]
        case <=# [ww1_s8YwW 0#] of {
          __DEFAULT ->
              case -# [ww1_s8YwW 1#] of sat_s8Yxn {
                __DEFAULT ->
                    let-no-escape {
                      exit_s8YwZ [Occ=OnceL!T[2], Dmd=<C(C(S)),C(C1(U(U,U)))>]
                        :: [Foreign.C.Types.CWchar]
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                      [LclId[JoinId(2)], Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
                          sat-only [ww_s8YwV] \r [w3_s8Yx0 void_0E]
                              case ww_s8YwV of {
                                GHC.Ptr.Ptr a_s8Yx3 [Occ=Once] ->
                                    case readInt32OffAddr# [a_s8Yx3 0# GHC.Prim.void#] of {
                                      Unit# ipv1_s8Yx6 [Occ=Once] ->
                                          let {
                                            sat_s8Yx9 [Occ=Once] :: [GHC.Types.Char]
                                            [LclId] =
                                                [w3_s8Yx0 ipv1_s8Yx6] \u []
                                                    let {
                                                      sat_s8Yx7 [Occ=Once] :: Foreign.C.Types.CWchar
                                                      [LclId] =
                                                          CCCS GHC.Int.I32#! [ipv1_s8Yx6]; } in
                                                    let {
                                                      sat_s8Yx8 [Occ=Once]
                                                        :: [Foreign.C.Types.CWchar]
                                                      [LclId] =
                                                          CCCS :! [sat_s8Yx7 w3_s8Yx0];
                                                    } in 
                                                      GHC.Base.map
                                                          Foreign.C.String.castCWcharToChar
                                                          sat_s8Yx8;
                                          } in  Unit# [sat_s8Yx9];
                                    };
                              };
                    } in 
                      let-no-escape {
                        $wf_s8Yxa [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                          :: GHC.Prim.Int#
                             -> [Foreign.C.Types.CWchar]
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                        [LclId[JoinId(3)],
                         Arity=3,
                         Str=<S,1*U><L,U><S,U>,
                         Unf=OtherCon []] =
                            sat-only [ww_s8YwV exit_s8YwZ $wf_s8Yxa] \r [ww2_s8Yxb
                                                                         w3_s8Yxc
                                                                         void_0E]
                                case ww2_s8Yxb of ds_s8Yxe {
                                  __DEFAULT ->
                                      case ww_s8YwV of {
                                        GHC.Ptr.Ptr a_s8Yxg [Occ=Once] ->
                                            case
                                                readInt32OffAddr# [a_s8Yxg ds_s8Yxe GHC.Prim.void#]
                                            of
                                            { Unit# ipv1_s8Yxj [Occ=Once] ->
                                                  let {
                                                    sat_s8Yxl [Occ=Once] :: Foreign.C.Types.CWchar
                                                    [LclId] =
                                                        CCCS GHC.Int.I32#! [ipv1_s8Yxj]; } in
                                                  let {
                                                    sat_s8Yxm [Occ=Once] :: [Foreign.C.Types.CWchar]
                                                    [LclId] =
                                                        CCCS :! [sat_s8Yxl w3_s8Yxc];
                                                  } in 
                                                    case -# [ds_s8Yxe 1#] of sat_s8Yxk {
                                                      __DEFAULT ->
                                                          $wf_s8Yxa
                                                              sat_s8Yxk sat_s8Yxm GHC.Prim.void#;
                                                    };
                                            };
                                      };
                                  0# -> exit_s8YwZ w3_s8Yxc GHC.Prim.void#;
                                };
                      } in  $wf_s8Yxa sat_s8Yxn GHC.Types.[] GHC.Prim.void#;
              };
          1# -> Unit# [Foreign.C.String.peekCWString2];
        };

Foreign.C.String.peekCWStringLen1 [InlPrag=NOUSERINLINE[0]]
  :: (GHC.Ptr.Ptr Foreign.C.Types.CWchar, GHC.Types.Int)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=2,
 Str=<S(LS(S)),1*U(U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s8Yxo void_0E]
        case w_s8Yxo of {
          (,) ww1_s8Yxr [Occ=Once] ww2_s8Yxs [Occ=Once!] ->
              case ww2_s8Yxs of {
                GHC.Types.I# ww4_s8Yxu [Occ=Once] ->
                    Foreign.C.String.$wpeekCWStringLen
                        ww1_s8Yxr ww4_s8Yxu GHC.Prim.void#;
              };
        };

Foreign.C.String.peekCWStringLen
  :: Foreign.C.String.CWStringLen -> GHC.Types.IO GHC.Base.String
[GblId,
 Arity=2,
 Str=<S(LS(S)),1*U(U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.peekCWStringLen1 eta_B2 GHC.Prim.void#;

Foreign.C.String.newCWString3 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [0#];

Foreign.C.String.$wpeekCWString [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Addr#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_s8Yxv void_0E]
        let-no-escape {
          $w$j_s8Yxx [InlPrag=NOUSERINLINE[0],
                      Occ=OnceL!T[2],
                      Dmd=<C(C(S)),C(C1(U(U,U)))>]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> GHC.Prim.Int#
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
          [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
              sat-only [ww_s8Yxv] \r [void_0E ww1_s8Yxz]
                  case <=# [ww1_s8Yxz 0#] of {
                    __DEFAULT ->
                        case -# [ww1_s8Yxz 1#] of sat_s8YxV {
                          __DEFAULT ->
                              let-no-escape {
                                exit_s8YxB [Occ=OnceL!T[2], Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                  :: [Foreign.C.Types.CWchar]
                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                                [LclId[JoinId(2)], Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
                                    sat-only [ww_s8Yxv] \r [w3_s8YxC void_0E]
                                        case readInt32OffAddr# [ww_s8Yxv 0# GHC.Prim.void#] of {
                                          Unit# ipv1_s8YxG [Occ=Once] ->
                                              let {
                                                sat_s8YxJ [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    [w3_s8YxC ipv1_s8YxG] \u []
                                                        let {
                                                          sat_s8YxH [Occ=Once]
                                                            :: Foreign.C.Types.CWchar
                                                          [LclId] =
                                                              CCCS GHC.Int.I32#! [ipv1_s8YxG]; } in
                                                        let {
                                                          sat_s8YxI [Occ=Once]
                                                            :: [Foreign.C.Types.CWchar]
                                                          [LclId] =
                                                              CCCS :! [sat_s8YxH w3_s8YxC];
                                                        } in 
                                                          GHC.Base.map
                                                              Foreign.C.String.castCWcharToChar
                                                              sat_s8YxI;
                                              } in  Unit# [sat_s8YxJ];
                                        };
                              } in 
                                let-no-escape {
                                  $wf_s8YxK [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                    :: GHC.Prim.Int#
                                       -> [Foreign.C.Types.CWchar]
                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                                  [LclId[JoinId(3)],
                                   Arity=3,
                                   Str=<S,1*U><L,U><S,U>,
                                   Unf=OtherCon []] =
                                      sat-only [ww_s8Yxv exit_s8YxB $wf_s8YxK] \r [ww2_s8YxL
                                                                                   w3_s8YxM
                                                                                   void_0E]
                                          case ww2_s8YxL of ds_s8YxO {
                                            __DEFAULT ->
                                                case
                                                    readInt32OffAddr# [ww_s8Yxv
                                                                       ds_s8YxO
                                                                       GHC.Prim.void#]
                                                of
                                                { Unit# ipv1_s8YxR [Occ=Once] ->
                                                      let {
                                                        sat_s8YxT [Occ=Once]
                                                          :: Foreign.C.Types.CWchar
                                                        [LclId] =
                                                            CCCS GHC.Int.I32#! [ipv1_s8YxR]; } in
                                                      let {
                                                        sat_s8YxU [Occ=Once]
                                                          :: [Foreign.C.Types.CWchar]
                                                        [LclId] =
                                                            CCCS :! [sat_s8YxT w3_s8YxM];
                                                      } in 
                                                        case -# [ds_s8YxO 1#] of sat_s8YxS {
                                                          __DEFAULT ->
                                                              $wf_s8YxK
                                                                  sat_s8YxS
                                                                  sat_s8YxU
                                                                  GHC.Prim.void#;
                                                        };
                                                };
                                            0# -> exit_s8YxB w3_s8YxM GHC.Prim.void#;
                                          };
                                } in  $wf_s8YxK sat_s8YxV GHC.Types.[] GHC.Prim.void#;
                        };
                    1# -> Unit# [Foreign.C.String.peekCWString2];
                  };
        } in 
          let-no-escape {
            $wloop_s8YxW [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[2]]
              :: GHC.Prim.Int#
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
            [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
                sat-only [ww_s8Yxv $w$j_s8Yxx $wloop_s8YxW] \r [ww1_s8YxX void_0E]
                    case readInt32OffAddr# [ww_s8Yxv ww1_s8YxX GHC.Prim.void#] of {
                      Unit# ipv1_s8Yy1 [Occ=Once!] ->
                          case ipv1_s8Yy1 of {
                            __DEFAULT ->
                                case +# [ww1_s8YxX 1#] of sat_s8Yy3 {
                                  __DEFAULT -> $wloop_s8YxW sat_s8Yy3 GHC.Prim.void#;
                                };
                            0# -> $w$j_s8Yxx GHC.Prim.void# ww1_s8YxX;
                          };
                    };
          } in  $wloop_s8YxW 0# GHC.Prim.void#;

Foreign.C.String.peekCWString1 [InlPrag=NOUSERINLINE[0]]
  :: Foreign.C.String.CWString
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [w_s8Yy4 void_0E]
        case w_s8Yy4 of {
          GHC.Ptr.Ptr ww1_s8Yy7 [Occ=Once] ->
              Foreign.C.String.$wpeekCWString ww1_s8Yy7 GHC.Prim.void#;
        };

Foreign.C.String.peekCWString
  :: Foreign.C.String.CWString -> GHC.Types.IO GHC.Base.String
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.peekCWString1 eta_B2 GHC.Prim.void#;

Foreign.C.String.newCWString2 :: GHC.Types.Char -> GHC.Int.Int32
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s8Yy8]
        case ch_s8Yy8 of {
          GHC.Types.C# c#_s8Yya [Occ=Once] ->
              case ord# [c#_s8Yya] of sat_s8Yyb {
                __DEFAULT ->
                    case narrow32Int# [sat_s8Yyb] of sat_s8Yyc {
                      __DEFAULT -> GHC.Int.I32# [sat_s8Yyc];
                    };
              };
        };

Foreign.C.String.withCWStringLen1
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CWStringLen -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [str_s8Yyd f_s8Yye void_0E]
        case
            GHC.Base.map Foreign.C.String.newCWString2 str_s8Yyd
        of
        vals_s8Yyg [Dmd=<S,U>]
        { __DEFAULT ->
              case GHC.List.$wlenAcc vals_s8Yyg 0# of ww2_s8Yyh {
                __DEFAULT ->
                    case *# [ww2_s8Yyh 4#] of sat_s8Yyi {
                      __DEFAULT ->
                          case newAlignedPinnedByteArray# [sat_s8Yyi 4# GHC.Prim.void#] of {
                            Unit# ipv1_s8Yyl [Occ=Once] ->
                                case unsafeFreezeByteArray# [ipv1_s8Yyl GHC.Prim.void#] of {
                                  Unit# ipv3_s8Yyo ->
                                      case byteArrayContents# [ipv3_s8Yyo] of ptr_s8Yyp {
                                        __DEFAULT ->
                                            let-no-escape {
                                              exit_s8Yyq [Occ=OnceL!T[1], Dmd=<C(S),C(U(U,U))>]
                                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         a_a8WZM #)
                                              [LclId[JoinId(1)],
                                               Arity=1,
                                               Str=<S,U>,
                                               Unf=OtherCon []] =
                                                  sat-only [f_s8Yye
                                                            ww2_s8Yyh
                                                            ipv3_s8Yyo
                                                            ptr_s8Yyp] \r [void_0E]
                                                      let {
                                                        sat_s8Yyt [Occ=Once] :: GHC.Types.Int
                                                        [LclId] =
                                                            CCCS GHC.Types.I#! [ww2_s8Yyh]; } in
                                                      let {
                                                        sat_s8Yys [Occ=Once]
                                                          :: GHC.Ptr.Ptr Foreign.C.Types.CWchar
                                                        [LclId] =
                                                            CCCS GHC.Ptr.Ptr! [ptr_s8Yyp]; } in
                                                      let {
                                                        sat_s8Yyu [Occ=Once]
                                                          :: Foreign.C.String.CWStringLen
                                                        [LclId] =
                                                            CCCS (,)! [sat_s8Yys sat_s8Yyt];
                                                      } in 
                                                        case f_s8Yye sat_s8Yyu GHC.Prim.void# of {
                                                          Unit# ipv5_s8Yyx [Occ=Once] ->
                                                              case
                                                                  touch# [ipv3_s8Yyo GHC.Prim.void#]
                                                              of
                                                              s4_s8Yyy
                                                              { (##) -> Unit# [ipv5_s8Yyx];
                                                              };
                                                        };
                                            } in 
                                              let-no-escape {
                                                go_s8Yyz [Occ=LoopBreakerT[3]]
                                                  :: [Foreign.C.Types.CWchar]
                                                     -> GHC.Prim.Int#
                                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                           a_a8WZM #)
                                                [LclId[JoinId(3)],
                                                 Arity=3,
                                                 Str=<S,1*U><L,U><S,U>,
                                                 Unf=OtherCon []] =
                                                    sat-only [ptr_s8Yyp
                                                              exit_s8Yyq
                                                              go_s8Yyz] \r [ds_s8YyA
                                                                            ds1_s8YyB
                                                                            void_0E]
                                                        case ds_s8YyA of {
                                                          [] -> exit_s8Yyq GHC.Prim.void#;
                                                          : val_s8YyE [Occ=Once]
                                                            vals1_s8YyF [Occ=Once] ->
                                                              case val_s8YyE of {
                                                                GHC.Int.I32# x_s8YyH [Occ=Once] ->
                                                                    case
                                                                        writeInt32OffAddr# [ptr_s8Yyp
                                                                                            ds1_s8YyB
                                                                                            x_s8YyH
                                                                                            GHC.Prim.void#]
                                                                    of
                                                                    s2_s8YyI
                                                                    { (##) ->
                                                                          case
                                                                              +# [ds1_s8YyB 1#]
                                                                          of
                                                                          sat_s8YyJ
                                                                          { __DEFAULT ->
                                                                                go_s8Yyz
                                                                                    vals1_s8YyF
                                                                                    sat_s8YyJ
                                                                                    GHC.Prim.void#;
                                                                          };
                                                                    };
                                                              };
                                                        };
                                              } in  go_s8Yyz vals_s8Yyg 0# GHC.Prim.void#;
                                      };
                                };
                          };
                    };
              };
        };

Foreign.C.String.withCWStringLen
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CWStringLen -> GHC.Types.IO a)
     -> GHC.Types.IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.C.String.withCWStringLen1 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.String.withCWString
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CWString -> GHC.Types.IO a) -> GHC.Types.IO a
[GblId, Arity=1, Str=<L,1*U>, Unf=OtherCon []] =
    [] \r [x_s8YyK]
        let {
          vals_s8YyL [Occ=OnceL] :: [Foreign.C.Types.CWchar]
          [LclId] =
              [x_s8YyK] \u []
                  GHC.Base.map Foreign.C.String.newCWString2 x_s8YyK; } in
        let {
          sat_s8YyP [Occ=OnceT[0]]
            :: (GHC.Ptr.Ptr Foreign.C.Types.CWchar -> GHC.Types.IO a_a8WZU)
               -> GHC.Types.IO a_a8WZU
          [LclId] =
              [vals_s8YyL] \r [x1_s8YyM]
                  let {
                    sat_s8YyO [Occ=Once]
                      :: GHC.Types.Int
                         -> GHC.Ptr.Ptr Foreign.C.Types.CWchar -> GHC.Types.IO a_a8WZU
                    [LclId] =
                        [x1_s8YyM] \r [ds_s8YyN] x1_s8YyM;
                  } in 
                    Foreign.Marshal.Array.withArrayLen0
                        Foreign.C.Types.$fStorableCWchar
                        Foreign.C.String.newCWString3
                        vals_s8YyL
                        sat_s8YyO;
        } in  sat_s8YyP;

Foreign.C.String.newCWString1
  :: [GHC.Types.Char]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Ptr.Ptr Foreign.C.Types.CWchar #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [x_s8YyQ void_0E]
        case
            GHC.Base.map Foreign.C.String.newCWString2 x_s8YyQ
        of
        sat_s8YyS
        { __DEFAULT ->
              Foreign.Marshal.Array.newArray3
                  Foreign.C.Types.$fStorableCWchar
                  Foreign.C.String.newCWString3
                  sat_s8YyS
                  GHC.Prim.void#;
        };

Foreign.C.String.newCWString
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CWString
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.newCWString1 eta_B2 GHC.Prim.void#;

Foreign.C.String.newCWStringLen1
  :: GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Ptr.Ptr Foreign.C.Types.CWchar, GHC.Types.Int) #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [str_s8YyT void_0E]
        case
            GHC.Base.map Foreign.C.String.newCWString2 str_s8YyT
        of
        xs_s8YyV [Dmd=<S,U>]
        { __DEFAULT ->
              case
                  Foreign.Marshal.Array.newArray1
                      Foreign.C.Types.$fStorableCWchar xs_s8YyV GHC.Prim.void#
              of
              { Unit# ipv1_s8YyY [Occ=Once] ->
                    let {
                      sat_s8Yz0 [Occ=Once] :: GHC.Types.Int
                      [LclId] =
                          [xs_s8YyV] \u []
                              case GHC.List.$wlenAcc xs_s8YyV 0# of ww2_s8YyZ {
                                __DEFAULT -> GHC.Types.I# [ww2_s8YyZ];
                              }; } in
                    let {
                      sat_s8Yz1 [Occ=Once]
                        :: (GHC.Ptr.Ptr Foreign.C.Types.CWchar, GHC.Types.Int)
                      [LclId] =
                          CCCS (,)! [ipv1_s8YyY sat_s8Yz0];
                    } in  Unit# [sat_s8Yz1];
              };
        };

Foreign.C.String.newCWStringLen
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CWStringLen
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.newCWStringLen1 eta_B2 GHC.Prim.void#;

Foreign.C.String.castCharToCChar1 :: GHC.Types.Char -> GHC.Int.Int8
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s8Yz2]
        case ch_s8Yz2 of {
          GHC.Types.C# c#_s8Yz4 [Occ=Once] ->
              case ord# [c#_s8Yz4] of sat_s8Yz5 {
                __DEFAULT ->
                    case narrow8Int# [sat_s8Yz5] of sat_s8Yz6 {
                      __DEFAULT -> GHC.Int.I8# [sat_s8Yz6];
                    };
              };
        };

Foreign.C.String.castCharToCSChar
  :: GHC.Types.Char -> Foreign.C.Types.CSChar
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] Foreign.C.String.castCharToCChar1 eta_B1;

Foreign.C.String.castCharToCUChar1
  :: GHC.Types.Char -> GHC.Word.Word8
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s8Yz7]
        case ch_s8Yz7 of {
          GHC.Types.C# c#_s8Yz9 [Occ=Once] ->
              case ord# [c#_s8Yz9] of sat_s8Yza {
                __DEFAULT ->
                    case int2Word# [sat_s8Yza] of sat_s8Yzb {
                      __DEFAULT ->
                          case narrow8Word# [sat_s8Yzb] of sat_s8Yzc {
                            __DEFAULT -> GHC.Word.W8# [sat_s8Yzc];
                          };
                    };
              };
        };

Foreign.C.String.castCharToCUChar
  :: GHC.Types.Char -> Foreign.C.Types.CUChar
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] Foreign.C.String.castCharToCUChar1 eta_B1;

Foreign.C.String.castCharToCChar
  :: GHC.Types.Char -> Foreign.C.Types.CChar
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] Foreign.C.String.castCharToCChar1 eta_B1;

Foreign.C.String.newCAString1
  :: GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Foreign.C.String.CString #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [str_s8Yzd void_0E]
        case GHC.List.$wlenAcc str_s8Yzd 0# of ww2_s8Yzf {
          __DEFAULT ->
              case +# [ww2_s8Yzf 1#] of sat_s8Yzh {
                __DEFAULT ->
                    case int2Word# [sat_s8Yzh] of sat_s8Yzi {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [sat_s8Yzi GHC.Prim.void#] of {
                            Unit# ds1_s8Yzl ->
                                case eqAddr# [ds1_s8Yzl __NULL] of {
                                  __DEFAULT ->
                                      let-no-escape {
                                        exit_s8Yzn [Occ=OnceL!T[2], Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                          :: GHC.Prim.Int#
                                             -> GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                   Foreign.C.String.CString #)
                                        [LclId[JoinId(2)],
                                         Arity=2,
                                         Str=<S,U><S,U>,
                                         Unf=OtherCon []] =
                                            sat-only [ds1_s8Yzl] \r [ww_s8Yzo void_0E]
                                                case
                                                    writeInt8OffAddr# [ds1_s8Yzl
                                                                       ww_s8Yzo
                                                                       0#
                                                                       GHC.Prim.void#]
                                                of
                                                s2_s8Yzq
                                                { (##) ->
                                                      let {
                                                        sat_s8Yzr [Occ=Once]
                                                          :: GHC.Ptr.Ptr Foreign.C.Types.CChar
                                                        [LclId] =
                                                            CCCS GHC.Ptr.Ptr! [ds1_s8Yzl];
                                                      } in  Unit# [sat_s8Yzr];
                                                };
                                      } in 
                                        let-no-escape {
                                          $wgo_s8Yzs [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                            :: [GHC.Types.Char]
                                               -> GHC.Prim.Int#
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     Foreign.C.String.CString #)
                                          [LclId[JoinId(3)],
                                           Arity=3,
                                           Str=<S,1*U><S,U><S,U>,
                                           Unf=OtherCon []] =
                                              sat-only [ds1_s8Yzl exit_s8Yzn $wgo_s8Yzs] \r [w_s8Yzt
                                                                                             ww_s8Yzu
                                                                                             void_0E]
                                                  case w_s8Yzt of {
                                                    [] -> exit_s8Yzn ww_s8Yzu GHC.Prim.void#;
                                                    : c_s8Yzx [Occ=Once!] cs_s8Yzy [Occ=Once] ->
                                                        case c_s8Yzx of {
                                                          GHC.Types.C# c#_s8YzA [Occ=Once] ->
                                                              case ord# [c#_s8YzA] of sat_s8YzB {
                                                                __DEFAULT ->
                                                                    case
                                                                        narrow8Int# [sat_s8YzB]
                                                                    of
                                                                    sat_s8YzC
                                                                    { __DEFAULT ->
                                                                          case
                                                                              writeInt8OffAddr# [ds1_s8Yzl
                                                                                                 ww_s8Yzu
                                                                                                 sat_s8YzC
                                                                                                 GHC.Prim.void#]
                                                                          of
                                                                          s2_s8YzD
                                                                          { (##) ->
                                                                                case
                                                                                    +# [ww_s8Yzu 1#]
                                                                                of
                                                                                sat_s8YzE
                                                                                { __DEFAULT ->
                                                                                      $wgo_s8Yzs
                                                                                          cs_s8Yzy
                                                                                          sat_s8YzE
                                                                                          GHC.Prim.void#;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                        } in  $wgo_s8Yzs str_s8Yzd 0# GHC.Prim.void#;
                                  1# -> raiseIO# [Foreign.Marshal.Alloc.malloc1 GHC.Prim.void#];
                                };
                          };
                    };
              };
        };

Foreign.C.String.newCAString
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CString
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.newCAString1 eta_B2 GHC.Prim.void#;

Foreign.C.String.newCAStringLen1
  :: GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Foreign.C.String.CStringLen #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [str_s8YzF void_0E]
        case GHC.List.$wlenAcc str_s8YzF 0# of ww2_s8YzH {
          __DEFAULT ->
              case +# [ww2_s8YzH 1#] of sat_s8YzJ {
                __DEFAULT ->
                    case int2Word# [sat_s8YzJ] of sat_s8YzK {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [sat_s8YzK GHC.Prim.void#] of {
                            Unit# ds1_s8YzN ->
                                case eqAddr# [ds1_s8YzN __NULL] of {
                                  __DEFAULT ->
                                      let-no-escape {
                                        exit_s8YzP [Occ=OnceL!T[1], Dmd=<C(S),C(U(U,U))>]
                                          :: GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                   Foreign.C.String.CStringLen #)
                                        [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                            sat-only [ww2_s8YzH ds1_s8YzN] \r [void_0E]
                                                let {
                                                  sat_s8YzS [Occ=Once] :: GHC.Types.Int
                                                  [LclId] =
                                                      CCCS GHC.Types.I#! [ww2_s8YzH]; } in
                                                let {
                                                  sat_s8YzR [Occ=Once]
                                                    :: GHC.Ptr.Ptr Foreign.C.Types.CChar
                                                  [LclId] =
                                                      CCCS GHC.Ptr.Ptr! [ds1_s8YzN]; } in
                                                let {
                                                  sat_s8YzT [Occ=Once]
                                                    :: (GHC.Ptr.Ptr Foreign.C.Types.CChar,
                                                        GHC.Types.Int)
                                                  [LclId] =
                                                      CCCS (,)! [sat_s8YzR sat_s8YzS];
                                                } in  Unit# [sat_s8YzT];
                                      } in 
                                        let-no-escape {
                                          $wgo_s8YzU [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                            :: [GHC.Types.Char]
                                               -> GHC.Prim.Int#
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     Foreign.C.String.CStringLen #)
                                          [LclId[JoinId(3)],
                                           Arity=3,
                                           Str=<S,1*U><L,U><S,U>,
                                           Unf=OtherCon []] =
                                              sat-only [ds1_s8YzN exit_s8YzP $wgo_s8YzU] \r [w_s8YzV
                                                                                             ww_s8YzW
                                                                                             void_0E]
                                                  case w_s8YzV of {
                                                    [] -> exit_s8YzP GHC.Prim.void#;
                                                    : c_s8YzZ [Occ=Once!] cs_s8YA0 [Occ=Once] ->
                                                        case c_s8YzZ of {
                                                          GHC.Types.C# c#_s8YA2 [Occ=Once] ->
                                                              case ord# [c#_s8YA2] of sat_s8YA3 {
                                                                __DEFAULT ->
                                                                    case
                                                                        narrow8Int# [sat_s8YA3]
                                                                    of
                                                                    sat_s8YA4
                                                                    { __DEFAULT ->
                                                                          case
                                                                              writeInt8OffAddr# [ds1_s8YzN
                                                                                                 ww_s8YzW
                                                                                                 sat_s8YA4
                                                                                                 GHC.Prim.void#]
                                                                          of
                                                                          s2_s8YA5
                                                                          { (##) ->
                                                                                case
                                                                                    +# [ww_s8YzW 1#]
                                                                                of
                                                                                sat_s8YA6
                                                                                { __DEFAULT ->
                                                                                      $wgo_s8YzU
                                                                                          cs_s8YA0
                                                                                          sat_s8YA6
                                                                                          GHC.Prim.void#;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                        } in  $wgo_s8YzU str_s8YzF 0# GHC.Prim.void#;
                                  1# -> raiseIO# [Foreign.Marshal.Alloc.malloc1 GHC.Prim.void#];
                                };
                          };
                    };
              };
        };

Foreign.C.String.newCAStringLen
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CStringLen
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.newCAStringLen1 eta_B2 GHC.Prim.void#;

Foreign.C.String.withCAString1
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CString -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [str_s8YA8 f_s8YA9 void_0E]
        case GHC.List.$wlenAcc str_s8YA8 0# of ww2_s8YAb {
          __DEFAULT ->
              case +# [ww2_s8YAb 1#] of sat_s8YAc {
                __DEFAULT ->
                    case newAlignedPinnedByteArray# [sat_s8YAc 1# GHC.Prim.void#] of {
                      Unit# ipv1_s8YAf [Occ=Once] ->
                          case unsafeFreezeByteArray# [ipv1_s8YAf GHC.Prim.void#] of {
                            Unit# ipv3_s8YAi ->
                                case byteArrayContents# [ipv3_s8YAi] of ptr_s8YAj [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      let-no-escape {
                                        exit_s8YAk [Occ=OnceL!T[2], Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                          :: GHC.Prim.Int#
                                             -> GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a8X3s #)
                                        [LclId[JoinId(2)],
                                         Arity=2,
                                         Str=<S,U><S,U>,
                                         Unf=OtherCon []] =
                                            sat-only [f_s8YA9 ipv3_s8YAi ptr_s8YAj] \r [ww_s8YAl
                                                                                        void_0E]
                                                case
                                                    writeInt8OffAddr# [ptr_s8YAj
                                                                       ww_s8YAl
                                                                       0#
                                                                       GHC.Prim.void#]
                                                of
                                                s2_s8YAn
                                                { (##) ->
                                                      let {
                                                        sat_s8YAo [Occ=Once]
                                                          :: Foreign.C.String.CString
                                                        [LclId] =
                                                            CCCS GHC.Ptr.Ptr! [ptr_s8YAj];
                                                      } in 
                                                        case f_s8YA9 sat_s8YAo GHC.Prim.void# of {
                                                          Unit# ipv5_s8YAr [Occ=Once] ->
                                                              case
                                                                  touch# [ipv3_s8YAi GHC.Prim.void#]
                                                              of
                                                              s4_s8YAs
                                                              { (##) -> Unit# [ipv5_s8YAr];
                                                              };
                                                        };
                                                };
                                      } in 
                                        let-no-escape {
                                          $wgo_s8YAt [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                            :: [GHC.Types.Char]
                                               -> GHC.Prim.Int#
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a8X3s #)
                                          [LclId[JoinId(3)],
                                           Arity=3,
                                           Str=<S,1*U><S,U><S,U>,
                                           Unf=OtherCon []] =
                                              sat-only [ptr_s8YAj exit_s8YAk $wgo_s8YAt] \r [w_s8YAu
                                                                                             ww_s8YAv
                                                                                             void_0E]
                                                  case w_s8YAu of {
                                                    [] -> exit_s8YAk ww_s8YAv GHC.Prim.void#;
                                                    : c_s8YAy [Occ=Once!] cs_s8YAz [Occ=Once] ->
                                                        case c_s8YAy of {
                                                          GHC.Types.C# c#_s8YAB [Occ=Once] ->
                                                              case ord# [c#_s8YAB] of sat_s8YAC {
                                                                __DEFAULT ->
                                                                    case
                                                                        narrow8Int# [sat_s8YAC]
                                                                    of
                                                                    sat_s8YAD
                                                                    { __DEFAULT ->
                                                                          case
                                                                              writeInt8OffAddr# [ptr_s8YAj
                                                                                                 ww_s8YAv
                                                                                                 sat_s8YAD
                                                                                                 GHC.Prim.void#]
                                                                          of
                                                                          s2_s8YAE
                                                                          { (##) ->
                                                                                case
                                                                                    +# [ww_s8YAv 1#]
                                                                                of
                                                                                sat_s8YAF
                                                                                { __DEFAULT ->
                                                                                      $wgo_s8YAt
                                                                                          cs_s8YAz
                                                                                          sat_s8YAF
                                                                                          GHC.Prim.void#;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                        } in  $wgo_s8YAt str_s8YA8 0# GHC.Prim.void#;
                                };
                          };
                    };
              };
        };

Foreign.C.String.withCAString
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CString -> GHC.Types.IO a) -> GHC.Types.IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.C.String.withCAString1 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.String.withCAStringLen1
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CStringLen -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [str_s8YAG f_s8YAH void_0E]
        case GHC.List.$wlenAcc str_s8YAG 0# of ww2_s8YAJ {
          __DEFAULT ->
              case newAlignedPinnedByteArray# [ww2_s8YAJ 1# GHC.Prim.void#] of {
                Unit# ipv1_s8YAM [Occ=Once] ->
                    case unsafeFreezeByteArray# [ipv1_s8YAM GHC.Prim.void#] of {
                      Unit# ipv3_s8YAP ->
                          case byteArrayContents# [ipv3_s8YAP] of ptr_s8YAQ {
                            __DEFAULT ->
                                let-no-escape {
                                  exit_s8YAR [Occ=OnceL!T[1], Dmd=<C(S),C(U(U,U))>]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a8X4j #)
                                  [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                      sat-only [f_s8YAH ww2_s8YAJ ipv3_s8YAP ptr_s8YAQ] \r [void_0E]
                                          let {
                                            sat_s8YAU [Occ=Once] :: GHC.Types.Int
                                            [LclId] =
                                                CCCS GHC.Types.I#! [ww2_s8YAJ]; } in
                                          let {
                                            sat_s8YAT [Occ=Once]
                                              :: GHC.Ptr.Ptr Foreign.C.Types.CChar
                                            [LclId] =
                                                CCCS GHC.Ptr.Ptr! [ptr_s8YAQ]; } in
                                          let {
                                            sat_s8YAV [Occ=Once] :: Foreign.C.String.CStringLen
                                            [LclId] =
                                                CCCS (,)! [sat_s8YAT sat_s8YAU];
                                          } in 
                                            case f_s8YAH sat_s8YAV GHC.Prim.void# of {
                                              Unit# ipv5_s8YAY [Occ=Once] ->
                                                  case
                                                      touch# [ipv3_s8YAP GHC.Prim.void#]
                                                  of
                                                  s4_s8YAZ
                                                  { (##) -> Unit# [ipv5_s8YAY];
                                                  };
                                            };
                                } in 
                                  let-no-escape {
                                    $wgo_s8YB0 [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                      :: [GHC.Types.Char]
                                         -> GHC.Prim.Int#
                                         -> GHC.Prim.State# GHC.Prim.RealWorld
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a8X4j #)
                                    [LclId[JoinId(3)],
                                     Arity=3,
                                     Str=<S,1*U><L,U><S,U>,
                                     Unf=OtherCon []] =
                                        sat-only [ptr_s8YAQ exit_s8YAR $wgo_s8YB0] \r [w_s8YB1
                                                                                       ww_s8YB2
                                                                                       void_0E]
                                            case w_s8YB1 of {
                                              [] -> exit_s8YAR GHC.Prim.void#;
                                              : c_s8YB5 [Occ=Once!] cs_s8YB6 [Occ=Once] ->
                                                  case c_s8YB5 of {
                                                    GHC.Types.C# c#_s8YB8 [Occ=Once] ->
                                                        case ord# [c#_s8YB8] of sat_s8YB9 {
                                                          __DEFAULT ->
                                                              case
                                                                  narrow8Int# [sat_s8YB9]
                                                              of
                                                              sat_s8YBa
                                                              { __DEFAULT ->
                                                                    case
                                                                        writeInt8OffAddr# [ptr_s8YAQ
                                                                                           ww_s8YB2
                                                                                           sat_s8YBa
                                                                                           GHC.Prim.void#]
                                                                    of
                                                                    s2_s8YBb
                                                                    { (##) ->
                                                                          case
                                                                              +# [ww_s8YB2 1#]
                                                                          of
                                                                          sat_s8YBc
                                                                          { __DEFAULT ->
                                                                                $wgo_s8YB0
                                                                                    cs_s8YB6
                                                                                    sat_s8YBc
                                                                                    GHC.Prim.void#;
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                  } in  $wgo_s8YB0 str_s8YAG 0# GHC.Prim.void#;
                          };
                    };
              };
        };

Foreign.C.String.withCAStringLen
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CStringLen -> GHC.Types.IO a)
     -> GHC.Types.IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.C.String.withCAStringLen1 eta_B3 eta_B2 GHC.Prim.void#;


==================== Pre unarise: ====================
2018-03-16 16:04:10.068401623 UTC

Foreign.C.String.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Foreign.C.String.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.String.$trModule4];

Foreign.C.String.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.C.String"#;

Foreign.C.String.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.String.$trModule2];

Foreign.C.String.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.C.String.$trModule3
                                     Foreign.C.String.$trModule1];

Foreign.C.String.withCStringLen1
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CStringLen -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Str=<L,U><L,C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [s_s90mN f_s90mO s1_s90mP]
        case GHC.IO.Encoding.getForeignEncoding s1_s90mP of {
          (#,#) ipv_s90mR [Occ=Once] ipv1_s90mS [Occ=Once!] ->
              case ipv1_s90mS of {
                GHC.IO.Encoding.Types.TextEncoding _ [Occ=Dead]
                                                   _ [Occ=Dead]
                                                   ds4_s90mW [Occ=Once] ->
                    let {
                      sat_s90nX [Occ=Once]
                        :: GHC.IO.Encoding.Types.TextEncoder estate_a8RVZ
                           -> GHC.Types.IO a_a8X7M
                      [LclId] =
                          [s_s90mN f_s90mO] \r [encoder_s90mX eta1_s90mY]
                              case GHC.List.$wlenAcc s_s90mN 0# of ww2_s90mZ {
                                __DEFAULT ->
                                    case *# [ww2_s90mZ 4#] of sat_s90n0 {
                                      __DEFAULT ->
                                          case
                                              newAlignedPinnedByteArray# [sat_s90n0 4# eta1_s90mY]
                                          of
                                          { (#,#) ipv2_s90n2 [Occ=Once] ipv3_s90n3 [Occ=Once] ->
                                                case
                                                    unsafeFreezeByteArray# [ipv3_s90n3 ipv2_s90n2]
                                                of
                                                { (#,#) ipv4_s90n5 [Occ=Once] ipv5_s90n6 ->
                                                      case
                                                          byteArrayContents# [ipv5_s90n6]
                                                      of
                                                      ptr_s90n7
                                                      { __DEFAULT ->
                                                            let-no-escape {
                                                              $w$j_s90n8 [InlPrag=NOUSERINLINE[0],
                                                                          Occ=OnceL!T[1],
                                                                          Dmd=<C(S),C(U)>]
                                                                :: GHC.Prim.State#
                                                                     GHC.Prim.RealWorld
                                                                   -> (# GHC.Prim.State#
                                                                           GHC.Prim.RealWorld,
                                                                         a_a8X7M #)
                                                              [LclId[JoinId(1)],
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [f_s90mO
                                                                            encoder_s90mX
                                                                            ww2_s90mZ
                                                                            ipv5_s90n6
                                                                            ptr_s90n7] \r [w_s90n9]
                                                                      case
                                                                          newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                                                      w_s90n9]
                                                                      of
                                                                      { (#,#) ipv6_s90nb [Occ=Once]
                                                                              ipv7_s90nc [Occ=OnceL] ->
                                                                            let {
                                                                              ipv8_s90nd [Occ=OnceL]
                                                                                :: GHC.ForeignPtr.ForeignPtrContents
                                                                              [LclId,
                                                                               Unf=OtherCon []] =
                                                                                  CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv7_s90nc]; } in
                                                                            let {
                                                                              ipv9_s90ne [Occ=OnceL]
                                                                                :: GHC.IO.Buffer.Buffer
                                                                                     GHC.Types.Char
                                                                              [LclId,
                                                                               Unf=OtherCon []] =
                                                                                  CCCS GHC.IO.Buffer.Buffer! [ptr_s90n7
                                                                                                              ipv8_s90nd
                                                                                                              GHC.IO.Buffer.ReadBuffer
                                                                                                              ww2_s90mZ
                                                                                                              0#
                                                                                                              ww2_s90mZ]; } in
                                                                            let {
                                                                              $wgo_s90nf [InlPrag=NOUSERINLINE[0],
                                                                                          Occ=LoopBreaker]
                                                                                :: GHC.Prim.Int#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld,
                                                                                         a_a8X7M #)
                                                                              [LclId,
                                                                               Arity=2,
                                                                               Str=<S,U><S,U>,
                                                                               Unf=OtherCon []] =
                                                                                  sat-only [f_s90mO
                                                                                            encoder_s90mX
                                                                                            ipv9_s90ne
                                                                                            $wgo_s90nf] \r [ww_s90ng
                                                                                                            w1_s90nh]
                                                                                      case
                                                                                          newPinnedByteArray# [ww_s90ng
                                                                                                               w1_s90nh]
                                                                                      of
                                                                                      { (#,#) ipv10_s90nj [Occ=Once]
                                                                                              ipv11_s90nk [Occ=Once] ->
                                                                                            case
                                                                                                unsafeFreezeByteArray# [ipv11_s90nk
                                                                                                                        ipv10_s90nj]
                                                                                            of
                                                                                            { (#,#) ipv12_s90nm [Occ=Once]
                                                                                                    ipv13_s90nn ->
                                                                                                  case
                                                                                                      encoder_s90mX
                                                                                                  of
                                                                                                  { GHC.IO.Encoding.Types.BufferCodec ww3_s90np [Occ=Once]
                                                                                                                                      ww4_s90nq [Occ=Once]
                                                                                                                                      _ [Occ=Dead]
                                                                                                                                      _ [Occ=Dead]
                                                                                                                                      _ [Occ=Dead] ->
                                                                                                        let {
                                                                                                          sat_s90nv [Occ=Once]
                                                                                                            :: GHC.Types.Int
                                                                                                          [LclId] =
                                                                                                              CCCS GHC.Types.I#! [ww_s90ng];
                                                                                                        } in 
                                                                                                          case
                                                                                                              byteArrayContents# [ipv13_s90nn]
                                                                                                          of
                                                                                                          sat_s90nu
                                                                                                          { __DEFAULT ->
                                                                                                                case
                                                                                                                    GHC.Foreign.$wtryFillBufferAndCall
                                                                                                                        ww3_s90np
                                                                                                                        ww4_s90nq
                                                                                                                        GHC.Types.False
                                                                                                                        ipv9_s90ne
                                                                                                                        sat_s90nu
                                                                                                                        sat_s90nv
                                                                                                                        f_s90mO
                                                                                                                        ipv12_s90nm
                                                                                                                of
                                                                                                                { (#,#) ipv14_s90nx [Occ=Once*]
                                                                                                                        ipv15_s90ny [Occ=Once!] ->
                                                                                                                      case
                                                                                                                          ipv15_s90ny
                                                                                                                      of
                                                                                                                      { GHC.Base.Nothing ->
                                                                                                                            case
                                                                                                                                *# [ww_s90ng
                                                                                                                                    2#]
                                                                                                                            of
                                                                                                                            sat_s90nA
                                                                                                                            { __DEFAULT ->
                                                                                                                                  case
                                                                                                                                      $wgo_s90nf
                                                                                                                                          sat_s90nA
                                                                                                                                          ipv14_s90nx
                                                                                                                                  of
                                                                                                                                  { (#,#) ipv16_s90nC [Occ=Once]
                                                                                                                                          ipv17_s90nD [Occ=Once] ->
                                                                                                                                        case
                                                                                                                                            touch# [ipv13_s90nn
                                                                                                                                                    ipv16_s90nC]
                                                                                                                                        of
                                                                                                                                        s4_s90nE
                                                                                                                                        { __DEFAULT ->
                                                                                                                                              (#,#) [s4_s90nE
                                                                                                                                                     ipv17_s90nD];
                                                                                                                                        };
                                                                                                                                  };
                                                                                                                            };
                                                                                                                        GHC.Base.Just res_s90nF [Occ=Once] ->
                                                                                                                            case
                                                                                                                                touch# [ipv13_s90nn
                                                                                                                                        ipv14_s90nx]
                                                                                                                            of
                                                                                                                            s4_s90nG
                                                                                                                            { __DEFAULT ->
                                                                                                                                  (#,#) [s4_s90nG
                                                                                                                                         res_s90nF];
                                                                                                                            };
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                            } in 
                                                                              case
                                                                                  +# [ww2_s90mZ 1#]
                                                                              of
                                                                              sat_s90nH
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        $wgo_s90nf
                                                                                            sat_s90nH
                                                                                            ipv6_s90nb
                                                                                    of
                                                                                    { (#,#) ipv10_s90nJ [Occ=Once]
                                                                                            ipv11_s90nK [Occ=Once] ->
                                                                                          case
                                                                                              touch# [ipv5_s90n6
                                                                                                      ipv10_s90nJ]
                                                                                          of
                                                                                          s4_s90nL
                                                                                          { __DEFAULT ->
                                                                                                (#,#) [s4_s90nL
                                                                                                       ipv11_s90nK];
                                                                                          };
                                                                                    };
                                                                              };
                                                                      };
                                                            } in 
                                                              let-no-escape {
                                                                go_s90nM [Occ=LoopBreakerT[3]]
                                                                  :: [GHC.Types.Char]
                                                                     -> GHC.Prim.Int#
                                                                     -> GHC.Prim.State#
                                                                          GHC.Prim.RealWorld
                                                                     -> (# GHC.Prim.State#
                                                                             GHC.Prim.RealWorld,
                                                                           a_a8X7M #)
                                                                [LclId[JoinId(3)],
                                                                 Arity=3,
                                                                 Str=<S,1*U><L,U><S,U>,
                                                                 Unf=OtherCon []] =
                                                                    sat-only [ptr_s90n7
                                                                              $w$j_s90n8
                                                                              go_s90nM] \r [ds7_s90nN
                                                                                            ds8_s90nO
                                                                                            eta2_s90nP]
                                                                        case ds7_s90nN of {
                                                                          [] ->
                                                                              $w$j_s90n8 eta2_s90nP;
                                                                          : val_s90nR [Occ=Once!]
                                                                            vals_s90nS [Occ=Once] ->
                                                                              case val_s90nR of {
                                                                                GHC.Types.C# x_s90nU [Occ=Once] ->
                                                                                    case
                                                                                        writeWideCharOffAddr# [ptr_s90n7
                                                                                                               ds8_s90nO
                                                                                                               x_s90nU
                                                                                                               eta2_s90nP]
                                                                                    of
                                                                                    s2_s90nV
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              +# [ds8_s90nO
                                                                                                  1#]
                                                                                          of
                                                                                          sat_s90nW
                                                                                          { __DEFAULT ->
                                                                                                go_s90nM
                                                                                                    vals_s90nS
                                                                                                    sat_s90nW
                                                                                                    s2_s90nV;
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                              } in  go_s90nM s_s90mN 0# ipv4_s90n5;
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.bracket1
                          ds4_s90mW GHC.IO.Encoding.Types.close sat_s90nX ipv_s90mR;
              };
        };

Foreign.C.String.withCStringLen
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CStringLen -> GHC.Types.IO a)
     -> GHC.Types.IO a
[GblId,
 Arity=3,
 Str=<L,U><L,C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.C.String.withCStringLen1 eta_B3 eta_B2 eta_B1;

Foreign.C.String.withCString1
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CString -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Str=<L,U><L,C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [s_s90nY f_s90nZ s1_s90o0]
        case GHC.IO.Encoding.getForeignEncoding s1_s90o0 of {
          (#,#) ipv_s90o2 [Occ=Once] ipv1_s90o3 [Occ=Once] ->
              GHC.Foreign.charIsRepresentable3
                  ipv1_s90o3 s_s90nY f_s90nZ ipv_s90o2;
        };

Foreign.C.String.withCString
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CString -> GHC.Types.IO a) -> GHC.Types.IO a
[GblId,
 Arity=3,
 Str=<L,U><L,C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.C.String.withCString1 eta_B3 eta_B2 eta_B1;

Foreign.C.String.charIsRepresentable1
  :: GHC.Types.Char
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=2, Str=<L,U(U)><S,U>, Unf=OtherCon []] =
    [] \r [c_s90o4 s_s90o5]
        case GHC.IO.Encoding.getForeignEncoding s_s90o5 of {
          (#,#) ipv_s90o7 [Occ=Once] ipv1_s90o8 [Occ=Once] ->
              GHC.Foreign.charIsRepresentable1 ipv1_s90o8 c_s90o4 ipv_s90o7;
        };

Foreign.C.String.charIsRepresentable
  :: GHC.Types.Char -> GHC.Types.IO GHC.Types.Bool
[GblId, Arity=2, Str=<L,U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.String.charIsRepresentable1 eta_B2 eta_B1;

Foreign.C.String.newCStringLen2 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

Foreign.C.String.newCStringLen1
  :: GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Foreign.CStringLen #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [s_s90o9 s1_s90oa]
        case GHC.IO.Encoding.getForeignEncoding s1_s90oa of {
          (#,#) ipv_s90oc [Occ=Once] ipv1_s90od [Occ=Once!] ->
              case ipv1_s90od of {
                GHC.IO.Encoding.Types.TextEncoding _ [Occ=Dead]
                                                   _ [Occ=Dead]
                                                   ds4_s90oh [Occ=Once] ->
                    let {
                      sat_s90qg [Occ=Once]
                        :: GHC.IO.Encoding.Types.TextEncoder estate_a8RYT
                           -> GHC.Types.IO GHC.Foreign.CStringLen
                      [LclId] =
                          [s_s90o9] \r [encoder_s90oi eta1_s90oj]
                              case GHC.List.$wlenAcc s_s90o9 0# of ww2_s90ok {
                                __DEFAULT ->
                                    case *# [ww2_s90ok 4#] of sat_s90ol {
                                      __DEFAULT ->
                                          case
                                              newAlignedPinnedByteArray# [sat_s90ol 4# eta1_s90oj]
                                          of
                                          { (#,#) ipv2_s90on [Occ=Once] ipv3_s90oo [Occ=Once] ->
                                                case
                                                    unsafeFreezeByteArray# [ipv3_s90oo ipv2_s90on]
                                                of
                                                { (#,#) ipv4_s90oq [Occ=Once] ipv5_s90or ->
                                                      case
                                                          byteArrayContents# [ipv5_s90or]
                                                      of
                                                      ptr_s90os
                                                      { __DEFAULT ->
                                                            let-no-escape {
                                                              $w$j_s90ot [InlPrag=NOUSERINLINE[0],
                                                                          Occ=OnceL!T[1],
                                                                          Dmd=<C(S),C(U)>]
                                                                :: GHC.Prim.State#
                                                                     GHC.Prim.RealWorld
                                                                   -> (# GHC.Prim.State#
                                                                           GHC.Prim.RealWorld,
                                                                         GHC.Foreign.CStringLen #)
                                                              [LclId[JoinId(1)],
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [encoder_s90oi
                                                                            ww2_s90ok
                                                                            ipv5_s90or
                                                                            ptr_s90os] \r [w_s90ou]
                                                                      case
                                                                          newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                                                      w_s90ou]
                                                                      of
                                                                      { (#,#) ipv6_s90ow [Occ=Once]
                                                                              ipv7_s90ox [Occ=OnceL] ->
                                                                            case
                                                                                +# [ww2_s90ok 1#]
                                                                            of
                                                                            to_sz_bytes_s90oy [Dmd=<S,U>]
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      int2Word# [to_sz_bytes_s90oy]
                                                                                  of
                                                                                  sat_s90oA
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            __pkg_ccall base-4.11.0.0 [sat_s90oA
                                                                                                                       ipv6_s90ow]
                                                                                        of
                                                                                        { (#,#) ds8_s90oC [Occ=Once*]
                                                                                                ds9_s90oD ->
                                                                                              case
                                                                                                  eqAddr# [ds9_s90oD
                                                                                                           __NULL]
                                                                                              of
                                                                                              { __DEFAULT ->
                                                                                                    let {
                                                                                                      ipv8_s90oF [Occ=OnceL]
                                                                                                        :: GHC.ForeignPtr.ForeignPtrContents
                                                                                                      [LclId,
                                                                                                       Unf=OtherCon []] =
                                                                                                          CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv7_s90ox]; } in
                                                                                                    let {
                                                                                                      ipv9_s90oG [Occ=OnceL]
                                                                                                        :: GHC.IO.Buffer.Buffer
                                                                                                             GHC.Types.Char
                                                                                                      [LclId,
                                                                                                       Unf=OtherCon []] =
                                                                                                          CCCS GHC.IO.Buffer.Buffer! [ptr_s90os
                                                                                                                                      ipv8_s90oF
                                                                                                                                      GHC.IO.Buffer.ReadBuffer
                                                                                                                                      ww2_s90ok
                                                                                                                                      0#
                                                                                                                                      ww2_s90ok]; } in
                                                                                                    let {
                                                                                                      sat_s90q3 [Occ=Once]
                                                                                                        :: GHC.Types.Int
                                                                                                      [LclId] =
                                                                                                          CCCS GHC.Types.I#! [to_sz_bytes_s90oy];
                                                                                                    } in 
                                                                                                      let-no-escape {
                                                                                                        $j_s90oH [Occ=OnceL!T[2],
                                                                                                                  Dmd=<L,C(C1(U))>]
                                                                                                          :: GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                             -> GHC.Foreign.CStringLen
                                                                                                             -> (# GHC.Prim.State#
                                                                                                                     GHC.Prim.RealWorld,
                                                                                                                   GHC.Foreign.CStringLen #)
                                                                                                        [LclId[JoinId(2)],
                                                                                                         Arity=2,
                                                                                                         Str=<S,U><L,U>,
                                                                                                         Unf=OtherCon []] =
                                                                                                            sat-only [ipv5_s90or] \r [ipv10_s90oI
                                                                                                                                      ipv11_s90oJ]
                                                                                                                case
                                                                                                                    touch# [ipv5_s90or
                                                                                                                            ipv10_s90oI]
                                                                                                                of
                                                                                                                s4_s90oK
                                                                                                                { __DEFAULT ->
                                                                                                                      (#,#) [s4_s90oK
                                                                                                                             ipv11_s90oJ];
                                                                                                                };
                                                                                                      } in 
                                                                                                        let-no-escape {
                                                                                                          $wgo_s90oL [InlPrag=NOUSERINLINE[0],
                                                                                                                      Occ=LoopBreakerT[3]]
                                                                                                            :: GHC.Prim.Addr#
                                                                                                               -> GHC.Types.Int
                                                                                                               -> GHC.Prim.State#
                                                                                                                    GHC.Prim.RealWorld
                                                                                                               -> (# GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld,
                                                                                                                     GHC.Foreign.CStringLen #)
                                                                                                          [LclId[JoinId(3)],
                                                                                                           Arity=3,
                                                                                                           Str=<L,U><L,U(U)><S,U>,
                                                                                                           Unf=OtherCon []] =
                                                                                                              sat-only [encoder_s90oi
                                                                                                                        ipv9_s90oG
                                                                                                                        $j_s90oH
                                                                                                                        $wgo_s90oL] \r [ww_s90oM
                                                                                                                                        w1_s90oN
                                                                                                                                        w2_s90oO]
                                                                                                                  case
                                                                                                                      encoder_s90oi
                                                                                                                  of
                                                                                                                  { GHC.IO.Encoding.Types.BufferCodec ww3_s90oQ [Occ=OnceL!]
                                                                                                                                                      ww4_s90oR [Occ=OnceL!]
                                                                                                                                                      _ [Occ=Dead]
                                                                                                                                                      _ [Occ=Dead]
                                                                                                                                                      _ [Occ=Dead] ->
                                                                                                                        case
                                                                                                                            newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                                                                                                        w2_s90oO]
                                                                                                                        of
                                                                                                                        { (#,#) ipv12_s90oW [Occ=Once]
                                                                                                                                ipv13_s90oX [Occ=Once] ->
                                                                                                                              let {
                                                                                                                                sat_s90q2 [Occ=Once]
                                                                                                                                  :: GHC.IO.Buffer.Buffer
                                                                                                                                       GHC.Word.Word8
                                                                                                                                [LclId] =
                                                                                                                                    [ww_s90oM
                                                                                                                                     w1_s90oN
                                                                                                                                     ipv13_s90oX] \u []
                                                                                                                                        case
                                                                                                                                            w1_s90oN
                                                                                                                                        of
                                                                                                                                        { GHC.Types.I# dt4_s90q0 [Occ=Once] ->
                                                                                                                                              let {
                                                                                                                                                sat_s90q1 [Occ=Once]
                                                                                                                                                  :: GHC.ForeignPtr.ForeignPtrContents
                                                                                                                                                [LclId] =
                                                                                                                                                    CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv13_s90oX];
                                                                                                                                              } in 
                                                                                                                                                GHC.IO.Buffer.Buffer [ww_s90oM
                                                                                                                                                                      sat_s90q1
                                                                                                                                                                      GHC.IO.Buffer.WriteBuffer
                                                                                                                                                                      dt4_s90q0
                                                                                                                                                                      0#
                                                                                                                                                                      0#];
                                                                                                                                        };
                                                                                                                              } in 
                                                                                                                                let-no-escape {
                                                                                                                                  $j1_s90oY [Dmd=<L,C(C1(U))>]
                                                                                                                                    :: GHC.Prim.State#
                                                                                                                                         GHC.Prim.RealWorld
                                                                                                                                       -> GHC.Base.Maybe
                                                                                                                                            GHC.Foreign.CStringLen
                                                                                                                                       -> (# GHC.Prim.State#
                                                                                                                                               GHC.Prim.RealWorld,
                                                                                                                                             GHC.Foreign.CStringLen #)
                                                                                                                                  [LclId[JoinId(2)],
                                                                                                                                   Arity=2,
                                                                                                                                   Str=<S,U><S,1*U>,
                                                                                                                                   Unf=OtherCon []] =
                                                                                                                                      sat-only [$j_s90oH
                                                                                                                                                $wgo_s90oL
                                                                                                                                                ww_s90oM
                                                                                                                                                w1_s90oN] \r [ipv10_s90oZ
                                                                                                                                                              ipv11_s90p0]
                                                                                                                                          case
                                                                                                                                              ipv11_s90p0
                                                                                                                                          of
                                                                                                                                          { GHC.Base.Nothing ->
                                                                                                                                                case
                                                                                                                                                    w1_s90oN
                                                                                                                                                of
                                                                                                                                                { GHC.Types.I# x_s90p3 [Occ=Once] ->
                                                                                                                                                      case
                                                                                                                                                          *# [x_s90p3
                                                                                                                                                              2#]
                                                                                                                                                      of
                                                                                                                                                      ds_s90p4
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            case
                                                                                                                                                                int2Word# [ds_s90p4]
                                                                                                                                                            of
                                                                                                                                                            sat_s90p6
                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                  case
                                                                                                                                                                      __pkg_ccall base-4.11.0.0 [ww_s90oM
                                                                                                                                                                                                 sat_s90p6
                                                                                                                                                                                                 ipv10_s90oZ]
                                                                                                                                                                  of
                                                                                                                                                                  { (#,#) ds11_s90p8 [Occ=Once*]
                                                                                                                                                                          ds12_s90p9 ->
                                                                                                                                                                        case
                                                                                                                                                                            eqAddr# [ds12_s90p9
                                                                                                                                                                                     __NULL]
                                                                                                                                                                        of
                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                              let {
                                                                                                                                                                                sat_s90pb [Occ=Once]
                                                                                                                                                                                  :: GHC.Types.Int
                                                                                                                                                                                [LclId] =
                                                                                                                                                                                    CCCS GHC.Types.I#! [ds_s90p4];
                                                                                                                                                                              } in 
                                                                                                                                                                                $wgo_s90oL
                                                                                                                                                                                    ds12_s90p9
                                                                                                                                                                                    sat_s90pb
                                                                                                                                                                                    ds11_s90p8;
                                                                                                                                                                          1# ->
                                                                                                                                                                              raiseIO# [Foreign.Marshal.Alloc.realloc2
                                                                                                                                                                                        ds11_s90p8];
                                                                                                                                                                        };
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                        0# ->
                                                                                                                                                            case
                                                                                                                                                                __pkg_ccall base-4.11.0.0 [ww_s90oM
                                                                                                                                                                                           ipv10_s90oZ]
                                                                                                                                                            of
                                                                                                                                                            { Unit# ds11_s90pf [Occ=Once] ->
                                                                                                                                                                  $wgo_s90oL
                                                                                                                                                                      __NULL
                                                                                                                                                                      Foreign.C.String.newCStringLen2
                                                                                                                                                                      ds11_s90pf;
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                            GHC.Base.Just res_s90pg [Occ=Once] ->
                                                                                                                                                $j_s90oH
                                                                                                                                                    ipv10_s90oZ
                                                                                                                                                    res_s90pg;
                                                                                                                                          };
                                                                                                                                } in 
                                                                                                                                  let-no-escape {
                                                                                                                                    exit_s90ph [Occ=OnceL!T[1],
                                                                                                                                                Dmd=<L,C(U)>]
                                                                                                                                      :: GHC.Prim.State#
                                                                                                                                           GHC.Prim.RealWorld
                                                                                                                                         -> (# GHC.Prim.State#
                                                                                                                                                 GHC.Prim.RealWorld,
                                                                                                                                               GHC.Foreign.CStringLen #)
                                                                                                                                    [LclId[JoinId(1)],
                                                                                                                                     Arity=1,
                                                                                                                                     Str=<S,U>,
                                                                                                                                     Unf=OtherCon []] =
                                                                                                                                        sat-only [$j1_s90oY] \r [ipv14_s90pi]
                                                                                                                                            $j1_s90oY
                                                                                                                                                ipv14_s90pi
                                                                                                                                                GHC.Base.Nothing;
                                                                                                                                  } in 
                                                                                                                                    let-no-escape {
                                                                                                                                      exit1_s90pj [Occ=OnceL!T[2],
                                                                                                                                                   Dmd=<L,C(C1(U))>]
                                                                                                                                        :: GHC.Prim.State#
                                                                                                                                             GHC.Prim.RealWorld
                                                                                                                                           -> GHC.IO.Buffer.Buffer
                                                                                                                                                GHC.Word.Word8
                                                                                                                                           -> (# GHC.Prim.State#
                                                                                                                                                   GHC.Prim.RealWorld,
                                                                                                                                                 GHC.Foreign.CStringLen #)
                                                                                                                                      [LclId[JoinId(2)],
                                                                                                                                       Arity=2,
                                                                                                                                       Str=<S,U><S,1*U(U,U,A,A,U,U)>,
                                                                                                                                       Unf=OtherCon []] =
                                                                                                                                          sat-only [$j1_s90oY] \r [ipv14_s90pk
                                                                                                                                                                   to'_s90pl]
                                                                                                                                              case
                                                                                                                                                  to'_s90pl
                                                                                                                                              of
                                                                                                                                              { GHC.IO.Buffer.Buffer ww9_s90pn [Occ=Once]
                                                                                                                                                                     ww10_s90po [Occ=Once]
                                                                                                                                                                     _ [Occ=Dead]
                                                                                                                                                                     _ [Occ=Dead]
                                                                                                                                                                     ww13_s90pr [Occ=Once]
                                                                                                                                                                     ww14_s90ps [Occ=Once] ->
                                                                                                                                                    case
                                                                                                                                                        touch# [ww10_s90po
                                                                                                                                                                ipv14_s90pk]
                                                                                                                                                    of
                                                                                                                                                    s'_s90pt
                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                          case
                                                                                                                                                              -# [ww14_s90ps
                                                                                                                                                                  ww13_s90pr]
                                                                                                                                                          of
                                                                                                                                                          sat_s90pv
                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                let {
                                                                                                                                                                  sat_s90pw [Occ=Once]
                                                                                                                                                                    :: GHC.Types.Int
                                                                                                                                                                  [LclId] =
                                                                                                                                                                      CCCS GHC.Types.I#! [sat_s90pv]; } in
                                                                                                                                                                let {
                                                                                                                                                                  sat_s90pu [Occ=Once]
                                                                                                                                                                    :: GHC.Ptr.Ptr
                                                                                                                                                                         Foreign.C.Types.CChar
                                                                                                                                                                  [LclId] =
                                                                                                                                                                      CCCS GHC.Ptr.Ptr! [ww9_s90pn]; } in
                                                                                                                                                                let {
                                                                                                                                                                  sat_s90px [Occ=Once]
                                                                                                                                                                    :: GHC.Foreign.CStringLen
                                                                                                                                                                  [LclId] =
                                                                                                                                                                      CCCS (,)! [sat_s90pu
                                                                                                                                                                                 sat_s90pw]; } in
                                                                                                                                                                let {
                                                                                                                                                                  sat_s90py [Occ=Once]
                                                                                                                                                                    :: GHC.Base.Maybe
                                                                                                                                                                         GHC.Foreign.CStringLen
                                                                                                                                                                  [LclId] =
                                                                                                                                                                      CCCS GHC.Base.Just! [sat_s90px];
                                                                                                                                                                } in 
                                                                                                                                                                  $j1_s90oY
                                                                                                                                                                      s'_s90pt
                                                                                                                                                                      sat_s90py;
                                                                                                                                                          };
                                                                                                                                                    };
                                                                                                                                              };
                                                                                                                                    } in 
                                                                                                                                      let-no-escape {
                                                                                                                                        $wgo1_s90pz [InlPrag=NOUSERINLINE[0],
                                                                                                                                                     Occ=LoopBreakerT[3]]
                                                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                                                                             -> GHC.IO.Buffer.Buffer
                                                                                                                                                  GHC.Word.Word8
                                                                                                                                             -> GHC.Prim.State#
                                                                                                                                                  GHC.Prim.RealWorld
                                                                                                                                             -> (# GHC.Prim.State#
                                                                                                                                                     GHC.Prim.RealWorld,
                                                                                                                                                   GHC.Foreign.CStringLen #)
                                                                                                                                        [LclId[JoinId(3)],
                                                                                                                                         Arity=3,
                                                                                                                                         Str=<L,U><L,U><S,U>,
                                                                                                                                         Unf=OtherCon []] =
                                                                                                                                            sat-only [ww3_s90oQ
                                                                                                                                                      ww4_s90oR
                                                                                                                                                      exit_s90ph
                                                                                                                                                      exit1_s90pj
                                                                                                                                                      $wgo1_s90pz] \r [ww8_s90pA
                                                                                                                                                                       ww9_s90pB
                                                                                                                                                                       w5_s90pC]
                                                                                                                                                case
                                                                                                                                                    ww3_s90oQ
                                                                                                                                                        ww8_s90pA
                                                                                                                                                        ww9_s90pB
                                                                                                                                                        w5_s90pC
                                                                                                                                                of
                                                                                                                                                { (#,#) ipv14_s90pE [Occ=Once*]
                                                                                                                                                        ipv15_s90pF [Occ=Once!] ->
                                                                                                                                                      case
                                                                                                                                                          ipv15_s90pF
                                                                                                                                                      of
                                                                                                                                                      { (,,) why_s90pH [Occ=Once!]
                                                                                                                                                             from'_s90pI [Occ=Once!]
                                                                                                                                                             to'_s90pJ [Occ=Once*] ->
                                                                                                                                                            case
                                                                                                                                                                from'_s90pI
                                                                                                                                                            of
                                                                                                                                                            wild3_s90pK
                                                                                                                                                            { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                                                                                                                   _ [Occ=Dead]
                                                                                                                                                                                   _ [Occ=Dead]
                                                                                                                                                                                   _ [Occ=Dead]
                                                                                                                                                                                   dt3_s90pP [Occ=Once]
                                                                                                                                                                                   dt4_s90pQ [Occ=Once] ->
                                                                                                                                                                  case
                                                                                                                                                                      ==# [dt3_s90pP
                                                                                                                                                                           dt4_s90pQ]
                                                                                                                                                                  of
                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                        case
                                                                                                                                                                            why_s90pH
                                                                                                                                                                        of
                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                              case
                                                                                                                                                                                  ww4_s90oR
                                                                                                                                                                                      wild3_s90pK
                                                                                                                                                                                      to'_s90pJ
                                                                                                                                                                                      ipv14_s90pE
                                                                                                                                                                              of
                                                                                                                                                                              { (#,#) ipv16_s90pU [Occ=Once]
                                                                                                                                                                                      ipv17_s90pV [Occ=Once!] ->
                                                                                                                                                                                    case
                                                                                                                                                                                        ipv17_s90pV
                                                                                                                                                                                    of
                                                                                                                                                                                    { (,) ww11_s90pX [Occ=Once]
                                                                                                                                                                                          ww12_s90pY [Occ=Once] ->
                                                                                                                                                                                          $wgo1_s90pz
                                                                                                                                                                                              ww11_s90pX
                                                                                                                                                                                              ww12_s90pY
                                                                                                                                                                                              ipv16_s90pU;
                                                                                                                                                                                    };
                                                                                                                                                                              };
                                                                                                                                                                          GHC.IO.Encoding.Types.OutputUnderflow ->
                                                                                                                                                                              exit_s90ph
                                                                                                                                                                                  ipv14_s90pE;
                                                                                                                                                                        };
                                                                                                                                                                    1# ->
                                                                                                                                                                        exit1_s90pj
                                                                                                                                                                            ipv14_s90pE
                                                                                                                                                                            to'_s90pJ;
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                      } in 
                                                                                                                                        $wgo1_s90pz
                                                                                                                                            ipv9_s90oG
                                                                                                                                            sat_s90q2
                                                                                                                                            ipv12_s90oW;
                                                                                                                        };
                                                                                                                  };
                                                                                                        } in 
                                                                                                          $wgo_s90oL
                                                                                                              ds9_s90oD
                                                                                                              sat_s90q3
                                                                                                              ds8_s90oC;
                                                                                                1# ->
                                                                                                    raiseIO# [Foreign.Marshal.Alloc.malloc1
                                                                                                              ds8_s90oC];
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                      };
                                                            } in 
                                                              let-no-escape {
                                                                go_s90q5 [Occ=LoopBreakerT[3]]
                                                                  :: [GHC.Types.Char]
                                                                     -> GHC.Prim.Int#
                                                                     -> GHC.Prim.State#
                                                                          GHC.Prim.RealWorld
                                                                     -> (# GHC.Prim.State#
                                                                             GHC.Prim.RealWorld,
                                                                           GHC.Foreign.CStringLen #)
                                                                [LclId[JoinId(3)],
                                                                 Arity=3,
                                                                 Str=<S,1*U><L,U><S,U>,
                                                                 Unf=OtherCon []] =
                                                                    sat-only [ptr_s90os
                                                                              $w$j_s90ot
                                                                              go_s90q5] \r [ds7_s90q6
                                                                                            ds8_s90q7
                                                                                            eta2_s90q8]
                                                                        case ds7_s90q6 of {
                                                                          [] ->
                                                                              $w$j_s90ot eta2_s90q8;
                                                                          : val_s90qa [Occ=Once!]
                                                                            vals_s90qb [Occ=Once] ->
                                                                              case val_s90qa of {
                                                                                GHC.Types.C# x_s90qd [Occ=Once] ->
                                                                                    case
                                                                                        writeWideCharOffAddr# [ptr_s90os
                                                                                                               ds8_s90q7
                                                                                                               x_s90qd
                                                                                                               eta2_s90q8]
                                                                                    of
                                                                                    s2_s90qe
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              +# [ds8_s90q7
                                                                                                  1#]
                                                                                          of
                                                                                          sat_s90qf
                                                                                          { __DEFAULT ->
                                                                                                go_s90q5
                                                                                                    vals_s90qb
                                                                                                    sat_s90qf
                                                                                                    s2_s90qe;
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                              } in  go_s90q5 s_s90o9 0# ipv4_s90oq;
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.bracket1
                          ds4_s90oh GHC.IO.Encoding.Types.close sat_s90qg ipv_s90oc;
              };
        };

Foreign.C.String.newCStringLen
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CStringLen
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.String.newCStringLen1 eta_B2 eta_B1;

Foreign.C.String.newCString1
  :: GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Foreign.CString #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [s_s90qh s1_s90qi]
        case GHC.IO.Encoding.getForeignEncoding s1_s90qi of {
          (#,#) ipv_s90qk [Occ=Once] ipv1_s90ql [Occ=Once] ->
              GHC.Foreign.newCString1 ipv1_s90ql s_s90qh ipv_s90qk;
        };

Foreign.C.String.newCString
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CString
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] Foreign.C.String.newCString1 eta_B2 eta_B1;

Foreign.C.String.peekCStringLen1
  :: Foreign.C.String.CStringLen
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=2,
 Str=<L,1*U(1*U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [s_s90qm s1_s90qn]
        case GHC.IO.Encoding.getForeignEncoding s1_s90qn of {
          (#,#) ipv_s90qp [Occ=Once] ipv1_s90qq [Occ=Once!] ->
              case ipv1_s90qq of {
                GHC.IO.Encoding.Types.TextEncoding _ [Occ=Dead]
                                                   ds3_s90qt [Occ=Once]
                                                   _ [Occ=Dead] ->
                    case s_s90qm of {
                      (,) p_s90qw [Occ=Once] sz_bytes_s90qx [Occ=Once!] ->
                          let {
                            sat_s90sP [Occ=Once]
                              :: GHC.IO.Encoding.Types.TextDecoder dstate_a8RPc
                                 -> GHC.Types.IO [GHC.IO.Buffer.CharBufElem]
                            [LclId] =
                                [p_s90qw sz_bytes_s90qx] \r [decoder_s90qy s2_s90qz]
                                    case p_s90qw of {
                                      GHC.Ptr.Ptr obj_s90qB [Occ=Once] ->
                                          case
                                              newMutVar# [GHC.ForeignPtr.NoFinalizers s2_s90qz]
                                          of
                                          { (#,#) ipv2_s90qD [Occ=Once] ipv3_s90qE [Occ=Once] ->
                                                case sz_bytes_s90qx of {
                                                  GHC.Types.I# x1_s90qG ->
                                                      let-no-escape {
                                                        $j_s90qH [Occ=Once*!T[1],
                                                                  Dmd=<C(S),1*C1(U)>]
                                                          :: GHC.Prim.Int#
                                                             -> (# GHC.Prim.State#
                                                                     GHC.Prim.RealWorld,
                                                                   [GHC.IO.Buffer.CharBufElem] #)
                                                        [LclId[JoinId(1)],
                                                         Arity=1,
                                                         Str=<S,U>,
                                                         Unf=OtherCon []] =
                                                            sat-only [decoder_s90qy
                                                                      obj_s90qB
                                                                      ipv2_s90qD
                                                                      ipv3_s90qE
                                                                      x1_s90qG] \r [x_s90qI]
                                                                case
                                                                    *# [x_s90qI 4#]
                                                                of
                                                                x2_s90qJ [Dmd=<S,U>]
                                                                { __DEFAULT ->
                                                                      case <# [x2_s90qJ 0#] of {
                                                                        __DEFAULT ->
                                                                            case
                                                                                newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                                                            ipv2_s90qD]
                                                                            of
                                                                            { (#,#) ipv4_s90qM [Occ=Once]
                                                                                    ipv5_s90qN [Occ=OnceL] ->
                                                                                  case
                                                                                      newPinnedByteArray# [x2_s90qJ
                                                                                                           ipv4_s90qM]
                                                                                  of
                                                                                  { (#,#) ipv6_s90qP [Occ=Once]
                                                                                          ipv7_s90qQ ->
                                                                                        case
                                                                                            byteArrayContents# [ipv7_s90qQ]
                                                                                        of
                                                                                        ipv8_s90qR
                                                                                        { __DEFAULT ->
                                                                                              let {
                                                                                                ipv9_s90qS [Occ=OnceL]
                                                                                                  :: GHC.ForeignPtr.ForeignPtrContents
                                                                                                [LclId,
                                                                                                 Unf=OtherCon []] =
                                                                                                    CCCS GHC.ForeignPtr.MallocPtr! [ipv7_s90qQ
                                                                                                                                    ipv5_s90qN]; } in
                                                                                              let {
                                                                                                ipv10_s90qT [Occ=OnceL]
                                                                                                  :: GHC.IO.Buffer.CharBuffer
                                                                                                [LclId,
                                                                                                 Unf=OtherCon []] =
                                                                                                    CCCS GHC.IO.Buffer.Buffer! [ipv8_s90qR
                                                                                                                                ipv9_s90qS
                                                                                                                                GHC.IO.Buffer.WriteBuffer
                                                                                                                                x_s90qI
                                                                                                                                0#
                                                                                                                                0#]; } in
                                                                                              let {
                                                                                                $wgo_s90qU [InlPrag=NOUSERINLINE[0],
                                                                                                            Occ=LoopBreaker]
                                                                                                  :: GHC.IO.Buffer.Buffer
                                                                                                       GHC.Word.Word8
                                                                                                     -> GHC.Prim.State#
                                                                                                          GHC.Prim.RealWorld
                                                                                                     -> (# GHC.Prim.State#
                                                                                                             GHC.Prim.RealWorld,
                                                                                                           [GHC.IO.Buffer.CharBufElem] #)
                                                                                                [LclId,
                                                                                                 Arity=2,
                                                                                                 Str=<L,U><S,U>,
                                                                                                 Unf=OtherCon []] =
                                                                                                    sat-only [decoder_s90qy
                                                                                                              ipv10_s90qT
                                                                                                              $wgo_s90qU] \r [w_s90qV
                                                                                                                              w1_s90qW]
                                                                                                        case
                                                                                                            decoder_s90qy
                                                                                                        of
                                                                                                        { GHC.IO.Encoding.Types.BufferCodec ds8_s90qY [Occ=Once!]
                                                                                                                                            ds9_s90qZ [Occ=Once!]
                                                                                                                                            _ [Occ=Dead]
                                                                                                                                            _ [Occ=Dead]
                                                                                                                                            _ [Occ=Dead] ->
                                                                                                              case
                                                                                                                  ds8_s90qY
                                                                                                                      w_s90qV
                                                                                                                      ipv10_s90qT
                                                                                                                      w1_s90qW
                                                                                                              of
                                                                                                              { (#,#) ipv11_s90r4 [Occ=Once*]
                                                                                                                      ipv12_s90r5 [Occ=Once!] ->
                                                                                                                    case
                                                                                                                        ipv12_s90r5
                                                                                                                    of
                                                                                                                    { (,,) why_s90r7 [Occ=Once!]
                                                                                                                           from'_s90r8 [Occ=Once!]
                                                                                                                           to'_s90r9 [Occ=Once*] ->
                                                                                                                          case
                                                                                                                              from'_s90r8
                                                                                                                          of
                                                                                                                          wild6_s90ra
                                                                                                                          { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                                                                                 _ [Occ=Dead]
                                                                                                                                                 _ [Occ=Dead]
                                                                                                                                                 _ [Occ=Dead]
                                                                                                                                                 dt3_s90rf [Occ=Once]
                                                                                                                                                 dt4_s90rg [Occ=Once] ->
                                                                                                                                case
                                                                                                                                    ==# [dt3_s90rf
                                                                                                                                         dt4_s90rg]
                                                                                                                                of
                                                                                                                                { __DEFAULT ->
                                                                                                                                      let-no-escape {
                                                                                                                                        $w$j1_s90ri [InlPrag=NOUSERINLINE[0],
                                                                                                                                                     Occ=Once*!T[6],
                                                                                                                                                     Dmd=<L,1*C1(C1(C1(C1(C1(C1(U(U,U)))))))>]
                                                                                                                                          :: GHC.Prim.State#
                                                                                                                                               GHC.Prim.RealWorld
                                                                                                                                             -> GHC.IO.Buffer.Buffer
                                                                                                                                                  GHC.Word.Word8
                                                                                                                                             -> GHC.Prim.Addr#
                                                                                                                                             -> GHC.ForeignPtr.ForeignPtrContents
                                                                                                                                             -> GHC.Prim.Int#
                                                                                                                                             -> GHC.Prim.Int#
                                                                                                                                             -> (# GHC.Prim.State#
                                                                                                                                                     GHC.Prim.RealWorld,
                                                                                                                                                   [GHC.IO.Buffer.CharBufElem] #)
                                                                                                                                        [LclId[JoinId(6)],
                                                                                                                                         Arity=6,
                                                                                                                                         Str=<S,U><L,U><L,U><L,U><S,U><S,U>,
                                                                                                                                         Unf=OtherCon []] =
                                                                                                                                            sat-only [$wgo_s90qU] \r [w2_s90rj
                                                                                                                                                                      ww_s90rk
                                                                                                                                                                      ww1_s90rl
                                                                                                                                                                      ww2_s90rm
                                                                                                                                                                      ww3_s90rn
                                                                                                                                                                      ww4_s90ro]
                                                                                                                                                case
                                                                                                                                                    -# [ww4_s90ro
                                                                                                                                                        ww3_s90rn]
                                                                                                                                                of
                                                                                                                                                ww5_s90rp [Dmd=<S,U>]
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      case
                                                                                                                                                          <=# [ww5_s90rp
                                                                                                                                                               0#]
                                                                                                                                                      of
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            case
                                                                                                                                                                -# [ww5_s90rp
                                                                                                                                                                    1#]
                                                                                                                                                            of
                                                                                                                                                            sat_s90rP
                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                  let-no-escape {
                                                                                                                                                                    exit_s90rr [Occ=OnceL!T[2],
                                                                                                                                                                                Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                                                                                                                                                      :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                         -> GHC.Prim.State#
                                                                                                                                                                              GHC.Prim.RealWorld
                                                                                                                                                                         -> (# GHC.Prim.State#
                                                                                                                                                                                 GHC.Prim.RealWorld,
                                                                                                                                                                               [GHC.IO.Buffer.CharBufElem] #)
                                                                                                                                                                    [LclId[JoinId(2)],
                                                                                                                                                                     Arity=2,
                                                                                                                                                                     Str=<L,U><S,U>,
                                                                                                                                                                     Unf=OtherCon []] =
                                                                                                                                                                        sat-only [$wgo_s90qU
                                                                                                                                                                                  ww_s90rk
                                                                                                                                                                                  ww1_s90rl
                                                                                                                                                                                  ww2_s90rm] \r [w3_s90rs
                                                                                                                                                                                                 w4_s90rt]
                                                                                                                                                                            case
                                                                                                                                                                                readWideCharOffAddr# [ww1_s90rl
                                                                                                                                                                                                      0#
                                                                                                                                                                                                      w4_s90rt]
                                                                                                                                                                            of
                                                                                                                                                                            { (#,#) ipv13_s90rv [Occ=Once]
                                                                                                                                                                                    ipv14_s90rw [Occ=Once] ->
                                                                                                                                                                                  case
                                                                                                                                                                                      touch# [ww2_s90rm
                                                                                                                                                                                              ipv13_s90rv]
                                                                                                                                                                                  of
                                                                                                                                                                                  s'_s90rx
                                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                                        case
                                                                                                                                                                                            $wgo_s90qU
                                                                                                                                                                                                ww_s90rk
                                                                                                                                                                                                s'_s90rx
                                                                                                                                                                                        of
                                                                                                                                                                                        { (#,#) ipv15_s90rz [Occ=Once]
                                                                                                                                                                                                ipv16_s90rA [Occ=Once] ->
                                                                                                                                                                                              let {
                                                                                                                                                                                                sat_s90rD [Occ=Once]
                                                                                                                                                                                                  :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                                                [LclId] =
                                                                                                                                                                                                    [w3_s90rs
                                                                                                                                                                                                     ipv14_s90rw
                                                                                                                                                                                                     ipv16_s90rA] \u []
                                                                                                                                                                                                        let {
                                                                                                                                                                                                          sat_s90rB [Occ=Once]
                                                                                                                                                                                                            :: GHC.IO.Buffer.CharBufElem
                                                                                                                                                                                                          [LclId] =
                                                                                                                                                                                                              CCCS GHC.Types.C#! [ipv14_s90rw]; } in
                                                                                                                                                                                                        let {
                                                                                                                                                                                                          sat_s90rC [Occ=Once]
                                                                                                                                                                                                            :: [GHC.Types.Char]
                                                                                                                                                                                                          [LclId] =
                                                                                                                                                                                                              CCCS :! [sat_s90rB
                                                                                                                                                                                                                       w3_s90rs];
                                                                                                                                                                                                        } in 
                                                                                                                                                                                                          GHC.Base.++
                                                                                                                                                                                                              sat_s90rC
                                                                                                                                                                                                              ipv16_s90rA;
                                                                                                                                                                                              } in 
                                                                                                                                                                                                (#,#) [ipv15_s90rz
                                                                                                                                                                                                       sat_s90rD];
                                                                                                                                                                                        };
                                                                                                                                                                                  };
                                                                                                                                                                            };
                                                                                                                                                                  } in 
                                                                                                                                                                    let-no-escape {
                                                                                                                                                                      $wf_s90rE [InlPrag=NOUSERINLINE[0],
                                                                                                                                                                                 Occ=LoopBreakerT[3]]
                                                                                                                                                                        :: GHC.Prim.Int#
                                                                                                                                                                           -> [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                           -> GHC.Prim.State#
                                                                                                                                                                                GHC.Prim.RealWorld
                                                                                                                                                                           -> (# GHC.Prim.State#
                                                                                                                                                                                   GHC.Prim.RealWorld,
                                                                                                                                                                                 [GHC.IO.Buffer.CharBufElem] #)
                                                                                                                                                                      [LclId[JoinId(3)],
                                                                                                                                                                       Arity=3,
                                                                                                                                                                       Str=<S,1*U><L,U><S,U>,
                                                                                                                                                                       Unf=OtherCon []] =
                                                                                                                                                                          sat-only [ww1_s90rl
                                                                                                                                                                                    exit_s90rr
                                                                                                                                                                                    $wf_s90rE] \r [ww6_s90rF
                                                                                                                                                                                                   w3_s90rG
                                                                                                                                                                                                   w4_s90rH]
                                                                                                                                                                              case
                                                                                                                                                                                  ww6_s90rF
                                                                                                                                                                              of
                                                                                                                                                                              ds_s90rI
                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                    case
                                                                                                                                                                                        readWideCharOffAddr# [ww1_s90rl
                                                                                                                                                                                                              ds_s90rI
                                                                                                                                                                                                              w4_s90rH]
                                                                                                                                                                                    of
                                                                                                                                                                                    { (#,#) ipv13_s90rK [Occ=Once]
                                                                                                                                                                                            ipv14_s90rL [Occ=Once] ->
                                                                                                                                                                                          let {
                                                                                                                                                                                            sat_s90rN [Occ=Once]
                                                                                                                                                                                              :: GHC.IO.Buffer.CharBufElem
                                                                                                                                                                                            [LclId] =
                                                                                                                                                                                                CCCS GHC.Types.C#! [ipv14_s90rL]; } in
                                                                                                                                                                                          let {
                                                                                                                                                                                            sat_s90rO [Occ=Once]
                                                                                                                                                                                              :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                                            [LclId] =
                                                                                                                                                                                                CCCS :! [sat_s90rN
                                                                                                                                                                                                         w3_s90rG];
                                                                                                                                                                                          } in 
                                                                                                                                                                                            case
                                                                                                                                                                                                -# [ds_s90rI
                                                                                                                                                                                                    1#]
                                                                                                                                                                                            of
                                                                                                                                                                                            sat_s90rM
                                                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                                                  $wf_s90rE
                                                                                                                                                                                                      sat_s90rM
                                                                                                                                                                                                      sat_s90rO
                                                                                                                                                                                                      ipv13_s90rK;
                                                                                                                                                                                            };
                                                                                                                                                                                    };
                                                                                                                                                                                0# ->
                                                                                                                                                                                    exit_s90rr
                                                                                                                                                                                        w3_s90rG
                                                                                                                                                                                        w4_s90rH;
                                                                                                                                                                              };
                                                                                                                                                                    } in 
                                                                                                                                                                      $wf_s90rE
                                                                                                                                                                          sat_s90rP
                                                                                                                                                                          GHC.Types.[]
                                                                                                                                                                          w2_s90rj;
                                                                                                                                                            };
                                                                                                                                                        1# ->
                                                                                                                                                            case
                                                                                                                                                                touch# [ww2_s90rm
                                                                                                                                                                        w2_s90rj]
                                                                                                                                                            of
                                                                                                                                                            s'_s90rQ
                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                  case
                                                                                                                                                                      $wgo_s90qU
                                                                                                                                                                          ww_s90rk
                                                                                                                                                                          s'_s90rQ
                                                                                                                                                                  of
                                                                                                                                                                  { (#,#) ipv15_s90rS [Occ=Once]
                                                                                                                                                                          ipv16_s90rT [Occ=Once] ->
                                                                                                                                                                        let {
                                                                                                                                                                          sat_s90rU [Occ=Once]
                                                                                                                                                                            :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                          [LclId] =
                                                                                                                                                                              [ipv16_s90rT] \u []
                                                                                                                                                                                  GHC.Base.++
                                                                                                                                                                                      GHC.Types.[]
                                                                                                                                                                                      ipv16_s90rT;
                                                                                                                                                                        } in 
                                                                                                                                                                          (#,#) [ipv15_s90rS
                                                                                                                                                                                 sat_s90rU];
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                      } in 
                                                                                                                                        case
                                                                                                                                            why_s90r7
                                                                                                                                        of
                                                                                                                                        { __DEFAULT ->
                                                                                                                                              case
                                                                                                                                                  ds9_s90qZ
                                                                                                                                                      wild6_s90ra
                                                                                                                                                      to'_s90r9
                                                                                                                                                      ipv11_s90r4
                                                                                                                                              of
                                                                                                                                              { (#,#) ipv13_s90rX [Occ=Once]
                                                                                                                                                      ipv14_s90rY [Occ=Once!] ->
                                                                                                                                                    case
                                                                                                                                                        ipv14_s90rY
                                                                                                                                                    of
                                                                                                                                                    { (,) ww1_s90s0 [Occ=Once]
                                                                                                                                                          ww2_s90s1 [Occ=Once!] ->
                                                                                                                                                          case
                                                                                                                                                              ww2_s90s1
                                                                                                                                                          of
                                                                                                                                                          { GHC.IO.Buffer.Buffer ww4_s90s3 [Occ=Once]
                                                                                                                                                                                 ww5_s90s4 [Occ=Once]
                                                                                                                                                                                 _ [Occ=Dead]
                                                                                                                                                                                 _ [Occ=Dead]
                                                                                                                                                                                 ww8_s90s7 [Occ=Once]
                                                                                                                                                                                 ww9_s90s8 [Occ=Once] ->
                                                                                                                                                                $w$j1_s90ri
                                                                                                                                                                    ipv13_s90rX
                                                                                                                                                                    ww1_s90s0
                                                                                                                                                                    ww4_s90s3
                                                                                                                                                                    ww5_s90s4
                                                                                                                                                                    ww8_s90s7
                                                                                                                                                                    ww9_s90s8;
                                                                                                                                                          };
                                                                                                                                                    };
                                                                                                                                              };
                                                                                                                                          GHC.IO.Encoding.Types.OutputUnderflow ->
                                                                                                                                              case
                                                                                                                                                  to'_s90r9
                                                                                                                                              of
                                                                                                                                              { GHC.IO.Buffer.Buffer ww1_s90sa [Occ=Once]
                                                                                                                                                                     ww2_s90sb [Occ=Once]
                                                                                                                                                                     _ [Occ=Dead]
                                                                                                                                                                     _ [Occ=Dead]
                                                                                                                                                                     ww5_s90se [Occ=Once]
                                                                                                                                                                     ww6_s90sf [Occ=Once] ->
                                                                                                                                                    $w$j1_s90ri
                                                                                                                                                        ipv11_s90r4
                                                                                                                                                        wild6_s90ra
                                                                                                                                                        ww1_s90sa
                                                                                                                                                        ww2_s90sb
                                                                                                                                                        ww5_s90se
                                                                                                                                                        ww6_s90sf;
                                                                                                                                              };
                                                                                                                                        };
                                                                                                                                  1# ->
                                                                                                                                      case
                                                                                                                                          to'_s90r9
                                                                                                                                      of
                                                                                                                                      { GHC.IO.Buffer.Buffer dt7_s90sh
                                                                                                                                                             dt8_s90si [Occ=Once*]
                                                                                                                                                             _ [Occ=Dead]
                                                                                                                                                             _ [Occ=Dead]
                                                                                                                                                             dt10_s90sl [Occ=Once]
                                                                                                                                                             dt11_s90sm [Occ=Once] ->
                                                                                                                                            case
                                                                                                                                                -# [dt11_s90sm
                                                                                                                                                    dt10_s90sl]
                                                                                                                                            of
                                                                                                                                            ww_s90sn [Dmd=<S,U>]
                                                                                                                                            { __DEFAULT ->
                                                                                                                                                  case
                                                                                                                                                      <=# [ww_s90sn
                                                                                                                                                           0#]
                                                                                                                                                  of
                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                        case
                                                                                                                                                            -# [ww_s90sn
                                                                                                                                                                1#]
                                                                                                                                                        of
                                                                                                                                                        sat_s90sJ
                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                              let-no-escape {
                                                                                                                                                                exit_s90sp [Occ=OnceL!T[2],
                                                                                                                                                                            Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                                                                                                                                                  :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                     -> GHC.Prim.State#
                                                                                                                                                                          GHC.Prim.RealWorld
                                                                                                                                                                     -> (# GHC.Prim.State#
                                                                                                                                                                             GHC.Prim.RealWorld,
                                                                                                                                                                           [GHC.IO.Buffer.CharBufElem] #)
                                                                                                                                                                [LclId[JoinId(2)],
                                                                                                                                                                 Arity=2,
                                                                                                                                                                 Str=<L,U><S,U>,
                                                                                                                                                                 Unf=OtherCon []] =
                                                                                                                                                                    sat-only [dt7_s90sh
                                                                                                                                                                              dt8_s90si] \r [w3_s90sq
                                                                                                                                                                                             w4_s90sr]
                                                                                                                                                                        case
                                                                                                                                                                            readWideCharOffAddr# [dt7_s90sh
                                                                                                                                                                                                  0#
                                                                                                                                                                                                  w4_s90sr]
                                                                                                                                                                        of
                                                                                                                                                                        { (#,#) ipv13_s90st [Occ=Once]
                                                                                                                                                                                ipv14_s90su [Occ=Once] ->
                                                                                                                                                                              case
                                                                                                                                                                                  touch# [dt8_s90si
                                                                                                                                                                                          ipv13_s90st]
                                                                                                                                                                              of
                                                                                                                                                                              s'_s90sv
                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                    let {
                                                                                                                                                                                      sat_s90sw [Occ=Once]
                                                                                                                                                                                        :: GHC.IO.Buffer.CharBufElem
                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                          CCCS GHC.Types.C#! [ipv14_s90su]; } in
                                                                                                                                                                                    let {
                                                                                                                                                                                      sat_s90sx [Occ=Once]
                                                                                                                                                                                        :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                          CCCS :! [sat_s90sw
                                                                                                                                                                                                   w3_s90sq];
                                                                                                                                                                                    } in 
                                                                                                                                                                                      (#,#) [s'_s90sv
                                                                                                                                                                                             sat_s90sx];
                                                                                                                                                                              };
                                                                                                                                                                        };
                                                                                                                                                              } in 
                                                                                                                                                                let-no-escape {
                                                                                                                                                                  $wf_s90sy [InlPrag=NOUSERINLINE[0],
                                                                                                                                                                             Occ=LoopBreakerT[3]]
                                                                                                                                                                    :: GHC.Prim.Int#
                                                                                                                                                                       -> [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                       -> GHC.Prim.State#
                                                                                                                                                                            GHC.Prim.RealWorld
                                                                                                                                                                       -> (# GHC.Prim.State#
                                                                                                                                                                               GHC.Prim.RealWorld,
                                                                                                                                                                             [GHC.IO.Buffer.CharBufElem] #)
                                                                                                                                                                  [LclId[JoinId(3)],
                                                                                                                                                                   Arity=3,
                                                                                                                                                                   Str=<S,1*U><L,U><S,U>,
                                                                                                                                                                   Unf=OtherCon []] =
                                                                                                                                                                      sat-only [dt7_s90sh
                                                                                                                                                                                exit_s90sp
                                                                                                                                                                                $wf_s90sy] \r [ww1_s90sz
                                                                                                                                                                                               w3_s90sA
                                                                                                                                                                                               w4_s90sB]
                                                                                                                                                                          case
                                                                                                                                                                              ww1_s90sz
                                                                                                                                                                          of
                                                                                                                                                                          ds_s90sC
                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                case
                                                                                                                                                                                    readWideCharOffAddr# [dt7_s90sh
                                                                                                                                                                                                          ds_s90sC
                                                                                                                                                                                                          w4_s90sB]
                                                                                                                                                                                of
                                                                                                                                                                                { (#,#) ipv13_s90sE [Occ=Once]
                                                                                                                                                                                        ipv14_s90sF [Occ=Once] ->
                                                                                                                                                                                      let {
                                                                                                                                                                                        sat_s90sH [Occ=Once]
                                                                                                                                                                                          :: GHC.IO.Buffer.CharBufElem
                                                                                                                                                                                        [LclId] =
                                                                                                                                                                                            CCCS GHC.Types.C#! [ipv14_s90sF]; } in
                                                                                                                                                                                      let {
                                                                                                                                                                                        sat_s90sI [Occ=Once]
                                                                                                                                                                                          :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                                        [LclId] =
                                                                                                                                                                                            CCCS :! [sat_s90sH
                                                                                                                                                                                                     w3_s90sA];
                                                                                                                                                                                      } in 
                                                                                                                                                                                        case
                                                                                                                                                                                            -# [ds_s90sC
                                                                                                                                                                                                1#]
                                                                                                                                                                                        of
                                                                                                                                                                                        sat_s90sG
                                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                                              $wf_s90sy
                                                                                                                                                                                                  sat_s90sG
                                                                                                                                                                                                  sat_s90sI
                                                                                                                                                                                                  ipv13_s90sE;
                                                                                                                                                                                        };
                                                                                                                                                                                };
                                                                                                                                                                            0# ->
                                                                                                                                                                                exit_s90sp
                                                                                                                                                                                    w3_s90sA
                                                                                                                                                                                    w4_s90sB;
                                                                                                                                                                          };
                                                                                                                                                                } in 
                                                                                                                                                                  $wf_s90sy
                                                                                                                                                                      sat_s90sJ
                                                                                                                                                                      GHC.Types.[]
                                                                                                                                                                      ipv11_s90r4;
                                                                                                                                                        };
                                                                                                                                                    1# ->
                                                                                                                                                        case
                                                                                                                                                            touch# [dt8_s90si
                                                                                                                                                                    ipv11_s90r4]
                                                                                                                                                        of
                                                                                                                                                        s'_s90sK
                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                              (#,#) [s'_s90sK
                                                                                                                                                                     GHC.Types.[]];
                                                                                                                                                        };
                                                                                                                                                  };
                                                                                                                                            };
                                                                                                                                      };
                                                                                                                                };
                                                                                                                          };
                                                                                                                    };
                                                                                                              };
                                                                                                        }; } in
                                                                                              let {
                                                                                                sat_s90sL [Occ=Once]
                                                                                                  :: GHC.ForeignPtr.ForeignPtrContents
                                                                                                [LclId] =
                                                                                                    CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv3_s90qE]; } in
                                                                                              let {
                                                                                                sat_s90sM [Occ=Once]
                                                                                                  :: GHC.IO.Buffer.Buffer
                                                                                                       GHC.Word.Word8
                                                                                                [LclId] =
                                                                                                    CCCS GHC.IO.Buffer.Buffer! [obj_s90qB
                                                                                                                                sat_s90sL
                                                                                                                                GHC.IO.Buffer.ReadBuffer
                                                                                                                                x1_s90qG
                                                                                                                                0#
                                                                                                                                x1_s90qG];
                                                                                              } in 
                                                                                                $wgo_s90qU
                                                                                                    sat_s90sM
                                                                                                    ipv6_s90qP;
                                                                                        };
                                                                                  };
                                                                            };
                                                                        1# ->
                                                                            GHC.ForeignPtr.mallocForeignPtrBytes2;
                                                                      };
                                                                };
                                                      } in 
                                                        case <=# [x1_s90qG 1#] of {
                                                          __DEFAULT -> $j_s90qH x1_s90qG;
                                                          1# -> $j_s90qH 1#;
                                                        };
                                                };
                                          };
                                    };
                          } in 
                            GHC.IO.bracket1
                                ds3_s90qt GHC.IO.Encoding.Types.close sat_s90sP ipv_s90qp;
                    };
              };
        };

Foreign.C.String.peekCStringLen
  :: Foreign.C.String.CStringLen -> GHC.Types.IO GHC.Base.String
[GblId,
 Arity=2,
 Str=<L,1*U(1*U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.String.peekCStringLen1 eta_B2 eta_B1;

Foreign.C.String.peekCString1
  :: Foreign.C.String.CString
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<L,1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [s_s90sQ s1_s90sR]
        case GHC.IO.Encoding.getForeignEncoding s1_s90sR of {
          (#,#) ipv_s90sT [Occ=Once] ipv1_s90sU [Occ=Once] ->
              GHC.Foreign.peekCString1 ipv1_s90sU s_s90sQ ipv_s90sT;
        };

Foreign.C.String.peekCString
  :: Foreign.C.String.CString -> GHC.Types.IO GHC.Base.String
[GblId, Arity=2, Str=<L,1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] Foreign.C.String.peekCString1 eta_B2 eta_B1;

Foreign.C.String.castCSCharToChar
  :: Foreign.C.Types.CSChar -> GHC.Types.Char
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s90sV]
        case ch_s90sV of {
          GHC.Int.I8# x#_s90sX [Occ=Once] ->
              case int2Word# [x#_s90sX] of sat_s90sY {
                __DEFAULT ->
                    case narrow8Word# [sat_s90sY] of sat_s90sZ {
                      __DEFAULT ->
                          case word2Int# [sat_s90sZ] of sat_s90t0 {
                            __DEFAULT ->
                                case chr# [sat_s90t0] of sat_s90t1 {
                                  __DEFAULT -> GHC.Types.C# [sat_s90t1];
                                };
                          };
                    };
              };
        };

Foreign.C.String.castCUCharToChar
  :: Foreign.C.Types.CUChar -> GHC.Types.Char
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s90t2]
        case ch_s90t2 of {
          GHC.Word.W8# x#_s90t4 [Occ=Once] ->
              case word2Int# [x#_s90t4] of sat_s90t5 {
                __DEFAULT ->
                    case chr# [sat_s90t5] of sat_s90t6 {
                      __DEFAULT -> GHC.Types.C# [sat_s90t6];
                    };
              };
        };

Foreign.C.String.castCCharToChar
  :: Foreign.C.Types.CChar -> GHC.Types.Char
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s90t7]
        case ch_s90t7 of {
          GHC.Int.I8# x#_s90t9 [Occ=Once] ->
              case int2Word# [x#_s90t9] of sat_s90ta {
                __DEFAULT ->
                    case narrow8Word# [sat_s90ta] of sat_s90tb {
                      __DEFAULT ->
                          case word2Int# [sat_s90tb] of sat_s90tc {
                            __DEFAULT ->
                                case chr# [sat_s90tc] of sat_s90td {
                                  __DEFAULT -> GHC.Types.C# [sat_s90td];
                                };
                          };
                    };
              };
        };

Foreign.C.String.$wpeekCAString [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Addr#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_s90te w_s90tf]
        let-no-escape {
          $w$j_s90tg [InlPrag=NOUSERINLINE[0],
                      Occ=OnceL!T[2],
                      Dmd=<C(C(S)),C(C1(U(U,U)))>]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> GHC.Prim.Int#
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
          [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
              sat-only [ww_s90te] \r [w1_s90th ww1_s90ti]
                  case <=# [ww1_s90ti 0#] of {
                    __DEFAULT ->
                        case -# [ww1_s90ti 1#] of sat_s90tF {
                          __DEFAULT ->
                              let-no-escape {
                                $wloop_s90tk [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                  :: [GHC.Types.Char]
                                     -> GHC.Prim.Int#
                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                                [LclId[JoinId(3)], Arity=3, Str=<L,U><S,U><S,U>, Unf=OtherCon []] =
                                    sat-only [ww_s90te $wloop_s90tk] \r [w2_s90tl
                                                                         ww2_s90tm
                                                                         w3_s90tn]
                                        case readInt8OffAddr# [ww_s90te ww2_s90tm w3_s90tn] of {
                                          (#,#) ipv_s90tp [Occ=Once*] ipv1_s90tq [Occ=Once*] ->
                                              case <=# [ww2_s90tm 0#] of {
                                                __DEFAULT ->
                                                    case -# [ww2_s90tm 1#] of sat_s90ty {
                                                      __DEFAULT ->
                                                          case int2Word# [ipv1_s90tq] of sat_s90ts {
                                                            __DEFAULT ->
                                                                case
                                                                    narrow8Word# [sat_s90ts]
                                                                of
                                                                sat_s90tt
                                                                { __DEFAULT ->
                                                                      case
                                                                          word2Int# [sat_s90tt]
                                                                      of
                                                                      sat_s90tu
                                                                      { __DEFAULT ->
                                                                            case
                                                                                chr# [sat_s90tu]
                                                                            of
                                                                            sat_s90tv
                                                                            { __DEFAULT ->
                                                                                  let {
                                                                                    sat_s90tw [Occ=Once]
                                                                                      :: GHC.Types.Char
                                                                                    [LclId] =
                                                                                        CCCS GHC.Types.C#! [sat_s90tv]; } in
                                                                                  let {
                                                                                    sat_s90tx [Occ=Once]
                                                                                      :: [GHC.Types.Char]
                                                                                    [LclId] =
                                                                                        CCCS :! [sat_s90tw
                                                                                                 w2_s90tl];
                                                                                  } in 
                                                                                    $wloop_s90tk
                                                                                        sat_s90tx
                                                                                        sat_s90ty
                                                                                        ipv_s90tp;
                                                                            };
                                                                      };
                                                                };
                                                          };
                                                    };
                                                1# ->
                                                    case int2Word# [ipv1_s90tq] of sat_s90tz {
                                                      __DEFAULT ->
                                                          case
                                                              narrow8Word# [sat_s90tz]
                                                          of
                                                          sat_s90tA
                                                          { __DEFAULT ->
                                                                case
                                                                    word2Int# [sat_s90tA]
                                                                of
                                                                sat_s90tB
                                                                { __DEFAULT ->
                                                                      case
                                                                          chr# [sat_s90tB]
                                                                      of
                                                                      sat_s90tC
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s90tD [Occ=Once]
                                                                                :: GHC.Types.Char
                                                                              [LclId] =
                                                                                  CCCS GHC.Types.C#! [sat_s90tC]; } in
                                                                            let {
                                                                              sat_s90tE [Occ=Once]
                                                                                :: [GHC.Types.Char]
                                                                              [LclId] =
                                                                                  CCCS :! [sat_s90tD
                                                                                           w2_s90tl];
                                                                            } in 
                                                                              (#,#) [ipv_s90tp
                                                                                     sat_s90tE];
                                                                      };
                                                                };
                                                          };
                                                    };
                                              };
                                        };
                              } in  $wloop_s90tk GHC.Types.[] sat_s90tF w1_s90th;
                        };
                    1# -> (#,#) [w1_s90th GHC.Types.[]];
                  };
        } in 
          let-no-escape {
            $wloop_s90tG [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[2]]
              :: GHC.Prim.Int#
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
            [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
                sat-only [ww_s90te $w$j_s90tg $wloop_s90tG] \r [ww1_s90tH w1_s90tI]
                    case readInt8OffAddr# [ww_s90te ww1_s90tH w1_s90tI] of {
                      (#,#) ipv_s90tK [Occ=Once*] ipv1_s90tL [Occ=Once!] ->
                          case ipv1_s90tL of {
                            __DEFAULT ->
                                case +# [ww1_s90tH 1#] of sat_s90tN {
                                  __DEFAULT -> $wloop_s90tG sat_s90tN ipv_s90tK;
                                };
                            0# -> $w$j_s90tg ipv_s90tK ww1_s90tH;
                          };
                    };
          } in  $wloop_s90tG 0# w_s90tf;

Foreign.C.String.peekCAString1 [InlPrag=NOUSERINLINE[0]]
  :: Foreign.C.String.CString
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s90tO w1_s90tP]
        case w_s90tO of {
          GHC.Ptr.Ptr ww1_s90tR [Occ=Once] ->
              Foreign.C.String.$wpeekCAString ww1_s90tR w1_s90tP;
        };

Foreign.C.String.peekCAString
  :: Foreign.C.String.CString -> GHC.Types.IO GHC.Base.String
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] Foreign.C.String.peekCAString1 eta_B2 eta_B1;

Foreign.C.String.$wpeekCAStringLen [InlPrag=NOUSERINLINE[0]]
  :: GHC.Ptr.Ptr Foreign.C.Types.CChar
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_s90tS ww1_s90tT w_s90tU]
        case <=# [ww1_s90tT 0#] of {
          __DEFAULT ->
              case -# [ww1_s90tT 1#] of sat_s90uj {
                __DEFAULT ->
                    let-no-escape {
                      $wloop_s90tW [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                        :: [GHC.Types.Char]
                           -> GHC.Prim.Int#
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                      [LclId[JoinId(3)], Arity=3, Str=<L,U><S,U><S,U>, Unf=OtherCon []] =
                          sat-only [ww_s90tS $wloop_s90tW] \r [w1_s90tX ww2_s90tY w2_s90tZ]
                              case ww_s90tS of {
                                GHC.Ptr.Ptr a_s90u1 [Occ=Once] ->
                                    case readInt8OffAddr# [a_s90u1 ww2_s90tY w2_s90tZ] of {
                                      (#,#) ipv_s90u3 [Occ=Once*] ipv1_s90u4 [Occ=Once*] ->
                                          case ww2_s90tY of wild1_s90u5 {
                                            __DEFAULT ->
                                                case -# [wild1_s90u5 1#] of sat_s90uc {
                                                  __DEFAULT ->
                                                      case int2Word# [ipv1_s90u4] of sat_s90u6 {
                                                        __DEFAULT ->
                                                            case
                                                                narrow8Word# [sat_s90u6]
                                                            of
                                                            sat_s90u7
                                                            { __DEFAULT ->
                                                                  case
                                                                      word2Int# [sat_s90u7]
                                                                  of
                                                                  sat_s90u8
                                                                  { __DEFAULT ->
                                                                        case
                                                                            chr# [sat_s90u8]
                                                                        of
                                                                        sat_s90u9
                                                                        { __DEFAULT ->
                                                                              let {
                                                                                sat_s90ua [Occ=Once]
                                                                                  :: GHC.Types.Char
                                                                                [LclId] =
                                                                                    CCCS GHC.Types.C#! [sat_s90u9]; } in
                                                                              let {
                                                                                sat_s90ub [Occ=Once]
                                                                                  :: [GHC.Types.Char]
                                                                                [LclId] =
                                                                                    CCCS :! [sat_s90ua
                                                                                             w1_s90tX];
                                                                              } in 
                                                                                $wloop_s90tW
                                                                                    sat_s90ub
                                                                                    sat_s90uc
                                                                                    ipv_s90u3;
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                            0# ->
                                                case int2Word# [ipv1_s90u4] of sat_s90ud {
                                                  __DEFAULT ->
                                                      case narrow8Word# [sat_s90ud] of sat_s90ue {
                                                        __DEFAULT ->
                                                            case
                                                                word2Int# [sat_s90ue]
                                                            of
                                                            sat_s90uf
                                                            { __DEFAULT ->
                                                                  case
                                                                      chr# [sat_s90uf]
                                                                  of
                                                                  sat_s90ug
                                                                  { __DEFAULT ->
                                                                        let {
                                                                          sat_s90uh [Occ=Once]
                                                                            :: GHC.Types.Char
                                                                          [LclId] =
                                                                              CCCS GHC.Types.C#! [sat_s90ug]; } in
                                                                        let {
                                                                          sat_s90ui [Occ=Once]
                                                                            :: [GHC.Types.Char]
                                                                          [LclId] =
                                                                              CCCS :! [sat_s90uh
                                                                                       w1_s90tX];
                                                                        } in 
                                                                          (#,#) [ipv_s90u3
                                                                                 sat_s90ui];
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in  $wloop_s90tW GHC.Types.[] sat_s90uj w_s90tU;
              };
          1# -> (#,#) [w_s90tU GHC.Types.[]];
        };

Foreign.C.String.peekCAStringLen1 [InlPrag=NOUSERINLINE[0]]
  :: (GHC.Ptr.Ptr Foreign.C.Types.CChar, GHC.Types.Int)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LS(S)),1*U(U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s90uk w1_s90ul]
        case w_s90uk of {
          (,) ww1_s90un [Occ=Once] ww2_s90uo [Occ=Once!] ->
              case ww2_s90uo of {
                GHC.Types.I# ww4_s90uq [Occ=Once] ->
                    Foreign.C.String.$wpeekCAStringLen ww1_s90un ww4_s90uq w1_s90ul;
              };
        };

Foreign.C.String.peekCAStringLen
  :: Foreign.C.String.CStringLen -> GHC.Types.IO GHC.Base.String
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LS(S)),1*U(U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.String.peekCAStringLen1 eta_B2 eta_B1;

Foreign.C.String.castCWcharToChar
  :: Foreign.C.Types.CWchar -> GHC.Types.Char
[GblId, Arity=1, Str=<S(S),1*U(U)>m, Unf=OtherCon []] =
    [] \r [ch_s90ur]
        case ch_s90ur of {
          GHC.Int.I32# x#_s90ut ->
              case int2Word# [x#_s90ut] of sat_s90uu {
                __DEFAULT ->
                    case leWord# [sat_s90uu 1114111##] of {
                      __DEFAULT -> GHC.Char.$wlvl x#_s90ut;
                      1# ->
                          case chr# [x#_s90ut] of sat_s90uw {
                            __DEFAULT -> GHC.Types.C# [sat_s90uw];
                          };
                    };
              };
        };

Foreign.C.String.peekCWString2 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.Base.map Foreign.C.String.castCWcharToChar GHC.Types.[];

Foreign.C.String.$wpeekCWStringLen [InlPrag=NOUSERINLINE[0]]
  :: GHC.Ptr.Ptr Foreign.C.Types.CWchar
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=3, Str=<L,U(U)><S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_s90ux ww1_s90uy w_s90uz]
        case <=# [ww1_s90uy 0#] of {
          __DEFAULT ->
              case -# [ww1_s90uy 1#] of sat_s90uZ {
                __DEFAULT ->
                    let-no-escape {
                      exit_s90uB [Occ=OnceL!T[2], Dmd=<C(C(S)),C(C1(U(U,U)))>]
                        :: [Foreign.C.Types.CWchar]
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                      [LclId[JoinId(2)], Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
                          sat-only [ww_s90ux] \r [w3_s90uC w4_s90uD]
                              case ww_s90ux of {
                                GHC.Ptr.Ptr a_s90uF [Occ=Once] ->
                                    case readInt32OffAddr# [a_s90uF 0# w4_s90uD] of {
                                      (#,#) ipv_s90uH [Occ=Once] ipv1_s90uI [Occ=Once] ->
                                          let {
                                            sat_s90uL [Occ=Once] :: [GHC.Types.Char]
                                            [LclId] =
                                                [w3_s90uC ipv1_s90uI] \u []
                                                    let {
                                                      sat_s90uJ [Occ=Once] :: Foreign.C.Types.CWchar
                                                      [LclId] =
                                                          CCCS GHC.Int.I32#! [ipv1_s90uI]; } in
                                                    let {
                                                      sat_s90uK [Occ=Once]
                                                        :: [Foreign.C.Types.CWchar]
                                                      [LclId] =
                                                          CCCS :! [sat_s90uJ w3_s90uC];
                                                    } in 
                                                      GHC.Base.map
                                                          Foreign.C.String.castCWcharToChar
                                                          sat_s90uK;
                                          } in  (#,#) [ipv_s90uH sat_s90uL];
                                    };
                              };
                    } in 
                      let-no-escape {
                        $wf_s90uM [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                          :: GHC.Prim.Int#
                             -> [Foreign.C.Types.CWchar]
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                        [LclId[JoinId(3)],
                         Arity=3,
                         Str=<S,1*U><L,U><S,U>,
                         Unf=OtherCon []] =
                            sat-only [ww_s90ux exit_s90uB $wf_s90uM] \r [ww2_s90uN
                                                                         w3_s90uO
                                                                         w4_s90uP]
                                case ww2_s90uN of ds_s90uQ {
                                  __DEFAULT ->
                                      case ww_s90ux of {
                                        GHC.Ptr.Ptr a_s90uS [Occ=Once] ->
                                            case readInt32OffAddr# [a_s90uS ds_s90uQ w4_s90uP] of {
                                              (#,#) ipv_s90uU [Occ=Once] ipv1_s90uV [Occ=Once] ->
                                                  let {
                                                    sat_s90uX [Occ=Once] :: Foreign.C.Types.CWchar
                                                    [LclId] =
                                                        CCCS GHC.Int.I32#! [ipv1_s90uV]; } in
                                                  let {
                                                    sat_s90uY [Occ=Once] :: [Foreign.C.Types.CWchar]
                                                    [LclId] =
                                                        CCCS :! [sat_s90uX w3_s90uO];
                                                  } in 
                                                    case -# [ds_s90uQ 1#] of sat_s90uW {
                                                      __DEFAULT ->
                                                          $wf_s90uM sat_s90uW sat_s90uY ipv_s90uU;
                                                    };
                                            };
                                      };
                                  0# -> exit_s90uB w3_s90uO w4_s90uP;
                                };
                      } in  $wf_s90uM sat_s90uZ GHC.Types.[] w_s90uz;
              };
          1# -> (#,#) [w_s90uz Foreign.C.String.peekCWString2];
        };

Foreign.C.String.peekCWStringLen1 [InlPrag=NOUSERINLINE[0]]
  :: (GHC.Ptr.Ptr Foreign.C.Types.CWchar, GHC.Types.Int)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=2,
 Str=<S(LS(S)),1*U(U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s90v0 w1_s90v1]
        case w_s90v0 of {
          (,) ww1_s90v3 [Occ=Once] ww2_s90v4 [Occ=Once!] ->
              case ww2_s90v4 of {
                GHC.Types.I# ww4_s90v6 [Occ=Once] ->
                    Foreign.C.String.$wpeekCWStringLen ww1_s90v3 ww4_s90v6 w1_s90v1;
              };
        };

Foreign.C.String.peekCWStringLen
  :: Foreign.C.String.CWStringLen -> GHC.Types.IO GHC.Base.String
[GblId,
 Arity=2,
 Str=<S(LS(S)),1*U(U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.String.peekCWStringLen1 eta_B2 eta_B1;

Foreign.C.String.newCWString3 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [0#];

Foreign.C.String.$wpeekCWString [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Addr#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_s90v7 w_s90v8]
        let-no-escape {
          $w$j_s90v9 [InlPrag=NOUSERINLINE[0],
                      Occ=OnceL!T[2],
                      Dmd=<C(C(S)),C(C1(U(U,U)))>]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> GHC.Prim.Int#
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
          [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
              sat-only [ww_s90v7] \r [w1_s90va ww1_s90vb]
                  case <=# [ww1_s90vb 0#] of {
                    __DEFAULT ->
                        case -# [ww1_s90vb 1#] of sat_s90vx {
                          __DEFAULT ->
                              let-no-escape {
                                exit_s90vd [Occ=OnceL!T[2], Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                  :: [Foreign.C.Types.CWchar]
                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                                [LclId[JoinId(2)], Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
                                    sat-only [ww_s90v7] \r [w3_s90ve w4_s90vf]
                                        case readInt32OffAddr# [ww_s90v7 0# w4_s90vf] of {
                                          (#,#) ipv_s90vh [Occ=Once] ipv1_s90vi [Occ=Once] ->
                                              let {
                                                sat_s90vl [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    [w3_s90ve ipv1_s90vi] \u []
                                                        let {
                                                          sat_s90vj [Occ=Once]
                                                            :: Foreign.C.Types.CWchar
                                                          [LclId] =
                                                              CCCS GHC.Int.I32#! [ipv1_s90vi]; } in
                                                        let {
                                                          sat_s90vk [Occ=Once]
                                                            :: [Foreign.C.Types.CWchar]
                                                          [LclId] =
                                                              CCCS :! [sat_s90vj w3_s90ve];
                                                        } in 
                                                          GHC.Base.map
                                                              Foreign.C.String.castCWcharToChar
                                                              sat_s90vk;
                                              } in  (#,#) [ipv_s90vh sat_s90vl];
                                        };
                              } in 
                                let-no-escape {
                                  $wf_s90vm [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                    :: GHC.Prim.Int#
                                       -> [Foreign.C.Types.CWchar]
                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                                  [LclId[JoinId(3)],
                                   Arity=3,
                                   Str=<S,1*U><L,U><S,U>,
                                   Unf=OtherCon []] =
                                      sat-only [ww_s90v7 exit_s90vd $wf_s90vm] \r [ww2_s90vn
                                                                                   w3_s90vo
                                                                                   w4_s90vp]
                                          case ww2_s90vn of ds_s90vq {
                                            __DEFAULT ->
                                                case
                                                    readInt32OffAddr# [ww_s90v7 ds_s90vq w4_s90vp]
                                                of
                                                { (#,#) ipv_s90vs [Occ=Once]
                                                        ipv1_s90vt [Occ=Once] ->
                                                      let {
                                                        sat_s90vv [Occ=Once]
                                                          :: Foreign.C.Types.CWchar
                                                        [LclId] =
                                                            CCCS GHC.Int.I32#! [ipv1_s90vt]; } in
                                                      let {
                                                        sat_s90vw [Occ=Once]
                                                          :: [Foreign.C.Types.CWchar]
                                                        [LclId] =
                                                            CCCS :! [sat_s90vv w3_s90vo];
                                                      } in 
                                                        case -# [ds_s90vq 1#] of sat_s90vu {
                                                          __DEFAULT ->
                                                              $wf_s90vm
                                                                  sat_s90vu sat_s90vw ipv_s90vs;
                                                        };
                                                };
                                            0# -> exit_s90vd w3_s90vo w4_s90vp;
                                          };
                                } in  $wf_s90vm sat_s90vx GHC.Types.[] w1_s90va;
                        };
                    1# -> (#,#) [w1_s90va Foreign.C.String.peekCWString2];
                  };
        } in 
          let-no-escape {
            $wloop_s90vy [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[2]]
              :: GHC.Prim.Int#
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
            [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
                sat-only [ww_s90v7 $w$j_s90v9 $wloop_s90vy] \r [ww1_s90vz w1_s90vA]
                    case readInt32OffAddr# [ww_s90v7 ww1_s90vz w1_s90vA] of {
                      (#,#) ipv_s90vC [Occ=Once*] ipv1_s90vD [Occ=Once!] ->
                          case ipv1_s90vD of {
                            __DEFAULT ->
                                case +# [ww1_s90vz 1#] of sat_s90vF {
                                  __DEFAULT -> $wloop_s90vy sat_s90vF ipv_s90vC;
                                };
                            0# -> $w$j_s90v9 ipv_s90vC ww1_s90vz;
                          };
                    };
          } in  $wloop_s90vy 0# w_s90v8;

Foreign.C.String.peekCWString1 [InlPrag=NOUSERINLINE[0]]
  :: Foreign.C.String.CWString
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [w_s90vG w1_s90vH]
        case w_s90vG of {
          GHC.Ptr.Ptr ww1_s90vJ [Occ=Once] ->
              Foreign.C.String.$wpeekCWString ww1_s90vJ w1_s90vH;
        };

Foreign.C.String.peekCWString
  :: Foreign.C.String.CWString -> GHC.Types.IO GHC.Base.String
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] Foreign.C.String.peekCWString1 eta_B2 eta_B1;

Foreign.C.String.newCWString2 :: GHC.Types.Char -> GHC.Int.Int32
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s90vK]
        case ch_s90vK of {
          GHC.Types.C# c#_s90vM [Occ=Once] ->
              case ord# [c#_s90vM] of sat_s90vN {
                __DEFAULT ->
                    case narrow32Int# [sat_s90vN] of sat_s90vO {
                      __DEFAULT -> GHC.Int.I32# [sat_s90vO];
                    };
              };
        };

Foreign.C.String.withCWStringLen1
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CWStringLen -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [str_s90vP f_s90vQ eta_s90vR]
        case
            GHC.Base.map Foreign.C.String.newCWString2 str_s90vP
        of
        vals_s90vS [Dmd=<S,U>]
        { __DEFAULT ->
              case GHC.List.$wlenAcc vals_s90vS 0# of ww2_s90vT {
                __DEFAULT ->
                    case *# [ww2_s90vT 4#] of sat_s90vU {
                      __DEFAULT ->
                          case newAlignedPinnedByteArray# [sat_s90vU 4# eta_s90vR] of {
                            (#,#) ipv_s90vW [Occ=Once] ipv1_s90vX [Occ=Once] ->
                                case unsafeFreezeByteArray# [ipv1_s90vX ipv_s90vW] of {
                                  (#,#) ipv2_s90vZ [Occ=Once] ipv3_s90w0 ->
                                      case byteArrayContents# [ipv3_s90w0] of ptr_s90w1 {
                                        __DEFAULT ->
                                            let-no-escape {
                                              exit_s90w2 [Occ=OnceL!T[1], Dmd=<C(S),C(U(U,U))>]
                                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         a_a8WZM #)
                                              [LclId[JoinId(1)],
                                               Arity=1,
                                               Str=<S,U>,
                                               Unf=OtherCon []] =
                                                  sat-only [f_s90vQ
                                                            ww2_s90vT
                                                            ipv3_s90w0
                                                            ptr_s90w1] \r [eta1_s90w3]
                                                      let {
                                                        sat_s90w5 [Occ=Once] :: GHC.Types.Int
                                                        [LclId] =
                                                            CCCS GHC.Types.I#! [ww2_s90vT]; } in
                                                      let {
                                                        sat_s90w4 [Occ=Once]
                                                          :: GHC.Ptr.Ptr Foreign.C.Types.CWchar
                                                        [LclId] =
                                                            CCCS GHC.Ptr.Ptr! [ptr_s90w1]; } in
                                                      let {
                                                        sat_s90w6 [Occ=Once]
                                                          :: Foreign.C.String.CWStringLen
                                                        [LclId] =
                                                            CCCS (,)! [sat_s90w4 sat_s90w5];
                                                      } in 
                                                        case f_s90vQ sat_s90w6 eta1_s90w3 of {
                                                          (#,#) ipv4_s90w8 [Occ=Once]
                                                                ipv5_s90w9 [Occ=Once] ->
                                                              case
                                                                  touch# [ipv3_s90w0 ipv4_s90w8]
                                                              of
                                                              s4_s90wa
                                                              { __DEFAULT ->
                                                                    (#,#) [s4_s90wa ipv5_s90w9];
                                                              };
                                                        };
                                            } in 
                                              let-no-escape {
                                                go_s90wb [Occ=LoopBreakerT[3]]
                                                  :: [Foreign.C.Types.CWchar]
                                                     -> GHC.Prim.Int#
                                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                           a_a8WZM #)
                                                [LclId[JoinId(3)],
                                                 Arity=3,
                                                 Str=<S,1*U><L,U><S,U>,
                                                 Unf=OtherCon []] =
                                                    sat-only [ptr_s90w1
                                                              exit_s90w2
                                                              go_s90wb] \r [ds_s90wc
                                                                            ds1_s90wd
                                                                            eta1_s90we]
                                                        case ds_s90wc of {
                                                          [] -> exit_s90w2 eta1_s90we;
                                                          : val_s90wg [Occ=Once]
                                                            vals1_s90wh [Occ=Once] ->
                                                              case val_s90wg of {
                                                                GHC.Int.I32# x_s90wj [Occ=Once] ->
                                                                    case
                                                                        writeInt32OffAddr# [ptr_s90w1
                                                                                            ds1_s90wd
                                                                                            x_s90wj
                                                                                            eta1_s90we]
                                                                    of
                                                                    s2_s90wk
                                                                    { __DEFAULT ->
                                                                          case
                                                                              +# [ds1_s90wd 1#]
                                                                          of
                                                                          sat_s90wl
                                                                          { __DEFAULT ->
                                                                                go_s90wb
                                                                                    vals1_s90wh
                                                                                    sat_s90wl
                                                                                    s2_s90wk;
                                                                          };
                                                                    };
                                                              };
                                                        };
                                              } in  go_s90wb vals_s90vS 0# ipv2_s90vZ;
                                      };
                                };
                          };
                    };
              };
        };

Foreign.C.String.withCWStringLen
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CWStringLen -> GHC.Types.IO a)
     -> GHC.Types.IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.C.String.withCWStringLen1 eta_B3 eta_B2 eta_B1;

Foreign.C.String.withCWString
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CWString -> GHC.Types.IO a) -> GHC.Types.IO a
[GblId, Arity=1, Str=<L,1*U>, Unf=OtherCon []] =
    [] \r [x_s90wm]
        let {
          vals_s90wn [Occ=OnceL] :: [Foreign.C.Types.CWchar]
          [LclId] =
              [x_s90wm] \u []
                  GHC.Base.map Foreign.C.String.newCWString2 x_s90wm; } in
        let {
          sat_s90wr [Occ=OnceT[0]]
            :: (GHC.Ptr.Ptr Foreign.C.Types.CWchar -> GHC.Types.IO a_a8WZU)
               -> GHC.Types.IO a_a8WZU
          [LclId] =
              [vals_s90wn] \r [x1_s90wo]
                  let {
                    sat_s90wq [Occ=Once]
                      :: GHC.Types.Int
                         -> GHC.Ptr.Ptr Foreign.C.Types.CWchar -> GHC.Types.IO a_a8WZU
                    [LclId] =
                        [x1_s90wo] \r [ds_s90wp] x1_s90wo;
                  } in 
                    Foreign.Marshal.Array.withArrayLen0
                        Foreign.C.Types.$fStorableCWchar
                        Foreign.C.String.newCWString3
                        vals_s90wn
                        sat_s90wq;
        } in  sat_s90wr;

Foreign.C.String.newCWString1
  :: [GHC.Types.Char]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Ptr.Ptr Foreign.C.Types.CWchar #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [x_s90ws eta_s90wt]
        case
            GHC.Base.map Foreign.C.String.newCWString2 x_s90ws
        of
        sat_s90wu
        { __DEFAULT ->
              Foreign.Marshal.Array.newArray3
                  Foreign.C.Types.$fStorableCWchar
                  Foreign.C.String.newCWString3
                  sat_s90wu
                  eta_s90wt;
        };

Foreign.C.String.newCWString
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CWString
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] Foreign.C.String.newCWString1 eta_B2 eta_B1;

Foreign.C.String.newCWStringLen1
  :: GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Ptr.Ptr Foreign.C.Types.CWchar, GHC.Types.Int) #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [str_s90wv eta_s90ww]
        case
            GHC.Base.map Foreign.C.String.newCWString2 str_s90wv
        of
        xs_s90wx [Dmd=<S,U>]
        { __DEFAULT ->
              case
                  Foreign.Marshal.Array.newArray1
                      Foreign.C.Types.$fStorableCWchar xs_s90wx eta_s90ww
              of
              { (#,#) ipv_s90wz [Occ=Once] ipv1_s90wA [Occ=Once] ->
                    let {
                      sat_s90wC [Occ=Once] :: GHC.Types.Int
                      [LclId] =
                          [xs_s90wx] \u []
                              case GHC.List.$wlenAcc xs_s90wx 0# of ww2_s90wB {
                                __DEFAULT -> GHC.Types.I# [ww2_s90wB];
                              }; } in
                    let {
                      sat_s90wD [Occ=Once]
                        :: (GHC.Ptr.Ptr Foreign.C.Types.CWchar, GHC.Types.Int)
                      [LclId] =
                          CCCS (,)! [ipv1_s90wA sat_s90wC];
                    } in  (#,#) [ipv_s90wz sat_s90wD];
              };
        };

Foreign.C.String.newCWStringLen
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CWStringLen
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.String.newCWStringLen1 eta_B2 eta_B1;

Foreign.C.String.castCharToCChar1 :: GHC.Types.Char -> GHC.Int.Int8
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s90wE]
        case ch_s90wE of {
          GHC.Types.C# c#_s90wG [Occ=Once] ->
              case ord# [c#_s90wG] of sat_s90wH {
                __DEFAULT ->
                    case narrow8Int# [sat_s90wH] of sat_s90wI {
                      __DEFAULT -> GHC.Int.I8# [sat_s90wI];
                    };
              };
        };

Foreign.C.String.castCharToCSChar
  :: GHC.Types.Char -> Foreign.C.Types.CSChar
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] Foreign.C.String.castCharToCChar1 eta_B1;

Foreign.C.String.castCharToCUChar1
  :: GHC.Types.Char -> GHC.Word.Word8
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s90wJ]
        case ch_s90wJ of {
          GHC.Types.C# c#_s90wL [Occ=Once] ->
              case ord# [c#_s90wL] of sat_s90wM {
                __DEFAULT ->
                    case int2Word# [sat_s90wM] of sat_s90wN {
                      __DEFAULT ->
                          case narrow8Word# [sat_s90wN] of sat_s90wO {
                            __DEFAULT -> GHC.Word.W8# [sat_s90wO];
                          };
                    };
              };
        };

Foreign.C.String.castCharToCUChar
  :: GHC.Types.Char -> Foreign.C.Types.CUChar
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] Foreign.C.String.castCharToCUChar1 eta_B1;

Foreign.C.String.castCharToCChar
  :: GHC.Types.Char -> Foreign.C.Types.CChar
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] Foreign.C.String.castCharToCChar1 eta_B1;

Foreign.C.String.newCAString1
  :: GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Foreign.C.String.CString #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [str_s90wP s_s90wQ]
        case GHC.List.$wlenAcc str_s90wP 0# of ww2_s90wR {
          __DEFAULT ->
              case +# [ww2_s90wR 1#] of sat_s90wT {
                __DEFAULT ->
                    case int2Word# [sat_s90wT] of sat_s90wU {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [sat_s90wU s_s90wQ] of {
                            (#,#) ds_s90wW [Occ=Once*] ds1_s90wX ->
                                case eqAddr# [ds1_s90wX __NULL] of {
                                  __DEFAULT ->
                                      let-no-escape {
                                        exit_s90wZ [Occ=OnceL!T[2], Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                          :: GHC.Prim.Int#
                                             -> GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                   Foreign.C.String.CString #)
                                        [LclId[JoinId(2)],
                                         Arity=2,
                                         Str=<S,U><S,U>,
                                         Unf=OtherCon []] =
                                            sat-only [ds1_s90wX] \r [ww_s90x0 w_s90x1]
                                                case
                                                    writeInt8OffAddr# [ds1_s90wX
                                                                       ww_s90x0
                                                                       0#
                                                                       w_s90x1]
                                                of
                                                s2_s90x2
                                                { __DEFAULT ->
                                                      let {
                                                        sat_s90x3 [Occ=Once]
                                                          :: GHC.Ptr.Ptr Foreign.C.Types.CChar
                                                        [LclId] =
                                                            CCCS GHC.Ptr.Ptr! [ds1_s90wX];
                                                      } in  (#,#) [s2_s90x2 sat_s90x3];
                                                };
                                      } in 
                                        let-no-escape {
                                          $wgo_s90x4 [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                            :: [GHC.Types.Char]
                                               -> GHC.Prim.Int#
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     Foreign.C.String.CString #)
                                          [LclId[JoinId(3)],
                                           Arity=3,
                                           Str=<S,1*U><S,U><S,U>,
                                           Unf=OtherCon []] =
                                              sat-only [ds1_s90wX exit_s90wZ $wgo_s90x4] \r [w_s90x5
                                                                                             ww_s90x6
                                                                                             w1_s90x7]
                                                  case w_s90x5 of {
                                                    [] -> exit_s90wZ ww_s90x6 w1_s90x7;
                                                    : c_s90x9 [Occ=Once!] cs_s90xa [Occ=Once] ->
                                                        case c_s90x9 of {
                                                          GHC.Types.C# c#_s90xc [Occ=Once] ->
                                                              case ord# [c#_s90xc] of sat_s90xd {
                                                                __DEFAULT ->
                                                                    case
                                                                        narrow8Int# [sat_s90xd]
                                                                    of
                                                                    sat_s90xe
                                                                    { __DEFAULT ->
                                                                          case
                                                                              writeInt8OffAddr# [ds1_s90wX
                                                                                                 ww_s90x6
                                                                                                 sat_s90xe
                                                                                                 w1_s90x7]
                                                                          of
                                                                          s2_s90xf
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    +# [ww_s90x6 1#]
                                                                                of
                                                                                sat_s90xg
                                                                                { __DEFAULT ->
                                                                                      $wgo_s90x4
                                                                                          cs_s90xa
                                                                                          sat_s90xg
                                                                                          s2_s90xf;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                        } in  $wgo_s90x4 str_s90wP 0# ds_s90wW;
                                  1# -> raiseIO# [Foreign.Marshal.Alloc.malloc1 ds_s90wW];
                                };
                          };
                    };
              };
        };

Foreign.C.String.newCAString
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CString
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] Foreign.C.String.newCAString1 eta_B2 eta_B1;

Foreign.C.String.newCAStringLen1
  :: GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Foreign.C.String.CStringLen #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [str_s90xh eta_s90xi]
        case GHC.List.$wlenAcc str_s90xh 0# of ww2_s90xj {
          __DEFAULT ->
              case +# [ww2_s90xj 1#] of sat_s90xl {
                __DEFAULT ->
                    case int2Word# [sat_s90xl] of sat_s90xm {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [sat_s90xm eta_s90xi] of {
                            (#,#) ds_s90xo [Occ=Once*] ds1_s90xp ->
                                case eqAddr# [ds1_s90xp __NULL] of {
                                  __DEFAULT ->
                                      let-no-escape {
                                        exit_s90xr [Occ=OnceL!T[1], Dmd=<C(S),C(U(U,U))>]
                                          :: GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                   Foreign.C.String.CStringLen #)
                                        [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                            sat-only [ww2_s90xj ds1_s90xp] \r [w_s90xs]
                                                let {
                                                  sat_s90xu [Occ=Once] :: GHC.Types.Int
                                                  [LclId] =
                                                      CCCS GHC.Types.I#! [ww2_s90xj]; } in
                                                let {
                                                  sat_s90xt [Occ=Once]
                                                    :: GHC.Ptr.Ptr Foreign.C.Types.CChar
                                                  [LclId] =
                                                      CCCS GHC.Ptr.Ptr! [ds1_s90xp]; } in
                                                let {
                                                  sat_s90xv [Occ=Once]
                                                    :: (GHC.Ptr.Ptr Foreign.C.Types.CChar,
                                                        GHC.Types.Int)
                                                  [LclId] =
                                                      CCCS (,)! [sat_s90xt sat_s90xu];
                                                } in  (#,#) [w_s90xs sat_s90xv];
                                      } in 
                                        let-no-escape {
                                          $wgo_s90xw [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                            :: [GHC.Types.Char]
                                               -> GHC.Prim.Int#
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     Foreign.C.String.CStringLen #)
                                          [LclId[JoinId(3)],
                                           Arity=3,
                                           Str=<S,1*U><L,U><S,U>,
                                           Unf=OtherCon []] =
                                              sat-only [ds1_s90xp exit_s90xr $wgo_s90xw] \r [w_s90xx
                                                                                             ww_s90xy
                                                                                             w1_s90xz]
                                                  case w_s90xx of {
                                                    [] -> exit_s90xr w1_s90xz;
                                                    : c_s90xB [Occ=Once!] cs_s90xC [Occ=Once] ->
                                                        case c_s90xB of {
                                                          GHC.Types.C# c#_s90xE [Occ=Once] ->
                                                              case ord# [c#_s90xE] of sat_s90xF {
                                                                __DEFAULT ->
                                                                    case
                                                                        narrow8Int# [sat_s90xF]
                                                                    of
                                                                    sat_s90xG
                                                                    { __DEFAULT ->
                                                                          case
                                                                              writeInt8OffAddr# [ds1_s90xp
                                                                                                 ww_s90xy
                                                                                                 sat_s90xG
                                                                                                 w1_s90xz]
                                                                          of
                                                                          s2_s90xH
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    +# [ww_s90xy 1#]
                                                                                of
                                                                                sat_s90xI
                                                                                { __DEFAULT ->
                                                                                      $wgo_s90xw
                                                                                          cs_s90xC
                                                                                          sat_s90xI
                                                                                          s2_s90xH;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                        } in  $wgo_s90xw str_s90xh 0# ds_s90xo;
                                  1# -> raiseIO# [Foreign.Marshal.Alloc.malloc1 ds_s90xo];
                                };
                          };
                    };
              };
        };

Foreign.C.String.newCAStringLen
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CStringLen
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.String.newCAStringLen1 eta_B2 eta_B1;

Foreign.C.String.withCAString1
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CString -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [str_s90xK f_s90xL eta1_s90xM]
        case GHC.List.$wlenAcc str_s90xK 0# of ww2_s90xN {
          __DEFAULT ->
              case +# [ww2_s90xN 1#] of sat_s90xO {
                __DEFAULT ->
                    case newAlignedPinnedByteArray# [sat_s90xO 1# eta1_s90xM] of {
                      (#,#) ipv_s90xQ [Occ=Once] ipv1_s90xR [Occ=Once] ->
                          case unsafeFreezeByteArray# [ipv1_s90xR ipv_s90xQ] of {
                            (#,#) ipv2_s90xT [Occ=Once] ipv3_s90xU ->
                                case byteArrayContents# [ipv3_s90xU] of ptr_s90xV [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      let-no-escape {
                                        exit_s90xW [Occ=OnceL!T[2], Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                          :: GHC.Prim.Int#
                                             -> GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a8X3s #)
                                        [LclId[JoinId(2)],
                                         Arity=2,
                                         Str=<S,U><S,U>,
                                         Unf=OtherCon []] =
                                            sat-only [f_s90xL ipv3_s90xU ptr_s90xV] \r [ww_s90xX
                                                                                        w_s90xY]
                                                case
                                                    writeInt8OffAddr# [ptr_s90xV
                                                                       ww_s90xX
                                                                       0#
                                                                       w_s90xY]
                                                of
                                                s2_s90xZ
                                                { __DEFAULT ->
                                                      let {
                                                        sat_s90y0 [Occ=Once]
                                                          :: Foreign.C.String.CString
                                                        [LclId] =
                                                            CCCS GHC.Ptr.Ptr! [ptr_s90xV];
                                                      } in 
                                                        case f_s90xL sat_s90y0 s2_s90xZ of {
                                                          (#,#) ipv4_s90y2 [Occ=Once]
                                                                ipv5_s90y3 [Occ=Once] ->
                                                              case
                                                                  touch# [ipv3_s90xU ipv4_s90y2]
                                                              of
                                                              s4_s90y4
                                                              { __DEFAULT ->
                                                                    (#,#) [s4_s90y4 ipv5_s90y3];
                                                              };
                                                        };
                                                };
                                      } in 
                                        let-no-escape {
                                          $wgo_s90y5 [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                            :: [GHC.Types.Char]
                                               -> GHC.Prim.Int#
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a8X3s #)
                                          [LclId[JoinId(3)],
                                           Arity=3,
                                           Str=<S,1*U><S,U><S,U>,
                                           Unf=OtherCon []] =
                                              sat-only [ptr_s90xV exit_s90xW $wgo_s90y5] \r [w_s90y6
                                                                                             ww_s90y7
                                                                                             w1_s90y8]
                                                  case w_s90y6 of {
                                                    [] -> exit_s90xW ww_s90y7 w1_s90y8;
                                                    : c_s90ya [Occ=Once!] cs_s90yb [Occ=Once] ->
                                                        case c_s90ya of {
                                                          GHC.Types.C# c#_s90yd [Occ=Once] ->
                                                              case ord# [c#_s90yd] of sat_s90ye {
                                                                __DEFAULT ->
                                                                    case
                                                                        narrow8Int# [sat_s90ye]
                                                                    of
                                                                    sat_s90yf
                                                                    { __DEFAULT ->
                                                                          case
                                                                              writeInt8OffAddr# [ptr_s90xV
                                                                                                 ww_s90y7
                                                                                                 sat_s90yf
                                                                                                 w1_s90y8]
                                                                          of
                                                                          s2_s90yg
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    +# [ww_s90y7 1#]
                                                                                of
                                                                                sat_s90yh
                                                                                { __DEFAULT ->
                                                                                      $wgo_s90y5
                                                                                          cs_s90yb
                                                                                          sat_s90yh
                                                                                          s2_s90yg;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                        } in  $wgo_s90y5 str_s90xK 0# ipv2_s90xT;
                                };
                          };
                    };
              };
        };

Foreign.C.String.withCAString
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CString -> GHC.Types.IO a) -> GHC.Types.IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.C.String.withCAString1 eta_B3 eta_B2 eta_B1;

Foreign.C.String.withCAStringLen1
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CStringLen -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [str_s90yi f_s90yj eta_s90yk]
        case GHC.List.$wlenAcc str_s90yi 0# of ww2_s90yl {
          __DEFAULT ->
              case newAlignedPinnedByteArray# [ww2_s90yl 1# eta_s90yk] of {
                (#,#) ipv_s90yn [Occ=Once] ipv1_s90yo [Occ=Once] ->
                    case unsafeFreezeByteArray# [ipv1_s90yo ipv_s90yn] of {
                      (#,#) ipv2_s90yq [Occ=Once] ipv3_s90yr ->
                          case byteArrayContents# [ipv3_s90yr] of ptr_s90ys {
                            __DEFAULT ->
                                let-no-escape {
                                  exit_s90yt [Occ=OnceL!T[1], Dmd=<C(S),C(U(U,U))>]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a8X4j #)
                                  [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                      sat-only [f_s90yj ww2_s90yl ipv3_s90yr ptr_s90ys] \r [w_s90yu]
                                          let {
                                            sat_s90yw [Occ=Once] :: GHC.Types.Int
                                            [LclId] =
                                                CCCS GHC.Types.I#! [ww2_s90yl]; } in
                                          let {
                                            sat_s90yv [Occ=Once]
                                              :: GHC.Ptr.Ptr Foreign.C.Types.CChar
                                            [LclId] =
                                                CCCS GHC.Ptr.Ptr! [ptr_s90ys]; } in
                                          let {
                                            sat_s90yx [Occ=Once] :: Foreign.C.String.CStringLen
                                            [LclId] =
                                                CCCS (,)! [sat_s90yv sat_s90yw];
                                          } in 
                                            case f_s90yj sat_s90yx w_s90yu of {
                                              (#,#) ipv4_s90yz [Occ=Once] ipv5_s90yA [Occ=Once] ->
                                                  case touch# [ipv3_s90yr ipv4_s90yz] of s4_s90yB {
                                                    __DEFAULT -> (#,#) [s4_s90yB ipv5_s90yA];
                                                  };
                                            };
                                } in 
                                  let-no-escape {
                                    $wgo_s90yC [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                      :: [GHC.Types.Char]
                                         -> GHC.Prim.Int#
                                         -> GHC.Prim.State# GHC.Prim.RealWorld
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a8X4j #)
                                    [LclId[JoinId(3)],
                                     Arity=3,
                                     Str=<S,1*U><L,U><S,U>,
                                     Unf=OtherCon []] =
                                        sat-only [ptr_s90ys exit_s90yt $wgo_s90yC] \r [w_s90yD
                                                                                       ww_s90yE
                                                                                       w1_s90yF]
                                            case w_s90yD of {
                                              [] -> exit_s90yt w1_s90yF;
                                              : c_s90yH [Occ=Once!] cs_s90yI [Occ=Once] ->
                                                  case c_s90yH of {
                                                    GHC.Types.C# c#_s90yK [Occ=Once] ->
                                                        case ord# [c#_s90yK] of sat_s90yL {
                                                          __DEFAULT ->
                                                              case
                                                                  narrow8Int# [sat_s90yL]
                                                              of
                                                              sat_s90yM
                                                              { __DEFAULT ->
                                                                    case
                                                                        writeInt8OffAddr# [ptr_s90ys
                                                                                           ww_s90yE
                                                                                           sat_s90yM
                                                                                           w1_s90yF]
                                                                    of
                                                                    s2_s90yN
                                                                    { __DEFAULT ->
                                                                          case
                                                                              +# [ww_s90yE 1#]
                                                                          of
                                                                          sat_s90yO
                                                                          { __DEFAULT ->
                                                                                $wgo_s90yC
                                                                                    cs_s90yI
                                                                                    sat_s90yO
                                                                                    s2_s90yN;
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                  } in  $wgo_s90yC str_s90yi 0# ipv2_s90yq;
                          };
                    };
              };
        };

Foreign.C.String.withCAStringLen
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CStringLen -> GHC.Types.IO a)
     -> GHC.Types.IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.C.String.withCAStringLen1 eta_B3 eta_B2 eta_B1;


==================== STG syntax: ====================
2018-03-16 16:04:10.130928487 UTC

Foreign.C.String.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Foreign.C.String.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.String.$trModule4];

Foreign.C.String.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.C.String"#;

Foreign.C.String.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.String.$trModule2];

Foreign.C.String.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.C.String.$trModule3
                                     Foreign.C.String.$trModule1];

Foreign.C.String.withCStringLen1
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CStringLen -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Str=<L,U><L,C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [s_s90mN f_s90mO void_0E]
        case GHC.IO.Encoding.getForeignEncoding GHC.Prim.void# of {
          Unit# ipv1_s90mS [Occ=Once!] ->
              case ipv1_s90mS of {
                GHC.IO.Encoding.Types.TextEncoding _ [Occ=Dead]
                                                   _ [Occ=Dead]
                                                   ds4_s90mW [Occ=Once] ->
                    let {
                      sat_s90nX [Occ=Once]
                        :: GHC.IO.Encoding.Types.TextEncoder estate_a8RVZ
                           -> GHC.Types.IO a_a8X7M
                      [LclId] =
                          [s_s90mN f_s90mO] \r [encoder_s90mX void_0E]
                              case GHC.List.$wlenAcc s_s90mN 0# of ww2_s90mZ {
                                __DEFAULT ->
                                    case *# [ww2_s90mZ 4#] of sat_s90n0 {
                                      __DEFAULT ->
                                          case
                                              newAlignedPinnedByteArray# [sat_s90n0
                                                                          4#
                                                                          GHC.Prim.void#]
                                          of
                                          { Unit# ipv3_s90n3 [Occ=Once] ->
                                                case
                                                    unsafeFreezeByteArray# [ipv3_s90n3
                                                                            GHC.Prim.void#]
                                                of
                                                { Unit# ipv5_s90n6 ->
                                                      case
                                                          byteArrayContents# [ipv5_s90n6]
                                                      of
                                                      ptr_s90n7
                                                      { __DEFAULT ->
                                                            let-no-escape {
                                                              $w$j_s90n8 [InlPrag=NOUSERINLINE[0],
                                                                          Occ=OnceL!T[1],
                                                                          Dmd=<C(S),C(U)>]
                                                                :: GHC.Prim.State#
                                                                     GHC.Prim.RealWorld
                                                                   -> (# GHC.Prim.State#
                                                                           GHC.Prim.RealWorld,
                                                                         a_a8X7M #)
                                                              [LclId[JoinId(1)],
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [f_s90mO
                                                                            encoder_s90mX
                                                                            ww2_s90mZ
                                                                            ipv5_s90n6
                                                                            ptr_s90n7] \r [void_0E]
                                                                      case
                                                                          newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                                                      GHC.Prim.void#]
                                                                      of
                                                                      { Unit# ipv7_s90nc [Occ=OnceL] ->
                                                                            let {
                                                                              ipv8_s90nd [Occ=OnceL]
                                                                                :: GHC.ForeignPtr.ForeignPtrContents
                                                                              [LclId,
                                                                               Unf=OtherCon []] =
                                                                                  CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv7_s90nc]; } in
                                                                            let {
                                                                              ipv9_s90ne [Occ=OnceL]
                                                                                :: GHC.IO.Buffer.Buffer
                                                                                     GHC.Types.Char
                                                                              [LclId,
                                                                               Unf=OtherCon []] =
                                                                                  CCCS GHC.IO.Buffer.Buffer! [ptr_s90n7
                                                                                                              ipv8_s90nd
                                                                                                              GHC.IO.Buffer.ReadBuffer
                                                                                                              ww2_s90mZ
                                                                                                              0#
                                                                                                              ww2_s90mZ]; } in
                                                                            let {
                                                                              $wgo_s90nf [InlPrag=NOUSERINLINE[0],
                                                                                          Occ=LoopBreaker]
                                                                                :: GHC.Prim.Int#
                                                                                   -> GHC.Prim.State#
                                                                                        GHC.Prim.RealWorld
                                                                                   -> (# GHC.Prim.State#
                                                                                           GHC.Prim.RealWorld,
                                                                                         a_a8X7M #)
                                                                              [LclId,
                                                                               Arity=2,
                                                                               Str=<S,U><S,U>,
                                                                               Unf=OtherCon []] =
                                                                                  sat-only [f_s90mO
                                                                                            encoder_s90mX
                                                                                            ipv9_s90ne
                                                                                            $wgo_s90nf] \r [ww_s90ng
                                                                                                            void_0E]
                                                                                      case
                                                                                          newPinnedByteArray# [ww_s90ng
                                                                                                               GHC.Prim.void#]
                                                                                      of
                                                                                      { Unit# ipv11_s90nk [Occ=Once] ->
                                                                                            case
                                                                                                unsafeFreezeByteArray# [ipv11_s90nk
                                                                                                                        GHC.Prim.void#]
                                                                                            of
                                                                                            { Unit# ipv13_s90nn ->
                                                                                                  case
                                                                                                      encoder_s90mX
                                                                                                  of
                                                                                                  { GHC.IO.Encoding.Types.BufferCodec ww3_s90np [Occ=Once]
                                                                                                                                      ww4_s90nq [Occ=Once]
                                                                                                                                      _ [Occ=Dead]
                                                                                                                                      _ [Occ=Dead]
                                                                                                                                      _ [Occ=Dead] ->
                                                                                                        let {
                                                                                                          sat_s90nv [Occ=Once]
                                                                                                            :: GHC.Types.Int
                                                                                                          [LclId] =
                                                                                                              CCCS GHC.Types.I#! [ww_s90ng];
                                                                                                        } in 
                                                                                                          case
                                                                                                              byteArrayContents# [ipv13_s90nn]
                                                                                                          of
                                                                                                          sat_s90nu
                                                                                                          { __DEFAULT ->
                                                                                                                case
                                                                                                                    GHC.Foreign.$wtryFillBufferAndCall
                                                                                                                        ww3_s90np
                                                                                                                        ww4_s90nq
                                                                                                                        GHC.Types.False
                                                                                                                        ipv9_s90ne
                                                                                                                        sat_s90nu
                                                                                                                        sat_s90nv
                                                                                                                        f_s90mO
                                                                                                                        GHC.Prim.void#
                                                                                                                of
                                                                                                                { Unit# ipv15_s90ny [Occ=Once!] ->
                                                                                                                      case
                                                                                                                          ipv15_s90ny
                                                                                                                      of
                                                                                                                      { GHC.Base.Nothing ->
                                                                                                                            case
                                                                                                                                *# [ww_s90ng
                                                                                                                                    2#]
                                                                                                                            of
                                                                                                                            sat_s90nA
                                                                                                                            { __DEFAULT ->
                                                                                                                                  case
                                                                                                                                      $wgo_s90nf
                                                                                                                                          sat_s90nA
                                                                                                                                          GHC.Prim.void#
                                                                                                                                  of
                                                                                                                                  { Unit# ipv17_s90nD [Occ=Once] ->
                                                                                                                                        case
                                                                                                                                            touch# [ipv13_s90nn
                                                                                                                                                    GHC.Prim.void#]
                                                                                                                                        of
                                                                                                                                        s4_s90nE
                                                                                                                                        { (##) ->
                                                                                                                                              Unit# [ipv17_s90nD];
                                                                                                                                        };
                                                                                                                                  };
                                                                                                                            };
                                                                                                                        GHC.Base.Just res_s90nF [Occ=Once] ->
                                                                                                                            case
                                                                                                                                touch# [ipv13_s90nn
                                                                                                                                        GHC.Prim.void#]
                                                                                                                            of
                                                                                                                            s4_s90nG
                                                                                                                            { (##) ->
                                                                                                                                  Unit# [res_s90nF];
                                                                                                                            };
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                            } in 
                                                                              case
                                                                                  +# [ww2_s90mZ 1#]
                                                                              of
                                                                              sat_s90nH
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        $wgo_s90nf
                                                                                            sat_s90nH
                                                                                            GHC.Prim.void#
                                                                                    of
                                                                                    { Unit# ipv11_s90nK [Occ=Once] ->
                                                                                          case
                                                                                              touch# [ipv5_s90n6
                                                                                                      GHC.Prim.void#]
                                                                                          of
                                                                                          s4_s90nL
                                                                                          { (##) ->
                                                                                                Unit# [ipv11_s90nK];
                                                                                          };
                                                                                    };
                                                                              };
                                                                      };
                                                            } in 
                                                              let-no-escape {
                                                                go_s90nM [Occ=LoopBreakerT[3]]
                                                                  :: [GHC.Types.Char]
                                                                     -> GHC.Prim.Int#
                                                                     -> GHC.Prim.State#
                                                                          GHC.Prim.RealWorld
                                                                     -> (# GHC.Prim.State#
                                                                             GHC.Prim.RealWorld,
                                                                           a_a8X7M #)
                                                                [LclId[JoinId(3)],
                                                                 Arity=3,
                                                                 Str=<S,1*U><L,U><S,U>,
                                                                 Unf=OtherCon []] =
                                                                    sat-only [ptr_s90n7
                                                                              $w$j_s90n8
                                                                              go_s90nM] \r [ds7_s90nN
                                                                                            ds8_s90nO
                                                                                            void_0E]
                                                                        case ds7_s90nN of {
                                                                          [] ->
                                                                              $w$j_s90n8
                                                                                  GHC.Prim.void#;
                                                                          : val_s90nR [Occ=Once!]
                                                                            vals_s90nS [Occ=Once] ->
                                                                              case val_s90nR of {
                                                                                GHC.Types.C# x_s90nU [Occ=Once] ->
                                                                                    case
                                                                                        writeWideCharOffAddr# [ptr_s90n7
                                                                                                               ds8_s90nO
                                                                                                               x_s90nU
                                                                                                               GHC.Prim.void#]
                                                                                    of
                                                                                    s2_s90nV
                                                                                    { (##) ->
                                                                                          case
                                                                                              +# [ds8_s90nO
                                                                                                  1#]
                                                                                          of
                                                                                          sat_s90nW
                                                                                          { __DEFAULT ->
                                                                                                go_s90nM
                                                                                                    vals_s90nS
                                                                                                    sat_s90nW
                                                                                                    GHC.Prim.void#;
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                              } in 
                                                                go_s90nM s_s90mN 0# GHC.Prim.void#;
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.bracket1
                          ds4_s90mW GHC.IO.Encoding.Types.close sat_s90nX GHC.Prim.void#;
              };
        };

Foreign.C.String.withCStringLen
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CStringLen -> GHC.Types.IO a)
     -> GHC.Types.IO a
[GblId,
 Arity=3,
 Str=<L,U><L,C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.C.String.withCStringLen1 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.String.withCString1
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CString -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Str=<L,U><L,C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [s_s90nY f_s90nZ void_0E]
        case GHC.IO.Encoding.getForeignEncoding GHC.Prim.void# of {
          Unit# ipv1_s90o3 [Occ=Once] ->
              GHC.Foreign.charIsRepresentable3
                  ipv1_s90o3 s_s90nY f_s90nZ GHC.Prim.void#;
        };

Foreign.C.String.withCString
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CString -> GHC.Types.IO a) -> GHC.Types.IO a
[GblId,
 Arity=3,
 Str=<L,U><L,C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.C.String.withCString1 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.String.charIsRepresentable1
  :: GHC.Types.Char
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId, Arity=2, Str=<L,U(U)><S,U>, Unf=OtherCon []] =
    [] \r [c_s90o4 void_0E]
        case GHC.IO.Encoding.getForeignEncoding GHC.Prim.void# of {
          Unit# ipv1_s90o8 [Occ=Once] ->
              GHC.Foreign.charIsRepresentable1 ipv1_s90o8 c_s90o4 GHC.Prim.void#;
        };

Foreign.C.String.charIsRepresentable
  :: GHC.Types.Char -> GHC.Types.IO GHC.Types.Bool
[GblId, Arity=2, Str=<L,U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.charIsRepresentable1 eta_B2 GHC.Prim.void#;

Foreign.C.String.newCStringLen2 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

Foreign.C.String.newCStringLen1
  :: GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Foreign.CStringLen #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [s_s90o9 void_0E]
        case GHC.IO.Encoding.getForeignEncoding GHC.Prim.void# of {
          Unit# ipv1_s90od [Occ=Once!] ->
              case ipv1_s90od of {
                GHC.IO.Encoding.Types.TextEncoding _ [Occ=Dead]
                                                   _ [Occ=Dead]
                                                   ds4_s90oh [Occ=Once] ->
                    let {
                      sat_s90qg [Occ=Once]
                        :: GHC.IO.Encoding.Types.TextEncoder estate_a8RYT
                           -> GHC.Types.IO GHC.Foreign.CStringLen
                      [LclId] =
                          [s_s90o9] \r [encoder_s90oi void_0E]
                              case GHC.List.$wlenAcc s_s90o9 0# of ww2_s90ok {
                                __DEFAULT ->
                                    case *# [ww2_s90ok 4#] of sat_s90ol {
                                      __DEFAULT ->
                                          case
                                              newAlignedPinnedByteArray# [sat_s90ol
                                                                          4#
                                                                          GHC.Prim.void#]
                                          of
                                          { Unit# ipv3_s90oo [Occ=Once] ->
                                                case
                                                    unsafeFreezeByteArray# [ipv3_s90oo
                                                                            GHC.Prim.void#]
                                                of
                                                { Unit# ipv5_s90or ->
                                                      case
                                                          byteArrayContents# [ipv5_s90or]
                                                      of
                                                      ptr_s90os
                                                      { __DEFAULT ->
                                                            let-no-escape {
                                                              $w$j_s90ot [InlPrag=NOUSERINLINE[0],
                                                                          Occ=OnceL!T[1],
                                                                          Dmd=<C(S),C(U)>]
                                                                :: GHC.Prim.State#
                                                                     GHC.Prim.RealWorld
                                                                   -> (# GHC.Prim.State#
                                                                           GHC.Prim.RealWorld,
                                                                         GHC.Foreign.CStringLen #)
                                                              [LclId[JoinId(1)],
                                                               Arity=1,
                                                               Str=<S,U>,
                                                               Unf=OtherCon []] =
                                                                  sat-only [encoder_s90oi
                                                                            ww2_s90ok
                                                                            ipv5_s90or
                                                                            ptr_s90os] \r [void_0E]
                                                                      case
                                                                          newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                                                      GHC.Prim.void#]
                                                                      of
                                                                      { Unit# ipv7_s90ox [Occ=OnceL] ->
                                                                            case
                                                                                +# [ww2_s90ok 1#]
                                                                            of
                                                                            to_sz_bytes_s90oy [Dmd=<S,U>]
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      int2Word# [to_sz_bytes_s90oy]
                                                                                  of
                                                                                  sat_s90oA
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            __pkg_ccall base-4.11.0.0 [sat_s90oA
                                                                                                                       GHC.Prim.void#]
                                                                                        of
                                                                                        { Unit# ds9_s90oD ->
                                                                                              case
                                                                                                  eqAddr# [ds9_s90oD
                                                                                                           __NULL]
                                                                                              of
                                                                                              { __DEFAULT ->
                                                                                                    let {
                                                                                                      ipv8_s90oF [Occ=OnceL]
                                                                                                        :: GHC.ForeignPtr.ForeignPtrContents
                                                                                                      [LclId,
                                                                                                       Unf=OtherCon []] =
                                                                                                          CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv7_s90ox]; } in
                                                                                                    let {
                                                                                                      ipv9_s90oG [Occ=OnceL]
                                                                                                        :: GHC.IO.Buffer.Buffer
                                                                                                             GHC.Types.Char
                                                                                                      [LclId,
                                                                                                       Unf=OtherCon []] =
                                                                                                          CCCS GHC.IO.Buffer.Buffer! [ptr_s90os
                                                                                                                                      ipv8_s90oF
                                                                                                                                      GHC.IO.Buffer.ReadBuffer
                                                                                                                                      ww2_s90ok
                                                                                                                                      0#
                                                                                                                                      ww2_s90ok]; } in
                                                                                                    let {
                                                                                                      sat_s90q3 [Occ=Once]
                                                                                                        :: GHC.Types.Int
                                                                                                      [LclId] =
                                                                                                          CCCS GHC.Types.I#! [to_sz_bytes_s90oy];
                                                                                                    } in 
                                                                                                      let-no-escape {
                                                                                                        $j_s90oH [Occ=OnceL!T[2],
                                                                                                                  Dmd=<L,C(C1(U))>]
                                                                                                          :: GHC.Prim.State#
                                                                                                               GHC.Prim.RealWorld
                                                                                                             -> GHC.Foreign.CStringLen
                                                                                                             -> (# GHC.Prim.State#
                                                                                                                     GHC.Prim.RealWorld,
                                                                                                                   GHC.Foreign.CStringLen #)
                                                                                                        [LclId[JoinId(2)],
                                                                                                         Arity=2,
                                                                                                         Str=<S,U><L,U>,
                                                                                                         Unf=OtherCon []] =
                                                                                                            sat-only [ipv5_s90or] \r [void_0E
                                                                                                                                      ipv11_s90oJ]
                                                                                                                case
                                                                                                                    touch# [ipv5_s90or
                                                                                                                            GHC.Prim.void#]
                                                                                                                of
                                                                                                                s4_s90oK
                                                                                                                { (##) ->
                                                                                                                      Unit# [ipv11_s90oJ];
                                                                                                                };
                                                                                                      } in 
                                                                                                        let-no-escape {
                                                                                                          $wgo_s90oL [InlPrag=NOUSERINLINE[0],
                                                                                                                      Occ=LoopBreakerT[3]]
                                                                                                            :: GHC.Prim.Addr#
                                                                                                               -> GHC.Types.Int
                                                                                                               -> GHC.Prim.State#
                                                                                                                    GHC.Prim.RealWorld
                                                                                                               -> (# GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld,
                                                                                                                     GHC.Foreign.CStringLen #)
                                                                                                          [LclId[JoinId(3)],
                                                                                                           Arity=3,
                                                                                                           Str=<L,U><L,U(U)><S,U>,
                                                                                                           Unf=OtherCon []] =
                                                                                                              sat-only [encoder_s90oi
                                                                                                                        ipv9_s90oG
                                                                                                                        $j_s90oH
                                                                                                                        $wgo_s90oL] \r [ww_s90oM
                                                                                                                                        w1_s90oN
                                                                                                                                        void_0E]
                                                                                                                  case
                                                                                                                      encoder_s90oi
                                                                                                                  of
                                                                                                                  { GHC.IO.Encoding.Types.BufferCodec ww3_s90oQ [Occ=OnceL!]
                                                                                                                                                      ww4_s90oR [Occ=OnceL!]
                                                                                                                                                      _ [Occ=Dead]
                                                                                                                                                      _ [Occ=Dead]
                                                                                                                                                      _ [Occ=Dead] ->
                                                                                                                        case
                                                                                                                            newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                                                                                                        GHC.Prim.void#]
                                                                                                                        of
                                                                                                                        { Unit# ipv13_s90oX [Occ=Once] ->
                                                                                                                              let {
                                                                                                                                sat_s90q2 [Occ=Once]
                                                                                                                                  :: GHC.IO.Buffer.Buffer
                                                                                                                                       GHC.Word.Word8
                                                                                                                                [LclId] =
                                                                                                                                    [ww_s90oM
                                                                                                                                     w1_s90oN
                                                                                                                                     ipv13_s90oX] \u []
                                                                                                                                        case
                                                                                                                                            w1_s90oN
                                                                                                                                        of
                                                                                                                                        { GHC.Types.I# dt4_s90q0 [Occ=Once] ->
                                                                                                                                              let {
                                                                                                                                                sat_s90q1 [Occ=Once]
                                                                                                                                                  :: GHC.ForeignPtr.ForeignPtrContents
                                                                                                                                                [LclId] =
                                                                                                                                                    CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv13_s90oX];
                                                                                                                                              } in 
                                                                                                                                                GHC.IO.Buffer.Buffer [ww_s90oM
                                                                                                                                                                      sat_s90q1
                                                                                                                                                                      GHC.IO.Buffer.WriteBuffer
                                                                                                                                                                      dt4_s90q0
                                                                                                                                                                      0#
                                                                                                                                                                      0#];
                                                                                                                                        };
                                                                                                                              } in 
                                                                                                                                let-no-escape {
                                                                                                                                  $j1_s90oY [Dmd=<L,C(C1(U))>]
                                                                                                                                    :: GHC.Prim.State#
                                                                                                                                         GHC.Prim.RealWorld
                                                                                                                                       -> GHC.Base.Maybe
                                                                                                                                            GHC.Foreign.CStringLen
                                                                                                                                       -> (# GHC.Prim.State#
                                                                                                                                               GHC.Prim.RealWorld,
                                                                                                                                             GHC.Foreign.CStringLen #)
                                                                                                                                  [LclId[JoinId(2)],
                                                                                                                                   Arity=2,
                                                                                                                                   Str=<S,U><S,1*U>,
                                                                                                                                   Unf=OtherCon []] =
                                                                                                                                      sat-only [$j_s90oH
                                                                                                                                                $wgo_s90oL
                                                                                                                                                ww_s90oM
                                                                                                                                                w1_s90oN] \r [void_0E
                                                                                                                                                              ipv11_s90p0]
                                                                                                                                          case
                                                                                                                                              ipv11_s90p0
                                                                                                                                          of
                                                                                                                                          { GHC.Base.Nothing ->
                                                                                                                                                case
                                                                                                                                                    w1_s90oN
                                                                                                                                                of
                                                                                                                                                { GHC.Types.I# x_s90p3 [Occ=Once] ->
                                                                                                                                                      case
                                                                                                                                                          *# [x_s90p3
                                                                                                                                                              2#]
                                                                                                                                                      of
                                                                                                                                                      ds_s90p4
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            case
                                                                                                                                                                int2Word# [ds_s90p4]
                                                                                                                                                            of
                                                                                                                                                            sat_s90p6
                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                  case
                                                                                                                                                                      __pkg_ccall base-4.11.0.0 [ww_s90oM
                                                                                                                                                                                                 sat_s90p6
                                                                                                                                                                                                 GHC.Prim.void#]
                                                                                                                                                                  of
                                                                                                                                                                  { Unit# ds12_s90p9 ->
                                                                                                                                                                        case
                                                                                                                                                                            eqAddr# [ds12_s90p9
                                                                                                                                                                                     __NULL]
                                                                                                                                                                        of
                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                              let {
                                                                                                                                                                                sat_s90pb [Occ=Once]
                                                                                                                                                                                  :: GHC.Types.Int
                                                                                                                                                                                [LclId] =
                                                                                                                                                                                    CCCS GHC.Types.I#! [ds_s90p4];
                                                                                                                                                                              } in 
                                                                                                                                                                                $wgo_s90oL
                                                                                                                                                                                    ds12_s90p9
                                                                                                                                                                                    sat_s90pb
                                                                                                                                                                                    GHC.Prim.void#;
                                                                                                                                                                          1# ->
                                                                                                                                                                              raiseIO# [Foreign.Marshal.Alloc.realloc2
                                                                                                                                                                                        GHC.Prim.void#];
                                                                                                                                                                        };
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                        0# ->
                                                                                                                                                            case
                                                                                                                                                                __pkg_ccall base-4.11.0.0 [ww_s90oM
                                                                                                                                                                                           GHC.Prim.void#]
                                                                                                                                                            of
                                                                                                                                                            { (##) ->
                                                                                                                                                                  $wgo_s90oL
                                                                                                                                                                      __NULL
                                                                                                                                                                      Foreign.C.String.newCStringLen2
                                                                                                                                                                      GHC.Prim.void#;
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                            GHC.Base.Just res_s90pg [Occ=Once] ->
                                                                                                                                                $j_s90oH
                                                                                                                                                    GHC.Prim.void#
                                                                                                                                                    res_s90pg;
                                                                                                                                          };
                                                                                                                                } in 
                                                                                                                                  let-no-escape {
                                                                                                                                    exit_s90ph [Occ=OnceL!T[1],
                                                                                                                                                Dmd=<L,C(U)>]
                                                                                                                                      :: GHC.Prim.State#
                                                                                                                                           GHC.Prim.RealWorld
                                                                                                                                         -> (# GHC.Prim.State#
                                                                                                                                                 GHC.Prim.RealWorld,
                                                                                                                                               GHC.Foreign.CStringLen #)
                                                                                                                                    [LclId[JoinId(1)],
                                                                                                                                     Arity=1,
                                                                                                                                     Str=<S,U>,
                                                                                                                                     Unf=OtherCon []] =
                                                                                                                                        sat-only [$j1_s90oY] \r [void_0E]
                                                                                                                                            $j1_s90oY
                                                                                                                                                GHC.Prim.void#
                                                                                                                                                GHC.Base.Nothing;
                                                                                                                                  } in 
                                                                                                                                    let-no-escape {
                                                                                                                                      exit1_s90pj [Occ=OnceL!T[2],
                                                                                                                                                   Dmd=<L,C(C1(U))>]
                                                                                                                                        :: GHC.Prim.State#
                                                                                                                                             GHC.Prim.RealWorld
                                                                                                                                           -> GHC.IO.Buffer.Buffer
                                                                                                                                                GHC.Word.Word8
                                                                                                                                           -> (# GHC.Prim.State#
                                                                                                                                                   GHC.Prim.RealWorld,
                                                                                                                                                 GHC.Foreign.CStringLen #)
                                                                                                                                      [LclId[JoinId(2)],
                                                                                                                                       Arity=2,
                                                                                                                                       Str=<S,U><S,1*U(U,U,A,A,U,U)>,
                                                                                                                                       Unf=OtherCon []] =
                                                                                                                                          sat-only [$j1_s90oY] \r [void_0E
                                                                                                                                                                   to'_s90pl]
                                                                                                                                              case
                                                                                                                                                  to'_s90pl
                                                                                                                                              of
                                                                                                                                              { GHC.IO.Buffer.Buffer ww9_s90pn [Occ=Once]
                                                                                                                                                                     ww10_s90po [Occ=Once]
                                                                                                                                                                     _ [Occ=Dead]
                                                                                                                                                                     _ [Occ=Dead]
                                                                                                                                                                     ww13_s90pr [Occ=Once]
                                                                                                                                                                     ww14_s90ps [Occ=Once] ->
                                                                                                                                                    case
                                                                                                                                                        touch# [ww10_s90po
                                                                                                                                                                GHC.Prim.void#]
                                                                                                                                                    of
                                                                                                                                                    s'_s90pt
                                                                                                                                                    { (##) ->
                                                                                                                                                          case
                                                                                                                                                              -# [ww14_s90ps
                                                                                                                                                                  ww13_s90pr]
                                                                                                                                                          of
                                                                                                                                                          sat_s90pv
                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                let {
                                                                                                                                                                  sat_s90pw [Occ=Once]
                                                                                                                                                                    :: GHC.Types.Int
                                                                                                                                                                  [LclId] =
                                                                                                                                                                      CCCS GHC.Types.I#! [sat_s90pv]; } in
                                                                                                                                                                let {
                                                                                                                                                                  sat_s90pu [Occ=Once]
                                                                                                                                                                    :: GHC.Ptr.Ptr
                                                                                                                                                                         Foreign.C.Types.CChar
                                                                                                                                                                  [LclId] =
                                                                                                                                                                      CCCS GHC.Ptr.Ptr! [ww9_s90pn]; } in
                                                                                                                                                                let {
                                                                                                                                                                  sat_s90px [Occ=Once]
                                                                                                                                                                    :: GHC.Foreign.CStringLen
                                                                                                                                                                  [LclId] =
                                                                                                                                                                      CCCS (,)! [sat_s90pu
                                                                                                                                                                                 sat_s90pw]; } in
                                                                                                                                                                let {
                                                                                                                                                                  sat_s90py [Occ=Once]
                                                                                                                                                                    :: GHC.Base.Maybe
                                                                                                                                                                         GHC.Foreign.CStringLen
                                                                                                                                                                  [LclId] =
                                                                                                                                                                      CCCS GHC.Base.Just! [sat_s90px];
                                                                                                                                                                } in 
                                                                                                                                                                  $j1_s90oY
                                                                                                                                                                      GHC.Prim.void#
                                                                                                                                                                      sat_s90py;
                                                                                                                                                          };
                                                                                                                                                    };
                                                                                                                                              };
                                                                                                                                    } in 
                                                                                                                                      let-no-escape {
                                                                                                                                        $wgo1_s90pz [InlPrag=NOUSERINLINE[0],
                                                                                                                                                     Occ=LoopBreakerT[3]]
                                                                                                                                          :: GHC.IO.Buffer.Buffer
                                                                                                                                               GHC.IO.Buffer.CharBufElem
                                                                                                                                             -> GHC.IO.Buffer.Buffer
                                                                                                                                                  GHC.Word.Word8
                                                                                                                                             -> GHC.Prim.State#
                                                                                                                                                  GHC.Prim.RealWorld
                                                                                                                                             -> (# GHC.Prim.State#
                                                                                                                                                     GHC.Prim.RealWorld,
                                                                                                                                                   GHC.Foreign.CStringLen #)
                                                                                                                                        [LclId[JoinId(3)],
                                                                                                                                         Arity=3,
                                                                                                                                         Str=<L,U><L,U><S,U>,
                                                                                                                                         Unf=OtherCon []] =
                                                                                                                                            sat-only [ww3_s90oQ
                                                                                                                                                      ww4_s90oR
                                                                                                                                                      exit_s90ph
                                                                                                                                                      exit1_s90pj
                                                                                                                                                      $wgo1_s90pz] \r [ww8_s90pA
                                                                                                                                                                       ww9_s90pB
                                                                                                                                                                       void_0E]
                                                                                                                                                case
                                                                                                                                                    ww3_s90oQ
                                                                                                                                                        ww8_s90pA
                                                                                                                                                        ww9_s90pB
                                                                                                                                                        GHC.Prim.void#
                                                                                                                                                of
                                                                                                                                                { Unit# ipv15_s90pF [Occ=Once!] ->
                                                                                                                                                      case
                                                                                                                                                          ipv15_s90pF
                                                                                                                                                      of
                                                                                                                                                      { (,,) why_s90pH [Occ=Once!]
                                                                                                                                                             from'_s90pI [Occ=Once!]
                                                                                                                                                             to'_s90pJ [Occ=Once*] ->
                                                                                                                                                            case
                                                                                                                                                                from'_s90pI
                                                                                                                                                            of
                                                                                                                                                            wild3_s90pK
                                                                                                                                                            { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                                                                                                                   _ [Occ=Dead]
                                                                                                                                                                                   _ [Occ=Dead]
                                                                                                                                                                                   _ [Occ=Dead]
                                                                                                                                                                                   dt3_s90pP [Occ=Once]
                                                                                                                                                                                   dt4_s90pQ [Occ=Once] ->
                                                                                                                                                                  case
                                                                                                                                                                      ==# [dt3_s90pP
                                                                                                                                                                           dt4_s90pQ]
                                                                                                                                                                  of
                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                        case
                                                                                                                                                                            why_s90pH
                                                                                                                                                                        of
                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                              case
                                                                                                                                                                                  ww4_s90oR
                                                                                                                                                                                      wild3_s90pK
                                                                                                                                                                                      to'_s90pJ
                                                                                                                                                                                      GHC.Prim.void#
                                                                                                                                                                              of
                                                                                                                                                                              { Unit# ipv17_s90pV [Occ=Once!] ->
                                                                                                                                                                                    case
                                                                                                                                                                                        ipv17_s90pV
                                                                                                                                                                                    of
                                                                                                                                                                                    { (,) ww11_s90pX [Occ=Once]
                                                                                                                                                                                          ww12_s90pY [Occ=Once] ->
                                                                                                                                                                                          $wgo1_s90pz
                                                                                                                                                                                              ww11_s90pX
                                                                                                                                                                                              ww12_s90pY
                                                                                                                                                                                              GHC.Prim.void#;
                                                                                                                                                                                    };
                                                                                                                                                                              };
                                                                                                                                                                          GHC.IO.Encoding.Types.OutputUnderflow ->
                                                                                                                                                                              exit_s90ph
                                                                                                                                                                                  GHC.Prim.void#;
                                                                                                                                                                        };
                                                                                                                                                                    1# ->
                                                                                                                                                                        exit1_s90pj
                                                                                                                                                                            GHC.Prim.void#
                                                                                                                                                                            to'_s90pJ;
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                      } in 
                                                                                                                                        $wgo1_s90pz
                                                                                                                                            ipv9_s90oG
                                                                                                                                            sat_s90q2
                                                                                                                                            GHC.Prim.void#;
                                                                                                                        };
                                                                                                                  };
                                                                                                        } in 
                                                                                                          $wgo_s90oL
                                                                                                              ds9_s90oD
                                                                                                              sat_s90q3
                                                                                                              GHC.Prim.void#;
                                                                                                1# ->
                                                                                                    raiseIO# [Foreign.Marshal.Alloc.malloc1
                                                                                                              GHC.Prim.void#];
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                      };
                                                            } in 
                                                              let-no-escape {
                                                                go_s90q5 [Occ=LoopBreakerT[3]]
                                                                  :: [GHC.Types.Char]
                                                                     -> GHC.Prim.Int#
                                                                     -> GHC.Prim.State#
                                                                          GHC.Prim.RealWorld
                                                                     -> (# GHC.Prim.State#
                                                                             GHC.Prim.RealWorld,
                                                                           GHC.Foreign.CStringLen #)
                                                                [LclId[JoinId(3)],
                                                                 Arity=3,
                                                                 Str=<S,1*U><L,U><S,U>,
                                                                 Unf=OtherCon []] =
                                                                    sat-only [ptr_s90os
                                                                              $w$j_s90ot
                                                                              go_s90q5] \r [ds7_s90q6
                                                                                            ds8_s90q7
                                                                                            void_0E]
                                                                        case ds7_s90q6 of {
                                                                          [] ->
                                                                              $w$j_s90ot
                                                                                  GHC.Prim.void#;
                                                                          : val_s90qa [Occ=Once!]
                                                                            vals_s90qb [Occ=Once] ->
                                                                              case val_s90qa of {
                                                                                GHC.Types.C# x_s90qd [Occ=Once] ->
                                                                                    case
                                                                                        writeWideCharOffAddr# [ptr_s90os
                                                                                                               ds8_s90q7
                                                                                                               x_s90qd
                                                                                                               GHC.Prim.void#]
                                                                                    of
                                                                                    s2_s90qe
                                                                                    { (##) ->
                                                                                          case
                                                                                              +# [ds8_s90q7
                                                                                                  1#]
                                                                                          of
                                                                                          sat_s90qf
                                                                                          { __DEFAULT ->
                                                                                                go_s90q5
                                                                                                    vals_s90qb
                                                                                                    sat_s90qf
                                                                                                    GHC.Prim.void#;
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                              } in 
                                                                go_s90q5 s_s90o9 0# GHC.Prim.void#;
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in 
                      GHC.IO.bracket1
                          ds4_s90oh GHC.IO.Encoding.Types.close sat_s90qg GHC.Prim.void#;
              };
        };

Foreign.C.String.newCStringLen
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CStringLen
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.newCStringLen1 eta_B2 GHC.Prim.void#;

Foreign.C.String.newCString1
  :: GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Foreign.CString #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [s_s90qh void_0E]
        case GHC.IO.Encoding.getForeignEncoding GHC.Prim.void# of {
          Unit# ipv1_s90ql [Occ=Once] ->
              GHC.Foreign.newCString1 ipv1_s90ql s_s90qh GHC.Prim.void#;
        };

Foreign.C.String.newCString
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CString
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.newCString1 eta_B2 GHC.Prim.void#;

Foreign.C.String.peekCStringLen1
  :: Foreign.C.String.CStringLen
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=2,
 Str=<L,1*U(1*U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [s_s90qm void_0E]
        case GHC.IO.Encoding.getForeignEncoding GHC.Prim.void# of {
          Unit# ipv1_s90qq [Occ=Once!] ->
              case ipv1_s90qq of {
                GHC.IO.Encoding.Types.TextEncoding _ [Occ=Dead]
                                                   ds3_s90qt [Occ=Once]
                                                   _ [Occ=Dead] ->
                    case s_s90qm of {
                      (,) p_s90qw [Occ=Once] sz_bytes_s90qx [Occ=Once!] ->
                          let {
                            sat_s90sP [Occ=Once]
                              :: GHC.IO.Encoding.Types.TextDecoder dstate_a8RPc
                                 -> GHC.Types.IO [GHC.IO.Buffer.CharBufElem]
                            [LclId] =
                                [p_s90qw sz_bytes_s90qx] \r [decoder_s90qy void_0E]
                                    case p_s90qw of {
                                      GHC.Ptr.Ptr obj_s90qB [Occ=Once] ->
                                          case
                                              newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                          GHC.Prim.void#]
                                          of
                                          { Unit# ipv3_s90qE [Occ=Once] ->
                                                case sz_bytes_s90qx of {
                                                  GHC.Types.I# x1_s90qG ->
                                                      let-no-escape {
                                                        $j_s90qH [Occ=Once*!T[1],
                                                                  Dmd=<C(S),1*C1(U)>]
                                                          :: GHC.Prim.Int#
                                                             -> (# GHC.Prim.State#
                                                                     GHC.Prim.RealWorld,
                                                                   [GHC.IO.Buffer.CharBufElem] #)
                                                        [LclId[JoinId(1)],
                                                         Arity=1,
                                                         Str=<S,U>,
                                                         Unf=OtherCon []] =
                                                            sat-only [decoder_s90qy
                                                                      obj_s90qB
                                                                      ipv3_s90qE
                                                                      x1_s90qG] \r [x_s90qI]
                                                                case
                                                                    *# [x_s90qI 4#]
                                                                of
                                                                x2_s90qJ [Dmd=<S,U>]
                                                                { __DEFAULT ->
                                                                      case <# [x2_s90qJ 0#] of {
                                                                        __DEFAULT ->
                                                                            case
                                                                                newMutVar# [GHC.ForeignPtr.NoFinalizers
                                                                                            GHC.Prim.void#]
                                                                            of
                                                                            { Unit# ipv5_s90qN [Occ=OnceL] ->
                                                                                  case
                                                                                      newPinnedByteArray# [x2_s90qJ
                                                                                                           GHC.Prim.void#]
                                                                                  of
                                                                                  { Unit# ipv7_s90qQ ->
                                                                                        case
                                                                                            byteArrayContents# [ipv7_s90qQ]
                                                                                        of
                                                                                        ipv8_s90qR
                                                                                        { __DEFAULT ->
                                                                                              let {
                                                                                                ipv9_s90qS [Occ=OnceL]
                                                                                                  :: GHC.ForeignPtr.ForeignPtrContents
                                                                                                [LclId,
                                                                                                 Unf=OtherCon []] =
                                                                                                    CCCS GHC.ForeignPtr.MallocPtr! [ipv7_s90qQ
                                                                                                                                    ipv5_s90qN]; } in
                                                                                              let {
                                                                                                ipv10_s90qT [Occ=OnceL]
                                                                                                  :: GHC.IO.Buffer.CharBuffer
                                                                                                [LclId,
                                                                                                 Unf=OtherCon []] =
                                                                                                    CCCS GHC.IO.Buffer.Buffer! [ipv8_s90qR
                                                                                                                                ipv9_s90qS
                                                                                                                                GHC.IO.Buffer.WriteBuffer
                                                                                                                                x_s90qI
                                                                                                                                0#
                                                                                                                                0#]; } in
                                                                                              let {
                                                                                                $wgo_s90qU [InlPrag=NOUSERINLINE[0],
                                                                                                            Occ=LoopBreaker]
                                                                                                  :: GHC.IO.Buffer.Buffer
                                                                                                       GHC.Word.Word8
                                                                                                     -> GHC.Prim.State#
                                                                                                          GHC.Prim.RealWorld
                                                                                                     -> (# GHC.Prim.State#
                                                                                                             GHC.Prim.RealWorld,
                                                                                                           [GHC.IO.Buffer.CharBufElem] #)
                                                                                                [LclId,
                                                                                                 Arity=2,
                                                                                                 Str=<L,U><S,U>,
                                                                                                 Unf=OtherCon []] =
                                                                                                    sat-only [decoder_s90qy
                                                                                                              ipv10_s90qT
                                                                                                              $wgo_s90qU] \r [w_s90qV
                                                                                                                              void_0E]
                                                                                                        case
                                                                                                            decoder_s90qy
                                                                                                        of
                                                                                                        { GHC.IO.Encoding.Types.BufferCodec ds8_s90qY [Occ=Once!]
                                                                                                                                            ds9_s90qZ [Occ=Once!]
                                                                                                                                            _ [Occ=Dead]
                                                                                                                                            _ [Occ=Dead]
                                                                                                                                            _ [Occ=Dead] ->
                                                                                                              case
                                                                                                                  ds8_s90qY
                                                                                                                      w_s90qV
                                                                                                                      ipv10_s90qT
                                                                                                                      GHC.Prim.void#
                                                                                                              of
                                                                                                              { Unit# ipv12_s90r5 [Occ=Once!] ->
                                                                                                                    case
                                                                                                                        ipv12_s90r5
                                                                                                                    of
                                                                                                                    { (,,) why_s90r7 [Occ=Once!]
                                                                                                                           from'_s90r8 [Occ=Once!]
                                                                                                                           to'_s90r9 [Occ=Once*] ->
                                                                                                                          case
                                                                                                                              from'_s90r8
                                                                                                                          of
                                                                                                                          wild6_s90ra
                                                                                                                          { GHC.IO.Buffer.Buffer _ [Occ=Dead]
                                                                                                                                                 _ [Occ=Dead]
                                                                                                                                                 _ [Occ=Dead]
                                                                                                                                                 _ [Occ=Dead]
                                                                                                                                                 dt3_s90rf [Occ=Once]
                                                                                                                                                 dt4_s90rg [Occ=Once] ->
                                                                                                                                case
                                                                                                                                    ==# [dt3_s90rf
                                                                                                                                         dt4_s90rg]
                                                                                                                                of
                                                                                                                                { __DEFAULT ->
                                                                                                                                      let-no-escape {
                                                                                                                                        $w$j1_s90ri [InlPrag=NOUSERINLINE[0],
                                                                                                                                                     Occ=Once*!T[6],
                                                                                                                                                     Dmd=<L,1*C1(C1(C1(C1(C1(C1(U(U,U)))))))>]
                                                                                                                                          :: GHC.Prim.State#
                                                                                                                                               GHC.Prim.RealWorld
                                                                                                                                             -> GHC.IO.Buffer.Buffer
                                                                                                                                                  GHC.Word.Word8
                                                                                                                                             -> GHC.Prim.Addr#
                                                                                                                                             -> GHC.ForeignPtr.ForeignPtrContents
                                                                                                                                             -> GHC.Prim.Int#
                                                                                                                                             -> GHC.Prim.Int#
                                                                                                                                             -> (# GHC.Prim.State#
                                                                                                                                                     GHC.Prim.RealWorld,
                                                                                                                                                   [GHC.IO.Buffer.CharBufElem] #)
                                                                                                                                        [LclId[JoinId(6)],
                                                                                                                                         Arity=6,
                                                                                                                                         Str=<S,U><L,U><L,U><L,U><S,U><S,U>,
                                                                                                                                         Unf=OtherCon []] =
                                                                                                                                            sat-only [$wgo_s90qU] \r [void_0E
                                                                                                                                                                      ww_s90rk
                                                                                                                                                                      ww1_s90rl
                                                                                                                                                                      ww2_s90rm
                                                                                                                                                                      ww3_s90rn
                                                                                                                                                                      ww4_s90ro]
                                                                                                                                                case
                                                                                                                                                    -# [ww4_s90ro
                                                                                                                                                        ww3_s90rn]
                                                                                                                                                of
                                                                                                                                                ww5_s90rp [Dmd=<S,U>]
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      case
                                                                                                                                                          <=# [ww5_s90rp
                                                                                                                                                               0#]
                                                                                                                                                      of
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            case
                                                                                                                                                                -# [ww5_s90rp
                                                                                                                                                                    1#]
                                                                                                                                                            of
                                                                                                                                                            sat_s90rP
                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                  let-no-escape {
                                                                                                                                                                    exit_s90rr [Occ=OnceL!T[2],
                                                                                                                                                                                Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                                                                                                                                                      :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                         -> GHC.Prim.State#
                                                                                                                                                                              GHC.Prim.RealWorld
                                                                                                                                                                         -> (# GHC.Prim.State#
                                                                                                                                                                                 GHC.Prim.RealWorld,
                                                                                                                                                                               [GHC.IO.Buffer.CharBufElem] #)
                                                                                                                                                                    [LclId[JoinId(2)],
                                                                                                                                                                     Arity=2,
                                                                                                                                                                     Str=<L,U><S,U>,
                                                                                                                                                                     Unf=OtherCon []] =
                                                                                                                                                                        sat-only [$wgo_s90qU
                                                                                                                                                                                  ww_s90rk
                                                                                                                                                                                  ww1_s90rl
                                                                                                                                                                                  ww2_s90rm] \r [w3_s90rs
                                                                                                                                                                                                 void_0E]
                                                                                                                                                                            case
                                                                                                                                                                                readWideCharOffAddr# [ww1_s90rl
                                                                                                                                                                                                      0#
                                                                                                                                                                                                      GHC.Prim.void#]
                                                                                                                                                                            of
                                                                                                                                                                            { Unit# ipv14_s90rw [Occ=Once] ->
                                                                                                                                                                                  case
                                                                                                                                                                                      touch# [ww2_s90rm
                                                                                                                                                                                              GHC.Prim.void#]
                                                                                                                                                                                  of
                                                                                                                                                                                  s'_s90rx
                                                                                                                                                                                  { (##) ->
                                                                                                                                                                                        case
                                                                                                                                                                                            $wgo_s90qU
                                                                                                                                                                                                ww_s90rk
                                                                                                                                                                                                GHC.Prim.void#
                                                                                                                                                                                        of
                                                                                                                                                                                        { Unit# ipv16_s90rA [Occ=Once] ->
                                                                                                                                                                                              let {
                                                                                                                                                                                                sat_s90rD [Occ=Once]
                                                                                                                                                                                                  :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                                                [LclId] =
                                                                                                                                                                                                    [w3_s90rs
                                                                                                                                                                                                     ipv14_s90rw
                                                                                                                                                                                                     ipv16_s90rA] \u []
                                                                                                                                                                                                        let {
                                                                                                                                                                                                          sat_s90rB [Occ=Once]
                                                                                                                                                                                                            :: GHC.IO.Buffer.CharBufElem
                                                                                                                                                                                                          [LclId] =
                                                                                                                                                                                                              CCCS GHC.Types.C#! [ipv14_s90rw]; } in
                                                                                                                                                                                                        let {
                                                                                                                                                                                                          sat_s90rC [Occ=Once]
                                                                                                                                                                                                            :: [GHC.Types.Char]
                                                                                                                                                                                                          [LclId] =
                                                                                                                                                                                                              CCCS :! [sat_s90rB
                                                                                                                                                                                                                       w3_s90rs];
                                                                                                                                                                                                        } in 
                                                                                                                                                                                                          GHC.Base.++
                                                                                                                                                                                                              sat_s90rC
                                                                                                                                                                                                              ipv16_s90rA;
                                                                                                                                                                                              } in 
                                                                                                                                                                                                Unit# [sat_s90rD];
                                                                                                                                                                                        };
                                                                                                                                                                                  };
                                                                                                                                                                            };
                                                                                                                                                                  } in 
                                                                                                                                                                    let-no-escape {
                                                                                                                                                                      $wf_s90rE [InlPrag=NOUSERINLINE[0],
                                                                                                                                                                                 Occ=LoopBreakerT[3]]
                                                                                                                                                                        :: GHC.Prim.Int#
                                                                                                                                                                           -> [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                           -> GHC.Prim.State#
                                                                                                                                                                                GHC.Prim.RealWorld
                                                                                                                                                                           -> (# GHC.Prim.State#
                                                                                                                                                                                   GHC.Prim.RealWorld,
                                                                                                                                                                                 [GHC.IO.Buffer.CharBufElem] #)
                                                                                                                                                                      [LclId[JoinId(3)],
                                                                                                                                                                       Arity=3,
                                                                                                                                                                       Str=<S,1*U><L,U><S,U>,
                                                                                                                                                                       Unf=OtherCon []] =
                                                                                                                                                                          sat-only [ww1_s90rl
                                                                                                                                                                                    exit_s90rr
                                                                                                                                                                                    $wf_s90rE] \r [ww6_s90rF
                                                                                                                                                                                                   w3_s90rG
                                                                                                                                                                                                   void_0E]
                                                                                                                                                                              case
                                                                                                                                                                                  ww6_s90rF
                                                                                                                                                                              of
                                                                                                                                                                              ds_s90rI
                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                    case
                                                                                                                                                                                        readWideCharOffAddr# [ww1_s90rl
                                                                                                                                                                                                              ds_s90rI
                                                                                                                                                                                                              GHC.Prim.void#]
                                                                                                                                                                                    of
                                                                                                                                                                                    { Unit# ipv14_s90rL [Occ=Once] ->
                                                                                                                                                                                          let {
                                                                                                                                                                                            sat_s90rN [Occ=Once]
                                                                                                                                                                                              :: GHC.IO.Buffer.CharBufElem
                                                                                                                                                                                            [LclId] =
                                                                                                                                                                                                CCCS GHC.Types.C#! [ipv14_s90rL]; } in
                                                                                                                                                                                          let {
                                                                                                                                                                                            sat_s90rO [Occ=Once]
                                                                                                                                                                                              :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                                            [LclId] =
                                                                                                                                                                                                CCCS :! [sat_s90rN
                                                                                                                                                                                                         w3_s90rG];
                                                                                                                                                                                          } in 
                                                                                                                                                                                            case
                                                                                                                                                                                                -# [ds_s90rI
                                                                                                                                                                                                    1#]
                                                                                                                                                                                            of
                                                                                                                                                                                            sat_s90rM
                                                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                                                  $wf_s90rE
                                                                                                                                                                                                      sat_s90rM
                                                                                                                                                                                                      sat_s90rO
                                                                                                                                                                                                      GHC.Prim.void#;
                                                                                                                                                                                            };
                                                                                                                                                                                    };
                                                                                                                                                                                0# ->
                                                                                                                                                                                    exit_s90rr
                                                                                                                                                                                        w3_s90rG
                                                                                                                                                                                        GHC.Prim.void#;
                                                                                                                                                                              };
                                                                                                                                                                    } in 
                                                                                                                                                                      $wf_s90rE
                                                                                                                                                                          sat_s90rP
                                                                                                                                                                          GHC.Types.[]
                                                                                                                                                                          GHC.Prim.void#;
                                                                                                                                                            };
                                                                                                                                                        1# ->
                                                                                                                                                            case
                                                                                                                                                                touch# [ww2_s90rm
                                                                                                                                                                        GHC.Prim.void#]
                                                                                                                                                            of
                                                                                                                                                            s'_s90rQ
                                                                                                                                                            { (##) ->
                                                                                                                                                                  case
                                                                                                                                                                      $wgo_s90qU
                                                                                                                                                                          ww_s90rk
                                                                                                                                                                          GHC.Prim.void#
                                                                                                                                                                  of
                                                                                                                                                                  { Unit# ipv16_s90rT [Occ=Once] ->
                                                                                                                                                                        let {
                                                                                                                                                                          sat_s90rU [Occ=Once]
                                                                                                                                                                            :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                          [LclId] =
                                                                                                                                                                              [ipv16_s90rT] \u []
                                                                                                                                                                                  GHC.Base.++
                                                                                                                                                                                      GHC.Types.[]
                                                                                                                                                                                      ipv16_s90rT;
                                                                                                                                                                        } in 
                                                                                                                                                                          Unit# [sat_s90rU];
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                      } in 
                                                                                                                                        case
                                                                                                                                            why_s90r7
                                                                                                                                        of
                                                                                                                                        { __DEFAULT ->
                                                                                                                                              case
                                                                                                                                                  ds9_s90qZ
                                                                                                                                                      wild6_s90ra
                                                                                                                                                      to'_s90r9
                                                                                                                                                      GHC.Prim.void#
                                                                                                                                              of
                                                                                                                                              { Unit# ipv14_s90rY [Occ=Once!] ->
                                                                                                                                                    case
                                                                                                                                                        ipv14_s90rY
                                                                                                                                                    of
                                                                                                                                                    { (,) ww1_s90s0 [Occ=Once]
                                                                                                                                                          ww2_s90s1 [Occ=Once!] ->
                                                                                                                                                          case
                                                                                                                                                              ww2_s90s1
                                                                                                                                                          of
                                                                                                                                                          { GHC.IO.Buffer.Buffer ww4_s90s3 [Occ=Once]
                                                                                                                                                                                 ww5_s90s4 [Occ=Once]
                                                                                                                                                                                 _ [Occ=Dead]
                                                                                                                                                                                 _ [Occ=Dead]
                                                                                                                                                                                 ww8_s90s7 [Occ=Once]
                                                                                                                                                                                 ww9_s90s8 [Occ=Once] ->
                                                                                                                                                                $w$j1_s90ri
                                                                                                                                                                    GHC.Prim.void#
                                                                                                                                                                    ww1_s90s0
                                                                                                                                                                    ww4_s90s3
                                                                                                                                                                    ww5_s90s4
                                                                                                                                                                    ww8_s90s7
                                                                                                                                                                    ww9_s90s8;
                                                                                                                                                          };
                                                                                                                                                    };
                                                                                                                                              };
                                                                                                                                          GHC.IO.Encoding.Types.OutputUnderflow ->
                                                                                                                                              case
                                                                                                                                                  to'_s90r9
                                                                                                                                              of
                                                                                                                                              { GHC.IO.Buffer.Buffer ww1_s90sa [Occ=Once]
                                                                                                                                                                     ww2_s90sb [Occ=Once]
                                                                                                                                                                     _ [Occ=Dead]
                                                                                                                                                                     _ [Occ=Dead]
                                                                                                                                                                     ww5_s90se [Occ=Once]
                                                                                                                                                                     ww6_s90sf [Occ=Once] ->
                                                                                                                                                    $w$j1_s90ri
                                                                                                                                                        GHC.Prim.void#
                                                                                                                                                        wild6_s90ra
                                                                                                                                                        ww1_s90sa
                                                                                                                                                        ww2_s90sb
                                                                                                                                                        ww5_s90se
                                                                                                                                                        ww6_s90sf;
                                                                                                                                              };
                                                                                                                                        };
                                                                                                                                  1# ->
                                                                                                                                      case
                                                                                                                                          to'_s90r9
                                                                                                                                      of
                                                                                                                                      { GHC.IO.Buffer.Buffer dt7_s90sh
                                                                                                                                                             dt8_s90si [Occ=Once*]
                                                                                                                                                             _ [Occ=Dead]
                                                                                                                                                             _ [Occ=Dead]
                                                                                                                                                             dt10_s90sl [Occ=Once]
                                                                                                                                                             dt11_s90sm [Occ=Once] ->
                                                                                                                                            case
                                                                                                                                                -# [dt11_s90sm
                                                                                                                                                    dt10_s90sl]
                                                                                                                                            of
                                                                                                                                            ww_s90sn [Dmd=<S,U>]
                                                                                                                                            { __DEFAULT ->
                                                                                                                                                  case
                                                                                                                                                      <=# [ww_s90sn
                                                                                                                                                           0#]
                                                                                                                                                  of
                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                        case
                                                                                                                                                            -# [ww_s90sn
                                                                                                                                                                1#]
                                                                                                                                                        of
                                                                                                                                                        sat_s90sJ
                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                              let-no-escape {
                                                                                                                                                                exit_s90sp [Occ=OnceL!T[2],
                                                                                                                                                                            Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                                                                                                                                                  :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                     -> GHC.Prim.State#
                                                                                                                                                                          GHC.Prim.RealWorld
                                                                                                                                                                     -> (# GHC.Prim.State#
                                                                                                                                                                             GHC.Prim.RealWorld,
                                                                                                                                                                           [GHC.IO.Buffer.CharBufElem] #)
                                                                                                                                                                [LclId[JoinId(2)],
                                                                                                                                                                 Arity=2,
                                                                                                                                                                 Str=<L,U><S,U>,
                                                                                                                                                                 Unf=OtherCon []] =
                                                                                                                                                                    sat-only [dt7_s90sh
                                                                                                                                                                              dt8_s90si] \r [w3_s90sq
                                                                                                                                                                                             void_0E]
                                                                                                                                                                        case
                                                                                                                                                                            readWideCharOffAddr# [dt7_s90sh
                                                                                                                                                                                                  0#
                                                                                                                                                                                                  GHC.Prim.void#]
                                                                                                                                                                        of
                                                                                                                                                                        { Unit# ipv14_s90su [Occ=Once] ->
                                                                                                                                                                              case
                                                                                                                                                                                  touch# [dt8_s90si
                                                                                                                                                                                          GHC.Prim.void#]
                                                                                                                                                                              of
                                                                                                                                                                              s'_s90sv
                                                                                                                                                                              { (##) ->
                                                                                                                                                                                    let {
                                                                                                                                                                                      sat_s90sw [Occ=Once]
                                                                                                                                                                                        :: GHC.IO.Buffer.CharBufElem
                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                          CCCS GHC.Types.C#! [ipv14_s90su]; } in
                                                                                                                                                                                    let {
                                                                                                                                                                                      sat_s90sx [Occ=Once]
                                                                                                                                                                                        :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                          CCCS :! [sat_s90sw
                                                                                                                                                                                                   w3_s90sq];
                                                                                                                                                                                    } in 
                                                                                                                                                                                      Unit# [sat_s90sx];
                                                                                                                                                                              };
                                                                                                                                                                        };
                                                                                                                                                              } in 
                                                                                                                                                                let-no-escape {
                                                                                                                                                                  $wf_s90sy [InlPrag=NOUSERINLINE[0],
                                                                                                                                                                             Occ=LoopBreakerT[3]]
                                                                                                                                                                    :: GHC.Prim.Int#
                                                                                                                                                                       -> [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                       -> GHC.Prim.State#
                                                                                                                                                                            GHC.Prim.RealWorld
                                                                                                                                                                       -> (# GHC.Prim.State#
                                                                                                                                                                               GHC.Prim.RealWorld,
                                                                                                                                                                             [GHC.IO.Buffer.CharBufElem] #)
                                                                                                                                                                  [LclId[JoinId(3)],
                                                                                                                                                                   Arity=3,
                                                                                                                                                                   Str=<S,1*U><L,U><S,U>,
                                                                                                                                                                   Unf=OtherCon []] =
                                                                                                                                                                      sat-only [dt7_s90sh
                                                                                                                                                                                exit_s90sp
                                                                                                                                                                                $wf_s90sy] \r [ww1_s90sz
                                                                                                                                                                                               w3_s90sA
                                                                                                                                                                                               void_0E]
                                                                                                                                                                          case
                                                                                                                                                                              ww1_s90sz
                                                                                                                                                                          of
                                                                                                                                                                          ds_s90sC
                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                case
                                                                                                                                                                                    readWideCharOffAddr# [dt7_s90sh
                                                                                                                                                                                                          ds_s90sC
                                                                                                                                                                                                          GHC.Prim.void#]
                                                                                                                                                                                of
                                                                                                                                                                                { Unit# ipv14_s90sF [Occ=Once] ->
                                                                                                                                                                                      let {
                                                                                                                                                                                        sat_s90sH [Occ=Once]
                                                                                                                                                                                          :: GHC.IO.Buffer.CharBufElem
                                                                                                                                                                                        [LclId] =
                                                                                                                                                                                            CCCS GHC.Types.C#! [ipv14_s90sF]; } in
                                                                                                                                                                                      let {
                                                                                                                                                                                        sat_s90sI [Occ=Once]
                                                                                                                                                                                          :: [GHC.IO.Buffer.CharBufElem]
                                                                                                                                                                                        [LclId] =
                                                                                                                                                                                            CCCS :! [sat_s90sH
                                                                                                                                                                                                     w3_s90sA];
                                                                                                                                                                                      } in 
                                                                                                                                                                                        case
                                                                                                                                                                                            -# [ds_s90sC
                                                                                                                                                                                                1#]
                                                                                                                                                                                        of
                                                                                                                                                                                        sat_s90sG
                                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                                              $wf_s90sy
                                                                                                                                                                                                  sat_s90sG
                                                                                                                                                                                                  sat_s90sI
                                                                                                                                                                                                  GHC.Prim.void#;
                                                                                                                                                                                        };
                                                                                                                                                                                };
                                                                                                                                                                            0# ->
                                                                                                                                                                                exit_s90sp
                                                                                                                                                                                    w3_s90sA
                                                                                                                                                                                    GHC.Prim.void#;
                                                                                                                                                                          };
                                                                                                                                                                } in 
                                                                                                                                                                  $wf_s90sy
                                                                                                                                                                      sat_s90sJ
                                                                                                                                                                      GHC.Types.[]
                                                                                                                                                                      GHC.Prim.void#;
                                                                                                                                                        };
                                                                                                                                                    1# ->
                                                                                                                                                        case
                                                                                                                                                            touch# [dt8_s90si
                                                                                                                                                                    GHC.Prim.void#]
                                                                                                                                                        of
                                                                                                                                                        s'_s90sK
                                                                                                                                                        { (##) ->
                                                                                                                                                              Unit# [GHC.Types.[]];
                                                                                                                                                        };
                                                                                                                                                  };
                                                                                                                                            };
                                                                                                                                      };
                                                                                                                                };
                                                                                                                          };
                                                                                                                    };
                                                                                                              };
                                                                                                        }; } in
                                                                                              let {
                                                                                                sat_s90sL [Occ=Once]
                                                                                                  :: GHC.ForeignPtr.ForeignPtrContents
                                                                                                [LclId] =
                                                                                                    CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv3_s90qE]; } in
                                                                                              let {
                                                                                                sat_s90sM [Occ=Once]
                                                                                                  :: GHC.IO.Buffer.Buffer
                                                                                                       GHC.Word.Word8
                                                                                                [LclId] =
                                                                                                    CCCS GHC.IO.Buffer.Buffer! [obj_s90qB
                                                                                                                                sat_s90sL
                                                                                                                                GHC.IO.Buffer.ReadBuffer
                                                                                                                                x1_s90qG
                                                                                                                                0#
                                                                                                                                x1_s90qG];
                                                                                              } in 
                                                                                                $wgo_s90qU
                                                                                                    sat_s90sM
                                                                                                    GHC.Prim.void#;
                                                                                        };
                                                                                  };
                                                                            };
                                                                        1# ->
                                                                            GHC.ForeignPtr.mallocForeignPtrBytes2;
                                                                      };
                                                                };
                                                      } in 
                                                        case <=# [x1_s90qG 1#] of {
                                                          __DEFAULT -> $j_s90qH x1_s90qG;
                                                          1# -> $j_s90qH 1#;
                                                        };
                                                };
                                          };
                                    };
                          } in 
                            GHC.IO.bracket1
                                ds3_s90qt GHC.IO.Encoding.Types.close sat_s90sP GHC.Prim.void#;
                    };
              };
        };

Foreign.C.String.peekCStringLen
  :: Foreign.C.String.CStringLen -> GHC.Types.IO GHC.Base.String
[GblId,
 Arity=2,
 Str=<L,1*U(1*U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.peekCStringLen1 eta_B2 GHC.Prim.void#;

Foreign.C.String.peekCString1
  :: Foreign.C.String.CString
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<L,1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [s_s90sQ void_0E]
        case GHC.IO.Encoding.getForeignEncoding GHC.Prim.void# of {
          Unit# ipv1_s90sU [Occ=Once] ->
              GHC.Foreign.peekCString1 ipv1_s90sU s_s90sQ GHC.Prim.void#;
        };

Foreign.C.String.peekCString
  :: Foreign.C.String.CString -> GHC.Types.IO GHC.Base.String
[GblId, Arity=2, Str=<L,1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.peekCString1 eta_B2 GHC.Prim.void#;

Foreign.C.String.castCSCharToChar
  :: Foreign.C.Types.CSChar -> GHC.Types.Char
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s90sV]
        case ch_s90sV of {
          GHC.Int.I8# x#_s90sX [Occ=Once] ->
              case int2Word# [x#_s90sX] of sat_s90sY {
                __DEFAULT ->
                    case narrow8Word# [sat_s90sY] of sat_s90sZ {
                      __DEFAULT ->
                          case word2Int# [sat_s90sZ] of sat_s90t0 {
                            __DEFAULT ->
                                case chr# [sat_s90t0] of sat_s90t1 {
                                  __DEFAULT -> GHC.Types.C# [sat_s90t1];
                                };
                          };
                    };
              };
        };

Foreign.C.String.castCUCharToChar
  :: Foreign.C.Types.CUChar -> GHC.Types.Char
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s90t2]
        case ch_s90t2 of {
          GHC.Word.W8# x#_s90t4 [Occ=Once] ->
              case word2Int# [x#_s90t4] of sat_s90t5 {
                __DEFAULT ->
                    case chr# [sat_s90t5] of sat_s90t6 {
                      __DEFAULT -> GHC.Types.C# [sat_s90t6];
                    };
              };
        };

Foreign.C.String.castCCharToChar
  :: Foreign.C.Types.CChar -> GHC.Types.Char
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s90t7]
        case ch_s90t7 of {
          GHC.Int.I8# x#_s90t9 [Occ=Once] ->
              case int2Word# [x#_s90t9] of sat_s90ta {
                __DEFAULT ->
                    case narrow8Word# [sat_s90ta] of sat_s90tb {
                      __DEFAULT ->
                          case word2Int# [sat_s90tb] of sat_s90tc {
                            __DEFAULT ->
                                case chr# [sat_s90tc] of sat_s90td {
                                  __DEFAULT -> GHC.Types.C# [sat_s90td];
                                };
                          };
                    };
              };
        };

Foreign.C.String.$wpeekCAString [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Addr#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_s90te void_0E]
        let-no-escape {
          $w$j_s90tg [InlPrag=NOUSERINLINE[0],
                      Occ=OnceL!T[2],
                      Dmd=<C(C(S)),C(C1(U(U,U)))>]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> GHC.Prim.Int#
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
          [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
              sat-only [ww_s90te] \r [void_0E ww1_s90ti]
                  case <=# [ww1_s90ti 0#] of {
                    __DEFAULT ->
                        case -# [ww1_s90ti 1#] of sat_s90tF {
                          __DEFAULT ->
                              let-no-escape {
                                $wloop_s90tk [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                  :: [GHC.Types.Char]
                                     -> GHC.Prim.Int#
                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                                [LclId[JoinId(3)], Arity=3, Str=<L,U><S,U><S,U>, Unf=OtherCon []] =
                                    sat-only [ww_s90te $wloop_s90tk] \r [w2_s90tl ww2_s90tm void_0E]
                                        case
                                            readInt8OffAddr# [ww_s90te ww2_s90tm GHC.Prim.void#]
                                        of
                                        { Unit# ipv1_s90tq [Occ=Once*] ->
                                              case <=# [ww2_s90tm 0#] of {
                                                __DEFAULT ->
                                                    case -# [ww2_s90tm 1#] of sat_s90ty {
                                                      __DEFAULT ->
                                                          case int2Word# [ipv1_s90tq] of sat_s90ts {
                                                            __DEFAULT ->
                                                                case
                                                                    narrow8Word# [sat_s90ts]
                                                                of
                                                                sat_s90tt
                                                                { __DEFAULT ->
                                                                      case
                                                                          word2Int# [sat_s90tt]
                                                                      of
                                                                      sat_s90tu
                                                                      { __DEFAULT ->
                                                                            case
                                                                                chr# [sat_s90tu]
                                                                            of
                                                                            sat_s90tv
                                                                            { __DEFAULT ->
                                                                                  let {
                                                                                    sat_s90tw [Occ=Once]
                                                                                      :: GHC.Types.Char
                                                                                    [LclId] =
                                                                                        CCCS GHC.Types.C#! [sat_s90tv]; } in
                                                                                  let {
                                                                                    sat_s90tx [Occ=Once]
                                                                                      :: [GHC.Types.Char]
                                                                                    [LclId] =
                                                                                        CCCS :! [sat_s90tw
                                                                                                 w2_s90tl];
                                                                                  } in 
                                                                                    $wloop_s90tk
                                                                                        sat_s90tx
                                                                                        sat_s90ty
                                                                                        GHC.Prim.void#;
                                                                            };
                                                                      };
                                                                };
                                                          };
                                                    };
                                                1# ->
                                                    case int2Word# [ipv1_s90tq] of sat_s90tz {
                                                      __DEFAULT ->
                                                          case
                                                              narrow8Word# [sat_s90tz]
                                                          of
                                                          sat_s90tA
                                                          { __DEFAULT ->
                                                                case
                                                                    word2Int# [sat_s90tA]
                                                                of
                                                                sat_s90tB
                                                                { __DEFAULT ->
                                                                      case
                                                                          chr# [sat_s90tB]
                                                                      of
                                                                      sat_s90tC
                                                                      { __DEFAULT ->
                                                                            let {
                                                                              sat_s90tD [Occ=Once]
                                                                                :: GHC.Types.Char
                                                                              [LclId] =
                                                                                  CCCS GHC.Types.C#! [sat_s90tC]; } in
                                                                            let {
                                                                              sat_s90tE [Occ=Once]
                                                                                :: [GHC.Types.Char]
                                                                              [LclId] =
                                                                                  CCCS :! [sat_s90tD
                                                                                           w2_s90tl];
                                                                            } in  Unit# [sat_s90tE];
                                                                      };
                                                                };
                                                          };
                                                    };
                                              };
                                        };
                              } in  $wloop_s90tk GHC.Types.[] sat_s90tF GHC.Prim.void#;
                        };
                    1# -> Unit# [GHC.Types.[]];
                  };
        } in 
          let-no-escape {
            $wloop_s90tG [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[2]]
              :: GHC.Prim.Int#
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
            [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
                sat-only [ww_s90te $w$j_s90tg $wloop_s90tG] \r [ww1_s90tH void_0E]
                    case readInt8OffAddr# [ww_s90te ww1_s90tH GHC.Prim.void#] of {
                      Unit# ipv1_s90tL [Occ=Once!] ->
                          case ipv1_s90tL of {
                            __DEFAULT ->
                                case +# [ww1_s90tH 1#] of sat_s90tN {
                                  __DEFAULT -> $wloop_s90tG sat_s90tN GHC.Prim.void#;
                                };
                            0# -> $w$j_s90tg GHC.Prim.void# ww1_s90tH;
                          };
                    };
          } in  $wloop_s90tG 0# GHC.Prim.void#;

Foreign.C.String.peekCAString1 [InlPrag=NOUSERINLINE[0]]
  :: Foreign.C.String.CString
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s90tO void_0E]
        case w_s90tO of {
          GHC.Ptr.Ptr ww1_s90tR [Occ=Once] ->
              Foreign.C.String.$wpeekCAString ww1_s90tR GHC.Prim.void#;
        };

Foreign.C.String.peekCAString
  :: Foreign.C.String.CString -> GHC.Types.IO GHC.Base.String
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.peekCAString1 eta_B2 GHC.Prim.void#;

Foreign.C.String.$wpeekCAStringLen [InlPrag=NOUSERINLINE[0]]
  :: GHC.Ptr.Ptr Foreign.C.Types.CChar
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_s90tS ww1_s90tT void_0E]
        case <=# [ww1_s90tT 0#] of {
          __DEFAULT ->
              case -# [ww1_s90tT 1#] of sat_s90uj {
                __DEFAULT ->
                    let-no-escape {
                      $wloop_s90tW [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                        :: [GHC.Types.Char]
                           -> GHC.Prim.Int#
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                      [LclId[JoinId(3)], Arity=3, Str=<L,U><S,U><S,U>, Unf=OtherCon []] =
                          sat-only [ww_s90tS $wloop_s90tW] \r [w1_s90tX ww2_s90tY void_0E]
                              case ww_s90tS of {
                                GHC.Ptr.Ptr a_s90u1 [Occ=Once] ->
                                    case readInt8OffAddr# [a_s90u1 ww2_s90tY GHC.Prim.void#] of {
                                      Unit# ipv1_s90u4 [Occ=Once*] ->
                                          case ww2_s90tY of wild1_s90u5 {
                                            __DEFAULT ->
                                                case -# [wild1_s90u5 1#] of sat_s90uc {
                                                  __DEFAULT ->
                                                      case int2Word# [ipv1_s90u4] of sat_s90u6 {
                                                        __DEFAULT ->
                                                            case
                                                                narrow8Word# [sat_s90u6]
                                                            of
                                                            sat_s90u7
                                                            { __DEFAULT ->
                                                                  case
                                                                      word2Int# [sat_s90u7]
                                                                  of
                                                                  sat_s90u8
                                                                  { __DEFAULT ->
                                                                        case
                                                                            chr# [sat_s90u8]
                                                                        of
                                                                        sat_s90u9
                                                                        { __DEFAULT ->
                                                                              let {
                                                                                sat_s90ua [Occ=Once]
                                                                                  :: GHC.Types.Char
                                                                                [LclId] =
                                                                                    CCCS GHC.Types.C#! [sat_s90u9]; } in
                                                                              let {
                                                                                sat_s90ub [Occ=Once]
                                                                                  :: [GHC.Types.Char]
                                                                                [LclId] =
                                                                                    CCCS :! [sat_s90ua
                                                                                             w1_s90tX];
                                                                              } in 
                                                                                $wloop_s90tW
                                                                                    sat_s90ub
                                                                                    sat_s90uc
                                                                                    GHC.Prim.void#;
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                            0# ->
                                                case int2Word# [ipv1_s90u4] of sat_s90ud {
                                                  __DEFAULT ->
                                                      case narrow8Word# [sat_s90ud] of sat_s90ue {
                                                        __DEFAULT ->
                                                            case
                                                                word2Int# [sat_s90ue]
                                                            of
                                                            sat_s90uf
                                                            { __DEFAULT ->
                                                                  case
                                                                      chr# [sat_s90uf]
                                                                  of
                                                                  sat_s90ug
                                                                  { __DEFAULT ->
                                                                        let {
                                                                          sat_s90uh [Occ=Once]
                                                                            :: GHC.Types.Char
                                                                          [LclId] =
                                                                              CCCS GHC.Types.C#! [sat_s90ug]; } in
                                                                        let {
                                                                          sat_s90ui [Occ=Once]
                                                                            :: [GHC.Types.Char]
                                                                          [LclId] =
                                                                              CCCS :! [sat_s90uh
                                                                                       w1_s90tX];
                                                                        } in  Unit# [sat_s90ui];
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in  $wloop_s90tW GHC.Types.[] sat_s90uj GHC.Prim.void#;
              };
          1# -> Unit# [GHC.Types.[]];
        };

Foreign.C.String.peekCAStringLen1 [InlPrag=NOUSERINLINE[0]]
  :: (GHC.Ptr.Ptr Foreign.C.Types.CChar, GHC.Types.Int)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LS(S)),1*U(U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s90uk void_0E]
        case w_s90uk of {
          (,) ww1_s90un [Occ=Once] ww2_s90uo [Occ=Once!] ->
              case ww2_s90uo of {
                GHC.Types.I# ww4_s90uq [Occ=Once] ->
                    Foreign.C.String.$wpeekCAStringLen
                        ww1_s90un ww4_s90uq GHC.Prim.void#;
              };
        };

Foreign.C.String.peekCAStringLen
  :: Foreign.C.String.CStringLen -> GHC.Types.IO GHC.Base.String
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LS(S)),1*U(U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.peekCAStringLen1 eta_B2 GHC.Prim.void#;

Foreign.C.String.castCWcharToChar
  :: Foreign.C.Types.CWchar -> GHC.Types.Char
[GblId, Arity=1, Str=<S(S),1*U(U)>m, Unf=OtherCon []] =
    [] \r [ch_s90ur]
        case ch_s90ur of {
          GHC.Int.I32# x#_s90ut ->
              case int2Word# [x#_s90ut] of sat_s90uu {
                __DEFAULT ->
                    case leWord# [sat_s90uu 1114111##] of {
                      __DEFAULT -> GHC.Char.$wlvl x#_s90ut;
                      1# ->
                          case chr# [x#_s90ut] of sat_s90uw {
                            __DEFAULT -> GHC.Types.C# [sat_s90uw];
                          };
                    };
              };
        };

Foreign.C.String.peekCWString2 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.Base.map Foreign.C.String.castCWcharToChar GHC.Types.[];

Foreign.C.String.$wpeekCWStringLen [InlPrag=NOUSERINLINE[0]]
  :: GHC.Ptr.Ptr Foreign.C.Types.CWchar
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=3, Str=<L,U(U)><S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_s90ux ww1_s90uy void_0E]
        case <=# [ww1_s90uy 0#] of {
          __DEFAULT ->
              case -# [ww1_s90uy 1#] of sat_s90uZ {
                __DEFAULT ->
                    let-no-escape {
                      exit_s90uB [Occ=OnceL!T[2], Dmd=<C(C(S)),C(C1(U(U,U)))>]
                        :: [Foreign.C.Types.CWchar]
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                      [LclId[JoinId(2)], Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
                          sat-only [ww_s90ux] \r [w3_s90uC void_0E]
                              case ww_s90ux of {
                                GHC.Ptr.Ptr a_s90uF [Occ=Once] ->
                                    case readInt32OffAddr# [a_s90uF 0# GHC.Prim.void#] of {
                                      Unit# ipv1_s90uI [Occ=Once] ->
                                          let {
                                            sat_s90uL [Occ=Once] :: [GHC.Types.Char]
                                            [LclId] =
                                                [w3_s90uC ipv1_s90uI] \u []
                                                    let {
                                                      sat_s90uJ [Occ=Once] :: Foreign.C.Types.CWchar
                                                      [LclId] =
                                                          CCCS GHC.Int.I32#! [ipv1_s90uI]; } in
                                                    let {
                                                      sat_s90uK [Occ=Once]
                                                        :: [Foreign.C.Types.CWchar]
                                                      [LclId] =
                                                          CCCS :! [sat_s90uJ w3_s90uC];
                                                    } in 
                                                      GHC.Base.map
                                                          Foreign.C.String.castCWcharToChar
                                                          sat_s90uK;
                                          } in  Unit# [sat_s90uL];
                                    };
                              };
                    } in 
                      let-no-escape {
                        $wf_s90uM [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                          :: GHC.Prim.Int#
                             -> [Foreign.C.Types.CWchar]
                             -> GHC.Prim.State# GHC.Prim.RealWorld
                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                        [LclId[JoinId(3)],
                         Arity=3,
                         Str=<S,1*U><L,U><S,U>,
                         Unf=OtherCon []] =
                            sat-only [ww_s90ux exit_s90uB $wf_s90uM] \r [ww2_s90uN
                                                                         w3_s90uO
                                                                         void_0E]
                                case ww2_s90uN of ds_s90uQ {
                                  __DEFAULT ->
                                      case ww_s90ux of {
                                        GHC.Ptr.Ptr a_s90uS [Occ=Once] ->
                                            case
                                                readInt32OffAddr# [a_s90uS ds_s90uQ GHC.Prim.void#]
                                            of
                                            { Unit# ipv1_s90uV [Occ=Once] ->
                                                  let {
                                                    sat_s90uX [Occ=Once] :: Foreign.C.Types.CWchar
                                                    [LclId] =
                                                        CCCS GHC.Int.I32#! [ipv1_s90uV]; } in
                                                  let {
                                                    sat_s90uY [Occ=Once] :: [Foreign.C.Types.CWchar]
                                                    [LclId] =
                                                        CCCS :! [sat_s90uX w3_s90uO];
                                                  } in 
                                                    case -# [ds_s90uQ 1#] of sat_s90uW {
                                                      __DEFAULT ->
                                                          $wf_s90uM
                                                              sat_s90uW sat_s90uY GHC.Prim.void#;
                                                    };
                                            };
                                      };
                                  0# -> exit_s90uB w3_s90uO GHC.Prim.void#;
                                };
                      } in  $wf_s90uM sat_s90uZ GHC.Types.[] GHC.Prim.void#;
              };
          1# -> Unit# [Foreign.C.String.peekCWString2];
        };

Foreign.C.String.peekCWStringLen1 [InlPrag=NOUSERINLINE[0]]
  :: (GHC.Ptr.Ptr Foreign.C.Types.CWchar, GHC.Types.Int)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId,
 Arity=2,
 Str=<S(LS(S)),1*U(U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [w_s90v0 void_0E]
        case w_s90v0 of {
          (,) ww1_s90v3 [Occ=Once] ww2_s90v4 [Occ=Once!] ->
              case ww2_s90v4 of {
                GHC.Types.I# ww4_s90v6 [Occ=Once] ->
                    Foreign.C.String.$wpeekCWStringLen
                        ww1_s90v3 ww4_s90v6 GHC.Prim.void#;
              };
        };

Foreign.C.String.peekCWStringLen
  :: Foreign.C.String.CWStringLen -> GHC.Types.IO GHC.Base.String
[GblId,
 Arity=2,
 Str=<S(LS(S)),1*U(U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.peekCWStringLen1 eta_B2 GHC.Prim.void#;

Foreign.C.String.newCWString3 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [0#];

Foreign.C.String.$wpeekCWString [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Addr#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [ww_s90v7 void_0E]
        let-no-escape {
          $w$j_s90v9 [InlPrag=NOUSERINLINE[0],
                      Occ=OnceL!T[2],
                      Dmd=<C(C(S)),C(C1(U(U,U)))>]
            :: GHC.Prim.State# GHC.Prim.RealWorld
               -> GHC.Prim.Int#
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
          [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
              sat-only [ww_s90v7] \r [void_0E ww1_s90vb]
                  case <=# [ww1_s90vb 0#] of {
                    __DEFAULT ->
                        case -# [ww1_s90vb 1#] of sat_s90vx {
                          __DEFAULT ->
                              let-no-escape {
                                exit_s90vd [Occ=OnceL!T[2], Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                  :: [Foreign.C.Types.CWchar]
                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                                [LclId[JoinId(2)], Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
                                    sat-only [ww_s90v7] \r [w3_s90ve void_0E]
                                        case readInt32OffAddr# [ww_s90v7 0# GHC.Prim.void#] of {
                                          Unit# ipv1_s90vi [Occ=Once] ->
                                              let {
                                                sat_s90vl [Occ=Once] :: [GHC.Types.Char]
                                                [LclId] =
                                                    [w3_s90ve ipv1_s90vi] \u []
                                                        let {
                                                          sat_s90vj [Occ=Once]
                                                            :: Foreign.C.Types.CWchar
                                                          [LclId] =
                                                              CCCS GHC.Int.I32#! [ipv1_s90vi]; } in
                                                        let {
                                                          sat_s90vk [Occ=Once]
                                                            :: [Foreign.C.Types.CWchar]
                                                          [LclId] =
                                                              CCCS :! [sat_s90vj w3_s90ve];
                                                        } in 
                                                          GHC.Base.map
                                                              Foreign.C.String.castCWcharToChar
                                                              sat_s90vk;
                                              } in  Unit# [sat_s90vl];
                                        };
                              } in 
                                let-no-escape {
                                  $wf_s90vm [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                    :: GHC.Prim.Int#
                                       -> [Foreign.C.Types.CWchar]
                                       -> GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
                                  [LclId[JoinId(3)],
                                   Arity=3,
                                   Str=<S,1*U><L,U><S,U>,
                                   Unf=OtherCon []] =
                                      sat-only [ww_s90v7 exit_s90vd $wf_s90vm] \r [ww2_s90vn
                                                                                   w3_s90vo
                                                                                   void_0E]
                                          case ww2_s90vn of ds_s90vq {
                                            __DEFAULT ->
                                                case
                                                    readInt32OffAddr# [ww_s90v7
                                                                       ds_s90vq
                                                                       GHC.Prim.void#]
                                                of
                                                { Unit# ipv1_s90vt [Occ=Once] ->
                                                      let {
                                                        sat_s90vv [Occ=Once]
                                                          :: Foreign.C.Types.CWchar
                                                        [LclId] =
                                                            CCCS GHC.Int.I32#! [ipv1_s90vt]; } in
                                                      let {
                                                        sat_s90vw [Occ=Once]
                                                          :: [Foreign.C.Types.CWchar]
                                                        [LclId] =
                                                            CCCS :! [sat_s90vv w3_s90vo];
                                                      } in 
                                                        case -# [ds_s90vq 1#] of sat_s90vu {
                                                          __DEFAULT ->
                                                              $wf_s90vm
                                                                  sat_s90vu
                                                                  sat_s90vw
                                                                  GHC.Prim.void#;
                                                        };
                                                };
                                            0# -> exit_s90vd w3_s90vo GHC.Prim.void#;
                                          };
                                } in  $wf_s90vm sat_s90vx GHC.Types.[] GHC.Prim.void#;
                        };
                    1# -> Unit# [Foreign.C.String.peekCWString2];
                  };
        } in 
          let-no-escape {
            $wloop_s90vy [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[2]]
              :: GHC.Prim.Int#
                 -> GHC.Prim.State# GHC.Prim.RealWorld
                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
            [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
                sat-only [ww_s90v7 $w$j_s90v9 $wloop_s90vy] \r [ww1_s90vz void_0E]
                    case readInt32OffAddr# [ww_s90v7 ww1_s90vz GHC.Prim.void#] of {
                      Unit# ipv1_s90vD [Occ=Once!] ->
                          case ipv1_s90vD of {
                            __DEFAULT ->
                                case +# [ww1_s90vz 1#] of sat_s90vF {
                                  __DEFAULT -> $wloop_s90vy sat_s90vF GHC.Prim.void#;
                                };
                            0# -> $w$j_s90v9 GHC.Prim.void# ww1_s90vz;
                          };
                    };
          } in  $wloop_s90vy 0# GHC.Prim.void#;

Foreign.C.String.peekCWString1 [InlPrag=NOUSERINLINE[0]]
  :: Foreign.C.String.CWString
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [w_s90vG void_0E]
        case w_s90vG of {
          GHC.Ptr.Ptr ww1_s90vJ [Occ=Once] ->
              Foreign.C.String.$wpeekCWString ww1_s90vJ GHC.Prim.void#;
        };

Foreign.C.String.peekCWString
  :: Foreign.C.String.CWString -> GHC.Types.IO GHC.Base.String
[GblId, Arity=2, Str=<S(S),1*U(U)><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.peekCWString1 eta_B2 GHC.Prim.void#;

Foreign.C.String.newCWString2 :: GHC.Types.Char -> GHC.Int.Int32
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s90vK]
        case ch_s90vK of {
          GHC.Types.C# c#_s90vM [Occ=Once] ->
              case ord# [c#_s90vM] of sat_s90vN {
                __DEFAULT ->
                    case narrow32Int# [sat_s90vN] of sat_s90vO {
                      __DEFAULT -> GHC.Int.I32# [sat_s90vO];
                    };
              };
        };

Foreign.C.String.withCWStringLen1
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CWStringLen -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [str_s90vP f_s90vQ void_0E]
        case
            GHC.Base.map Foreign.C.String.newCWString2 str_s90vP
        of
        vals_s90vS [Dmd=<S,U>]
        { __DEFAULT ->
              case GHC.List.$wlenAcc vals_s90vS 0# of ww2_s90vT {
                __DEFAULT ->
                    case *# [ww2_s90vT 4#] of sat_s90vU {
                      __DEFAULT ->
                          case newAlignedPinnedByteArray# [sat_s90vU 4# GHC.Prim.void#] of {
                            Unit# ipv1_s90vX [Occ=Once] ->
                                case unsafeFreezeByteArray# [ipv1_s90vX GHC.Prim.void#] of {
                                  Unit# ipv3_s90w0 ->
                                      case byteArrayContents# [ipv3_s90w0] of ptr_s90w1 {
                                        __DEFAULT ->
                                            let-no-escape {
                                              exit_s90w2 [Occ=OnceL!T[1], Dmd=<C(S),C(U(U,U))>]
                                                :: GHC.Prim.State# GHC.Prim.RealWorld
                                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         a_a8WZM #)
                                              [LclId[JoinId(1)],
                                               Arity=1,
                                               Str=<S,U>,
                                               Unf=OtherCon []] =
                                                  sat-only [f_s90vQ
                                                            ww2_s90vT
                                                            ipv3_s90w0
                                                            ptr_s90w1] \r [void_0E]
                                                      let {
                                                        sat_s90w5 [Occ=Once] :: GHC.Types.Int
                                                        [LclId] =
                                                            CCCS GHC.Types.I#! [ww2_s90vT]; } in
                                                      let {
                                                        sat_s90w4 [Occ=Once]
                                                          :: GHC.Ptr.Ptr Foreign.C.Types.CWchar
                                                        [LclId] =
                                                            CCCS GHC.Ptr.Ptr! [ptr_s90w1]; } in
                                                      let {
                                                        sat_s90w6 [Occ=Once]
                                                          :: Foreign.C.String.CWStringLen
                                                        [LclId] =
                                                            CCCS (,)! [sat_s90w4 sat_s90w5];
                                                      } in 
                                                        case f_s90vQ sat_s90w6 GHC.Prim.void# of {
                                                          Unit# ipv5_s90w9 [Occ=Once] ->
                                                              case
                                                                  touch# [ipv3_s90w0 GHC.Prim.void#]
                                                              of
                                                              s4_s90wa
                                                              { (##) -> Unit# [ipv5_s90w9];
                                                              };
                                                        };
                                            } in 
                                              let-no-escape {
                                                go_s90wb [Occ=LoopBreakerT[3]]
                                                  :: [Foreign.C.Types.CWchar]
                                                     -> GHC.Prim.Int#
                                                     -> GHC.Prim.State# GHC.Prim.RealWorld
                                                     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                           a_a8WZM #)
                                                [LclId[JoinId(3)],
                                                 Arity=3,
                                                 Str=<S,1*U><L,U><S,U>,
                                                 Unf=OtherCon []] =
                                                    sat-only [ptr_s90w1
                                                              exit_s90w2
                                                              go_s90wb] \r [ds_s90wc
                                                                            ds1_s90wd
                                                                            void_0E]
                                                        case ds_s90wc of {
                                                          [] -> exit_s90w2 GHC.Prim.void#;
                                                          : val_s90wg [Occ=Once]
                                                            vals1_s90wh [Occ=Once] ->
                                                              case val_s90wg of {
                                                                GHC.Int.I32# x_s90wj [Occ=Once] ->
                                                                    case
                                                                        writeInt32OffAddr# [ptr_s90w1
                                                                                            ds1_s90wd
                                                                                            x_s90wj
                                                                                            GHC.Prim.void#]
                                                                    of
                                                                    s2_s90wk
                                                                    { (##) ->
                                                                          case
                                                                              +# [ds1_s90wd 1#]
                                                                          of
                                                                          sat_s90wl
                                                                          { __DEFAULT ->
                                                                                go_s90wb
                                                                                    vals1_s90wh
                                                                                    sat_s90wl
                                                                                    GHC.Prim.void#;
                                                                          };
                                                                    };
                                                              };
                                                        };
                                              } in  go_s90wb vals_s90vS 0# GHC.Prim.void#;
                                      };
                                };
                          };
                    };
              };
        };

Foreign.C.String.withCWStringLen
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CWStringLen -> GHC.Types.IO a)
     -> GHC.Types.IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.C.String.withCWStringLen1 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.String.withCWString
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CWString -> GHC.Types.IO a) -> GHC.Types.IO a
[GblId, Arity=1, Str=<L,1*U>, Unf=OtherCon []] =
    [] \r [x_s90wm]
        let {
          vals_s90wn [Occ=OnceL] :: [Foreign.C.Types.CWchar]
          [LclId] =
              [x_s90wm] \u []
                  GHC.Base.map Foreign.C.String.newCWString2 x_s90wm; } in
        let {
          sat_s90wr [Occ=OnceT[0]]
            :: (GHC.Ptr.Ptr Foreign.C.Types.CWchar -> GHC.Types.IO a_a8WZU)
               -> GHC.Types.IO a_a8WZU
          [LclId] =
              [vals_s90wn] \r [x1_s90wo]
                  let {
                    sat_s90wq [Occ=Once]
                      :: GHC.Types.Int
                         -> GHC.Ptr.Ptr Foreign.C.Types.CWchar -> GHC.Types.IO a_a8WZU
                    [LclId] =
                        [x1_s90wo] \r [ds_s90wp] x1_s90wo;
                  } in 
                    Foreign.Marshal.Array.withArrayLen0
                        Foreign.C.Types.$fStorableCWchar
                        Foreign.C.String.newCWString3
                        vals_s90wn
                        sat_s90wq;
        } in  sat_s90wr;

Foreign.C.String.newCWString1
  :: [GHC.Types.Char]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Ptr.Ptr Foreign.C.Types.CWchar #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [x_s90ws void_0E]
        case
            GHC.Base.map Foreign.C.String.newCWString2 x_s90ws
        of
        sat_s90wu
        { __DEFAULT ->
              Foreign.Marshal.Array.newArray3
                  Foreign.C.Types.$fStorableCWchar
                  Foreign.C.String.newCWString3
                  sat_s90wu
                  GHC.Prim.void#;
        };

Foreign.C.String.newCWString
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CWString
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.newCWString1 eta_B2 GHC.Prim.void#;

Foreign.C.String.newCWStringLen1
  :: GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (GHC.Ptr.Ptr Foreign.C.Types.CWchar, GHC.Types.Int) #)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [str_s90wv void_0E]
        case
            GHC.Base.map Foreign.C.String.newCWString2 str_s90wv
        of
        xs_s90wx [Dmd=<S,U>]
        { __DEFAULT ->
              case
                  Foreign.Marshal.Array.newArray1
                      Foreign.C.Types.$fStorableCWchar xs_s90wx GHC.Prim.void#
              of
              { Unit# ipv1_s90wA [Occ=Once] ->
                    let {
                      sat_s90wC [Occ=Once] :: GHC.Types.Int
                      [LclId] =
                          [xs_s90wx] \u []
                              case GHC.List.$wlenAcc xs_s90wx 0# of ww2_s90wB {
                                __DEFAULT -> GHC.Types.I# [ww2_s90wB];
                              }; } in
                    let {
                      sat_s90wD [Occ=Once]
                        :: (GHC.Ptr.Ptr Foreign.C.Types.CWchar, GHC.Types.Int)
                      [LclId] =
                          CCCS (,)! [ipv1_s90wA sat_s90wC];
                    } in  Unit# [sat_s90wD];
              };
        };

Foreign.C.String.newCWStringLen
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CWStringLen
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.newCWStringLen1 eta_B2 GHC.Prim.void#;

Foreign.C.String.castCharToCChar1 :: GHC.Types.Char -> GHC.Int.Int8
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s90wE]
        case ch_s90wE of {
          GHC.Types.C# c#_s90wG [Occ=Once] ->
              case ord# [c#_s90wG] of sat_s90wH {
                __DEFAULT ->
                    case narrow8Int# [sat_s90wH] of sat_s90wI {
                      __DEFAULT -> GHC.Int.I8# [sat_s90wI];
                    };
              };
        };

Foreign.C.String.castCharToCSChar
  :: GHC.Types.Char -> Foreign.C.Types.CSChar
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] Foreign.C.String.castCharToCChar1 eta_B1;

Foreign.C.String.castCharToCUChar1
  :: GHC.Types.Char -> GHC.Word.Word8
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [ch_s90wJ]
        case ch_s90wJ of {
          GHC.Types.C# c#_s90wL [Occ=Once] ->
              case ord# [c#_s90wL] of sat_s90wM {
                __DEFAULT ->
                    case int2Word# [sat_s90wM] of sat_s90wN {
                      __DEFAULT ->
                          case narrow8Word# [sat_s90wN] of sat_s90wO {
                            __DEFAULT -> GHC.Word.W8# [sat_s90wO];
                          };
                    };
              };
        };

Foreign.C.String.castCharToCUChar
  :: GHC.Types.Char -> Foreign.C.Types.CUChar
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] Foreign.C.String.castCharToCUChar1 eta_B1;

Foreign.C.String.castCharToCChar
  :: GHC.Types.Char -> Foreign.C.Types.CChar
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] Foreign.C.String.castCharToCChar1 eta_B1;

Foreign.C.String.newCAString1
  :: GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Foreign.C.String.CString #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [str_s90wP void_0E]
        case GHC.List.$wlenAcc str_s90wP 0# of ww2_s90wR {
          __DEFAULT ->
              case +# [ww2_s90wR 1#] of sat_s90wT {
                __DEFAULT ->
                    case int2Word# [sat_s90wT] of sat_s90wU {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [sat_s90wU GHC.Prim.void#] of {
                            Unit# ds1_s90wX ->
                                case eqAddr# [ds1_s90wX __NULL] of {
                                  __DEFAULT ->
                                      let-no-escape {
                                        exit_s90wZ [Occ=OnceL!T[2], Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                          :: GHC.Prim.Int#
                                             -> GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                   Foreign.C.String.CString #)
                                        [LclId[JoinId(2)],
                                         Arity=2,
                                         Str=<S,U><S,U>,
                                         Unf=OtherCon []] =
                                            sat-only [ds1_s90wX] \r [ww_s90x0 void_0E]
                                                case
                                                    writeInt8OffAddr# [ds1_s90wX
                                                                       ww_s90x0
                                                                       0#
                                                                       GHC.Prim.void#]
                                                of
                                                s2_s90x2
                                                { (##) ->
                                                      let {
                                                        sat_s90x3 [Occ=Once]
                                                          :: GHC.Ptr.Ptr Foreign.C.Types.CChar
                                                        [LclId] =
                                                            CCCS GHC.Ptr.Ptr! [ds1_s90wX];
                                                      } in  Unit# [sat_s90x3];
                                                };
                                      } in 
                                        let-no-escape {
                                          $wgo_s90x4 [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                            :: [GHC.Types.Char]
                                               -> GHC.Prim.Int#
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     Foreign.C.String.CString #)
                                          [LclId[JoinId(3)],
                                           Arity=3,
                                           Str=<S,1*U><S,U><S,U>,
                                           Unf=OtherCon []] =
                                              sat-only [ds1_s90wX exit_s90wZ $wgo_s90x4] \r [w_s90x5
                                                                                             ww_s90x6
                                                                                             void_0E]
                                                  case w_s90x5 of {
                                                    [] -> exit_s90wZ ww_s90x6 GHC.Prim.void#;
                                                    : c_s90x9 [Occ=Once!] cs_s90xa [Occ=Once] ->
                                                        case c_s90x9 of {
                                                          GHC.Types.C# c#_s90xc [Occ=Once] ->
                                                              case ord# [c#_s90xc] of sat_s90xd {
                                                                __DEFAULT ->
                                                                    case
                                                                        narrow8Int# [sat_s90xd]
                                                                    of
                                                                    sat_s90xe
                                                                    { __DEFAULT ->
                                                                          case
                                                                              writeInt8OffAddr# [ds1_s90wX
                                                                                                 ww_s90x6
                                                                                                 sat_s90xe
                                                                                                 GHC.Prim.void#]
                                                                          of
                                                                          s2_s90xf
                                                                          { (##) ->
                                                                                case
                                                                                    +# [ww_s90x6 1#]
                                                                                of
                                                                                sat_s90xg
                                                                                { __DEFAULT ->
                                                                                      $wgo_s90x4
                                                                                          cs_s90xa
                                                                                          sat_s90xg
                                                                                          GHC.Prim.void#;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                        } in  $wgo_s90x4 str_s90wP 0# GHC.Prim.void#;
                                  1# -> raiseIO# [Foreign.Marshal.Alloc.malloc1 GHC.Prim.void#];
                                };
                          };
                    };
              };
        };

Foreign.C.String.newCAString
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CString
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.newCAString1 eta_B2 GHC.Prim.void#;

Foreign.C.String.newCAStringLen1
  :: GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           Foreign.C.String.CStringLen #)
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [str_s90xh void_0E]
        case GHC.List.$wlenAcc str_s90xh 0# of ww2_s90xj {
          __DEFAULT ->
              case +# [ww2_s90xj 1#] of sat_s90xl {
                __DEFAULT ->
                    case int2Word# [sat_s90xl] of sat_s90xm {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [sat_s90xm GHC.Prim.void#] of {
                            Unit# ds1_s90xp ->
                                case eqAddr# [ds1_s90xp __NULL] of {
                                  __DEFAULT ->
                                      let-no-escape {
                                        exit_s90xr [Occ=OnceL!T[1], Dmd=<C(S),C(U(U,U))>]
                                          :: GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                   Foreign.C.String.CStringLen #)
                                        [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                            sat-only [ww2_s90xj ds1_s90xp] \r [void_0E]
                                                let {
                                                  sat_s90xu [Occ=Once] :: GHC.Types.Int
                                                  [LclId] =
                                                      CCCS GHC.Types.I#! [ww2_s90xj]; } in
                                                let {
                                                  sat_s90xt [Occ=Once]
                                                    :: GHC.Ptr.Ptr Foreign.C.Types.CChar
                                                  [LclId] =
                                                      CCCS GHC.Ptr.Ptr! [ds1_s90xp]; } in
                                                let {
                                                  sat_s90xv [Occ=Once]
                                                    :: (GHC.Ptr.Ptr Foreign.C.Types.CChar,
                                                        GHC.Types.Int)
                                                  [LclId] =
                                                      CCCS (,)! [sat_s90xt sat_s90xu];
                                                } in  Unit# [sat_s90xv];
                                      } in 
                                        let-no-escape {
                                          $wgo_s90xw [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                            :: [GHC.Types.Char]
                                               -> GHC.Prim.Int#
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     Foreign.C.String.CStringLen #)
                                          [LclId[JoinId(3)],
                                           Arity=3,
                                           Str=<S,1*U><L,U><S,U>,
                                           Unf=OtherCon []] =
                                              sat-only [ds1_s90xp exit_s90xr $wgo_s90xw] \r [w_s90xx
                                                                                             ww_s90xy
                                                                                             void_0E]
                                                  case w_s90xx of {
                                                    [] -> exit_s90xr GHC.Prim.void#;
                                                    : c_s90xB [Occ=Once!] cs_s90xC [Occ=Once] ->
                                                        case c_s90xB of {
                                                          GHC.Types.C# c#_s90xE [Occ=Once] ->
                                                              case ord# [c#_s90xE] of sat_s90xF {
                                                                __DEFAULT ->
                                                                    case
                                                                        narrow8Int# [sat_s90xF]
                                                                    of
                                                                    sat_s90xG
                                                                    { __DEFAULT ->
                                                                          case
                                                                              writeInt8OffAddr# [ds1_s90xp
                                                                                                 ww_s90xy
                                                                                                 sat_s90xG
                                                                                                 GHC.Prim.void#]
                                                                          of
                                                                          s2_s90xH
                                                                          { (##) ->
                                                                                case
                                                                                    +# [ww_s90xy 1#]
                                                                                of
                                                                                sat_s90xI
                                                                                { __DEFAULT ->
                                                                                      $wgo_s90xw
                                                                                          cs_s90xC
                                                                                          sat_s90xI
                                                                                          GHC.Prim.void#;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                        } in  $wgo_s90xw str_s90xh 0# GHC.Prim.void#;
                                  1# -> raiseIO# [Foreign.Marshal.Alloc.malloc1 GHC.Prim.void#];
                                };
                          };
                    };
              };
        };

Foreign.C.String.newCAStringLen
  :: GHC.Base.String -> GHC.Types.IO Foreign.C.String.CStringLen
[GblId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.String.newCAStringLen1 eta_B2 GHC.Prim.void#;

Foreign.C.String.withCAString1
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CString -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [str_s90xK f_s90xL void_0E]
        case GHC.List.$wlenAcc str_s90xK 0# of ww2_s90xN {
          __DEFAULT ->
              case +# [ww2_s90xN 1#] of sat_s90xO {
                __DEFAULT ->
                    case newAlignedPinnedByteArray# [sat_s90xO 1# GHC.Prim.void#] of {
                      Unit# ipv1_s90xR [Occ=Once] ->
                          case unsafeFreezeByteArray# [ipv1_s90xR GHC.Prim.void#] of {
                            Unit# ipv3_s90xU ->
                                case byteArrayContents# [ipv3_s90xU] of ptr_s90xV [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      let-no-escape {
                                        exit_s90xW [Occ=OnceL!T[2], Dmd=<C(C(S)),C(C1(U(U,U)))>]
                                          :: GHC.Prim.Int#
                                             -> GHC.Prim.State# GHC.Prim.RealWorld
                                             -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a8X3s #)
                                        [LclId[JoinId(2)],
                                         Arity=2,
                                         Str=<S,U><S,U>,
                                         Unf=OtherCon []] =
                                            sat-only [f_s90xL ipv3_s90xU ptr_s90xV] \r [ww_s90xX
                                                                                        void_0E]
                                                case
                                                    writeInt8OffAddr# [ptr_s90xV
                                                                       ww_s90xX
                                                                       0#
                                                                       GHC.Prim.void#]
                                                of
                                                s2_s90xZ
                                                { (##) ->
                                                      let {
                                                        sat_s90y0 [Occ=Once]
                                                          :: Foreign.C.String.CString
                                                        [LclId] =
                                                            CCCS GHC.Ptr.Ptr! [ptr_s90xV];
                                                      } in 
                                                        case f_s90xL sat_s90y0 GHC.Prim.void# of {
                                                          Unit# ipv5_s90y3 [Occ=Once] ->
                                                              case
                                                                  touch# [ipv3_s90xU GHC.Prim.void#]
                                                              of
                                                              s4_s90y4
                                                              { (##) -> Unit# [ipv5_s90y3];
                                                              };
                                                        };
                                                };
                                      } in 
                                        let-no-escape {
                                          $wgo_s90y5 [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                            :: [GHC.Types.Char]
                                               -> GHC.Prim.Int#
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a8X3s #)
                                          [LclId[JoinId(3)],
                                           Arity=3,
                                           Str=<S,1*U><S,U><S,U>,
                                           Unf=OtherCon []] =
                                              sat-only [ptr_s90xV exit_s90xW $wgo_s90y5] \r [w_s90y6
                                                                                             ww_s90y7
                                                                                             void_0E]
                                                  case w_s90y6 of {
                                                    [] -> exit_s90xW ww_s90y7 GHC.Prim.void#;
                                                    : c_s90ya [Occ=Once!] cs_s90yb [Occ=Once] ->
                                                        case c_s90ya of {
                                                          GHC.Types.C# c#_s90yd [Occ=Once] ->
                                                              case ord# [c#_s90yd] of sat_s90ye {
                                                                __DEFAULT ->
                                                                    case
                                                                        narrow8Int# [sat_s90ye]
                                                                    of
                                                                    sat_s90yf
                                                                    { __DEFAULT ->
                                                                          case
                                                                              writeInt8OffAddr# [ptr_s90xV
                                                                                                 ww_s90y7
                                                                                                 sat_s90yf
                                                                                                 GHC.Prim.void#]
                                                                          of
                                                                          s2_s90yg
                                                                          { (##) ->
                                                                                case
                                                                                    +# [ww_s90y7 1#]
                                                                                of
                                                                                sat_s90yh
                                                                                { __DEFAULT ->
                                                                                      $wgo_s90y5
                                                                                          cs_s90yb
                                                                                          sat_s90yh
                                                                                          GHC.Prim.void#;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                        } in  $wgo_s90y5 str_s90xK 0# GHC.Prim.void#;
                                };
                          };
                    };
              };
        };

Foreign.C.String.withCAString
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CString -> GHC.Types.IO a) -> GHC.Types.IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.C.String.withCAString1 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.String.withCAStringLen1
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CStringLen -> GHC.Types.IO a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [str_s90yi f_s90yj void_0E]
        case GHC.List.$wlenAcc str_s90yi 0# of ww2_s90yl {
          __DEFAULT ->
              case newAlignedPinnedByteArray# [ww2_s90yl 1# GHC.Prim.void#] of {
                Unit# ipv1_s90yo [Occ=Once] ->
                    case unsafeFreezeByteArray# [ipv1_s90yo GHC.Prim.void#] of {
                      Unit# ipv3_s90yr ->
                          case byteArrayContents# [ipv3_s90yr] of ptr_s90ys {
                            __DEFAULT ->
                                let-no-escape {
                                  exit_s90yt [Occ=OnceL!T[1], Dmd=<C(S),C(U(U,U))>]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a8X4j #)
                                  [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                      sat-only [f_s90yj ww2_s90yl ipv3_s90yr ptr_s90ys] \r [void_0E]
                                          let {
                                            sat_s90yw [Occ=Once] :: GHC.Types.Int
                                            [LclId] =
                                                CCCS GHC.Types.I#! [ww2_s90yl]; } in
                                          let {
                                            sat_s90yv [Occ=Once]
                                              :: GHC.Ptr.Ptr Foreign.C.Types.CChar
                                            [LclId] =
                                                CCCS GHC.Ptr.Ptr! [ptr_s90ys]; } in
                                          let {
                                            sat_s90yx [Occ=Once] :: Foreign.C.String.CStringLen
                                            [LclId] =
                                                CCCS (,)! [sat_s90yv sat_s90yw];
                                          } in 
                                            case f_s90yj sat_s90yx GHC.Prim.void# of {
                                              Unit# ipv5_s90yA [Occ=Once] ->
                                                  case
                                                      touch# [ipv3_s90yr GHC.Prim.void#]
                                                  of
                                                  s4_s90yB
                                                  { (##) -> Unit# [ipv5_s90yA];
                                                  };
                                            };
                                } in 
                                  let-no-escape {
                                    $wgo_s90yC [InlPrag=NOUSERINLINE[0], Occ=LoopBreakerT[3]]
                                      :: [GHC.Types.Char]
                                         -> GHC.Prim.Int#
                                         -> GHC.Prim.State# GHC.Prim.RealWorld
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a8X4j #)
                                    [LclId[JoinId(3)],
                                     Arity=3,
                                     Str=<S,1*U><L,U><S,U>,
                                     Unf=OtherCon []] =
                                        sat-only [ptr_s90ys exit_s90yt $wgo_s90yC] \r [w_s90yD
                                                                                       ww_s90yE
                                                                                       void_0E]
                                            case w_s90yD of {
                                              [] -> exit_s90yt GHC.Prim.void#;
                                              : c_s90yH [Occ=Once!] cs_s90yI [Occ=Once] ->
                                                  case c_s90yH of {
                                                    GHC.Types.C# c#_s90yK [Occ=Once] ->
                                                        case ord# [c#_s90yK] of sat_s90yL {
                                                          __DEFAULT ->
                                                              case
                                                                  narrow8Int# [sat_s90yL]
                                                              of
                                                              sat_s90yM
                                                              { __DEFAULT ->
                                                                    case
                                                                        writeInt8OffAddr# [ptr_s90ys
                                                                                           ww_s90yE
                                                                                           sat_s90yM
                                                                                           GHC.Prim.void#]
                                                                    of
                                                                    s2_s90yN
                                                                    { (##) ->
                                                                          case
                                                                              +# [ww_s90yE 1#]
                                                                          of
                                                                          sat_s90yO
                                                                          { __DEFAULT ->
                                                                                $wgo_s90yC
                                                                                    cs_s90yI
                                                                                    sat_s90yO
                                                                                    GHC.Prim.void#;
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                  } in  $wgo_s90yC str_s90yi 0# GHC.Prim.void#;
                          };
                    };
              };
        };

Foreign.C.String.withCAStringLen
  :: forall a.
     GHC.Base.String
     -> (Foreign.C.String.CStringLen -> GHC.Types.IO a)
     -> GHC.Types.IO a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><C(C(S(SL))),C(C1(U(U,U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.C.String.withCAStringLen1 eta_B3 eta_B2 GHC.Prim.void#;

