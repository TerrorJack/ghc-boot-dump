
==================== Output Cmm ====================
2018-03-16 16:04:11.509872924 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:04:11.510514284 UTC

[section ""cstring" . Foreign.C.Error.$trModule4_bytes" {
     Foreign.C.Error.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.511106849 UTC

[section ""data" . Foreign.C.Error.$trModule3_closure" {
     Foreign.C.Error.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.511650326 UTC

[section ""cstring" . Foreign.C.Error.$trModule2_bytes" {
     Foreign.C.Error.$trModule2_bytes:
         I8[] [70,111,114,101,105,103,110,46,67,46,69,114,114,111,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.512195098 UTC

[section ""data" . Foreign.C.Error.$trModule1_closure" {
     Foreign.C.Error.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.512674046 UTC

[section ""data" . Foreign.C.Error.$trModule_closure" {
     Foreign.C.Error.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Foreign.C.Error.$trModule3_closure+1;
         const Foreign.C.Error.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.513288909 UTC

[section ""data" . $krep_r92Th_closure" {
     $krep_r92Th_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Foreign.C.Types.$tcCInt_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.513890655 UTC

[section ""cstring" . Foreign.C.Error.$tcErrno2_bytes" {
     Foreign.C.Error.$tcErrno2_bytes:
         I8[] [69,114,114,110,111]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.51443013 UTC

[section ""data" . Foreign.C.Error.$tcErrno1_closure" {
     Foreign.C.Error.$tcErrno1_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$tcErrno2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.515013524 UTC

[section ""data" . Foreign.C.Error.$tcErrno_closure" {
     Foreign.C.Error.$tcErrno_closure:
         const GHC.Types.TyCon_con_info;
         const Foreign.C.Error.$trModule_closure+1;
         const Foreign.C.Error.$tcErrno1_closure+1;
         const GHC.Types.krep$*_closure;
         const 9614618910057470603;
         const 5790003468206630810;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.515615857 UTC

[section ""data" . $krep1_r92Ti_closure" {
     $krep1_r92Ti_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Foreign.C.Error.$tcErrno_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.516197228 UTC

[section ""data" . Foreign.C.Error.$tc'Errno1_closure" {
     Foreign.C.Error.$tc'Errno1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r92Th_closure+1;
         const $krep1_r92Ti_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.516767309 UTC

[section ""cstring" . Foreign.C.Error.$tc'Errno3_bytes" {
     Foreign.C.Error.$tc'Errno3_bytes:
         I8[] [39,69,114,114,110,111]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.517398852 UTC

[section ""data" . Foreign.C.Error.$tc'Errno2_closure" {
     Foreign.C.Error.$tc'Errno2_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$tc'Errno3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.517979512 UTC

[section ""data" . Foreign.C.Error.$tc'Errno_closure" {
     Foreign.C.Error.$tc'Errno_closure:
         const GHC.Types.TyCon_con_info;
         const Foreign.C.Error.$trModule_closure+1;
         const Foreign.C.Error.$tc'Errno2_closure+1;
         const Foreign.C.Error.$tc'Errno1_closure+4;
         const 18175500743799072511;
         const 6332857689812514354;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.518876062 UTC

[section ""data" . Foreign.C.Error.getErrno1_closure" {
     Foreign.C.Error.getErrno1_closure:
         const Foreign.C.Error.getErrno1_info;
 },
 Foreign.C.Error.getErrno1_entry() //  []
         { info_tbl: [(c92Yn,
                       label: Foreign.C.Error.getErrno1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c92Yn: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c92Yt; else goto c92Ys;
       c92Yt: // global
           HpAlloc = 16;
           R1 = Foreign.C.Error.getErrno1_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c92Ys: // global
           (_s92To::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92To::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.51989519 UTC

[section ""data" . Foreign.C.Error.getErrno_closure" {
     Foreign.C.Error.getErrno_closure:
         const Foreign.C.Error.getErrno_info;
 },
 Foreign.C.Error.getErrno_entry() //  []
         { info_tbl: [(c92Yy,
                       label: Foreign.C.Error.getErrno_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c92Yy: // global
           call Foreign.C.Error.getErrno1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.520679445 UTC

[section ""data" . Foreign.C.Error.resetErrno1_closure" {
     Foreign.C.Error.resetErrno1_closure:
         const Foreign.C.Error.resetErrno1_info;
 },
 Foreign.C.Error.resetErrno1_entry() //  []
         { info_tbl: [(c92YH,
                       label: Foreign.C.Error.resetErrno1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c92YH: // global
           call "ccall" arg hints:  [‘signed’]  result hints:  [] __hscore_set_errno(0);
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.521520102 UTC

[section ""data" . Foreign.C.Error.resetErrno_closure" {
     Foreign.C.Error.resetErrno_closure:
         const Foreign.C.Error.resetErrno_info;
 },
 Foreign.C.Error.resetErrno_entry() //  []
         { info_tbl: [(c92YO,
                       label: Foreign.C.Error.resetErrno_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c92YO: // global
           call Foreign.C.Error.resetErrno1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.522466078 UTC

[section ""data" . Foreign.C.Error.isValidErrno_closure" {
     Foreign.C.Error.isValidErrno_closure:
         const Foreign.C.Error.isValidErrno_info;
 },
 Foreign.C.Error.isValidErrno_entry() //  [R2]
         { info_tbl: [(c92YY,
                       label: Foreign.C.Error.isValidErrno_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c92YY: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c92YZ; else goto c92Z0;
       c92YZ: // global
           R2 = R2;
           R1 = Foreign.C.Error.isValidErrno_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c92Z0: // global
           I64[Sp - 8] = block_c92YV_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u92Z8; else goto c92YW;
       u92Z8: // global
           call _c92YV(R1) args: 0, res: 0, upd: 0;
       c92YW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c92YV() //  [R1]
         { info_tbl: [(c92YV,
                       label: block_c92YV_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c92YV: // global
           if (I64[R1 + 7] == (-1)) goto c92Z7; else goto c92Z6;
       c92Z7: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c92Z6: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.52397891 UTC

[section ""data" . Foreign.C.Error.$fEqErrno_$c==_closure" {
     Foreign.C.Error.$fEqErrno_$c==_closure:
         const Foreign.C.Error.$fEqErrno_$c==_info;
 },
 Foreign.C.Error.$fEqErrno_$c==_entry() //  [R2, R3]
         { info_tbl: [(c92Zg,
                       label: Foreign.C.Error.$fEqErrno_$c==_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c92Zg: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c92Zh; else goto c92Zi;
       c92Zh: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$fEqErrno_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c92Zi: // global
           I64[Sp - 16] = block_c92Zd_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u92ZH; else goto c92Ze;
       u92ZH: // global
           call _c92Zd(R1) args: 0, res: 0, upd: 0;
       c92Ze: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c92Zd() //  [R1]
         { info_tbl: [(c92Zd,
                       label: block_c92Zd_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c92Zd: // global
           _s92TD::I64 = I64[R1 + 7];
           if (_s92TD::I64 != (-1)) goto c92Zq; else goto u92ZD;
       c92Zq: // global
           I64[Sp] = block_c92Zo_info;
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s92TD::I64;
           if (R1 & 7 != 0) goto u92ZF; else goto c92Zr;
       u92ZF: // global
           call _c92Zo(R1) args: 0, res: 0, upd: 0;
       c92Zr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u92ZD: // global
           Sp = Sp + 16;
           call _c92ZA() args: 0, res: 0, upd: 0;
     }
 },
 _c92Zo() //  [R1]
         { info_tbl: [(c92Zo,
                       label: block_c92Zo_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c92Zo: // global
           _s92TG::I64 = I64[R1 + 7];
           if (_s92TG::I64 != (-1)) goto c92Zy; else goto u92ZE;
       c92Zy: // global
           R1 = I64[((I64[Sp + 8] == _s92TG::I64) << 3) + GHC.Types.Bool_closure_tbl];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u92ZE: // global
           Sp = Sp + 16;
           call _c92ZA() args: 0, res: 0, upd: 0;
     }
 },
 _c92ZA() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c92ZA: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.525883533 UTC

[section ""data" . Foreign.C.Error.$fEqErrno_$c/=_closure" {
     Foreign.C.Error.$fEqErrno_$c/=_closure:
         const Foreign.C.Error.$fEqErrno_$c/=_info;
 },
 Foreign.C.Error.$fEqErrno_$c/=_entry() //  [R2, R3]
         { info_tbl: [(c92ZQ,
                       label: Foreign.C.Error.$fEqErrno_$c/=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c92ZQ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c92ZR; else goto c92ZS;
       c92ZR: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$fEqErrno_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c92ZS: // global
           I64[Sp - 16] = block_c92ZN_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u930m; else goto c92ZO;
       u930m: // global
           call _c92ZN(R1) args: 0, res: 0, upd: 0;
       c92ZO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c92ZN() //  [R1]
         { info_tbl: [(c92ZN,
                       label: block_c92ZN_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c92ZN: // global
           _s92TM::I64 = I64[R1 + 7];
           if (_s92TM::I64 != (-1)) goto c9300; else goto u930h;
       c9300: // global
           I64[Sp] = block_c92ZY_info;
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s92TM::I64;
           if (R1 & 7 != 0) goto u930k; else goto c9301;
       u930k: // global
           call _c92ZY(R1) args: 0, res: 0, upd: 0;
       c9301: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u930h: // global
           Sp = Sp + 16;
           call _c930g() args: 0, res: 0, upd: 0;
     }
 },
 _c92ZY() //  [R1]
         { info_tbl: [(c92ZY,
                       label: block_c92ZY_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c92ZY: // global
           _s92TP::I64 = I64[R1 + 7];
           if (_s92TP::I64 != (-1)) goto c930e; else goto u930i;
       c930e: // global
           if (I64[Sp + 8] == _s92TP::I64) goto c930c; else goto u930j;
       c930c: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u930j: // global
           Sp = Sp + 16;
           goto u930o;
       u930i: // global
           Sp = Sp + 16;
           goto u930o;
       u930o: // global
           call _c930g() args: 0, res: 0, upd: 0;
     }
 },
 _c930g() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c930g: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.527335788 UTC

[section ""data" . Foreign.C.Error.$fEqErrno_closure" {
     Foreign.C.Error.$fEqErrno_closure:
         const GHC.Classes.C:Eq_con_info;
         const Foreign.C.Error.$fEqErrno_$c==_closure+2;
         const Foreign.C.Error.$fEqErrno_$c/=_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.527942848 UTC

[section ""data" . Foreign.C.Error.eXDEV1_closure" {
     Foreign.C.Error.eXDEV1_closure:
         const GHC.Int.I32#_con_info;
         const 18;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.528495133 UTC

[section ""data" . Foreign.C.Error.eXDEV_closure" {
     Foreign.C.Error.eXDEV_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eXDEV1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.529090277 UTC

[section ""data" . Foreign.C.Error.eAGAIN1_closure" {
     Foreign.C.Error.eAGAIN1_closure:
         const GHC.Int.I32#_con_info;
         const 11;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.530024124 UTC

[section ""data" . Foreign.C.Error.eWOULDBLOCK_closure" {
     Foreign.C.Error.eWOULDBLOCK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eAGAIN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.530602323 UTC

[section ""data" . Foreign.C.Error.eUSERS1_closure" {
     Foreign.C.Error.eUSERS1_closure:
         const GHC.Int.I32#_con_info;
         const 87;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.531188498 UTC

[section ""data" . Foreign.C.Error.eUSERS_closure" {
     Foreign.C.Error.eUSERS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eUSERS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.531775952 UTC

[section ""data" . Foreign.C.Error.eTXTBSY1_closure" {
     Foreign.C.Error.eTXTBSY1_closure:
         const GHC.Int.I32#_con_info;
         const 26;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.532343753 UTC

[section ""data" . Foreign.C.Error.eTXTBSY_closure" {
     Foreign.C.Error.eTXTBSY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTXTBSY1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.532941825 UTC

[section ""data" . Foreign.C.Error.eTOOMANYREFS1_closure" {
     Foreign.C.Error.eTOOMANYREFS1_closure:
         const GHC.Int.I32#_con_info;
         const 109;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.533487119 UTC

[section ""data" . Foreign.C.Error.eTOOMANYREFS_closure" {
     Foreign.C.Error.eTOOMANYREFS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTOOMANYREFS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.534086617 UTC

[section ""data" . Foreign.C.Error.eTIMEDOUT1_closure" {
     Foreign.C.Error.eTIMEDOUT1_closure:
         const GHC.Int.I32#_con_info;
         const 110;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.534674278 UTC

[section ""data" . Foreign.C.Error.eTIMEDOUT_closure" {
     Foreign.C.Error.eTIMEDOUT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTIMEDOUT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.535285823 UTC

[section ""data" . Foreign.C.Error.eTIME1_closure" {
     Foreign.C.Error.eTIME1_closure:
         const GHC.Int.I32#_con_info;
         const 62;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.535849034 UTC

[section ""data" . Foreign.C.Error.eTIME_closure" {
     Foreign.C.Error.eTIME_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTIME1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.536376797 UTC

[section ""data" . Foreign.C.Error.eSTALE1_closure" {
     Foreign.C.Error.eSTALE1_closure:
         const GHC.Int.I32#_con_info;
         const 116;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.536970804 UTC

[section ""data" . Foreign.C.Error.eSTALE_closure" {
     Foreign.C.Error.eSTALE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSTALE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.539048864 UTC

[section ""data" . Foreign.C.Error.eSRMNT1_closure" {
     Foreign.C.Error.eSRMNT1_closure:
         const GHC.Int.I32#_con_info;
         const 69;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.539554597 UTC

[section ""data" . Foreign.C.Error.eSRMNT_closure" {
     Foreign.C.Error.eSRMNT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSRMNT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.5401161 UTC

[section ""data" . Foreign.C.Error.eSRCH1_closure" {
     Foreign.C.Error.eSRCH1_closure:
         const GHC.Int.I32#_con_info;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.540671158 UTC

[section ""data" . Foreign.C.Error.eSRCH_closure" {
     Foreign.C.Error.eSRCH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSRCH1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.54122341 UTC

[section ""data" . Foreign.C.Error.eSPIPE1_closure" {
     Foreign.C.Error.eSPIPE1_closure:
         const GHC.Int.I32#_con_info;
         const 29;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.542069794 UTC

[section ""data" . Foreign.C.Error.eSPIPE_closure" {
     Foreign.C.Error.eSPIPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSPIPE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.542591017 UTC

[section ""data" . Foreign.C.Error.eSOCKTNOSUPPORT1_closure" {
     Foreign.C.Error.eSOCKTNOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 94;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.543154096 UTC

[section ""data" . Foreign.C.Error.eSOCKTNOSUPPORT_closure" {
     Foreign.C.Error.eSOCKTNOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSOCKTNOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.543673999 UTC

[section ""data" . Foreign.C.Error.eSHUTDOWN1_closure" {
     Foreign.C.Error.eSHUTDOWN1_closure:
         const GHC.Int.I32#_con_info;
         const 108;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.544217189 UTC

[section ""data" . Foreign.C.Error.eSHUTDOWN_closure" {
     Foreign.C.Error.eSHUTDOWN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSHUTDOWN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.544775431 UTC

[section ""data" . Foreign.C.Error.eBADRPC1_closure" {
     Foreign.C.Error.eBADRPC1_closure:
         const GHC.Int.I32#_con_info;
         const (-1);
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.545292666 UTC

[section ""data" . Foreign.C.Error.eRREMOTE_closure" {
     Foreign.C.Error.eRREMOTE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.545815309 UTC

[section ""data" . Foreign.C.Error.eRPCMISMATCH_closure" {
     Foreign.C.Error.eRPCMISMATCH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.546385047 UTC

[section ""data" . Foreign.C.Error.eROFS1_closure" {
     Foreign.C.Error.eROFS1_closure:
         const GHC.Int.I32#_con_info;
         const 30;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.546932269 UTC

[section ""data" . Foreign.C.Error.eROFS_closure" {
     Foreign.C.Error.eROFS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eROFS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.547475176 UTC

[section ""data" . Foreign.C.Error.eREMOTE1_closure" {
     Foreign.C.Error.eREMOTE1_closure:
         const GHC.Int.I32#_con_info;
         const 66;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.548026108 UTC

[section ""data" . Foreign.C.Error.eREMOTE_closure" {
     Foreign.C.Error.eREMOTE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eREMOTE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.54856549 UTC

[section ""data" . Foreign.C.Error.eREMCHG1_closure" {
     Foreign.C.Error.eREMCHG1_closure:
         const GHC.Int.I32#_con_info;
         const 78;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.549119582 UTC

[section ""data" . Foreign.C.Error.eREMCHG_closure" {
     Foreign.C.Error.eREMCHG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eREMCHG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.549695522 UTC

[section ""data" . Foreign.C.Error.eRANGE1_closure" {
     Foreign.C.Error.eRANGE1_closure:
         const GHC.Int.I32#_con_info;
         const 34;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.55021906 UTC

[section ""data" . Foreign.C.Error.eRANGE_closure" {
     Foreign.C.Error.eRANGE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eRANGE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.550769027 UTC

[section ""data" . Foreign.C.Error.ePROTOTYPE1_closure" {
     Foreign.C.Error.ePROTOTYPE1_closure:
         const GHC.Int.I32#_con_info;
         const 91;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.551307613 UTC

[section ""data" . Foreign.C.Error.ePROTOTYPE_closure" {
     Foreign.C.Error.ePROTOTYPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePROTOTYPE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.551837999 UTC

[section ""data" . Foreign.C.Error.ePROTONOSUPPORT1_closure" {
     Foreign.C.Error.ePROTONOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 93;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.552377733 UTC

[section ""data" . Foreign.C.Error.ePROTONOSUPPORT_closure" {
     Foreign.C.Error.ePROTONOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePROTONOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.552947587 UTC

[section ""data" . Foreign.C.Error.ePROTO1_closure" {
     Foreign.C.Error.ePROTO1_closure:
         const GHC.Int.I32#_con_info;
         const 71;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.553901628 UTC

[section ""data" . Foreign.C.Error.ePROTO_closure" {
     Foreign.C.Error.ePROTO_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePROTO1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.554422937 UTC

[section ""data" . Foreign.C.Error.ePROGUNAVAIL_closure" {
     Foreign.C.Error.ePROGUNAVAIL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.555006531 UTC

[section ""data" . Foreign.C.Error.ePROGMISMATCH_closure" {
     Foreign.C.Error.ePROGMISMATCH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.555531479 UTC

[section ""data" . Foreign.C.Error.ePROCUNAVAIL_closure" {
     Foreign.C.Error.ePROCUNAVAIL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.556041902 UTC

[section ""data" . Foreign.C.Error.ePROCLIM_closure" {
     Foreign.C.Error.ePROCLIM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.55660734 UTC

[section ""data" . Foreign.C.Error.ePIPE1_closure" {
     Foreign.C.Error.ePIPE1_closure:
         const GHC.Int.I32#_con_info;
         const 32;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.557111179 UTC

[section ""data" . Foreign.C.Error.ePIPE_closure" {
     Foreign.C.Error.ePIPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePIPE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.557726852 UTC

[section ""data" . Foreign.C.Error.ePFNOSUPPORT1_closure" {
     Foreign.C.Error.ePFNOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 96;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.55827012 UTC

[section ""data" . Foreign.C.Error.ePFNOSUPPORT_closure" {
     Foreign.C.Error.ePFNOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePFNOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.558808094 UTC

[section ""data" . Foreign.C.Error.ePERM1_closure" {
     Foreign.C.Error.ePERM1_closure:
         const GHC.Int.I32#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.559302393 UTC

[section ""data" . Foreign.C.Error.ePERM_closure" {
     Foreign.C.Error.ePERM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePERM1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.559851633 UTC

[section ""data" . Foreign.C.Error.eNOTSUP1_closure" {
     Foreign.C.Error.eNOTSUP1_closure:
         const GHC.Int.I32#_con_info;
         const 95;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.560399752 UTC

[section ""data" . Foreign.C.Error.eOPNOTSUPP_closure" {
     Foreign.C.Error.eOPNOTSUPP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTSUP1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.560967475 UTC

[section ""data" . Foreign.C.Error.eNXIO1_closure" {
     Foreign.C.Error.eNXIO1_closure:
         const GHC.Int.I32#_con_info;
         const 6;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.561539561 UTC

[section ""data" . Foreign.C.Error.eNXIO_closure" {
     Foreign.C.Error.eNXIO_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNXIO1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.56210666 UTC

[section ""data" . Foreign.C.Error.eNOTTY1_closure" {
     Foreign.C.Error.eNOTTY1_closure:
         const GHC.Int.I32#_con_info;
         const 25;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.56362488 UTC

[section ""data" . Foreign.C.Error.eNOTTY_closure" {
     Foreign.C.Error.eNOTTY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTTY1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.564207682 UTC

[section ""data" . Foreign.C.Error.eNOTSUP_closure" {
     Foreign.C.Error.eNOTSUP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTSUP1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.564799054 UTC

[section ""data" . Foreign.C.Error.eNOTSOCK1_closure" {
     Foreign.C.Error.eNOTSOCK1_closure:
         const GHC.Int.I32#_con_info;
         const 88;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.565865467 UTC

[section ""data" . Foreign.C.Error.eNOTSOCK_closure" {
     Foreign.C.Error.eNOTSOCK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTSOCK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.566428556 UTC

[section ""data" . Foreign.C.Error.eNOTEMPTY1_closure" {
     Foreign.C.Error.eNOTEMPTY1_closure:
         const GHC.Int.I32#_con_info;
         const 39;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.566973063 UTC

[section ""data" . Foreign.C.Error.eNOTEMPTY_closure" {
     Foreign.C.Error.eNOTEMPTY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTEMPTY1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.567551816 UTC

[section ""data" . Foreign.C.Error.eNOTDIR1_closure" {
     Foreign.C.Error.eNOTDIR1_closure:
         const GHC.Int.I32#_con_info;
         const 20;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.568088996 UTC

[section ""data" . Foreign.C.Error.eNOTDIR_closure" {
     Foreign.C.Error.eNOTDIR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTDIR1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.568647123 UTC

[section ""data" . Foreign.C.Error.eNOTCONN1_closure" {
     Foreign.C.Error.eNOTCONN1_closure:
         const GHC.Int.I32#_con_info;
         const 107;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.569229459 UTC

[section ""data" . Foreign.C.Error.eNOTCONN_closure" {
     Foreign.C.Error.eNOTCONN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTCONN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.569785679 UTC

[section ""data" . Foreign.C.Error.eNOTBLK1_closure" {
     Foreign.C.Error.eNOTBLK1_closure:
         const GHC.Int.I32#_con_info;
         const 15;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.57036267 UTC

[section ""data" . Foreign.C.Error.eNOTBLK_closure" {
     Foreign.C.Error.eNOTBLK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTBLK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.570961073 UTC

[section ""data" . Foreign.C.Error.eNOSYS1_closure" {
     Foreign.C.Error.eNOSYS1_closure:
         const GHC.Int.I32#_con_info;
         const 38;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.571522645 UTC

[section ""data" . Foreign.C.Error.eNOSYS_closure" {
     Foreign.C.Error.eNOSYS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSYS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.572052192 UTC

[section ""data" . Foreign.C.Error.eNOSTR1_closure" {
     Foreign.C.Error.eNOSTR1_closure:
         const GHC.Int.I32#_con_info;
         const 60;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.572555947 UTC

[section ""data" . Foreign.C.Error.eNOSTR_closure" {
     Foreign.C.Error.eNOSTR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSTR1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.573102078 UTC

[section ""data" . Foreign.C.Error.eNOSR1_closure" {
     Foreign.C.Error.eNOSR1_closure:
         const GHC.Int.I32#_con_info;
         const 63;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.573666205 UTC

[section ""data" . Foreign.C.Error.eNOSR_closure" {
     Foreign.C.Error.eNOSR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSR1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.574213997 UTC

[section ""data" . Foreign.C.Error.eNOSPC1_closure" {
     Foreign.C.Error.eNOSPC1_closure:
         const GHC.Int.I32#_con_info;
         const 28;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.574797293 UTC

[section ""data" . Foreign.C.Error.eNOSPC_closure" {
     Foreign.C.Error.eNOSPC_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.57533644 UTC

[section ""data" . Foreign.C.Error.eNOPROTOOPT1_closure" {
     Foreign.C.Error.eNOPROTOOPT1_closure:
         const GHC.Int.I32#_con_info;
         const 92;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.575849427 UTC

[section ""data" . Foreign.C.Error.eNOPROTOOPT_closure" {
     Foreign.C.Error.eNOPROTOOPT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOPROTOOPT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.576410692 UTC

[section ""data" . Foreign.C.Error.eNONET1_closure" {
     Foreign.C.Error.eNONET1_closure:
         const GHC.Int.I32#_con_info;
         const 64;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.576962891 UTC

[section ""data" . Foreign.C.Error.eNONET_closure" {
     Foreign.C.Error.eNONET_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNONET1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.577996578 UTC

[section ""data" . Foreign.C.Error.eNOMSG1_closure" {
     Foreign.C.Error.eNOMSG1_closure:
         const GHC.Int.I32#_con_info;
         const 42;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.578541483 UTC

[section ""data" . Foreign.C.Error.eNOMSG_closure" {
     Foreign.C.Error.eNOMSG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOMSG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.57910012 UTC

[section ""data" . Foreign.C.Error.eNOMEM1_closure" {
     Foreign.C.Error.eNOMEM1_closure:
         const GHC.Int.I32#_con_info;
         const 12;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.579617782 UTC

[section ""data" . Foreign.C.Error.eNOMEM_closure" {
     Foreign.C.Error.eNOMEM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOMEM1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.580160364 UTC

[section ""data" . Foreign.C.Error.eNOLINK1_closure" {
     Foreign.C.Error.eNOLINK1_closure:
         const GHC.Int.I32#_con_info;
         const 67;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.580709929 UTC

[section ""data" . Foreign.C.Error.eNOLINK_closure" {
     Foreign.C.Error.eNOLINK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOLINK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.581292966 UTC

[section ""data" . Foreign.C.Error.eNOLCK1_closure" {
     Foreign.C.Error.eNOLCK1_closure:
         const GHC.Int.I32#_con_info;
         const 37;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.581862888 UTC

[section ""data" . Foreign.C.Error.eNOLCK_closure" {
     Foreign.C.Error.eNOLCK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOLCK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.582426589 UTC

[section ""data" . Foreign.C.Error.eNOEXEC1_closure" {
     Foreign.C.Error.eNOEXEC1_closure:
         const GHC.Int.I32#_con_info;
         const 8;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.582997579 UTC

[section ""data" . Foreign.C.Error.eNOEXEC_closure" {
     Foreign.C.Error.eNOEXEC_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOEXEC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.583525985 UTC

[section ""data" . Foreign.C.Error.eNOENT1_closure" {
     Foreign.C.Error.eNOENT1_closure:
         const GHC.Int.I32#_con_info;
         const 2;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.584054742 UTC

[section ""data" . Foreign.C.Error.eNOENT_closure" {
     Foreign.C.Error.eNOENT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOENT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.584616382 UTC

[section ""data" . Foreign.C.Error.eNODEV1_closure" {
     Foreign.C.Error.eNODEV1_closure:
         const GHC.Int.I32#_con_info;
         const 19;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.585139049 UTC

[section ""data" . Foreign.C.Error.eNODEV_closure" {
     Foreign.C.Error.eNODEV_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNODEV1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.585774085 UTC

[section ""data" . Foreign.C.Error.eNODATA1_closure" {
     Foreign.C.Error.eNODATA1_closure:
         const GHC.Int.I32#_con_info;
         const 61;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.586283572 UTC

[section ""data" . Foreign.C.Error.eNODATA_closure" {
     Foreign.C.Error.eNODATA_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNODATA1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.58686281 UTC

[section ""data" . Foreign.C.Error.eNOBUFS1_closure" {
     Foreign.C.Error.eNOBUFS1_closure:
         const GHC.Int.I32#_con_info;
         const 105;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.587440101 UTC

[section ""data" . Foreign.C.Error.eNOBUFS_closure" {
     Foreign.C.Error.eNOBUFS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOBUFS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.588043548 UTC

[section ""data" . Foreign.C.Error.eNFILE1_closure" {
     Foreign.C.Error.eNFILE1_closure:
         const GHC.Int.I32#_con_info;
         const 23;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.58916447 UTC

[section ""data" . Foreign.C.Error.eNFILE_closure" {
     Foreign.C.Error.eNFILE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNFILE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.590249736 UTC

[section ""data" . Foreign.C.Error.eNETUNREACH1_closure" {
     Foreign.C.Error.eNETUNREACH1_closure:
         const GHC.Int.I32#_con_info;
         const 101;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.590827622 UTC

[section ""data" . Foreign.C.Error.eNETUNREACH_closure" {
     Foreign.C.Error.eNETUNREACH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNETUNREACH1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.591387667 UTC

[section ""data" . Foreign.C.Error.eNETRESET1_closure" {
     Foreign.C.Error.eNETRESET1_closure:
         const GHC.Int.I32#_con_info;
         const 102;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.591949258 UTC

[section ""data" . Foreign.C.Error.eNETRESET_closure" {
     Foreign.C.Error.eNETRESET_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNETRESET1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.592531169 UTC

[section ""data" . Foreign.C.Error.eNETDOWN1_closure" {
     Foreign.C.Error.eNETDOWN1_closure:
         const GHC.Int.I32#_con_info;
         const 100;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.593113888 UTC

[section ""data" . Foreign.C.Error.eNETDOWN_closure" {
     Foreign.C.Error.eNETDOWN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNETDOWN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.593680023 UTC

[section ""data" . Foreign.C.Error.eNAMETOOLONG1_closure" {
     Foreign.C.Error.eNAMETOOLONG1_closure:
         const GHC.Int.I32#_con_info;
         const 36;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.594252373 UTC

[section ""data" . Foreign.C.Error.eNAMETOOLONG_closure" {
     Foreign.C.Error.eNAMETOOLONG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNAMETOOLONG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.594853153 UTC

[section ""data" . Foreign.C.Error.eMULTIHOP1_closure" {
     Foreign.C.Error.eMULTIHOP1_closure:
         const GHC.Int.I32#_con_info;
         const 72;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.595412465 UTC

[section ""data" . Foreign.C.Error.eMULTIHOP_closure" {
     Foreign.C.Error.eMULTIHOP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMULTIHOP1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.595979685 UTC

[section ""data" . Foreign.C.Error.eMSGSIZE1_closure" {
     Foreign.C.Error.eMSGSIZE1_closure:
         const GHC.Int.I32#_con_info;
         const 90;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.596539272 UTC

[section ""data" . Foreign.C.Error.eMSGSIZE_closure" {
     Foreign.C.Error.eMSGSIZE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMSGSIZE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.597084346 UTC

[section ""data" . Foreign.C.Error.eMLINK1_closure" {
     Foreign.C.Error.eMLINK1_closure:
         const GHC.Int.I32#_con_info;
         const 31;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.597667137 UTC

[section ""data" . Foreign.C.Error.eMLINK_closure" {
     Foreign.C.Error.eMLINK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMLINK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.598247762 UTC

[section ""data" . Foreign.C.Error.eMFILE1_closure" {
     Foreign.C.Error.eMFILE1_closure:
         const GHC.Int.I32#_con_info;
         const 24;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.598806494 UTC

[section ""data" . Foreign.C.Error.eMFILE_closure" {
     Foreign.C.Error.eMFILE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMFILE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.599364478 UTC

[section ""data" . Foreign.C.Error.eLOOP1_closure" {
     Foreign.C.Error.eLOOP1_closure:
         const GHC.Int.I32#_con_info;
         const 40;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.599916826 UTC

[section ""data" . Foreign.C.Error.eLOOP_closure" {
     Foreign.C.Error.eLOOP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eLOOP1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.600468975 UTC

[section ""data" . Foreign.C.Error.eISDIR1_closure" {
     Foreign.C.Error.eISDIR1_closure:
         const GHC.Int.I32#_con_info;
         const 21;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.60099797 UTC

[section ""data" . Foreign.C.Error.eISDIR_closure" {
     Foreign.C.Error.eISDIR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eISDIR1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.601603251 UTC

[section ""data" . Foreign.C.Error.eISCONN1_closure" {
     Foreign.C.Error.eISCONN1_closure:
         const GHC.Int.I32#_con_info;
         const 106;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.602179034 UTC

[section ""data" . Foreign.C.Error.eISCONN_closure" {
     Foreign.C.Error.eISCONN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eISCONN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.602719571 UTC

[section ""data" . Foreign.C.Error.eIO1_closure" {
     Foreign.C.Error.eIO1_closure:
         const GHC.Int.I32#_con_info;
         const 5;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.6032809 UTC

[section ""data" . Foreign.C.Error.eIO_closure" {
     Foreign.C.Error.eIO_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eIO1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.603829257 UTC

[section ""data" . Foreign.C.Error.eINVAL1_closure" {
     Foreign.C.Error.eINVAL1_closure:
         const GHC.Int.I32#_con_info;
         const 22;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.604344687 UTC

[section ""data" . Foreign.C.Error.eINVAL_closure" {
     Foreign.C.Error.eINVAL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eINVAL1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.604922229 UTC

[section ""data" . Foreign.C.Error.eINTR1_closure" {
     Foreign.C.Error.eINTR1_closure:
         const GHC.Int.I32#_con_info;
         const 4;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.605486953 UTC

[section ""data" . Foreign.C.Error.eINTR_closure" {
     Foreign.C.Error.eINTR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eINTR1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.606090516 UTC

[section ""data" . Foreign.C.Error.eINPROGRESS1_closure" {
     Foreign.C.Error.eINPROGRESS1_closure:
         const GHC.Int.I32#_con_info;
         const 115;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.606635578 UTC

[section ""data" . Foreign.C.Error.eINPROGRESS_closure" {
     Foreign.C.Error.eINPROGRESS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eINPROGRESS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.607213558 UTC

[section ""data" . Foreign.C.Error.eILSEQ1_closure" {
     Foreign.C.Error.eILSEQ1_closure:
         const GHC.Int.I32#_con_info;
         const 84;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.607747248 UTC

[section ""data" . Foreign.C.Error.eILSEQ_closure" {
     Foreign.C.Error.eILSEQ_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eILSEQ1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.608324816 UTC

[section ""data" . Foreign.C.Error.eIDRM1_closure" {
     Foreign.C.Error.eIDRM1_closure:
         const GHC.Int.I32#_con_info;
         const 43;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.608845078 UTC

[section ""data" . Foreign.C.Error.eIDRM_closure" {
     Foreign.C.Error.eIDRM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eIDRM1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.609436038 UTC

[section ""data" . Foreign.C.Error.eHOSTUNREACH1_closure" {
     Foreign.C.Error.eHOSTUNREACH1_closure:
         const GHC.Int.I32#_con_info;
         const 113;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.609993804 UTC

[section ""data" . Foreign.C.Error.eHOSTUNREACH_closure" {
     Foreign.C.Error.eHOSTUNREACH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eHOSTUNREACH1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.610569545 UTC

[section ""data" . Foreign.C.Error.eHOSTDOWN1_closure" {
     Foreign.C.Error.eHOSTDOWN1_closure:
         const GHC.Int.I32#_con_info;
         const 112;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.61112285 UTC

[section ""data" . Foreign.C.Error.eHOSTDOWN_closure" {
     Foreign.C.Error.eHOSTDOWN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eHOSTDOWN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.611632438 UTC

[section ""data" . Foreign.C.Error.eFTYPE_closure" {
     Foreign.C.Error.eFTYPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.612200082 UTC

[section ""data" . Foreign.C.Error.eFBIG1_closure" {
     Foreign.C.Error.eFBIG1_closure:
         const GHC.Int.I32#_con_info;
         const 27;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.612743333 UTC

[section ""data" . Foreign.C.Error.eFBIG_closure" {
     Foreign.C.Error.eFBIG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eFBIG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.613722129 UTC

[section ""data" . Foreign.C.Error.eFAULT1_closure" {
     Foreign.C.Error.eFAULT1_closure:
         const GHC.Int.I32#_con_info;
         const 14;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.614857402 UTC

[section ""data" . Foreign.C.Error.eFAULT_closure" {
     Foreign.C.Error.eFAULT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eFAULT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.615439395 UTC

[section ""data" . Foreign.C.Error.eEXIST1_closure" {
     Foreign.C.Error.eEXIST1_closure:
         const GHC.Int.I32#_con_info;
         const 17;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.61597421 UTC

[section ""data" . Foreign.C.Error.eEXIST_closure" {
     Foreign.C.Error.eEXIST_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eEXIST1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.616536729 UTC

[section ""data" . Foreign.C.Error.eDQUOT1_closure" {
     Foreign.C.Error.eDQUOT1_closure:
         const GHC.Int.I32#_con_info;
         const 122;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.617100274 UTC

[section ""data" . Foreign.C.Error.eDQUOT_closure" {
     Foreign.C.Error.eDQUOT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDQUOT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.617676032 UTC

[section ""data" . Foreign.C.Error.eDOM1_closure" {
     Foreign.C.Error.eDOM1_closure:
         const GHC.Int.I32#_con_info;
         const 33;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.618184335 UTC

[section ""data" . Foreign.C.Error.eDOM_closure" {
     Foreign.C.Error.eDOM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDOM1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.618730209 UTC

[section ""data" . Foreign.C.Error.eDIRTY_closure" {
     Foreign.C.Error.eDIRTY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.619305582 UTC

[section ""data" . Foreign.C.Error.eDESTADDRREQ1_closure" {
     Foreign.C.Error.eDESTADDRREQ1_closure:
         const GHC.Int.I32#_con_info;
         const 89;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.619856159 UTC

[section ""data" . Foreign.C.Error.eDESTADDRREQ_closure" {
     Foreign.C.Error.eDESTADDRREQ_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDESTADDRREQ1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.620427388 UTC

[section ""data" . Foreign.C.Error.eDEADLK1_closure" {
     Foreign.C.Error.eDEADLK1_closure:
         const GHC.Int.I32#_con_info;
         const 35;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.62097024 UTC

[section ""data" . Foreign.C.Error.eDEADLK_closure" {
     Foreign.C.Error.eDEADLK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDEADLK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.621542549 UTC

[section ""data" . Foreign.C.Error.eCONNRESET1_closure" {
     Foreign.C.Error.eCONNRESET1_closure:
         const GHC.Int.I32#_con_info;
         const 104;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.622062531 UTC

[section ""data" . Foreign.C.Error.eCONNRESET_closure" {
     Foreign.C.Error.eCONNRESET_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCONNRESET1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.622633059 UTC

[section ""data" . Foreign.C.Error.eCONNREFUSED1_closure" {
     Foreign.C.Error.eCONNREFUSED1_closure:
         const GHC.Int.I32#_con_info;
         const 111;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.623178624 UTC

[section ""data" . Foreign.C.Error.eCONNREFUSED_closure" {
     Foreign.C.Error.eCONNREFUSED_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCONNREFUSED1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.623696283 UTC

[section ""data" . Foreign.C.Error.eCONNABORTED1_closure" {
     Foreign.C.Error.eCONNABORTED1_closure:
         const GHC.Int.I32#_con_info;
         const 103;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.624267711 UTC

[section ""data" . Foreign.C.Error.eCONNABORTED_closure" {
     Foreign.C.Error.eCONNABORTED_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCONNABORTED1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.624824316 UTC

[section ""data" . Foreign.C.Error.eCOMM1_closure" {
     Foreign.C.Error.eCOMM1_closure:
         const GHC.Int.I32#_con_info;
         const 70;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.626137434 UTC

[section ""data" . Foreign.C.Error.eCOMM_closure" {
     Foreign.C.Error.eCOMM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCOMM1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.626689439 UTC

[section ""data" . Foreign.C.Error.eCHILD1_closure" {
     Foreign.C.Error.eCHILD1_closure:
         const GHC.Int.I32#_con_info;
         const 10;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.627273533 UTC

[section ""data" . Foreign.C.Error.eCHILD_closure" {
     Foreign.C.Error.eCHILD_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCHILD1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.627844235 UTC

[section ""data" . Foreign.C.Error.eBUSY1_closure" {
     Foreign.C.Error.eBUSY1_closure:
         const GHC.Int.I32#_con_info;
         const 16;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.628373938 UTC

[section ""data" . Foreign.C.Error.eBUSY_closure" {
     Foreign.C.Error.eBUSY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBUSY1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.628925799 UTC

[section ""data" . Foreign.C.Error.eBADRPC_closure" {
     Foreign.C.Error.eBADRPC_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.629568396 UTC

[section ""data" . Foreign.C.Error.eBADMSG1_closure" {
     Foreign.C.Error.eBADMSG1_closure:
         const GHC.Int.I32#_con_info;
         const 74;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.630132124 UTC

[section ""data" . Foreign.C.Error.eBADMSG_closure" {
     Foreign.C.Error.eBADMSG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADMSG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.630703543 UTC

[section ""data" . Foreign.C.Error.eBADF1_closure" {
     Foreign.C.Error.eBADF1_closure:
         const GHC.Int.I32#_con_info;
         const 9;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.631274893 UTC

[section ""data" . Foreign.C.Error.eBADF_closure" {
     Foreign.C.Error.eBADF_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADF1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.631881396 UTC

[section ""data" . Foreign.C.Error.eALREADY1_closure" {
     Foreign.C.Error.eALREADY1_closure:
         const GHC.Int.I32#_con_info;
         const 114;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.632422242 UTC

[section ""data" . Foreign.C.Error.eALREADY_closure" {
     Foreign.C.Error.eALREADY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eALREADY1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.632939715 UTC

[section ""data" . Foreign.C.Error.eAGAIN_closure" {
     Foreign.C.Error.eAGAIN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eAGAIN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.633519783 UTC

[section ""data" . Foreign.C.Error.eAFNOSUPPORT1_closure" {
     Foreign.C.Error.eAFNOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 97;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.63409627 UTC

[section ""data" . Foreign.C.Error.eAFNOSUPPORT_closure" {
     Foreign.C.Error.eAFNOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eAFNOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.634661298 UTC

[section ""data" . Foreign.C.Error.eADV1_closure" {
     Foreign.C.Error.eADV1_closure:
         const GHC.Int.I32#_con_info;
         const 68;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.63522551 UTC

[section ""data" . Foreign.C.Error.eADV_closure" {
     Foreign.C.Error.eADV_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eADV1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.635776718 UTC

[section ""data" . Foreign.C.Error.eADDRNOTAVAIL1_closure" {
     Foreign.C.Error.eADDRNOTAVAIL1_closure:
         const GHC.Int.I32#_con_info;
         const 99;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.63630723 UTC

[section ""data" . Foreign.C.Error.eADDRNOTAVAIL_closure" {
     Foreign.C.Error.eADDRNOTAVAIL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eADDRNOTAVAIL1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.636855659 UTC

[section ""data" . Foreign.C.Error.eADDRINUSE1_closure" {
     Foreign.C.Error.eADDRINUSE1_closure:
         const GHC.Int.I32#_con_info;
         const 98;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.637814603 UTC

[section ""data" . Foreign.C.Error.eADDRINUSE_closure" {
     Foreign.C.Error.eADDRINUSE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eADDRINUSE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.638371156 UTC

[section ""data" . Foreign.C.Error.eACCES1_closure" {
     Foreign.C.Error.eACCES1_closure:
         const GHC.Int.I32#_con_info;
         const 13;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.638893778 UTC

[section ""data" . Foreign.C.Error.eACCES_closure" {
     Foreign.C.Error.eACCES_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eACCES1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.639990416 UTC

[section ""data" . Foreign.C.Error.e2BIG1_closure" {
     Foreign.C.Error.e2BIG1_closure:
         const GHC.Int.I32#_con_info;
         const 7;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.640556457 UTC

[section ""data" . Foreign.C.Error.e2BIG_closure" {
     Foreign.C.Error.e2BIG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.e2BIG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.641134677 UTC

[section ""data" . Foreign.C.Error.eOK1_closure" {
     Foreign.C.Error.eOK1_closure:
         const GHC.Int.I32#_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.641719963 UTC

[section ""data" . Foreign.C.Error.eOK_closure" {
     Foreign.C.Error.eOK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eOK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.644143272 UTC

[section ""data" . Foreign.C.Error.$werrnoToIOError_closure" {
     Foreign.C.Error.$werrnoToIOError_closure:
         const Foreign.C.Error.$werrnoToIOError_info;
         const 0;
 },
 Foreign.C.Error.$werrnoToIOError_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c930q: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2,
                                                       R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s92U7_entry() //  [R1]
         { info_tbl: [(c9328,
                       label: sat_s92U7_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9328: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9329; else goto c932a;
       c9329: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c932a: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s92U6::I64 = I64[R1 + 16];
           if (%MO_S_Lt_W64(_s92U6::I64, 60)) goto u932b; else goto u932e;
       u932b: // global
           if (%MO_S_Ge_W64(_s92U6::I64, 44)) goto c930K; else goto u932c;
       u932c: // global
           if (%MO_S_Lt_W64(_s92U6::I64, 1)) goto c930K; else goto u932d;
       u932d: // global
           switch [1 .. 43] _s92U6::I64 {
               case 1 : goto c9327;
               case 2, 3 : goto c9323;
               case 4 : goto c930O;
               case 5 : goto c930P;
               case 6 : goto c9323;
               case 7 : goto c931Z;
               case 8, 9 : goto c931X;
               case 10 : goto c9323;
               case 11, 12 : goto c931Z;
               case 13 : goto c9327;
               case 15 : goto c931X;
               case 16 : goto c931P;
               case 17 : goto c9325;
               case 18, 19 : goto c931Q;
               case 20, 21 : goto c931B;
               case 22 : goto c931X;
               case 23, 24 : goto c931Z;
               case 25 : goto c931Y;
               case 26 : goto c931P;
               case 27 : goto c9327;
               case 28 : goto c931Z;
               case 29 : goto c931Q;
               case 30 : goto c9327;
               case 31 : goto c931Z;
               case 32 : goto c9326;
               case 33 : goto c931X;
               case 34 : goto c931Q;
               case 35 : goto c931P;
               case 36 : goto c931X;
               case 37 : goto c931Z;
               case 38 : goto c931Q;
               case 39 : goto c931x;
               case 40 : goto c931X;
               case 42 : goto c9323;
               case 43 : goto c9326;
               default: {goto c930K;}
           }
       c930P: // global
           R1 = GHC.IO.Exception.HardwareFault_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c930O: // global
           R1 = GHC.IO.Exception.Interrupted_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       u932e: // global
           if (%MO_S_Ge_W64(_s92U6::I64, 123)) goto c930K; else goto u932f;
       u932f: // global
           switch [60 .. 122] _s92U6::I64 {
               case 60 : goto c931X;
               case 61 : goto c9323;
               case 62 : goto c9320;
               case 63 : goto c931Z;
               case 64 : goto c9323;
               case 66 : goto c931Y;
               case 67 : goto c9326;
               case 69 : goto c931x;
               case 70 : goto c9326;
               case 71 : goto c931K;
               case 72 : goto c931Q;
               case 74 : goto c931B;
               case 78 : goto c9326;
               case 84 : goto c931X;
               case 87 : goto c931Z;
               case 88, 89 : goto c931X;
               case 90 : goto c931Z;
               case 91 : goto c931K;
               case 92 : goto c931Q;
               case 93 : goto c931K;
               case 94, 95, 96, 97 : goto c931Q;
               case 98 : goto c931P;
               case 99 : goto c931Q;
               case 100 : goto c9326;
               case 101 : goto c9323;
               case 102, 104 : goto c9326;
               case 105 : goto c931Z;
               case 106 : goto c9325;
               case 107 : goto c931X;
               case 108 : goto c931Y;
               case 109 : goto c931Z;
               case 110 : goto c9320;
               case 111, 112, 113 : goto c9323;
               case 114, 115 : goto c9325;
               case 116 : goto c9326;
               case 122 : goto c9327;
               default: {goto c930K;}
           }
       c9327: // global
           R1 = GHC.IO.Exception.PermissionDenied_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9325: // global
           R1 = GHC.IO.Exception.AlreadyExists_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c931P: // global
           R1 = GHC.IO.Exception.ResourceBusy_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c931B: // global
           R1 = GHC.IO.Exception.InappropriateType_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c931Q: // global
           R1 = GHC.IO.Exception.UnsupportedOperation_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c931K: // global
           R1 = GHC.IO.Exception.ProtocolError_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c931x: // global
           R1 = GHC.IO.Exception.UnsatisfiedConstraints_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9326: // global
           R1 = GHC.IO.Exception.ResourceVanished_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c931Y: // global
           R1 = GHC.IO.Exception.IllegalOperation_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c931Z: // global
           R1 = GHC.IO.Exception.ResourceExhausted_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9320: // global
           R1 = GHC.IO.Exception.TimeExpired_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9323: // global
           R1 = GHC.IO.Exception.NoSuchThing_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c931X: // global
           R1 = GHC.IO.Exception.InvalidArgument_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c930K: // global
           R1 = GHC.IO.Exception.OtherError_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 Foreign.C.Error.$werrnoToIOError_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c932k,
                       label: Foreign.C.Error.$werrnoToIOError_info
                       rep:HeapRep static {
                             Fun {arity: 4 fun_type: ArgGen [False, True, False, False]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c932k: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c932l; else goto c932m;
       c932l: // global
           R1 = Foreign.C.Error.$werrnoToIOError_closure;
           P64[Sp - 32] = R2;
           I64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           call (stg_gc_fun)(R1) args: 40, res: 0, upd: 8;
       c932m: // global
           I64[Sp - 40] = block_c930u_info;
           P64[Sp - 32] = R2;
           I64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 40;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 _c930u() //  []
         { info_tbl: [(c930u,
                       label: block_c930u_info
                       rep:StackRep [False, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c930u: // global
           (_s92TZ::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [PtrHint] strerror(I64[Sp + 16]);
           I64[Sp - 8] = block_c930y_info;
           R1 = GHC.IO.Encoding.getForeignEncoding_closure;
           I64[Sp] = _s92TZ::I64;
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c930y() //  [R1]
         { info_tbl: [(c930y,
                       label: block_c930y_info
                       rep:StackRep [True, False, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c930y: // global
           _s92TZ::I64 = I64[Sp + 8];
           I64[Sp + 8] = block_c930A_info;
           R3 = _s92TZ::I64;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Foreign.$wpeekCString_entry(R3,
                                                R2) args: 8, res: 8, upd: 8;
     }
 },
 _c930A() //  [R1]
         { info_tbl: [(c930A,
                       label: block_c930A_info
                       rep:StackRep [False, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c930A: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto c932r; else goto c932q;
       c932r: // global
           HpAlloc = 112;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c932q: // global
           I64[Hp - 104] = GHC.Int.I32#_con_info;
           _s92TS::I64 = I64[Sp + 16];
           I64[Hp - 96] = _s92TS::I64;
           I64[Hp - 88] = GHC.Base.Just_con_info;
           P64[Hp - 80] = Hp - 103;
           I64[Hp - 72] = sat_s92U7_info;
           I64[Hp - 56] = _s92TS::I64;
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = P64[Sp + 24];
           P64[Hp - 32] = Hp - 72;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = R1;
           P64[Hp - 8] = Hp - 86;
           P64[Hp] = P64[Sp + 32];
           R1 = (Hp + -47) & (-8);
           Sp = Sp + 40;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.647857631 UTC

[section ""data" . Foreign.C.Error.errnoToIOError_closure" {
     Foreign.C.Error.errnoToIOError_closure:
         const Foreign.C.Error.errnoToIOError_info;
         const 0;
 },
 Foreign.C.Error.errnoToIOError_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c932B,
                       label: Foreign.C.Error.errnoToIOError_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c932B: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c932C; else goto c932D;
       c932C: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.errnoToIOError_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c932D: // global
           I64[Sp - 32] = block_c932y_info;
           R1 = R3;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u932H; else goto c932z;
       u932H: // global
           call _c932y(R1) args: 0, res: 0, upd: 0;
       c932z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c932y() //  [R1]
         { info_tbl: [(c932y,
                       label: block_c932y_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c932y: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 32;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.649402187 UTC

[section ""data" . Foreign.C.Error.$wlvl_closure" {
     Foreign.C.Error.$wlvl_closure:
         const Foreign.C.Error.$wlvl_info;
         const 0;
 },
 sat_s92Un_entry() //  [R1]
         { info_tbl: [(c932U,
                       label: sat_s92Un_info
                       rep:HeapRep 1 ptrs 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c932U: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c932V; else goto c932W;
       c932V: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c932W: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R5 = GHC.Base.Nothing_closure+1;
           R4 = GHC.Base.Nothing_closure+1;
           R3 = I64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s92Uo_entry() //  [R1]
         { info_tbl: [(c932X,
                       label: sat_s92Uo_info
                       rep:HeapRep 1 ptrs 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c932X: // global
           _s92Uo::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c932Y; else goto c932Z;
       c932Z: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9331; else goto c9330;
       c9331: // global
           HpAlloc = 32;
           goto c932Y;
       c932Y: // global
           R1 = _s92Uo::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9330: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92Uo::P64;
           _s92Uk::P64 = P64[_s92Uo::P64 + 16];
           _s92Ul::I64 = I64[_s92Uo::P64 + 24];
           I64[Hp - 24] = sat_s92Un_info;
           P64[Hp - 8] = _s92Uk::P64;
           I64[Hp] = _s92Ul::I64;
           R2 = Hp - 24;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 Foreign.C.Error.$wlvl_entry() //  [R2, R3]
         { info_tbl: [(c9332,
                       label: Foreign.C.Error.$wlvl_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9332: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9336; else goto c9335;
       c9336: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$wlvl_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9335: // global
           I64[Hp - 24] = sat_s92Uo_info;
           P64[Hp - 8] = R2;
           I64[Hp] = R3;
           R1 = Hp - 24;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.650987904 UTC

[section ""data" . Foreign.C.Error.throwErrno1_closure" {
     Foreign.C.Error.throwErrno1_closure:
         const Foreign.C.Error.throwErrno1_info;
         const 0;
 },
 Foreign.C.Error.throwErrno1_entry() //  [R2]
         { info_tbl: [(c933e,
                       label: Foreign.C.Error.throwErrno1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c933e: // global
           (_s92Uu::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92Uu::I64));
           R2 = R2;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.651817512 UTC

[section ""data" . Foreign.C.Error.throwErrno_closure" {
     Foreign.C.Error.throwErrno_closure:
         const Foreign.C.Error.throwErrno_info;
         const 0;
 },
 Foreign.C.Error.throwErrno_entry() //  [R2]
         { info_tbl: [(c933l,
                       label: Foreign.C.Error.throwErrno_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c933l: // global
           R2 = R2;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.652823009 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf1_closure" {
     Foreign.C.Error.throwErrnoIf1_closure:
         const Foreign.C.Error.throwErrnoIf1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf1_entry() //  [R2, R3, R4]
         { info_tbl: [(c933A,
                       label: Foreign.C.Error.throwErrnoIf1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c933A: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c933B; else goto c933C;
       c933B: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIf1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c933C: // global
           I64[Sp - 24] = block_c933s_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c933s() //  [R1]
         { info_tbl: [(c933s,
                       label: block_c933s_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c933s: // global
           I64[Sp] = block_c933u_info;
           R2 = R1;
           _s92UC::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s92UC::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c933u() //  [R1]
         { info_tbl: [(c933u,
                       label: block_c933u_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c933u: // global
           if (R1 & 7 == 1) goto c933x; else goto c933y;
       c933x: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c933y: // global
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.654150718 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf_closure" {
     Foreign.C.Error.throwErrnoIf_closure:
         const Foreign.C.Error.throwErrnoIf_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf_entry() //  [R2, R3, R4]
         { info_tbl: [(c933O,
                       label: Foreign.C.Error.throwErrnoIf_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c933O: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIf1_entry(R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.655209566 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf_1_closure" {
     Foreign.C.Error.throwErrnoIf_1_closure:
         const Foreign.C.Error.throwErrnoIf_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf_1_entry() //  [R2, R3, R4]
         { info_tbl: [(c9343,
                       label: Foreign.C.Error.throwErrnoIf_1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9343: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9344; else goto c9345;
       c9344: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIf_1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9345: // global
           I64[Sp - 24] = block_c933V_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c933V() //  [R1]
         { info_tbl: [(c933V,
                       label: block_c933V_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c933V: // global
           _s92UE::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c933X_info;
           R2 = R1;
           R1 = _s92UE::P64;
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c933X() //  [R1]
         { info_tbl: [(c933X,
                       label: block_c933X_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c933X: // global
           if (R1 & 7 == 1) goto c9340; else goto c9341;
       c9340: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9341: // global
           _s92UF::P64 = P64[Sp + 8];
           (_s92UP::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92UP::I64));
           R2 = _s92UF::P64;
           Sp = Sp + 16;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.656583569 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf__closure" {
     Foreign.C.Error.throwErrnoIf__closure:
         const Foreign.C.Error.throwErrnoIf__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf__entry() //  [R2, R3, R4]
         { info_tbl: [(c934j,
                       label: Foreign.C.Error.throwErrnoIf__info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c934j: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIf_1_entry(R4,
                                                     R3,
                                                     R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.657722931 UTC

[section ""data" . sat_s92US_closure" {
     sat_s92US_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.658302476 UTC

[section ""data" . sat_s92UT_closure" {
     sat_s92UT_closure:
         const :_con_info;
         const sat_s92US_closure+1;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.659053514 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus2_closure" {
     Foreign.C.Error.throwErrnoIfMinus2_closure:
         const Foreign.C.Error.throwErrnoIfMinus2_info;
         const 0;
         const 0;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus2_entry() //  [R1]
         { info_tbl: [(c934s,
                       label: Foreign.C.Error.throwErrnoIfMinus2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c934s: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c934t; else goto c934u;
       c934t: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c934u: // global
           (_c934p::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c934p::I64 == 0) goto c934r; else goto c934q;
       c934r: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c934q: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c934p::I64;
           R3 = sat_s92UT_closure+2;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.660751198 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1__closure" {
     Foreign.C.Error.throwErrnoIfMinus1__closure:
         const Foreign.C.Error.throwErrnoIfMinus1__info;
         const 0;
 },
 sat_s92UX_entry() //  [R1]
         { info_tbl: [(c934H,
                       label: sat_s92UX_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c934H: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c934I; else goto c934J;
       c934I: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c934J: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92UW_entry() //  [R1]
         { info_tbl: [(c934K,
                       label: ds_s92UW_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c934K: // global
           _s92UW::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c934L; else goto c934M;
       c934M: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c934O; else goto c934N;
       c934O: // global
           HpAlloc = 24;
           goto c934L;
       c934L: // global
           R1 = _s92UW::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c934N: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92UW::P64;
           _s92UV::P64 = P64[_s92UW::P64 + 16];
           I64[Hp - 16] = sat_s92UX_info;
           P64[Hp] = _s92UV::P64;
           R2 = _s92UV::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s92Vb_entry() //  [R1, R2, R3]
         { info_tbl: [(c9352,
                       label: sat_s92Vb_info
                       rep:HeapRep 2 ptrs { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9352: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c9353; else goto c9354;
       c9353: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9354: // global
           I64[Sp - 32] = block_c934U_info;
           _s92UU::P64 = P64[R1 + 5];
           _s92UW::P64 = P64[R1 + 13];
           R1 = R3;
           P64[Sp - 24] = _s92UU::P64;
           P64[Sp - 16] = _s92UW::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c934U() //  [R1]
         { info_tbl: [(c934U,
                       label: block_c934U_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c934U: // global
           _s92UW::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c934W_info;
           R2 = P64[Sp + 8];
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = R1;
           P64[Sp + 8] = _s92UW::P64;
           Sp = Sp - 8;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 _c934W() //  [R1]
         { info_tbl: [(c934W,
                       label: block_c934W_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c934W: // global
           if (R1 & 7 == 1) goto c934Z; else goto c9350;
       c934Z: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9350: // global
           _s92UY::P64 = P64[Sp + 8];
           (_s92V8::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92V8::I64));
           R2 = _s92UY::P64;
           Sp = Sp + 16;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1__entry() //  [R2, R3]
         { info_tbl: [(c935e,
                       label: Foreign.C.Error.throwErrnoIfMinus1__info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c935e: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c935i; else goto c935h;
       c935i: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c935h: // global
           I64[Hp - 40] = ds_s92UW_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92Vb_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 13;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.663663214 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1_closure" {
     Foreign.C.Error.throwErrnoIfMinus1_closure:
         const Foreign.C.Error.throwErrnoIfMinus1_info;
         const 0;
 },
 sat_s92Vf_entry() //  [R1]
         { info_tbl: [(c935v,
                       label: sat_s92Vf_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c935v: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c935w; else goto c935x;
       c935w: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c935x: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92Ve_entry() //  [R1]
         { info_tbl: [(c935y,
                       label: ds_s92Ve_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c935y: // global
           _s92Ve::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c935z; else goto c935A;
       c935A: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c935C; else goto c935B;
       c935C: // global
           HpAlloc = 24;
           goto c935z;
       c935z: // global
           R1 = _s92Ve::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c935B: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92Ve::P64;
           _s92Vd::P64 = P64[_s92Ve::P64 + 16];
           I64[Hp - 16] = sat_s92Vf_info;
           P64[Hp] = _s92Vd::P64;
           R2 = _s92Vd::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s92Vn_entry() //  [R1, R2, R3]
         { info_tbl: [(c935Q,
                       label: sat_s92Vn_info
                       rep:HeapRep 2 ptrs { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c935Q: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c935R; else goto c935S;
       c935R: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c935S: // global
           I64[Sp - 32] = block_c935I_info;
           _s92Vc::P64 = P64[R1 + 5];
           _s92Ve::P64 = P64[R1 + 13];
           R1 = R3;
           P64[Sp - 24] = _s92Vc::P64;
           P64[Sp - 16] = _s92Ve::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c935I() //  [R1]
         { info_tbl: [(c935I,
                       label: block_c935I_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c935I: // global
           _s92Vc::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c935K_info;
           R2 = _s92Vc::P64;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = R1;
           P64[Sp] = P64[Sp + 16];
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 _c935K() //  [R1]
         { info_tbl: [(c935K,
                       label: block_c935K_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c935K: // global
           if (R1 & 7 == 1) goto c935N; else goto c935O;
       c935N: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c935O: // global
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1_entry() //  [R2, R3]
         { info_tbl: [(c9360,
                       label: Foreign.C.Error.throwErrnoIfMinus1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9360: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9364; else goto c9363;
       c9364: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9363: // global
           I64[Hp - 40] = ds_s92Ve_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92Vn_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 13;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.666090501 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNull1_closure" {
     Foreign.C.Error.throwErrnoIfNull1_closure:
         const Foreign.C.Error.throwErrnoIfNull1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNull1_entry() //  [R2, R3]
         { info_tbl: [(c936e,
                       label: Foreign.C.Error.throwErrnoIfNull1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c936e: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c936f; else goto c936g;
       c936f: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfNull1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c936g: // global
           I64[Sp - 16] = block_c9369_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9369() //  [R1]
         { info_tbl: [(c9369,
                       label: block_c9369_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9369: // global
           I64[Sp - 8] = block_c936b_info;
           _s92Vt::P64 = R1;
           R1 = R1;
           P64[Sp] = _s92Vt::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u936q; else goto c936c;
       u936q: // global
           call _c936b(R1) args: 0, res: 0, upd: 0;
       c936c: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c936b() //  [R1]
         { info_tbl: [(c936b,
                       label: block_c936b_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c936b: // global
           if (I64[R1 + 7] == 0) goto c936p; else goto c936o;
       c936p: // global
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
       c936o: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.667376759 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNull_closure" {
     Foreign.C.Error.throwErrnoIfNull_closure:
         const Foreign.C.Error.throwErrnoIfNull_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNull_entry() //  [R2, R3]
         { info_tbl: [(c936v,
                       label: Foreign.C.Error.throwErrnoIfNull_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c936v: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfNull1_entry(R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.668539842 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry2_closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry2_closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry2_entry() //  [R2, R3, R4]
         { info_tbl: [(c936K,
                       label: Foreign.C.Error.throwErrnoIfMinus1Retry2_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c936K: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c936L; else goto u937a;
       c936L: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u937a: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c936z() args: 0, res: 0, upd: 0;
     }
 },
 _c936z() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c936z: // global
           I64[Sp - 8] = block_c936C_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c936C() //  [R1]
         { info_tbl: [(c936C,
                       label: block_c936C_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c936C: // global
           I64[Sp - 8] = block_c936E_info;
           R2 = R1;
           _s92VD::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp] = _s92VD::P64;
           Sp = Sp - 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c936E() //  [R1]
         { info_tbl: [(c936E,
                       label: block_c936E_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c936E: // global
           if (R1 & 7 == 1) goto c936H; else goto c936I;
       c936H: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c936I: // global
           _s92Vx::P64 = P64[Sp + 16];
           _s92Vy::P64 = P64[Sp + 24];
           _s92Vz::P64 = P64[Sp + 32];
           (_s92VI::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           if (%MO_SS_Conv_W64_W32(_s92VI::I64) == 4 :: W32) goto c9376; else goto c9370;
       c9376: // global
           P64[Sp + 16] = _s92Vx::P64;
           P64[Sp + 24] = _s92Vy::P64;
           P64[Sp + 32] = _s92Vz::P64;
           Sp = Sp + 16;
           call _c936z() args: 0, res: 0, upd: 0;
       c9370: // global
           R2 = _s92Vy::P64;
           Sp = Sp + 40;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.670132089 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetry_closure" {
     Foreign.C.Error.throwErrnoIfRetry_closure:
         const Foreign.C.Error.throwErrnoIfRetry_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetry_entry() //  [R2, R3, R4]
         { info_tbl: [(c937i,
                       label: Foreign.C.Error.throwErrnoIfRetry_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c937i: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.671045554 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetry_1_closure" {
     Foreign.C.Error.throwErrnoIfRetry_1_closure:
         const Foreign.C.Error.throwErrnoIfRetry_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetry_1_entry() //  [R2, R3, R4]
         { info_tbl: [(c937r,
                       label: Foreign.C.Error.throwErrnoIfRetry_1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c937r: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c937s; else goto c937t;
       c937s: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfRetry_1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c937t: // global
           I64[Sp - 8] = block_c937p_info;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c937p() //  []
         { info_tbl: [(c937p,
                       label: block_c937p_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c937p: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.672118564 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetry__closure" {
     Foreign.C.Error.throwErrnoIfRetry__closure:
         const Foreign.C.Error.throwErrnoIfRetry__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetry__entry() //  [R2, R3, R4]
         { info_tbl: [(c937z,
                       label: Foreign.C.Error.throwErrnoIfRetry__info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c937z: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfRetry_1_entry(R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.673864205 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry__closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry__closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry__info;
         const 0;
 },
 sat_s92VU_entry() //  [R1]
         { info_tbl: [(c937O,
                       label: sat_s92VU_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c937O: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c937P; else goto c937Q;
       c937P: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c937Q: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92VT_entry() //  [R1]
         { info_tbl: [(c937R,
                       label: ds_s92VT_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c937R: // global
           _s92VT::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c937S; else goto c937T;
       c937T: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c937V; else goto c937U;
       c937V: // global
           HpAlloc = 24;
           goto c937S;
       c937S: // global
           R1 = _s92VT::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c937U: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92VT::P64;
           _s92VS::P64 = P64[_s92VT::P64 + 16];
           I64[Hp - 16] = sat_s92VU_info;
           P64[Hp] = _s92VS::P64;
           R2 = _s92VS::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 pred_s92VV_entry() //  [R1, R2]
         { info_tbl: [(c9381,
                       label: pred_s92VV_info
                       rep:HeapRep 2 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9381: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9382; else goto c9383;
       c9382: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9383: // global
           _s92VW::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s92VW::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 sat_s92W3_entry() //  [R1, R2, R3]
         { info_tbl: [(c938b,
                       label: sat_s92W3_info
                       rep:HeapRep 1 ptrs { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c938b: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c938c; else goto c938d;
       c938c: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c938d: // global
           I64[Sp - 8] = block_c9389_info;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9389() //  []
         { info_tbl: [(c9389,
                       label: block_c9389_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9389: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry__entry() //  [R2, R3]
         { info_tbl: [(c938f,
                       label: Foreign.C.Error.throwErrnoIfMinus1Retry__info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c938f: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c938j; else goto c938i;
       c938j: // global
           HpAlloc = 64;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c938i: // global
           I64[Hp - 56] = ds_s92VT_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = pred_s92VV_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = Hp - 56;
           I64[Hp - 8] = sat_s92W3_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 5;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.676485728 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry1_closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry1_closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry1_info;
         const 0;
 },
 sat_s92W7_entry() //  [R1]
         { info_tbl: [(c938w,
                       label: sat_s92W7_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c938w: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c938x; else goto c938y;
       c938x: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c938y: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92W6_entry() //  [R1]
         { info_tbl: [(c938z,
                       label: ds_s92W6_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c938z: // global
           _s92W6::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c938A; else goto c938B;
       c938B: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c938D; else goto c938C;
       c938D: // global
           HpAlloc = 24;
           goto c938A;
       c938A: // global
           R1 = _s92W6::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c938C: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92W6::P64;
           _s92W5::P64 = P64[_s92W6::P64 + 16];
           I64[Hp - 16] = sat_s92W7_info;
           P64[Hp] = _s92W5::P64;
           R2 = _s92W5::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s92W9_entry() //  [R1, R2]
         { info_tbl: [(c938J,
                       label: sat_s92W9_info
                       rep:HeapRep 2 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c938J: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c938K; else goto c938L;
       c938K: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c938L: // global
           _s92W8::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s92W8::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry1_entry() //  [R2, R3]
         { info_tbl: [(c938M,
                       label: Foreign.C.Error.throwErrnoIfMinus1Retry1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c938M: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c938Q; else goto c938P;
       c938Q: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c938P: // global
           I64[Hp - 40] = ds_s92W6_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92W9_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R2 = Hp - 15;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry2_closure+4;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.678274007 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry_closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry_closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry_entry() //  [R2, R3]
         { info_tbl: [(c938V,
                       label: Foreign.C.Error.throwErrnoIfMinus1Retry_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c938V: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1Retry1_entry(R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.67922295 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetry2_closure" {
     Foreign.C.Error.throwErrnoIfNullRetry2_closure:
         const Foreign.C.Error.throwErrnoIfNullRetry2_info;
 },
 Foreign.C.Error.throwErrnoIfNullRetry2_entry() //  [R2]
         { info_tbl: [(c9395,
                       label: Foreign.C.Error.throwErrnoIfNullRetry2_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9395: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9396; else goto c9397;
       c9396: // global
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfNullRetry2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9397: // global
           I64[Sp - 8] = block_c9392_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u939c; else goto c9393;
       u939c: // global
           call _c9392(R1) args: 0, res: 0, upd: 0;
       c9393: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9392() //  [R1]
         { info_tbl: [(c9392,
                       label: block_c9392_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9392: // global
           R1 = I64[((I64[R1 + 7] == 0) << 3) + GHC.Types.Bool_closure_tbl];
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.680315817 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetry1_closure" {
     Foreign.C.Error.throwErrnoIfNullRetry1_closure:
         const Foreign.C.Error.throwErrnoIfNullRetry1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetry1_entry() //  [R2, R3]
         { info_tbl: [(c939h,
                       label: Foreign.C.Error.throwErrnoIfNullRetry1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c939h: // global
           R4 = R3;
           R3 = R2;
           R2 = Foreign.C.Error.throwErrnoIfNullRetry2_closure+1;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.681190245 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetry_closure" {
     Foreign.C.Error.throwErrnoIfNullRetry_closure:
         const Foreign.C.Error.throwErrnoIfNullRetry_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetry_entry() //  [R2, R3]
         { info_tbl: [(c939o,
                       label: Foreign.C.Error.throwErrnoIfNullRetry_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c939o: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfNullRetry1_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.682573709 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry() //  [R2,
                                                               R3, R4, R5]
         { info_tbl: [(c939D,
                       label: Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c939D: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c939E; else goto u93ad;
       c939E: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u93ad: // global
           P64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           call _c939s() args: 0, res: 0, upd: 0;
     }
 },
 _c939s() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c939s: // global
           I64[Sp - 8] = block_c939v_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c939v() //  [R1]
         { info_tbl: [(c939v,
                       label: block_c939v_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c939v: // global
           I64[Sp - 8] = block_c939x_info;
           R2 = R1;
           _s92Wl::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp] = _s92Wl::P64;
           Sp = Sp - 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c939x() //  [R1]
         { info_tbl: [(c939x,
                       label: block_c939x_info
                       rep:StackRep [False, False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c939x: // global
           if (R1 & 7 == 1) goto c939A; else goto c939B;
       c939A: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c939B: // global
           _s92We::P64 = P64[Sp + 16];
           _s92Wf::P64 = P64[Sp + 24];
           _s92Wg::P64 = P64[Sp + 32];
           _s92Wh::P64 = P64[Sp + 40];
           (_s92Wq::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           _s92Wr::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92Wq::I64));
           if (_s92Wr::I64 != 4) goto u93ac; else goto c939Z;
       u93ac: // global
           if (_s92Wr::I64 != 11) goto c939T; else goto c93a8;
       c939T: // global
           R2 = _s92Wf::P64;
           Sp = Sp + 48;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
       c93a8: // global
           I64[Sp + 8] = block_c93a7_info;
           R1 = _s92Wh::P64;
           Sp = Sp + 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
       c939Z: // global
           P64[Sp + 16] = _s92We::P64;
           P64[Sp + 24] = _s92Wf::P64;
           P64[Sp + 32] = _s92Wg::P64;
           P64[Sp + 40] = _s92Wh::P64;
           Sp = Sp + 16;
           call _c939s() args: 0, res: 0, upd: 0;
     }
 },
 _c93a7() //  []
         { info_tbl: [(c93a7,
                       label: block_c93a7_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93a7: // global
           P64[Sp + 8] = P64[Sp + 8];
           P64[Sp + 16] = P64[Sp + 16];
           P64[Sp + 24] = P64[Sp + 24];
           P64[Sp + 32] = P64[Sp + 32];
           Sp = Sp + 8;
           call _c939s() args: 0, res: 0, upd: 0;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.684471337 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetryMayBlock_closure" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock_closure:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetryMayBlock_entry() //  [R2, R3, R4,
                                                        R5]
         { info_tbl: [(c93an,
                       label: Foreign.C.Error.throwErrnoIfRetryMayBlock_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93an: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.685617495 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetryMayBlock_1_entry() //  [R2, R3,
                                                          R4, R5]
         { info_tbl: [(c93aw,
                       label: Foreign.C.Error.throwErrnoIfRetryMayBlock_1_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93aw: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c93ax; else goto c93ay;
       c93ax: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93ay: // global
           I64[Sp - 8] = block_c93au_info;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c93au() //  []
         { info_tbl: [(c93au,
                       label: block_c93au_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93au: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.686732511 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetryMayBlock__closure" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock__closure:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetryMayBlock__entry() //  [R2, R3, R4,
                                                         R5]
         { info_tbl: [(c93aE,
                       label: Foreign.C.Error.throwErrnoIfRetryMayBlock__info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93aE: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfRetryMayBlock_1_entry(R5,
                                                                  R4,
                                                                  R3,
                                                                  R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.688275171 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__info;
         const 0;
 },
 sat_s92WG_entry() //  [R1]
         { info_tbl: [(c93aT,
                       label: sat_s92WG_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93aT: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93aU; else goto c93aV;
       c93aU: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93aV: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92WF_entry() //  [R1]
         { info_tbl: [(c93aW,
                       label: ds_s92WF_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93aW: // global
           _s92WF::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93aX; else goto c93aY;
       c93aY: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93b0; else goto c93aZ;
       c93b0: // global
           HpAlloc = 24;
           goto c93aX;
       c93aX: // global
           R1 = _s92WF::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93aZ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92WF::P64;
           _s92WE::P64 = P64[_s92WF::P64 + 16];
           I64[Hp - 16] = sat_s92WG_info;
           P64[Hp] = _s92WE::P64;
           R2 = _s92WE::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 pred_s92WH_entry() //  [R1, R2]
         { info_tbl: [(c93b6,
                       label: pred_s92WH_info
                       rep:HeapRep 2 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93b6: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93b7; else goto c93b8;
       c93b7: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c93b8: // global
           _s92WI::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s92WI::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 sat_s92WQ_entry() //  [R1, R2, R3, R4]
         { info_tbl: [(c93bg,
                       label: sat_s92WQ_info
                       rep:HeapRep 1 ptrs { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93bg: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c93bh; else goto c93bi;
       c93bh: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93bi: // global
           I64[Sp - 8] = block_c93be_info;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 4];
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c93be() //  []
         { info_tbl: [(c93be,
                       label: block_c93be_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93be: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__entry() //  [R2,
                                                               R3]
         { info_tbl: [(c93bk,
                       label: Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93bk: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c93bo; else goto c93bn;
       c93bo: // global
           HpAlloc = 64;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93bn: // global
           I64[Hp - 56] = ds_s92WF_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = pred_s92WH_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = Hp - 56;
           I64[Hp - 8] = sat_s92WQ_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 4;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.690926489 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_info;
         const 0;
 },
 sat_s92WU_entry() //  [R1]
         { info_tbl: [(c93bB,
                       label: sat_s92WU_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93bB: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93bC; else goto c93bD;
       c93bC: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93bD: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92WT_entry() //  [R1]
         { info_tbl: [(c93bE,
                       label: ds_s92WT_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93bE: // global
           _s92WT::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93bF; else goto c93bG;
       c93bG: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93bI; else goto c93bH;
       c93bI: // global
           HpAlloc = 24;
           goto c93bF;
       c93bF: // global
           R1 = _s92WT::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93bH: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92WT::P64;
           _s92WS::P64 = P64[_s92WT::P64 + 16];
           I64[Hp - 16] = sat_s92WU_info;
           P64[Hp] = _s92WS::P64;
           R2 = _s92WS::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s92WW_entry() //  [R1, R2]
         { info_tbl: [(c93bO,
                       label: sat_s92WW_info
                       rep:HeapRep 2 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93bO: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93bP; else goto c93bQ;
       c93bP: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c93bQ: // global
           _s92WV::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s92WV::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_entry() //  [R2,
                                                               R3]
         { info_tbl: [(c93bR,
                       label: Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93bR: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c93bV; else goto c93bU;
       c93bV: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93bU: // global
           I64[Hp - 40] = ds_s92WT_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92WW_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R2 = Hp - 15;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure+5;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.692765041 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_entry() //  [R2,
                                                              R3]
         { info_tbl: [(c93c0,
                       label: Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93c0: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_entry(R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.693660987 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_closure" {
     Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_closure:
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_entry() //  [R2, R3,
                                                             R4]
         { info_tbl: [(c93c7,
                       label: Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93c7: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = Foreign.C.Error.throwErrnoIfNullRetry2_closure+1;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.694588174 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetryMayBlock_closure" {
     Foreign.C.Error.throwErrnoIfNullRetryMayBlock_closure:
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetryMayBlock_entry() //  [R2, R3,
                                                            R4]
         { info_tbl: [(c93ce,
                       label: Foreign.C.Error.throwErrnoIfNullRetryMayBlock_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93ce: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_entry(R4,
                                                                     R3,
                                                                     R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.695822282 UTC

[section ""data" . Foreign.C.Error.$wlvl1_closure" {
     Foreign.C.Error.$wlvl1_closure:
         const Foreign.C.Error.$wlvl1_info;
         const 0;
 },
 sat_s92X2_entry() //  [R1]
         { info_tbl: [(c93cu,
                       label: sat_s92X2_info
                       rep:HeapRep 2 ptrs 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93cu: // global
           _s92X2::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c93cv; else goto c93cw;
       c93cw: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c93cy; else goto c93cx;
       c93cy: // global
           HpAlloc = 16;
           goto c93cv;
       c93cv: // global
           R1 = _s92X2::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93cx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92X2::P64;
           _s92WX::P64 = P64[_s92X2::P64 + 16];
           _s92WZ::P64 = P64[_s92X2::P64 + 24];
           _s92WY::I64 = I64[_s92X2::P64 + 32];
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = _s92WZ::P64;
           R5 = Hp - 6;
           R4 = GHC.Base.Nothing_closure+1;
           R3 = _s92WY::I64;
           R2 = _s92WX::P64;
           Sp = Sp - 16;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s92X3_entry() //  [R1]
         { info_tbl: [(c93cz,
                       label: sat_s92X3_info
                       rep:HeapRep 2 ptrs 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93cz: // global
           _s92X3::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c93cA; else goto c93cB;
       c93cB: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c93cD; else goto c93cC;
       c93cD: // global
           HpAlloc = 40;
           goto c93cA;
       c93cA: // global
           R1 = _s92X3::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93cC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92X3::P64;
           _s92WX::P64 = P64[_s92X3::P64 + 16];
           _s92WZ::P64 = P64[_s92X3::P64 + 24];
           _s92WY::I64 = I64[_s92X3::P64 + 32];
           I64[Hp - 32] = sat_s92X2_info;
           P64[Hp - 16] = _s92WX::P64;
           P64[Hp - 8] = _s92WZ::P64;
           I64[Hp] = _s92WY::I64;
           R2 = Hp - 32;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 Foreign.C.Error.$wlvl1_entry() //  [R2, R3, R4]
         { info_tbl: [(c93cE,
                       label: Foreign.C.Error.$wlvl1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93cE: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c93cI; else goto c93cH;
       c93cI: // global
           HpAlloc = 40;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$wlvl1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93cH: // global
           I64[Hp - 32] = sat_s92X3_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R4;
           I64[Hp] = R3;
           R1 = Hp - 32;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.697750882 UTC

[section ""data" . Foreign.C.Error.throwErrnoPath1_closure" {
     Foreign.C.Error.throwErrnoPath1_closure:
         const Foreign.C.Error.throwErrnoPath1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPath1_entry() //  [R2, R3]
         { info_tbl: [(c93cQ,
                       label: Foreign.C.Error.throwErrnoPath1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93cQ: // global
           _s92X5::P64 = R3;
           (_s92Xa::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R4 = _s92X5::P64;
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92Xa::I64));
           R2 = R2;
           call Foreign.C.Error.$wlvl1_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.698702253 UTC

[section ""data" . Foreign.C.Error.throwErrnoPath_closure" {
     Foreign.C.Error.throwErrnoPath_closure:
         const Foreign.C.Error.throwErrnoPath_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPath_entry() //  [R2, R3]
         { info_tbl: [(c93cX,
                       label: Foreign.C.Error.throwErrnoPath_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93cX: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.69976744 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf1_closure" {
     Foreign.C.Error.throwErrnoPathIf1_closure:
         const Foreign.C.Error.throwErrnoPathIf1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf1_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c93dc,
                       label: Foreign.C.Error.throwErrnoPathIf1_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93dc: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93dd; else goto c93de;
       c93dd: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIf1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93de: // global
           I64[Sp - 32] = block_c93d4_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93d4() //  [R1]
         { info_tbl: [(c93d4,
                       label: block_c93d4_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93d4: // global
           I64[Sp] = block_c93d6_info;
           R2 = R1;
           _s92Xj::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s92Xj::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93d6() //  [R1]
         { info_tbl: [(c93d6,
                       label: block_c93d6_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93d6: // global
           if (R1 & 7 == 1) goto c93d9; else goto c93da;
       c93d9: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93da: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.70276657 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf_closure" {
     Foreign.C.Error.throwErrnoPathIf_closure:
         const Foreign.C.Error.throwErrnoPathIf_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c93dq,
                       label: Foreign.C.Error.throwErrnoPathIf_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93dq: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPathIf1_entry(R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.703937493 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf_1_closure" {
     Foreign.C.Error.throwErrnoPathIf_1_closure:
         const Foreign.C.Error.throwErrnoPathIf_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf_1_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c93dF,
                       label: Foreign.C.Error.throwErrnoPathIf_1_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93dF: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93dG; else goto c93dH;
       c93dG: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIf_1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93dH: // global
           I64[Sp - 32] = block_c93dx_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93dx() //  [R1]
         { info_tbl: [(c93dx,
                       label: block_c93dx_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93dx: // global
           _s92Xl::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c93dz_info;
           R2 = R1;
           R1 = _s92Xl::P64;
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93dz() //  [R1]
         { info_tbl: [(c93dz,
                       label: block_c93dz_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93dz: // global
           if (R1 & 7 == 1) goto c93dC; else goto c93dD;
       c93dC: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93dD: // global
           _s92Xm::P64 = P64[Sp + 8];
           _s92Xn::P64 = P64[Sp + 16];
           (_s92Xx::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R4 = _s92Xn::P64;
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92Xx::I64));
           R2 = _s92Xm::P64;
           Sp = Sp + 24;
           call Foreign.C.Error.$wlvl1_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.705358287 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf__closure" {
     Foreign.C.Error.throwErrnoPathIf__closure:
         const Foreign.C.Error.throwErrnoPathIf__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf__entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c93dV,
                       label: Foreign.C.Error.throwErrnoPathIf__info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93dV: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPathIf_1_entry(R5,
                                                         R4,
                                                         R3,
                                                         R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.706923454 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfMinus1__closure" {
     Foreign.C.Error.throwErrnoPathIfMinus1__closure:
         const Foreign.C.Error.throwErrnoPathIfMinus1__info;
         const 0;
 },
 sat_s92XD_entry() //  [R1]
         { info_tbl: [(c93ea,
                       label: sat_s92XD_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93ea: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93eb; else goto c93ec;
       c93eb: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93ec: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92XC_entry() //  [R1]
         { info_tbl: [(c93ed,
                       label: ds_s92XC_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93ed: // global
           _s92XC::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93ee; else goto c93ef;
       c93ef: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93eh; else goto c93eg;
       c93eh: // global
           HpAlloc = 24;
           goto c93ee;
       c93ee: // global
           R1 = _s92XC::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93eg: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92XC::P64;
           _s92XB::P64 = P64[_s92XC::P64 + 16];
           I64[Hp - 16] = sat_s92XD_info;
           P64[Hp] = _s92XB::P64;
           R2 = _s92XB::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s92XS_entry() //  [R1, R2, R3, R4]
         { info_tbl: [(c93ev,
                       label: sat_s92XS_info
                       rep:HeapRep 2 ptrs { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93ev: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c93ew; else goto c93ex;
       c93ew: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93ex: // global
           I64[Sp - 40] = block_c93en_info;
           _s92XA::P64 = P64[R1 + 4];
           _s92XC::P64 = P64[R1 + 12];
           R1 = R4;
           P64[Sp - 32] = _s92XA::P64;
           P64[Sp - 24] = _s92XC::P64;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 40;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93en() //  [R1]
         { info_tbl: [(c93en,
                       label: block_c93en_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93en: // global
           _s92XC::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c93ep_info;
           R2 = P64[Sp + 8];
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = R1;
           P64[Sp + 8] = _s92XC::P64;
           Sp = Sp - 8;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 _c93ep() //  [R1]
         { info_tbl: [(c93ep,
                       label: block_c93ep_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93ep: // global
           if (R1 & 7 == 1) goto c93es; else goto c93et;
       c93es: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93et: // global
           _s92XE::P64 = P64[Sp + 8];
           _s92XF::P64 = P64[Sp + 16];
           (_s92XP::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R4 = _s92XF::P64;
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92XP::I64));
           R2 = _s92XE::P64;
           Sp = Sp + 24;
           call Foreign.C.Error.$wlvl1_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoPathIfMinus1__entry() //  [R2, R3]
         { info_tbl: [(c93eH,
                       label: Foreign.C.Error.throwErrnoPathIfMinus1__info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93eH: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c93eL; else goto c93eK;
       c93eL: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIfMinus1__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93eK: // global
           I64[Hp - 40] = ds_s92XC_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92XS_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 12;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.709575245 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfNull1_closure" {
     Foreign.C.Error.throwErrnoPathIfNull1_closure:
         const Foreign.C.Error.throwErrnoPathIfNull1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIfNull1_entry() //  [R2, R3, R4]
         { info_tbl: [(c93eV,
                       label: Foreign.C.Error.throwErrnoPathIfNull1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93eV: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93eW; else goto c93eX;
       c93eW: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIfNull1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93eX: // global
           I64[Sp - 24] = block_c93eQ_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93eQ() //  [R1]
         { info_tbl: [(c93eQ,
                       label: block_c93eQ_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93eQ: // global
           I64[Sp - 8] = block_c93eS_info;
           _s92XZ::P64 = R1;
           R1 = R1;
           P64[Sp] = _s92XZ::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u93f7; else goto c93eT;
       u93f7: // global
           call _c93eS(R1) args: 0, res: 0, upd: 0;
       c93eT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93eS() //  [R1]
         { info_tbl: [(c93eS,
                       label: block_c93eS_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93eS: // global
           if (I64[R1 + 7] == 0) goto c93f6; else goto c93f5;
       c93f6: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
       c93f5: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.710882669 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfNull_closure" {
     Foreign.C.Error.throwErrnoPathIfNull_closure:
         const Foreign.C.Error.throwErrnoPathIfNull_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIfNull_entry() //  [R2, R3, R4]
         { info_tbl: [(c93fc,
                       label: Foreign.C.Error.throwErrnoPathIfNull_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93fc: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPathIfNull1_entry(R4,
                                                            R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.712385337 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfMinus1_closure" {
     Foreign.C.Error.throwErrnoPathIfMinus1_closure:
         const Foreign.C.Error.throwErrnoPathIfMinus1_info;
         const 0;
 },
 sat_s92Y6_entry() //  [R1]
         { info_tbl: [(c93fr,
                       label: sat_s92Y6_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93fr: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93fs; else goto c93ft;
       c93fs: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93ft: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92Y5_entry() //  [R1]
         { info_tbl: [(c93fu,
                       label: ds_s92Y5_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93fu: // global
           _s92Y5::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93fv; else goto c93fw;
       c93fw: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93fy; else goto c93fx;
       c93fy: // global
           HpAlloc = 24;
           goto c93fv;
       c93fv: // global
           R1 = _s92Y5::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93fx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92Y5::P64;
           _s92Y4::P64 = P64[_s92Y5::P64 + 16];
           I64[Hp - 16] = sat_s92Y6_info;
           P64[Hp] = _s92Y4::P64;
           R2 = _s92Y4::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s92Yf_entry() //  [R1, R2, R3, R4]
         { info_tbl: [(c93fM,
                       label: sat_s92Yf_info
                       rep:HeapRep 2 ptrs { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93fM: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c93fN; else goto c93fO;
       c93fN: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93fO: // global
           I64[Sp - 40] = block_c93fE_info;
           _s92Y3::P64 = P64[R1 + 4];
           _s92Y5::P64 = P64[R1 + 12];
           R1 = R4;
           P64[Sp - 32] = _s92Y3::P64;
           P64[Sp - 24] = _s92Y5::P64;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 40;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93fE() //  [R1]
         { info_tbl: [(c93fE,
                       label: block_c93fE_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93fE: // global
           _s92Y3::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c93fG_info;
           R2 = _s92Y3::P64;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = R1;
           P64[Sp] = P64[Sp + 16];
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 _c93fG() //  [R1]
         { info_tbl: [(c93fG,
                       label: block_c93fG_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93fG: // global
           if (R1 & 7 == 1) goto c93fJ; else goto c93fK;
       c93fJ: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93fK: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoPathIfMinus1_entry() //  [R2, R3]
         { info_tbl: [(c93fW,
                       label: Foreign.C.Error.throwErrnoPathIfMinus1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93fW: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c93g0; else goto c93fZ;
       c93g0: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIfMinus1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93fZ: // global
           I64[Hp - 40] = ds_s92Y5_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92Yf_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 12;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.714478763 UTC

[section ""relreadonly" . S932t_srt" {
     S932t_srt:
         const GHC.IO.Encoding.getForeignEncoding_closure;
         const GHC.Foreign.$wpeekCString_closure;
         const Foreign.C.Error.$werrnoToIOError_closure;
         const Foreign.C.Error.errnoToIOError_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const Foreign.C.Error.$wlvl_closure;
         const Foreign.C.Error.throwErrno1_closure;
         const Foreign.C.Error.throwErrnoIf1_closure;
         const Foreign.C.Error.throwErrnoIf_1_closure;
         const sat_s92UT_closure;
         const Foreign.C.Error.throwErrnoIfMinus2_closure;
         const Foreign.C.Error.throwErrnoIfMinus1__closure;
         const Foreign.C.Error.throwErrnoIfMinus1_closure;
         const Foreign.C.Error.throwErrnoIfNull1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
         const Foreign.C.Error.throwErrnoIfRetry_1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry__closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry1_closure;
         const Foreign.C.Error.throwErrnoIfNullRetry1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure;
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure;
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure;
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_closure;
         const Foreign.C.Error.$wlvl1_closure;
         const Foreign.C.Error.throwErrnoPath1_closure;
         const Foreign.C.Error.throwErrnoPathIf1_closure;
         const Foreign.C.Error.throwErrnoPathIf_1_closure;
         const Foreign.C.Error.throwErrnoPathIfMinus1__closure;
         const Foreign.C.Error.throwErrnoPathIfNull1_closure;
         const Foreign.C.Error.throwErrnoPathIfMinus1_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.715202918 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:04:11.715704714 UTC

[section ""cstring" . Foreign.C.Error.$trModule4_bytes" {
     Foreign.C.Error.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.716245594 UTC

[section ""data" . Foreign.C.Error.$trModule3_closure" {
     Foreign.C.Error.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.716803316 UTC

[section ""cstring" . Foreign.C.Error.$trModule2_bytes" {
     Foreign.C.Error.$trModule2_bytes:
         I8[] [70,111,114,101,105,103,110,46,67,46,69,114,114,111,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.71736695 UTC

[section ""data" . Foreign.C.Error.$trModule1_closure" {
     Foreign.C.Error.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.717901857 UTC

[section ""data" . Foreign.C.Error.$trModule_closure" {
     Foreign.C.Error.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Foreign.C.Error.$trModule3_closure+1;
         const Foreign.C.Error.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.71846351 UTC

[section ""data" . $krep_r92Th_closure" {
     $krep_r92Th_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Foreign.C.Types.$tcCInt_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.71899451 UTC

[section ""cstring" . Foreign.C.Error.$tcErrno2_bytes" {
     Foreign.C.Error.$tcErrno2_bytes:
         I8[] [69,114,114,110,111]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.719541383 UTC

[section ""data" . Foreign.C.Error.$tcErrno1_closure" {
     Foreign.C.Error.$tcErrno1_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$tcErrno2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.72013027 UTC

[section ""data" . Foreign.C.Error.$tcErrno_closure" {
     Foreign.C.Error.$tcErrno_closure:
         const GHC.Types.TyCon_con_info;
         const Foreign.C.Error.$trModule_closure+1;
         const Foreign.C.Error.$tcErrno1_closure+1;
         const GHC.Types.krep$*_closure;
         const 9614618910057470603;
         const 5790003468206630810;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.720755774 UTC

[section ""data" . $krep1_r92Ti_closure" {
     $krep1_r92Ti_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Foreign.C.Error.$tcErrno_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.72147092 UTC

[section ""data" . Foreign.C.Error.$tc'Errno1_closure" {
     Foreign.C.Error.$tc'Errno1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r92Th_closure+1;
         const $krep1_r92Ti_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.722055994 UTC

[section ""cstring" . Foreign.C.Error.$tc'Errno3_bytes" {
     Foreign.C.Error.$tc'Errno3_bytes:
         I8[] [39,69,114,114,110,111]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.722564995 UTC

[section ""data" . Foreign.C.Error.$tc'Errno2_closure" {
     Foreign.C.Error.$tc'Errno2_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$tc'Errno3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.723102174 UTC

[section ""data" . Foreign.C.Error.$tc'Errno_closure" {
     Foreign.C.Error.$tc'Errno_closure:
         const GHC.Types.TyCon_con_info;
         const Foreign.C.Error.$trModule_closure+1;
         const Foreign.C.Error.$tc'Errno2_closure+1;
         const Foreign.C.Error.$tc'Errno1_closure+4;
         const 18175500743799072511;
         const 6332857689812514354;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.723965498 UTC

[section ""data" . Foreign.C.Error.getErrno1_closure" {
     Foreign.C.Error.getErrno1_closure:
         const Foreign.C.Error.getErrno1_info;
 },
 Foreign.C.Error.getErrno1_entry() //  []
         { info_tbl: [(c93g8,
                       label: Foreign.C.Error.getErrno1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93g8: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c93ge; else goto c93gd;
       c93ge: // global
           HpAlloc = 16;
           R1 = Foreign.C.Error.getErrno1_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c93gd: // global
           (_s92To::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92To::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.724939045 UTC

[section ""data" . Foreign.C.Error.getErrno_closure" {
     Foreign.C.Error.getErrno_closure:
         const Foreign.C.Error.getErrno_info;
 },
 Foreign.C.Error.getErrno_entry() //  []
         { info_tbl: [(c93gj,
                       label: Foreign.C.Error.getErrno_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93gj: // global
           call Foreign.C.Error.getErrno1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.725779598 UTC

[section ""data" . Foreign.C.Error.resetErrno1_closure" {
     Foreign.C.Error.resetErrno1_closure:
         const Foreign.C.Error.resetErrno1_info;
 },
 Foreign.C.Error.resetErrno1_entry() //  []
         { info_tbl: [(c93gs,
                       label: Foreign.C.Error.resetErrno1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93gs: // global
           call "ccall" arg hints:  [‘signed’]  result hints:  [] __hscore_set_errno(0);
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.726582127 UTC

[section ""data" . Foreign.C.Error.resetErrno_closure" {
     Foreign.C.Error.resetErrno_closure:
         const Foreign.C.Error.resetErrno_info;
 },
 Foreign.C.Error.resetErrno_entry() //  []
         { info_tbl: [(c93gz,
                       label: Foreign.C.Error.resetErrno_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93gz: // global
           call Foreign.C.Error.resetErrno1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.727526306 UTC

[section ""data" . Foreign.C.Error.isValidErrno_closure" {
     Foreign.C.Error.isValidErrno_closure:
         const Foreign.C.Error.isValidErrno_info;
 },
 Foreign.C.Error.isValidErrno_entry() //  [R2]
         { info_tbl: [(c93gJ,
                       label: Foreign.C.Error.isValidErrno_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93gJ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c93gK; else goto c93gL;
       c93gK: // global
           R2 = R2;
           R1 = Foreign.C.Error.isValidErrno_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c93gL: // global
           I64[Sp - 8] = block_c93gG_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u93gT; else goto c93gH;
       u93gT: // global
           call _c93gG(R1) args: 0, res: 0, upd: 0;
       c93gH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93gG() //  [R1]
         { info_tbl: [(c93gG,
                       label: block_c93gG_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93gG: // global
           if (I64[R1 + 7] == (-1)) goto c93gS; else goto c93gR;
       c93gS: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93gR: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.729003892 UTC

[section ""data" . Foreign.C.Error.$fEqErrno_$c==_closure" {
     Foreign.C.Error.$fEqErrno_$c==_closure:
         const Foreign.C.Error.$fEqErrno_$c==_info;
 },
 Foreign.C.Error.$fEqErrno_$c==_entry() //  [R2, R3]
         { info_tbl: [(c93h1,
                       label: Foreign.C.Error.$fEqErrno_$c==_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93h1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c93h2; else goto c93h3;
       c93h2: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$fEqErrno_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93h3: // global
           I64[Sp - 16] = block_c93gY_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u93hs; else goto c93gZ;
       u93hs: // global
           call _c93gY(R1) args: 0, res: 0, upd: 0;
       c93gZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93gY() //  [R1]
         { info_tbl: [(c93gY,
                       label: block_c93gY_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93gY: // global
           _s92TD::I64 = I64[R1 + 7];
           if (_s92TD::I64 != (-1)) goto c93hb; else goto u93ho;
       c93hb: // global
           I64[Sp] = block_c93h9_info;
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s92TD::I64;
           if (R1 & 7 != 0) goto u93hq; else goto c93hc;
       u93hq: // global
           call _c93h9(R1) args: 0, res: 0, upd: 0;
       c93hc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u93ho: // global
           Sp = Sp + 16;
           call _c93hl() args: 0, res: 0, upd: 0;
     }
 },
 _c93h9() //  [R1]
         { info_tbl: [(c93h9,
                       label: block_c93h9_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93h9: // global
           _s92TG::I64 = I64[R1 + 7];
           if (_s92TG::I64 != (-1)) goto c93hj; else goto u93hp;
       c93hj: // global
           R1 = I64[((I64[Sp + 8] == _s92TG::I64) << 3) + GHC.Types.Bool_closure_tbl];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u93hp: // global
           Sp = Sp + 16;
           call _c93hl() args: 0, res: 0, upd: 0;
     }
 },
 _c93hl() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93hl: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.731014708 UTC

[section ""data" . Foreign.C.Error.$fEqErrno_$c/=_closure" {
     Foreign.C.Error.$fEqErrno_$c/=_closure:
         const Foreign.C.Error.$fEqErrno_$c/=_info;
 },
 Foreign.C.Error.$fEqErrno_$c/=_entry() //  [R2, R3]
         { info_tbl: [(c93hB,
                       label: Foreign.C.Error.$fEqErrno_$c/=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93hB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c93hC; else goto c93hD;
       c93hC: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$fEqErrno_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93hD: // global
           I64[Sp - 16] = block_c93hy_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u93i7; else goto c93hz;
       u93i7: // global
           call _c93hy(R1) args: 0, res: 0, upd: 0;
       c93hz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93hy() //  [R1]
         { info_tbl: [(c93hy,
                       label: block_c93hy_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93hy: // global
           _s92TM::I64 = I64[R1 + 7];
           if (_s92TM::I64 != (-1)) goto c93hL; else goto u93i2;
       c93hL: // global
           I64[Sp] = block_c93hJ_info;
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s92TM::I64;
           if (R1 & 7 != 0) goto u93i5; else goto c93hM;
       u93i5: // global
           call _c93hJ(R1) args: 0, res: 0, upd: 0;
       c93hM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u93i2: // global
           Sp = Sp + 16;
           call _c93i1() args: 0, res: 0, upd: 0;
     }
 },
 _c93hJ() //  [R1]
         { info_tbl: [(c93hJ,
                       label: block_c93hJ_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93hJ: // global
           _s92TP::I64 = I64[R1 + 7];
           if (_s92TP::I64 != (-1)) goto c93hZ; else goto u93i3;
       c93hZ: // global
           if (I64[Sp + 8] == _s92TP::I64) goto c93hX; else goto u93i4;
       c93hX: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u93i4: // global
           Sp = Sp + 16;
           goto u93i9;
       u93i3: // global
           Sp = Sp + 16;
           goto u93i9;
       u93i9: // global
           call _c93i1() args: 0, res: 0, upd: 0;
     }
 },
 _c93i1() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93i1: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.732438997 UTC

[section ""data" . Foreign.C.Error.$fEqErrno_closure" {
     Foreign.C.Error.$fEqErrno_closure:
         const GHC.Classes.C:Eq_con_info;
         const Foreign.C.Error.$fEqErrno_$c==_closure+2;
         const Foreign.C.Error.$fEqErrno_$c/=_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.733026935 UTC

[section ""data" . Foreign.C.Error.eXDEV1_closure" {
     Foreign.C.Error.eXDEV1_closure:
         const GHC.Int.I32#_con_info;
         const 18;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.733650515 UTC

[section ""data" . Foreign.C.Error.eXDEV_closure" {
     Foreign.C.Error.eXDEV_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eXDEV1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.734228259 UTC

[section ""data" . Foreign.C.Error.eAGAIN1_closure" {
     Foreign.C.Error.eAGAIN1_closure:
         const GHC.Int.I32#_con_info;
         const 11;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.734750966 UTC

[section ""data" . Foreign.C.Error.eWOULDBLOCK_closure" {
     Foreign.C.Error.eWOULDBLOCK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eAGAIN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.735320199 UTC

[section ""data" . Foreign.C.Error.eUSERS1_closure" {
     Foreign.C.Error.eUSERS1_closure:
         const GHC.Int.I32#_con_info;
         const 87;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.735878847 UTC

[section ""data" . Foreign.C.Error.eUSERS_closure" {
     Foreign.C.Error.eUSERS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eUSERS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.736443435 UTC

[section ""data" . Foreign.C.Error.eTXTBSY1_closure" {
     Foreign.C.Error.eTXTBSY1_closure:
         const GHC.Int.I32#_con_info;
         const 26;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.737014787 UTC

[section ""data" . Foreign.C.Error.eTXTBSY_closure" {
     Foreign.C.Error.eTXTBSY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTXTBSY1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.737844378 UTC

[section ""data" . Foreign.C.Error.eTOOMANYREFS1_closure" {
     Foreign.C.Error.eTOOMANYREFS1_closure:
         const GHC.Int.I32#_con_info;
         const 109;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.738389652 UTC

[section ""data" . Foreign.C.Error.eTOOMANYREFS_closure" {
     Foreign.C.Error.eTOOMANYREFS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTOOMANYREFS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.73896091 UTC

[section ""data" . Foreign.C.Error.eTIMEDOUT1_closure" {
     Foreign.C.Error.eTIMEDOUT1_closure:
         const GHC.Int.I32#_con_info;
         const 110;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.739471806 UTC

[section ""data" . Foreign.C.Error.eTIMEDOUT_closure" {
     Foreign.C.Error.eTIMEDOUT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTIMEDOUT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.741410101 UTC

[section ""data" . Foreign.C.Error.eTIME1_closure" {
     Foreign.C.Error.eTIME1_closure:
         const GHC.Int.I32#_con_info;
         const 62;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.741989696 UTC

[section ""data" . Foreign.C.Error.eTIME_closure" {
     Foreign.C.Error.eTIME_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTIME1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.742517962 UTC

[section ""data" . Foreign.C.Error.eSTALE1_closure" {
     Foreign.C.Error.eSTALE1_closure:
         const GHC.Int.I32#_con_info;
         const 116;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.743087137 UTC

[section ""data" . Foreign.C.Error.eSTALE_closure" {
     Foreign.C.Error.eSTALE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSTALE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.743622324 UTC

[section ""data" . Foreign.C.Error.eSRMNT1_closure" {
     Foreign.C.Error.eSRMNT1_closure:
         const GHC.Int.I32#_con_info;
         const 69;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.744115341 UTC

[section ""data" . Foreign.C.Error.eSRMNT_closure" {
     Foreign.C.Error.eSRMNT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSRMNT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.744697468 UTC

[section ""data" . Foreign.C.Error.eSRCH1_closure" {
     Foreign.C.Error.eSRCH1_closure:
         const GHC.Int.I32#_con_info;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.745221681 UTC

[section ""data" . Foreign.C.Error.eSRCH_closure" {
     Foreign.C.Error.eSRCH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSRCH1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.745941703 UTC

[section ""data" . Foreign.C.Error.eSPIPE1_closure" {
     Foreign.C.Error.eSPIPE1_closure:
         const GHC.Int.I32#_con_info;
         const 29;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.746449195 UTC

[section ""data" . Foreign.C.Error.eSPIPE_closure" {
     Foreign.C.Error.eSPIPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSPIPE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.746996034 UTC

[section ""data" . Foreign.C.Error.eSOCKTNOSUPPORT1_closure" {
     Foreign.C.Error.eSOCKTNOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 94;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.747497935 UTC

[section ""data" . Foreign.C.Error.eSOCKTNOSUPPORT_closure" {
     Foreign.C.Error.eSOCKTNOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSOCKTNOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.748030901 UTC

[section ""data" . Foreign.C.Error.eSHUTDOWN1_closure" {
     Foreign.C.Error.eSHUTDOWN1_closure:
         const GHC.Int.I32#_con_info;
         const 108;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.748535908 UTC

[section ""data" . Foreign.C.Error.eSHUTDOWN_closure" {
     Foreign.C.Error.eSHUTDOWN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSHUTDOWN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.749108228 UTC

[section ""data" . Foreign.C.Error.eBADRPC1_closure" {
     Foreign.C.Error.eBADRPC1_closure:
         const GHC.Int.I32#_con_info;
         const (-1);
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.749692952 UTC

[section ""data" . Foreign.C.Error.eRREMOTE_closure" {
     Foreign.C.Error.eRREMOTE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.750226727 UTC

[section ""data" . Foreign.C.Error.eRPCMISMATCH_closure" {
     Foreign.C.Error.eRPCMISMATCH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.750765985 UTC

[section ""data" . Foreign.C.Error.eROFS1_closure" {
     Foreign.C.Error.eROFS1_closure:
         const GHC.Int.I32#_con_info;
         const 30;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.751283482 UTC

[section ""data" . Foreign.C.Error.eROFS_closure" {
     Foreign.C.Error.eROFS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eROFS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.751811721 UTC

[section ""data" . Foreign.C.Error.eREMOTE1_closure" {
     Foreign.C.Error.eREMOTE1_closure:
         const GHC.Int.I32#_con_info;
         const 66;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.752340647 UTC

[section ""data" . Foreign.C.Error.eREMOTE_closure" {
     Foreign.C.Error.eREMOTE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eREMOTE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.752871748 UTC

[section ""data" . Foreign.C.Error.eREMCHG1_closure" {
     Foreign.C.Error.eREMCHG1_closure:
         const GHC.Int.I32#_con_info;
         const 78;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.753449409 UTC

[section ""data" . Foreign.C.Error.eREMCHG_closure" {
     Foreign.C.Error.eREMCHG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eREMCHG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.754013372 UTC

[section ""data" . Foreign.C.Error.eRANGE1_closure" {
     Foreign.C.Error.eRANGE1_closure:
         const GHC.Int.I32#_con_info;
         const 34;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.75453646 UTC

[section ""data" . Foreign.C.Error.eRANGE_closure" {
     Foreign.C.Error.eRANGE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eRANGE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.755071497 UTC

[section ""data" . Foreign.C.Error.ePROTOTYPE1_closure" {
     Foreign.C.Error.ePROTOTYPE1_closure:
         const GHC.Int.I32#_con_info;
         const 91;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.75561574 UTC

[section ""data" . Foreign.C.Error.ePROTOTYPE_closure" {
     Foreign.C.Error.ePROTOTYPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePROTOTYPE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.756111388 UTC

[section ""data" . Foreign.C.Error.ePROTONOSUPPORT1_closure" {
     Foreign.C.Error.ePROTONOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 93;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.756642094 UTC

[section ""data" . Foreign.C.Error.ePROTONOSUPPORT_closure" {
     Foreign.C.Error.ePROTONOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePROTONOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.757189706 UTC

[section ""data" . Foreign.C.Error.ePROTO1_closure" {
     Foreign.C.Error.ePROTO1_closure:
         const GHC.Int.I32#_con_info;
         const 71;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.757778664 UTC

[section ""data" . Foreign.C.Error.ePROTO_closure" {
     Foreign.C.Error.ePROTO_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePROTO1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.758334244 UTC

[section ""data" . Foreign.C.Error.ePROGUNAVAIL_closure" {
     Foreign.C.Error.ePROGUNAVAIL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.758863729 UTC

[section ""data" . Foreign.C.Error.ePROGMISMATCH_closure" {
     Foreign.C.Error.ePROGMISMATCH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.759415486 UTC

[section ""data" . Foreign.C.Error.ePROCUNAVAIL_closure" {
     Foreign.C.Error.ePROCUNAVAIL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.759963513 UTC

[section ""data" . Foreign.C.Error.ePROCLIM_closure" {
     Foreign.C.Error.ePROCLIM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.760503276 UTC

[section ""data" . Foreign.C.Error.ePIPE1_closure" {
     Foreign.C.Error.ePIPE1_closure:
         const GHC.Int.I32#_con_info;
         const 32;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.761061478 UTC

[section ""data" . Foreign.C.Error.ePIPE_closure" {
     Foreign.C.Error.ePIPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePIPE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.761629226 UTC

[section ""data" . Foreign.C.Error.ePFNOSUPPORT1_closure" {
     Foreign.C.Error.ePFNOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 96;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.76217049 UTC

[section ""data" . Foreign.C.Error.ePFNOSUPPORT_closure" {
     Foreign.C.Error.ePFNOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePFNOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.762734319 UTC

[section ""data" . Foreign.C.Error.ePERM1_closure" {
     Foreign.C.Error.ePERM1_closure:
         const GHC.Int.I32#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.763309093 UTC

[section ""data" . Foreign.C.Error.ePERM_closure" {
     Foreign.C.Error.ePERM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePERM1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.763863905 UTC

[section ""data" . Foreign.C.Error.eNOTSUP1_closure" {
     Foreign.C.Error.eNOTSUP1_closure:
         const GHC.Int.I32#_con_info;
         const 95;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.765121813 UTC

[section ""data" . Foreign.C.Error.eOPNOTSUPP_closure" {
     Foreign.C.Error.eOPNOTSUPP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTSUP1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.766078647 UTC

[section ""data" . Foreign.C.Error.eNXIO1_closure" {
     Foreign.C.Error.eNXIO1_closure:
         const GHC.Int.I32#_con_info;
         const 6;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.766618751 UTC

[section ""data" . Foreign.C.Error.eNXIO_closure" {
     Foreign.C.Error.eNXIO_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNXIO1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.767162666 UTC

[section ""data" . Foreign.C.Error.eNOTTY1_closure" {
     Foreign.C.Error.eNOTTY1_closure:
         const GHC.Int.I32#_con_info;
         const 25;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.767701704 UTC

[section ""data" . Foreign.C.Error.eNOTTY_closure" {
     Foreign.C.Error.eNOTTY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTTY1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.768266234 UTC

[section ""data" . Foreign.C.Error.eNOTSUP_closure" {
     Foreign.C.Error.eNOTSUP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTSUP1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.768836523 UTC

[section ""data" . Foreign.C.Error.eNOTSOCK1_closure" {
     Foreign.C.Error.eNOTSOCK1_closure:
         const GHC.Int.I32#_con_info;
         const 88;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.769391351 UTC

[section ""data" . Foreign.C.Error.eNOTSOCK_closure" {
     Foreign.C.Error.eNOTSOCK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTSOCK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.769937068 UTC

[section ""data" . Foreign.C.Error.eNOTEMPTY1_closure" {
     Foreign.C.Error.eNOTEMPTY1_closure:
         const GHC.Int.I32#_con_info;
         const 39;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.77045513 UTC

[section ""data" . Foreign.C.Error.eNOTEMPTY_closure" {
     Foreign.C.Error.eNOTEMPTY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTEMPTY1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.770990977 UTC

[section ""data" . Foreign.C.Error.eNOTDIR1_closure" {
     Foreign.C.Error.eNOTDIR1_closure:
         const GHC.Int.I32#_con_info;
         const 20;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.771542223 UTC

[section ""data" . Foreign.C.Error.eNOTDIR_closure" {
     Foreign.C.Error.eNOTDIR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTDIR1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.772124431 UTC

[section ""data" . Foreign.C.Error.eNOTCONN1_closure" {
     Foreign.C.Error.eNOTCONN1_closure:
         const GHC.Int.I32#_con_info;
         const 107;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.772664013 UTC

[section ""data" . Foreign.C.Error.eNOTCONN_closure" {
     Foreign.C.Error.eNOTCONN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTCONN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.773186426 UTC

[section ""data" . Foreign.C.Error.eNOTBLK1_closure" {
     Foreign.C.Error.eNOTBLK1_closure:
         const GHC.Int.I32#_con_info;
         const 15;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.773764416 UTC

[section ""data" . Foreign.C.Error.eNOTBLK_closure" {
     Foreign.C.Error.eNOTBLK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTBLK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.774314264 UTC

[section ""data" . Foreign.C.Error.eNOSYS1_closure" {
     Foreign.C.Error.eNOSYS1_closure:
         const GHC.Int.I32#_con_info;
         const 38;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.774832244 UTC

[section ""data" . Foreign.C.Error.eNOSYS_closure" {
     Foreign.C.Error.eNOSYS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSYS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.77538126 UTC

[section ""data" . Foreign.C.Error.eNOSTR1_closure" {
     Foreign.C.Error.eNOSTR1_closure:
         const GHC.Int.I32#_con_info;
         const 60;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.775899586 UTC

[section ""data" . Foreign.C.Error.eNOSTR_closure" {
     Foreign.C.Error.eNOSTR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSTR1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.776441397 UTC

[section ""data" . Foreign.C.Error.eNOSR1_closure" {
     Foreign.C.Error.eNOSR1_closure:
         const GHC.Int.I32#_con_info;
         const 63;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.777000411 UTC

[section ""data" . Foreign.C.Error.eNOSR_closure" {
     Foreign.C.Error.eNOSR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSR1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.778266431 UTC

[section ""data" . Foreign.C.Error.eNOSPC1_closure" {
     Foreign.C.Error.eNOSPC1_closure:
         const GHC.Int.I32#_con_info;
         const 28;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.778838832 UTC

[section ""data" . Foreign.C.Error.eNOSPC_closure" {
     Foreign.C.Error.eNOSPC_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.779383395 UTC

[section ""data" . Foreign.C.Error.eNOPROTOOPT1_closure" {
     Foreign.C.Error.eNOPROTOOPT1_closure:
         const GHC.Int.I32#_con_info;
         const 92;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.77988576 UTC

[section ""data" . Foreign.C.Error.eNOPROTOOPT_closure" {
     Foreign.C.Error.eNOPROTOOPT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOPROTOOPT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.780426941 UTC

[section ""data" . Foreign.C.Error.eNONET1_closure" {
     Foreign.C.Error.eNONET1_closure:
         const GHC.Int.I32#_con_info;
         const 64;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.780994013 UTC

[section ""data" . Foreign.C.Error.eNONET_closure" {
     Foreign.C.Error.eNONET_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNONET1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.781608699 UTC

[section ""data" . Foreign.C.Error.eNOMSG1_closure" {
     Foreign.C.Error.eNOMSG1_closure:
         const GHC.Int.I32#_con_info;
         const 42;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.782150813 UTC

[section ""data" . Foreign.C.Error.eNOMSG_closure" {
     Foreign.C.Error.eNOMSG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOMSG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.782716941 UTC

[section ""data" . Foreign.C.Error.eNOMEM1_closure" {
     Foreign.C.Error.eNOMEM1_closure:
         const GHC.Int.I32#_con_info;
         const 12;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.783303086 UTC

[section ""data" . Foreign.C.Error.eNOMEM_closure" {
     Foreign.C.Error.eNOMEM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOMEM1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.783838465 UTC

[section ""data" . Foreign.C.Error.eNOLINK1_closure" {
     Foreign.C.Error.eNOLINK1_closure:
         const GHC.Int.I32#_con_info;
         const 67;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.784375193 UTC

[section ""data" . Foreign.C.Error.eNOLINK_closure" {
     Foreign.C.Error.eNOLINK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOLINK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.784938468 UTC

[section ""data" . Foreign.C.Error.eNOLCK1_closure" {
     Foreign.C.Error.eNOLCK1_closure:
         const GHC.Int.I32#_con_info;
         const 37;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.78547955 UTC

[section ""data" . Foreign.C.Error.eNOLCK_closure" {
     Foreign.C.Error.eNOLCK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOLCK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.786014578 UTC

[section ""data" . Foreign.C.Error.eNOEXEC1_closure" {
     Foreign.C.Error.eNOEXEC1_closure:
         const GHC.Int.I32#_con_info;
         const 8;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.786591444 UTC

[section ""data" . Foreign.C.Error.eNOEXEC_closure" {
     Foreign.C.Error.eNOEXEC_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOEXEC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.787161159 UTC

[section ""data" . Foreign.C.Error.eNOENT1_closure" {
     Foreign.C.Error.eNOENT1_closure:
         const GHC.Int.I32#_con_info;
         const 2;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.787703439 UTC

[section ""data" . Foreign.C.Error.eNOENT_closure" {
     Foreign.C.Error.eNOENT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOENT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.788257315 UTC

[section ""data" . Foreign.C.Error.eNODEV1_closure" {
     Foreign.C.Error.eNODEV1_closure:
         const GHC.Int.I32#_con_info;
         const 19;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.788813365 UTC

[section ""data" . Foreign.C.Error.eNODEV_closure" {
     Foreign.C.Error.eNODEV_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNODEV1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.789778737 UTC

[section ""data" . Foreign.C.Error.eNODATA1_closure" {
     Foreign.C.Error.eNODATA1_closure:
         const GHC.Int.I32#_con_info;
         const 61;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.790959224 UTC

[section ""data" . Foreign.C.Error.eNODATA_closure" {
     Foreign.C.Error.eNODATA_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNODATA1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.791571874 UTC

[section ""data" . Foreign.C.Error.eNOBUFS1_closure" {
     Foreign.C.Error.eNOBUFS1_closure:
         const GHC.Int.I32#_con_info;
         const 105;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.792157145 UTC

[section ""data" . Foreign.C.Error.eNOBUFS_closure" {
     Foreign.C.Error.eNOBUFS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOBUFS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.792712879 UTC

[section ""data" . Foreign.C.Error.eNFILE1_closure" {
     Foreign.C.Error.eNFILE1_closure:
         const GHC.Int.I32#_con_info;
         const 23;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.793297068 UTC

[section ""data" . Foreign.C.Error.eNFILE_closure" {
     Foreign.C.Error.eNFILE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNFILE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.793816016 UTC

[section ""data" . Foreign.C.Error.eNETUNREACH1_closure" {
     Foreign.C.Error.eNETUNREACH1_closure:
         const GHC.Int.I32#_con_info;
         const 101;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.794361116 UTC

[section ""data" . Foreign.C.Error.eNETUNREACH_closure" {
     Foreign.C.Error.eNETUNREACH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNETUNREACH1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.79490439 UTC

[section ""data" . Foreign.C.Error.eNETRESET1_closure" {
     Foreign.C.Error.eNETRESET1_closure:
         const GHC.Int.I32#_con_info;
         const 102;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.795425567 UTC

[section ""data" . Foreign.C.Error.eNETRESET_closure" {
     Foreign.C.Error.eNETRESET_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNETRESET1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.795964041 UTC

[section ""data" . Foreign.C.Error.eNETDOWN1_closure" {
     Foreign.C.Error.eNETDOWN1_closure:
         const GHC.Int.I32#_con_info;
         const 100;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.796489251 UTC

[section ""data" . Foreign.C.Error.eNETDOWN_closure" {
     Foreign.C.Error.eNETDOWN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNETDOWN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.797077082 UTC

[section ""data" . Foreign.C.Error.eNAMETOOLONG1_closure" {
     Foreign.C.Error.eNAMETOOLONG1_closure:
         const GHC.Int.I32#_con_info;
         const 36;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.797616841 UTC

[section ""data" . Foreign.C.Error.eNAMETOOLONG_closure" {
     Foreign.C.Error.eNAMETOOLONG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNAMETOOLONG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.798150822 UTC

[section ""data" . Foreign.C.Error.eMULTIHOP1_closure" {
     Foreign.C.Error.eMULTIHOP1_closure:
         const GHC.Int.I32#_con_info;
         const 72;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.798704077 UTC

[section ""data" . Foreign.C.Error.eMULTIHOP_closure" {
     Foreign.C.Error.eMULTIHOP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMULTIHOP1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.799242103 UTC

[section ""data" . Foreign.C.Error.eMSGSIZE1_closure" {
     Foreign.C.Error.eMSGSIZE1_closure:
         const GHC.Int.I32#_con_info;
         const 90;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.799791637 UTC

[section ""data" . Foreign.C.Error.eMSGSIZE_closure" {
     Foreign.C.Error.eMSGSIZE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMSGSIZE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.800307946 UTC

[section ""data" . Foreign.C.Error.eMLINK1_closure" {
     Foreign.C.Error.eMLINK1_closure:
         const GHC.Int.I32#_con_info;
         const 31;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.800787785 UTC

[section ""data" . Foreign.C.Error.eMLINK_closure" {
     Foreign.C.Error.eMLINK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMLINK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.801727358 UTC

[section ""data" . Foreign.C.Error.eMFILE1_closure" {
     Foreign.C.Error.eMFILE1_closure:
         const GHC.Int.I32#_con_info;
         const 24;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.802240014 UTC

[section ""data" . Foreign.C.Error.eMFILE_closure" {
     Foreign.C.Error.eMFILE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMFILE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.80281624 UTC

[section ""data" . Foreign.C.Error.eLOOP1_closure" {
     Foreign.C.Error.eLOOP1_closure:
         const GHC.Int.I32#_con_info;
         const 40;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.803309841 UTC

[section ""data" . Foreign.C.Error.eLOOP_closure" {
     Foreign.C.Error.eLOOP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eLOOP1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.803845881 UTC

[section ""data" . Foreign.C.Error.eISDIR1_closure" {
     Foreign.C.Error.eISDIR1_closure:
         const GHC.Int.I32#_con_info;
         const 21;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.804383345 UTC

[section ""data" . Foreign.C.Error.eISDIR_closure" {
     Foreign.C.Error.eISDIR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eISDIR1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.804923872 UTC

[section ""data" . Foreign.C.Error.eISCONN1_closure" {
     Foreign.C.Error.eISCONN1_closure:
         const GHC.Int.I32#_con_info;
         const 106;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.805486055 UTC

[section ""data" . Foreign.C.Error.eISCONN_closure" {
     Foreign.C.Error.eISCONN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eISCONN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.806009236 UTC

[section ""data" . Foreign.C.Error.eIO1_closure" {
     Foreign.C.Error.eIO1_closure:
         const GHC.Int.I32#_con_info;
         const 5;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.806535375 UTC

[section ""data" . Foreign.C.Error.eIO_closure" {
     Foreign.C.Error.eIO_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eIO1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.807063623 UTC

[section ""data" . Foreign.C.Error.eINVAL1_closure" {
     Foreign.C.Error.eINVAL1_closure:
         const GHC.Int.I32#_con_info;
         const 22;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.807629819 UTC

[section ""data" . Foreign.C.Error.eINVAL_closure" {
     Foreign.C.Error.eINVAL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eINVAL1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.808195063 UTC

[section ""data" . Foreign.C.Error.eINTR1_closure" {
     Foreign.C.Error.eINTR1_closure:
         const GHC.Int.I32#_con_info;
         const 4;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.808724582 UTC

[section ""data" . Foreign.C.Error.eINTR_closure" {
     Foreign.C.Error.eINTR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eINTR1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.809299126 UTC

[section ""data" . Foreign.C.Error.eINPROGRESS1_closure" {
     Foreign.C.Error.eINPROGRESS1_closure:
         const GHC.Int.I32#_con_info;
         const 115;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.809845064 UTC

[section ""data" . Foreign.C.Error.eINPROGRESS_closure" {
     Foreign.C.Error.eINPROGRESS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eINPROGRESS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.810419351 UTC

[section ""data" . Foreign.C.Error.eILSEQ1_closure" {
     Foreign.C.Error.eILSEQ1_closure:
         const GHC.Int.I32#_con_info;
         const 84;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.810989149 UTC

[section ""data" . Foreign.C.Error.eILSEQ_closure" {
     Foreign.C.Error.eILSEQ_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eILSEQ1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.811538877 UTC

[section ""data" . Foreign.C.Error.eIDRM1_closure" {
     Foreign.C.Error.eIDRM1_closure:
         const GHC.Int.I32#_con_info;
         const 43;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.812046015 UTC

[section ""data" . Foreign.C.Error.eIDRM_closure" {
     Foreign.C.Error.eIDRM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eIDRM1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.812602716 UTC

[section ""data" . Foreign.C.Error.eHOSTUNREACH1_closure" {
     Foreign.C.Error.eHOSTUNREACH1_closure:
         const GHC.Int.I32#_con_info;
         const 113;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.813161244 UTC

[section ""data" . Foreign.C.Error.eHOSTUNREACH_closure" {
     Foreign.C.Error.eHOSTUNREACH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eHOSTUNREACH1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.814129045 UTC

[section ""data" . Foreign.C.Error.eHOSTDOWN1_closure" {
     Foreign.C.Error.eHOSTDOWN1_closure:
         const GHC.Int.I32#_con_info;
         const 112;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.814676735 UTC

[section ""data" . Foreign.C.Error.eHOSTDOWN_closure" {
     Foreign.C.Error.eHOSTDOWN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eHOSTDOWN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.81580295 UTC

[section ""data" . Foreign.C.Error.eFTYPE_closure" {
     Foreign.C.Error.eFTYPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.816364869 UTC

[section ""data" . Foreign.C.Error.eFBIG1_closure" {
     Foreign.C.Error.eFBIG1_closure:
         const GHC.Int.I32#_con_info;
         const 27;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.816961817 UTC

[section ""data" . Foreign.C.Error.eFBIG_closure" {
     Foreign.C.Error.eFBIG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eFBIG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.817546716 UTC

[section ""data" . Foreign.C.Error.eFAULT1_closure" {
     Foreign.C.Error.eFAULT1_closure:
         const GHC.Int.I32#_con_info;
         const 14;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.818088459 UTC

[section ""data" . Foreign.C.Error.eFAULT_closure" {
     Foreign.C.Error.eFAULT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eFAULT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.818634033 UTC

[section ""data" . Foreign.C.Error.eEXIST1_closure" {
     Foreign.C.Error.eEXIST1_closure:
         const GHC.Int.I32#_con_info;
         const 17;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.81918684 UTC

[section ""data" . Foreign.C.Error.eEXIST_closure" {
     Foreign.C.Error.eEXIST_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eEXIST1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.819731389 UTC

[section ""data" . Foreign.C.Error.eDQUOT1_closure" {
     Foreign.C.Error.eDQUOT1_closure:
         const GHC.Int.I32#_con_info;
         const 122;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.820268608 UTC

[section ""data" . Foreign.C.Error.eDQUOT_closure" {
     Foreign.C.Error.eDQUOT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDQUOT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.820800075 UTC

[section ""data" . Foreign.C.Error.eDOM1_closure" {
     Foreign.C.Error.eDOM1_closure:
         const GHC.Int.I32#_con_info;
         const 33;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.822738607 UTC

[section ""data" . Foreign.C.Error.eDOM_closure" {
     Foreign.C.Error.eDOM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDOM1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.823478866 UTC

[section ""data" . Foreign.C.Error.eDIRTY_closure" {
     Foreign.C.Error.eDIRTY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.824083247 UTC

[section ""data" . Foreign.C.Error.eDESTADDRREQ1_closure" {
     Foreign.C.Error.eDESTADDRREQ1_closure:
         const GHC.Int.I32#_con_info;
         const 89;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.824619712 UTC

[section ""data" . Foreign.C.Error.eDESTADDRREQ_closure" {
     Foreign.C.Error.eDESTADDRREQ_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDESTADDRREQ1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.825181186 UTC

[section ""data" . Foreign.C.Error.eDEADLK1_closure" {
     Foreign.C.Error.eDEADLK1_closure:
         const GHC.Int.I32#_con_info;
         const 35;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.82573019 UTC

[section ""data" . Foreign.C.Error.eDEADLK_closure" {
     Foreign.C.Error.eDEADLK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDEADLK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.826382674 UTC

[section ""data" . Foreign.C.Error.eCONNRESET1_closure" {
     Foreign.C.Error.eCONNRESET1_closure:
         const GHC.Int.I32#_con_info;
         const 104;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.826910669 UTC

[section ""data" . Foreign.C.Error.eCONNRESET_closure" {
     Foreign.C.Error.eCONNRESET_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCONNRESET1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.827455475 UTC

[section ""data" . Foreign.C.Error.eCONNREFUSED1_closure" {
     Foreign.C.Error.eCONNREFUSED1_closure:
         const GHC.Int.I32#_con_info;
         const 111;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.828034146 UTC

[section ""data" . Foreign.C.Error.eCONNREFUSED_closure" {
     Foreign.C.Error.eCONNREFUSED_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCONNREFUSED1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.828602892 UTC

[section ""data" . Foreign.C.Error.eCONNABORTED1_closure" {
     Foreign.C.Error.eCONNABORTED1_closure:
         const GHC.Int.I32#_con_info;
         const 103;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.829138702 UTC

[section ""data" . Foreign.C.Error.eCONNABORTED_closure" {
     Foreign.C.Error.eCONNABORTED_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCONNABORTED1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.830175801 UTC

[section ""data" . Foreign.C.Error.eCOMM1_closure" {
     Foreign.C.Error.eCOMM1_closure:
         const GHC.Int.I32#_con_info;
         const 70;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.830716898 UTC

[section ""data" . Foreign.C.Error.eCOMM_closure" {
     Foreign.C.Error.eCOMM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCOMM1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.831300558 UTC

[section ""data" . Foreign.C.Error.eCHILD1_closure" {
     Foreign.C.Error.eCHILD1_closure:
         const GHC.Int.I32#_con_info;
         const 10;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.831864632 UTC

[section ""data" . Foreign.C.Error.eCHILD_closure" {
     Foreign.C.Error.eCHILD_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCHILD1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.832388738 UTC

[section ""data" . Foreign.C.Error.eBUSY1_closure" {
     Foreign.C.Error.eBUSY1_closure:
         const GHC.Int.I32#_con_info;
         const 16;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.83294756 UTC

[section ""data" . Foreign.C.Error.eBUSY_closure" {
     Foreign.C.Error.eBUSY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBUSY1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.833525062 UTC

[section ""data" . Foreign.C.Error.eBADRPC_closure" {
     Foreign.C.Error.eBADRPC_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.834112358 UTC

[section ""data" . Foreign.C.Error.eBADMSG1_closure" {
     Foreign.C.Error.eBADMSG1_closure:
         const GHC.Int.I32#_con_info;
         const 74;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.834615386 UTC

[section ""data" . Foreign.C.Error.eBADMSG_closure" {
     Foreign.C.Error.eBADMSG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADMSG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.83514842 UTC

[section ""data" . Foreign.C.Error.eBADF1_closure" {
     Foreign.C.Error.eBADF1_closure:
         const GHC.Int.I32#_con_info;
         const 9;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.835678786 UTC

[section ""data" . Foreign.C.Error.eBADF_closure" {
     Foreign.C.Error.eBADF_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADF1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.83623617 UTC

[section ""data" . Foreign.C.Error.eALREADY1_closure" {
     Foreign.C.Error.eALREADY1_closure:
         const GHC.Int.I32#_con_info;
         const 114;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.83677921 UTC

[section ""data" . Foreign.C.Error.eALREADY_closure" {
     Foreign.C.Error.eALREADY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eALREADY1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.837331795 UTC

[section ""data" . Foreign.C.Error.eAGAIN_closure" {
     Foreign.C.Error.eAGAIN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eAGAIN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.837901764 UTC

[section ""data" . Foreign.C.Error.eAFNOSUPPORT1_closure" {
     Foreign.C.Error.eAFNOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 97;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.838473574 UTC

[section ""data" . Foreign.C.Error.eAFNOSUPPORT_closure" {
     Foreign.C.Error.eAFNOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eAFNOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.839056158 UTC

[section ""data" . Foreign.C.Error.eADV1_closure" {
     Foreign.C.Error.eADV1_closure:
         const GHC.Int.I32#_con_info;
         const 68;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.839598114 UTC

[section ""data" . Foreign.C.Error.eADV_closure" {
     Foreign.C.Error.eADV_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eADV1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.840175707 UTC

[section ""data" . Foreign.C.Error.eADDRNOTAVAIL1_closure" {
     Foreign.C.Error.eADDRNOTAVAIL1_closure:
         const GHC.Int.I32#_con_info;
         const 99;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.840711157 UTC

[section ""data" . Foreign.C.Error.eADDRNOTAVAIL_closure" {
     Foreign.C.Error.eADDRNOTAVAIL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eADDRNOTAVAIL1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.842571617 UTC

[section ""data" . Foreign.C.Error.eADDRINUSE1_closure" {
     Foreign.C.Error.eADDRINUSE1_closure:
         const GHC.Int.I32#_con_info;
         const 98;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.843200657 UTC

[section ""data" . Foreign.C.Error.eADDRINUSE_closure" {
     Foreign.C.Error.eADDRINUSE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eADDRINUSE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.843766232 UTC

[section ""data" . Foreign.C.Error.eACCES1_closure" {
     Foreign.C.Error.eACCES1_closure:
         const GHC.Int.I32#_con_info;
         const 13;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.844275977 UTC

[section ""data" . Foreign.C.Error.eACCES_closure" {
     Foreign.C.Error.eACCES_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eACCES1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.844836888 UTC

[section ""data" . Foreign.C.Error.e2BIG1_closure" {
     Foreign.C.Error.e2BIG1_closure:
         const GHC.Int.I32#_con_info;
         const 7;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.845399388 UTC

[section ""data" . Foreign.C.Error.e2BIG_closure" {
     Foreign.C.Error.e2BIG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.e2BIG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.845993749 UTC

[section ""data" . Foreign.C.Error.eOK1_closure" {
     Foreign.C.Error.eOK1_closure:
         const GHC.Int.I32#_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.84657965 UTC

[section ""data" . Foreign.C.Error.eOK_closure" {
     Foreign.C.Error.eOK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eOK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.849082271 UTC

[section ""data" . Foreign.C.Error.$werrnoToIOError_closure" {
     Foreign.C.Error.$werrnoToIOError_closure:
         const Foreign.C.Error.$werrnoToIOError_info;
         const 0;
 },
 Foreign.C.Error.$werrnoToIOError_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93ib: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2,
                                                       R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s92U7_entry() //  [R1]
         { info_tbl: [(c93jT,
                       label: sat_s92U7_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93jT: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c93jU; else goto c93jV;
       c93jU: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93jV: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s92U6::I64 = I64[R1 + 16];
           if (%MO_S_Lt_W64(_s92U6::I64, 60)) goto u93jW; else goto u93jZ;
       u93jW: // global
           if (%MO_S_Ge_W64(_s92U6::I64, 44)) goto c93iv; else goto u93jX;
       u93jX: // global
           if (%MO_S_Lt_W64(_s92U6::I64, 1)) goto c93iv; else goto u93jY;
       u93jY: // global
           switch [1 .. 43] _s92U6::I64 {
               case 1 : goto c93jS;
               case 2, 3 : goto c93jO;
               case 4 : goto c93iz;
               case 5 : goto c93iA;
               case 6 : goto c93jO;
               case 7 : goto c93jK;
               case 8, 9 : goto c93jI;
               case 10 : goto c93jO;
               case 11, 12 : goto c93jK;
               case 13 : goto c93jS;
               case 15 : goto c93jI;
               case 16 : goto c93jA;
               case 17 : goto c93jQ;
               case 18, 19 : goto c93jB;
               case 20, 21 : goto c93jm;
               case 22 : goto c93jI;
               case 23, 24 : goto c93jK;
               case 25 : goto c93jJ;
               case 26 : goto c93jA;
               case 27 : goto c93jS;
               case 28 : goto c93jK;
               case 29 : goto c93jB;
               case 30 : goto c93jS;
               case 31 : goto c93jK;
               case 32 : goto c93jR;
               case 33 : goto c93jI;
               case 34 : goto c93jB;
               case 35 : goto c93jA;
               case 36 : goto c93jI;
               case 37 : goto c93jK;
               case 38 : goto c93jB;
               case 39 : goto c93ji;
               case 40 : goto c93jI;
               case 42 : goto c93jO;
               case 43 : goto c93jR;
               default: {goto c93iv;}
           }
       c93iA: // global
           R1 = GHC.IO.Exception.HardwareFault_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93iz: // global
           R1 = GHC.IO.Exception.Interrupted_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       u93jZ: // global
           if (%MO_S_Ge_W64(_s92U6::I64, 123)) goto c93iv; else goto u93k0;
       u93k0: // global
           switch [60 .. 122] _s92U6::I64 {
               case 60 : goto c93jI;
               case 61 : goto c93jO;
               case 62 : goto c93jL;
               case 63 : goto c93jK;
               case 64 : goto c93jO;
               case 66 : goto c93jJ;
               case 67 : goto c93jR;
               case 69 : goto c93ji;
               case 70 : goto c93jR;
               case 71 : goto c93jv;
               case 72 : goto c93jB;
               case 74 : goto c93jm;
               case 78 : goto c93jR;
               case 84 : goto c93jI;
               case 87 : goto c93jK;
               case 88, 89 : goto c93jI;
               case 90 : goto c93jK;
               case 91 : goto c93jv;
               case 92 : goto c93jB;
               case 93 : goto c93jv;
               case 94, 95, 96, 97 : goto c93jB;
               case 98 : goto c93jA;
               case 99 : goto c93jB;
               case 100 : goto c93jR;
               case 101 : goto c93jO;
               case 102, 104 : goto c93jR;
               case 105 : goto c93jK;
               case 106 : goto c93jQ;
               case 107 : goto c93jI;
               case 108 : goto c93jJ;
               case 109 : goto c93jK;
               case 110 : goto c93jL;
               case 111, 112, 113 : goto c93jO;
               case 114, 115 : goto c93jQ;
               case 116 : goto c93jR;
               case 122 : goto c93jS;
               default: {goto c93iv;}
           }
       c93jS: // global
           R1 = GHC.IO.Exception.PermissionDenied_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93jQ: // global
           R1 = GHC.IO.Exception.AlreadyExists_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93jA: // global
           R1 = GHC.IO.Exception.ResourceBusy_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93jm: // global
           R1 = GHC.IO.Exception.InappropriateType_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93jB: // global
           R1 = GHC.IO.Exception.UnsupportedOperation_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93jv: // global
           R1 = GHC.IO.Exception.ProtocolError_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93ji: // global
           R1 = GHC.IO.Exception.UnsatisfiedConstraints_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93jR: // global
           R1 = GHC.IO.Exception.ResourceVanished_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93jJ: // global
           R1 = GHC.IO.Exception.IllegalOperation_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93jK: // global
           R1 = GHC.IO.Exception.ResourceExhausted_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93jL: // global
           R1 = GHC.IO.Exception.TimeExpired_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93jO: // global
           R1 = GHC.IO.Exception.NoSuchThing_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93jI: // global
           R1 = GHC.IO.Exception.InvalidArgument_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93iv: // global
           R1 = GHC.IO.Exception.OtherError_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 Foreign.C.Error.$werrnoToIOError_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c93k5,
                       label: Foreign.C.Error.$werrnoToIOError_info
                       rep:HeapRep static {
                             Fun {arity: 4 fun_type: ArgGen [False, True, False, False]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93k5: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c93k6; else goto c93k7;
       c93k6: // global
           R1 = Foreign.C.Error.$werrnoToIOError_closure;
           P64[Sp - 32] = R2;
           I64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           call (stg_gc_fun)(R1) args: 40, res: 0, upd: 8;
       c93k7: // global
           I64[Sp - 40] = block_c93if_info;
           P64[Sp - 32] = R2;
           I64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 40;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 _c93if() //  []
         { info_tbl: [(c93if,
                       label: block_c93if_info
                       rep:StackRep [False, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93if: // global
           (_s92TZ::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [PtrHint] strerror(I64[Sp + 16]);
           I64[Sp - 8] = block_c93ij_info;
           R1 = GHC.IO.Encoding.getForeignEncoding_closure;
           I64[Sp] = _s92TZ::I64;
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93ij() //  [R1]
         { info_tbl: [(c93ij,
                       label: block_c93ij_info
                       rep:StackRep [True, False, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93ij: // global
           _s92TZ::I64 = I64[Sp + 8];
           I64[Sp + 8] = block_c93il_info;
           R3 = _s92TZ::I64;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Foreign.$wpeekCString_entry(R3,
                                                R2) args: 8, res: 8, upd: 8;
     }
 },
 _c93il() //  [R1]
         { info_tbl: [(c93il,
                       label: block_c93il_info
                       rep:StackRep [False, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93il: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto c93kc; else goto c93kb;
       c93kc: // global
           HpAlloc = 112;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c93kb: // global
           I64[Hp - 104] = GHC.Int.I32#_con_info;
           _s92TS::I64 = I64[Sp + 16];
           I64[Hp - 96] = _s92TS::I64;
           I64[Hp - 88] = GHC.Base.Just_con_info;
           P64[Hp - 80] = Hp - 103;
           I64[Hp - 72] = sat_s92U7_info;
           I64[Hp - 56] = _s92TS::I64;
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = P64[Sp + 24];
           P64[Hp - 32] = Hp - 72;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = R1;
           P64[Hp - 8] = Hp - 86;
           P64[Hp] = P64[Sp + 32];
           R1 = (Hp + -47) & (-8);
           Sp = Sp + 40;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.852853925 UTC

[section ""data" . Foreign.C.Error.errnoToIOError_closure" {
     Foreign.C.Error.errnoToIOError_closure:
         const Foreign.C.Error.errnoToIOError_info;
         const 0;
 },
 Foreign.C.Error.errnoToIOError_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c93kl,
                       label: Foreign.C.Error.errnoToIOError_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93kl: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93km; else goto c93kn;
       c93km: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.errnoToIOError_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93kn: // global
           I64[Sp - 32] = block_c93ki_info;
           R1 = R3;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u93kr; else goto c93kj;
       u93kr: // global
           call _c93ki(R1) args: 0, res: 0, upd: 0;
       c93kj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93ki() //  [R1]
         { info_tbl: [(c93ki,
                       label: block_c93ki_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93ki: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 32;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.854360375 UTC

[section ""data" . Foreign.C.Error.$wlvl_closure" {
     Foreign.C.Error.$wlvl_closure:
         const Foreign.C.Error.$wlvl_info;
         const 0;
 },
 sat_s92Un_entry() //  [R1]
         { info_tbl: [(c93kE,
                       label: sat_s92Un_info
                       rep:HeapRep 1 ptrs 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93kE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c93kF; else goto c93kG;
       c93kF: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93kG: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R5 = GHC.Base.Nothing_closure+1;
           R4 = GHC.Base.Nothing_closure+1;
           R3 = I64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s92Uo_entry() //  [R1]
         { info_tbl: [(c93kH,
                       label: sat_s92Uo_info
                       rep:HeapRep 1 ptrs 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93kH: // global
           _s92Uo::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c93kI; else goto c93kJ;
       c93kJ: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c93kL; else goto c93kK;
       c93kL: // global
           HpAlloc = 32;
           goto c93kI;
       c93kI: // global
           R1 = _s92Uo::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93kK: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92Uo::P64;
           _s92Uk::P64 = P64[_s92Uo::P64 + 16];
           _s92Ul::I64 = I64[_s92Uo::P64 + 24];
           I64[Hp - 24] = sat_s92Un_info;
           P64[Hp - 8] = _s92Uk::P64;
           I64[Hp] = _s92Ul::I64;
           R2 = Hp - 24;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 Foreign.C.Error.$wlvl_entry() //  [R2, R3]
         { info_tbl: [(c93kM,
                       label: Foreign.C.Error.$wlvl_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93kM: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c93kQ; else goto c93kP;
       c93kQ: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$wlvl_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93kP: // global
           I64[Hp - 24] = sat_s92Uo_info;
           P64[Hp - 8] = R2;
           I64[Hp] = R3;
           R1 = Hp - 24;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.855897399 UTC

[section ""data" . Foreign.C.Error.throwErrno1_closure" {
     Foreign.C.Error.throwErrno1_closure:
         const Foreign.C.Error.throwErrno1_info;
         const 0;
 },
 Foreign.C.Error.throwErrno1_entry() //  [R2]
         { info_tbl: [(c93kY,
                       label: Foreign.C.Error.throwErrno1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93kY: // global
           (_s92Uu::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92Uu::I64));
           R2 = R2;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.856750762 UTC

[section ""data" . Foreign.C.Error.throwErrno_closure" {
     Foreign.C.Error.throwErrno_closure:
         const Foreign.C.Error.throwErrno_info;
         const 0;
 },
 Foreign.C.Error.throwErrno_entry() //  [R2]
         { info_tbl: [(c93l5,
                       label: Foreign.C.Error.throwErrno_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93l5: // global
           R2 = R2;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.858195316 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf1_closure" {
     Foreign.C.Error.throwErrnoIf1_closure:
         const Foreign.C.Error.throwErrnoIf1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf1_entry() //  [R2, R3, R4]
         { info_tbl: [(c93lk,
                       label: Foreign.C.Error.throwErrnoIf1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93lk: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93ll; else goto c93lm;
       c93ll: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIf1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93lm: // global
           I64[Sp - 24] = block_c93lc_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93lc() //  [R1]
         { info_tbl: [(c93lc,
                       label: block_c93lc_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93lc: // global
           I64[Sp] = block_c93le_info;
           R2 = R1;
           _s92UC::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s92UC::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93le() //  [R1]
         { info_tbl: [(c93le,
                       label: block_c93le_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93le: // global
           if (R1 & 7 == 1) goto c93lh; else goto c93li;
       c93lh: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93li: // global
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.85949224 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf_closure" {
     Foreign.C.Error.throwErrnoIf_closure:
         const Foreign.C.Error.throwErrnoIf_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf_entry() //  [R2, R3, R4]
         { info_tbl: [(c93ly,
                       label: Foreign.C.Error.throwErrnoIf_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93ly: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIf1_entry(R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.860517351 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf_1_closure" {
     Foreign.C.Error.throwErrnoIf_1_closure:
         const Foreign.C.Error.throwErrnoIf_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf_1_entry() //  [R2, R3, R4]
         { info_tbl: [(c93lN,
                       label: Foreign.C.Error.throwErrnoIf_1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93lN: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93lO; else goto c93lP;
       c93lO: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIf_1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93lP: // global
           I64[Sp - 24] = block_c93lF_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93lF() //  [R1]
         { info_tbl: [(c93lF,
                       label: block_c93lF_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93lF: // global
           _s92UE::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c93lH_info;
           R2 = R1;
           R1 = _s92UE::P64;
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93lH() //  [R1]
         { info_tbl: [(c93lH,
                       label: block_c93lH_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93lH: // global
           if (R1 & 7 == 1) goto c93lK; else goto c93lL;
       c93lK: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93lL: // global
           _s92UF::P64 = P64[Sp + 8];
           (_s92UP::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92UP::I64));
           R2 = _s92UF::P64;
           Sp = Sp + 16;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.861873528 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf__closure" {
     Foreign.C.Error.throwErrnoIf__closure:
         const Foreign.C.Error.throwErrnoIf__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf__entry() //  [R2, R3, R4]
         { info_tbl: [(c93m3,
                       label: Foreign.C.Error.throwErrnoIf__info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93m3: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIf_1_entry(R4,
                                                     R3,
                                                     R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.862590331 UTC

[section ""data" . sat_s92US_closure" {
     sat_s92US_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.86317939 UTC

[section ""data" . sat_s92UT_closure" {
     sat_s92UT_closure:
         const :_con_info;
         const sat_s92US_closure+1;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.863901529 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus2_closure" {
     Foreign.C.Error.throwErrnoIfMinus2_closure:
         const Foreign.C.Error.throwErrnoIfMinus2_info;
         const 0;
         const 0;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus2_entry() //  [R1]
         { info_tbl: [(c93mc,
                       label: Foreign.C.Error.throwErrnoIfMinus2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93mc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c93md; else goto c93me;
       c93md: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93me: // global
           (_c93m9::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c93m9::I64 == 0) goto c93mb; else goto c93ma;
       c93mb: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c93ma: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c93m9::I64;
           R3 = sat_s92UT_closure+2;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.865608069 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1__closure" {
     Foreign.C.Error.throwErrnoIfMinus1__closure:
         const Foreign.C.Error.throwErrnoIfMinus1__info;
         const 0;
 },
 sat_s92UX_entry() //  [R1]
         { info_tbl: [(c93mr,
                       label: sat_s92UX_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93mr: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93ms; else goto c93mt;
       c93ms: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93mt: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92UW_entry() //  [R1]
         { info_tbl: [(c93mu,
                       label: ds_s92UW_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93mu: // global
           _s92UW::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93mv; else goto c93mw;
       c93mw: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93my; else goto c93mx;
       c93my: // global
           HpAlloc = 24;
           goto c93mv;
       c93mv: // global
           R1 = _s92UW::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93mx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92UW::P64;
           _s92UV::P64 = P64[_s92UW::P64 + 16];
           I64[Hp - 16] = sat_s92UX_info;
           P64[Hp] = _s92UV::P64;
           R2 = _s92UV::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s92Vb_entry() //  [R1, R2, R3]
         { info_tbl: [(c93mM,
                       label: sat_s92Vb_info
                       rep:HeapRep 2 ptrs { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93mM: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c93mN; else goto c93mO;
       c93mN: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93mO: // global
           I64[Sp - 32] = block_c93mE_info;
           _s92UU::P64 = P64[R1 + 5];
           _s92UW::P64 = P64[R1 + 13];
           R1 = R3;
           P64[Sp - 24] = _s92UU::P64;
           P64[Sp - 16] = _s92UW::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93mE() //  [R1]
         { info_tbl: [(c93mE,
                       label: block_c93mE_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93mE: // global
           _s92UW::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c93mG_info;
           R2 = P64[Sp + 8];
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = R1;
           P64[Sp + 8] = _s92UW::P64;
           Sp = Sp - 8;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 _c93mG() //  [R1]
         { info_tbl: [(c93mG,
                       label: block_c93mG_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93mG: // global
           if (R1 & 7 == 1) goto c93mJ; else goto c93mK;
       c93mJ: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93mK: // global
           _s92UY::P64 = P64[Sp + 8];
           (_s92V8::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92V8::I64));
           R2 = _s92UY::P64;
           Sp = Sp + 16;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1__entry() //  [R2, R3]
         { info_tbl: [(c93mY,
                       label: Foreign.C.Error.throwErrnoIfMinus1__info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93mY: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c93n2; else goto c93n1;
       c93n2: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93n1: // global
           I64[Hp - 40] = ds_s92UW_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92Vb_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 13;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.868445556 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1_closure" {
     Foreign.C.Error.throwErrnoIfMinus1_closure:
         const Foreign.C.Error.throwErrnoIfMinus1_info;
         const 0;
 },
 sat_s92Vf_entry() //  [R1]
         { info_tbl: [(c93nf,
                       label: sat_s92Vf_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93nf: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93ng; else goto c93nh;
       c93ng: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93nh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92Ve_entry() //  [R1]
         { info_tbl: [(c93ni,
                       label: ds_s92Ve_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93ni: // global
           _s92Ve::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93nj; else goto c93nk;
       c93nk: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93nm; else goto c93nl;
       c93nm: // global
           HpAlloc = 24;
           goto c93nj;
       c93nj: // global
           R1 = _s92Ve::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93nl: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92Ve::P64;
           _s92Vd::P64 = P64[_s92Ve::P64 + 16];
           I64[Hp - 16] = sat_s92Vf_info;
           P64[Hp] = _s92Vd::P64;
           R2 = _s92Vd::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s92Vn_entry() //  [R1, R2, R3]
         { info_tbl: [(c93nA,
                       label: sat_s92Vn_info
                       rep:HeapRep 2 ptrs { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93nA: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c93nB; else goto c93nC;
       c93nB: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93nC: // global
           I64[Sp - 32] = block_c93ns_info;
           _s92Vc::P64 = P64[R1 + 5];
           _s92Ve::P64 = P64[R1 + 13];
           R1 = R3;
           P64[Sp - 24] = _s92Vc::P64;
           P64[Sp - 16] = _s92Ve::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93ns() //  [R1]
         { info_tbl: [(c93ns,
                       label: block_c93ns_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93ns: // global
           _s92Vc::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c93nu_info;
           R2 = _s92Vc::P64;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = R1;
           P64[Sp] = P64[Sp + 16];
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 _c93nu() //  [R1]
         { info_tbl: [(c93nu,
                       label: block_c93nu_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93nu: // global
           if (R1 & 7 == 1) goto c93nx; else goto c93ny;
       c93nx: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93ny: // global
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1_entry() //  [R2, R3]
         { info_tbl: [(c93nK,
                       label: Foreign.C.Error.throwErrnoIfMinus1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93nK: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c93nO; else goto c93nN;
       c93nO: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93nN: // global
           I64[Hp - 40] = ds_s92Ve_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92Vn_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 13;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.870836191 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNull1_closure" {
     Foreign.C.Error.throwErrnoIfNull1_closure:
         const Foreign.C.Error.throwErrnoIfNull1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNull1_entry() //  [R2, R3]
         { info_tbl: [(c93nY,
                       label: Foreign.C.Error.throwErrnoIfNull1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93nY: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93nZ; else goto c93o0;
       c93nZ: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfNull1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93o0: // global
           I64[Sp - 16] = block_c93nT_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93nT() //  [R1]
         { info_tbl: [(c93nT,
                       label: block_c93nT_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93nT: // global
           I64[Sp - 8] = block_c93nV_info;
           _s92Vt::P64 = R1;
           R1 = R1;
           P64[Sp] = _s92Vt::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u93oa; else goto c93nW;
       u93oa: // global
           call _c93nV(R1) args: 0, res: 0, upd: 0;
       c93nW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93nV() //  [R1]
         { info_tbl: [(c93nV,
                       label: block_c93nV_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93nV: // global
           if (I64[R1 + 7] == 0) goto c93o9; else goto c93o8;
       c93o9: // global
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
       c93o8: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.872141958 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNull_closure" {
     Foreign.C.Error.throwErrnoIfNull_closure:
         const Foreign.C.Error.throwErrnoIfNull_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNull_entry() //  [R2, R3]
         { info_tbl: [(c93of,
                       label: Foreign.C.Error.throwErrnoIfNull_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93of: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfNull1_entry(R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.873654287 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry2_closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry2_closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry2_entry() //  [R2, R3, R4]
         { info_tbl: [(c93ou,
                       label: Foreign.C.Error.throwErrnoIfMinus1Retry2_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93ou: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c93ov; else goto u93oU;
       c93ov: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u93oU: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c93oj() args: 0, res: 0, upd: 0;
     }
 },
 _c93oj() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93oj: // global
           I64[Sp - 8] = block_c93om_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93om() //  [R1]
         { info_tbl: [(c93om,
                       label: block_c93om_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93om: // global
           I64[Sp - 8] = block_c93oo_info;
           R2 = R1;
           _s92VD::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp] = _s92VD::P64;
           Sp = Sp - 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93oo() //  [R1]
         { info_tbl: [(c93oo,
                       label: block_c93oo_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93oo: // global
           if (R1 & 7 == 1) goto c93or; else goto c93os;
       c93or: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93os: // global
           _s92Vx::P64 = P64[Sp + 16];
           _s92Vy::P64 = P64[Sp + 24];
           _s92Vz::P64 = P64[Sp + 32];
           (_s92VI::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           if (%MO_SS_Conv_W64_W32(_s92VI::I64) == 4 :: W32) goto c93oQ; else goto c93oK;
       c93oQ: // global
           P64[Sp + 16] = _s92Vx::P64;
           P64[Sp + 24] = _s92Vy::P64;
           P64[Sp + 32] = _s92Vz::P64;
           Sp = Sp + 16;
           call _c93oj() args: 0, res: 0, upd: 0;
       c93oK: // global
           R2 = _s92Vy::P64;
           Sp = Sp + 40;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.875223211 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetry_closure" {
     Foreign.C.Error.throwErrnoIfRetry_closure:
         const Foreign.C.Error.throwErrnoIfRetry_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetry_entry() //  [R2, R3, R4]
         { info_tbl: [(c93p2,
                       label: Foreign.C.Error.throwErrnoIfRetry_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93p2: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.876123801 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetry_1_closure" {
     Foreign.C.Error.throwErrnoIfRetry_1_closure:
         const Foreign.C.Error.throwErrnoIfRetry_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetry_1_entry() //  [R2, R3, R4]
         { info_tbl: [(c93pb,
                       label: Foreign.C.Error.throwErrnoIfRetry_1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93pb: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c93pc; else goto c93pd;
       c93pc: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfRetry_1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93pd: // global
           I64[Sp - 8] = block_c93p9_info;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c93p9() //  []
         { info_tbl: [(c93p9,
                       label: block_c93p9_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93p9: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.877212567 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetry__closure" {
     Foreign.C.Error.throwErrnoIfRetry__closure:
         const Foreign.C.Error.throwErrnoIfRetry__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetry__entry() //  [R2, R3, R4]
         { info_tbl: [(c93pj,
                       label: Foreign.C.Error.throwErrnoIfRetry__info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93pj: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfRetry_1_entry(R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.878729529 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry__closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry__closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry__info;
         const 0;
 },
 sat_s92VU_entry() //  [R1]
         { info_tbl: [(c93py,
                       label: sat_s92VU_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93py: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93pz; else goto c93pA;
       c93pz: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93pA: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92VT_entry() //  [R1]
         { info_tbl: [(c93pB,
                       label: ds_s92VT_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93pB: // global
           _s92VT::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93pC; else goto c93pD;
       c93pD: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93pF; else goto c93pE;
       c93pF: // global
           HpAlloc = 24;
           goto c93pC;
       c93pC: // global
           R1 = _s92VT::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93pE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92VT::P64;
           _s92VS::P64 = P64[_s92VT::P64 + 16];
           I64[Hp - 16] = sat_s92VU_info;
           P64[Hp] = _s92VS::P64;
           R2 = _s92VS::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 pred_s92VV_entry() //  [R1, R2]
         { info_tbl: [(c93pL,
                       label: pred_s92VV_info
                       rep:HeapRep 2 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93pL: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93pM; else goto c93pN;
       c93pM: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c93pN: // global
           _s92VW::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s92VW::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 sat_s92W3_entry() //  [R1, R2, R3]
         { info_tbl: [(c93pV,
                       label: sat_s92W3_info
                       rep:HeapRep 1 ptrs { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93pV: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c93pW; else goto c93pX;
       c93pW: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93pX: // global
           I64[Sp - 8] = block_c93pT_info;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c93pT() //  []
         { info_tbl: [(c93pT,
                       label: block_c93pT_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93pT: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry__entry() //  [R2, R3]
         { info_tbl: [(c93pZ,
                       label: Foreign.C.Error.throwErrnoIfMinus1Retry__info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93pZ: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c93q3; else goto c93q2;
       c93q3: // global
           HpAlloc = 64;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93q2: // global
           I64[Hp - 56] = ds_s92VT_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = pred_s92VV_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = Hp - 56;
           I64[Hp - 8] = sat_s92W3_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 5;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.881346505 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry1_closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry1_closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry1_info;
         const 0;
 },
 sat_s92W7_entry() //  [R1]
         { info_tbl: [(c93qg,
                       label: sat_s92W7_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93qg: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93qh; else goto c93qi;
       c93qh: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93qi: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92W6_entry() //  [R1]
         { info_tbl: [(c93qj,
                       label: ds_s92W6_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93qj: // global
           _s92W6::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93qk; else goto c93ql;
       c93ql: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93qn; else goto c93qm;
       c93qn: // global
           HpAlloc = 24;
           goto c93qk;
       c93qk: // global
           R1 = _s92W6::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93qm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92W6::P64;
           _s92W5::P64 = P64[_s92W6::P64 + 16];
           I64[Hp - 16] = sat_s92W7_info;
           P64[Hp] = _s92W5::P64;
           R2 = _s92W5::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s92W9_entry() //  [R1, R2]
         { info_tbl: [(c93qt,
                       label: sat_s92W9_info
                       rep:HeapRep 2 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93qt: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93qu; else goto c93qv;
       c93qu: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c93qv: // global
           _s92W8::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s92W8::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry1_entry() //  [R2, R3]
         { info_tbl: [(c93qw,
                       label: Foreign.C.Error.throwErrnoIfMinus1Retry1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93qw: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c93qA; else goto c93qz;
       c93qA: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93qz: // global
           I64[Hp - 40] = ds_s92W6_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92W9_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R2 = Hp - 15;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry2_closure+4;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.883157971 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry_closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry_closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry_entry() //  [R2, R3]
         { info_tbl: [(c93qF,
                       label: Foreign.C.Error.throwErrnoIfMinus1Retry_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93qF: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1Retry1_entry(R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.88408789 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetry2_closure" {
     Foreign.C.Error.throwErrnoIfNullRetry2_closure:
         const Foreign.C.Error.throwErrnoIfNullRetry2_info;
 },
 Foreign.C.Error.throwErrnoIfNullRetry2_entry() //  [R2]
         { info_tbl: [(c93qP,
                       label: Foreign.C.Error.throwErrnoIfNullRetry2_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93qP: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c93qQ; else goto c93qR;
       c93qQ: // global
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfNullRetry2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c93qR: // global
           I64[Sp - 8] = block_c93qM_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u93qW; else goto c93qN;
       u93qW: // global
           call _c93qM(R1) args: 0, res: 0, upd: 0;
       c93qN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93qM() //  [R1]
         { info_tbl: [(c93qM,
                       label: block_c93qM_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93qM: // global
           R1 = I64[((I64[R1 + 7] == 0) << 3) + GHC.Types.Bool_closure_tbl];
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.885188075 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetry1_closure" {
     Foreign.C.Error.throwErrnoIfNullRetry1_closure:
         const Foreign.C.Error.throwErrnoIfNullRetry1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetry1_entry() //  [R2, R3]
         { info_tbl: [(c93r1,
                       label: Foreign.C.Error.throwErrnoIfNullRetry1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93r1: // global
           R4 = R3;
           R3 = R2;
           R2 = Foreign.C.Error.throwErrnoIfNullRetry2_closure+1;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.886068325 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetry_closure" {
     Foreign.C.Error.throwErrnoIfNullRetry_closure:
         const Foreign.C.Error.throwErrnoIfNullRetry_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetry_entry() //  [R2, R3]
         { info_tbl: [(c93r8,
                       label: Foreign.C.Error.throwErrnoIfNullRetry_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93r8: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfNullRetry1_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.887434052 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry() //  [R2,
                                                               R3, R4, R5]
         { info_tbl: [(c93rn,
                       label: Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93rn: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c93ro; else goto u93rX;
       c93ro: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u93rX: // global
           P64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           call _c93rc() args: 0, res: 0, upd: 0;
     }
 },
 _c93rc() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93rc: // global
           I64[Sp - 8] = block_c93rf_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93rf() //  [R1]
         { info_tbl: [(c93rf,
                       label: block_c93rf_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93rf: // global
           I64[Sp - 8] = block_c93rh_info;
           R2 = R1;
           _s92Wl::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp] = _s92Wl::P64;
           Sp = Sp - 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93rh() //  [R1]
         { info_tbl: [(c93rh,
                       label: block_c93rh_info
                       rep:StackRep [False, False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93rh: // global
           if (R1 & 7 == 1) goto c93rk; else goto c93rl;
       c93rk: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93rl: // global
           _s92We::P64 = P64[Sp + 16];
           _s92Wf::P64 = P64[Sp + 24];
           _s92Wg::P64 = P64[Sp + 32];
           _s92Wh::P64 = P64[Sp + 40];
           (_s92Wq::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           _s92Wr::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92Wq::I64));
           if (_s92Wr::I64 != 4) goto u93rW; else goto c93rJ;
       u93rW: // global
           if (_s92Wr::I64 != 11) goto c93rD; else goto c93rS;
       c93rD: // global
           R2 = _s92Wf::P64;
           Sp = Sp + 48;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
       c93rS: // global
           I64[Sp + 8] = block_c93rR_info;
           R1 = _s92Wh::P64;
           Sp = Sp + 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
       c93rJ: // global
           P64[Sp + 16] = _s92We::P64;
           P64[Sp + 24] = _s92Wf::P64;
           P64[Sp + 32] = _s92Wg::P64;
           P64[Sp + 40] = _s92Wh::P64;
           Sp = Sp + 16;
           call _c93rc() args: 0, res: 0, upd: 0;
     }
 },
 _c93rR() //  []
         { info_tbl: [(c93rR,
                       label: block_c93rR_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93rR: // global
           P64[Sp + 8] = P64[Sp + 8];
           P64[Sp + 16] = P64[Sp + 16];
           P64[Sp + 24] = P64[Sp + 24];
           P64[Sp + 32] = P64[Sp + 32];
           Sp = Sp + 8;
           call _c93rc() args: 0, res: 0, upd: 0;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.88956414 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetryMayBlock_closure" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock_closure:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetryMayBlock_entry() //  [R2, R3, R4,
                                                        R5]
         { info_tbl: [(c93s7,
                       label: Foreign.C.Error.throwErrnoIfRetryMayBlock_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93s7: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.890521601 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetryMayBlock_1_entry() //  [R2, R3,
                                                          R4, R5]
         { info_tbl: [(c93sg,
                       label: Foreign.C.Error.throwErrnoIfRetryMayBlock_1_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93sg: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c93sh; else goto c93si;
       c93sh: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93si: // global
           I64[Sp - 8] = block_c93se_info;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c93se() //  []
         { info_tbl: [(c93se,
                       label: block_c93se_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93se: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.891634479 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetryMayBlock__closure" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock__closure:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetryMayBlock__entry() //  [R2, R3, R4,
                                                         R5]
         { info_tbl: [(c93so,
                       label: Foreign.C.Error.throwErrnoIfRetryMayBlock__info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93so: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfRetryMayBlock_1_entry(R5,
                                                                  R4,
                                                                  R3,
                                                                  R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.89317317 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__info;
         const 0;
 },
 sat_s92WG_entry() //  [R1]
         { info_tbl: [(c93sD,
                       label: sat_s92WG_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93sD: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93sE; else goto c93sF;
       c93sE: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93sF: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92WF_entry() //  [R1]
         { info_tbl: [(c93sG,
                       label: ds_s92WF_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93sG: // global
           _s92WF::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93sH; else goto c93sI;
       c93sI: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93sK; else goto c93sJ;
       c93sK: // global
           HpAlloc = 24;
           goto c93sH;
       c93sH: // global
           R1 = _s92WF::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93sJ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92WF::P64;
           _s92WE::P64 = P64[_s92WF::P64 + 16];
           I64[Hp - 16] = sat_s92WG_info;
           P64[Hp] = _s92WE::P64;
           R2 = _s92WE::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 pred_s92WH_entry() //  [R1, R2]
         { info_tbl: [(c93sQ,
                       label: pred_s92WH_info
                       rep:HeapRep 2 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93sQ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93sR; else goto c93sS;
       c93sR: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c93sS: // global
           _s92WI::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s92WI::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 sat_s92WQ_entry() //  [R1, R2, R3, R4]
         { info_tbl: [(c93t0,
                       label: sat_s92WQ_info
                       rep:HeapRep 1 ptrs { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93t0: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c93t1; else goto c93t2;
       c93t1: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93t2: // global
           I64[Sp - 8] = block_c93sY_info;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 4];
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c93sY() //  []
         { info_tbl: [(c93sY,
                       label: block_c93sY_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93sY: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__entry() //  [R2,
                                                               R3]
         { info_tbl: [(c93t4,
                       label: Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93t4: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c93t8; else goto c93t7;
       c93t8: // global
           HpAlloc = 64;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93t7: // global
           I64[Hp - 56] = ds_s92WF_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = pred_s92WH_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = Hp - 56;
           I64[Hp - 8] = sat_s92WQ_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 4;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.895873431 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_info;
         const 0;
 },
 sat_s92WU_entry() //  [R1]
         { info_tbl: [(c93tl,
                       label: sat_s92WU_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93tl: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93tm; else goto c93tn;
       c93tm: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93tn: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92WT_entry() //  [R1]
         { info_tbl: [(c93to,
                       label: ds_s92WT_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93to: // global
           _s92WT::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93tp; else goto c93tq;
       c93tq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93ts; else goto c93tr;
       c93ts: // global
           HpAlloc = 24;
           goto c93tp;
       c93tp: // global
           R1 = _s92WT::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93tr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92WT::P64;
           _s92WS::P64 = P64[_s92WT::P64 + 16];
           I64[Hp - 16] = sat_s92WU_info;
           P64[Hp] = _s92WS::P64;
           R2 = _s92WS::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s92WW_entry() //  [R1, R2]
         { info_tbl: [(c93ty,
                       label: sat_s92WW_info
                       rep:HeapRep 2 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93ty: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93tz; else goto c93tA;
       c93tz: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c93tA: // global
           _s92WV::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s92WV::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_entry() //  [R2,
                                                               R3]
         { info_tbl: [(c93tB,
                       label: Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93tB: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c93tF; else goto c93tE;
       c93tF: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93tE: // global
           I64[Hp - 40] = ds_s92WT_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92WW_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R2 = Hp - 15;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure+5;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.897749682 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_entry() //  [R2,
                                                              R3]
         { info_tbl: [(c93tK,
                       label: Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93tK: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_entry(R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.898648171 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_closure" {
     Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_closure:
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_entry() //  [R2, R3,
                                                             R4]
         { info_tbl: [(c93tR,
                       label: Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93tR: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = Foreign.C.Error.throwErrnoIfNullRetry2_closure+1;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.899528302 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetryMayBlock_closure" {
     Foreign.C.Error.throwErrnoIfNullRetryMayBlock_closure:
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetryMayBlock_entry() //  [R2, R3,
                                                            R4]
         { info_tbl: [(c93tY,
                       label: Foreign.C.Error.throwErrnoIfNullRetryMayBlock_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93tY: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_entry(R4,
                                                                     R3,
                                                                     R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.902596236 UTC

[section ""data" . Foreign.C.Error.$wlvl1_closure" {
     Foreign.C.Error.$wlvl1_closure:
         const Foreign.C.Error.$wlvl1_info;
         const 0;
 },
 sat_s92X2_entry() //  [R1]
         { info_tbl: [(c93ue,
                       label: sat_s92X2_info
                       rep:HeapRep 2 ptrs 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93ue: // global
           _s92X2::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c93uf; else goto c93ug;
       c93ug: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c93ui; else goto c93uh;
       c93ui: // global
           HpAlloc = 16;
           goto c93uf;
       c93uf: // global
           R1 = _s92X2::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93uh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92X2::P64;
           _s92WX::P64 = P64[_s92X2::P64 + 16];
           _s92WZ::P64 = P64[_s92X2::P64 + 24];
           _s92WY::I64 = I64[_s92X2::P64 + 32];
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = _s92WZ::P64;
           R5 = Hp - 6;
           R4 = GHC.Base.Nothing_closure+1;
           R3 = _s92WY::I64;
           R2 = _s92WX::P64;
           Sp = Sp - 16;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s92X3_entry() //  [R1]
         { info_tbl: [(c93uj,
                       label: sat_s92X3_info
                       rep:HeapRep 2 ptrs 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93uj: // global
           _s92X3::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c93uk; else goto c93ul;
       c93ul: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c93un; else goto c93um;
       c93un: // global
           HpAlloc = 40;
           goto c93uk;
       c93uk: // global
           R1 = _s92X3::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93um: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92X3::P64;
           _s92WX::P64 = P64[_s92X3::P64 + 16];
           _s92WZ::P64 = P64[_s92X3::P64 + 24];
           _s92WY::I64 = I64[_s92X3::P64 + 32];
           I64[Hp - 32] = sat_s92X2_info;
           P64[Hp - 16] = _s92WX::P64;
           P64[Hp - 8] = _s92WZ::P64;
           I64[Hp] = _s92WY::I64;
           R2 = Hp - 32;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 Foreign.C.Error.$wlvl1_entry() //  [R2, R3, R4]
         { info_tbl: [(c93uo,
                       label: Foreign.C.Error.$wlvl1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93uo: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c93us; else goto c93ur;
       c93us: // global
           HpAlloc = 40;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$wlvl1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93ur: // global
           I64[Hp - 32] = sat_s92X3_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R4;
           I64[Hp] = R3;
           R1 = Hp - 32;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.904437341 UTC

[section ""data" . Foreign.C.Error.throwErrnoPath1_closure" {
     Foreign.C.Error.throwErrnoPath1_closure:
         const Foreign.C.Error.throwErrnoPath1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPath1_entry() //  [R2, R3]
         { info_tbl: [(c93uA,
                       label: Foreign.C.Error.throwErrnoPath1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93uA: // global
           _s92X5::P64 = R3;
           (_s92Xa::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R4 = _s92X5::P64;
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92Xa::I64));
           R2 = R2;
           call Foreign.C.Error.$wlvl1_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.905379187 UTC

[section ""data" . Foreign.C.Error.throwErrnoPath_closure" {
     Foreign.C.Error.throwErrnoPath_closure:
         const Foreign.C.Error.throwErrnoPath_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPath_entry() //  [R2, R3]
         { info_tbl: [(c93uH,
                       label: Foreign.C.Error.throwErrnoPath_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93uH: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.906417469 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf1_closure" {
     Foreign.C.Error.throwErrnoPathIf1_closure:
         const Foreign.C.Error.throwErrnoPathIf1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf1_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c93uW,
                       label: Foreign.C.Error.throwErrnoPathIf1_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93uW: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93uX; else goto c93uY;
       c93uX: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIf1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93uY: // global
           I64[Sp - 32] = block_c93uO_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93uO() //  [R1]
         { info_tbl: [(c93uO,
                       label: block_c93uO_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93uO: // global
           I64[Sp] = block_c93uQ_info;
           R2 = R1;
           _s92Xj::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s92Xj::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93uQ() //  [R1]
         { info_tbl: [(c93uQ,
                       label: block_c93uQ_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93uQ: // global
           if (R1 & 7 == 1) goto c93uT; else goto c93uU;
       c93uT: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93uU: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.907718071 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf_closure" {
     Foreign.C.Error.throwErrnoPathIf_closure:
         const Foreign.C.Error.throwErrnoPathIf_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c93va,
                       label: Foreign.C.Error.throwErrnoPathIf_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93va: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPathIf1_entry(R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.908814461 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf_1_closure" {
     Foreign.C.Error.throwErrnoPathIf_1_closure:
         const Foreign.C.Error.throwErrnoPathIf_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf_1_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c93vp,
                       label: Foreign.C.Error.throwErrnoPathIf_1_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93vp: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93vq; else goto c93vr;
       c93vq: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIf_1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93vr: // global
           I64[Sp - 32] = block_c93vh_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93vh() //  [R1]
         { info_tbl: [(c93vh,
                       label: block_c93vh_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93vh: // global
           _s92Xl::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c93vj_info;
           R2 = R1;
           R1 = _s92Xl::P64;
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93vj() //  [R1]
         { info_tbl: [(c93vj,
                       label: block_c93vj_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93vj: // global
           if (R1 & 7 == 1) goto c93vm; else goto c93vn;
       c93vm: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93vn: // global
           _s92Xm::P64 = P64[Sp + 8];
           _s92Xn::P64 = P64[Sp + 16];
           (_s92Xx::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R4 = _s92Xn::P64;
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92Xx::I64));
           R2 = _s92Xm::P64;
           Sp = Sp + 24;
           call Foreign.C.Error.$wlvl1_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.910220852 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf__closure" {
     Foreign.C.Error.throwErrnoPathIf__closure:
         const Foreign.C.Error.throwErrnoPathIf__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf__entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c93vF,
                       label: Foreign.C.Error.throwErrnoPathIf__info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93vF: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPathIf_1_entry(R5,
                                                         R4,
                                                         R3,
                                                         R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.911744835 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfMinus1__closure" {
     Foreign.C.Error.throwErrnoPathIfMinus1__closure:
         const Foreign.C.Error.throwErrnoPathIfMinus1__info;
         const 0;
 },
 sat_s92XD_entry() //  [R1]
         { info_tbl: [(c93vU,
                       label: sat_s92XD_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93vU: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93vV; else goto c93vW;
       c93vV: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93vW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92XC_entry() //  [R1]
         { info_tbl: [(c93vX,
                       label: ds_s92XC_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93vX: // global
           _s92XC::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93vY; else goto c93vZ;
       c93vZ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93w1; else goto c93w0;
       c93w1: // global
           HpAlloc = 24;
           goto c93vY;
       c93vY: // global
           R1 = _s92XC::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93w0: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92XC::P64;
           _s92XB::P64 = P64[_s92XC::P64 + 16];
           I64[Hp - 16] = sat_s92XD_info;
           P64[Hp] = _s92XB::P64;
           R2 = _s92XB::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s92XS_entry() //  [R1, R2, R3, R4]
         { info_tbl: [(c93wf,
                       label: sat_s92XS_info
                       rep:HeapRep 2 ptrs { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93wf: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c93wg; else goto c93wh;
       c93wg: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93wh: // global
           I64[Sp - 40] = block_c93w7_info;
           _s92XA::P64 = P64[R1 + 4];
           _s92XC::P64 = P64[R1 + 12];
           R1 = R4;
           P64[Sp - 32] = _s92XA::P64;
           P64[Sp - 24] = _s92XC::P64;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 40;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93w7() //  [R1]
         { info_tbl: [(c93w7,
                       label: block_c93w7_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93w7: // global
           _s92XC::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c93w9_info;
           R2 = P64[Sp + 8];
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = R1;
           P64[Sp + 8] = _s92XC::P64;
           Sp = Sp - 8;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 _c93w9() //  [R1]
         { info_tbl: [(c93w9,
                       label: block_c93w9_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93w9: // global
           if (R1 & 7 == 1) goto c93wc; else goto c93wd;
       c93wc: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93wd: // global
           _s92XE::P64 = P64[Sp + 8];
           _s92XF::P64 = P64[Sp + 16];
           (_s92XP::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R4 = _s92XF::P64;
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92XP::I64));
           R2 = _s92XE::P64;
           Sp = Sp + 24;
           call Foreign.C.Error.$wlvl1_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoPathIfMinus1__entry() //  [R2, R3]
         { info_tbl: [(c93wr,
                       label: Foreign.C.Error.throwErrnoPathIfMinus1__info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93wr: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c93wv; else goto c93wu;
       c93wv: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIfMinus1__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93wu: // global
           I64[Hp - 40] = ds_s92XC_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92XS_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 12;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.91441879 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfNull1_closure" {
     Foreign.C.Error.throwErrnoPathIfNull1_closure:
         const Foreign.C.Error.throwErrnoPathIfNull1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIfNull1_entry() //  [R2, R3, R4]
         { info_tbl: [(c93wF,
                       label: Foreign.C.Error.throwErrnoPathIfNull1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93wF: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93wG; else goto c93wH;
       c93wG: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIfNull1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93wH: // global
           I64[Sp - 24] = block_c93wA_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93wA() //  [R1]
         { info_tbl: [(c93wA,
                       label: block_c93wA_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93wA: // global
           I64[Sp - 8] = block_c93wC_info;
           _s92XZ::P64 = R1;
           R1 = R1;
           P64[Sp] = _s92XZ::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u93wR; else goto c93wD;
       u93wR: // global
           call _c93wC(R1) args: 0, res: 0, upd: 0;
       c93wD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93wC() //  [R1]
         { info_tbl: [(c93wC,
                       label: block_c93wC_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93wC: // global
           if (I64[R1 + 7] == 0) goto c93wQ; else goto c93wP;
       c93wQ: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
       c93wP: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.91574311 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfNull_closure" {
     Foreign.C.Error.throwErrnoPathIfNull_closure:
         const Foreign.C.Error.throwErrnoPathIfNull_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIfNull_entry() //  [R2, R3, R4]
         { info_tbl: [(c93wW,
                       label: Foreign.C.Error.throwErrnoPathIfNull_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93wW: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPathIfNull1_entry(R4,
                                                            R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.91721435 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfMinus1_closure" {
     Foreign.C.Error.throwErrnoPathIfMinus1_closure:
         const Foreign.C.Error.throwErrnoPathIfMinus1_info;
         const 0;
 },
 sat_s92Y6_entry() //  [R1]
         { info_tbl: [(c93xb,
                       label: sat_s92Y6_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93xb: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93xc; else goto c93xd;
       c93xc: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93xd: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92Y5_entry() //  [R1]
         { info_tbl: [(c93xe,
                       label: ds_s92Y5_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93xe: // global
           _s92Y5::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93xf; else goto c93xg;
       c93xg: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93xi; else goto c93xh;
       c93xi: // global
           HpAlloc = 24;
           goto c93xf;
       c93xf: // global
           R1 = _s92Y5::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93xh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92Y5::P64;
           _s92Y4::P64 = P64[_s92Y5::P64 + 16];
           I64[Hp - 16] = sat_s92Y6_info;
           P64[Hp] = _s92Y4::P64;
           R2 = _s92Y4::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s92Yf_entry() //  [R1, R2, R3, R4]
         { info_tbl: [(c93xw,
                       label: sat_s92Yf_info
                       rep:HeapRep 2 ptrs { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93xw: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c93xx; else goto c93xy;
       c93xx: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93xy: // global
           I64[Sp - 40] = block_c93xo_info;
           _s92Y3::P64 = P64[R1 + 4];
           _s92Y5::P64 = P64[R1 + 12];
           R1 = R4;
           P64[Sp - 32] = _s92Y3::P64;
           P64[Sp - 24] = _s92Y5::P64;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 40;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93xo() //  [R1]
         { info_tbl: [(c93xo,
                       label: block_c93xo_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93xo: // global
           _s92Y3::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c93xq_info;
           R2 = _s92Y3::P64;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = R1;
           P64[Sp] = P64[Sp + 16];
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 _c93xq() //  [R1]
         { info_tbl: [(c93xq,
                       label: block_c93xq_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93xq: // global
           if (R1 & 7 == 1) goto c93xt; else goto c93xu;
       c93xt: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93xu: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoPathIfMinus1_entry() //  [R2, R3]
         { info_tbl: [(c93xG,
                       label: Foreign.C.Error.throwErrnoPathIfMinus1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93xG: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c93xK; else goto c93xJ;
       c93xK: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIfMinus1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93xJ: // global
           I64[Hp - 40] = ds_s92Y5_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92Yf_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 12;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.919302153 UTC

[section ""relreadonly" . S932t_srt" {
     S932t_srt:
         const GHC.IO.Encoding.getForeignEncoding_closure;
         const GHC.Foreign.$wpeekCString_closure;
         const Foreign.C.Error.$werrnoToIOError_closure;
         const Foreign.C.Error.errnoToIOError_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const Foreign.C.Error.$wlvl_closure;
         const Foreign.C.Error.throwErrno1_closure;
         const Foreign.C.Error.throwErrnoIf1_closure;
         const Foreign.C.Error.throwErrnoIf_1_closure;
         const sat_s92UT_closure;
         const Foreign.C.Error.throwErrnoIfMinus2_closure;
         const Foreign.C.Error.throwErrnoIfMinus1__closure;
         const Foreign.C.Error.throwErrnoIfMinus1_closure;
         const Foreign.C.Error.throwErrnoIfNull1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
         const Foreign.C.Error.throwErrnoIfRetry_1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry__closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry1_closure;
         const Foreign.C.Error.throwErrnoIfNullRetry1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure;
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure;
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure;
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_closure;
         const Foreign.C.Error.$wlvl1_closure;
         const Foreign.C.Error.throwErrnoPath1_closure;
         const Foreign.C.Error.throwErrnoPathIf1_closure;
         const Foreign.C.Error.throwErrnoPathIf_1_closure;
         const Foreign.C.Error.throwErrnoPathIfMinus1__closure;
         const Foreign.C.Error.throwErrnoPathIfNull1_closure;
         const Foreign.C.Error.throwErrnoPathIfMinus1_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.920291157 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:04:11.921402211 UTC

[section ""cstring" . Foreign.C.Error.$trModule4_bytes" {
     Foreign.C.Error.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.923162354 UTC

[section ""data" . Foreign.C.Error.$trModule3_closure" {
     Foreign.C.Error.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.924772124 UTC

[section ""cstring" . Foreign.C.Error.$trModule2_bytes" {
     Foreign.C.Error.$trModule2_bytes:
         I8[] [70,111,114,101,105,103,110,46,67,46,69,114,114,111,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.926393142 UTC

[section ""data" . Foreign.C.Error.$trModule1_closure" {
     Foreign.C.Error.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.928024873 UTC

[section ""data" . Foreign.C.Error.$trModule_closure" {
     Foreign.C.Error.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Foreign.C.Error.$trModule3_closure+1;
         const Foreign.C.Error.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.929859089 UTC

[section ""data" . $krep_r92Th_closure" {
     $krep_r92Th_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Foreign.C.Types.$tcCInt_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.931482514 UTC

[section ""cstring" . Foreign.C.Error.$tcErrno2_bytes" {
     Foreign.C.Error.$tcErrno2_bytes:
         I8[] [69,114,114,110,111]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.933008443 UTC

[section ""data" . Foreign.C.Error.$tcErrno1_closure" {
     Foreign.C.Error.$tcErrno1_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$tcErrno2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.934661597 UTC

[section ""data" . Foreign.C.Error.$tcErrno_closure" {
     Foreign.C.Error.$tcErrno_closure:
         const GHC.Types.TyCon_con_info;
         const Foreign.C.Error.$trModule_closure+1;
         const Foreign.C.Error.$tcErrno1_closure+1;
         const GHC.Types.krep$*_closure;
         const 9614618910057470603;
         const 5790003468206630810;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.936432618 UTC

[section ""data" . $krep1_r92Ti_closure" {
     $krep1_r92Ti_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Foreign.C.Error.$tcErrno_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.939468299 UTC

[section ""data" . Foreign.C.Error.$tc'Errno1_closure" {
     Foreign.C.Error.$tc'Errno1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r92Th_closure+1;
         const $krep1_r92Ti_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.941167574 UTC

[section ""cstring" . Foreign.C.Error.$tc'Errno3_bytes" {
     Foreign.C.Error.$tc'Errno3_bytes:
         I8[] [39,69,114,114,110,111]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.943128644 UTC

[section ""data" . Foreign.C.Error.$tc'Errno2_closure" {
     Foreign.C.Error.$tc'Errno2_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$tc'Errno3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.944680575 UTC

[section ""data" . Foreign.C.Error.$tc'Errno_closure" {
     Foreign.C.Error.$tc'Errno_closure:
         const GHC.Types.TyCon_con_info;
         const Foreign.C.Error.$trModule_closure+1;
         const Foreign.C.Error.$tc'Errno2_closure+1;
         const Foreign.C.Error.$tc'Errno1_closure+4;
         const 18175500743799072511;
         const 6332857689812514354;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.946734304 UTC

[section ""data" . Foreign.C.Error.getErrno1_closure" {
     Foreign.C.Error.getErrno1_closure:
         const Foreign.C.Error.getErrno1_info;
 },
 Foreign.C.Error.getErrno1_entry() //  []
         { info_tbl: [(c93y6,
                       label: Foreign.C.Error.getErrno1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93y6: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c93yc; else goto c93yb;
       c93yc: // global
           HpAlloc = 16;
           R1 = Foreign.C.Error.getErrno1_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c93yb: // global
           (_s92To::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92To::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.950457493 UTC

[section ""data" . Foreign.C.Error.getErrno_closure" {
     Foreign.C.Error.getErrno_closure:
         const Foreign.C.Error.getErrno_info;
 },
 Foreign.C.Error.getErrno_entry() //  []
         { info_tbl: [(c93yn,
                       label: Foreign.C.Error.getErrno_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93yn: // global
           call Foreign.C.Error.getErrno1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.953635496 UTC

[section ""data" . Foreign.C.Error.resetErrno1_closure" {
     Foreign.C.Error.resetErrno1_closure:
         const Foreign.C.Error.resetErrno1_info;
 },
 Foreign.C.Error.resetErrno1_entry() //  []
         { info_tbl: [(c93yA,
                       label: Foreign.C.Error.resetErrno1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93yA: // global
           call "ccall" arg hints:  [‘signed’]  result hints:  [] __hscore_set_errno(0);
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.956867199 UTC

[section ""data" . Foreign.C.Error.resetErrno_closure" {
     Foreign.C.Error.resetErrno_closure:
         const Foreign.C.Error.resetErrno_info;
 },
 Foreign.C.Error.resetErrno_entry() //  []
         { info_tbl: [(c93yM,
                       label: Foreign.C.Error.resetErrno_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93yM: // global
           call Foreign.C.Error.resetErrno1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.960518165 UTC

[section ""data" . Foreign.C.Error.isValidErrno_closure" {
     Foreign.C.Error.isValidErrno_closure:
         const Foreign.C.Error.isValidErrno_info;
 },
 Foreign.C.Error.isValidErrno_entry() //  [R2]
         { info_tbl: [(c93z0,
                       label: Foreign.C.Error.isValidErrno_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93z0: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c93z1; else goto c93z2;
       c93z1: // global
           R2 = R2;
           R1 = Foreign.C.Error.isValidErrno_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c93z2: // global
           I64[Sp - 8] = block_c93yX_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u93za; else goto c93yY;
       u93za: // global
           call _c93yX(R1) args: 0, res: 0, upd: 0;
       c93yY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93yX() //  [R1]
         { info_tbl: [(c93yX,
                       label: block_c93yX_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93yX: // global
           if (I64[R1 + 7] == (-1)) goto c93z9; else goto c93z8;
       c93z9: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93z8: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.966143014 UTC

[section ""data" . Foreign.C.Error.$fEqErrno_$c==_closure" {
     Foreign.C.Error.$fEqErrno_$c==_closure:
         const Foreign.C.Error.$fEqErrno_$c==_info;
 },
 Foreign.C.Error.$fEqErrno_$c==_entry() //  [R2, R3]
         { info_tbl: [(c93zt,
                       label: Foreign.C.Error.$fEqErrno_$c==_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93zt: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c93zu; else goto c93zv;
       c93zu: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$fEqErrno_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93zv: // global
           I64[Sp - 16] = block_c93zq_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u93zU; else goto c93zr;
       u93zU: // global
           call _c93zq(R1) args: 0, res: 0, upd: 0;
       c93zr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93zq() //  [R1]
         { info_tbl: [(c93zq,
                       label: block_c93zq_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93zq: // global
           _s92TD::I64 = I64[R1 + 7];
           if (_s92TD::I64 != (-1)) goto c93zD; else goto u93zQ;
       c93zD: // global
           I64[Sp] = block_c93zB_info;
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s92TD::I64;
           if (R1 & 7 != 0) goto u93zS; else goto c93zE;
       u93zS: // global
           call _c93zB(R1) args: 0, res: 0, upd: 0;
       c93zE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u93zQ: // global
           Sp = Sp + 16;
           call _c93zN() args: 0, res: 0, upd: 0;
     }
 },
 _c93zB() //  [R1]
         { info_tbl: [(c93zB,
                       label: block_c93zB_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93zB: // global
           _s92TG::I64 = I64[R1 + 7];
           if (_s92TG::I64 != (-1)) goto c93zL; else goto u93zR;
       c93zL: // global
           R1 = I64[((I64[Sp + 8] == _s92TG::I64) << 3) + GHC.Types.Bool_closure_tbl];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u93zR: // global
           Sp = Sp + 16;
           call _c93zN() args: 0, res: 0, upd: 0;
     }
 },
 _c93zN() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93zN: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.974928939 UTC

[section ""data" . Foreign.C.Error.$fEqErrno_$c/=_closure" {
     Foreign.C.Error.$fEqErrno_$c/=_closure:
         const Foreign.C.Error.$fEqErrno_$c/=_info;
 },
 Foreign.C.Error.$fEqErrno_$c/=_entry() //  [R2, R3]
         { info_tbl: [(c93Am,
                       label: Foreign.C.Error.$fEqErrno_$c/=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Am: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c93An; else goto c93Ao;
       c93An: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$fEqErrno_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93Ao: // global
           I64[Sp - 16] = block_c93Aj_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u93AS; else goto c93Ak;
       u93AS: // global
           call _c93Aj(R1) args: 0, res: 0, upd: 0;
       c93Ak: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93Aj() //  [R1]
         { info_tbl: [(c93Aj,
                       label: block_c93Aj_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Aj: // global
           _s92TM::I64 = I64[R1 + 7];
           if (_s92TM::I64 != (-1)) goto c93Aw; else goto u93AN;
       c93Aw: // global
           I64[Sp] = block_c93Au_info;
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s92TM::I64;
           if (R1 & 7 != 0) goto u93AQ; else goto c93Ax;
       u93AQ: // global
           call _c93Au(R1) args: 0, res: 0, upd: 0;
       c93Ax: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u93AN: // global
           Sp = Sp + 16;
           call _c93AM() args: 0, res: 0, upd: 0;
     }
 },
 _c93Au() //  [R1]
         { info_tbl: [(c93Au,
                       label: block_c93Au_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Au: // global
           _s92TP::I64 = I64[R1 + 7];
           if (_s92TP::I64 != (-1)) goto c93AK; else goto u93AO;
       c93AK: // global
           if (I64[Sp + 8] == _s92TP::I64) goto c93AI; else goto u93AP;
       c93AI: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u93AP: // global
           Sp = Sp + 16;
           goto u93AU;
       u93AO: // global
           Sp = Sp + 16;
           goto u93AU;
       u93AU: // global
           call _c93AM() args: 0, res: 0, upd: 0;
     }
 },
 _c93AM() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93AM: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.983175075 UTC

[section ""data" . Foreign.C.Error.$fEqErrno_closure" {
     Foreign.C.Error.$fEqErrno_closure:
         const GHC.Classes.C:Eq_con_info;
         const Foreign.C.Error.$fEqErrno_$c==_closure+2;
         const Foreign.C.Error.$fEqErrno_$c/=_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.984807587 UTC

[section ""data" . Foreign.C.Error.eXDEV1_closure" {
     Foreign.C.Error.eXDEV1_closure:
         const GHC.Int.I32#_con_info;
         const 18;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.986422875 UTC

[section ""data" . Foreign.C.Error.eXDEV_closure" {
     Foreign.C.Error.eXDEV_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eXDEV1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.988015745 UTC

[section ""data" . Foreign.C.Error.eAGAIN1_closure" {
     Foreign.C.Error.eAGAIN1_closure:
         const GHC.Int.I32#_con_info;
         const 11;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.990046873 UTC

[section ""data" . Foreign.C.Error.eWOULDBLOCK_closure" {
     Foreign.C.Error.eWOULDBLOCK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eAGAIN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.991662017 UTC

[section ""data" . Foreign.C.Error.eUSERS1_closure" {
     Foreign.C.Error.eUSERS1_closure:
         const GHC.Int.I32#_con_info;
         const 87;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.99327632 UTC

[section ""data" . Foreign.C.Error.eUSERS_closure" {
     Foreign.C.Error.eUSERS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eUSERS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.994842527 UTC

[section ""data" . Foreign.C.Error.eTXTBSY1_closure" {
     Foreign.C.Error.eTXTBSY1_closure:
         const GHC.Int.I32#_con_info;
         const 26;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.99688557 UTC

[section ""data" . Foreign.C.Error.eTXTBSY_closure" {
     Foreign.C.Error.eTXTBSY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTXTBSY1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:11.998542394 UTC

[section ""data" . Foreign.C.Error.eTOOMANYREFS1_closure" {
     Foreign.C.Error.eTOOMANYREFS1_closure:
         const GHC.Int.I32#_con_info;
         const 109;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.000009954 UTC

[section ""data" . Foreign.C.Error.eTOOMANYREFS_closure" {
     Foreign.C.Error.eTOOMANYREFS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTOOMANYREFS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.001819965 UTC

[section ""data" . Foreign.C.Error.eTIMEDOUT1_closure" {
     Foreign.C.Error.eTIMEDOUT1_closure:
         const GHC.Int.I32#_con_info;
         const 110;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.003302314 UTC

[section ""data" . Foreign.C.Error.eTIMEDOUT_closure" {
     Foreign.C.Error.eTIMEDOUT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTIMEDOUT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.004824151 UTC

[section ""data" . Foreign.C.Error.eTIME1_closure" {
     Foreign.C.Error.eTIME1_closure:
         const GHC.Int.I32#_con_info;
         const 62;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.006386673 UTC

[section ""data" . Foreign.C.Error.eTIME_closure" {
     Foreign.C.Error.eTIME_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTIME1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.007916901 UTC

[section ""data" . Foreign.C.Error.eSTALE1_closure" {
     Foreign.C.Error.eSTALE1_closure:
         const GHC.Int.I32#_con_info;
         const 116;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.009518252 UTC

[section ""data" . Foreign.C.Error.eSTALE_closure" {
     Foreign.C.Error.eSTALE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSTALE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.011068532 UTC

[section ""data" . Foreign.C.Error.eSRMNT1_closure" {
     Foreign.C.Error.eSRMNT1_closure:
         const GHC.Int.I32#_con_info;
         const 69;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.012609974 UTC

[section ""data" . Foreign.C.Error.eSRMNT_closure" {
     Foreign.C.Error.eSRMNT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSRMNT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.014623566 UTC

[section ""data" . Foreign.C.Error.eSRCH1_closure" {
     Foreign.C.Error.eSRCH1_closure:
         const GHC.Int.I32#_con_info;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.016174054 UTC

[section ""data" . Foreign.C.Error.eSRCH_closure" {
     Foreign.C.Error.eSRCH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSRCH1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.017836832 UTC

[section ""data" . Foreign.C.Error.eSPIPE1_closure" {
     Foreign.C.Error.eSPIPE1_closure:
         const GHC.Int.I32#_con_info;
         const 29;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.019411835 UTC

[section ""data" . Foreign.C.Error.eSPIPE_closure" {
     Foreign.C.Error.eSPIPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSPIPE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.021578607 UTC

[section ""data" . Foreign.C.Error.eSOCKTNOSUPPORT1_closure" {
     Foreign.C.Error.eSOCKTNOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 94;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.023106164 UTC

[section ""data" . Foreign.C.Error.eSOCKTNOSUPPORT_closure" {
     Foreign.C.Error.eSOCKTNOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSOCKTNOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.024757696 UTC

[section ""data" . Foreign.C.Error.eSHUTDOWN1_closure" {
     Foreign.C.Error.eSHUTDOWN1_closure:
         const GHC.Int.I32#_con_info;
         const 108;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.026673421 UTC

[section ""data" . Foreign.C.Error.eSHUTDOWN_closure" {
     Foreign.C.Error.eSHUTDOWN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSHUTDOWN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.028294145 UTC

[section ""data" . Foreign.C.Error.eBADRPC1_closure" {
     Foreign.C.Error.eBADRPC1_closure:
         const GHC.Int.I32#_con_info;
         const (-1);
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.029867505 UTC

[section ""data" . Foreign.C.Error.eRREMOTE_closure" {
     Foreign.C.Error.eRREMOTE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.031447535 UTC

[section ""data" . Foreign.C.Error.eRPCMISMATCH_closure" {
     Foreign.C.Error.eRPCMISMATCH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.033061525 UTC

[section ""data" . Foreign.C.Error.eROFS1_closure" {
     Foreign.C.Error.eROFS1_closure:
         const GHC.Int.I32#_con_info;
         const 30;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.034602428 UTC

[section ""data" . Foreign.C.Error.eROFS_closure" {
     Foreign.C.Error.eROFS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eROFS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.036215105 UTC

[section ""data" . Foreign.C.Error.eREMOTE1_closure" {
     Foreign.C.Error.eREMOTE1_closure:
         const GHC.Int.I32#_con_info;
         const 66;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.038166691 UTC

[section ""data" . Foreign.C.Error.eREMOTE_closure" {
     Foreign.C.Error.eREMOTE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eREMOTE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.039685881 UTC

[section ""data" . Foreign.C.Error.eREMCHG1_closure" {
     Foreign.C.Error.eREMCHG1_closure:
         const GHC.Int.I32#_con_info;
         const 78;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.041292993 UTC

[section ""data" . Foreign.C.Error.eREMCHG_closure" {
     Foreign.C.Error.eREMCHG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eREMCHG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.042939856 UTC

[section ""data" . Foreign.C.Error.eRANGE1_closure" {
     Foreign.C.Error.eRANGE1_closure:
         const GHC.Int.I32#_con_info;
         const 34;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.045030304 UTC

[section ""data" . Foreign.C.Error.eRANGE_closure" {
     Foreign.C.Error.eRANGE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eRANGE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.04665263 UTC

[section ""data" . Foreign.C.Error.ePROTOTYPE1_closure" {
     Foreign.C.Error.ePROTOTYPE1_closure:
         const GHC.Int.I32#_con_info;
         const 91;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.048216951 UTC

[section ""data" . Foreign.C.Error.ePROTOTYPE_closure" {
     Foreign.C.Error.ePROTOTYPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePROTOTYPE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.04984134 UTC

[section ""data" . Foreign.C.Error.ePROTONOSUPPORT1_closure" {
     Foreign.C.Error.ePROTONOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 93;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.051417775 UTC

[section ""data" . Foreign.C.Error.ePROTONOSUPPORT_closure" {
     Foreign.C.Error.ePROTONOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePROTONOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.053038752 UTC

[section ""data" . Foreign.C.Error.ePROTO1_closure" {
     Foreign.C.Error.ePROTO1_closure:
         const GHC.Int.I32#_con_info;
         const 71;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.054586357 UTC

[section ""data" . Foreign.C.Error.ePROTO_closure" {
     Foreign.C.Error.ePROTO_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePROTO1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.056284921 UTC

[section ""data" . Foreign.C.Error.ePROGUNAVAIL_closure" {
     Foreign.C.Error.ePROGUNAVAIL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.058334249 UTC

[section ""data" . Foreign.C.Error.ePROGMISMATCH_closure" {
     Foreign.C.Error.ePROGMISMATCH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.059988931 UTC

[section ""data" . Foreign.C.Error.ePROCUNAVAIL_closure" {
     Foreign.C.Error.ePROCUNAVAIL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.061719451 UTC

[section ""data" . Foreign.C.Error.ePROCLIM_closure" {
     Foreign.C.Error.ePROCLIM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.063337556 UTC

[section ""data" . Foreign.C.Error.ePIPE1_closure" {
     Foreign.C.Error.ePIPE1_closure:
         const GHC.Int.I32#_con_info;
         const 32;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.064956362 UTC

[section ""data" . Foreign.C.Error.ePIPE_closure" {
     Foreign.C.Error.ePIPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePIPE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.066635228 UTC

[section ""data" . Foreign.C.Error.ePFNOSUPPORT1_closure" {
     Foreign.C.Error.ePFNOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 96;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.068788951 UTC

[section ""data" . Foreign.C.Error.ePFNOSUPPORT_closure" {
     Foreign.C.Error.ePFNOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePFNOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.070423106 UTC

[section ""data" . Foreign.C.Error.ePERM1_closure" {
     Foreign.C.Error.ePERM1_closure:
         const GHC.Int.I32#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.071962554 UTC

[section ""data" . Foreign.C.Error.ePERM_closure" {
     Foreign.C.Error.ePERM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePERM1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.073619903 UTC

[section ""data" . Foreign.C.Error.eNOTSUP1_closure" {
     Foreign.C.Error.eNOTSUP1_closure:
         const GHC.Int.I32#_con_info;
         const 95;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.075213151 UTC

[section ""data" . Foreign.C.Error.eOPNOTSUPP_closure" {
     Foreign.C.Error.eOPNOTSUPP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTSUP1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.076828212 UTC

[section ""data" . Foreign.C.Error.eNXIO1_closure" {
     Foreign.C.Error.eNXIO1_closure:
         const GHC.Int.I32#_con_info;
         const 6;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.079073808 UTC

[section ""data" . Foreign.C.Error.eNXIO_closure" {
     Foreign.C.Error.eNXIO_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNXIO1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.080733164 UTC

[section ""data" . Foreign.C.Error.eNOTTY1_closure" {
     Foreign.C.Error.eNOTTY1_closure:
         const GHC.Int.I32#_con_info;
         const 25;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.082349766 UTC

[section ""data" . Foreign.C.Error.eNOTTY_closure" {
     Foreign.C.Error.eNOTTY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTTY1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.083988678 UTC

[section ""data" . Foreign.C.Error.eNOTSUP_closure" {
     Foreign.C.Error.eNOTSUP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTSUP1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.085607579 UTC

[section ""data" . Foreign.C.Error.eNOTSOCK1_closure" {
     Foreign.C.Error.eNOTSOCK1_closure:
         const GHC.Int.I32#_con_info;
         const 88;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.087199117 UTC

[section ""data" . Foreign.C.Error.eNOTSOCK_closure" {
     Foreign.C.Error.eNOTSOCK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTSOCK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.088868597 UTC

[section ""data" . Foreign.C.Error.eNOTEMPTY1_closure" {
     Foreign.C.Error.eNOTEMPTY1_closure:
         const GHC.Int.I32#_con_info;
         const 39;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.09081969 UTC

[section ""data" . Foreign.C.Error.eNOTEMPTY_closure" {
     Foreign.C.Error.eNOTEMPTY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTEMPTY1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.092896731 UTC

[section ""data" . Foreign.C.Error.eNOTDIR1_closure" {
     Foreign.C.Error.eNOTDIR1_closure:
         const GHC.Int.I32#_con_info;
         const 20;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.094574654 UTC

[section ""data" . Foreign.C.Error.eNOTDIR_closure" {
     Foreign.C.Error.eNOTDIR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTDIR1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.096261371 UTC

[section ""data" . Foreign.C.Error.eNOTCONN1_closure" {
     Foreign.C.Error.eNOTCONN1_closure:
         const GHC.Int.I32#_con_info;
         const 107;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.097876899 UTC

[section ""data" . Foreign.C.Error.eNOTCONN_closure" {
     Foreign.C.Error.eNOTCONN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTCONN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.099575797 UTC

[section ""data" . Foreign.C.Error.eNOTBLK1_closure" {
     Foreign.C.Error.eNOTBLK1_closure:
         const GHC.Int.I32#_con_info;
         const 15;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.10118932 UTC

[section ""data" . Foreign.C.Error.eNOTBLK_closure" {
     Foreign.C.Error.eNOTBLK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTBLK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.102860643 UTC

[section ""data" . Foreign.C.Error.eNOSYS1_closure" {
     Foreign.C.Error.eNOSYS1_closure:
         const GHC.Int.I32#_con_info;
         const 38;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.104565898 UTC

[section ""data" . Foreign.C.Error.eNOSYS_closure" {
     Foreign.C.Error.eNOSYS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSYS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.10697998 UTC

[section ""data" . Foreign.C.Error.eNOSTR1_closure" {
     Foreign.C.Error.eNOSTR1_closure:
         const GHC.Int.I32#_con_info;
         const 60;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.10856489 UTC

[section ""data" . Foreign.C.Error.eNOSTR_closure" {
     Foreign.C.Error.eNOSTR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSTR1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.110204746 UTC

[section ""data" . Foreign.C.Error.eNOSR1_closure" {
     Foreign.C.Error.eNOSR1_closure:
         const GHC.Int.I32#_con_info;
         const 63;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.11179243 UTC

[section ""data" . Foreign.C.Error.eNOSR_closure" {
     Foreign.C.Error.eNOSR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSR1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.113420046 UTC

[section ""data" . Foreign.C.Error.eNOSPC1_closure" {
     Foreign.C.Error.eNOSPC1_closure:
         const GHC.Int.I32#_con_info;
         const 28;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.115049471 UTC

[section ""data" . Foreign.C.Error.eNOSPC_closure" {
     Foreign.C.Error.eNOSPC_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.11671011 UTC

[section ""data" . Foreign.C.Error.eNOPROTOOPT1_closure" {
     Foreign.C.Error.eNOPROTOOPT1_closure:
         const GHC.Int.I32#_con_info;
         const 92;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.118888469 UTC

[section ""data" . Foreign.C.Error.eNOPROTOOPT_closure" {
     Foreign.C.Error.eNOPROTOOPT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOPROTOOPT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.120574407 UTC

[section ""data" . Foreign.C.Error.eNONET1_closure" {
     Foreign.C.Error.eNONET1_closure:
         const GHC.Int.I32#_con_info;
         const 64;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.122239056 UTC

[section ""data" . Foreign.C.Error.eNONET_closure" {
     Foreign.C.Error.eNONET_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNONET1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.123817467 UTC

[section ""data" . Foreign.C.Error.eNOMSG1_closure" {
     Foreign.C.Error.eNOMSG1_closure:
         const GHC.Int.I32#_con_info;
         const 42;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.125986599 UTC

[section ""data" . Foreign.C.Error.eNOMSG_closure" {
     Foreign.C.Error.eNOMSG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOMSG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.12761039 UTC

[section ""data" . Foreign.C.Error.eNOMEM1_closure" {
     Foreign.C.Error.eNOMEM1_closure:
         const GHC.Int.I32#_con_info;
         const 12;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.129215053 UTC

[section ""data" . Foreign.C.Error.eNOMEM_closure" {
     Foreign.C.Error.eNOMEM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOMEM1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.130966737 UTC

[section ""data" . Foreign.C.Error.eNOLINK1_closure" {
     Foreign.C.Error.eNOLINK1_closure:
         const GHC.Int.I32#_con_info;
         const 67;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.132607952 UTC

[section ""data" . Foreign.C.Error.eNOLINK_closure" {
     Foreign.C.Error.eNOLINK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOLINK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.134326109 UTC

[section ""data" . Foreign.C.Error.eNOLCK1_closure" {
     Foreign.C.Error.eNOLCK1_closure:
         const GHC.Int.I32#_con_info;
         const 37;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.135899626 UTC

[section ""data" . Foreign.C.Error.eNOLCK_closure" {
     Foreign.C.Error.eNOLCK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOLCK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.137565602 UTC

[section ""data" . Foreign.C.Error.eNOEXEC1_closure" {
     Foreign.C.Error.eNOEXEC1_closure:
         const GHC.Int.I32#_con_info;
         const 8;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.139218484 UTC

[section ""data" . Foreign.C.Error.eNOEXEC_closure" {
     Foreign.C.Error.eNOEXEC_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOEXEC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.140885957 UTC

[section ""data" . Foreign.C.Error.eNOENT1_closure" {
     Foreign.C.Error.eNOENT1_closure:
         const GHC.Int.I32#_con_info;
         const 2;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.14302124 UTC

[section ""data" . Foreign.C.Error.eNOENT_closure" {
     Foreign.C.Error.eNOENT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOENT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.144628994 UTC

[section ""data" . Foreign.C.Error.eNODEV1_closure" {
     Foreign.C.Error.eNODEV1_closure:
         const GHC.Int.I32#_con_info;
         const 19;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.146832373 UTC

[section ""data" . Foreign.C.Error.eNODEV_closure" {
     Foreign.C.Error.eNODEV_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNODEV1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.148472138 UTC

[section ""data" . Foreign.C.Error.eNODATA1_closure" {
     Foreign.C.Error.eNODATA1_closure:
         const GHC.Int.I32#_con_info;
         const 61;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.150117691 UTC

[section ""data" . Foreign.C.Error.eNODATA_closure" {
     Foreign.C.Error.eNODATA_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNODATA1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.151825911 UTC

[section ""data" . Foreign.C.Error.eNOBUFS1_closure" {
     Foreign.C.Error.eNOBUFS1_closure:
         const GHC.Int.I32#_con_info;
         const 105;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.153458568 UTC

[section ""data" . Foreign.C.Error.eNOBUFS_closure" {
     Foreign.C.Error.eNOBUFS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOBUFS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.155126117 UTC

[section ""data" . Foreign.C.Error.eNFILE1_closure" {
     Foreign.C.Error.eNFILE1_closure:
         const GHC.Int.I32#_con_info;
         const 23;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.156776322 UTC

[section ""data" . Foreign.C.Error.eNFILE_closure" {
     Foreign.C.Error.eNFILE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNFILE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.158475651 UTC

[section ""data" . Foreign.C.Error.eNETUNREACH1_closure" {
     Foreign.C.Error.eNETUNREACH1_closure:
         const GHC.Int.I32#_con_info;
         const 101;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.160163234 UTC

[section ""data" . Foreign.C.Error.eNETUNREACH_closure" {
     Foreign.C.Error.eNETUNREACH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNETUNREACH1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.162466261 UTC

[section ""data" . Foreign.C.Error.eNETRESET1_closure" {
     Foreign.C.Error.eNETRESET1_closure:
         const GHC.Int.I32#_con_info;
         const 102;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.16410468 UTC

[section ""data" . Foreign.C.Error.eNETRESET_closure" {
     Foreign.C.Error.eNETRESET_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNETRESET1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.165736318 UTC

[section ""data" . Foreign.C.Error.eNETDOWN1_closure" {
     Foreign.C.Error.eNETDOWN1_closure:
         const GHC.Int.I32#_con_info;
         const 100;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.167845665 UTC

[section ""data" . Foreign.C.Error.eNETDOWN_closure" {
     Foreign.C.Error.eNETDOWN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNETDOWN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.169505257 UTC

[section ""data" . Foreign.C.Error.eNAMETOOLONG1_closure" {
     Foreign.C.Error.eNAMETOOLONG1_closure:
         const GHC.Int.I32#_con_info;
         const 36;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.171050877 UTC

[section ""data" . Foreign.C.Error.eNAMETOOLONG_closure" {
     Foreign.C.Error.eNAMETOOLONG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNAMETOOLONG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.17268012 UTC

[section ""data" . Foreign.C.Error.eMULTIHOP1_closure" {
     Foreign.C.Error.eMULTIHOP1_closure:
         const GHC.Int.I32#_con_info;
         const 72;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.174839095 UTC

[section ""data" . Foreign.C.Error.eMULTIHOP_closure" {
     Foreign.C.Error.eMULTIHOP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMULTIHOP1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.17651714 UTC

[section ""data" . Foreign.C.Error.eMSGSIZE1_closure" {
     Foreign.C.Error.eMSGSIZE1_closure:
         const GHC.Int.I32#_con_info;
         const 90;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.17819499 UTC

[section ""data" . Foreign.C.Error.eMSGSIZE_closure" {
     Foreign.C.Error.eMSGSIZE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMSGSIZE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.179891492 UTC

[section ""data" . Foreign.C.Error.eMLINK1_closure" {
     Foreign.C.Error.eMLINK1_closure:
         const GHC.Int.I32#_con_info;
         const 31;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.181520281 UTC

[section ""data" . Foreign.C.Error.eMLINK_closure" {
     Foreign.C.Error.eMLINK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMLINK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.183211729 UTC

[section ""data" . Foreign.C.Error.eMFILE1_closure" {
     Foreign.C.Error.eMFILE1_closure:
         const GHC.Int.I32#_con_info;
         const 24;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.18488081 UTC

[section ""data" . Foreign.C.Error.eMFILE_closure" {
     Foreign.C.Error.eMFILE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMFILE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.18697399 UTC

[section ""data" . Foreign.C.Error.eLOOP1_closure" {
     Foreign.C.Error.eLOOP1_closure:
         const GHC.Int.I32#_con_info;
         const 40;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.188570512 UTC

[section ""data" . Foreign.C.Error.eLOOP_closure" {
     Foreign.C.Error.eLOOP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eLOOP1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.190248985 UTC

[section ""data" . Foreign.C.Error.eISDIR1_closure" {
     Foreign.C.Error.eISDIR1_closure:
         const GHC.Int.I32#_con_info;
         const 21;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.192389041 UTC

[section ""data" . Foreign.C.Error.eISDIR_closure" {
     Foreign.C.Error.eISDIR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eISDIR1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.194045496 UTC

[section ""data" . Foreign.C.Error.eISCONN1_closure" {
     Foreign.C.Error.eISCONN1_closure:
         const GHC.Int.I32#_con_info;
         const 106;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.195617189 UTC

[section ""data" . Foreign.C.Error.eISCONN_closure" {
     Foreign.C.Error.eISCONN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eISCONN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.197319624 UTC

[section ""data" . Foreign.C.Error.eIO1_closure" {
     Foreign.C.Error.eIO1_closure:
         const GHC.Int.I32#_con_info;
         const 5;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.198888801 UTC

[section ""data" . Foreign.C.Error.eIO_closure" {
     Foreign.C.Error.eIO_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eIO1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.200472294 UTC

[section ""data" . Foreign.C.Error.eINVAL1_closure" {
     Foreign.C.Error.eINVAL1_closure:
         const GHC.Int.I32#_con_info;
         const 22;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.202467388 UTC

[section ""data" . Foreign.C.Error.eINVAL_closure" {
     Foreign.C.Error.eINVAL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eINVAL1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.204131004 UTC

[section ""data" . Foreign.C.Error.eINTR1_closure" {
     Foreign.C.Error.eINTR1_closure:
         const GHC.Int.I32#_con_info;
         const 4;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.205797329 UTC

[section ""data" . Foreign.C.Error.eINTR_closure" {
     Foreign.C.Error.eINTR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eINTR1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.207458188 UTC

[section ""data" . Foreign.C.Error.eINPROGRESS1_closure" {
     Foreign.C.Error.eINPROGRESS1_closure:
         const GHC.Int.I32#_con_info;
         const 115;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.209143741 UTC

[section ""data" . Foreign.C.Error.eINPROGRESS_closure" {
     Foreign.C.Error.eINPROGRESS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eINPROGRESS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.210804948 UTC

[section ""data" . Foreign.C.Error.eILSEQ1_closure" {
     Foreign.C.Error.eILSEQ1_closure:
         const GHC.Int.I32#_con_info;
         const 84;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.21250371 UTC

[section ""data" . Foreign.C.Error.eILSEQ_closure" {
     Foreign.C.Error.eILSEQ_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eILSEQ1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.214694459 UTC

[section ""data" . Foreign.C.Error.eIDRM1_closure" {
     Foreign.C.Error.eIDRM1_closure:
         const GHC.Int.I32#_con_info;
         const 43;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.216811902 UTC

[section ""data" . Foreign.C.Error.eIDRM_closure" {
     Foreign.C.Error.eIDRM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eIDRM1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.218468197 UTC

[section ""data" . Foreign.C.Error.eHOSTUNREACH1_closure" {
     Foreign.C.Error.eHOSTUNREACH1_closure:
         const GHC.Int.I32#_con_info;
         const 113;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.220136613 UTC

[section ""data" . Foreign.C.Error.eHOSTUNREACH_closure" {
     Foreign.C.Error.eHOSTUNREACH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eHOSTUNREACH1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.221826264 UTC

[section ""data" . Foreign.C.Error.eHOSTDOWN1_closure" {
     Foreign.C.Error.eHOSTDOWN1_closure:
         const GHC.Int.I32#_con_info;
         const 112;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.223386794 UTC

[section ""data" . Foreign.C.Error.eHOSTDOWN_closure" {
     Foreign.C.Error.eHOSTDOWN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eHOSTDOWN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.225040934 UTC

[section ""data" . Foreign.C.Error.eFTYPE_closure" {
     Foreign.C.Error.eFTYPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.226747006 UTC

[section ""data" . Foreign.C.Error.eFBIG1_closure" {
     Foreign.C.Error.eFBIG1_closure:
         const GHC.Int.I32#_con_info;
         const 27;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.228468337 UTC

[section ""data" . Foreign.C.Error.eFBIG_closure" {
     Foreign.C.Error.eFBIG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eFBIG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.230590702 UTC

[section ""data" . Foreign.C.Error.eFAULT1_closure" {
     Foreign.C.Error.eFAULT1_closure:
         const GHC.Int.I32#_con_info;
         const 14;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.232202974 UTC

[section ""data" . Foreign.C.Error.eFAULT_closure" {
     Foreign.C.Error.eFAULT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eFAULT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.233955358 UTC

[section ""data" . Foreign.C.Error.eEXIST1_closure" {
     Foreign.C.Error.eEXIST1_closure:
         const GHC.Int.I32#_con_info;
         const 17;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.235596003 UTC

[section ""data" . Foreign.C.Error.eEXIST_closure" {
     Foreign.C.Error.eEXIST_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eEXIST1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.237280272 UTC

[section ""data" . Foreign.C.Error.eDQUOT1_closure" {
     Foreign.C.Error.eDQUOT1_closure:
         const GHC.Int.I32#_con_info;
         const 122;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.23886189 UTC

[section ""data" . Foreign.C.Error.eDQUOT_closure" {
     Foreign.C.Error.eDQUOT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDQUOT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.240476926 UTC

[section ""data" . Foreign.C.Error.eDOM1_closure" {
     Foreign.C.Error.eDOM1_closure:
         const GHC.Int.I32#_con_info;
         const 33;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.242588295 UTC

[section ""data" . Foreign.C.Error.eDOM_closure" {
     Foreign.C.Error.eDOM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDOM1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.244157658 UTC

[section ""data" . Foreign.C.Error.eDIRTY_closure" {
     Foreign.C.Error.eDIRTY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.24628634 UTC

[section ""data" . Foreign.C.Error.eDESTADDRREQ1_closure" {
     Foreign.C.Error.eDESTADDRREQ1_closure:
         const GHC.Int.I32#_con_info;
         const 89;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.247905962 UTC

[section ""data" . Foreign.C.Error.eDESTADDRREQ_closure" {
     Foreign.C.Error.eDESTADDRREQ_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDESTADDRREQ1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.249571069 UTC

[section ""data" . Foreign.C.Error.eDEADLK1_closure" {
     Foreign.C.Error.eDEADLK1_closure:
         const GHC.Int.I32#_con_info;
         const 35;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.251204801 UTC

[section ""data" . Foreign.C.Error.eDEADLK_closure" {
     Foreign.C.Error.eDEADLK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDEADLK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.252849136 UTC

[section ""data" . Foreign.C.Error.eCONNRESET1_closure" {
     Foreign.C.Error.eCONNRESET1_closure:
         const GHC.Int.I32#_con_info;
         const 104;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.254464246 UTC

[section ""data" . Foreign.C.Error.eCONNRESET_closure" {
     Foreign.C.Error.eCONNRESET_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCONNRESET1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.256079566 UTC

[section ""data" . Foreign.C.Error.eCONNREFUSED1_closure" {
     Foreign.C.Error.eCONNREFUSED1_closure:
         const GHC.Int.I32#_con_info;
         const 111;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.257733141 UTC

[section ""data" . Foreign.C.Error.eCONNREFUSED_closure" {
     Foreign.C.Error.eCONNREFUSED_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCONNREFUSED1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.259403405 UTC

[section ""data" . Foreign.C.Error.eCONNABORTED1_closure" {
     Foreign.C.Error.eCONNABORTED1_closure:
         const GHC.Int.I32#_con_info;
         const 103;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.261068691 UTC

[section ""data" . Foreign.C.Error.eCONNABORTED_closure" {
     Foreign.C.Error.eCONNABORTED_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCONNABORTED1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.263225808 UTC

[section ""data" . Foreign.C.Error.eCOMM1_closure" {
     Foreign.C.Error.eCOMM1_closure:
         const GHC.Int.I32#_con_info;
         const 70;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.264805519 UTC

[section ""data" . Foreign.C.Error.eCOMM_closure" {
     Foreign.C.Error.eCOMM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCOMM1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.267095148 UTC

[section ""data" . Foreign.C.Error.eCHILD1_closure" {
     Foreign.C.Error.eCHILD1_closure:
         const GHC.Int.I32#_con_info;
         const 10;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.268774594 UTC

[section ""data" . Foreign.C.Error.eCHILD_closure" {
     Foreign.C.Error.eCHILD_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCHILD1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.270399032 UTC

[section ""data" . Foreign.C.Error.eBUSY1_closure" {
     Foreign.C.Error.eBUSY1_closure:
         const GHC.Int.I32#_con_info;
         const 16;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.27198677 UTC

[section ""data" . Foreign.C.Error.eBUSY_closure" {
     Foreign.C.Error.eBUSY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBUSY1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.274202823 UTC

[section ""data" . Foreign.C.Error.eBADRPC_closure" {
     Foreign.C.Error.eBADRPC_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.275910848 UTC

[section ""data" . Foreign.C.Error.eBADMSG1_closure" {
     Foreign.C.Error.eBADMSG1_closure:
         const GHC.Int.I32#_con_info;
         const 74;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.277612598 UTC

[section ""data" . Foreign.C.Error.eBADMSG_closure" {
     Foreign.C.Error.eBADMSG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADMSG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.279353124 UTC

[section ""data" . Foreign.C.Error.eBADF1_closure" {
     Foreign.C.Error.eBADF1_closure:
         const GHC.Int.I32#_con_info;
         const 9;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.280973918 UTC

[section ""data" . Foreign.C.Error.eBADF_closure" {
     Foreign.C.Error.eBADF_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADF1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.282791975 UTC

[section ""data" . Foreign.C.Error.eALREADY1_closure" {
     Foreign.C.Error.eALREADY1_closure:
         const GHC.Int.I32#_con_info;
         const 114;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.284421061 UTC

[section ""data" . Foreign.C.Error.eALREADY_closure" {
     Foreign.C.Error.eALREADY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eALREADY1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.286514246 UTC

[section ""data" . Foreign.C.Error.eAGAIN_closure" {
     Foreign.C.Error.eAGAIN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eAGAIN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.288117444 UTC

[section ""data" . Foreign.C.Error.eAFNOSUPPORT1_closure" {
     Foreign.C.Error.eAFNOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 97;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.289817682 UTC

[section ""data" . Foreign.C.Error.eAFNOSUPPORT_closure" {
     Foreign.C.Error.eAFNOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eAFNOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.292048016 UTC

[section ""data" . Foreign.C.Error.eADV1_closure" {
     Foreign.C.Error.eADV1_closure:
         const GHC.Int.I32#_con_info;
         const 68;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.293746284 UTC

[section ""data" . Foreign.C.Error.eADV_closure" {
     Foreign.C.Error.eADV_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eADV1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.295442894 UTC

[section ""data" . Foreign.C.Error.eADDRNOTAVAIL1_closure" {
     Foreign.C.Error.eADDRNOTAVAIL1_closure:
         const GHC.Int.I32#_con_info;
         const 99;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.297149064 UTC

[section ""data" . Foreign.C.Error.eADDRNOTAVAIL_closure" {
     Foreign.C.Error.eADDRNOTAVAIL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eADDRNOTAVAIL1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.299135161 UTC

[section ""data" . Foreign.C.Error.eADDRINUSE1_closure" {
     Foreign.C.Error.eADDRINUSE1_closure:
         const GHC.Int.I32#_con_info;
         const 98;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.300703949 UTC

[section ""data" . Foreign.C.Error.eADDRINUSE_closure" {
     Foreign.C.Error.eADDRINUSE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eADDRINUSE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.302397274 UTC

[section ""data" . Foreign.C.Error.eACCES1_closure" {
     Foreign.C.Error.eACCES1_closure:
         const GHC.Int.I32#_con_info;
         const 13;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.304018894 UTC

[section ""data" . Foreign.C.Error.eACCES_closure" {
     Foreign.C.Error.eACCES_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eACCES1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.305802369 UTC

[section ""data" . Foreign.C.Error.e2BIG1_closure" {
     Foreign.C.Error.e2BIG1_closure:
         const GHC.Int.I32#_con_info;
         const 7;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.307388169 UTC

[section ""data" . Foreign.C.Error.e2BIG_closure" {
     Foreign.C.Error.e2BIG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.e2BIG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.309095346 UTC

[section ""data" . Foreign.C.Error.eOK1_closure" {
     Foreign.C.Error.eOK1_closure:
         const GHC.Int.I32#_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.311065997 UTC

[section ""data" . Foreign.C.Error.eOK_closure" {
     Foreign.C.Error.eOK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eOK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.314546917 UTC

[section ""data" . Foreign.C.Error.$werrnoToIOError_closure" {
     Foreign.C.Error.$werrnoToIOError_closure:
         const Foreign.C.Error.$werrnoToIOError_info;
         const 0;
 },
 Foreign.C.Error.$werrnoToIOError_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Ei: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2,
                                                       R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s92U7_entry() //  [R1]
         { info_tbl: [(c93G0,
                       label: sat_s92U7_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93G0: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c93G1; else goto c93G2;
       c93G1: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93G2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s92U6::I64 = I64[R1 + 16];
           if (%MO_S_Lt_W64(_s92U6::I64, 60)) goto u93G3; else goto u93G6;
       u93G3: // global
           if (%MO_S_Ge_W64(_s92U6::I64, 44)) goto c93EC; else goto u93G4;
       u93G4: // global
           if (%MO_S_Lt_W64(_s92U6::I64, 1)) goto c93EC; else goto u93G5;
       u93G5: // global
           switch [1 .. 43] _s92U6::I64 {
               case 1 : goto c93FZ;
               case 2, 3 : goto c93FV;
               case 4 : goto c93EG;
               case 5 : goto c93EH;
               case 6 : goto c93FV;
               case 7 : goto c93FR;
               case 8, 9 : goto c93FP;
               case 10 : goto c93FV;
               case 11, 12 : goto c93FR;
               case 13 : goto c93FZ;
               case 15 : goto c93FP;
               case 16 : goto c93FH;
               case 17 : goto c93FX;
               case 18, 19 : goto c93FI;
               case 20, 21 : goto c93Ft;
               case 22 : goto c93FP;
               case 23, 24 : goto c93FR;
               case 25 : goto c93FQ;
               case 26 : goto c93FH;
               case 27 : goto c93FZ;
               case 28 : goto c93FR;
               case 29 : goto c93FI;
               case 30 : goto c93FZ;
               case 31 : goto c93FR;
               case 32 : goto c93FY;
               case 33 : goto c93FP;
               case 34 : goto c93FI;
               case 35 : goto c93FH;
               case 36 : goto c93FP;
               case 37 : goto c93FR;
               case 38 : goto c93FI;
               case 39 : goto c93Fp;
               case 40 : goto c93FP;
               case 42 : goto c93FV;
               case 43 : goto c93FY;
               default: {goto c93EC;}
           }
       c93EH: // global
           R1 = GHC.IO.Exception.HardwareFault_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93EG: // global
           R1 = GHC.IO.Exception.Interrupted_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       u93G6: // global
           if (%MO_S_Ge_W64(_s92U6::I64, 123)) goto c93EC; else goto u93G7;
       u93G7: // global
           switch [60 .. 122] _s92U6::I64 {
               case 60 : goto c93FP;
               case 61 : goto c93FV;
               case 62 : goto c93FS;
               case 63 : goto c93FR;
               case 64 : goto c93FV;
               case 66 : goto c93FQ;
               case 67 : goto c93FY;
               case 69 : goto c93Fp;
               case 70 : goto c93FY;
               case 71 : goto c93FC;
               case 72 : goto c93FI;
               case 74 : goto c93Ft;
               case 78 : goto c93FY;
               case 84 : goto c93FP;
               case 87 : goto c93FR;
               case 88, 89 : goto c93FP;
               case 90 : goto c93FR;
               case 91 : goto c93FC;
               case 92 : goto c93FI;
               case 93 : goto c93FC;
               case 94, 95, 96, 97 : goto c93FI;
               case 98 : goto c93FH;
               case 99 : goto c93FI;
               case 100 : goto c93FY;
               case 101 : goto c93FV;
               case 102, 104 : goto c93FY;
               case 105 : goto c93FR;
               case 106 : goto c93FX;
               case 107 : goto c93FP;
               case 108 : goto c93FQ;
               case 109 : goto c93FR;
               case 110 : goto c93FS;
               case 111, 112, 113 : goto c93FV;
               case 114, 115 : goto c93FX;
               case 116 : goto c93FY;
               case 122 : goto c93FZ;
               default: {goto c93EC;}
           }
       c93FZ: // global
           R1 = GHC.IO.Exception.PermissionDenied_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93FX: // global
           R1 = GHC.IO.Exception.AlreadyExists_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93FH: // global
           R1 = GHC.IO.Exception.ResourceBusy_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93Ft: // global
           R1 = GHC.IO.Exception.InappropriateType_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93FI: // global
           R1 = GHC.IO.Exception.UnsupportedOperation_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93FC: // global
           R1 = GHC.IO.Exception.ProtocolError_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93Fp: // global
           R1 = GHC.IO.Exception.UnsatisfiedConstraints_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93FY: // global
           R1 = GHC.IO.Exception.ResourceVanished_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93FQ: // global
           R1 = GHC.IO.Exception.IllegalOperation_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93FR: // global
           R1 = GHC.IO.Exception.ResourceExhausted_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93FS: // global
           R1 = GHC.IO.Exception.TimeExpired_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93FV: // global
           R1 = GHC.IO.Exception.NoSuchThing_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93FP: // global
           R1 = GHC.IO.Exception.InvalidArgument_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c93EC: // global
           R1 = GHC.IO.Exception.OtherError_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 Foreign.C.Error.$werrnoToIOError_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c93Gc,
                       label: Foreign.C.Error.$werrnoToIOError_info
                       rep:HeapRep static {
                             Fun {arity: 4 fun_type: ArgGen [False, True, False, False]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Gc: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c93Gd; else goto c93Ge;
       c93Gd: // global
           R1 = Foreign.C.Error.$werrnoToIOError_closure;
           P64[Sp - 32] = R2;
           I64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           call (stg_gc_fun)(R1) args: 40, res: 0, upd: 8;
       c93Ge: // global
           I64[Sp - 40] = block_c93Em_info;
           P64[Sp - 32] = R2;
           I64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 40;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 _c93Em() //  []
         { info_tbl: [(c93Em,
                       label: block_c93Em_info
                       rep:StackRep [False, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Em: // global
           (_s92TZ::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [PtrHint] strerror(I64[Sp + 16]);
           I64[Sp - 8] = block_c93Eq_info;
           R1 = GHC.IO.Encoding.getForeignEncoding_closure;
           I64[Sp] = _s92TZ::I64;
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93Eq() //  [R1]
         { info_tbl: [(c93Eq,
                       label: block_c93Eq_info
                       rep:StackRep [True, False, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Eq: // global
           _s92TZ::I64 = I64[Sp + 8];
           I64[Sp + 8] = block_c93Es_info;
           R3 = _s92TZ::I64;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Foreign.$wpeekCString_entry(R3,
                                                R2) args: 8, res: 8, upd: 8;
     }
 },
 _c93Es() //  [R1]
         { info_tbl: [(c93Es,
                       label: block_c93Es_info
                       rep:StackRep [False, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Es: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto c93Gj; else goto c93Gi;
       c93Gj: // global
           HpAlloc = 112;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c93Gi: // global
           I64[Hp - 104] = GHC.Int.I32#_con_info;
           _s92TS::I64 = I64[Sp + 16];
           I64[Hp - 96] = _s92TS::I64;
           I64[Hp - 88] = GHC.Base.Just_con_info;
           P64[Hp - 80] = Hp - 103;
           I64[Hp - 72] = sat_s92U7_info;
           I64[Hp - 56] = _s92TS::I64;
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = P64[Sp + 24];
           P64[Hp - 32] = Hp - 72;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = R1;
           P64[Hp - 8] = Hp - 86;
           P64[Hp] = P64[Sp + 32];
           R1 = (Hp + -47) & (-8);
           Sp = Sp + 40;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.331855582 UTC

[section ""data" . Foreign.C.Error.errnoToIOError_closure" {
     Foreign.C.Error.errnoToIOError_closure:
         const Foreign.C.Error.errnoToIOError_info;
         const 0;
 },
 Foreign.C.Error.errnoToIOError_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c93Hd,
                       label: Foreign.C.Error.errnoToIOError_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Hd: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93He; else goto c93Hf;
       c93He: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.errnoToIOError_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93Hf: // global
           I64[Sp - 32] = block_c93Ha_info;
           R1 = R3;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u93Hj; else goto c93Hb;
       u93Hj: // global
           call _c93Ha(R1) args: 0, res: 0, upd: 0;
       c93Hb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93Ha() //  [R1]
         { info_tbl: [(c93Ha,
                       label: block_c93Ha_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Ha: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 32;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.337790459 UTC

[section ""data" . Foreign.C.Error.$wlvl_closure" {
     Foreign.C.Error.$wlvl_closure:
         const Foreign.C.Error.$wlvl_info;
         const 0;
 },
 sat_s92Un_entry() //  [R1]
         { info_tbl: [(c93HF,
                       label: sat_s92Un_info
                       rep:HeapRep 1 ptrs 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93HF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c93HG; else goto c93HH;
       c93HG: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93HH: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R5 = GHC.Base.Nothing_closure+1;
           R4 = GHC.Base.Nothing_closure+1;
           R3 = I64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s92Uo_entry() //  [R1]
         { info_tbl: [(c93HI,
                       label: sat_s92Uo_info
                       rep:HeapRep 1 ptrs 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93HI: // global
           _s92Uo::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c93HJ; else goto c93HK;
       c93HK: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c93HM; else goto c93HL;
       c93HM: // global
           HpAlloc = 32;
           goto c93HJ;
       c93HJ: // global
           R1 = _s92Uo::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93HL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92Uo::P64;
           _s92Uk::P64 = P64[_s92Uo::P64 + 16];
           _s92Ul::I64 = I64[_s92Uo::P64 + 24];
           I64[Hp - 24] = sat_s92Un_info;
           P64[Hp - 8] = _s92Uk::P64;
           I64[Hp] = _s92Ul::I64;
           R2 = Hp - 24;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 Foreign.C.Error.$wlvl_entry() //  [R2, R3]
         { info_tbl: [(c93HN,
                       label: Foreign.C.Error.$wlvl_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93HN: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c93HR; else goto c93HQ;
       c93HR: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$wlvl_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93HQ: // global
           I64[Hp - 24] = sat_s92Uo_info;
           P64[Hp - 8] = R2;
           I64[Hp] = R3;
           R1 = Hp - 24;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.345552229 UTC

[section ""data" . Foreign.C.Error.throwErrno1_closure" {
     Foreign.C.Error.throwErrno1_closure:
         const Foreign.C.Error.throwErrno1_info;
         const 0;
 },
 Foreign.C.Error.throwErrno1_entry() //  [R2]
         { info_tbl: [(c93Ib,
                       label: Foreign.C.Error.throwErrno1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Ib: // global
           (_s92Uu::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92Uu::I64));
           R2 = R2;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.348945303 UTC

[section ""data" . Foreign.C.Error.throwErrno_closure" {
     Foreign.C.Error.throwErrno_closure:
         const Foreign.C.Error.throwErrno_info;
         const 0;
 },
 Foreign.C.Error.throwErrno_entry() //  [R2]
         { info_tbl: [(c93Im,
                       label: Foreign.C.Error.throwErrno_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Im: // global
           R2 = R2;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.355703046 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf1_closure" {
     Foreign.C.Error.throwErrnoIf1_closure:
         const Foreign.C.Error.throwErrnoIf1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf1_entry() //  [R2, R3, R4]
         { info_tbl: [(c93IF,
                       label: Foreign.C.Error.throwErrnoIf1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93IF: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93IG; else goto c93IH;
       c93IG: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIf1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93IH: // global
           I64[Sp - 24] = block_c93Ix_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93Ix() //  [R1]
         { info_tbl: [(c93Ix,
                       label: block_c93Ix_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Ix: // global
           I64[Sp] = block_c93Iz_info;
           R2 = R1;
           _s92UC::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s92UC::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93Iz() //  [R1]
         { info_tbl: [(c93Iz,
                       label: block_c93Iz_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Iz: // global
           if (R1 & 7 == 1) goto c93IC; else goto c93ID;
       c93IC: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93ID: // global
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.364952013 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf_closure" {
     Foreign.C.Error.throwErrnoIf_closure:
         const Foreign.C.Error.throwErrnoIf_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf_entry() //  [R2, R3, R4]
         { info_tbl: [(c93J7,
                       label: Foreign.C.Error.throwErrnoIf_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93J7: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIf1_entry(R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.369644357 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf_1_closure" {
     Foreign.C.Error.throwErrnoIf_1_closure:
         const Foreign.C.Error.throwErrnoIf_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf_1_entry() //  [R2, R3, R4]
         { info_tbl: [(c93Jq,
                       label: Foreign.C.Error.throwErrnoIf_1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Jq: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93Jr; else goto c93Js;
       c93Jr: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIf_1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93Js: // global
           I64[Sp - 24] = block_c93Ji_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93Ji() //  [R1]
         { info_tbl: [(c93Ji,
                       label: block_c93Ji_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Ji: // global
           _s92UE::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c93Jk_info;
           R2 = R1;
           R1 = _s92UE::P64;
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93Jk() //  [R1]
         { info_tbl: [(c93Jk,
                       label: block_c93Jk_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Jk: // global
           if (R1 & 7 == 1) goto c93Jn; else goto c93Jo;
       c93Jn: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93Jo: // global
           _s92UF::P64 = P64[Sp + 8];
           (_s92UP::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92UP::I64));
           R2 = _s92UF::P64;
           Sp = Sp + 16;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.377585931 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf__closure" {
     Foreign.C.Error.throwErrnoIf__closure:
         const Foreign.C.Error.throwErrnoIf__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf__entry() //  [R2, R3, R4]
         { info_tbl: [(c93JU,
                       label: Foreign.C.Error.throwErrnoIf__info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93JU: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIf_1_entry(R4,
                                                     R3,
                                                     R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.381729365 UTC

[section ""data" . sat_s92US_closure" {
     sat_s92US_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.383688279 UTC

[section ""data" . sat_s92UT_closure" {
     sat_s92UT_closure:
         const :_con_info;
         const sat_s92US_closure+1;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.38590675 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus2_closure" {
     Foreign.C.Error.throwErrnoIfMinus2_closure:
         const Foreign.C.Error.throwErrnoIfMinus2_info;
         const 0;
         const 0;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus2_entry() //  [R1]
         { info_tbl: [(c93K9,
                       label: Foreign.C.Error.throwErrnoIfMinus2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93K9: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c93Ka; else goto c93Kb;
       c93Ka: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Kb: // global
           (_c93K6::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c93K6::I64 == 0) goto c93K8; else goto c93K7;
       c93K8: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c93K7: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c93K6::I64;
           R3 = sat_s92UT_closure+2;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.391568778 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1__closure" {
     Foreign.C.Error.throwErrnoIfMinus1__closure:
         const Foreign.C.Error.throwErrnoIfMinus1__info;
         const 0;
 },
 sat_s92UX_entry() //  [R1]
         { info_tbl: [(c93Kv,
                       label: sat_s92UX_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Kv: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93Kw; else goto c93Kx;
       c93Kw: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Kx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92UW_entry() //  [R1]
         { info_tbl: [(c93Ky,
                       label: ds_s92UW_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Ky: // global
           _s92UW::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93Kz; else goto c93KA;
       c93KA: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93KC; else goto c93KB;
       c93KC: // global
           HpAlloc = 24;
           goto c93Kz;
       c93Kz: // global
           R1 = _s92UW::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93KB: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92UW::P64;
           _s92UV::P64 = P64[_s92UW::P64 + 16];
           I64[Hp - 16] = sat_s92UX_info;
           P64[Hp] = _s92UV::P64;
           R2 = _s92UV::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s92Vb_entry() //  [R1, R2, R3]
         { info_tbl: [(c93KQ,
                       label: sat_s92Vb_info
                       rep:HeapRep 2 ptrs { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93KQ: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c93KR; else goto c93KS;
       c93KR: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93KS: // global
           I64[Sp - 32] = block_c93KI_info;
           _s92UU::P64 = P64[R1 + 5];
           _s92UW::P64 = P64[R1 + 13];
           R1 = R3;
           P64[Sp - 24] = _s92UU::P64;
           P64[Sp - 16] = _s92UW::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93KI() //  [R1]
         { info_tbl: [(c93KI,
                       label: block_c93KI_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93KI: // global
           _s92UW::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c93KK_info;
           R2 = P64[Sp + 8];
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = R1;
           P64[Sp + 8] = _s92UW::P64;
           Sp = Sp - 8;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 _c93KK() //  [R1]
         { info_tbl: [(c93KK,
                       label: block_c93KK_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93KK: // global
           if (R1 & 7 == 1) goto c93KN; else goto c93KO;
       c93KN: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93KO: // global
           _s92UY::P64 = P64[Sp + 8];
           (_s92V8::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92V8::I64));
           R2 = _s92UY::P64;
           Sp = Sp + 16;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1__entry() //  [R2, R3]
         { info_tbl: [(c93L2,
                       label: Foreign.C.Error.throwErrnoIfMinus1__info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93L2: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c93L6; else goto c93L5;
       c93L6: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93L5: // global
           I64[Hp - 40] = ds_s92UW_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92Vb_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 13;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.40684932 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1_closure" {
     Foreign.C.Error.throwErrnoIfMinus1_closure:
         const Foreign.C.Error.throwErrnoIfMinus1_info;
         const 0;
 },
 sat_s92Vf_entry() //  [R1]
         { info_tbl: [(c93LL,
                       label: sat_s92Vf_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93LL: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93LM; else goto c93LN;
       c93LM: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93LN: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92Ve_entry() //  [R1]
         { info_tbl: [(c93LO,
                       label: ds_s92Ve_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93LO: // global
           _s92Ve::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93LP; else goto c93LQ;
       c93LQ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93LS; else goto c93LR;
       c93LS: // global
           HpAlloc = 24;
           goto c93LP;
       c93LP: // global
           R1 = _s92Ve::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93LR: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92Ve::P64;
           _s92Vd::P64 = P64[_s92Ve::P64 + 16];
           I64[Hp - 16] = sat_s92Vf_info;
           P64[Hp] = _s92Vd::P64;
           R2 = _s92Vd::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s92Vn_entry() //  [R1, R2, R3]
         { info_tbl: [(c93M6,
                       label: sat_s92Vn_info
                       rep:HeapRep 2 ptrs { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93M6: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c93M7; else goto c93M8;
       c93M7: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93M8: // global
           I64[Sp - 32] = block_c93LY_info;
           _s92Vc::P64 = P64[R1 + 5];
           _s92Ve::P64 = P64[R1 + 13];
           R1 = R3;
           P64[Sp - 24] = _s92Vc::P64;
           P64[Sp - 16] = _s92Ve::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93LY() //  [R1]
         { info_tbl: [(c93LY,
                       label: block_c93LY_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93LY: // global
           _s92Vc::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c93M0_info;
           R2 = _s92Vc::P64;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = R1;
           P64[Sp] = P64[Sp + 16];
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 _c93M0() //  [R1]
         { info_tbl: [(c93M0,
                       label: block_c93M0_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93M0: // global
           if (R1 & 7 == 1) goto c93M3; else goto c93M4;
       c93M3: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93M4: // global
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1_entry() //  [R2, R3]
         { info_tbl: [(c93Mg,
                       label: Foreign.C.Error.throwErrnoIfMinus1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Mg: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c93Mk; else goto c93Mj;
       c93Mk: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93Mj: // global
           I64[Hp - 40] = ds_s92Ve_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92Vn_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 13;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.42018829 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNull1_closure" {
     Foreign.C.Error.throwErrnoIfNull1_closure:
         const Foreign.C.Error.throwErrnoIfNull1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNull1_entry() //  [R2, R3]
         { info_tbl: [(c93MX,
                       label: Foreign.C.Error.throwErrnoIfNull1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93MX: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93MY; else goto c93MZ;
       c93MY: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfNull1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93MZ: // global
           I64[Sp - 16] = block_c93MS_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93MS() //  [R1]
         { info_tbl: [(c93MS,
                       label: block_c93MS_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93MS: // global
           I64[Sp - 8] = block_c93MU_info;
           _s92Vt::P64 = R1;
           R1 = R1;
           P64[Sp] = _s92Vt::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u93N9; else goto c93MV;
       u93N9: // global
           call _c93MU(R1) args: 0, res: 0, upd: 0;
       c93MV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93MU() //  [R1]
         { info_tbl: [(c93MU,
                       label: block_c93MU_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93MU: // global
           if (I64[R1 + 7] == 0) goto c93N8; else goto c93N7;
       c93N8: // global
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
       c93N7: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.427173801 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNull_closure" {
     Foreign.C.Error.throwErrnoIfNull_closure:
         const Foreign.C.Error.throwErrnoIfNull_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNull_entry() //  [R2, R3]
         { info_tbl: [(c93Nr,
                       label: Foreign.C.Error.throwErrnoIfNull_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Nr: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfNull1_entry(R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.430979564 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry2_closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry2_closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry2_entry() //  [R2, R3, R4]
         { info_tbl: [(c93NK,
                       label: Foreign.C.Error.throwErrnoIfMinus1Retry2_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93NK: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c93NL; else goto u93Oa;
       c93NL: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u93Oa: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c93Nz() args: 0, res: 0, upd: 0;
     }
 },
 _c93Nz() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Nz: // global
           I64[Sp - 8] = block_c93NC_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93NC() //  [R1]
         { info_tbl: [(c93NC,
                       label: block_c93NC_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93NC: // global
           I64[Sp - 8] = block_c93NE_info;
           R2 = R1;
           _s92VD::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp] = _s92VD::P64;
           Sp = Sp - 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93NE() //  [R1]
         { info_tbl: [(c93NE,
                       label: block_c93NE_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93NE: // global
           if (R1 & 7 == 1) goto c93NH; else goto c93NI;
       c93NH: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93NI: // global
           _s92Vx::P64 = P64[Sp + 16];
           _s92Vy::P64 = P64[Sp + 24];
           _s92Vz::P64 = P64[Sp + 32];
           (_s92VI::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           if (%MO_SS_Conv_W64_W32(_s92VI::I64) == 4 :: W32) goto c93O6; else goto c93O0;
       c93O6: // global
           P64[Sp + 16] = _s92Vx::P64;
           P64[Sp + 24] = _s92Vy::P64;
           P64[Sp + 32] = _s92Vz::P64;
           Sp = Sp + 16;
           call _c93Nz() args: 0, res: 0, upd: 0;
       c93O0: // global
           R2 = _s92Vy::P64;
           Sp = Sp + 40;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.439706407 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetry_closure" {
     Foreign.C.Error.throwErrnoIfRetry_closure:
         const Foreign.C.Error.throwErrnoIfRetry_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetry_entry() //  [R2, R3, R4]
         { info_tbl: [(c93Oy,
                       label: Foreign.C.Error.throwErrnoIfRetry_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Oy: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.443965276 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetry_1_closure" {
     Foreign.C.Error.throwErrnoIfRetry_1_closure:
         const Foreign.C.Error.throwErrnoIfRetry_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetry_1_entry() //  [R2, R3, R4]
         { info_tbl: [(c93OL,
                       label: Foreign.C.Error.throwErrnoIfRetry_1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93OL: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c93OM; else goto c93ON;
       c93OM: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfRetry_1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93ON: // global
           I64[Sp - 8] = block_c93OJ_info;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c93OJ() //  []
         { info_tbl: [(c93OJ,
                       label: block_c93OJ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93OJ: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.449062692 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetry__closure" {
     Foreign.C.Error.throwErrnoIfRetry__closure:
         const Foreign.C.Error.throwErrnoIfRetry__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetry__entry() //  [R2, R3, R4]
         { info_tbl: [(c93P2,
                       label: Foreign.C.Error.throwErrnoIfRetry__info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93P2: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfRetry_1_entry(R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.453105637 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry__closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry__closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry__info;
         const 0;
 },
 sat_s92VU_entry() //  [R1]
         { info_tbl: [(c93Pl,
                       label: sat_s92VU_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Pl: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93Pm; else goto c93Pn;
       c93Pm: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Pn: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92VT_entry() //  [R1]
         { info_tbl: [(c93Po,
                       label: ds_s92VT_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Po: // global
           _s92VT::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93Pp; else goto c93Pq;
       c93Pq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93Ps; else goto c93Pr;
       c93Ps: // global
           HpAlloc = 24;
           goto c93Pp;
       c93Pp: // global
           R1 = _s92VT::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Pr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92VT::P64;
           _s92VS::P64 = P64[_s92VT::P64 + 16];
           I64[Hp - 16] = sat_s92VU_info;
           P64[Hp] = _s92VS::P64;
           R2 = _s92VS::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 pred_s92VV_entry() //  [R1, R2]
         { info_tbl: [(c93Py,
                       label: pred_s92VV_info
                       rep:HeapRep 2 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Py: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93Pz; else goto c93PA;
       c93Pz: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c93PA: // global
           _s92VW::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s92VW::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 sat_s92W3_entry() //  [R1, R2, R3]
         { info_tbl: [(c93PI,
                       label: sat_s92W3_info
                       rep:HeapRep 1 ptrs { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93PI: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c93PJ; else goto c93PK;
       c93PJ: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93PK: // global
           I64[Sp - 8] = block_c93PG_info;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c93PG() //  []
         { info_tbl: [(c93PG,
                       label: block_c93PG_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93PG: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry__entry() //  [R2, R3]
         { info_tbl: [(c93PM,
                       label: Foreign.C.Error.throwErrnoIfMinus1Retry__info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93PM: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c93PQ; else goto c93PP;
       c93PQ: // global
           HpAlloc = 64;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93PP: // global
           I64[Hp - 56] = ds_s92VT_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = pred_s92VV_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = Hp - 56;
           I64[Hp - 8] = sat_s92W3_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 5;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.466846246 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry1_closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry1_closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry1_info;
         const 0;
 },
 sat_s92W7_entry() //  [R1]
         { info_tbl: [(c93Qw,
                       label: sat_s92W7_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Qw: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93Qx; else goto c93Qy;
       c93Qx: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Qy: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92W6_entry() //  [R1]
         { info_tbl: [(c93Qz,
                       label: ds_s92W6_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Qz: // global
           _s92W6::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93QA; else goto c93QB;
       c93QB: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93QD; else goto c93QC;
       c93QD: // global
           HpAlloc = 24;
           goto c93QA;
       c93QA: // global
           R1 = _s92W6::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93QC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92W6::P64;
           _s92W5::P64 = P64[_s92W6::P64 + 16];
           I64[Hp - 16] = sat_s92W7_info;
           P64[Hp] = _s92W5::P64;
           R2 = _s92W5::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s92W9_entry() //  [R1, R2]
         { info_tbl: [(c93QJ,
                       label: sat_s92W9_info
                       rep:HeapRep 2 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93QJ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93QK; else goto c93QL;
       c93QK: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c93QL: // global
           _s92W8::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s92W8::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry1_entry() //  [R2, R3]
         { info_tbl: [(c93QM,
                       label: Foreign.C.Error.throwErrnoIfMinus1Retry1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93QM: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c93QQ; else goto c93QP;
       c93QQ: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93QP: // global
           I64[Hp - 40] = ds_s92W6_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92W9_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R2 = Hp - 15;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry2_closure+4;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.476744513 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry_closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry_closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry_entry() //  [R2, R3]
         { info_tbl: [(c93Re,
                       label: Foreign.C.Error.throwErrnoIfMinus1Retry_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Re: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1Retry1_entry(R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.480769962 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetry2_closure" {
     Foreign.C.Error.throwErrnoIfNullRetry2_closure:
         const Foreign.C.Error.throwErrnoIfNullRetry2_info;
 },
 Foreign.C.Error.throwErrnoIfNullRetry2_entry() //  [R2]
         { info_tbl: [(c93Rs,
                       label: Foreign.C.Error.throwErrnoIfNullRetry2_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Rs: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c93Rt; else goto c93Ru;
       c93Rt: // global
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfNullRetry2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c93Ru: // global
           I64[Sp - 8] = block_c93Rp_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u93Rz; else goto c93Rq;
       u93Rz: // global
           call _c93Rp(R1) args: 0, res: 0, upd: 0;
       c93Rq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93Rp() //  [R1]
         { info_tbl: [(c93Rp,
                       label: block_c93Rp_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Rp: // global
           R1 = I64[((I64[R1 + 7] == 0) << 3) + GHC.Types.Bool_closure_tbl];
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.485946976 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetry1_closure" {
     Foreign.C.Error.throwErrnoIfNullRetry1_closure:
         const Foreign.C.Error.throwErrnoIfNullRetry1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetry1_entry() //  [R2, R3]
         { info_tbl: [(c93RQ,
                       label: Foreign.C.Error.throwErrnoIfNullRetry1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93RQ: // global
           R4 = R3;
           R3 = R2;
           R2 = Foreign.C.Error.throwErrnoIfNullRetry2_closure+1;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.489236044 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetry_closure" {
     Foreign.C.Error.throwErrnoIfNullRetry_closure:
         const Foreign.C.Error.throwErrnoIfNullRetry_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetry_entry() //  [R2, R3]
         { info_tbl: [(c93S1,
                       label: Foreign.C.Error.throwErrnoIfNullRetry_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93S1: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfNullRetry1_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.493058024 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry() //  [R2,
                                                               R3, R4, R5]
         { info_tbl: [(c93Sk,
                       label: Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Sk: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c93Sl; else goto u93SU;
       c93Sl: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u93SU: // global
           P64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           call _c93S9() args: 0, res: 0, upd: 0;
     }
 },
 _c93S9() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93S9: // global
           I64[Sp - 8] = block_c93Sc_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93Sc() //  [R1]
         { info_tbl: [(c93Sc,
                       label: block_c93Sc_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Sc: // global
           I64[Sp - 8] = block_c93Se_info;
           R2 = R1;
           _s92Wl::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp] = _s92Wl::P64;
           Sp = Sp - 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93Se() //  [R1]
         { info_tbl: [(c93Se,
                       label: block_c93Se_info
                       rep:StackRep [False, False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Se: // global
           if (R1 & 7 == 1) goto c93Sh; else goto c93Si;
       c93Sh: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93Si: // global
           _s92We::P64 = P64[Sp + 16];
           _s92Wf::P64 = P64[Sp + 24];
           _s92Wg::P64 = P64[Sp + 32];
           _s92Wh::P64 = P64[Sp + 40];
           (_s92Wq::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           _s92Wr::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92Wq::I64));
           if (_s92Wr::I64 != 4) goto u93ST; else goto c93SG;
       u93ST: // global
           if (_s92Wr::I64 != 11) goto c93SA; else goto c93SP;
       c93SA: // global
           R2 = _s92Wf::P64;
           Sp = Sp + 48;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
       c93SP: // global
           I64[Sp + 8] = block_c93SO_info;
           R1 = _s92Wh::P64;
           Sp = Sp + 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
       c93SG: // global
           P64[Sp + 16] = _s92We::P64;
           P64[Sp + 24] = _s92Wf::P64;
           P64[Sp + 32] = _s92Wg::P64;
           P64[Sp + 40] = _s92Wh::P64;
           Sp = Sp + 16;
           call _c93S9() args: 0, res: 0, upd: 0;
     }
 },
 _c93SO() //  []
         { info_tbl: [(c93SO,
                       label: block_c93SO_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93SO: // global
           P64[Sp + 8] = P64[Sp + 8];
           P64[Sp + 16] = P64[Sp + 16];
           P64[Sp + 24] = P64[Sp + 24];
           P64[Sp + 32] = P64[Sp + 32];
           Sp = Sp + 8;
           call _c93S9() args: 0, res: 0, upd: 0;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.503228019 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetryMayBlock_closure" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock_closure:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetryMayBlock_entry() //  [R2, R3, R4,
                                                        R5]
         { info_tbl: [(c93Tr,
                       label: Foreign.C.Error.throwErrnoIfRetryMayBlock_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Tr: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.507011902 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetryMayBlock_1_entry() //  [R2, R3,
                                                          R4, R5]
         { info_tbl: [(c93TE,
                       label: Foreign.C.Error.throwErrnoIfRetryMayBlock_1_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93TE: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c93TF; else goto c93TG;
       c93TF: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93TG: // global
           I64[Sp - 8] = block_c93TC_info;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c93TC() //  []
         { info_tbl: [(c93TC,
                       label: block_c93TC_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93TC: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.512794256 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetryMayBlock__closure" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock__closure:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetryMayBlock__entry() //  [R2, R3, R4,
                                                         R5]
         { info_tbl: [(c93TV,
                       label: Foreign.C.Error.throwErrnoIfRetryMayBlock__info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93TV: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfRetryMayBlock_1_entry(R5,
                                                                  R4,
                                                                  R3,
                                                                  R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.516819924 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__info;
         const 0;
 },
 sat_s92WG_entry() //  [R1]
         { info_tbl: [(c93Ue,
                       label: sat_s92WG_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Ue: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93Uf; else goto c93Ug;
       c93Uf: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Ug: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92WF_entry() //  [R1]
         { info_tbl: [(c93Uh,
                       label: ds_s92WF_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Uh: // global
           _s92WF::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93Ui; else goto c93Uj;
       c93Uj: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93Ul; else goto c93Uk;
       c93Ul: // global
           HpAlloc = 24;
           goto c93Ui;
       c93Ui: // global
           R1 = _s92WF::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Uk: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92WF::P64;
           _s92WE::P64 = P64[_s92WF::P64 + 16];
           I64[Hp - 16] = sat_s92WG_info;
           P64[Hp] = _s92WE::P64;
           R2 = _s92WE::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 pred_s92WH_entry() //  [R1, R2]
         { info_tbl: [(c93Ur,
                       label: pred_s92WH_info
                       rep:HeapRep 2 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Ur: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93Us; else goto c93Ut;
       c93Us: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c93Ut: // global
           _s92WI::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s92WI::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 sat_s92WQ_entry() //  [R1, R2, R3, R4]
         { info_tbl: [(c93UB,
                       label: sat_s92WQ_info
                       rep:HeapRep 1 ptrs { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93UB: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c93UC; else goto c93UD;
       c93UC: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93UD: // global
           I64[Sp - 8] = block_c93Uz_info;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 4];
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c93Uz() //  []
         { info_tbl: [(c93Uz,
                       label: block_c93Uz_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Uz: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__entry() //  [R2,
                                                               R3]
         { info_tbl: [(c93UF,
                       label: Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93UF: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c93UJ; else goto c93UI;
       c93UJ: // global
           HpAlloc = 64;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93UI: // global
           I64[Hp - 56] = ds_s92WF_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = pred_s92WH_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = Hp - 56;
           I64[Hp - 8] = sat_s92WQ_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 4;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.531024539 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_info;
         const 0;
 },
 sat_s92WU_entry() //  [R1]
         { info_tbl: [(c93Vp,
                       label: sat_s92WU_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Vp: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93Vq; else goto c93Vr;
       c93Vq: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Vr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92WT_entry() //  [R1]
         { info_tbl: [(c93Vs,
                       label: ds_s92WT_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Vs: // global
           _s92WT::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93Vt; else goto c93Vu;
       c93Vu: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93Vw; else goto c93Vv;
       c93Vw: // global
           HpAlloc = 24;
           goto c93Vt;
       c93Vt: // global
           R1 = _s92WT::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Vv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92WT::P64;
           _s92WS::P64 = P64[_s92WT::P64 + 16];
           I64[Hp - 16] = sat_s92WU_info;
           P64[Hp] = _s92WS::P64;
           R2 = _s92WS::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s92WW_entry() //  [R1, R2]
         { info_tbl: [(c93VC,
                       label: sat_s92WW_info
                       rep:HeapRep 2 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93VC: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c93VD; else goto c93VE;
       c93VD: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c93VE: // global
           _s92WV::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s92WV::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_entry() //  [R2,
                                                               R3]
         { info_tbl: [(c93VF,
                       label: Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93VF: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c93VJ; else goto c93VI;
       c93VJ: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93VI: // global
           I64[Hp - 40] = ds_s92WT_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92WW_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R2 = Hp - 15;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure+5;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.540863279 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_entry() //  [R2,
                                                              R3]
         { info_tbl: [(c93W7,
                       label: Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93W7: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_entry(R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.544285522 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_closure" {
     Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_closure:
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_entry() //  [R2, R3,
                                                             R4]
         { info_tbl: [(c93Wi,
                       label: Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Wi: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = Foreign.C.Error.throwErrnoIfNullRetry2_closure+1;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.548618259 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetryMayBlock_closure" {
     Foreign.C.Error.throwErrnoIfNullRetryMayBlock_closure:
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetryMayBlock_entry() //  [R2, R3,
                                                            R4]
         { info_tbl: [(c93Wt,
                       label: Foreign.C.Error.throwErrnoIfNullRetryMayBlock_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Wt: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_entry(R4,
                                                                     R3,
                                                                     R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.552360389 UTC

[section ""data" . Foreign.C.Error.$wlvl1_closure" {
     Foreign.C.Error.$wlvl1_closure:
         const Foreign.C.Error.$wlvl1_info;
         const 0;
 },
 sat_s92X2_entry() //  [R1]
         { info_tbl: [(c93WN,
                       label: sat_s92X2_info
                       rep:HeapRep 2 ptrs 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93WN: // global
           _s92X2::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c93WO; else goto c93WP;
       c93WP: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c93WR; else goto c93WQ;
       c93WR: // global
           HpAlloc = 16;
           goto c93WO;
       c93WO: // global
           R1 = _s92X2::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93WQ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92X2::P64;
           _s92WX::P64 = P64[_s92X2::P64 + 16];
           _s92WZ::P64 = P64[_s92X2::P64 + 24];
           _s92WY::I64 = I64[_s92X2::P64 + 32];
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = _s92WZ::P64;
           R5 = Hp - 6;
           R4 = GHC.Base.Nothing_closure+1;
           R3 = _s92WY::I64;
           R2 = _s92WX::P64;
           Sp = Sp - 16;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s92X3_entry() //  [R1]
         { info_tbl: [(c93WS,
                       label: sat_s92X3_info
                       rep:HeapRep 2 ptrs 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93WS: // global
           _s92X3::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c93WT; else goto c93WU;
       c93WU: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c93WW; else goto c93WV;
       c93WW: // global
           HpAlloc = 40;
           goto c93WT;
       c93WT: // global
           R1 = _s92X3::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93WV: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92X3::P64;
           _s92WX::P64 = P64[_s92X3::P64 + 16];
           _s92WZ::P64 = P64[_s92X3::P64 + 24];
           _s92WY::I64 = I64[_s92X3::P64 + 32];
           I64[Hp - 32] = sat_s92X2_info;
           P64[Hp - 16] = _s92WX::P64;
           P64[Hp - 8] = _s92WZ::P64;
           I64[Hp] = _s92WY::I64;
           R2 = Hp - 32;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 Foreign.C.Error.$wlvl1_entry() //  [R2, R3, R4]
         { info_tbl: [(c93WX,
                       label: Foreign.C.Error.$wlvl1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93WX: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c93X1; else goto c93X0;
       c93X1: // global
           HpAlloc = 40;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$wlvl1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93X0: // global
           I64[Hp - 32] = sat_s92X3_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R4;
           I64[Hp] = R3;
           R1 = Hp - 32;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.560577005 UTC

[section ""data" . Foreign.C.Error.throwErrnoPath1_closure" {
     Foreign.C.Error.throwErrnoPath1_closure:
         const Foreign.C.Error.throwErrnoPath1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPath1_entry() //  [R2, R3]
         { info_tbl: [(c93Xl,
                       label: Foreign.C.Error.throwErrnoPath1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Xl: // global
           _s92X5::P64 = R3;
           (_s92Xa::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R4 = _s92X5::P64;
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92Xa::I64));
           R2 = R2;
           call Foreign.C.Error.$wlvl1_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.564218308 UTC

[section ""data" . Foreign.C.Error.throwErrnoPath_closure" {
     Foreign.C.Error.throwErrnoPath_closure:
         const Foreign.C.Error.throwErrnoPath_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPath_entry() //  [R2, R3]
         { info_tbl: [(c93Xw,
                       label: Foreign.C.Error.throwErrnoPath_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Xw: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.567876367 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf1_closure" {
     Foreign.C.Error.throwErrnoPathIf1_closure:
         const Foreign.C.Error.throwErrnoPathIf1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf1_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c93XP,
                       label: Foreign.C.Error.throwErrnoPathIf1_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93XP: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93XQ; else goto c93XR;
       c93XQ: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIf1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93XR: // global
           I64[Sp - 32] = block_c93XH_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93XH() //  [R1]
         { info_tbl: [(c93XH,
                       label: block_c93XH_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93XH: // global
           I64[Sp] = block_c93XJ_info;
           R2 = R1;
           _s92Xj::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s92Xj::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93XJ() //  [R1]
         { info_tbl: [(c93XJ,
                       label: block_c93XJ_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93XJ: // global
           if (R1 & 7 == 1) goto c93XM; else goto c93XN;
       c93XM: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93XN: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.575303332 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf_closure" {
     Foreign.C.Error.throwErrnoPathIf_closure:
         const Foreign.C.Error.throwErrnoPathIf_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c93Yh,
                       label: Foreign.C.Error.throwErrnoPathIf_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Yh: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPathIf1_entry(R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.5790434 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf_1_closure" {
     Foreign.C.Error.throwErrnoPathIf_1_closure:
         const Foreign.C.Error.throwErrnoPathIf_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf_1_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c93YA,
                       label: Foreign.C.Error.throwErrnoPathIf_1_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93YA: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93YB; else goto c93YC;
       c93YB: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIf_1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93YC: // global
           I64[Sp - 32] = block_c93Ys_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93Ys() //  [R1]
         { info_tbl: [(c93Ys,
                       label: block_c93Ys_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Ys: // global
           _s92Xl::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c93Yu_info;
           R2 = R1;
           R1 = _s92Xl::P64;
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93Yu() //  [R1]
         { info_tbl: [(c93Yu,
                       label: block_c93Yu_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Yu: // global
           if (R1 & 7 == 1) goto c93Yx; else goto c93Yy;
       c93Yx: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93Yy: // global
           _s92Xm::P64 = P64[Sp + 8];
           _s92Xn::P64 = P64[Sp + 16];
           (_s92Xx::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R4 = _s92Xn::P64;
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92Xx::I64));
           R2 = _s92Xm::P64;
           Sp = Sp + 24;
           call Foreign.C.Error.$wlvl1_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.587521294 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf__closure" {
     Foreign.C.Error.throwErrnoPathIf__closure:
         const Foreign.C.Error.throwErrnoPathIf__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf__entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c93Z4,
                       label: Foreign.C.Error.throwErrnoPathIf__info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Z4: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPathIf_1_entry(R5,
                                                         R4,
                                                         R3,
                                                         R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.591590607 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfMinus1__closure" {
     Foreign.C.Error.throwErrnoPathIfMinus1__closure:
         const Foreign.C.Error.throwErrnoPathIfMinus1__info;
         const 0;
 },
 sat_s92XD_entry() //  [R1]
         { info_tbl: [(c93Zn,
                       label: sat_s92XD_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Zn: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c93Zo; else goto c93Zp;
       c93Zo: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Zp: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92XC_entry() //  [R1]
         { info_tbl: [(c93Zq,
                       label: ds_s92XC_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93Zq: // global
           _s92XC::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c93Zr; else goto c93Zs;
       c93Zs: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c93Zu; else goto c93Zt;
       c93Zu: // global
           HpAlloc = 24;
           goto c93Zr;
       c93Zr: // global
           R1 = _s92XC::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c93Zt: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92XC::P64;
           _s92XB::P64 = P64[_s92XC::P64 + 16];
           I64[Hp - 16] = sat_s92XD_info;
           P64[Hp] = _s92XB::P64;
           R2 = _s92XB::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s92XS_entry() //  [R1, R2, R3, R4]
         { info_tbl: [(c93ZI,
                       label: sat_s92XS_info
                       rep:HeapRep 2 ptrs { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93ZI: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c93ZJ; else goto c93ZK;
       c93ZJ: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c93ZK: // global
           I64[Sp - 40] = block_c93ZA_info;
           _s92XA::P64 = P64[R1 + 4];
           _s92XC::P64 = P64[R1 + 12];
           R1 = R4;
           P64[Sp - 32] = _s92XA::P64;
           P64[Sp - 24] = _s92XC::P64;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 40;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c93ZA() //  [R1]
         { info_tbl: [(c93ZA,
                       label: block_c93ZA_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93ZA: // global
           _s92XC::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c93ZC_info;
           R2 = P64[Sp + 8];
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = R1;
           P64[Sp + 8] = _s92XC::P64;
           Sp = Sp - 8;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 _c93ZC() //  [R1]
         { info_tbl: [(c93ZC,
                       label: block_c93ZC_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93ZC: // global
           if (R1 & 7 == 1) goto c93ZF; else goto c93ZG;
       c93ZF: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c93ZG: // global
           _s92XE::P64 = P64[Sp + 8];
           _s92XF::P64 = P64[Sp + 16];
           (_s92XP::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R4 = _s92XF::P64;
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s92XP::I64));
           R2 = _s92XE::P64;
           Sp = Sp + 24;
           call Foreign.C.Error.$wlvl1_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoPathIfMinus1__entry() //  [R2, R3]
         { info_tbl: [(c93ZU,
                       label: Foreign.C.Error.throwErrnoPathIfMinus1__info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c93ZU: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c93ZY; else goto c93ZX;
       c93ZY: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIfMinus1__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c93ZX: // global
           I64[Hp - 40] = ds_s92XC_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92XS_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 12;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.605510514 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfNull1_closure" {
     Foreign.C.Error.throwErrnoPathIfNull1_closure:
         const Foreign.C.Error.throwErrnoPathIfNull1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIfNull1_entry() //  [R2, R3, R4]
         { info_tbl: [(c940A,
                       label: Foreign.C.Error.throwErrnoPathIfNull1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c940A: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c940B; else goto c940C;
       c940B: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIfNull1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c940C: // global
           I64[Sp - 24] = block_c940v_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c940v() //  [R1]
         { info_tbl: [(c940v,
                       label: block_c940v_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c940v: // global
           I64[Sp - 8] = block_c940x_info;
           _s92XZ::P64 = R1;
           R1 = R1;
           P64[Sp] = _s92XZ::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u940M; else goto c940y;
       u940M: // global
           call _c940x(R1) args: 0, res: 0, upd: 0;
       c940y: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c940x() //  [R1]
         { info_tbl: [(c940x,
                       label: block_c940x_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c940x: // global
           if (I64[R1 + 7] == 0) goto c940L; else goto c940K;
       c940L: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
       c940K: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.612830489 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfNull_closure" {
     Foreign.C.Error.throwErrnoPathIfNull_closure:
         const Foreign.C.Error.throwErrnoPathIfNull_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIfNull_entry() //  [R2, R3, R4]
         { info_tbl: [(c9414,
                       label: Foreign.C.Error.throwErrnoPathIfNull_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9414: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPathIfNull1_entry(R4,
                                                            R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.616901815 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfMinus1_closure" {
     Foreign.C.Error.throwErrnoPathIfMinus1_closure:
         const Foreign.C.Error.throwErrnoPathIfMinus1_info;
         const 0;
 },
 sat_s92Y6_entry() //  [R1]
         { info_tbl: [(c941n,
                       label: sat_s92Y6_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c941n: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c941o; else goto c941p;
       c941o: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c941p: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s92Y5_entry() //  [R1]
         { info_tbl: [(c941q,
                       label: ds_s92Y5_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c941q: // global
           _s92Y5::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c941r; else goto c941s;
       c941s: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c941u; else goto c941t;
       c941u: // global
           HpAlloc = 24;
           goto c941r;
       c941r: // global
           R1 = _s92Y5::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c941t: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s92Y5::P64;
           _s92Y4::P64 = P64[_s92Y5::P64 + 16];
           I64[Hp - 16] = sat_s92Y6_info;
           P64[Hp] = _s92Y4::P64;
           R2 = _s92Y4::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s92Yf_entry() //  [R1, R2, R3, R4]
         { info_tbl: [(c941I,
                       label: sat_s92Yf_info
                       rep:HeapRep 2 ptrs { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c941I: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c941J; else goto c941K;
       c941J: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c941K: // global
           I64[Sp - 40] = block_c941A_info;
           _s92Y3::P64 = P64[R1 + 4];
           _s92Y5::P64 = P64[R1 + 12];
           R1 = R4;
           P64[Sp - 32] = _s92Y3::P64;
           P64[Sp - 24] = _s92Y5::P64;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 40;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c941A() //  [R1]
         { info_tbl: [(c941A,
                       label: block_c941A_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c941A: // global
           _s92Y3::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c941C_info;
           R2 = _s92Y3::P64;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = R1;
           P64[Sp] = P64[Sp + 16];
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 _c941C() //  [R1]
         { info_tbl: [(c941C,
                       label: block_c941C_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c941C: // global
           if (R1 & 7 == 1) goto c941F; else goto c941G;
       c941F: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c941G: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoPathIfMinus1_entry() //  [R2, R3]
         { info_tbl: [(c941S,
                       label: Foreign.C.Error.throwErrnoPathIfMinus1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c941S: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c941W; else goto c941V;
       c941W: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIfMinus1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c941V: // global
           I64[Hp - 40] = ds_s92Y5_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s92Yf_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 12;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:12.631511132 UTC

[section ""relreadonly" . S932t_srt" {
     S932t_srt:
         const GHC.IO.Encoding.getForeignEncoding_closure;
         const GHC.Foreign.$wpeekCString_closure;
         const Foreign.C.Error.$werrnoToIOError_closure;
         const Foreign.C.Error.errnoToIOError_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const Foreign.C.Error.$wlvl_closure;
         const Foreign.C.Error.throwErrno1_closure;
         const Foreign.C.Error.throwErrnoIf1_closure;
         const Foreign.C.Error.throwErrnoIf_1_closure;
         const sat_s92UT_closure;
         const Foreign.C.Error.throwErrnoIfMinus2_closure;
         const Foreign.C.Error.throwErrnoIfMinus1__closure;
         const Foreign.C.Error.throwErrnoIfMinus1_closure;
         const Foreign.C.Error.throwErrnoIfNull1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
         const Foreign.C.Error.throwErrnoIfRetry_1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry__closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry1_closure;
         const Foreign.C.Error.throwErrnoIfNullRetry1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure;
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure;
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure;
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_closure;
         const Foreign.C.Error.$wlvl1_closure;
         const Foreign.C.Error.throwErrnoPath1_closure;
         const Foreign.C.Error.throwErrnoPathIf1_closure;
         const Foreign.C.Error.throwErrnoPathIf_1_closure;
         const Foreign.C.Error.throwErrnoPathIfMinus1__closure;
         const Foreign.C.Error.throwErrnoPathIfNull1_closure;
         const Foreign.C.Error.throwErrnoPathIfMinus1_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.778616092 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:04:13.779744193 UTC

[section ""cstring" . Foreign.C.Error.$trModule4_bytes" {
     Foreign.C.Error.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.781630117 UTC

[section ""data" . Foreign.C.Error.$trModule3_closure" {
     Foreign.C.Error.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.783487489 UTC

[section ""cstring" . Foreign.C.Error.$trModule2_bytes" {
     Foreign.C.Error.$trModule2_bytes:
         I8[] [70,111,114,101,105,103,110,46,67,46,69,114,114,111,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.78526667 UTC

[section ""data" . Foreign.C.Error.$trModule1_closure" {
     Foreign.C.Error.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.787441931 UTC

[section ""data" . Foreign.C.Error.$trModule_closure" {
     Foreign.C.Error.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Foreign.C.Error.$trModule3_closure+1;
         const Foreign.C.Error.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.789201716 UTC

[section ""data" . $krep_r92Th_closure" {
     $krep_r92Th_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Foreign.C.Types.$tcCInt_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.790911482 UTC

[section ""cstring" . Foreign.C.Error.$tcErrno2_bytes" {
     Foreign.C.Error.$tcErrno2_bytes:
         I8[] [69,114,114,110,111]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.79260278 UTC

[section ""data" . Foreign.C.Error.$tcErrno1_closure" {
     Foreign.C.Error.$tcErrno1_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$tcErrno2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.79435307 UTC

[section ""data" . Foreign.C.Error.$tcErrno_closure" {
     Foreign.C.Error.$tcErrno_closure:
         const GHC.Types.TyCon_con_info;
         const Foreign.C.Error.$trModule_closure+1;
         const Foreign.C.Error.$tcErrno1_closure+1;
         const GHC.Types.krep$*_closure;
         const 9614618910057470603;
         const 5790003468206630810;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.796190893 UTC

[section ""data" . $krep1_r92Ti_closure" {
     $krep1_r92Ti_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Foreign.C.Error.$tcErrno_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.79794808 UTC

[section ""data" . Foreign.C.Error.$tc'Errno1_closure" {
     Foreign.C.Error.$tc'Errno1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r92Th_closure+1;
         const $krep1_r92Ti_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.79970641 UTC

[section ""cstring" . Foreign.C.Error.$tc'Errno3_bytes" {
     Foreign.C.Error.$tc'Errno3_bytes:
         I8[] [39,69,114,114,110,111]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.801411274 UTC

[section ""data" . Foreign.C.Error.$tc'Errno2_closure" {
     Foreign.C.Error.$tc'Errno2_closure:
         const GHC.Types.TrNameS_con_info;
         const Foreign.C.Error.$tc'Errno3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.80363274 UTC

[section ""data" . Foreign.C.Error.$tc'Errno_closure" {
     Foreign.C.Error.$tc'Errno_closure:
         const GHC.Types.TyCon_con_info;
         const Foreign.C.Error.$trModule_closure+1;
         const Foreign.C.Error.$tc'Errno2_closure+1;
         const Foreign.C.Error.$tc'Errno1_closure+4;
         const 18175500743799072511;
         const 6332857689812514354;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.805726902 UTC

[section ""data" . Foreign.C.Error.getErrno1_closure" {
     Foreign.C.Error.getErrno1_closure:
         const Foreign.C.Error.getErrno1_info;
 },
 Foreign.C.Error.getErrno1_entry() //  []
         { info_tbl: [(c947I,
                       label: Foreign.C.Error.getErrno1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c947I: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c947O; else goto c947N;
       c947O: // global
           HpAlloc = 16;
           R1 = Foreign.C.Error.getErrno1_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c947N: // global
           (_s942v::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s942v::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.810293309 UTC

[section ""data" . Foreign.C.Error.getErrno_closure" {
     Foreign.C.Error.getErrno_closure:
         const Foreign.C.Error.getErrno_info;
 },
 Foreign.C.Error.getErrno_entry() //  []
         { info_tbl: [(c9480,
                       label: Foreign.C.Error.getErrno_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9480: // global
           call Foreign.C.Error.getErrno1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.813615359 UTC

[section ""data" . Foreign.C.Error.resetErrno1_closure" {
     Foreign.C.Error.resetErrno1_closure:
         const Foreign.C.Error.resetErrno1_info;
 },
 Foreign.C.Error.resetErrno1_entry() //  []
         { info_tbl: [(c948d,
                       label: Foreign.C.Error.resetErrno1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c948d: // global
           call "ccall" arg hints:  [‘signed’]  result hints:  [] __hscore_set_errno(0);
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.817090786 UTC

[section ""data" . Foreign.C.Error.resetErrno_closure" {
     Foreign.C.Error.resetErrno_closure:
         const Foreign.C.Error.resetErrno_info;
 },
 Foreign.C.Error.resetErrno_entry() //  []
         { info_tbl: [(c948q,
                       label: Foreign.C.Error.resetErrno_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c948q: // global
           call Foreign.C.Error.resetErrno1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.820675586 UTC

[section ""data" . Foreign.C.Error.isValidErrno_closure" {
     Foreign.C.Error.isValidErrno_closure:
         const Foreign.C.Error.isValidErrno_info;
 },
 Foreign.C.Error.isValidErrno_entry() //  [R2]
         { info_tbl: [(c948E,
                       label: Foreign.C.Error.isValidErrno_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c948E: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c948F; else goto c948G;
       c948F: // global
           R2 = R2;
           R1 = Foreign.C.Error.isValidErrno_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c948G: // global
           I64[Sp - 8] = block_c948B_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u948O; else goto c948C;
       u948O: // global
           call _c948B(R1) args: 0, res: 0, upd: 0;
       c948C: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c948B() //  [R1]
         { info_tbl: [(c948B,
                       label: block_c948B_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c948B: // global
           if (I64[R1 + 7] == (-1)) goto c948N; else goto c948M;
       c948N: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c948M: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.82754293 UTC

[section ""data" . Foreign.C.Error.$fEqErrno_$c==_closure" {
     Foreign.C.Error.$fEqErrno_$c==_closure:
         const Foreign.C.Error.$fEqErrno_$c==_info;
 },
 Foreign.C.Error.$fEqErrno_$c==_entry() //  [R2, R3]
         { info_tbl: [(c949a,
                       label: Foreign.C.Error.$fEqErrno_$c==_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c949a: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c949b; else goto c949c;
       c949b: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$fEqErrno_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c949c: // global
           I64[Sp - 16] = block_c9497_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u949B; else goto c9498;
       u949B: // global
           call _c9497(R1) args: 0, res: 0, upd: 0;
       c9498: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9497() //  [R1]
         { info_tbl: [(c9497,
                       label: block_c9497_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9497: // global
           _s942K::I64 = I64[R1 + 7];
           if (_s942K::I64 != (-1)) goto c949k; else goto u949x;
       c949k: // global
           I64[Sp] = block_c949i_info;
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s942K::I64;
           if (R1 & 7 != 0) goto u949z; else goto c949l;
       u949z: // global
           call _c949i(R1) args: 0, res: 0, upd: 0;
       c949l: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u949x: // global
           Sp = Sp + 16;
           call _c949u() args: 0, res: 0, upd: 0;
     }
 },
 _c949i() //  [R1]
         { info_tbl: [(c949i,
                       label: block_c949i_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c949i: // global
           _s942N::I64 = I64[R1 + 7];
           if (_s942N::I64 != (-1)) goto c949s; else goto u949y;
       c949s: // global
           R1 = I64[((I64[Sp + 8] == _s942N::I64) << 3) + GHC.Types.Bool_closure_tbl];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u949y: // global
           Sp = Sp + 16;
           call _c949u() args: 0, res: 0, upd: 0;
     }
 },
 _c949u() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c949u: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.836323809 UTC

[section ""data" . Foreign.C.Error.$fEqErrno_$c/=_closure" {
     Foreign.C.Error.$fEqErrno_$c/=_closure:
         const Foreign.C.Error.$fEqErrno_$c/=_info;
 },
 Foreign.C.Error.$fEqErrno_$c/=_entry() //  [R2, R3]
         { info_tbl: [(c94a7,
                       label: Foreign.C.Error.$fEqErrno_$c/=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94a7: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c94a8; else goto c94a9;
       c94a8: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$fEqErrno_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94a9: // global
           I64[Sp - 16] = block_c94a4_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u94aD; else goto c94a5;
       u94aD: // global
           call _c94a4(R1) args: 0, res: 0, upd: 0;
       c94a5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94a4() //  [R1]
         { info_tbl: [(c94a4,
                       label: block_c94a4_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94a4: // global
           _s942T::I64 = I64[R1 + 7];
           if (_s942T::I64 != (-1)) goto c94ah; else goto u94ay;
       c94ah: // global
           I64[Sp] = block_c94af_info;
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s942T::I64;
           if (R1 & 7 != 0) goto u94aB; else goto c94ai;
       u94aB: // global
           call _c94af(R1) args: 0, res: 0, upd: 0;
       c94ai: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       u94ay: // global
           Sp = Sp + 16;
           call _c94ax() args: 0, res: 0, upd: 0;
     }
 },
 _c94af() //  [R1]
         { info_tbl: [(c94af,
                       label: block_c94af_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94af: // global
           _s942W::I64 = I64[R1 + 7];
           if (_s942W::I64 != (-1)) goto c94av; else goto u94az;
       c94av: // global
           if (I64[Sp + 8] == _s942W::I64) goto c94at; else goto u94aA;
       c94at: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       u94aA: // global
           Sp = Sp + 16;
           goto u94aF;
       u94az: // global
           Sp = Sp + 16;
           goto u94aF;
       u94aF: // global
           call _c94ax() args: 0, res: 0, upd: 0;
     }
 },
 _c94ax() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94ax: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.845029539 UTC

[section ""data" . Foreign.C.Error.$fEqErrno_closure" {
     Foreign.C.Error.$fEqErrno_closure:
         const GHC.Classes.C:Eq_con_info;
         const Foreign.C.Error.$fEqErrno_$c==_closure+2;
         const Foreign.C.Error.$fEqErrno_$c/=_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.847345804 UTC

[section ""data" . Foreign.C.Error.eXDEV1_closure" {
     Foreign.C.Error.eXDEV1_closure:
         const GHC.Int.I32#_con_info;
         const 18;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.848988202 UTC

[section ""data" . Foreign.C.Error.eXDEV_closure" {
     Foreign.C.Error.eXDEV_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eXDEV1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.850729027 UTC

[section ""data" . Foreign.C.Error.eAGAIN1_closure" {
     Foreign.C.Error.eAGAIN1_closure:
         const GHC.Int.I32#_con_info;
         const 11;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.852387986 UTC

[section ""data" . Foreign.C.Error.eWOULDBLOCK_closure" {
     Foreign.C.Error.eWOULDBLOCK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eAGAIN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.854356495 UTC

[section ""data" . Foreign.C.Error.eUSERS1_closure" {
     Foreign.C.Error.eUSERS1_closure:
         const GHC.Int.I32#_con_info;
         const 87;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.856117405 UTC

[section ""data" . Foreign.C.Error.eUSERS_closure" {
     Foreign.C.Error.eUSERS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eUSERS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.858208735 UTC

[section ""data" . Foreign.C.Error.eTXTBSY1_closure" {
     Foreign.C.Error.eTXTBSY1_closure:
         const GHC.Int.I32#_con_info;
         const 26;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.859723896 UTC

[section ""data" . Foreign.C.Error.eTXTBSY_closure" {
     Foreign.C.Error.eTXTBSY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTXTBSY1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.86140345 UTC

[section ""data" . Foreign.C.Error.eTOOMANYREFS1_closure" {
     Foreign.C.Error.eTOOMANYREFS1_closure:
         const GHC.Int.I32#_con_info;
         const 109;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.863006401 UTC

[section ""data" . Foreign.C.Error.eTOOMANYREFS_closure" {
     Foreign.C.Error.eTOOMANYREFS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTOOMANYREFS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.864709985 UTC

[section ""data" . Foreign.C.Error.eTIMEDOUT1_closure" {
     Foreign.C.Error.eTIMEDOUT1_closure:
         const GHC.Int.I32#_con_info;
         const 110;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.866887382 UTC

[section ""data" . Foreign.C.Error.eTIMEDOUT_closure" {
     Foreign.C.Error.eTIMEDOUT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTIMEDOUT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.868624029 UTC

[section ""data" . Foreign.C.Error.eTIME1_closure" {
     Foreign.C.Error.eTIME1_closure:
         const GHC.Int.I32#_con_info;
         const 62;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.870369322 UTC

[section ""data" . Foreign.C.Error.eTIME_closure" {
     Foreign.C.Error.eTIME_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eTIME1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.872141975 UTC

[section ""data" . Foreign.C.Error.eSTALE1_closure" {
     Foreign.C.Error.eSTALE1_closure:
         const GHC.Int.I32#_con_info;
         const 116;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.874286955 UTC

[section ""data" . Foreign.C.Error.eSTALE_closure" {
     Foreign.C.Error.eSTALE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSTALE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.875971871 UTC

[section ""data" . Foreign.C.Error.eSRMNT1_closure" {
     Foreign.C.Error.eSRMNT1_closure:
         const GHC.Int.I32#_con_info;
         const 69;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.878022741 UTC

[section ""data" . Foreign.C.Error.eSRMNT_closure" {
     Foreign.C.Error.eSRMNT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSRMNT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.879768813 UTC

[section ""data" . Foreign.C.Error.eSRCH1_closure" {
     Foreign.C.Error.eSRCH1_closure:
         const GHC.Int.I32#_con_info;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.881497162 UTC

[section ""data" . Foreign.C.Error.eSRCH_closure" {
     Foreign.C.Error.eSRCH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSRCH1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.883197962 UTC

[section ""data" . Foreign.C.Error.eSPIPE1_closure" {
     Foreign.C.Error.eSPIPE1_closure:
         const GHC.Int.I32#_con_info;
         const 29;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.884908472 UTC

[section ""data" . Foreign.C.Error.eSPIPE_closure" {
     Foreign.C.Error.eSPIPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSPIPE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.886736683 UTC

[section ""data" . Foreign.C.Error.eSOCKTNOSUPPORT1_closure" {
     Foreign.C.Error.eSOCKTNOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 94;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.888472968 UTC

[section ""data" . Foreign.C.Error.eSOCKTNOSUPPORT_closure" {
     Foreign.C.Error.eSOCKTNOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSOCKTNOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.891151565 UTC

[section ""data" . Foreign.C.Error.eSHUTDOWN1_closure" {
     Foreign.C.Error.eSHUTDOWN1_closure:
         const GHC.Int.I32#_con_info;
         const 108;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.892805045 UTC

[section ""data" . Foreign.C.Error.eSHUTDOWN_closure" {
     Foreign.C.Error.eSHUTDOWN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eSHUTDOWN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.894544877 UTC

[section ""data" . Foreign.C.Error.eBADRPC1_closure" {
     Foreign.C.Error.eBADRPC1_closure:
         const GHC.Int.I32#_con_info;
         const (-1);
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.89617925 UTC

[section ""data" . Foreign.C.Error.eRREMOTE_closure" {
     Foreign.C.Error.eRREMOTE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.897940475 UTC

[section ""data" . Foreign.C.Error.eRPCMISMATCH_closure" {
     Foreign.C.Error.eRPCMISMATCH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.899605891 UTC

[section ""data" . Foreign.C.Error.eROFS1_closure" {
     Foreign.C.Error.eROFS1_closure:
         const GHC.Int.I32#_con_info;
         const 30;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.90119031 UTC

[section ""data" . Foreign.C.Error.eROFS_closure" {
     Foreign.C.Error.eROFS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eROFS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.903359866 UTC

[section ""data" . Foreign.C.Error.eREMOTE1_closure" {
     Foreign.C.Error.eREMOTE1_closure:
         const GHC.Int.I32#_con_info;
         const 66;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.905057309 UTC

[section ""data" . Foreign.C.Error.eREMOTE_closure" {
     Foreign.C.Error.eREMOTE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eREMOTE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.906869324 UTC

[section ""data" . Foreign.C.Error.eREMCHG1_closure" {
     Foreign.C.Error.eREMCHG1_closure:
         const GHC.Int.I32#_con_info;
         const 78;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.908916235 UTC

[section ""data" . Foreign.C.Error.eREMCHG_closure" {
     Foreign.C.Error.eREMCHG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eREMCHG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.910560737 UTC

[section ""data" . Foreign.C.Error.eRANGE1_closure" {
     Foreign.C.Error.eRANGE1_closure:
         const GHC.Int.I32#_con_info;
         const 34;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.912121091 UTC

[section ""data" . Foreign.C.Error.eRANGE_closure" {
     Foreign.C.Error.eRANGE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eRANGE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.914301862 UTC

[section ""data" . Foreign.C.Error.ePROTOTYPE1_closure" {
     Foreign.C.Error.ePROTOTYPE1_closure:
         const GHC.Int.I32#_con_info;
         const 91;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.915994363 UTC

[section ""data" . Foreign.C.Error.ePROTOTYPE_closure" {
     Foreign.C.Error.ePROTOTYPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePROTOTYPE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.917811269 UTC

[section ""data" . Foreign.C.Error.ePROTONOSUPPORT1_closure" {
     Foreign.C.Error.ePROTONOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 93;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.919572342 UTC

[section ""data" . Foreign.C.Error.ePROTONOSUPPORT_closure" {
     Foreign.C.Error.ePROTONOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePROTONOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.921377036 UTC

[section ""data" . Foreign.C.Error.ePROTO1_closure" {
     Foreign.C.Error.ePROTO1_closure:
         const GHC.Int.I32#_con_info;
         const 71;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.923144123 UTC

[section ""data" . Foreign.C.Error.ePROTO_closure" {
     Foreign.C.Error.ePROTO_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePROTO1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.925187127 UTC

[section ""data" . Foreign.C.Error.ePROGUNAVAIL_closure" {
     Foreign.C.Error.ePROGUNAVAIL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.927313506 UTC

[section ""data" . Foreign.C.Error.ePROGMISMATCH_closure" {
     Foreign.C.Error.ePROGMISMATCH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.928963188 UTC

[section ""data" . Foreign.C.Error.ePROCUNAVAIL_closure" {
     Foreign.C.Error.ePROCUNAVAIL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.930705962 UTC

[section ""data" . Foreign.C.Error.ePROCLIM_closure" {
     Foreign.C.Error.ePROCLIM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.93241712 UTC

[section ""data" . Foreign.C.Error.ePIPE1_closure" {
     Foreign.C.Error.ePIPE1_closure:
         const GHC.Int.I32#_con_info;
         const 32;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.934607028 UTC

[section ""data" . Foreign.C.Error.ePIPE_closure" {
     Foreign.C.Error.ePIPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePIPE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.936341836 UTC

[section ""data" . Foreign.C.Error.ePFNOSUPPORT1_closure" {
     Foreign.C.Error.ePFNOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 96;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.938144783 UTC

[section ""data" . Foreign.C.Error.ePFNOSUPPORT_closure" {
     Foreign.C.Error.ePFNOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePFNOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.939914547 UTC

[section ""data" . Foreign.C.Error.ePERM1_closure" {
     Foreign.C.Error.ePERM1_closure:
         const GHC.Int.I32#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.941997624 UTC

[section ""data" . Foreign.C.Error.ePERM_closure" {
     Foreign.C.Error.ePERM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.ePERM1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.943694273 UTC

[section ""data" . Foreign.C.Error.eNOTSUP1_closure" {
     Foreign.C.Error.eNOTSUP1_closure:
         const GHC.Int.I32#_con_info;
         const 95;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.945324724 UTC

[section ""data" . Foreign.C.Error.eOPNOTSUPP_closure" {
     Foreign.C.Error.eOPNOTSUPP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTSUP1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.947013834 UTC

[section ""data" . Foreign.C.Error.eNXIO1_closure" {
     Foreign.C.Error.eNXIO1_closure:
         const GHC.Int.I32#_con_info;
         const 6;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.948676474 UTC

[section ""data" . Foreign.C.Error.eNXIO_closure" {
     Foreign.C.Error.eNXIO_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNXIO1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.950673871 UTC

[section ""data" . Foreign.C.Error.eNOTTY1_closure" {
     Foreign.C.Error.eNOTTY1_closure:
         const GHC.Int.I32#_con_info;
         const 25;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.952329534 UTC

[section ""data" . Foreign.C.Error.eNOTTY_closure" {
     Foreign.C.Error.eNOTTY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTTY1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.955606539 UTC

[section ""data" . Foreign.C.Error.eNOTSUP_closure" {
     Foreign.C.Error.eNOTSUP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTSUP1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.957413242 UTC

[section ""data" . Foreign.C.Error.eNOTSOCK1_closure" {
     Foreign.C.Error.eNOTSOCK1_closure:
         const GHC.Int.I32#_con_info;
         const 88;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.959554613 UTC

[section ""data" . Foreign.C.Error.eNOTSOCK_closure" {
     Foreign.C.Error.eNOTSOCK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTSOCK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.961282392 UTC

[section ""data" . Foreign.C.Error.eNOTEMPTY1_closure" {
     Foreign.C.Error.eNOTEMPTY1_closure:
         const GHC.Int.I32#_con_info;
         const 39;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.96288251 UTC

[section ""data" . Foreign.C.Error.eNOTEMPTY_closure" {
     Foreign.C.Error.eNOTEMPTY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTEMPTY1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.964636615 UTC

[section ""data" . Foreign.C.Error.eNOTDIR1_closure" {
     Foreign.C.Error.eNOTDIR1_closure:
         const GHC.Int.I32#_con_info;
         const 20;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.967004855 UTC

[section ""data" . Foreign.C.Error.eNOTDIR_closure" {
     Foreign.C.Error.eNOTDIR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTDIR1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.968764963 UTC

[section ""data" . Foreign.C.Error.eNOTCONN1_closure" {
     Foreign.C.Error.eNOTCONN1_closure:
         const GHC.Int.I32#_con_info;
         const 107;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.970539327 UTC

[section ""data" . Foreign.C.Error.eNOTCONN_closure" {
     Foreign.C.Error.eNOTCONN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTCONN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.97236192 UTC

[section ""data" . Foreign.C.Error.eNOTBLK1_closure" {
     Foreign.C.Error.eNOTBLK1_closure:
         const GHC.Int.I32#_con_info;
         const 15;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.974042426 UTC

[section ""data" . Foreign.C.Error.eNOTBLK_closure" {
     Foreign.C.Error.eNOTBLK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOTBLK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.976167284 UTC

[section ""data" . Foreign.C.Error.eNOSYS1_closure" {
     Foreign.C.Error.eNOSYS1_closure:
         const GHC.Int.I32#_con_info;
         const 38;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.978367463 UTC

[section ""data" . Foreign.C.Error.eNOSYS_closure" {
     Foreign.C.Error.eNOSYS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSYS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.980080276 UTC

[section ""data" . Foreign.C.Error.eNOSTR1_closure" {
     Foreign.C.Error.eNOSTR1_closure:
         const GHC.Int.I32#_con_info;
         const 60;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.981759487 UTC

[section ""data" . Foreign.C.Error.eNOSTR_closure" {
     Foreign.C.Error.eNOSTR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSTR1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.983377611 UTC

[section ""data" . Foreign.C.Error.eNOSR1_closure" {
     Foreign.C.Error.eNOSR1_closure:
         const GHC.Int.I32#_con_info;
         const 63;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.984999787 UTC

[section ""data" . Foreign.C.Error.eNOSR_closure" {
     Foreign.C.Error.eNOSR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSR1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.986719947 UTC

[section ""data" . Foreign.C.Error.eNOSPC1_closure" {
     Foreign.C.Error.eNOSPC1_closure:
         const GHC.Int.I32#_con_info;
         const 28;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.988415641 UTC

[section ""data" . Foreign.C.Error.eNOSPC_closure" {
     Foreign.C.Error.eNOSPC_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOSPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.990602655 UTC

[section ""data" . Foreign.C.Error.eNOPROTOOPT1_closure" {
     Foreign.C.Error.eNOPROTOOPT1_closure:
         const GHC.Int.I32#_con_info;
         const 92;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.99267219 UTC

[section ""data" . Foreign.C.Error.eNOPROTOOPT_closure" {
     Foreign.C.Error.eNOPROTOOPT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOPROTOOPT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.994327143 UTC

[section ""data" . Foreign.C.Error.eNONET1_closure" {
     Foreign.C.Error.eNONET1_closure:
         const GHC.Int.I32#_con_info;
         const 64;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.995890672 UTC

[section ""data" . Foreign.C.Error.eNONET_closure" {
     Foreign.C.Error.eNONET_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNONET1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.997580824 UTC

[section ""data" . Foreign.C.Error.eNOMSG1_closure" {
     Foreign.C.Error.eNOMSG1_closure:
         const GHC.Int.I32#_con_info;
         const 42;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:13.999152329 UTC

[section ""data" . Foreign.C.Error.eNOMSG_closure" {
     Foreign.C.Error.eNOMSG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOMSG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.000760437 UTC

[section ""data" . Foreign.C.Error.eNOMEM1_closure" {
     Foreign.C.Error.eNOMEM1_closure:
         const GHC.Int.I32#_con_info;
         const 12;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.002338469 UTC

[section ""data" . Foreign.C.Error.eNOMEM_closure" {
     Foreign.C.Error.eNOMEM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOMEM1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.003987064 UTC

[section ""data" . Foreign.C.Error.eNOLINK1_closure" {
     Foreign.C.Error.eNOLINK1_closure:
         const GHC.Int.I32#_con_info;
         const 67;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.006159462 UTC

[section ""data" . Foreign.C.Error.eNOLINK_closure" {
     Foreign.C.Error.eNOLINK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOLINK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.007860885 UTC

[section ""data" . Foreign.C.Error.eNOLCK1_closure" {
     Foreign.C.Error.eNOLCK1_closure:
         const GHC.Int.I32#_con_info;
         const 37;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.010036776 UTC

[section ""data" . Foreign.C.Error.eNOLCK_closure" {
     Foreign.C.Error.eNOLCK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOLCK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.011691419 UTC

[section ""data" . Foreign.C.Error.eNOEXEC1_closure" {
     Foreign.C.Error.eNOEXEC1_closure:
         const GHC.Int.I32#_con_info;
         const 8;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.013224537 UTC

[section ""data" . Foreign.C.Error.eNOEXEC_closure" {
     Foreign.C.Error.eNOEXEC_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOEXEC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.014911494 UTC

[section ""data" . Foreign.C.Error.eNOENT1_closure" {
     Foreign.C.Error.eNOENT1_closure:
         const GHC.Int.I32#_con_info;
         const 2;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.016567426 UTC

[section ""data" . Foreign.C.Error.eNOENT_closure" {
     Foreign.C.Error.eNOENT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOENT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.018949246 UTC

[section ""data" . Foreign.C.Error.eNODEV1_closure" {
     Foreign.C.Error.eNODEV1_closure:
         const GHC.Int.I32#_con_info;
         const 19;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.020572534 UTC

[section ""data" . Foreign.C.Error.eNODEV_closure" {
     Foreign.C.Error.eNODEV_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNODEV1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.022257533 UTC

[section ""data" . Foreign.C.Error.eNODATA1_closure" {
     Foreign.C.Error.eNODATA1_closure:
         const GHC.Int.I32#_con_info;
         const 61;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.023913246 UTC

[section ""data" . Foreign.C.Error.eNODATA_closure" {
     Foreign.C.Error.eNODATA_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNODATA1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.025675686 UTC

[section ""data" . Foreign.C.Error.eNOBUFS1_closure" {
     Foreign.C.Error.eNOBUFS1_closure:
         const GHC.Int.I32#_con_info;
         const 105;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.027768196 UTC

[section ""data" . Foreign.C.Error.eNOBUFS_closure" {
     Foreign.C.Error.eNOBUFS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNOBUFS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.029475934 UTC

[section ""data" . Foreign.C.Error.eNFILE1_closure" {
     Foreign.C.Error.eNFILE1_closure:
         const GHC.Int.I32#_con_info;
         const 23;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.031209389 UTC

[section ""data" . Foreign.C.Error.eNFILE_closure" {
     Foreign.C.Error.eNFILE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNFILE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.032857964 UTC

[section ""data" . Foreign.C.Error.eNETUNREACH1_closure" {
     Foreign.C.Error.eNETUNREACH1_closure:
         const GHC.Int.I32#_con_info;
         const 101;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.035015239 UTC

[section ""data" . Foreign.C.Error.eNETUNREACH_closure" {
     Foreign.C.Error.eNETUNREACH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNETUNREACH1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.036767407 UTC

[section ""data" . Foreign.C.Error.eNETRESET1_closure" {
     Foreign.C.Error.eNETRESET1_closure:
         const GHC.Int.I32#_con_info;
         const 102;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.038448604 UTC

[section ""data" . Foreign.C.Error.eNETRESET_closure" {
     Foreign.C.Error.eNETRESET_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNETRESET1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.040177689 UTC

[section ""data" . Foreign.C.Error.eNETDOWN1_closure" {
     Foreign.C.Error.eNETDOWN1_closure:
         const GHC.Int.I32#_con_info;
         const 100;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.041959375 UTC

[section ""data" . Foreign.C.Error.eNETDOWN_closure" {
     Foreign.C.Error.eNETDOWN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNETDOWN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.043935744 UTC

[section ""data" . Foreign.C.Error.eNAMETOOLONG1_closure" {
     Foreign.C.Error.eNAMETOOLONG1_closure:
         const GHC.Int.I32#_con_info;
         const 36;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.045531855 UTC

[section ""data" . Foreign.C.Error.eNAMETOOLONG_closure" {
     Foreign.C.Error.eNAMETOOLONG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eNAMETOOLONG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.047223128 UTC

[section ""data" . Foreign.C.Error.eMULTIHOP1_closure" {
     Foreign.C.Error.eMULTIHOP1_closure:
         const GHC.Int.I32#_con_info;
         const 72;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.048862229 UTC

[section ""data" . Foreign.C.Error.eMULTIHOP_closure" {
     Foreign.C.Error.eMULTIHOP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMULTIHOP1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.050602216 UTC

[section ""data" . Foreign.C.Error.eMSGSIZE1_closure" {
     Foreign.C.Error.eMSGSIZE1_closure:
         const GHC.Int.I32#_con_info;
         const 90;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.052216667 UTC

[section ""data" . Foreign.C.Error.eMSGSIZE_closure" {
     Foreign.C.Error.eMSGSIZE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMSGSIZE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.054402246 UTC

[section ""data" . Foreign.C.Error.eMLINK1_closure" {
     Foreign.C.Error.eMLINK1_closure:
         const GHC.Int.I32#_con_info;
         const 31;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.056100153 UTC

[section ""data" . Foreign.C.Error.eMLINK_closure" {
     Foreign.C.Error.eMLINK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMLINK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.057964465 UTC

[section ""data" . Foreign.C.Error.eMFILE1_closure" {
     Foreign.C.Error.eMFILE1_closure:
         const GHC.Int.I32#_con_info;
         const 24;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.060082508 UTC

[section ""data" . Foreign.C.Error.eMFILE_closure" {
     Foreign.C.Error.eMFILE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eMFILE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.06175995 UTC

[section ""data" . Foreign.C.Error.eLOOP1_closure" {
     Foreign.C.Error.eLOOP1_closure:
         const GHC.Int.I32#_con_info;
         const 40;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.063286035 UTC

[section ""data" . Foreign.C.Error.eLOOP_closure" {
     Foreign.C.Error.eLOOP_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eLOOP1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.064953368 UTC

[section ""data" . Foreign.C.Error.eISDIR1_closure" {
     Foreign.C.Error.eISDIR1_closure:
         const GHC.Int.I32#_con_info;
         const 21;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.06663208 UTC

[section ""data" . Foreign.C.Error.eISDIR_closure" {
     Foreign.C.Error.eISDIR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eISDIR1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.068332703 UTC

[section ""data" . Foreign.C.Error.eISCONN1_closure" {
     Foreign.C.Error.eISCONN1_closure:
         const GHC.Int.I32#_con_info;
         const 106;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.070637799 UTC

[section ""data" . Foreign.C.Error.eISCONN_closure" {
     Foreign.C.Error.eISCONN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eISCONN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.0724468 UTC

[section ""data" . Foreign.C.Error.eIO1_closure" {
     Foreign.C.Error.eIO1_closure:
         const GHC.Int.I32#_con_info;
         const 5;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.074173603 UTC

[section ""data" . Foreign.C.Error.eIO_closure" {
     Foreign.C.Error.eIO_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eIO1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.07633742 UTC

[section ""data" . Foreign.C.Error.eINVAL1_closure" {
     Foreign.C.Error.eINVAL1_closure:
         const GHC.Int.I32#_con_info;
         const 22;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.077918544 UTC

[section ""data" . Foreign.C.Error.eINVAL_closure" {
     Foreign.C.Error.eINVAL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eINVAL1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.079589347 UTC

[section ""data" . Foreign.C.Error.eINTR1_closure" {
     Foreign.C.Error.eINTR1_closure:
         const GHC.Int.I32#_con_info;
         const 4;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.081235273 UTC

[section ""data" . Foreign.C.Error.eINTR_closure" {
     Foreign.C.Error.eINTR_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eINTR1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.082880502 UTC

[section ""data" . Foreign.C.Error.eINPROGRESS1_closure" {
     Foreign.C.Error.eINPROGRESS1_closure:
         const GHC.Int.I32#_con_info;
         const 115;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.084482405 UTC

[section ""data" . Foreign.C.Error.eINPROGRESS_closure" {
     Foreign.C.Error.eINPROGRESS_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eINPROGRESS1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.086728928 UTC

[section ""data" . Foreign.C.Error.eILSEQ1_closure" {
     Foreign.C.Error.eILSEQ1_closure:
         const GHC.Int.I32#_con_info;
         const 84;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.088456081 UTC

[section ""data" . Foreign.C.Error.eILSEQ_closure" {
     Foreign.C.Error.eILSEQ_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eILSEQ1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.090209484 UTC

[section ""data" . Foreign.C.Error.eIDRM1_closure" {
     Foreign.C.Error.eIDRM1_closure:
         const GHC.Int.I32#_con_info;
         const 43;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.09189522 UTC

[section ""data" . Foreign.C.Error.eIDRM_closure" {
     Foreign.C.Error.eIDRM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eIDRM1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.094096917 UTC

[section ""data" . Foreign.C.Error.eHOSTUNREACH1_closure" {
     Foreign.C.Error.eHOSTUNREACH1_closure:
         const GHC.Int.I32#_con_info;
         const 113;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.095739348 UTC

[section ""data" . Foreign.C.Error.eHOSTUNREACH_closure" {
     Foreign.C.Error.eHOSTUNREACH_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eHOSTUNREACH1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.097841738 UTC

[section ""data" . Foreign.C.Error.eHOSTDOWN1_closure" {
     Foreign.C.Error.eHOSTDOWN1_closure:
         const GHC.Int.I32#_con_info;
         const 112;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.099424043 UTC

[section ""data" . Foreign.C.Error.eHOSTDOWN_closure" {
     Foreign.C.Error.eHOSTDOWN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eHOSTDOWN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.101078726 UTC

[section ""data" . Foreign.C.Error.eFTYPE_closure" {
     Foreign.C.Error.eFTYPE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.102768989 UTC

[section ""data" . Foreign.C.Error.eFBIG1_closure" {
     Foreign.C.Error.eFBIG1_closure:
         const GHC.Int.I32#_con_info;
         const 27;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.104486704 UTC

[section ""data" . Foreign.C.Error.eFBIG_closure" {
     Foreign.C.Error.eFBIG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eFBIG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.106319987 UTC

[section ""data" . Foreign.C.Error.eFAULT1_closure" {
     Foreign.C.Error.eFAULT1_closure:
         const GHC.Int.I32#_con_info;
         const 14;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.108089914 UTC

[section ""data" . Foreign.C.Error.eFAULT_closure" {
     Foreign.C.Error.eFAULT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eFAULT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.110287036 UTC

[section ""data" . Foreign.C.Error.eEXIST1_closure" {
     Foreign.C.Error.eEXIST1_closure:
         const GHC.Int.I32#_con_info;
         const 17;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.111851495 UTC

[section ""data" . Foreign.C.Error.eEXIST_closure" {
     Foreign.C.Error.eEXIST_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eEXIST1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.113889106 UTC

[section ""data" . Foreign.C.Error.eDQUOT1_closure" {
     Foreign.C.Error.eDQUOT1_closure:
         const GHC.Int.I32#_con_info;
         const 122;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.115527265 UTC

[section ""data" . Foreign.C.Error.eDQUOT_closure" {
     Foreign.C.Error.eDQUOT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDQUOT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.117173268 UTC

[section ""data" . Foreign.C.Error.eDOM1_closure" {
     Foreign.C.Error.eDOM1_closure:
         const GHC.Int.I32#_con_info;
         const 33;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.118760779 UTC

[section ""data" . Foreign.C.Error.eDOM_closure" {
     Foreign.C.Error.eDOM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDOM1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.120440146 UTC

[section ""data" . Foreign.C.Error.eDIRTY_closure" {
     Foreign.C.Error.eDIRTY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.122133461 UTC

[section ""data" . Foreign.C.Error.eDESTADDRREQ1_closure" {
     Foreign.C.Error.eDESTADDRREQ1_closure:
         const GHC.Int.I32#_con_info;
         const 89;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.123912786 UTC

[section ""data" . Foreign.C.Error.eDESTADDRREQ_closure" {
     Foreign.C.Error.eDESTADDRREQ_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDESTADDRREQ1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.12605483 UTC

[section ""data" . Foreign.C.Error.eDEADLK1_closure" {
     Foreign.C.Error.eDEADLK1_closure:
         const GHC.Int.I32#_con_info;
         const 35;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.127626652 UTC

[section ""data" . Foreign.C.Error.eDEADLK_closure" {
     Foreign.C.Error.eDEADLK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eDEADLK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.129799681 UTC

[section ""data" . Foreign.C.Error.eCONNRESET1_closure" {
     Foreign.C.Error.eCONNRESET1_closure:
         const GHC.Int.I32#_con_info;
         const 104;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.131434977 UTC

[section ""data" . Foreign.C.Error.eCONNRESET_closure" {
     Foreign.C.Error.eCONNRESET_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCONNRESET1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.133210267 UTC

[section ""data" . Foreign.C.Error.eCONNREFUSED1_closure" {
     Foreign.C.Error.eCONNREFUSED1_closure:
         const GHC.Int.I32#_con_info;
         const 111;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.134888842 UTC

[section ""data" . Foreign.C.Error.eCONNREFUSED_closure" {
     Foreign.C.Error.eCONNREFUSED_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCONNREFUSED1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.136585381 UTC

[section ""data" . Foreign.C.Error.eCONNABORTED1_closure" {
     Foreign.C.Error.eCONNABORTED1_closure:
         const GHC.Int.I32#_con_info;
         const 103;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.138192314 UTC

[section ""data" . Foreign.C.Error.eCONNABORTED_closure" {
     Foreign.C.Error.eCONNABORTED_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCONNABORTED1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.139960521 UTC

[section ""data" . Foreign.C.Error.eCOMM1_closure" {
     Foreign.C.Error.eCOMM1_closure:
         const GHC.Int.I32#_con_info;
         const 70;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.141749951 UTC

[section ""data" . Foreign.C.Error.eCOMM_closure" {
     Foreign.C.Error.eCOMM_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCOMM1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.143860593 UTC

[section ""data" . Foreign.C.Error.eCHILD1_closure" {
     Foreign.C.Error.eCHILD1_closure:
         const GHC.Int.I32#_con_info;
         const 10;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.146023207 UTC

[section ""data" . Foreign.C.Error.eCHILD_closure" {
     Foreign.C.Error.eCHILD_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eCHILD1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.147699708 UTC

[section ""data" . Foreign.C.Error.eBUSY1_closure" {
     Foreign.C.Error.eBUSY1_closure:
         const GHC.Int.I32#_con_info;
         const 16;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.149375393 UTC

[section ""data" . Foreign.C.Error.eBUSY_closure" {
     Foreign.C.Error.eBUSY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBUSY1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.151108358 UTC

[section ""data" . Foreign.C.Error.eBADRPC_closure" {
     Foreign.C.Error.eBADRPC_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADRPC1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.152856871 UTC

[section ""data" . Foreign.C.Error.eBADMSG1_closure" {
     Foreign.C.Error.eBADMSG1_closure:
         const GHC.Int.I32#_con_info;
         const 74;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.154629013 UTC

[section ""data" . Foreign.C.Error.eBADMSG_closure" {
     Foreign.C.Error.eBADMSG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADMSG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.156436872 UTC

[section ""data" . Foreign.C.Error.eBADF1_closure" {
     Foreign.C.Error.eBADF1_closure:
         const GHC.Int.I32#_con_info;
         const 9;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.158746835 UTC

[section ""data" . Foreign.C.Error.eBADF_closure" {
     Foreign.C.Error.eBADF_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eBADF1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.16094896 UTC

[section ""data" . Foreign.C.Error.eALREADY1_closure" {
     Foreign.C.Error.eALREADY1_closure:
         const GHC.Int.I32#_con_info;
         const 114;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.16256009 UTC

[section ""data" . Foreign.C.Error.eALREADY_closure" {
     Foreign.C.Error.eALREADY_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eALREADY1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.164242191 UTC

[section ""data" . Foreign.C.Error.eAGAIN_closure" {
     Foreign.C.Error.eAGAIN_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eAGAIN1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.165984385 UTC

[section ""data" . Foreign.C.Error.eAFNOSUPPORT1_closure" {
     Foreign.C.Error.eAFNOSUPPORT1_closure:
         const GHC.Int.I32#_con_info;
         const 97;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.167598263 UTC

[section ""data" . Foreign.C.Error.eAFNOSUPPORT_closure" {
     Foreign.C.Error.eAFNOSUPPORT_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eAFNOSUPPORT1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.16927718 UTC

[section ""data" . Foreign.C.Error.eADV1_closure" {
     Foreign.C.Error.eADV1_closure:
         const GHC.Int.I32#_con_info;
         const 68;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.170991757 UTC

[section ""data" . Foreign.C.Error.eADV_closure" {
     Foreign.C.Error.eADV_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eADV1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.172782773 UTC

[section ""data" . Foreign.C.Error.eADDRNOTAVAIL1_closure" {
     Foreign.C.Error.eADDRNOTAVAIL1_closure:
         const GHC.Int.I32#_con_info;
         const 99;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.174601182 UTC

[section ""data" . Foreign.C.Error.eADDRNOTAVAIL_closure" {
     Foreign.C.Error.eADDRNOTAVAIL_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eADDRNOTAVAIL1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.176741256 UTC

[section ""data" . Foreign.C.Error.eADDRINUSE1_closure" {
     Foreign.C.Error.eADDRINUSE1_closure:
         const GHC.Int.I32#_con_info;
         const 98;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.178753137 UTC

[section ""data" . Foreign.C.Error.eADDRINUSE_closure" {
     Foreign.C.Error.eADDRINUSE_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eADDRINUSE1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.180499947 UTC

[section ""data" . Foreign.C.Error.eACCES1_closure" {
     Foreign.C.Error.eACCES1_closure:
         const GHC.Int.I32#_con_info;
         const 13;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.182210532 UTC

[section ""data" . Foreign.C.Error.eACCES_closure" {
     Foreign.C.Error.eACCES_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eACCES1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.183925239 UTC

[section ""data" . Foreign.C.Error.e2BIG1_closure" {
     Foreign.C.Error.e2BIG1_closure:
         const GHC.Int.I32#_con_info;
         const 7;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.185674764 UTC

[section ""data" . Foreign.C.Error.e2BIG_closure" {
     Foreign.C.Error.e2BIG_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.e2BIG1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.18742813 UTC

[section ""data" . Foreign.C.Error.eOK1_closure" {
     Foreign.C.Error.eOK1_closure:
         const GHC.Int.I32#_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.189175282 UTC

[section ""data" . Foreign.C.Error.eOK_closure" {
     Foreign.C.Error.eOK_closure:
         const stg_IND_STATIC_info;
         const Foreign.C.Error.eOK1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.194045949 UTC

[section ""data" . Foreign.C.Error.$werrnoToIOError_closure" {
     Foreign.C.Error.$werrnoToIOError_closure:
         const Foreign.C.Error.$werrnoToIOError_info;
         const 0;
 },
 Foreign.C.Error.$werrnoToIOError_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94e7: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2,
                                                       R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s943e_entry() //  [R1]
         { info_tbl: [(c94fP,
                       label: sat_s943e_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94fP: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c94fQ; else goto c94fR;
       c94fQ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94fR: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s943d::I64 = I64[R1 + 16];
           if (%MO_S_Lt_W64(_s943d::I64, 60)) goto u94fS; else goto u94fV;
       u94fS: // global
           if (%MO_S_Ge_W64(_s943d::I64, 44)) goto c94er; else goto u94fT;
       u94fT: // global
           if (%MO_S_Lt_W64(_s943d::I64, 1)) goto c94er; else goto u94fU;
       u94fU: // global
           switch [1 .. 43] _s943d::I64 {
               case 1 : goto c94fO;
               case 2, 3 : goto c94fK;
               case 4 : goto c94ev;
               case 5 : goto c94ew;
               case 6 : goto c94fK;
               case 7 : goto c94fG;
               case 8, 9 : goto c94fE;
               case 10 : goto c94fK;
               case 11, 12 : goto c94fG;
               case 13 : goto c94fO;
               case 15 : goto c94fE;
               case 16 : goto c94fw;
               case 17 : goto c94fM;
               case 18, 19 : goto c94fx;
               case 20, 21 : goto c94fi;
               case 22 : goto c94fE;
               case 23, 24 : goto c94fG;
               case 25 : goto c94fF;
               case 26 : goto c94fw;
               case 27 : goto c94fO;
               case 28 : goto c94fG;
               case 29 : goto c94fx;
               case 30 : goto c94fO;
               case 31 : goto c94fG;
               case 32 : goto c94fN;
               case 33 : goto c94fE;
               case 34 : goto c94fx;
               case 35 : goto c94fw;
               case 36 : goto c94fE;
               case 37 : goto c94fG;
               case 38 : goto c94fx;
               case 39 : goto c94fe;
               case 40 : goto c94fE;
               case 42 : goto c94fK;
               case 43 : goto c94fN;
               default: {goto c94er;}
           }
       c94ew: // global
           R1 = GHC.IO.Exception.HardwareFault_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94ev: // global
           R1 = GHC.IO.Exception.Interrupted_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       u94fV: // global
           if (%MO_S_Ge_W64(_s943d::I64, 123)) goto c94er; else goto u94fW;
       u94fW: // global
           switch [60 .. 122] _s943d::I64 {
               case 60 : goto c94fE;
               case 61 : goto c94fK;
               case 62 : goto c94fH;
               case 63 : goto c94fG;
               case 64 : goto c94fK;
               case 66 : goto c94fF;
               case 67 : goto c94fN;
               case 69 : goto c94fe;
               case 70 : goto c94fN;
               case 71 : goto c94fr;
               case 72 : goto c94fx;
               case 74 : goto c94fi;
               case 78 : goto c94fN;
               case 84 : goto c94fE;
               case 87 : goto c94fG;
               case 88, 89 : goto c94fE;
               case 90 : goto c94fG;
               case 91 : goto c94fr;
               case 92 : goto c94fx;
               case 93 : goto c94fr;
               case 94, 95, 96, 97 : goto c94fx;
               case 98 : goto c94fw;
               case 99 : goto c94fx;
               case 100 : goto c94fN;
               case 101 : goto c94fK;
               case 102, 104 : goto c94fN;
               case 105 : goto c94fG;
               case 106 : goto c94fM;
               case 107 : goto c94fE;
               case 108 : goto c94fF;
               case 109 : goto c94fG;
               case 110 : goto c94fH;
               case 111, 112, 113 : goto c94fK;
               case 114, 115 : goto c94fM;
               case 116 : goto c94fN;
               case 122 : goto c94fO;
               default: {goto c94er;}
           }
       c94fO: // global
           R1 = GHC.IO.Exception.PermissionDenied_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fM: // global
           R1 = GHC.IO.Exception.AlreadyExists_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fw: // global
           R1 = GHC.IO.Exception.ResourceBusy_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fi: // global
           R1 = GHC.IO.Exception.InappropriateType_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fx: // global
           R1 = GHC.IO.Exception.UnsupportedOperation_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fr: // global
           R1 = GHC.IO.Exception.ProtocolError_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fe: // global
           R1 = GHC.IO.Exception.UnsatisfiedConstraints_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fN: // global
           R1 = GHC.IO.Exception.ResourceVanished_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fF: // global
           R1 = GHC.IO.Exception.IllegalOperation_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fG: // global
           R1 = GHC.IO.Exception.ResourceExhausted_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fH: // global
           R1 = GHC.IO.Exception.TimeExpired_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fK: // global
           R1 = GHC.IO.Exception.NoSuchThing_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94fE: // global
           R1 = GHC.IO.Exception.InvalidArgument_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c94er: // global
           R1 = GHC.IO.Exception.OtherError_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 Foreign.C.Error.$werrnoToIOError_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c94g1,
                       label: Foreign.C.Error.$werrnoToIOError_info
                       rep:HeapRep static {
                             Fun {arity: 4 fun_type: ArgGen [False, True, False, False]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94g1: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c94g2; else goto c94g3;
       c94g2: // global
           R1 = Foreign.C.Error.$werrnoToIOError_closure;
           P64[Sp - 32] = R2;
           I64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           call (stg_gc_fun)(R1) args: 40, res: 0, upd: 8;
       c94g3: // global
           I64[Sp - 40] = block_c94eb_info;
           P64[Sp - 32] = R2;
           I64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 40;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 _c94eb() //  []
         { info_tbl: [(c94eb,
                       label: block_c94eb_info
                       rep:StackRep [False, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94eb: // global
           (_s9436::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [PtrHint] strerror(I64[Sp + 16]);
           I64[Sp - 8] = block_c94ef_info;
           R1 = GHC.IO.Encoding.getForeignEncoding_closure;
           I64[Sp] = _s9436::I64;
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94ef() //  [R1]
         { info_tbl: [(c94ef,
                       label: block_c94ef_info
                       rep:StackRep [True, False, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94ef: // global
           _s9436::I64 = I64[Sp + 8];
           I64[Sp + 8] = block_c94eh_info;
           R3 = _s9436::I64;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Foreign.$wpeekCString_entry(R3,
                                                R2) args: 8, res: 8, upd: 8;
     }
 },
 _c94eh() //  [R1]
         { info_tbl: [(c94eh,
                       label: block_c94eh_info
                       rep:StackRep [False, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94eh: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto c94g8; else goto c94g7;
       c94g8: // global
           HpAlloc = 112;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c94g7: // global
           I64[Hp - 104] = GHC.Int.I32#_con_info;
           _s942Z::I64 = I64[Sp + 16];
           I64[Hp - 96] = _s942Z::I64;
           I64[Hp - 88] = GHC.Base.Just_con_info;
           P64[Hp - 80] = Hp - 103;
           I64[Hp - 72] = sat_s943e_info;
           I64[Hp - 56] = _s942Z::I64;
           I64[Hp - 48] = GHC.IO.Exception.IOError_con_info;
           P64[Hp - 40] = P64[Sp + 24];
           P64[Hp - 32] = Hp - 72;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = R1;
           P64[Hp - 8] = Hp - 86;
           P64[Hp] = P64[Sp + 32];
           R1 = (Hp + -47) & (-8);
           Sp = Sp + 40;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.212813155 UTC

[section ""data" . Foreign.C.Error.errnoToIOError_closure" {
     Foreign.C.Error.errnoToIOError_closure:
         const Foreign.C.Error.errnoToIOError_info;
         const 0;
 },
 Foreign.C.Error.errnoToIOError_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c94hv,
                       label: Foreign.C.Error.errnoToIOError_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94hv: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94hw; else goto c94hx;
       c94hw: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.errnoToIOError_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94hx: // global
           I64[Sp - 32] = block_c94hs_info;
           R1 = R3;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u94hB; else goto c94ht;
       u94hB: // global
           call _c94hs(R1) args: 0, res: 0, upd: 0;
       c94ht: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94hs() //  [R1]
         { info_tbl: [(c94hs,
                       label: block_c94hs_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94hs: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 32;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.218792108 UTC

[section ""data" . Foreign.C.Error.$wlvl_closure" {
     Foreign.C.Error.$wlvl_closure:
         const Foreign.C.Error.$wlvl_info;
         const 0;
 },
 sat_s943u_entry() //  [R1]
         { info_tbl: [(c94hY,
                       label: sat_s943u_info
                       rep:HeapRep 1 ptrs 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94hY: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c94hZ; else goto c94i0;
       c94hZ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94i0: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R5 = GHC.Base.Nothing_closure+1;
           R4 = GHC.Base.Nothing_closure+1;
           R3 = I64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s943v_entry() //  [R1]
         { info_tbl: [(c94i1,
                       label: sat_s943v_info
                       rep:HeapRep 1 ptrs 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94i1: // global
           _s943v::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c94i2; else goto c94i3;
       c94i3: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c94i5; else goto c94i4;
       c94i5: // global
           HpAlloc = 32;
           goto c94i2;
       c94i2: // global
           R1 = _s943v::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94i4: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s943v::P64;
           _s943r::P64 = P64[_s943v::P64 + 16];
           _s943s::I64 = I64[_s943v::P64 + 24];
           I64[Hp - 24] = sat_s943u_info;
           P64[Hp - 8] = _s943r::P64;
           I64[Hp] = _s943s::I64;
           R2 = Hp - 24;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 Foreign.C.Error.$wlvl_entry() //  [R2, R3]
         { info_tbl: [(c94i6,
                       label: Foreign.C.Error.$wlvl_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94i6: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c94ia; else goto c94i9;
       c94ia: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$wlvl_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94i9: // global
           I64[Hp - 24] = sat_s943v_info;
           P64[Hp - 8] = R2;
           I64[Hp] = R3;
           R1 = Hp - 24;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.22694077 UTC

[section ""data" . Foreign.C.Error.throwErrno1_closure" {
     Foreign.C.Error.throwErrno1_closure:
         const Foreign.C.Error.throwErrno1_info;
         const 0;
 },
 Foreign.C.Error.throwErrno1_entry() //  [R2]
         { info_tbl: [(c94iA,
                       label: Foreign.C.Error.throwErrno1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94iA: // global
           (_s943B::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s943B::I64));
           R2 = R2;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.230995688 UTC

[section ""data" . Foreign.C.Error.throwErrno_closure" {
     Foreign.C.Error.throwErrno_closure:
         const Foreign.C.Error.throwErrno_info;
         const 0;
 },
 Foreign.C.Error.throwErrno_entry() //  [R2]
         { info_tbl: [(c94iL,
                       label: Foreign.C.Error.throwErrno_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94iL: // global
           R2 = R2;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.234471812 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf1_closure" {
     Foreign.C.Error.throwErrnoIf1_closure:
         const Foreign.C.Error.throwErrnoIf1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf1_entry() //  [R2, R3, R4]
         { info_tbl: [(c94j4,
                       label: Foreign.C.Error.throwErrnoIf1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94j4: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c94j5; else goto c94j6;
       c94j5: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIf1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94j6: // global
           I64[Sp - 24] = block_c94iW_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94iW() //  [R1]
         { info_tbl: [(c94iW,
                       label: block_c94iW_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94iW: // global
           I64[Sp] = block_c94iY_info;
           R2 = R1;
           _s943J::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s943J::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94iY() //  [R1]
         { info_tbl: [(c94iY,
                       label: block_c94iY_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94iY: // global
           if (R1 & 7 == 1) goto c94j1; else goto c94j2;
       c94j1: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c94j2: // global
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.241876075 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf_closure" {
     Foreign.C.Error.throwErrnoIf_closure:
         const Foreign.C.Error.throwErrnoIf_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf_entry() //  [R2, R3, R4]
         { info_tbl: [(c94jy,
                       label: Foreign.C.Error.throwErrnoIf_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94jy: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIf1_entry(R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.245637056 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf_1_closure" {
     Foreign.C.Error.throwErrnoIf_1_closure:
         const Foreign.C.Error.throwErrnoIf_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf_1_entry() //  [R2, R3, R4]
         { info_tbl: [(c94jR,
                       label: Foreign.C.Error.throwErrnoIf_1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94jR: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c94jS; else goto c94jT;
       c94jS: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIf_1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94jT: // global
           I64[Sp - 24] = block_c94jJ_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94jJ() //  [R1]
         { info_tbl: [(c94jJ,
                       label: block_c94jJ_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94jJ: // global
           _s943L::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c94jL_info;
           R2 = R1;
           R1 = _s943L::P64;
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94jL() //  [R1]
         { info_tbl: [(c94jL,
                       label: block_c94jL_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94jL: // global
           if (R1 & 7 == 1) goto c94jO; else goto c94jP;
       c94jO: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c94jP: // global
           _s943M::P64 = P64[Sp + 8];
           (_s943W::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s943W::I64));
           R2 = _s943M::P64;
           Sp = Sp + 16;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.253433932 UTC

[section ""data" . Foreign.C.Error.throwErrnoIf__closure" {
     Foreign.C.Error.throwErrnoIf__closure:
         const Foreign.C.Error.throwErrnoIf__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIf__entry() //  [R2, R3, R4]
         { info_tbl: [(c94ko,
                       label: Foreign.C.Error.throwErrnoIf__info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94ko: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIf_1_entry(R4,
                                                     R3,
                                                     R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.256613454 UTC

[section ""data" . sat_s943Z_closure" {
     sat_s943Z_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.258823584 UTC

[section ""data" . sat_s9440_closure" {
     sat_s9440_closure:
         const :_con_info;
         const sat_s943Z_closure+1;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.260719097 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus2_closure" {
     Foreign.C.Error.throwErrnoIfMinus2_closure:
         const Foreign.C.Error.throwErrnoIfMinus2_info;
         const 0;
         const 0;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus2_entry() //  [R1]
         { info_tbl: [(c94kD,
                       label: Foreign.C.Error.throwErrnoIfMinus2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94kD: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c94kE; else goto c94kF;
       c94kE: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94kF: // global
           (_c94kA::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c94kA::I64 == 0) goto c94kC; else goto c94kB;
       c94kC: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c94kB: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c94kA::I64;
           R3 = sat_s9440_closure+2;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.266165935 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1__closure" {
     Foreign.C.Error.throwErrnoIfMinus1__closure:
         const Foreign.C.Error.throwErrnoIfMinus1__info;
         const 0;
 },
 sat_s9444_entry() //  [R1]
         { info_tbl: [(c94l1,
                       label: sat_s9444_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94l1: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94l2; else goto c94l3;
       c94l2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94l3: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s9443_entry() //  [R1]
         { info_tbl: [(c94l4,
                       label: ds_s9443_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94l4: // global
           _s9443::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c94l5; else goto c94l6;
       c94l6: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c94l8; else goto c94l7;
       c94l8: // global
           HpAlloc = 24;
           goto c94l5;
       c94l5: // global
           R1 = _s9443::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94l7: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9443::P64;
           _s9442::P64 = P64[_s9443::P64 + 16];
           I64[Hp - 16] = sat_s9444_info;
           P64[Hp] = _s9442::P64;
           R2 = _s9442::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s944i_entry() //  [R1, R2, R3]
         { info_tbl: [(c94lm,
                       label: sat_s944i_info
                       rep:HeapRep 2 ptrs { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94lm: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c94ln; else goto c94lo;
       c94ln: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94lo: // global
           I64[Sp - 32] = block_c94le_info;
           _s9441::P64 = P64[R1 + 5];
           _s9443::P64 = P64[R1 + 13];
           R1 = R3;
           P64[Sp - 24] = _s9441::P64;
           P64[Sp - 16] = _s9443::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94le() //  [R1]
         { info_tbl: [(c94le,
                       label: block_c94le_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94le: // global
           _s9443::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c94lg_info;
           R2 = P64[Sp + 8];
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = R1;
           P64[Sp + 8] = _s9443::P64;
           Sp = Sp - 8;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 _c94lg() //  [R1]
         { info_tbl: [(c94lg,
                       label: block_c94lg_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94lg: // global
           if (R1 & 7 == 1) goto c94lj; else goto c94lk;
       c94lj: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c94lk: // global
           _s9445::P64 = P64[Sp + 8];
           (_s944f::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s944f::I64));
           R2 = _s9445::P64;
           Sp = Sp + 16;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1__entry() //  [R2, R3]
         { info_tbl: [(c94ly,
                       label: Foreign.C.Error.throwErrnoIfMinus1__info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94ly: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c94lC; else goto c94lB;
       c94lC: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94lB: // global
           I64[Hp - 40] = ds_s9443_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s944i_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 13;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.280663331 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1_closure" {
     Foreign.C.Error.throwErrnoIfMinus1_closure:
         const Foreign.C.Error.throwErrnoIfMinus1_info;
         const 0;
 },
 sat_s944m_entry() //  [R1]
         { info_tbl: [(c94mt,
                       label: sat_s944m_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94mt: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94mu; else goto c94mv;
       c94mu: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94mv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s944l_entry() //  [R1]
         { info_tbl: [(c94mw,
                       label: ds_s944l_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94mw: // global
           _s944l::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c94mx; else goto c94my;
       c94my: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c94mA; else goto c94mz;
       c94mA: // global
           HpAlloc = 24;
           goto c94mx;
       c94mx: // global
           R1 = _s944l::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94mz: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s944l::P64;
           _s944k::P64 = P64[_s944l::P64 + 16];
           I64[Hp - 16] = sat_s944m_info;
           P64[Hp] = _s944k::P64;
           R2 = _s944k::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s944u_entry() //  [R1, R2, R3]
         { info_tbl: [(c94mO,
                       label: sat_s944u_info
                       rep:HeapRep 2 ptrs { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94mO: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c94mP; else goto c94mQ;
       c94mP: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94mQ: // global
           I64[Sp - 32] = block_c94mG_info;
           _s944j::P64 = P64[R1 + 5];
           _s944l::P64 = P64[R1 + 13];
           R1 = R3;
           P64[Sp - 24] = _s944j::P64;
           P64[Sp - 16] = _s944l::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94mG() //  [R1]
         { info_tbl: [(c94mG,
                       label: block_c94mG_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94mG: // global
           _s944j::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c94mI_info;
           R2 = _s944j::P64;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = R1;
           P64[Sp] = P64[Sp + 16];
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 _c94mI() //  [R1]
         { info_tbl: [(c94mI,
                       label: block_c94mI_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94mI: // global
           if (R1 & 7 == 1) goto c94mL; else goto c94mM;
       c94mL: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c94mM: // global
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1_entry() //  [R2, R3]
         { info_tbl: [(c94mY,
                       label: Foreign.C.Error.throwErrnoIfMinus1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94mY: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c94n2; else goto c94n1;
       c94n2: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94n1: // global
           I64[Hp - 40] = ds_s944l_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s944u_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 13;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.295173633 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNull1_closure" {
     Foreign.C.Error.throwErrnoIfNull1_closure:
         const Foreign.C.Error.throwErrnoIfNull1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNull1_entry() //  [R2, R3]
         { info_tbl: [(c94nQ,
                       label: Foreign.C.Error.throwErrnoIfNull1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94nQ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c94nR; else goto c94nS;
       c94nR: // global
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfNull1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94nS: // global
           I64[Sp - 16] = block_c94nL_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94nL() //  [R1]
         { info_tbl: [(c94nL,
                       label: block_c94nL_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94nL: // global
           I64[Sp - 8] = block_c94nN_info;
           _s944A::P64 = R1;
           R1 = R1;
           P64[Sp] = _s944A::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u94o2; else goto c94nO;
       u94o2: // global
           call _c94nN(R1) args: 0, res: 0, upd: 0;
       c94nO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94nN() //  [R1]
         { info_tbl: [(c94nN,
                       label: block_c94nN_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94nN: // global
           if (I64[R1 + 7] == 0) goto c94o1; else goto c94o0;
       c94o1: // global
           R2 = P64[Sp + 16];
           Sp = Sp + 24;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
       c94o0: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.30348491 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNull_closure" {
     Foreign.C.Error.throwErrnoIfNull_closure:
         const Foreign.C.Error.throwErrnoIfNull_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNull_entry() //  [R2, R3]
         { info_tbl: [(c94om,
                       label: Foreign.C.Error.throwErrnoIfNull_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94om: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfNull1_entry(R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.30714561 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry2_closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry2_closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry2_entry() //  [R2, R3, R4]
         { info_tbl: [(c94oF,
                       label: Foreign.C.Error.throwErrnoIfMinus1Retry2_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94oF: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c94oG; else goto u94p5;
       c94oG: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u94p5: // global
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c94ou() args: 0, res: 0, upd: 0;
     }
 },
 _c94ou() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94ou: // global
           I64[Sp - 8] = block_c94ox_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94ox() //  [R1]
         { info_tbl: [(c94ox,
                       label: block_c94ox_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94ox: // global
           I64[Sp - 8] = block_c94oz_info;
           R2 = R1;
           _s944K::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp] = _s944K::P64;
           Sp = Sp - 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94oz() //  [R1]
         { info_tbl: [(c94oz,
                       label: block_c94oz_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94oz: // global
           if (R1 & 7 == 1) goto c94oC; else goto c94oD;
       c94oC: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c94oD: // global
           _s944E::P64 = P64[Sp + 16];
           _s944F::P64 = P64[Sp + 24];
           _s944G::P64 = P64[Sp + 32];
           (_s944P::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           if (%MO_SS_Conv_W64_W32(_s944P::I64) == 4 :: W32) goto c94p1; else goto c94oV;
       c94p1: // global
           P64[Sp + 16] = _s944E::P64;
           P64[Sp + 24] = _s944F::P64;
           P64[Sp + 32] = _s944G::P64;
           Sp = Sp + 16;
           call _c94ou() args: 0, res: 0, upd: 0;
       c94oV: // global
           R2 = _s944F::P64;
           Sp = Sp + 40;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.315822839 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetry_closure" {
     Foreign.C.Error.throwErrnoIfRetry_closure:
         const Foreign.C.Error.throwErrnoIfRetry_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetry_entry() //  [R2, R3, R4]
         { info_tbl: [(c94pv,
                       label: Foreign.C.Error.throwErrnoIfRetry_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94pv: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.319422805 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetry_1_closure" {
     Foreign.C.Error.throwErrnoIfRetry_1_closure:
         const Foreign.C.Error.throwErrnoIfRetry_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetry_1_entry() //  [R2, R3, R4]
         { info_tbl: [(c94pI,
                       label: Foreign.C.Error.throwErrnoIfRetry_1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94pI: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c94pJ; else goto c94pK;
       c94pJ: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfRetry_1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94pK: // global
           I64[Sp - 8] = block_c94pG_info;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c94pG() //  []
         { info_tbl: [(c94pG,
                       label: block_c94pG_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94pG: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.325025384 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetry__closure" {
     Foreign.C.Error.throwErrnoIfRetry__closure:
         const Foreign.C.Error.throwErrnoIfRetry__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetry__entry() //  [R2, R3, R4]
         { info_tbl: [(c94q1,
                       label: Foreign.C.Error.throwErrnoIfRetry__info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94q1: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfRetry_1_entry(R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.329188181 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry__closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry__closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry__info;
         const 0;
 },
 sat_s9451_entry() //  [R1]
         { info_tbl: [(c94qk,
                       label: sat_s9451_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94qk: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94ql; else goto c94qm;
       c94ql: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94qm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s9450_entry() //  [R1]
         { info_tbl: [(c94qn,
                       label: ds_s9450_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94qn: // global
           _s9450::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c94qo; else goto c94qp;
       c94qp: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c94qr; else goto c94qq;
       c94qr: // global
           HpAlloc = 24;
           goto c94qo;
       c94qo: // global
           R1 = _s9450::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94qq: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9450::P64;
           _s944Z::P64 = P64[_s9450::P64 + 16];
           I64[Hp - 16] = sat_s9451_info;
           P64[Hp] = _s944Z::P64;
           R2 = _s944Z::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 pred_s9452_entry() //  [R1, R2]
         { info_tbl: [(c94qx,
                       label: pred_s9452_info
                       rep:HeapRep 2 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94qx: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c94qy; else goto c94qz;
       c94qy: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c94qz: // global
           _s9453::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s9453::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 sat_s945a_entry() //  [R1, R2, R3]
         { info_tbl: [(c94qH,
                       label: sat_s945a_info
                       rep:HeapRep 1 ptrs { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94qH: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c94qI; else goto c94qJ;
       c94qI: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94qJ: // global
           I64[Sp - 8] = block_c94qF_info;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c94qF() //  []
         { info_tbl: [(c94qF,
                       label: block_c94qF_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94qF: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry__entry() //  [R2, R3]
         { info_tbl: [(c94qL,
                       label: Foreign.C.Error.throwErrnoIfMinus1Retry__info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94qL: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c94qP; else goto c94qO;
       c94qP: // global
           HpAlloc = 64;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94qO: // global
           I64[Hp - 56] = ds_s9450_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = pred_s9452_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = Hp - 56;
           I64[Hp - 8] = sat_s945a_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 5;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.343535744 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry1_closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry1_closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry1_info;
         const 0;
 },
 sat_s945e_entry() //  [R1]
         { info_tbl: [(c94rH,
                       label: sat_s945e_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94rH: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94rI; else goto c94rJ;
       c94rI: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94rJ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s945d_entry() //  [R1]
         { info_tbl: [(c94rK,
                       label: ds_s945d_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94rK: // global
           _s945d::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c94rL; else goto c94rM;
       c94rM: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c94rO; else goto c94rN;
       c94rO: // global
           HpAlloc = 24;
           goto c94rL;
       c94rL: // global
           R1 = _s945d::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94rN: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s945d::P64;
           _s945c::P64 = P64[_s945d::P64 + 16];
           I64[Hp - 16] = sat_s945e_info;
           P64[Hp] = _s945c::P64;
           R2 = _s945c::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s945g_entry() //  [R1, R2]
         { info_tbl: [(c94rU,
                       label: sat_s945g_info
                       rep:HeapRep 2 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94rU: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c94rV; else goto c94rW;
       c94rV: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c94rW: // global
           _s945f::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s945f::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry1_entry() //  [R2, R3]
         { info_tbl: [(c94rX,
                       label: Foreign.C.Error.throwErrnoIfMinus1Retry1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94rX: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c94s1; else goto c94s0;
       c94s1: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94s0: // global
           I64[Hp - 40] = ds_s945d_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s945g_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R2 = Hp - 15;
           R1 = Foreign.C.Error.throwErrnoIfMinus1Retry2_closure+4;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.353919086 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1Retry_closure" {
     Foreign.C.Error.throwErrnoIfMinus1Retry_closure:
         const Foreign.C.Error.throwErrnoIfMinus1Retry_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1Retry_entry() //  [R2, R3]
         { info_tbl: [(c94sy,
                       label: Foreign.C.Error.throwErrnoIfMinus1Retry_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94sy: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1Retry1_entry(R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.357974295 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetry2_closure" {
     Foreign.C.Error.throwErrnoIfNullRetry2_closure:
         const Foreign.C.Error.throwErrnoIfNullRetry2_info;
 },
 Foreign.C.Error.throwErrnoIfNullRetry2_entry() //  [R2]
         { info_tbl: [(c94sM,
                       label: Foreign.C.Error.throwErrnoIfNullRetry2_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94sM: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c94sN; else goto c94sO;
       c94sN: // global
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfNullRetry2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c94sO: // global
           I64[Sp - 8] = block_c94sJ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u94sT; else goto c94sK;
       u94sT: // global
           call _c94sJ(R1) args: 0, res: 0, upd: 0;
       c94sK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94sJ() //  [R1]
         { info_tbl: [(c94sJ,
                       label: block_c94sJ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94sJ: // global
           R1 = I64[((I64[R1 + 7] == 0) << 3) + GHC.Types.Bool_closure_tbl];
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.363304089 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetry1_closure" {
     Foreign.C.Error.throwErrnoIfNullRetry1_closure:
         const Foreign.C.Error.throwErrnoIfNullRetry1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetry1_entry() //  [R2, R3]
         { info_tbl: [(c94tc,
                       label: Foreign.C.Error.throwErrnoIfNullRetry1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94tc: // global
           R4 = R3;
           R3 = R2;
           R2 = Foreign.C.Error.throwErrnoIfNullRetry2_closure+1;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.367190879 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetry_closure" {
     Foreign.C.Error.throwErrnoIfNullRetry_closure:
         const Foreign.C.Error.throwErrnoIfNullRetry_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetry_entry() //  [R2, R3]
         { info_tbl: [(c94tn,
                       label: Foreign.C.Error.throwErrnoIfNullRetry_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94tn: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfNullRetry1_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.371309674 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry() //  [R2,
                                                               R3, R4, R5]
         { info_tbl: [(c94tG,
                       label: Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94tG: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c94tH; else goto u94ug;
       c94tH: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u94ug: // global
           P64[Sp - 32] = R2;
           P64[Sp - 24] = R3;
           P64[Sp - 16] = R4;
           P64[Sp - 8] = R5;
           Sp = Sp - 32;
           call _c94tv() args: 0, res: 0, upd: 0;
     }
 },
 _c94tv() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94tv: // global
           I64[Sp - 8] = block_c94ty_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94ty() //  [R1]
         { info_tbl: [(c94ty,
                       label: block_c94ty_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94ty: // global
           I64[Sp - 8] = block_c94tA_info;
           R2 = R1;
           _s945s::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp] = _s945s::P64;
           Sp = Sp - 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94tA() //  [R1]
         { info_tbl: [(c94tA,
                       label: block_c94tA_info
                       rep:StackRep [False, False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94tA: // global
           if (R1 & 7 == 1) goto c94tD; else goto c94tE;
       c94tD: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 48;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c94tE: // global
           _s945l::P64 = P64[Sp + 16];
           _s945m::P64 = P64[Sp + 24];
           _s945n::P64 = P64[Sp + 32];
           _s945o::P64 = P64[Sp + 40];
           (_s945x::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           _s945y::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s945x::I64));
           if (_s945y::I64 != 4) goto u94uf; else goto c94u2;
       u94uf: // global
           if (_s945y::I64 != 11) goto c94tW; else goto c94ub;
       c94tW: // global
           R2 = _s945m::P64;
           Sp = Sp + 48;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
       c94ub: // global
           I64[Sp + 8] = block_c94ua_info;
           R1 = _s945o::P64;
           Sp = Sp + 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
       c94u2: // global
           P64[Sp + 16] = _s945l::P64;
           P64[Sp + 24] = _s945m::P64;
           P64[Sp + 32] = _s945n::P64;
           P64[Sp + 40] = _s945o::P64;
           Sp = Sp + 16;
           call _c94tv() args: 0, res: 0, upd: 0;
     }
 },
 _c94ua() //  []
         { info_tbl: [(c94ua,
                       label: block_c94ua_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94ua: // global
           P64[Sp + 8] = P64[Sp + 8];
           P64[Sp + 16] = P64[Sp + 16];
           P64[Sp + 24] = P64[Sp + 24];
           P64[Sp + 32] = P64[Sp + 32];
           Sp = Sp + 8;
           call _c94tv() args: 0, res: 0, upd: 0;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.383180183 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetryMayBlock_closure" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock_closure:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetryMayBlock_entry() //  [R2, R3, R4,
                                                        R5]
         { info_tbl: [(c94uQ,
                       label: Foreign.C.Error.throwErrnoIfRetryMayBlock_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94uQ: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.386716225 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetryMayBlock_1_entry() //  [R2, R3,
                                                          R4, R5]
         { info_tbl: [(c94v3,
                       label: Foreign.C.Error.throwErrnoIfRetryMayBlock_1_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94v3: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c94v4; else goto c94v5;
       c94v4: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94v5: // global
           I64[Sp - 8] = block_c94v1_info;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c94v1() //  []
         { info_tbl: [(c94v1,
                       label: block_c94v1_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94v1: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.392189066 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfRetryMayBlock__closure" {
     Foreign.C.Error.throwErrnoIfRetryMayBlock__closure:
         const Foreign.C.Error.throwErrnoIfRetryMayBlock__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfRetryMayBlock__entry() //  [R2, R3, R4,
                                                         R5]
         { info_tbl: [(c94vm,
                       label: Foreign.C.Error.throwErrnoIfRetryMayBlock__info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94vm: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfRetryMayBlock_1_entry(R5,
                                                                  R4,
                                                                  R3,
                                                                  R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.397049467 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__info;
         const 0;
 },
 sat_s945N_entry() //  [R1]
         { info_tbl: [(c94vF,
                       label: sat_s945N_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94vF: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94vG; else goto c94vH;
       c94vG: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94vH: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s945M_entry() //  [R1]
         { info_tbl: [(c94vI,
                       label: ds_s945M_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94vI: // global
           _s945M::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c94vJ; else goto c94vK;
       c94vK: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c94vM; else goto c94vL;
       c94vM: // global
           HpAlloc = 24;
           goto c94vJ;
       c94vJ: // global
           R1 = _s945M::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94vL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s945M::P64;
           _s945L::P64 = P64[_s945M::P64 + 16];
           I64[Hp - 16] = sat_s945N_info;
           P64[Hp] = _s945L::P64;
           R2 = _s945L::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 pred_s945O_entry() //  [R1, R2]
         { info_tbl: [(c94vS,
                       label: pred_s945O_info
                       rep:HeapRep 2 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94vS: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c94vT; else goto c94vU;
       c94vT: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c94vU: // global
           _s945P::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s945P::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 sat_s945X_entry() //  [R1, R2, R3, R4]
         { info_tbl: [(c94w2,
                       label: sat_s945X_info
                       rep:HeapRep 1 ptrs { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94w2: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c94w3; else goto c94w4;
       c94w3: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94w4: // global
           I64[Sp - 8] = block_c94w0_info;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 4];
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c94w0() //  []
         { info_tbl: [(c94w0,
                       label: block_c94w0_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94w0: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__entry() //  [R2,
                                                               R3]
         { info_tbl: [(c94w6,
                       label: Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94w6: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c94wa; else goto c94w9;
       c94wa: // global
           HpAlloc = 64;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94w9: // global
           I64[Hp - 56] = ds_s945M_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = pred_s945O_info;
           P64[Hp - 24] = R2;
           P64[Hp - 16] = Hp - 56;
           I64[Hp - 8] = sat_s945X_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 4;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.4110003 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_info;
         const 0;
 },
 sat_s9461_entry() //  [R1]
         { info_tbl: [(c94x2,
                       label: sat_s9461_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94x2: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94x3; else goto c94x4;
       c94x3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94x4: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s9460_entry() //  [R1]
         { info_tbl: [(c94x5,
                       label: ds_s9460_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94x5: // global
           _s9460::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c94x6; else goto c94x7;
       c94x7: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c94x9; else goto c94x8;
       c94x9: // global
           HpAlloc = 24;
           goto c94x6;
       c94x6: // global
           R1 = _s9460::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94x8: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9460::P64;
           _s945Z::P64 = P64[_s9460::P64 + 16];
           I64[Hp - 16] = sat_s9461_info;
           P64[Hp] = _s945Z::P64;
           R2 = _s945Z::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s9463_entry() //  [R1, R2]
         { info_tbl: [(c94xf,
                       label: sat_s9463_info
                       rep:HeapRep 2 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94xf: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c94xg; else goto c94xh;
       c94xg: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c94xh: // global
           _s9462::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _s9462::P64;
           P64[Sp - 8] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_entry() //  [R2,
                                                               R3]
         { info_tbl: [(c94xi,
                       label: Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94xi: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c94xm; else goto c94xl;
       c94xm: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94xl: // global
           I64[Hp - 40] = ds_s9460_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s9463_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R2 = Hp - 15;
           R1 = Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure+5;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.421543899 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_closure" {
     Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_closure:
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_entry() //  [R2,
                                                              R3]
         { info_tbl: [(c94xT,
                       label: Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94xT: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_entry(R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.424922545 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_closure" {
     Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_closure:
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_entry() //  [R2, R3,
                                                             R4]
         { info_tbl: [(c94y4,
                       label: Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94y4: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = Foreign.C.Error.throwErrnoIfNullRetry2_closure+1;
           call Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_entry(R5,
                                                                       R4,
                                                                       R3,
                                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.428526917 UTC

[section ""data" . Foreign.C.Error.throwErrnoIfNullRetryMayBlock_closure" {
     Foreign.C.Error.throwErrnoIfNullRetryMayBlock_closure:
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoIfNullRetryMayBlock_entry() //  [R2, R3,
                                                            R4]
         { info_tbl: [(c94yf,
                       label: Foreign.C.Error.throwErrnoIfNullRetryMayBlock_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94yf: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_entry(R4,
                                                                     R3,
                                                                     R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.433012562 UTC

[section ""data" . Foreign.C.Error.$wlvl1_closure" {
     Foreign.C.Error.$wlvl1_closure:
         const Foreign.C.Error.$wlvl1_info;
         const 0;
 },
 sat_s9469_entry() //  [R1]
         { info_tbl: [(c94yz,
                       label: sat_s9469_info
                       rep:HeapRep 2 ptrs 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94yz: // global
           _s9469::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c94yA; else goto c94yB;
       c94yB: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c94yD; else goto c94yC;
       c94yD: // global
           HpAlloc = 16;
           goto c94yA;
       c94yA: // global
           R1 = _s9469::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94yC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9469::P64;
           _s9464::P64 = P64[_s9469::P64 + 16];
           _s9466::P64 = P64[_s9469::P64 + 24];
           _s9465::I64 = I64[_s9469::P64 + 32];
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = _s9466::P64;
           R5 = Hp - 6;
           R4 = GHC.Base.Nothing_closure+1;
           R3 = _s9465::I64;
           R2 = _s9464::P64;
           Sp = Sp - 16;
           call Foreign.C.Error.$werrnoToIOError_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s946a_entry() //  [R1]
         { info_tbl: [(c94yE,
                       label: sat_s946a_info
                       rep:HeapRep 2 ptrs 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94yE: // global
           _s946a::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c94yF; else goto c94yG;
       c94yG: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c94yI; else goto c94yH;
       c94yI: // global
           HpAlloc = 40;
           goto c94yF;
       c94yF: // global
           R1 = _s946a::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94yH: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s946a::P64;
           _s9464::P64 = P64[_s946a::P64 + 16];
           _s9466::P64 = P64[_s946a::P64 + 24];
           _s9465::I64 = I64[_s946a::P64 + 32];
           I64[Hp - 32] = sat_s9469_info;
           P64[Hp - 16] = _s9464::P64;
           P64[Hp - 8] = _s9466::P64;
           I64[Hp] = _s9465::I64;
           R2 = Hp - 32;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 Foreign.C.Error.$wlvl1_entry() //  [R2, R3, R4]
         { info_tbl: [(c94yJ,
                       label: Foreign.C.Error.$wlvl1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94yJ: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c94yN; else goto c94yM;
       c94yN: // global
           HpAlloc = 40;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.$wlvl1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94yM: // global
           I64[Hp - 32] = sat_s946a_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R4;
           I64[Hp] = R3;
           R1 = Hp - 32;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.441549775 UTC

[section ""data" . Foreign.C.Error.throwErrnoPath1_closure" {
     Foreign.C.Error.throwErrnoPath1_closure:
         const Foreign.C.Error.throwErrnoPath1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPath1_entry() //  [R2, R3]
         { info_tbl: [(c94zd,
                       label: Foreign.C.Error.throwErrnoPath1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94zd: // global
           _s946c::P64 = R3;
           (_s946h::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R4 = _s946c::P64;
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s946h::I64));
           R2 = R2;
           call Foreign.C.Error.$wlvl1_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.445178059 UTC

[section ""data" . Foreign.C.Error.throwErrnoPath_closure" {
     Foreign.C.Error.throwErrnoPath_closure:
         const Foreign.C.Error.throwErrnoPath_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPath_entry() //  [R2, R3]
         { info_tbl: [(c94zo,
                       label: Foreign.C.Error.throwErrnoPath_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94zo: // global
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.449739615 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf1_closure" {
     Foreign.C.Error.throwErrnoPathIf1_closure:
         const Foreign.C.Error.throwErrnoPathIf1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf1_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c94zH,
                       label: Foreign.C.Error.throwErrnoPathIf1_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94zH: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94zI; else goto c94zJ;
       c94zI: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIf1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94zJ: // global
           I64[Sp - 32] = block_c94zz_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94zz() //  [R1]
         { info_tbl: [(c94zz,
                       label: block_c94zz_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94zz: // global
           I64[Sp] = block_c94zB_info;
           R2 = R1;
           _s946q::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s946q::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94zB() //  [R1]
         { info_tbl: [(c94zB,
                       label: block_c94zB_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94zB: // global
           if (R1 & 7 == 1) goto c94zE; else goto c94zF;
       c94zE: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c94zF: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.456994952 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf_closure" {
     Foreign.C.Error.throwErrnoPathIf_closure:
         const Foreign.C.Error.throwErrnoPathIf_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c94Ab,
                       label: Foreign.C.Error.throwErrnoPathIf_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94Ab: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPathIf1_entry(R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.460778362 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf_1_closure" {
     Foreign.C.Error.throwErrnoPathIf_1_closure:
         const Foreign.C.Error.throwErrnoPathIf_1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf_1_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c94Au,
                       label: Foreign.C.Error.throwErrnoPathIf_1_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94Au: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94Av; else goto c94Aw;
       c94Av: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIf_1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94Aw: // global
           I64[Sp - 32] = block_c94Am_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94Am() //  [R1]
         { info_tbl: [(c94Am,
                       label: block_c94Am_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94Am: // global
           _s946s::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c94Ao_info;
           R2 = R1;
           R1 = _s946s::P64;
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94Ao() //  [R1]
         { info_tbl: [(c94Ao,
                       label: block_c94Ao_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94Ao: // global
           if (R1 & 7 == 1) goto c94Ar; else goto c94As;
       c94Ar: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c94As: // global
           _s946t::P64 = P64[Sp + 8];
           _s946u::P64 = P64[Sp + 16];
           (_s946E::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R4 = _s946u::P64;
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s946E::I64));
           R2 = _s946t::P64;
           Sp = Sp + 24;
           call Foreign.C.Error.$wlvl1_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.469303928 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIf__closure" {
     Foreign.C.Error.throwErrnoPathIf__closure:
         const Foreign.C.Error.throwErrnoPathIf__info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIf__entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c94B1,
                       label: Foreign.C.Error.throwErrnoPathIf__info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94B1: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPathIf_1_entry(R5,
                                                         R4,
                                                         R3,
                                                         R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.473475278 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfMinus1__closure" {
     Foreign.C.Error.throwErrnoPathIfMinus1__closure:
         const Foreign.C.Error.throwErrnoPathIfMinus1__info;
         const 0;
 },
 sat_s946K_entry() //  [R1]
         { info_tbl: [(c94Bk,
                       label: sat_s946K_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94Bk: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94Bl; else goto c94Bm;
       c94Bl: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94Bm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s946J_entry() //  [R1]
         { info_tbl: [(c94Bn,
                       label: ds_s946J_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94Bn: // global
           _s946J::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c94Bo; else goto c94Bp;
       c94Bp: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c94Br; else goto c94Bq;
       c94Br: // global
           HpAlloc = 24;
           goto c94Bo;
       c94Bo: // global
           R1 = _s946J::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94Bq: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s946J::P64;
           _s946I::P64 = P64[_s946J::P64 + 16];
           I64[Hp - 16] = sat_s946K_info;
           P64[Hp] = _s946I::P64;
           R2 = _s946I::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s946Z_entry() //  [R1, R2, R3, R4]
         { info_tbl: [(c94BF,
                       label: sat_s946Z_info
                       rep:HeapRep 2 ptrs { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94BF: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c94BG; else goto c94BH;
       c94BG: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94BH: // global
           I64[Sp - 40] = block_c94Bx_info;
           _s946H::P64 = P64[R1 + 4];
           _s946J::P64 = P64[R1 + 12];
           R1 = R4;
           P64[Sp - 32] = _s946H::P64;
           P64[Sp - 24] = _s946J::P64;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 40;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94Bx() //  [R1]
         { info_tbl: [(c94Bx,
                       label: block_c94Bx_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94Bx: // global
           _s946J::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c94Bz_info;
           R2 = P64[Sp + 8];
           I64[Sp - 8] = stg_ap_pp_info;
           P64[Sp] = R1;
           P64[Sp + 8] = _s946J::P64;
           Sp = Sp - 8;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 _c94Bz() //  [R1]
         { info_tbl: [(c94Bz,
                       label: block_c94Bz_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94Bz: // global
           if (R1 & 7 == 1) goto c94BC; else goto c94BD;
       c94BC: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c94BD: // global
           _s946L::P64 = P64[Sp + 8];
           _s946M::P64 = P64[Sp + 16];
           (_s946W::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R4 = _s946M::P64;
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s946W::I64));
           R2 = _s946L::P64;
           Sp = Sp + 24;
           call Foreign.C.Error.$wlvl1_entry(R4,
                                             R3,
                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoPathIfMinus1__entry() //  [R2, R3]
         { info_tbl: [(c94BR,
                       label: Foreign.C.Error.throwErrnoPathIfMinus1__info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94BR: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c94BV; else goto c94BU;
       c94BV: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIfMinus1__closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94BU: // global
           I64[Hp - 40] = ds_s946J_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s946Z_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 12;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.489936224 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfNull1_closure" {
     Foreign.C.Error.throwErrnoPathIfNull1_closure:
         const Foreign.C.Error.throwErrnoPathIfNull1_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIfNull1_entry() //  [R2, R3, R4]
         { info_tbl: [(c94CJ,
                       label: Foreign.C.Error.throwErrnoPathIfNull1_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94CJ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94CK; else goto c94CL;
       c94CK: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIfNull1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94CL: // global
           I64[Sp - 24] = block_c94CE_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94CE() //  [R1]
         { info_tbl: [(c94CE,
                       label: block_c94CE_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94CE: // global
           I64[Sp - 8] = block_c94CG_info;
           _s9476::P64 = R1;
           R1 = R1;
           P64[Sp] = _s9476::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u94CV; else goto c94CH;
       u94CV: // global
           call _c94CG(R1) args: 0, res: 0, upd: 0;
       c94CH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94CG() //  [R1]
         { info_tbl: [(c94CG,
                       label: block_c94CG_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94CG: // global
           if (I64[R1 + 7] == 0) goto c94CU; else goto c94CT;
       c94CU: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
       c94CT: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.497196655 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfNull_closure" {
     Foreign.C.Error.throwErrnoPathIfNull_closure:
         const Foreign.C.Error.throwErrnoPathIfNull_info;
         const 0;
 },
 Foreign.C.Error.throwErrnoPathIfNull_entry() //  [R2, R3, R4]
         { info_tbl: [(c94Df,
                       label: Foreign.C.Error.throwErrnoPathIfNull_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94Df: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Foreign.C.Error.throwErrnoPathIfNull1_entry(R4,
                                                            R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.501331324 UTC

[section ""data" . Foreign.C.Error.throwErrnoPathIfMinus1_closure" {
     Foreign.C.Error.throwErrnoPathIfMinus1_closure:
         const Foreign.C.Error.throwErrnoPathIfMinus1_info;
         const 0;
 },
 sat_s947d_entry() //  [R1]
         { info_tbl: [(c94Dy,
                       label: sat_s947d_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94Dy: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c94Dz; else goto c94DA;
       c94Dz: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94DA: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Foreign.C.Error.throwErrnoIfMinus2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 ds_s947c_entry() //  [R1]
         { info_tbl: [(c94DB,
                       label: ds_s947c_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94DB: // global
           _s947c::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c94DC; else goto c94DD;
       c94DD: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c94DF; else goto c94DE;
       c94DF: // global
           HpAlloc = 24;
           goto c94DC;
       c94DC: // global
           R1 = _s947c::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c94DE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s947c::P64;
           _s947b::P64 = P64[_s947c::P64 + 16];
           I64[Hp - 16] = sat_s947d_info;
           P64[Hp] = _s947b::P64;
           R2 = _s947b::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s947m_entry() //  [R1, R2, R3, R4]
         { info_tbl: [(c94DT,
                       label: sat_s947m_info
                       rep:HeapRep 2 ptrs { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94DT: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c94DU; else goto c94DV;
       c94DU: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c94DV: // global
           I64[Sp - 40] = block_c94DL_info;
           _s947a::P64 = P64[R1 + 4];
           _s947c::P64 = P64[R1 + 12];
           R1 = R4;
           P64[Sp - 32] = _s947a::P64;
           P64[Sp - 24] = _s947c::P64;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 40;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c94DL() //  [R1]
         { info_tbl: [(c94DL,
                       label: block_c94DL_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94DL: // global
           _s947a::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c94DN_info;
           R2 = _s947a::P64;
           I64[Sp - 16] = stg_ap_pp_info;
           P64[Sp - 8] = R1;
           P64[Sp] = P64[Sp + 16];
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 _c94DN() //  [R1]
         { info_tbl: [(c94DN,
                       label: block_c94DN_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94DN: // global
           if (R1 & 7 == 1) goto c94DQ; else goto c94DR;
       c94DQ: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c94DR: // global
           R3 = P64[Sp + 24];
           R2 = P64[Sp + 16];
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrnoPath1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 Foreign.C.Error.throwErrnoPathIfMinus1_entry() //  [R2, R3]
         { info_tbl: [(c94E3,
                       label: Foreign.C.Error.throwErrnoPathIfMinus1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c94E3: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c94E7; else goto c94E6;
       c94E7: // global
           HpAlloc = 48;
           R3 = R3;
           R2 = R2;
           R1 = Foreign.C.Error.throwErrnoPathIfMinus1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c94E6: // global
           I64[Hp - 40] = ds_s947c_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = sat_s947m_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Hp - 40;
           R1 = Hp - 12;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:14.51528261 UTC

[section ""relreadonly" . S94ga_srt" {
     S94ga_srt:
         const GHC.IO.Encoding.getForeignEncoding_closure;
         const GHC.Foreign.$wpeekCString_closure;
         const Foreign.C.Error.$werrnoToIOError_closure;
         const Foreign.C.Error.errnoToIOError_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const Foreign.C.Error.$wlvl_closure;
         const Foreign.C.Error.throwErrno1_closure;
         const Foreign.C.Error.throwErrnoIf1_closure;
         const Foreign.C.Error.throwErrnoIf_1_closure;
         const sat_s9440_closure;
         const Foreign.C.Error.throwErrnoIfMinus2_closure;
         const Foreign.C.Error.throwErrnoIfMinus1__closure;
         const Foreign.C.Error.throwErrnoIfMinus1_closure;
         const Foreign.C.Error.throwErrnoIfNull1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
         const Foreign.C.Error.throwErrnoIfRetry_1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry__closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry1_closure;
         const Foreign.C.Error.throwErrnoIfNullRetry1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2_closure;
         const Foreign.C.Error.throwErrnoIfRetryMayBlock_1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock__closure;
         const Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1_closure;
         const Foreign.C.Error.throwErrnoIfNullRetryMayBlock1_closure;
         const Foreign.C.Error.$wlvl1_closure;
         const Foreign.C.Error.throwErrnoPath1_closure;
         const Foreign.C.Error.throwErrnoPathIf1_closure;
         const Foreign.C.Error.throwErrnoPathIf_1_closure;
         const Foreign.C.Error.throwErrnoPathIfMinus1__closure;
         const Foreign.C.Error.throwErrnoPathIfNull1_closure;
         const Foreign.C.Error.throwErrnoPathIfMinus1_closure;
 }]

