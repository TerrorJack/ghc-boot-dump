
==================== Pre unarise: ====================
2018-03-16 16:04:11.459174255 UTC

Foreign.C.Error.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Foreign.C.Error.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Error.$trModule4];

Foreign.C.Error.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.C.Error"#;

Foreign.C.Error.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Error.$trModule2];

Foreign.C.Error.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.C.Error.$trModule3
                                     Foreign.C.Error.$trModule1];

$krep_r92Th :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCInt
                                              GHC.Types.[]];

Foreign.C.Error.$tcErrno2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Errno"#;

Foreign.C.Error.$tcErrno1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Error.$tcErrno2];

Foreign.C.Error.$tcErrno :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9614618910057470603##
                                    5790003468206630810##
                                    Foreign.C.Error.$trModule
                                    Foreign.C.Error.$tcErrno1
                                    0#
                                    GHC.Types.krep$*];

$krep1_r92Ti :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Error.$tcErrno
                                              GHC.Types.[]];

Foreign.C.Error.$tc'Errno1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r92Th $krep1_r92Ti];

Foreign.C.Error.$tc'Errno3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Errno"#;

Foreign.C.Error.$tc'Errno2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Error.$tc'Errno3];

Foreign.C.Error.$tc'Errno :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [18175500743799072511##
                                    6332857689812514354##
                                    Foreign.C.Error.$trModule
                                    Foreign.C.Error.$tc'Errno2
                                    0#
                                    Foreign.C.Error.$tc'Errno1];

Foreign.C.Error.getErrno1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Error.Errno #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [s_s92Tk]
        case __pkg_ccall base-4.11.0.0 [s_s92Tk] of {
          (#,#) ds_s92Tn [Occ=Once] ds1_s92To [Occ=Once] ->
              case narrow32Int# [ds1_s92To] of sat_s92Tp {
                __DEFAULT ->
                    let {
                      sat_s92Tq [Occ=Once] :: Foreign.C.Error.Errno
                      [LclId] =
                          CCCS GHC.Int.I32#! [sat_s92Tp];
                    } in  (#,#) [ds_s92Tn sat_s92Tq];
              };
        };

Foreign.C.Error.getErrno :: GHC.Types.IO Foreign.C.Error.Errno
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_B1] Foreign.C.Error.getErrno1 eta_B1;

Foreign.C.Error.resetErrno1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ds_s92Tr]
        case __pkg_ccall base-4.11.0.0 [0# ds_s92Tr] of {
          Unit# ds1_s92Tu [Occ=Once] -> (#,#) [ds1_s92Tu GHC.Tuple.()];
        };

Foreign.C.Error.resetErrno :: GHC.Types.IO ()
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_B1] Foreign.C.Error.resetErrno1 eta_B1;

Foreign.C.Error.isValidErrno
  :: Foreign.C.Error.Errno -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [ds_s92Tv]
        case ds_s92Tv of {
          GHC.Int.I32# x_s92Tx [Occ=Once!] ->
              case x_s92Tx of {
                __DEFAULT -> GHC.Types.True [];
                -1# -> GHC.Types.False [];
              };
        };

Foreign.C.Error.$fEqErrno_$c==
  :: Foreign.C.Error.Errno -> Foreign.C.Error.Errno -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)><L,1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [errno1_s92Tz errno2_s92TA]
        case errno1_s92Tz of {
          GHC.Int.I32# x_s92TC [Occ=Once!] ->
              case x_s92TC of wild1_s92TD {
                __DEFAULT ->
                    case errno2_s92TA of {
                      GHC.Int.I32# x1_s92TF [Occ=Once!] ->
                          case x1_s92TF of wild3_s92TG {
                            __DEFAULT ->
                                case ==# [wild1_s92TD wild3_s92TG] of sat_s92TH {
                                  __DEFAULT -> tagToEnum# [sat_s92TH];
                                };
                            -1# -> GHC.Types.False [];
                          };
                    };
                -1# -> GHC.Types.False [];
              };
        };

Foreign.C.Error.$fEqErrno_$c/= [InlPrag=INLINE (sat-args=2)]
  :: Foreign.C.Error.Errno -> Foreign.C.Error.Errno -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)><L,1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [eta_s92TI eta1_s92TJ]
        case eta_s92TI of {
          GHC.Int.I32# x_s92TL [Occ=Once!] ->
              case x_s92TL of wild1_s92TM {
                __DEFAULT ->
                    case eta1_s92TJ of {
                      GHC.Int.I32# x1_s92TO [Occ=Once!] ->
                          case x1_s92TO of wild3_s92TP {
                            __DEFAULT ->
                                case ==# [wild1_s92TM wild3_s92TP] of {
                                  __DEFAULT -> GHC.Types.True [];
                                  1# -> GHC.Types.False [];
                                };
                            -1# -> GHC.Types.True [];
                          };
                    };
                -1# -> GHC.Types.True [];
              };
        };

Foreign.C.Error.$fEqErrno [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Error.Errno
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [Foreign.C.Error.$fEqErrno_$c==
                                     Foreign.C.Error.$fEqErrno_$c/=];

Foreign.C.Error.eXDEV1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [18#];

Foreign.C.Error.eXDEV :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eXDEV1;

Foreign.C.Error.eAGAIN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [11#];

Foreign.C.Error.eWOULDBLOCK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eAGAIN1;

Foreign.C.Error.eUSERS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [87#];

Foreign.C.Error.eUSERS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eUSERS1;

Foreign.C.Error.eTXTBSY1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [26#];

Foreign.C.Error.eTXTBSY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eTXTBSY1;

Foreign.C.Error.eTOOMANYREFS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [109#];

Foreign.C.Error.eTOOMANYREFS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eTOOMANYREFS1;

Foreign.C.Error.eTIMEDOUT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [110#];

Foreign.C.Error.eTIMEDOUT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eTIMEDOUT1;

Foreign.C.Error.eTIME1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [62#];

Foreign.C.Error.eTIME :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eTIME1;

Foreign.C.Error.eSTALE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [116#];

Foreign.C.Error.eSTALE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSTALE1;

Foreign.C.Error.eSRMNT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [69#];

Foreign.C.Error.eSRMNT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSRMNT1;

Foreign.C.Error.eSRCH1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [3#];

Foreign.C.Error.eSRCH :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSRCH1;

Foreign.C.Error.eSPIPE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [29#];

Foreign.C.Error.eSPIPE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSPIPE1;

Foreign.C.Error.eSOCKTNOSUPPORT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [94#];

Foreign.C.Error.eSOCKTNOSUPPORT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSOCKTNOSUPPORT1;

Foreign.C.Error.eSHUTDOWN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [108#];

Foreign.C.Error.eSHUTDOWN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSHUTDOWN1;

Foreign.C.Error.eBADRPC1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [-1#];

Foreign.C.Error.eRREMOTE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.eRPCMISMATCH :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.eROFS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [30#];

Foreign.C.Error.eROFS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eROFS1;

Foreign.C.Error.eREMOTE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [66#];

Foreign.C.Error.eREMOTE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eREMOTE1;

Foreign.C.Error.eREMCHG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [78#];

Foreign.C.Error.eREMCHG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eREMCHG1;

Foreign.C.Error.eRANGE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [34#];

Foreign.C.Error.eRANGE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eRANGE1;

Foreign.C.Error.ePROTOTYPE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [91#];

Foreign.C.Error.ePROTOTYPE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePROTOTYPE1;

Foreign.C.Error.ePROTONOSUPPORT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [93#];

Foreign.C.Error.ePROTONOSUPPORT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePROTONOSUPPORT1;

Foreign.C.Error.ePROTO1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [71#];

Foreign.C.Error.ePROTO :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePROTO1;

Foreign.C.Error.ePROGUNAVAIL :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.ePROGMISMATCH :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.ePROCUNAVAIL :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.ePROCLIM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.ePIPE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [32#];

Foreign.C.Error.ePIPE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePIPE1;

Foreign.C.Error.ePFNOSUPPORT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [96#];

Foreign.C.Error.ePFNOSUPPORT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePFNOSUPPORT1;

Foreign.C.Error.ePERM1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [1#];

Foreign.C.Error.ePERM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePERM1;

Foreign.C.Error.eNOTSUP1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [95#];

Foreign.C.Error.eOPNOTSUPP :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTSUP1;

Foreign.C.Error.eNXIO1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [6#];

Foreign.C.Error.eNXIO :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNXIO1;

Foreign.C.Error.eNOTTY1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [25#];

Foreign.C.Error.eNOTTY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTTY1;

Foreign.C.Error.eNOTSUP :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTSUP1;

Foreign.C.Error.eNOTSOCK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [88#];

Foreign.C.Error.eNOTSOCK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTSOCK1;

Foreign.C.Error.eNOTEMPTY1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [39#];

Foreign.C.Error.eNOTEMPTY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTEMPTY1;

Foreign.C.Error.eNOTDIR1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [20#];

Foreign.C.Error.eNOTDIR :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTDIR1;

Foreign.C.Error.eNOTCONN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [107#];

Foreign.C.Error.eNOTCONN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTCONN1;

Foreign.C.Error.eNOTBLK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [15#];

Foreign.C.Error.eNOTBLK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTBLK1;

Foreign.C.Error.eNOSYS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [38#];

Foreign.C.Error.eNOSYS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOSYS1;

Foreign.C.Error.eNOSTR1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [60#];

Foreign.C.Error.eNOSTR :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOSTR1;

Foreign.C.Error.eNOSR1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [63#];

Foreign.C.Error.eNOSR :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOSR1;

Foreign.C.Error.eNOSPC1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [28#];

Foreign.C.Error.eNOSPC :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOSPC1;

Foreign.C.Error.eNOPROTOOPT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [92#];

Foreign.C.Error.eNOPROTOOPT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOPROTOOPT1;

Foreign.C.Error.eNONET1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [64#];

Foreign.C.Error.eNONET :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNONET1;

Foreign.C.Error.eNOMSG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [42#];

Foreign.C.Error.eNOMSG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOMSG1;

Foreign.C.Error.eNOMEM1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [12#];

Foreign.C.Error.eNOMEM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOMEM1;

Foreign.C.Error.eNOLINK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [67#];

Foreign.C.Error.eNOLINK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOLINK1;

Foreign.C.Error.eNOLCK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [37#];

Foreign.C.Error.eNOLCK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOLCK1;

Foreign.C.Error.eNOEXEC1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [8#];

Foreign.C.Error.eNOEXEC :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOEXEC1;

Foreign.C.Error.eNOENT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [2#];

Foreign.C.Error.eNOENT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOENT1;

Foreign.C.Error.eNODEV1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [19#];

Foreign.C.Error.eNODEV :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNODEV1;

Foreign.C.Error.eNODATA1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [61#];

Foreign.C.Error.eNODATA :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNODATA1;

Foreign.C.Error.eNOBUFS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [105#];

Foreign.C.Error.eNOBUFS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOBUFS1;

Foreign.C.Error.eNFILE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [23#];

Foreign.C.Error.eNFILE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNFILE1;

Foreign.C.Error.eNETUNREACH1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [101#];

Foreign.C.Error.eNETUNREACH :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNETUNREACH1;

Foreign.C.Error.eNETRESET1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [102#];

Foreign.C.Error.eNETRESET :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNETRESET1;

Foreign.C.Error.eNETDOWN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [100#];

Foreign.C.Error.eNETDOWN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNETDOWN1;

Foreign.C.Error.eNAMETOOLONG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [36#];

Foreign.C.Error.eNAMETOOLONG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNAMETOOLONG1;

Foreign.C.Error.eMULTIHOP1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [72#];

Foreign.C.Error.eMULTIHOP :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eMULTIHOP1;

Foreign.C.Error.eMSGSIZE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [90#];

Foreign.C.Error.eMSGSIZE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eMSGSIZE1;

Foreign.C.Error.eMLINK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [31#];

Foreign.C.Error.eMLINK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eMLINK1;

Foreign.C.Error.eMFILE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [24#];

Foreign.C.Error.eMFILE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eMFILE1;

Foreign.C.Error.eLOOP1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [40#];

Foreign.C.Error.eLOOP :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eLOOP1;

Foreign.C.Error.eISDIR1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [21#];

Foreign.C.Error.eISDIR :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eISDIR1;

Foreign.C.Error.eISCONN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [106#];

Foreign.C.Error.eISCONN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eISCONN1;

Foreign.C.Error.eIO1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [5#];

Foreign.C.Error.eIO :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eIO1;

Foreign.C.Error.eINVAL1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [22#];

Foreign.C.Error.eINVAL :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eINVAL1;

Foreign.C.Error.eINTR1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [4#];

Foreign.C.Error.eINTR :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eINTR1;

Foreign.C.Error.eINPROGRESS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [115#];

Foreign.C.Error.eINPROGRESS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eINPROGRESS1;

Foreign.C.Error.eILSEQ1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [84#];

Foreign.C.Error.eILSEQ :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eILSEQ1;

Foreign.C.Error.eIDRM1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [43#];

Foreign.C.Error.eIDRM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eIDRM1;

Foreign.C.Error.eHOSTUNREACH1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [113#];

Foreign.C.Error.eHOSTUNREACH :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eHOSTUNREACH1;

Foreign.C.Error.eHOSTDOWN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [112#];

Foreign.C.Error.eHOSTDOWN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eHOSTDOWN1;

Foreign.C.Error.eFTYPE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.eFBIG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [27#];

Foreign.C.Error.eFBIG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eFBIG1;

Foreign.C.Error.eFAULT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [14#];

Foreign.C.Error.eFAULT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eFAULT1;

Foreign.C.Error.eEXIST1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [17#];

Foreign.C.Error.eEXIST :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eEXIST1;

Foreign.C.Error.eDQUOT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [122#];

Foreign.C.Error.eDQUOT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eDQUOT1;

Foreign.C.Error.eDOM1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [33#];

Foreign.C.Error.eDOM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eDOM1;

Foreign.C.Error.eDIRTY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.eDESTADDRREQ1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [89#];

Foreign.C.Error.eDESTADDRREQ :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eDESTADDRREQ1;

Foreign.C.Error.eDEADLK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [35#];

Foreign.C.Error.eDEADLK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eDEADLK1;

Foreign.C.Error.eCONNRESET1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [104#];

Foreign.C.Error.eCONNRESET :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eCONNRESET1;

Foreign.C.Error.eCONNREFUSED1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [111#];

Foreign.C.Error.eCONNREFUSED :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eCONNREFUSED1;

Foreign.C.Error.eCONNABORTED1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [103#];

Foreign.C.Error.eCONNABORTED :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eCONNABORTED1;

Foreign.C.Error.eCOMM1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [70#];

Foreign.C.Error.eCOMM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eCOMM1;

Foreign.C.Error.eCHILD1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [10#];

Foreign.C.Error.eCHILD :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eCHILD1;

Foreign.C.Error.eBUSY1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [16#];

Foreign.C.Error.eBUSY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBUSY1;

Foreign.C.Error.eBADRPC :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.eBADMSG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [74#];

Foreign.C.Error.eBADMSG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADMSG1;

Foreign.C.Error.eBADF1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [9#];

Foreign.C.Error.eBADF :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADF1;

Foreign.C.Error.eALREADY1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [114#];

Foreign.C.Error.eALREADY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eALREADY1;

Foreign.C.Error.eAGAIN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eAGAIN1;

Foreign.C.Error.eAFNOSUPPORT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [97#];

Foreign.C.Error.eAFNOSUPPORT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eAFNOSUPPORT1;

Foreign.C.Error.eADV1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [68#];

Foreign.C.Error.eADV :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eADV1;

Foreign.C.Error.eADDRNOTAVAIL1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [99#];

Foreign.C.Error.eADDRNOTAVAIL :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eADDRNOTAVAIL1;

Foreign.C.Error.eADDRINUSE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [98#];

Foreign.C.Error.eADDRINUSE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eADDRINUSE1;

Foreign.C.Error.eACCES1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [13#];

Foreign.C.Error.eACCES :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eACCES1;

Foreign.C.Error.e2BIG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [7#];

Foreign.C.Error.e2BIG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.e2BIG1;

Foreign.C.Error.eOK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [0#];

Foreign.C.Error.eOK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eOK1;

Foreign.C.Error.$werrnoToIOError [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Base.Maybe GHC.IO.Handle.Types.Handle
     -> GHC.Base.Maybe GHC.Base.String
     -> GHC.IO.Exception.IOError
[GblId, Arity=4, Str=<L,U><S,U><L,U><L,U>, Unf=OtherCon []] =
    [] \r [w_s92TR ww_s92TS w1_s92TT w2_s92TU]
        case
            case noDuplicate# [GHC.Prim.realWorld#] of s'_s92TV {
              __DEFAULT ->
                  case __pkg_ccall base-4.11.0.0 [ww_s92TS s'_s92TV] of {
                    (#,#) ds_s92TY [Occ=Once] ds1_s92TZ [Occ=Once] ->
                        case GHC.IO.Encoding.getForeignEncoding ds_s92TY of {
                          (#,#) ipv_s92U1 [Occ=Once] ipv1_s92U2 [Occ=Once] ->
                              case GHC.Foreign.$wpeekCString ipv1_s92U2 ds1_s92TZ ipv_s92U1 of {
                                (#,#) ipv2_s92U4 [Occ=Once] ipv3_s92U5 [Occ=Once] ->
                                    let {
                                      sat_s92U8 [Occ=Once] :: Foreign.C.Types.CInt
                                      [LclId] =
                                          CCCS GHC.Int.I32#! [ww_s92TS]; } in
                                    let {
                                      sat_s92U9 [Occ=Once] :: GHC.Base.Maybe Foreign.C.Types.CInt
                                      [LclId] =
                                          CCCS GHC.Base.Just! [sat_s92U8]; } in
                                    let {
                                      sat_s92U7 [Occ=Once] :: GHC.IO.Exception.IOErrorType
                                      [LclId] =
                                          [ww_s92TS] \u []
                                              case ww_s92TS of {
                                                __DEFAULT -> GHC.IO.Exception.OtherError [];
                                                1# -> GHC.IO.Exception.PermissionDenied [];
                                                2# -> GHC.IO.Exception.NoSuchThing [];
                                                3# -> GHC.IO.Exception.NoSuchThing [];
                                                4# -> GHC.IO.Exception.Interrupted [];
                                                5# -> GHC.IO.Exception.HardwareFault [];
                                                6# -> GHC.IO.Exception.NoSuchThing [];
                                                7# -> GHC.IO.Exception.ResourceExhausted [];
                                                8# -> GHC.IO.Exception.InvalidArgument [];
                                                9# -> GHC.IO.Exception.InvalidArgument [];
                                                10# -> GHC.IO.Exception.NoSuchThing [];
                                                11# -> GHC.IO.Exception.ResourceExhausted [];
                                                12# -> GHC.IO.Exception.ResourceExhausted [];
                                                13# -> GHC.IO.Exception.PermissionDenied [];
                                                15# -> GHC.IO.Exception.InvalidArgument [];
                                                16# -> GHC.IO.Exception.ResourceBusy [];
                                                17# -> GHC.IO.Exception.AlreadyExists [];
                                                18# -> GHC.IO.Exception.UnsupportedOperation [];
                                                19# -> GHC.IO.Exception.UnsupportedOperation [];
                                                20# -> GHC.IO.Exception.InappropriateType [];
                                                21# -> GHC.IO.Exception.InappropriateType [];
                                                22# -> GHC.IO.Exception.InvalidArgument [];
                                                23# -> GHC.IO.Exception.ResourceExhausted [];
                                                24# -> GHC.IO.Exception.ResourceExhausted [];
                                                25# -> GHC.IO.Exception.IllegalOperation [];
                                                26# -> GHC.IO.Exception.ResourceBusy [];
                                                27# -> GHC.IO.Exception.PermissionDenied [];
                                                28# -> GHC.IO.Exception.ResourceExhausted [];
                                                29# -> GHC.IO.Exception.UnsupportedOperation [];
                                                30# -> GHC.IO.Exception.PermissionDenied [];
                                                31# -> GHC.IO.Exception.ResourceExhausted [];
                                                32# -> GHC.IO.Exception.ResourceVanished [];
                                                33# -> GHC.IO.Exception.InvalidArgument [];
                                                34# -> GHC.IO.Exception.UnsupportedOperation [];
                                                35# -> GHC.IO.Exception.ResourceBusy [];
                                                36# -> GHC.IO.Exception.InvalidArgument [];
                                                37# -> GHC.IO.Exception.ResourceExhausted [];
                                                38# -> GHC.IO.Exception.UnsupportedOperation [];
                                                39# -> GHC.IO.Exception.UnsatisfiedConstraints [];
                                                40# -> GHC.IO.Exception.InvalidArgument [];
                                                42# -> GHC.IO.Exception.NoSuchThing [];
                                                43# -> GHC.IO.Exception.ResourceVanished [];
                                                60# -> GHC.IO.Exception.InvalidArgument [];
                                                61# -> GHC.IO.Exception.NoSuchThing [];
                                                62# -> GHC.IO.Exception.TimeExpired [];
                                                63# -> GHC.IO.Exception.ResourceExhausted [];
                                                64# -> GHC.IO.Exception.NoSuchThing [];
                                                66# -> GHC.IO.Exception.IllegalOperation [];
                                                67# -> GHC.IO.Exception.ResourceVanished [];
                                                69# -> GHC.IO.Exception.UnsatisfiedConstraints [];
                                                70# -> GHC.IO.Exception.ResourceVanished [];
                                                71# -> GHC.IO.Exception.ProtocolError [];
                                                72# -> GHC.IO.Exception.UnsupportedOperation [];
                                                74# -> GHC.IO.Exception.InappropriateType [];
                                                78# -> GHC.IO.Exception.ResourceVanished [];
                                                84# -> GHC.IO.Exception.InvalidArgument [];
                                                87# -> GHC.IO.Exception.ResourceExhausted [];
                                                88# -> GHC.IO.Exception.InvalidArgument [];
                                                89# -> GHC.IO.Exception.InvalidArgument [];
                                                90# -> GHC.IO.Exception.ResourceExhausted [];
                                                91# -> GHC.IO.Exception.ProtocolError [];
                                                92# -> GHC.IO.Exception.UnsupportedOperation [];
                                                93# -> GHC.IO.Exception.ProtocolError [];
                                                94# -> GHC.IO.Exception.UnsupportedOperation [];
                                                95# -> GHC.IO.Exception.UnsupportedOperation [];
                                                96# -> GHC.IO.Exception.UnsupportedOperation [];
                                                97# -> GHC.IO.Exception.UnsupportedOperation [];
                                                98# -> GHC.IO.Exception.ResourceBusy [];
                                                99# -> GHC.IO.Exception.UnsupportedOperation [];
                                                100# -> GHC.IO.Exception.ResourceVanished [];
                                                101# -> GHC.IO.Exception.NoSuchThing [];
                                                102# -> GHC.IO.Exception.ResourceVanished [];
                                                104# -> GHC.IO.Exception.ResourceVanished [];
                                                105# -> GHC.IO.Exception.ResourceExhausted [];
                                                106# -> GHC.IO.Exception.AlreadyExists [];
                                                107# -> GHC.IO.Exception.InvalidArgument [];
                                                108# -> GHC.IO.Exception.IllegalOperation [];
                                                109# -> GHC.IO.Exception.ResourceExhausted [];
                                                110# -> GHC.IO.Exception.TimeExpired [];
                                                111# -> GHC.IO.Exception.NoSuchThing [];
                                                112# -> GHC.IO.Exception.NoSuchThing [];
                                                113# -> GHC.IO.Exception.NoSuchThing [];
                                                114# -> GHC.IO.Exception.AlreadyExists [];
                                                115# -> GHC.IO.Exception.AlreadyExists [];
                                                116# -> GHC.IO.Exception.ResourceVanished [];
                                                122# -> GHC.IO.Exception.PermissionDenied [];
                                              }; } in
                                    let {
                                      sat_s92Ua [Occ=Once] :: GHC.IO.Exception.IOException
                                      [LclId] =
                                          CCCS GHC.IO.Exception.IOError! [w1_s92TT
                                                                          sat_s92U7
                                                                          w_s92TR
                                                                          ipv3_s92U5
                                                                          sat_s92U9
                                                                          w2_s92TU];
                                    } in  (#,#) [ipv2_s92U4 sat_s92Ua];
                              };
                        };
                  };
            }
        of
        { (#,#) _ [Occ=Dead] ipv1_s92Ud [Occ=Once] -> ipv1_s92Ud;
        };

Foreign.C.Error.errnoToIOError [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> Foreign.C.Error.Errno
     -> GHC.Base.Maybe GHC.IO.Handle.Types.Handle
     -> GHC.Base.Maybe GHC.Base.String
     -> GHC.IO.Exception.IOError
[GblId,
 Arity=4,
 Str=<L,U><S(S),1*U(U)><L,U><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s92Ue w1_s92Uf w2_s92Ug w3_s92Uh]
        case w1_s92Uf of {
          GHC.Int.I32# ww1_s92Uj [Occ=Once] ->
              Foreign.C.Error.$werrnoToIOError
                  w_s92Ue ww1_s92Uj w2_s92Ug w3_s92Uh;
        };

Foreign.C.Error.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId, Arity=3, Str=<B,U><B,U><B,U>x, Unf=OtherCon []] =
    [] \r [w_s92Uk ww_s92Ul w1_s92Um]
        let {
          sat_s92Uo [Occ=Once] :: GHC.Exception.SomeException
          [LclId] =
              [w_s92Uk ww_s92Ul] \u []
                  let {
                    sat_s92Un [Occ=Once] :: GHC.IO.Exception.IOException
                    [LclId] =
                        [w_s92Uk ww_s92Ul] \u []
                            Foreign.C.Error.$werrnoToIOError
                                w_s92Uk ww_s92Ul GHC.Base.Nothing GHC.Base.Nothing;
                  } in 
                    GHC.IO.Exception.$fExceptionIOException_$ctoException sat_s92Un;
        } in  raiseIO# [sat_s92Uo w1_s92Um];

Foreign.C.Error.throwErrno1
  :: forall a.
     GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [loc_s92Up s_s92Uq]
        case __pkg_ccall base-4.11.0.0 [s_s92Uq] of {
          (#,#) ds_s92Ut [Occ=Once] ds1_s92Uu [Occ=Once] ->
              case narrow32Int# [ds1_s92Uu] of sat_s92Uv {
                __DEFAULT -> Foreign.C.Error.$wlvl loc_s92Up sat_s92Uv ds_s92Ut;
              };
        };

Foreign.C.Error.throwErrno
  :: forall a. GHC.Base.String -> GHC.Types.IO a
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] Foreign.C.Error.throwErrno1 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIf1
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=4,
 Str=<L,1*C1(U)><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s92Uw loc_s92Ux f_s92Uy s_s92Uz]
        case f_s92Uy s_s92Uz of ds1_s92UA {
          (#,#) ipv_s92UB [Occ=Once] ipv1_s92UC [Occ=Once] ->
              case pred_s92Uw ipv1_s92UC of {
                GHC.Types.False -> ds1_s92UA;
                GHC.Types.True -> Foreign.C.Error.throwErrno1 loc_s92Ux ipv_s92UB;
              };
        };

Foreign.C.Error.throwErrnoIf
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=4,
 Str=<L,1*C1(U)><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIf1 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIf_1
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<L,1*C1(U)><L,U><C(S(SL)),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s92UE loc_s92UF f_s92UG eta1_s92UH]
        case f_s92UG eta1_s92UH of {
          (#,#) ipv_s92UJ [Occ=Once*] ipv1_s92UK [Occ=Once] ->
              case pred_s92UE ipv1_s92UK of {
                GHC.Types.False -> (#,#) [ipv_s92UJ GHC.Tuple.()];
                GHC.Types.True ->
                    case __pkg_ccall base-4.11.0.0 [ipv_s92UJ] of {
                      (#,#) ds_s92UO [Occ=Once] ds2_s92UP [Occ=Once] ->
                          case narrow32Int# [ds2_s92UP] of sat_s92UQ {
                            __DEFAULT -> Foreign.C.Error.$wlvl loc_s92UF sat_s92UQ ds_s92UO;
                          };
                    };
              };
        };

Foreign.C.Error.throwErrnoIf_
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Str=<L,1*C1(U)><L,U><C(S(SL)),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIf_1 eta_B4 eta_B3 eta_B2 eta_B1;

sat_s92US :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1#];

sat_s92UT :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_s92US GHC.Types.[]];

Foreign.C.Error.throwErrnoIfMinus2 :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_s92UT;

Foreign.C.Error.throwErrnoIfMinus1_
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s92UU $dNum_s92UV]
        let {
          ds_s92UW [Occ=OnceL] :: a_a91TT
          [LclId] =
              [$dNum_s92UV] \u []
                  let {
                    sat_s92UX [Occ=Once] :: a_a91TT
                    [LclId] =
                        [$dNum_s92UV] \u []
                            GHC.Num.fromInteger $dNum_s92UV Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s92UV sat_s92UX; } in
        let {
          sat_s92Vb [Occ=Once]
            :: GHC.Base.String
               -> GHC.Types.IO a_a91TT
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [$dEq_s92UU ds_s92UW] \r [loc_s92UY f_s92UZ eta1_s92V0]
                  case f_s92UZ eta1_s92V0 of {
                    (#,#) ipv_s92V2 [Occ=Once*] ipv1_s92V3 [Occ=Once] ->
                        case GHC.Classes.== $dEq_s92UU ipv1_s92V3 ds_s92UW of {
                          GHC.Types.False -> (#,#) [ipv_s92V2 GHC.Tuple.()];
                          GHC.Types.True ->
                              case __pkg_ccall base-4.11.0.0 [ipv_s92V2] of {
                                (#,#) ds2_s92V7 [Occ=Once] ds3_s92V8 [Occ=Once] ->
                                    case narrow32Int# [ds3_s92V8] of sat_s92V9 {
                                      __DEFAULT ->
                                          Foreign.C.Error.$wlvl loc_s92UY sat_s92V9 ds2_s92V7;
                                    };
                              };
                        };
                  };
        } in  sat_s92Vb;

Foreign.C.Error.throwErrnoIfMinus1
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s92Vc $dNum_s92Vd]
        let {
          ds_s92Ve [Occ=OnceL] :: a_a91U5
          [LclId] =
              [$dNum_s92Vd] \u []
                  let {
                    sat_s92Vf [Occ=Once] :: a_a91U5
                    [LclId] =
                        [$dNum_s92Vd] \u []
                            GHC.Num.fromInteger $dNum_s92Vd Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s92Vd sat_s92Vf; } in
        let {
          sat_s92Vn [Occ=Once]
            :: GHC.Base.String
               -> GHC.Types.IO a_a91U5
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a91U5 #)
          [LclId] =
              [$dEq_s92Vc ds_s92Ve] \r [loc_s92Vg f_s92Vh s_s92Vi]
                  case f_s92Vh s_s92Vi of ds1_s92Vj {
                    (#,#) ipv_s92Vk [Occ=Once] ipv1_s92Vl [Occ=Once] ->
                        case GHC.Classes.== $dEq_s92Vc ipv1_s92Vl ds_s92Ve of {
                          GHC.Types.False -> ds1_s92Vj;
                          GHC.Types.True -> Foreign.C.Error.throwErrno1 loc_s92Vg ipv_s92Vk;
                        };
                  };
        } in  sat_s92Vn;

Foreign.C.Error.throwErrnoIfNull1
  :: forall a.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<L,U><C(S(LS(S))),1*C1(U(U,U(U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [loc_s92Vo f_s92Vp s_s92Vq]
        case f_s92Vp s_s92Vq of ds1_s92Vr {
          (#,#) ipv_s92Vs [Occ=Once] ipv1_s92Vt [Occ=Once!] ->
              case ipv1_s92Vt of {
                GHC.Ptr.Ptr a1_s92Vv [Occ=Once] ->
                    case eqAddr# [a1_s92Vv __NULL] of {
                      __DEFAULT -> ds1_s92Vr;
                      1# -> Foreign.C.Error.throwErrno1 loc_s92Vo ipv_s92Vs;
                    };
              };
        };

Foreign.C.Error.throwErrnoIfNull
  :: forall a.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a) -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Str=<L,U><C(S(LS(S))),1*C1(U(U,U(U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfNull1 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfMinus1Retry2 [Occ=LoopBreaker]
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=4,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s92Vx loc_s92Vy f_s92Vz s_s92VA]
        case f_s92Vz s_s92VA of ds1_s92VB {
          (#,#) ipv_s92VC [Occ=Once] ipv1_s92VD [Occ=Once] ->
              case pred_s92Vx ipv1_s92VD of {
                GHC.Types.False -> ds1_s92VB;
                GHC.Types.True ->
                    case __pkg_ccall base-4.11.0.0 [ipv_s92VC] of {
                      (#,#) ds_s92VH [Occ=Once*] ds2_s92VI [Occ=Once] ->
                          case narrow32Int# [ds2_s92VI] of {
                            __DEFAULT -> Foreign.C.Error.throwErrno1 loc_s92Vy ds_s92VH;
                            4# ->
                                Foreign.C.Error.throwErrnoIfMinus1Retry2
                                    pred_s92Vx loc_s92Vy f_s92Vz ds_s92VH;
                          };
                    };
              };
        };

Foreign.C.Error.throwErrnoIfRetry
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=4,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfMinus1Retry2
            eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfRetry_1
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s92VK loc_s92VL f_s92VM eta1_s92VN]
        case
            Foreign.C.Error.throwErrnoIfMinus1Retry2
                pred_s92VK loc_s92VL f_s92VM eta1_s92VN
        of
        { (#,#) ipv_s92VP [Occ=Once] _ [Occ=Dead] ->
              (#,#) [ipv_s92VP GHC.Tuple.()];
        };

Foreign.C.Error.throwErrnoIfRetry_
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfRetry_1 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfMinus1Retry_
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s92VR $dNum_s92VS]
        let {
          ds_s92VT [Occ=OnceL] :: a_a91UP
          [LclId] =
              [$dNum_s92VS] \u []
                  let {
                    sat_s92VU [Occ=Once] :: a_a91UP
                    [LclId] =
                        [$dNum_s92VS] \u []
                            GHC.Num.fromInteger $dNum_s92VS Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s92VS sat_s92VU; } in
        let {
          pred_s92VV [Occ=OnceL, Dmd=<L,C(U)>] :: a_a91UP -> GHC.Types.Bool
          [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
              [$dEq_s92VR ds_s92VT] \r [ds1_s92VW]
                  GHC.Classes.== $dEq_s92VR ds1_s92VW ds_s92VT; } in
        let {
          sat_s92W3 [Occ=Once]
            :: GHC.Base.String
               -> GHC.Types.IO a_a91UP
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [pred_s92VV] \r [loc_s92VX f_s92VY eta1_s92VZ]
                  case
                      Foreign.C.Error.throwErrnoIfMinus1Retry2
                          pred_s92VV loc_s92VX f_s92VY eta1_s92VZ
                  of
                  { (#,#) ipv_s92W1 [Occ=Once] _ [Occ=Dead] ->
                        (#,#) [ipv_s92W1 GHC.Tuple.()];
                  };
        } in  sat_s92W3;

Foreign.C.Error.throwErrnoIfMinus1Retry1
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s92W4 $dNum_s92W5]
        let {
          ds_s92W6 [Occ=OnceL] :: a_a91V1
          [LclId] =
              [$dNum_s92W5] \u []
                  let {
                    sat_s92W7 [Occ=Once] :: a_a91V1
                    [LclId] =
                        [$dNum_s92W5] \u []
                            GHC.Num.fromInteger $dNum_s92W5 Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s92W5 sat_s92W7; } in
        let {
          sat_s92W9 [Occ=Once] :: a_a91V1 -> GHC.Types.Bool
          [LclId] =
              [$dEq_s92W4 ds_s92W6] \r [ds1_s92W8]
                  GHC.Classes.== $dEq_s92W4 ds1_s92W8 ds_s92W6;
        } in  Foreign.C.Error.throwErrnoIfMinus1Retry2 sat_s92W9;

Foreign.C.Error.throwErrnoIfMinus1Retry
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfMinus1Retry1 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfNullRetry2
  :: forall a. GHC.Ptr.Ptr a -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [ds_s92Wa]
        case ds_s92Wa of {
          GHC.Ptr.Ptr a1_s92Wc [Occ=Once] ->
              case eqAddr# [a1_s92Wc __NULL] of sat_s92Wd {
                __DEFAULT -> tagToEnum# [sat_s92Wd];
              };
        };

Foreign.C.Error.throwErrnoIfNullRetry1
  :: forall a.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId, Arity=3, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfMinus1Retry2
            Foreign.C.Error.throwErrnoIfNullRetry2 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfNullRetry
  :: forall a.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a) -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId, Arity=3, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfNullRetry1 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2 [Occ=LoopBreaker]
  :: forall a b.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Types.IO b
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=5,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><L,C(U(U,A))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s92We loc_s92Wf f_s92Wg on_block_s92Wh s_s92Wi]
        case f_s92Wg s_s92Wi of ds1_s92Wj {
          (#,#) ipv_s92Wk [Occ=Once] ipv1_s92Wl [Occ=Once] ->
              case pred_s92We ipv1_s92Wl of {
                GHC.Types.False -> ds1_s92Wj;
                GHC.Types.True ->
                    case __pkg_ccall base-4.11.0.0 [ipv_s92Wk] of {
                      (#,#) ds_s92Wp [Occ=Once*] ds2_s92Wq [Occ=Once] ->
                          case narrow32Int# [ds2_s92Wq] of {
                            __DEFAULT -> Foreign.C.Error.throwErrno1 loc_s92Wf ds_s92Wp;
                            4# ->
                                Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                                    pred_s92We loc_s92Wf f_s92Wg on_block_s92Wh ds_s92Wp;
                            11# ->
                                case on_block_s92Wh ds_s92Wp of {
                                  (#,#) ipv2_s92Wt [Occ=Once] _ [Occ=Dead] ->
                                      Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                                          pred_s92We loc_s92Wf f_s92Wg on_block_s92Wh ipv2_s92Wt;
                                };
                          };
                    };
              };
        };

Foreign.C.Error.throwErrnoIfRetryMayBlock
  :: forall a b.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Types.IO b
     -> GHC.Types.IO a
[GblId,
 Arity=5,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><L,C(U(U,A))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
            eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfRetryMayBlock_1
  :: forall a b.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Types.IO b
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><L,C(U(U,A))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s92Wv loc_s92Ww f_s92Wx on_block_s92Wy eta1_s92Wz]
        case
            Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                pred_s92Wv loc_s92Ww f_s92Wx on_block_s92Wy eta1_s92Wz
        of
        { (#,#) ipv_s92WB [Occ=Once] _ [Occ=Dead] ->
              (#,#) [ipv_s92WB GHC.Tuple.()];
        };

Foreign.C.Error.throwErrnoIfRetryMayBlock_
  :: forall a b.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Types.IO b
     -> GHC.Types.IO ()
[GblId,
 Arity=5,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><L,C(U(U,A))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfRetryMayBlock_1
            eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_
  :: forall a b.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.Types.IO a -> GHC.Types.IO b -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s92WD $dNum_s92WE]
        let {
          ds_s92WF [Occ=OnceL] :: a_a91VZ
          [LclId] =
              [$dNum_s92WE] \u []
                  let {
                    sat_s92WG [Occ=Once] :: a_a91VZ
                    [LclId] =
                        [$dNum_s92WE] \u []
                            GHC.Num.fromInteger $dNum_s92WE Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s92WE sat_s92WG; } in
        let {
          pred_s92WH [Occ=OnceL, Dmd=<L,C(U)>] :: a_a91VZ -> GHC.Types.Bool
          [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
              [$dEq_s92WD ds_s92WF] \r [ds1_s92WI]
                  GHC.Classes.== $dEq_s92WD ds1_s92WI ds_s92WF; } in
        let {
          sat_s92WQ [Occ=Once]
            :: GHC.Base.String
               -> GHC.Types.IO a_a91VZ
               -> GHC.Types.IO b_a91W0
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [pred_s92WH] \r [loc_s92WJ f_s92WK on_block_s92WL eta1_s92WM]
                  case
                      Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                          pred_s92WH loc_s92WJ f_s92WK on_block_s92WL eta1_s92WM
                  of
                  { (#,#) ipv_s92WO [Occ=Once] _ [Occ=Dead] ->
                        (#,#) [ipv_s92WO GHC.Tuple.()];
                  };
        } in  sat_s92WQ;

Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1
  :: forall a b.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Types.IO b
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s92WR $dNum_s92WS]
        let {
          ds_s92WT [Occ=OnceL] :: a_a91Wd
          [LclId] =
              [$dNum_s92WS] \u []
                  let {
                    sat_s92WU [Occ=Once] :: a_a91Wd
                    [LclId] =
                        [$dNum_s92WS] \u []
                            GHC.Num.fromInteger $dNum_s92WS Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s92WS sat_s92WU; } in
        let {
          sat_s92WW [Occ=Once] :: a_a91Wd -> GHC.Types.Bool
          [LclId] =
              [$dEq_s92WR ds_s92WT] \r [ds1_s92WV]
                  GHC.Classes.== $dEq_s92WR ds1_s92WV ds_s92WT;
        } in  Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2 sat_s92WW;

Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock
  :: forall a b.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.Types.IO a -> GHC.Types.IO b -> GHC.Types.IO a
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfNullRetryMayBlock1
  :: forall a b.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Types.IO b
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId, Arity=4, Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
            Foreign.C.Error.throwErrnoIfNullRetry2 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfNullRetryMayBlock
  :: forall a b.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Types.IO b
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId, Arity=4, Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfNullRetryMayBlock1
            eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.$wlvl1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.IO.FilePath
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId, Arity=4, Str=<B,U><B,U><B,U><B,U>x, Unf=OtherCon []] =
    [] \r [w_s92WX ww_s92WY w1_s92WZ w2_s92X0]
        let {
          sat_s92X3 [Occ=Once] :: GHC.Exception.SomeException
          [LclId] =
              [w_s92WX ww_s92WY w1_s92WZ] \u []
                  let {
                    sat_s92X2 [Occ=Once] :: GHC.IO.Exception.IOException
                    [LclId] =
                        [w_s92WX ww_s92WY w1_s92WZ] \u []
                            let {
                              sat_s92X1 [Occ=Once] :: GHC.Base.Maybe GHC.Base.String
                              [LclId] =
                                  CCCS GHC.Base.Just! [w1_s92WZ];
                            } in 
                              Foreign.C.Error.$werrnoToIOError
                                  w_s92WX ww_s92WY GHC.Base.Nothing sat_s92X1;
                  } in 
                    GHC.IO.Exception.$fExceptionIOException_$ctoException sat_s92X2;
        } in  raiseIO# [sat_s92X3 w2_s92X0];

Foreign.C.Error.throwErrnoPath1
  :: forall a.
     GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId, Arity=3, Str=<L,U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [loc_s92X4 path_s92X5 s_s92X6]
        case __pkg_ccall base-4.11.0.0 [s_s92X6] of {
          (#,#) ds_s92X9 [Occ=Once] ds1_s92Xa [Occ=Once] ->
              case narrow32Int# [ds1_s92Xa] of sat_s92Xb {
                __DEFAULT ->
                    Foreign.C.Error.$wlvl1 loc_s92X4 sat_s92Xb path_s92X5 ds_s92X9;
              };
        };

Foreign.C.Error.throwErrnoPath
  :: forall a. GHC.Base.String -> GHC.IO.FilePath -> GHC.Types.IO a
[GblId, Arity=3, Str=<L,U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoPath1 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoPathIf1
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=5,
 Str=<L,1*C1(U)><L,U><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s92Xc loc_s92Xd path_s92Xe f_s92Xf s_s92Xg]
        case f_s92Xf s_s92Xg of ds1_s92Xh {
          (#,#) ipv_s92Xi [Occ=Once] ipv1_s92Xj [Occ=Once] ->
              case pred_s92Xc ipv1_s92Xj of {
                GHC.Types.False -> ds1_s92Xh;
                GHC.Types.True ->
                    Foreign.C.Error.throwErrnoPath1 loc_s92Xd path_s92Xe ipv_s92Xi;
              };
        };

Foreign.C.Error.throwErrnoPathIf
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO a
     -> GHC.Types.IO a
[GblId,
 Arity=5,
 Str=<L,1*C1(U)><L,U><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoPathIf1
            eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoPathIf_1
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Str=<L,1*C1(U)><L,U><L,U><C(S(SL)),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s92Xl loc_s92Xm path_s92Xn f_s92Xo eta1_s92Xp]
        case f_s92Xo eta1_s92Xp of {
          (#,#) ipv_s92Xr [Occ=Once*] ipv1_s92Xs [Occ=Once] ->
              case pred_s92Xl ipv1_s92Xs of {
                GHC.Types.False -> (#,#) [ipv_s92Xr GHC.Tuple.()];
                GHC.Types.True ->
                    case __pkg_ccall base-4.11.0.0 [ipv_s92Xr] of {
                      (#,#) ds_s92Xw [Occ=Once] ds2_s92Xx [Occ=Once] ->
                          case narrow32Int# [ds2_s92Xx] of sat_s92Xy {
                            __DEFAULT ->
                                Foreign.C.Error.$wlvl1 loc_s92Xm sat_s92Xy path_s92Xn ds_s92Xw;
                          };
                    };
              };
        };

Foreign.C.Error.throwErrnoPathIf_
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO a
     -> GHC.Types.IO ()
[GblId,
 Arity=5,
 Str=<L,1*C1(U)><L,U><L,U><C(S(SL)),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoPathIf_1
            eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoPathIfMinus1_
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.IO.FilePath -> GHC.Types.IO a -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s92XA $dNum_s92XB]
        let {
          ds_s92XC [Occ=OnceL] :: a_a91X4
          [LclId] =
              [$dNum_s92XB] \u []
                  let {
                    sat_s92XD [Occ=Once] :: a_a91X4
                    [LclId] =
                        [$dNum_s92XB] \u []
                            GHC.Num.fromInteger $dNum_s92XB Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s92XB sat_s92XD; } in
        let {
          sat_s92XS [Occ=Once]
            :: GHC.Base.String
               -> GHC.IO.FilePath
               -> GHC.Types.IO a_a91X4
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [$dEq_s92XA ds_s92XC] \r [loc_s92XE path_s92XF f_s92XG eta1_s92XH]
                  case f_s92XG eta1_s92XH of {
                    (#,#) ipv_s92XJ [Occ=Once*] ipv1_s92XK [Occ=Once] ->
                        case GHC.Classes.== $dEq_s92XA ipv1_s92XK ds_s92XC of {
                          GHC.Types.False -> (#,#) [ipv_s92XJ GHC.Tuple.()];
                          GHC.Types.True ->
                              case __pkg_ccall base-4.11.0.0 [ipv_s92XJ] of {
                                (#,#) ds2_s92XO [Occ=Once] ds3_s92XP [Occ=Once] ->
                                    case narrow32Int# [ds3_s92XP] of sat_s92XQ {
                                      __DEFAULT ->
                                          Foreign.C.Error.$wlvl1
                                              loc_s92XE sat_s92XQ path_s92XF ds2_s92XO;
                                    };
                              };
                        };
                  };
        } in  sat_s92XS;

Foreign.C.Error.throwErrnoPathIfNull1
  :: forall a.
     GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=4,
 Str=<L,U><L,U><C(S(LS(S))),1*C1(U(U,U(U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [loc_s92XT path_s92XU f_s92XV s_s92XW]
        case f_s92XV s_s92XW of ds1_s92XX {
          (#,#) ipv_s92XY [Occ=Once] ipv1_s92XZ [Occ=Once!] ->
              case ipv1_s92XZ of {
                GHC.Ptr.Ptr a1_s92Y1 [Occ=Once] ->
                    case eqAddr# [a1_s92Y1 __NULL] of {
                      __DEFAULT -> ds1_s92XX;
                      1# ->
                          Foreign.C.Error.throwErrnoPath1 loc_s92XT path_s92XU ipv_s92XY;
                    };
              };
        };

Foreign.C.Error.throwErrnoPathIfNull
  :: forall a.
     GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=4,
 Str=<L,U><L,U><C(S(LS(S))),1*C1(U(U,U(U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoPathIfNull1 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoPathIfMinus1
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.IO.FilePath -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s92Y3 $dNum_s92Y4]
        let {
          ds_s92Y5 [Occ=OnceL] :: a_a91Xn
          [LclId] =
              [$dNum_s92Y4] \u []
                  let {
                    sat_s92Y6 [Occ=Once] :: a_a91Xn
                    [LclId] =
                        [$dNum_s92Y4] \u []
                            GHC.Num.fromInteger $dNum_s92Y4 Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s92Y4 sat_s92Y6; } in
        let {
          sat_s92Yf [Occ=Once]
            :: GHC.Base.String
               -> GHC.IO.FilePath
               -> GHC.Types.IO a_a91Xn
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a91Xn #)
          [LclId] =
              [$dEq_s92Y3 ds_s92Y5] \r [loc_s92Y7 path_s92Y8 f_s92Y9 s_s92Ya]
                  case f_s92Y9 s_s92Ya of ds1_s92Yb {
                    (#,#) ipv_s92Yc [Occ=Once] ipv1_s92Yd [Occ=Once] ->
                        case GHC.Classes.== $dEq_s92Y3 ipv1_s92Yd ds_s92Y5 of {
                          GHC.Types.False -> ds1_s92Yb;
                          GHC.Types.True ->
                              Foreign.C.Error.throwErrnoPath1 loc_s92Y7 path_s92Y8 ipv_s92Yc;
                        };
                  };
        } in  sat_s92Yf;


==================== STG syntax: ====================
2018-03-16 16:04:11.485783289 UTC

Foreign.C.Error.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Foreign.C.Error.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Error.$trModule4];

Foreign.C.Error.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.C.Error"#;

Foreign.C.Error.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Error.$trModule2];

Foreign.C.Error.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.C.Error.$trModule3
                                     Foreign.C.Error.$trModule1];

$krep_r92Th :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCInt
                                              GHC.Types.[]];

Foreign.C.Error.$tcErrno2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Errno"#;

Foreign.C.Error.$tcErrno1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Error.$tcErrno2];

Foreign.C.Error.$tcErrno :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9614618910057470603##
                                    5790003468206630810##
                                    Foreign.C.Error.$trModule
                                    Foreign.C.Error.$tcErrno1
                                    0#
                                    GHC.Types.krep$*];

$krep1_r92Ti :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Error.$tcErrno
                                              GHC.Types.[]];

Foreign.C.Error.$tc'Errno1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r92Th $krep1_r92Ti];

Foreign.C.Error.$tc'Errno3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Errno"#;

Foreign.C.Error.$tc'Errno2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Error.$tc'Errno3];

Foreign.C.Error.$tc'Errno :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [18175500743799072511##
                                    6332857689812514354##
                                    Foreign.C.Error.$trModule
                                    Foreign.C.Error.$tc'Errno2
                                    0#
                                    Foreign.C.Error.$tc'Errno1];

Foreign.C.Error.getErrno1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Error.Errno #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
          Unit# ds1_s92To [Occ=Once] ->
              case narrow32Int# [ds1_s92To] of sat_s92Tp {
                __DEFAULT ->
                    let {
                      sat_s92Tq [Occ=Once] :: Foreign.C.Error.Errno
                      [LclId] =
                          CCCS GHC.Int.I32#! [sat_s92Tp];
                    } in  Unit# [sat_s92Tq];
              };
        };

Foreign.C.Error.getErrno :: GHC.Types.IO Foreign.C.Error.Errno
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E] Foreign.C.Error.getErrno1 GHC.Prim.void#;

Foreign.C.Error.resetErrno1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        case __pkg_ccall base-4.11.0.0 [0# GHC.Prim.void#] of {
          (##) -> Unit# [GHC.Tuple.()];
        };

Foreign.C.Error.resetErrno :: GHC.Types.IO ()
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E] Foreign.C.Error.resetErrno1 GHC.Prim.void#;

Foreign.C.Error.isValidErrno
  :: Foreign.C.Error.Errno -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [ds_s92Tv]
        case ds_s92Tv of {
          GHC.Int.I32# x_s92Tx [Occ=Once!] ->
              case x_s92Tx of {
                __DEFAULT -> GHC.Types.True [];
                -1# -> GHC.Types.False [];
              };
        };

Foreign.C.Error.$fEqErrno_$c==
  :: Foreign.C.Error.Errno -> Foreign.C.Error.Errno -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)><L,1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [errno1_s92Tz errno2_s92TA]
        case errno1_s92Tz of {
          GHC.Int.I32# x_s92TC [Occ=Once!] ->
              case x_s92TC of wild1_s92TD {
                __DEFAULT ->
                    case errno2_s92TA of {
                      GHC.Int.I32# x1_s92TF [Occ=Once!] ->
                          case x1_s92TF of wild3_s92TG {
                            __DEFAULT ->
                                case ==# [wild1_s92TD wild3_s92TG] of sat_s92TH {
                                  __DEFAULT -> tagToEnum# [sat_s92TH];
                                };
                            -1# -> GHC.Types.False [];
                          };
                    };
                -1# -> GHC.Types.False [];
              };
        };

Foreign.C.Error.$fEqErrno_$c/= [InlPrag=INLINE (sat-args=2)]
  :: Foreign.C.Error.Errno -> Foreign.C.Error.Errno -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)><L,1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [eta_s92TI eta1_s92TJ]
        case eta_s92TI of {
          GHC.Int.I32# x_s92TL [Occ=Once!] ->
              case x_s92TL of wild1_s92TM {
                __DEFAULT ->
                    case eta1_s92TJ of {
                      GHC.Int.I32# x1_s92TO [Occ=Once!] ->
                          case x1_s92TO of wild3_s92TP {
                            __DEFAULT ->
                                case ==# [wild1_s92TM wild3_s92TP] of {
                                  __DEFAULT -> GHC.Types.True [];
                                  1# -> GHC.Types.False [];
                                };
                            -1# -> GHC.Types.True [];
                          };
                    };
                -1# -> GHC.Types.True [];
              };
        };

Foreign.C.Error.$fEqErrno [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Error.Errno
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [Foreign.C.Error.$fEqErrno_$c==
                                     Foreign.C.Error.$fEqErrno_$c/=];

Foreign.C.Error.eXDEV1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [18#];

Foreign.C.Error.eXDEV :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eXDEV1;

Foreign.C.Error.eAGAIN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [11#];

Foreign.C.Error.eWOULDBLOCK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eAGAIN1;

Foreign.C.Error.eUSERS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [87#];

Foreign.C.Error.eUSERS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eUSERS1;

Foreign.C.Error.eTXTBSY1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [26#];

Foreign.C.Error.eTXTBSY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eTXTBSY1;

Foreign.C.Error.eTOOMANYREFS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [109#];

Foreign.C.Error.eTOOMANYREFS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eTOOMANYREFS1;

Foreign.C.Error.eTIMEDOUT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [110#];

Foreign.C.Error.eTIMEDOUT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eTIMEDOUT1;

Foreign.C.Error.eTIME1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [62#];

Foreign.C.Error.eTIME :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eTIME1;

Foreign.C.Error.eSTALE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [116#];

Foreign.C.Error.eSTALE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSTALE1;

Foreign.C.Error.eSRMNT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [69#];

Foreign.C.Error.eSRMNT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSRMNT1;

Foreign.C.Error.eSRCH1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [3#];

Foreign.C.Error.eSRCH :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSRCH1;

Foreign.C.Error.eSPIPE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [29#];

Foreign.C.Error.eSPIPE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSPIPE1;

Foreign.C.Error.eSOCKTNOSUPPORT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [94#];

Foreign.C.Error.eSOCKTNOSUPPORT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSOCKTNOSUPPORT1;

Foreign.C.Error.eSHUTDOWN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [108#];

Foreign.C.Error.eSHUTDOWN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSHUTDOWN1;

Foreign.C.Error.eBADRPC1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [-1#];

Foreign.C.Error.eRREMOTE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.eRPCMISMATCH :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.eROFS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [30#];

Foreign.C.Error.eROFS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eROFS1;

Foreign.C.Error.eREMOTE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [66#];

Foreign.C.Error.eREMOTE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eREMOTE1;

Foreign.C.Error.eREMCHG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [78#];

Foreign.C.Error.eREMCHG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eREMCHG1;

Foreign.C.Error.eRANGE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [34#];

Foreign.C.Error.eRANGE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eRANGE1;

Foreign.C.Error.ePROTOTYPE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [91#];

Foreign.C.Error.ePROTOTYPE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePROTOTYPE1;

Foreign.C.Error.ePROTONOSUPPORT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [93#];

Foreign.C.Error.ePROTONOSUPPORT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePROTONOSUPPORT1;

Foreign.C.Error.ePROTO1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [71#];

Foreign.C.Error.ePROTO :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePROTO1;

Foreign.C.Error.ePROGUNAVAIL :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.ePROGMISMATCH :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.ePROCUNAVAIL :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.ePROCLIM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.ePIPE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [32#];

Foreign.C.Error.ePIPE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePIPE1;

Foreign.C.Error.ePFNOSUPPORT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [96#];

Foreign.C.Error.ePFNOSUPPORT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePFNOSUPPORT1;

Foreign.C.Error.ePERM1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [1#];

Foreign.C.Error.ePERM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePERM1;

Foreign.C.Error.eNOTSUP1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [95#];

Foreign.C.Error.eOPNOTSUPP :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTSUP1;

Foreign.C.Error.eNXIO1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [6#];

Foreign.C.Error.eNXIO :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNXIO1;

Foreign.C.Error.eNOTTY1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [25#];

Foreign.C.Error.eNOTTY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTTY1;

Foreign.C.Error.eNOTSUP :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTSUP1;

Foreign.C.Error.eNOTSOCK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [88#];

Foreign.C.Error.eNOTSOCK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTSOCK1;

Foreign.C.Error.eNOTEMPTY1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [39#];

Foreign.C.Error.eNOTEMPTY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTEMPTY1;

Foreign.C.Error.eNOTDIR1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [20#];

Foreign.C.Error.eNOTDIR :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTDIR1;

Foreign.C.Error.eNOTCONN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [107#];

Foreign.C.Error.eNOTCONN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTCONN1;

Foreign.C.Error.eNOTBLK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [15#];

Foreign.C.Error.eNOTBLK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTBLK1;

Foreign.C.Error.eNOSYS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [38#];

Foreign.C.Error.eNOSYS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOSYS1;

Foreign.C.Error.eNOSTR1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [60#];

Foreign.C.Error.eNOSTR :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOSTR1;

Foreign.C.Error.eNOSR1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [63#];

Foreign.C.Error.eNOSR :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOSR1;

Foreign.C.Error.eNOSPC1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [28#];

Foreign.C.Error.eNOSPC :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOSPC1;

Foreign.C.Error.eNOPROTOOPT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [92#];

Foreign.C.Error.eNOPROTOOPT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOPROTOOPT1;

Foreign.C.Error.eNONET1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [64#];

Foreign.C.Error.eNONET :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNONET1;

Foreign.C.Error.eNOMSG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [42#];

Foreign.C.Error.eNOMSG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOMSG1;

Foreign.C.Error.eNOMEM1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [12#];

Foreign.C.Error.eNOMEM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOMEM1;

Foreign.C.Error.eNOLINK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [67#];

Foreign.C.Error.eNOLINK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOLINK1;

Foreign.C.Error.eNOLCK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [37#];

Foreign.C.Error.eNOLCK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOLCK1;

Foreign.C.Error.eNOEXEC1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [8#];

Foreign.C.Error.eNOEXEC :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOEXEC1;

Foreign.C.Error.eNOENT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [2#];

Foreign.C.Error.eNOENT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOENT1;

Foreign.C.Error.eNODEV1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [19#];

Foreign.C.Error.eNODEV :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNODEV1;

Foreign.C.Error.eNODATA1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [61#];

Foreign.C.Error.eNODATA :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNODATA1;

Foreign.C.Error.eNOBUFS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [105#];

Foreign.C.Error.eNOBUFS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOBUFS1;

Foreign.C.Error.eNFILE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [23#];

Foreign.C.Error.eNFILE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNFILE1;

Foreign.C.Error.eNETUNREACH1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [101#];

Foreign.C.Error.eNETUNREACH :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNETUNREACH1;

Foreign.C.Error.eNETRESET1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [102#];

Foreign.C.Error.eNETRESET :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNETRESET1;

Foreign.C.Error.eNETDOWN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [100#];

Foreign.C.Error.eNETDOWN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNETDOWN1;

Foreign.C.Error.eNAMETOOLONG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [36#];

Foreign.C.Error.eNAMETOOLONG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNAMETOOLONG1;

Foreign.C.Error.eMULTIHOP1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [72#];

Foreign.C.Error.eMULTIHOP :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eMULTIHOP1;

Foreign.C.Error.eMSGSIZE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [90#];

Foreign.C.Error.eMSGSIZE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eMSGSIZE1;

Foreign.C.Error.eMLINK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [31#];

Foreign.C.Error.eMLINK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eMLINK1;

Foreign.C.Error.eMFILE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [24#];

Foreign.C.Error.eMFILE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eMFILE1;

Foreign.C.Error.eLOOP1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [40#];

Foreign.C.Error.eLOOP :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eLOOP1;

Foreign.C.Error.eISDIR1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [21#];

Foreign.C.Error.eISDIR :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eISDIR1;

Foreign.C.Error.eISCONN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [106#];

Foreign.C.Error.eISCONN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eISCONN1;

Foreign.C.Error.eIO1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [5#];

Foreign.C.Error.eIO :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eIO1;

Foreign.C.Error.eINVAL1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [22#];

Foreign.C.Error.eINVAL :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eINVAL1;

Foreign.C.Error.eINTR1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [4#];

Foreign.C.Error.eINTR :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eINTR1;

Foreign.C.Error.eINPROGRESS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [115#];

Foreign.C.Error.eINPROGRESS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eINPROGRESS1;

Foreign.C.Error.eILSEQ1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [84#];

Foreign.C.Error.eILSEQ :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eILSEQ1;

Foreign.C.Error.eIDRM1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [43#];

Foreign.C.Error.eIDRM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eIDRM1;

Foreign.C.Error.eHOSTUNREACH1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [113#];

Foreign.C.Error.eHOSTUNREACH :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eHOSTUNREACH1;

Foreign.C.Error.eHOSTDOWN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [112#];

Foreign.C.Error.eHOSTDOWN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eHOSTDOWN1;

Foreign.C.Error.eFTYPE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.eFBIG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [27#];

Foreign.C.Error.eFBIG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eFBIG1;

Foreign.C.Error.eFAULT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [14#];

Foreign.C.Error.eFAULT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eFAULT1;

Foreign.C.Error.eEXIST1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [17#];

Foreign.C.Error.eEXIST :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eEXIST1;

Foreign.C.Error.eDQUOT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [122#];

Foreign.C.Error.eDQUOT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eDQUOT1;

Foreign.C.Error.eDOM1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [33#];

Foreign.C.Error.eDOM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eDOM1;

Foreign.C.Error.eDIRTY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.eDESTADDRREQ1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [89#];

Foreign.C.Error.eDESTADDRREQ :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eDESTADDRREQ1;

Foreign.C.Error.eDEADLK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [35#];

Foreign.C.Error.eDEADLK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eDEADLK1;

Foreign.C.Error.eCONNRESET1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [104#];

Foreign.C.Error.eCONNRESET :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eCONNRESET1;

Foreign.C.Error.eCONNREFUSED1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [111#];

Foreign.C.Error.eCONNREFUSED :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eCONNREFUSED1;

Foreign.C.Error.eCONNABORTED1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [103#];

Foreign.C.Error.eCONNABORTED :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eCONNABORTED1;

Foreign.C.Error.eCOMM1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [70#];

Foreign.C.Error.eCOMM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eCOMM1;

Foreign.C.Error.eCHILD1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [10#];

Foreign.C.Error.eCHILD :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eCHILD1;

Foreign.C.Error.eBUSY1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [16#];

Foreign.C.Error.eBUSY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBUSY1;

Foreign.C.Error.eBADRPC :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.eBADMSG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [74#];

Foreign.C.Error.eBADMSG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADMSG1;

Foreign.C.Error.eBADF1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [9#];

Foreign.C.Error.eBADF :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADF1;

Foreign.C.Error.eALREADY1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [114#];

Foreign.C.Error.eALREADY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eALREADY1;

Foreign.C.Error.eAGAIN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eAGAIN1;

Foreign.C.Error.eAFNOSUPPORT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [97#];

Foreign.C.Error.eAFNOSUPPORT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eAFNOSUPPORT1;

Foreign.C.Error.eADV1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [68#];

Foreign.C.Error.eADV :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eADV1;

Foreign.C.Error.eADDRNOTAVAIL1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [99#];

Foreign.C.Error.eADDRNOTAVAIL :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eADDRNOTAVAIL1;

Foreign.C.Error.eADDRINUSE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [98#];

Foreign.C.Error.eADDRINUSE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eADDRINUSE1;

Foreign.C.Error.eACCES1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [13#];

Foreign.C.Error.eACCES :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eACCES1;

Foreign.C.Error.e2BIG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [7#];

Foreign.C.Error.e2BIG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.e2BIG1;

Foreign.C.Error.eOK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [0#];

Foreign.C.Error.eOK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eOK1;

Foreign.C.Error.$werrnoToIOError [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Base.Maybe GHC.IO.Handle.Types.Handle
     -> GHC.Base.Maybe GHC.Base.String
     -> GHC.IO.Exception.IOError
[GblId, Arity=4, Str=<L,U><S,U><L,U><L,U>, Unf=OtherCon []] =
    [] \r [w_s92TR ww_s92TS w1_s92TT w2_s92TU]
        case
            case noDuplicate# [GHC.Prim.realWorld#] of s'_s92TV {
              (##) ->
                  case __pkg_ccall base-4.11.0.0 [ww_s92TS GHC.Prim.void#] of {
                    Unit# ds1_s92TZ [Occ=Once] ->
                        case GHC.IO.Encoding.getForeignEncoding GHC.Prim.void# of {
                          Unit# ipv1_s92U2 [Occ=Once] ->
                              case
                                  GHC.Foreign.$wpeekCString ipv1_s92U2 ds1_s92TZ GHC.Prim.void#
                              of
                              { Unit# ipv3_s92U5 [Occ=Once] ->
                                    let {
                                      sat_s92U8 [Occ=Once] :: Foreign.C.Types.CInt
                                      [LclId] =
                                          CCCS GHC.Int.I32#! [ww_s92TS]; } in
                                    let {
                                      sat_s92U9 [Occ=Once] :: GHC.Base.Maybe Foreign.C.Types.CInt
                                      [LclId] =
                                          CCCS GHC.Base.Just! [sat_s92U8]; } in
                                    let {
                                      sat_s92U7 [Occ=Once] :: GHC.IO.Exception.IOErrorType
                                      [LclId] =
                                          [ww_s92TS] \u []
                                              case ww_s92TS of {
                                                __DEFAULT -> GHC.IO.Exception.OtherError [];
                                                1# -> GHC.IO.Exception.PermissionDenied [];
                                                2# -> GHC.IO.Exception.NoSuchThing [];
                                                3# -> GHC.IO.Exception.NoSuchThing [];
                                                4# -> GHC.IO.Exception.Interrupted [];
                                                5# -> GHC.IO.Exception.HardwareFault [];
                                                6# -> GHC.IO.Exception.NoSuchThing [];
                                                7# -> GHC.IO.Exception.ResourceExhausted [];
                                                8# -> GHC.IO.Exception.InvalidArgument [];
                                                9# -> GHC.IO.Exception.InvalidArgument [];
                                                10# -> GHC.IO.Exception.NoSuchThing [];
                                                11# -> GHC.IO.Exception.ResourceExhausted [];
                                                12# -> GHC.IO.Exception.ResourceExhausted [];
                                                13# -> GHC.IO.Exception.PermissionDenied [];
                                                15# -> GHC.IO.Exception.InvalidArgument [];
                                                16# -> GHC.IO.Exception.ResourceBusy [];
                                                17# -> GHC.IO.Exception.AlreadyExists [];
                                                18# -> GHC.IO.Exception.UnsupportedOperation [];
                                                19# -> GHC.IO.Exception.UnsupportedOperation [];
                                                20# -> GHC.IO.Exception.InappropriateType [];
                                                21# -> GHC.IO.Exception.InappropriateType [];
                                                22# -> GHC.IO.Exception.InvalidArgument [];
                                                23# -> GHC.IO.Exception.ResourceExhausted [];
                                                24# -> GHC.IO.Exception.ResourceExhausted [];
                                                25# -> GHC.IO.Exception.IllegalOperation [];
                                                26# -> GHC.IO.Exception.ResourceBusy [];
                                                27# -> GHC.IO.Exception.PermissionDenied [];
                                                28# -> GHC.IO.Exception.ResourceExhausted [];
                                                29# -> GHC.IO.Exception.UnsupportedOperation [];
                                                30# -> GHC.IO.Exception.PermissionDenied [];
                                                31# -> GHC.IO.Exception.ResourceExhausted [];
                                                32# -> GHC.IO.Exception.ResourceVanished [];
                                                33# -> GHC.IO.Exception.InvalidArgument [];
                                                34# -> GHC.IO.Exception.UnsupportedOperation [];
                                                35# -> GHC.IO.Exception.ResourceBusy [];
                                                36# -> GHC.IO.Exception.InvalidArgument [];
                                                37# -> GHC.IO.Exception.ResourceExhausted [];
                                                38# -> GHC.IO.Exception.UnsupportedOperation [];
                                                39# -> GHC.IO.Exception.UnsatisfiedConstraints [];
                                                40# -> GHC.IO.Exception.InvalidArgument [];
                                                42# -> GHC.IO.Exception.NoSuchThing [];
                                                43# -> GHC.IO.Exception.ResourceVanished [];
                                                60# -> GHC.IO.Exception.InvalidArgument [];
                                                61# -> GHC.IO.Exception.NoSuchThing [];
                                                62# -> GHC.IO.Exception.TimeExpired [];
                                                63# -> GHC.IO.Exception.ResourceExhausted [];
                                                64# -> GHC.IO.Exception.NoSuchThing [];
                                                66# -> GHC.IO.Exception.IllegalOperation [];
                                                67# -> GHC.IO.Exception.ResourceVanished [];
                                                69# -> GHC.IO.Exception.UnsatisfiedConstraints [];
                                                70# -> GHC.IO.Exception.ResourceVanished [];
                                                71# -> GHC.IO.Exception.ProtocolError [];
                                                72# -> GHC.IO.Exception.UnsupportedOperation [];
                                                74# -> GHC.IO.Exception.InappropriateType [];
                                                78# -> GHC.IO.Exception.ResourceVanished [];
                                                84# -> GHC.IO.Exception.InvalidArgument [];
                                                87# -> GHC.IO.Exception.ResourceExhausted [];
                                                88# -> GHC.IO.Exception.InvalidArgument [];
                                                89# -> GHC.IO.Exception.InvalidArgument [];
                                                90# -> GHC.IO.Exception.ResourceExhausted [];
                                                91# -> GHC.IO.Exception.ProtocolError [];
                                                92# -> GHC.IO.Exception.UnsupportedOperation [];
                                                93# -> GHC.IO.Exception.ProtocolError [];
                                                94# -> GHC.IO.Exception.UnsupportedOperation [];
                                                95# -> GHC.IO.Exception.UnsupportedOperation [];
                                                96# -> GHC.IO.Exception.UnsupportedOperation [];
                                                97# -> GHC.IO.Exception.UnsupportedOperation [];
                                                98# -> GHC.IO.Exception.ResourceBusy [];
                                                99# -> GHC.IO.Exception.UnsupportedOperation [];
                                                100# -> GHC.IO.Exception.ResourceVanished [];
                                                101# -> GHC.IO.Exception.NoSuchThing [];
                                                102# -> GHC.IO.Exception.ResourceVanished [];
                                                104# -> GHC.IO.Exception.ResourceVanished [];
                                                105# -> GHC.IO.Exception.ResourceExhausted [];
                                                106# -> GHC.IO.Exception.AlreadyExists [];
                                                107# -> GHC.IO.Exception.InvalidArgument [];
                                                108# -> GHC.IO.Exception.IllegalOperation [];
                                                109# -> GHC.IO.Exception.ResourceExhausted [];
                                                110# -> GHC.IO.Exception.TimeExpired [];
                                                111# -> GHC.IO.Exception.NoSuchThing [];
                                                112# -> GHC.IO.Exception.NoSuchThing [];
                                                113# -> GHC.IO.Exception.NoSuchThing [];
                                                114# -> GHC.IO.Exception.AlreadyExists [];
                                                115# -> GHC.IO.Exception.AlreadyExists [];
                                                116# -> GHC.IO.Exception.ResourceVanished [];
                                                122# -> GHC.IO.Exception.PermissionDenied [];
                                              }; } in
                                    let {
                                      sat_s92Ua [Occ=Once] :: GHC.IO.Exception.IOException
                                      [LclId] =
                                          CCCS GHC.IO.Exception.IOError! [w1_s92TT
                                                                          sat_s92U7
                                                                          w_s92TR
                                                                          ipv3_s92U5
                                                                          sat_s92U9
                                                                          w2_s92TU];
                                    } in  Unit# [sat_s92Ua];
                              };
                        };
                  };
            }
        of
        { Unit# ipv1_s92Ud [Occ=Once] -> ipv1_s92Ud;
        };

Foreign.C.Error.errnoToIOError [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> Foreign.C.Error.Errno
     -> GHC.Base.Maybe GHC.IO.Handle.Types.Handle
     -> GHC.Base.Maybe GHC.Base.String
     -> GHC.IO.Exception.IOError
[GblId,
 Arity=4,
 Str=<L,U><S(S),1*U(U)><L,U><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s92Ue w1_s92Uf w2_s92Ug w3_s92Uh]
        case w1_s92Uf of {
          GHC.Int.I32# ww1_s92Uj [Occ=Once] ->
              Foreign.C.Error.$werrnoToIOError
                  w_s92Ue ww1_s92Uj w2_s92Ug w3_s92Uh;
        };

Foreign.C.Error.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId, Arity=3, Str=<B,U><B,U><B,U>x, Unf=OtherCon []] =
    [] \r [w_s92Uk ww_s92Ul void_0E]
        let {
          sat_s92Uo [Occ=Once] :: GHC.Exception.SomeException
          [LclId] =
              [w_s92Uk ww_s92Ul] \u []
                  let {
                    sat_s92Un [Occ=Once] :: GHC.IO.Exception.IOException
                    [LclId] =
                        [w_s92Uk ww_s92Ul] \u []
                            Foreign.C.Error.$werrnoToIOError
                                w_s92Uk ww_s92Ul GHC.Base.Nothing GHC.Base.Nothing;
                  } in 
                    GHC.IO.Exception.$fExceptionIOException_$ctoException sat_s92Un;
        } in  raiseIO# [sat_s92Uo GHC.Prim.void#];

Foreign.C.Error.throwErrno1
  :: forall a.
     GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [loc_s92Up void_0E]
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
          Unit# ds1_s92Uu [Occ=Once] ->
              case narrow32Int# [ds1_s92Uu] of sat_s92Uv {
                __DEFAULT ->
                    Foreign.C.Error.$wlvl loc_s92Up sat_s92Uv GHC.Prim.void#;
              };
        };

Foreign.C.Error.throwErrno
  :: forall a. GHC.Base.String -> GHC.Types.IO a
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.Error.throwErrno1 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoIf1
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=4,
 Str=<L,1*C1(U)><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s92Uw loc_s92Ux f_s92Uy void_0E]
        case f_s92Uy GHC.Prim.void# of ds1_s92UA {
          Unit# ipv1_s92UC [Occ=Once] ->
              case pred_s92Uw ipv1_s92UC of {
                GHC.Types.False -> Unit# [ipv1_s92UC];
                GHC.Types.True ->
                    Foreign.C.Error.throwErrno1 loc_s92Ux GHC.Prim.void#;
              };
        };

Foreign.C.Error.throwErrnoIf
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=4,
 Str=<L,1*C1(U)><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIf1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoIf_1
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<L,1*C1(U)><L,U><C(S(SL)),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s92UE loc_s92UF f_s92UG void_0E]
        case f_s92UG GHC.Prim.void# of {
          Unit# ipv1_s92UK [Occ=Once] ->
              case pred_s92UE ipv1_s92UK of {
                GHC.Types.False -> Unit# [GHC.Tuple.()];
                GHC.Types.True ->
                    case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                      Unit# ds2_s92UP [Occ=Once] ->
                          case narrow32Int# [ds2_s92UP] of sat_s92UQ {
                            __DEFAULT ->
                                Foreign.C.Error.$wlvl loc_s92UF sat_s92UQ GHC.Prim.void#;
                          };
                    };
              };
        };

Foreign.C.Error.throwErrnoIf_
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Str=<L,1*C1(U)><L,U><C(S(SL)),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIf_1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

sat_s92US :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1#];

sat_s92UT :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_s92US GHC.Types.[]];

Foreign.C.Error.throwErrnoIfMinus2 :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_s92UT;

Foreign.C.Error.throwErrnoIfMinus1_
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s92UU $dNum_s92UV]
        let {
          ds_s92UW [Occ=OnceL] :: a_a91TT
          [LclId] =
              [$dNum_s92UV] \u []
                  let {
                    sat_s92UX [Occ=Once] :: a_a91TT
                    [LclId] =
                        [$dNum_s92UV] \u []
                            GHC.Num.fromInteger $dNum_s92UV Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s92UV sat_s92UX; } in
        let {
          sat_s92Vb [Occ=Once]
            :: GHC.Base.String
               -> GHC.Types.IO a_a91TT
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [$dEq_s92UU ds_s92UW] \r [loc_s92UY f_s92UZ void_0E]
                  case f_s92UZ GHC.Prim.void# of {
                    Unit# ipv1_s92V3 [Occ=Once] ->
                        case GHC.Classes.== $dEq_s92UU ipv1_s92V3 ds_s92UW of {
                          GHC.Types.False -> Unit# [GHC.Tuple.()];
                          GHC.Types.True ->
                              case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                                Unit# ds3_s92V8 [Occ=Once] ->
                                    case narrow32Int# [ds3_s92V8] of sat_s92V9 {
                                      __DEFAULT ->
                                          Foreign.C.Error.$wlvl loc_s92UY sat_s92V9 GHC.Prim.void#;
                                    };
                              };
                        };
                  };
        } in  sat_s92Vb;

Foreign.C.Error.throwErrnoIfMinus1
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s92Vc $dNum_s92Vd]
        let {
          ds_s92Ve [Occ=OnceL] :: a_a91U5
          [LclId] =
              [$dNum_s92Vd] \u []
                  let {
                    sat_s92Vf [Occ=Once] :: a_a91U5
                    [LclId] =
                        [$dNum_s92Vd] \u []
                            GHC.Num.fromInteger $dNum_s92Vd Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s92Vd sat_s92Vf; } in
        let {
          sat_s92Vn [Occ=Once]
            :: GHC.Base.String
               -> GHC.Types.IO a_a91U5
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a91U5 #)
          [LclId] =
              [$dEq_s92Vc ds_s92Ve] \r [loc_s92Vg f_s92Vh void_0E]
                  case f_s92Vh GHC.Prim.void# of ds1_s92Vj {
                    Unit# ipv1_s92Vl [Occ=Once] ->
                        case GHC.Classes.== $dEq_s92Vc ipv1_s92Vl ds_s92Ve of {
                          GHC.Types.False -> Unit# [ipv1_s92Vl];
                          GHC.Types.True ->
                              Foreign.C.Error.throwErrno1 loc_s92Vg GHC.Prim.void#;
                        };
                  };
        } in  sat_s92Vn;

Foreign.C.Error.throwErrnoIfNull1
  :: forall a.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<L,U><C(S(LS(S))),1*C1(U(U,U(U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [loc_s92Vo f_s92Vp void_0E]
        case f_s92Vp GHC.Prim.void# of ds1_s92Vr {
          Unit# ipv1_s92Vt [Occ=Once!] ->
              case ipv1_s92Vt of {
                GHC.Ptr.Ptr a1_s92Vv [Occ=Once] ->
                    case eqAddr# [a1_s92Vv __NULL] of {
                      __DEFAULT -> Unit# [ipv1_s92Vt];
                      1# -> Foreign.C.Error.throwErrno1 loc_s92Vo GHC.Prim.void#;
                    };
              };
        };

Foreign.C.Error.throwErrnoIfNull
  :: forall a.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a) -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Str=<L,U><C(S(LS(S))),1*C1(U(U,U(U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIfNull1 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoIfMinus1Retry2 [Occ=LoopBreaker]
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=4,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s92Vx loc_s92Vy f_s92Vz void_0E]
        case f_s92Vz GHC.Prim.void# of ds1_s92VB {
          Unit# ipv1_s92VD [Occ=Once] ->
              case pred_s92Vx ipv1_s92VD of {
                GHC.Types.False -> Unit# [ipv1_s92VD];
                GHC.Types.True ->
                    case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                      Unit# ds2_s92VI [Occ=Once] ->
                          case narrow32Int# [ds2_s92VI] of {
                            __DEFAULT -> Foreign.C.Error.throwErrno1 loc_s92Vy GHC.Prim.void#;
                            4# ->
                                Foreign.C.Error.throwErrnoIfMinus1Retry2
                                    pred_s92Vx loc_s92Vy f_s92Vz GHC.Prim.void#;
                          };
                    };
              };
        };

Foreign.C.Error.throwErrnoIfRetry
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=4,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIfMinus1Retry2
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoIfRetry_1
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s92VK loc_s92VL f_s92VM void_0E]
        case
            Foreign.C.Error.throwErrnoIfMinus1Retry2
                pred_s92VK loc_s92VL f_s92VM GHC.Prim.void#
        of
        { Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
        };

Foreign.C.Error.throwErrnoIfRetry_
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIfRetry_1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoIfMinus1Retry_
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s92VR $dNum_s92VS]
        let {
          ds_s92VT [Occ=OnceL] :: a_a91UP
          [LclId] =
              [$dNum_s92VS] \u []
                  let {
                    sat_s92VU [Occ=Once] :: a_a91UP
                    [LclId] =
                        [$dNum_s92VS] \u []
                            GHC.Num.fromInteger $dNum_s92VS Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s92VS sat_s92VU; } in
        let {
          pred_s92VV [Occ=OnceL, Dmd=<L,C(U)>] :: a_a91UP -> GHC.Types.Bool
          [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
              [$dEq_s92VR ds_s92VT] \r [ds1_s92VW]
                  GHC.Classes.== $dEq_s92VR ds1_s92VW ds_s92VT; } in
        let {
          sat_s92W3 [Occ=Once]
            :: GHC.Base.String
               -> GHC.Types.IO a_a91UP
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [pred_s92VV] \r [loc_s92VX f_s92VY void_0E]
                  case
                      Foreign.C.Error.throwErrnoIfMinus1Retry2
                          pred_s92VV loc_s92VX f_s92VY GHC.Prim.void#
                  of
                  { Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
                  };
        } in  sat_s92W3;

Foreign.C.Error.throwErrnoIfMinus1Retry1
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s92W4 $dNum_s92W5]
        let {
          ds_s92W6 [Occ=OnceL] :: a_a91V1
          [LclId] =
              [$dNum_s92W5] \u []
                  let {
                    sat_s92W7 [Occ=Once] :: a_a91V1
                    [LclId] =
                        [$dNum_s92W5] \u []
                            GHC.Num.fromInteger $dNum_s92W5 Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s92W5 sat_s92W7; } in
        let {
          sat_s92W9 [Occ=Once] :: a_a91V1 -> GHC.Types.Bool
          [LclId] =
              [$dEq_s92W4 ds_s92W6] \r [ds1_s92W8]
                  GHC.Classes.== $dEq_s92W4 ds1_s92W8 ds_s92W6;
        } in  Foreign.C.Error.throwErrnoIfMinus1Retry2 sat_s92W9;

Foreign.C.Error.throwErrnoIfMinus1Retry
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfMinus1Retry1 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfNullRetry2
  :: forall a. GHC.Ptr.Ptr a -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [ds_s92Wa]
        case ds_s92Wa of {
          GHC.Ptr.Ptr a1_s92Wc [Occ=Once] ->
              case eqAddr# [a1_s92Wc __NULL] of sat_s92Wd {
                __DEFAULT -> tagToEnum# [sat_s92Wd];
              };
        };

Foreign.C.Error.throwErrnoIfNullRetry1
  :: forall a.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId, Arity=3, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIfMinus1Retry2
            Foreign.C.Error.throwErrnoIfNullRetry2
            eta_B3
            eta_B2
            GHC.Prim.void#;

Foreign.C.Error.throwErrnoIfNullRetry
  :: forall a.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a) -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId, Arity=3, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIfNullRetry1
            eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2 [Occ=LoopBreaker]
  :: forall a b.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Types.IO b
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=5,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><L,C(U(U,A))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s92We loc_s92Wf f_s92Wg on_block_s92Wh void_0E]
        case f_s92Wg GHC.Prim.void# of ds1_s92Wj {
          Unit# ipv1_s92Wl [Occ=Once] ->
              case pred_s92We ipv1_s92Wl of {
                GHC.Types.False -> Unit# [ipv1_s92Wl];
                GHC.Types.True ->
                    case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                      Unit# ds2_s92Wq [Occ=Once] ->
                          case narrow32Int# [ds2_s92Wq] of {
                            __DEFAULT -> Foreign.C.Error.throwErrno1 loc_s92Wf GHC.Prim.void#;
                            4# ->
                                Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                                    pred_s92We loc_s92Wf f_s92Wg on_block_s92Wh GHC.Prim.void#;
                            11# ->
                                case on_block_s92Wh GHC.Prim.void# of {
                                  Unit# _ [Occ=Dead] ->
                                      Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                                          pred_s92We
                                          loc_s92Wf
                                          f_s92Wg
                                          on_block_s92Wh
                                          GHC.Prim.void#;
                                };
                          };
                    };
              };
        };

Foreign.C.Error.throwErrnoIfRetryMayBlock
  :: forall a b.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Types.IO b
     -> GHC.Types.IO a
[GblId,
 Arity=5,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><L,C(U(U,A))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
            eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoIfRetryMayBlock_1
  :: forall a b.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Types.IO b
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><L,C(U(U,A))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s92Wv loc_s92Ww f_s92Wx on_block_s92Wy void_0E]
        case
            Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                pred_s92Wv loc_s92Ww f_s92Wx on_block_s92Wy GHC.Prim.void#
        of
        { Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
        };

Foreign.C.Error.throwErrnoIfRetryMayBlock_
  :: forall a b.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Types.IO b
     -> GHC.Types.IO ()
[GblId,
 Arity=5,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><L,C(U(U,A))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIfRetryMayBlock_1
            eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_
  :: forall a b.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.Types.IO a -> GHC.Types.IO b -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s92WD $dNum_s92WE]
        let {
          ds_s92WF [Occ=OnceL] :: a_a91VZ
          [LclId] =
              [$dNum_s92WE] \u []
                  let {
                    sat_s92WG [Occ=Once] :: a_a91VZ
                    [LclId] =
                        [$dNum_s92WE] \u []
                            GHC.Num.fromInteger $dNum_s92WE Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s92WE sat_s92WG; } in
        let {
          pred_s92WH [Occ=OnceL, Dmd=<L,C(U)>] :: a_a91VZ -> GHC.Types.Bool
          [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
              [$dEq_s92WD ds_s92WF] \r [ds1_s92WI]
                  GHC.Classes.== $dEq_s92WD ds1_s92WI ds_s92WF; } in
        let {
          sat_s92WQ [Occ=Once]
            :: GHC.Base.String
               -> GHC.Types.IO a_a91VZ
               -> GHC.Types.IO b_a91W0
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [pred_s92WH] \r [loc_s92WJ f_s92WK on_block_s92WL void_0E]
                  case
                      Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                          pred_s92WH loc_s92WJ f_s92WK on_block_s92WL GHC.Prim.void#
                  of
                  { Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
                  };
        } in  sat_s92WQ;

Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1
  :: forall a b.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Types.IO b
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s92WR $dNum_s92WS]
        let {
          ds_s92WT [Occ=OnceL] :: a_a91Wd
          [LclId] =
              [$dNum_s92WS] \u []
                  let {
                    sat_s92WU [Occ=Once] :: a_a91Wd
                    [LclId] =
                        [$dNum_s92WS] \u []
                            GHC.Num.fromInteger $dNum_s92WS Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s92WS sat_s92WU; } in
        let {
          sat_s92WW [Occ=Once] :: a_a91Wd -> GHC.Types.Bool
          [LclId] =
              [$dEq_s92WR ds_s92WT] \r [ds1_s92WV]
                  GHC.Classes.== $dEq_s92WR ds1_s92WV ds_s92WT;
        } in  Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2 sat_s92WW;

Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock
  :: forall a b.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.Types.IO a -> GHC.Types.IO b -> GHC.Types.IO a
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfNullRetryMayBlock1
  :: forall a b.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Types.IO b
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId, Arity=4, Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
            Foreign.C.Error.throwErrnoIfNullRetry2
            eta_B4
            eta_B3
            eta_B2
            GHC.Prim.void#;

Foreign.C.Error.throwErrnoIfNullRetryMayBlock
  :: forall a b.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Types.IO b
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId, Arity=4, Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIfNullRetryMayBlock1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.$wlvl1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.IO.FilePath
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId, Arity=4, Str=<B,U><B,U><B,U><B,U>x, Unf=OtherCon []] =
    [] \r [w_s92WX ww_s92WY w1_s92WZ void_0E]
        let {
          sat_s92X3 [Occ=Once] :: GHC.Exception.SomeException
          [LclId] =
              [w_s92WX ww_s92WY w1_s92WZ] \u []
                  let {
                    sat_s92X2 [Occ=Once] :: GHC.IO.Exception.IOException
                    [LclId] =
                        [w_s92WX ww_s92WY w1_s92WZ] \u []
                            let {
                              sat_s92X1 [Occ=Once] :: GHC.Base.Maybe GHC.Base.String
                              [LclId] =
                                  CCCS GHC.Base.Just! [w1_s92WZ];
                            } in 
                              Foreign.C.Error.$werrnoToIOError
                                  w_s92WX ww_s92WY GHC.Base.Nothing sat_s92X1;
                  } in 
                    GHC.IO.Exception.$fExceptionIOException_$ctoException sat_s92X2;
        } in  raiseIO# [sat_s92X3 GHC.Prim.void#];

Foreign.C.Error.throwErrnoPath1
  :: forall a.
     GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId, Arity=3, Str=<L,U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [loc_s92X4 path_s92X5 void_0E]
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
          Unit# ds1_s92Xa [Occ=Once] ->
              case narrow32Int# [ds1_s92Xa] of sat_s92Xb {
                __DEFAULT ->
                    Foreign.C.Error.$wlvl1
                        loc_s92X4 sat_s92Xb path_s92X5 GHC.Prim.void#;
              };
        };

Foreign.C.Error.throwErrnoPath
  :: forall a. GHC.Base.String -> GHC.IO.FilePath -> GHC.Types.IO a
[GblId, Arity=3, Str=<L,U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoPath1 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoPathIf1
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=5,
 Str=<L,1*C1(U)><L,U><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s92Xc loc_s92Xd path_s92Xe f_s92Xf void_0E]
        case f_s92Xf GHC.Prim.void# of ds1_s92Xh {
          Unit# ipv1_s92Xj [Occ=Once] ->
              case pred_s92Xc ipv1_s92Xj of {
                GHC.Types.False -> Unit# [ipv1_s92Xj];
                GHC.Types.True ->
                    Foreign.C.Error.throwErrnoPath1
                        loc_s92Xd path_s92Xe GHC.Prim.void#;
              };
        };

Foreign.C.Error.throwErrnoPathIf
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO a
     -> GHC.Types.IO a
[GblId,
 Arity=5,
 Str=<L,1*C1(U)><L,U><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoPathIf1
            eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoPathIf_1
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Str=<L,1*C1(U)><L,U><L,U><C(S(SL)),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s92Xl loc_s92Xm path_s92Xn f_s92Xo void_0E]
        case f_s92Xo GHC.Prim.void# of {
          Unit# ipv1_s92Xs [Occ=Once] ->
              case pred_s92Xl ipv1_s92Xs of {
                GHC.Types.False -> Unit# [GHC.Tuple.()];
                GHC.Types.True ->
                    case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                      Unit# ds2_s92Xx [Occ=Once] ->
                          case narrow32Int# [ds2_s92Xx] of sat_s92Xy {
                            __DEFAULT ->
                                Foreign.C.Error.$wlvl1
                                    loc_s92Xm sat_s92Xy path_s92Xn GHC.Prim.void#;
                          };
                    };
              };
        };

Foreign.C.Error.throwErrnoPathIf_
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO a
     -> GHC.Types.IO ()
[GblId,
 Arity=5,
 Str=<L,1*C1(U)><L,U><L,U><C(S(SL)),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoPathIf_1
            eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoPathIfMinus1_
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.IO.FilePath -> GHC.Types.IO a -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s92XA $dNum_s92XB]
        let {
          ds_s92XC [Occ=OnceL] :: a_a91X4
          [LclId] =
              [$dNum_s92XB] \u []
                  let {
                    sat_s92XD [Occ=Once] :: a_a91X4
                    [LclId] =
                        [$dNum_s92XB] \u []
                            GHC.Num.fromInteger $dNum_s92XB Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s92XB sat_s92XD; } in
        let {
          sat_s92XS [Occ=Once]
            :: GHC.Base.String
               -> GHC.IO.FilePath
               -> GHC.Types.IO a_a91X4
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [$dEq_s92XA ds_s92XC] \r [loc_s92XE path_s92XF f_s92XG void_0E]
                  case f_s92XG GHC.Prim.void# of {
                    Unit# ipv1_s92XK [Occ=Once] ->
                        case GHC.Classes.== $dEq_s92XA ipv1_s92XK ds_s92XC of {
                          GHC.Types.False -> Unit# [GHC.Tuple.()];
                          GHC.Types.True ->
                              case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                                Unit# ds3_s92XP [Occ=Once] ->
                                    case narrow32Int# [ds3_s92XP] of sat_s92XQ {
                                      __DEFAULT ->
                                          Foreign.C.Error.$wlvl1
                                              loc_s92XE sat_s92XQ path_s92XF GHC.Prim.void#;
                                    };
                              };
                        };
                  };
        } in  sat_s92XS;

Foreign.C.Error.throwErrnoPathIfNull1
  :: forall a.
     GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=4,
 Str=<L,U><L,U><C(S(LS(S))),1*C1(U(U,U(U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [loc_s92XT path_s92XU f_s92XV void_0E]
        case f_s92XV GHC.Prim.void# of ds1_s92XX {
          Unit# ipv1_s92XZ [Occ=Once!] ->
              case ipv1_s92XZ of {
                GHC.Ptr.Ptr a1_s92Y1 [Occ=Once] ->
                    case eqAddr# [a1_s92Y1 __NULL] of {
                      __DEFAULT -> Unit# [ipv1_s92XZ];
                      1# ->
                          Foreign.C.Error.throwErrnoPath1
                              loc_s92XT path_s92XU GHC.Prim.void#;
                    };
              };
        };

Foreign.C.Error.throwErrnoPathIfNull
  :: forall a.
     GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=4,
 Str=<L,U><L,U><C(S(LS(S))),1*C1(U(U,U(U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoPathIfNull1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoPathIfMinus1
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.IO.FilePath -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s92Y3 $dNum_s92Y4]
        let {
          ds_s92Y5 [Occ=OnceL] :: a_a91Xn
          [LclId] =
              [$dNum_s92Y4] \u []
                  let {
                    sat_s92Y6 [Occ=Once] :: a_a91Xn
                    [LclId] =
                        [$dNum_s92Y4] \u []
                            GHC.Num.fromInteger $dNum_s92Y4 Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s92Y4 sat_s92Y6; } in
        let {
          sat_s92Yf [Occ=Once]
            :: GHC.Base.String
               -> GHC.IO.FilePath
               -> GHC.Types.IO a_a91Xn
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a91Xn #)
          [LclId] =
              [$dEq_s92Y3 ds_s92Y5] \r [loc_s92Y7 path_s92Y8 f_s92Y9 void_0E]
                  case f_s92Y9 GHC.Prim.void# of ds1_s92Yb {
                    Unit# ipv1_s92Yd [Occ=Once] ->
                        case GHC.Classes.== $dEq_s92Y3 ipv1_s92Yd ds_s92Y5 of {
                          GHC.Types.False -> Unit# [ipv1_s92Yd];
                          GHC.Types.True ->
                              Foreign.C.Error.throwErrnoPath1
                                  loc_s92Y7 path_s92Y8 GHC.Prim.void#;
                        };
                  };
        } in  sat_s92Yf;


==================== Pre unarise: ====================
2018-03-16 16:04:13.717778574 UTC

Foreign.C.Error.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Foreign.C.Error.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Error.$trModule4];

Foreign.C.Error.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.C.Error"#;

Foreign.C.Error.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Error.$trModule2];

Foreign.C.Error.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.C.Error.$trModule3
                                     Foreign.C.Error.$trModule1];

$krep_r92Th :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCInt
                                              GHC.Types.[]];

Foreign.C.Error.$tcErrno2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Errno"#;

Foreign.C.Error.$tcErrno1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Error.$tcErrno2];

Foreign.C.Error.$tcErrno :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9614618910057470603##
                                    5790003468206630810##
                                    Foreign.C.Error.$trModule
                                    Foreign.C.Error.$tcErrno1
                                    0#
                                    GHC.Types.krep$*];

$krep1_r92Ti :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Error.$tcErrno
                                              GHC.Types.[]];

Foreign.C.Error.$tc'Errno1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r92Th $krep1_r92Ti];

Foreign.C.Error.$tc'Errno3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Errno"#;

Foreign.C.Error.$tc'Errno2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Error.$tc'Errno3];

Foreign.C.Error.$tc'Errno :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [18175500743799072511##
                                    6332857689812514354##
                                    Foreign.C.Error.$trModule
                                    Foreign.C.Error.$tc'Errno2
                                    0#
                                    Foreign.C.Error.$tc'Errno1];

Foreign.C.Error.getErrno1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Error.Errno #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [s_s942r]
        case __pkg_ccall base-4.11.0.0 [s_s942r] of {
          (#,#) ds_s942u [Occ=Once] ds1_s942v [Occ=Once] ->
              case narrow32Int# [ds1_s942v] of sat_s942w {
                __DEFAULT ->
                    let {
                      sat_s942x [Occ=Once] :: Foreign.C.Error.Errno
                      [LclId] =
                          CCCS GHC.Int.I32#! [sat_s942w];
                    } in  (#,#) [ds_s942u sat_s942x];
              };
        };

Foreign.C.Error.getErrno :: GHC.Types.IO Foreign.C.Error.Errno
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_B1] Foreign.C.Error.getErrno1 eta_B1;

Foreign.C.Error.resetErrno1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [ds_s942y]
        case __pkg_ccall base-4.11.0.0 [0# ds_s942y] of {
          Unit# ds1_s942B [Occ=Once] -> (#,#) [ds1_s942B GHC.Tuple.()];
        };

Foreign.C.Error.resetErrno :: GHC.Types.IO ()
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_B1] Foreign.C.Error.resetErrno1 eta_B1;

Foreign.C.Error.isValidErrno
  :: Foreign.C.Error.Errno -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [ds_s942C]
        case ds_s942C of {
          GHC.Int.I32# x_s942E [Occ=Once!] ->
              case x_s942E of {
                __DEFAULT -> GHC.Types.True [];
                -1# -> GHC.Types.False [];
              };
        };

Foreign.C.Error.$fEqErrno_$c==
  :: Foreign.C.Error.Errno -> Foreign.C.Error.Errno -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)><L,1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [errno1_s942G errno2_s942H]
        case errno1_s942G of {
          GHC.Int.I32# x_s942J [Occ=Once!] ->
              case x_s942J of wild1_s942K {
                __DEFAULT ->
                    case errno2_s942H of {
                      GHC.Int.I32# x1_s942M [Occ=Once!] ->
                          case x1_s942M of wild3_s942N {
                            __DEFAULT ->
                                case ==# [wild1_s942K wild3_s942N] of sat_s942O {
                                  __DEFAULT -> tagToEnum# [sat_s942O];
                                };
                            -1# -> GHC.Types.False [];
                          };
                    };
                -1# -> GHC.Types.False [];
              };
        };

Foreign.C.Error.$fEqErrno_$c/= [InlPrag=INLINE (sat-args=2)]
  :: Foreign.C.Error.Errno -> Foreign.C.Error.Errno -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)><L,1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [eta_s942P eta1_s942Q]
        case eta_s942P of {
          GHC.Int.I32# x_s942S [Occ=Once!] ->
              case x_s942S of wild1_s942T {
                __DEFAULT ->
                    case eta1_s942Q of {
                      GHC.Int.I32# x1_s942V [Occ=Once!] ->
                          case x1_s942V of wild3_s942W {
                            __DEFAULT ->
                                case ==# [wild1_s942T wild3_s942W] of {
                                  __DEFAULT -> GHC.Types.True [];
                                  1# -> GHC.Types.False [];
                                };
                            -1# -> GHC.Types.True [];
                          };
                    };
                -1# -> GHC.Types.True [];
              };
        };

Foreign.C.Error.$fEqErrno [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Error.Errno
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [Foreign.C.Error.$fEqErrno_$c==
                                     Foreign.C.Error.$fEqErrno_$c/=];

Foreign.C.Error.eXDEV1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [18#];

Foreign.C.Error.eXDEV :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eXDEV1;

Foreign.C.Error.eAGAIN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [11#];

Foreign.C.Error.eWOULDBLOCK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eAGAIN1;

Foreign.C.Error.eUSERS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [87#];

Foreign.C.Error.eUSERS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eUSERS1;

Foreign.C.Error.eTXTBSY1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [26#];

Foreign.C.Error.eTXTBSY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eTXTBSY1;

Foreign.C.Error.eTOOMANYREFS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [109#];

Foreign.C.Error.eTOOMANYREFS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eTOOMANYREFS1;

Foreign.C.Error.eTIMEDOUT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [110#];

Foreign.C.Error.eTIMEDOUT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eTIMEDOUT1;

Foreign.C.Error.eTIME1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [62#];

Foreign.C.Error.eTIME :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eTIME1;

Foreign.C.Error.eSTALE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [116#];

Foreign.C.Error.eSTALE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSTALE1;

Foreign.C.Error.eSRMNT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [69#];

Foreign.C.Error.eSRMNT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSRMNT1;

Foreign.C.Error.eSRCH1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [3#];

Foreign.C.Error.eSRCH :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSRCH1;

Foreign.C.Error.eSPIPE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [29#];

Foreign.C.Error.eSPIPE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSPIPE1;

Foreign.C.Error.eSOCKTNOSUPPORT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [94#];

Foreign.C.Error.eSOCKTNOSUPPORT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSOCKTNOSUPPORT1;

Foreign.C.Error.eSHUTDOWN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [108#];

Foreign.C.Error.eSHUTDOWN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSHUTDOWN1;

Foreign.C.Error.eBADRPC1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [-1#];

Foreign.C.Error.eRREMOTE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.eRPCMISMATCH :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.eROFS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [30#];

Foreign.C.Error.eROFS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eROFS1;

Foreign.C.Error.eREMOTE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [66#];

Foreign.C.Error.eREMOTE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eREMOTE1;

Foreign.C.Error.eREMCHG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [78#];

Foreign.C.Error.eREMCHG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eREMCHG1;

Foreign.C.Error.eRANGE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [34#];

Foreign.C.Error.eRANGE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eRANGE1;

Foreign.C.Error.ePROTOTYPE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [91#];

Foreign.C.Error.ePROTOTYPE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePROTOTYPE1;

Foreign.C.Error.ePROTONOSUPPORT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [93#];

Foreign.C.Error.ePROTONOSUPPORT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePROTONOSUPPORT1;

Foreign.C.Error.ePROTO1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [71#];

Foreign.C.Error.ePROTO :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePROTO1;

Foreign.C.Error.ePROGUNAVAIL :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.ePROGMISMATCH :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.ePROCUNAVAIL :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.ePROCLIM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.ePIPE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [32#];

Foreign.C.Error.ePIPE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePIPE1;

Foreign.C.Error.ePFNOSUPPORT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [96#];

Foreign.C.Error.ePFNOSUPPORT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePFNOSUPPORT1;

Foreign.C.Error.ePERM1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [1#];

Foreign.C.Error.ePERM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePERM1;

Foreign.C.Error.eNOTSUP1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [95#];

Foreign.C.Error.eOPNOTSUPP :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTSUP1;

Foreign.C.Error.eNXIO1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [6#];

Foreign.C.Error.eNXIO :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNXIO1;

Foreign.C.Error.eNOTTY1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [25#];

Foreign.C.Error.eNOTTY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTTY1;

Foreign.C.Error.eNOTSUP :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTSUP1;

Foreign.C.Error.eNOTSOCK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [88#];

Foreign.C.Error.eNOTSOCK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTSOCK1;

Foreign.C.Error.eNOTEMPTY1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [39#];

Foreign.C.Error.eNOTEMPTY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTEMPTY1;

Foreign.C.Error.eNOTDIR1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [20#];

Foreign.C.Error.eNOTDIR :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTDIR1;

Foreign.C.Error.eNOTCONN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [107#];

Foreign.C.Error.eNOTCONN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTCONN1;

Foreign.C.Error.eNOTBLK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [15#];

Foreign.C.Error.eNOTBLK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTBLK1;

Foreign.C.Error.eNOSYS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [38#];

Foreign.C.Error.eNOSYS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOSYS1;

Foreign.C.Error.eNOSTR1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [60#];

Foreign.C.Error.eNOSTR :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOSTR1;

Foreign.C.Error.eNOSR1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [63#];

Foreign.C.Error.eNOSR :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOSR1;

Foreign.C.Error.eNOSPC1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [28#];

Foreign.C.Error.eNOSPC :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOSPC1;

Foreign.C.Error.eNOPROTOOPT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [92#];

Foreign.C.Error.eNOPROTOOPT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOPROTOOPT1;

Foreign.C.Error.eNONET1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [64#];

Foreign.C.Error.eNONET :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNONET1;

Foreign.C.Error.eNOMSG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [42#];

Foreign.C.Error.eNOMSG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOMSG1;

Foreign.C.Error.eNOMEM1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [12#];

Foreign.C.Error.eNOMEM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOMEM1;

Foreign.C.Error.eNOLINK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [67#];

Foreign.C.Error.eNOLINK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOLINK1;

Foreign.C.Error.eNOLCK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [37#];

Foreign.C.Error.eNOLCK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOLCK1;

Foreign.C.Error.eNOEXEC1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [8#];

Foreign.C.Error.eNOEXEC :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOEXEC1;

Foreign.C.Error.eNOENT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [2#];

Foreign.C.Error.eNOENT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOENT1;

Foreign.C.Error.eNODEV1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [19#];

Foreign.C.Error.eNODEV :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNODEV1;

Foreign.C.Error.eNODATA1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [61#];

Foreign.C.Error.eNODATA :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNODATA1;

Foreign.C.Error.eNOBUFS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [105#];

Foreign.C.Error.eNOBUFS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOBUFS1;

Foreign.C.Error.eNFILE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [23#];

Foreign.C.Error.eNFILE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNFILE1;

Foreign.C.Error.eNETUNREACH1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [101#];

Foreign.C.Error.eNETUNREACH :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNETUNREACH1;

Foreign.C.Error.eNETRESET1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [102#];

Foreign.C.Error.eNETRESET :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNETRESET1;

Foreign.C.Error.eNETDOWN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [100#];

Foreign.C.Error.eNETDOWN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNETDOWN1;

Foreign.C.Error.eNAMETOOLONG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [36#];

Foreign.C.Error.eNAMETOOLONG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNAMETOOLONG1;

Foreign.C.Error.eMULTIHOP1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [72#];

Foreign.C.Error.eMULTIHOP :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eMULTIHOP1;

Foreign.C.Error.eMSGSIZE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [90#];

Foreign.C.Error.eMSGSIZE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eMSGSIZE1;

Foreign.C.Error.eMLINK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [31#];

Foreign.C.Error.eMLINK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eMLINK1;

Foreign.C.Error.eMFILE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [24#];

Foreign.C.Error.eMFILE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eMFILE1;

Foreign.C.Error.eLOOP1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [40#];

Foreign.C.Error.eLOOP :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eLOOP1;

Foreign.C.Error.eISDIR1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [21#];

Foreign.C.Error.eISDIR :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eISDIR1;

Foreign.C.Error.eISCONN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [106#];

Foreign.C.Error.eISCONN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eISCONN1;

Foreign.C.Error.eIO1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [5#];

Foreign.C.Error.eIO :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eIO1;

Foreign.C.Error.eINVAL1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [22#];

Foreign.C.Error.eINVAL :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eINVAL1;

Foreign.C.Error.eINTR1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [4#];

Foreign.C.Error.eINTR :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eINTR1;

Foreign.C.Error.eINPROGRESS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [115#];

Foreign.C.Error.eINPROGRESS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eINPROGRESS1;

Foreign.C.Error.eILSEQ1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [84#];

Foreign.C.Error.eILSEQ :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eILSEQ1;

Foreign.C.Error.eIDRM1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [43#];

Foreign.C.Error.eIDRM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eIDRM1;

Foreign.C.Error.eHOSTUNREACH1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [113#];

Foreign.C.Error.eHOSTUNREACH :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eHOSTUNREACH1;

Foreign.C.Error.eHOSTDOWN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [112#];

Foreign.C.Error.eHOSTDOWN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eHOSTDOWN1;

Foreign.C.Error.eFTYPE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.eFBIG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [27#];

Foreign.C.Error.eFBIG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eFBIG1;

Foreign.C.Error.eFAULT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [14#];

Foreign.C.Error.eFAULT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eFAULT1;

Foreign.C.Error.eEXIST1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [17#];

Foreign.C.Error.eEXIST :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eEXIST1;

Foreign.C.Error.eDQUOT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [122#];

Foreign.C.Error.eDQUOT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eDQUOT1;

Foreign.C.Error.eDOM1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [33#];

Foreign.C.Error.eDOM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eDOM1;

Foreign.C.Error.eDIRTY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.eDESTADDRREQ1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [89#];

Foreign.C.Error.eDESTADDRREQ :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eDESTADDRREQ1;

Foreign.C.Error.eDEADLK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [35#];

Foreign.C.Error.eDEADLK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eDEADLK1;

Foreign.C.Error.eCONNRESET1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [104#];

Foreign.C.Error.eCONNRESET :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eCONNRESET1;

Foreign.C.Error.eCONNREFUSED1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [111#];

Foreign.C.Error.eCONNREFUSED :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eCONNREFUSED1;

Foreign.C.Error.eCONNABORTED1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [103#];

Foreign.C.Error.eCONNABORTED :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eCONNABORTED1;

Foreign.C.Error.eCOMM1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [70#];

Foreign.C.Error.eCOMM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eCOMM1;

Foreign.C.Error.eCHILD1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [10#];

Foreign.C.Error.eCHILD :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eCHILD1;

Foreign.C.Error.eBUSY1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [16#];

Foreign.C.Error.eBUSY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBUSY1;

Foreign.C.Error.eBADRPC :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.eBADMSG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [74#];

Foreign.C.Error.eBADMSG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADMSG1;

Foreign.C.Error.eBADF1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [9#];

Foreign.C.Error.eBADF :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADF1;

Foreign.C.Error.eALREADY1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [114#];

Foreign.C.Error.eALREADY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eALREADY1;

Foreign.C.Error.eAGAIN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eAGAIN1;

Foreign.C.Error.eAFNOSUPPORT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [97#];

Foreign.C.Error.eAFNOSUPPORT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eAFNOSUPPORT1;

Foreign.C.Error.eADV1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [68#];

Foreign.C.Error.eADV :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eADV1;

Foreign.C.Error.eADDRNOTAVAIL1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [99#];

Foreign.C.Error.eADDRNOTAVAIL :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eADDRNOTAVAIL1;

Foreign.C.Error.eADDRINUSE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [98#];

Foreign.C.Error.eADDRINUSE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eADDRINUSE1;

Foreign.C.Error.eACCES1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [13#];

Foreign.C.Error.eACCES :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eACCES1;

Foreign.C.Error.e2BIG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [7#];

Foreign.C.Error.e2BIG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.e2BIG1;

Foreign.C.Error.eOK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [0#];

Foreign.C.Error.eOK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eOK1;

Foreign.C.Error.$werrnoToIOError [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Base.Maybe GHC.IO.Handle.Types.Handle
     -> GHC.Base.Maybe GHC.Base.String
     -> GHC.IO.Exception.IOError
[GblId, Arity=4, Str=<L,U><S,U><L,U><L,U>, Unf=OtherCon []] =
    [] \r [w_s942Y ww_s942Z w1_s9430 w2_s9431]
        case
            case noDuplicate# [GHC.Prim.realWorld#] of s'_s9432 {
              __DEFAULT ->
                  case __pkg_ccall base-4.11.0.0 [ww_s942Z s'_s9432] of {
                    (#,#) ds_s9435 [Occ=Once] ds1_s9436 [Occ=Once] ->
                        case GHC.IO.Encoding.getForeignEncoding ds_s9435 of {
                          (#,#) ipv_s9438 [Occ=Once] ipv1_s9439 [Occ=Once] ->
                              case GHC.Foreign.$wpeekCString ipv1_s9439 ds1_s9436 ipv_s9438 of {
                                (#,#) ipv2_s943b [Occ=Once] ipv3_s943c [Occ=Once] ->
                                    let {
                                      sat_s943f [Occ=Once] :: Foreign.C.Types.CInt
                                      [LclId] =
                                          CCCS GHC.Int.I32#! [ww_s942Z]; } in
                                    let {
                                      sat_s943g [Occ=Once] :: GHC.Base.Maybe Foreign.C.Types.CInt
                                      [LclId] =
                                          CCCS GHC.Base.Just! [sat_s943f]; } in
                                    let {
                                      sat_s943e [Occ=Once] :: GHC.IO.Exception.IOErrorType
                                      [LclId] =
                                          [ww_s942Z] \u []
                                              case ww_s942Z of {
                                                __DEFAULT -> GHC.IO.Exception.OtherError [];
                                                1# -> GHC.IO.Exception.PermissionDenied [];
                                                2# -> GHC.IO.Exception.NoSuchThing [];
                                                3# -> GHC.IO.Exception.NoSuchThing [];
                                                4# -> GHC.IO.Exception.Interrupted [];
                                                5# -> GHC.IO.Exception.HardwareFault [];
                                                6# -> GHC.IO.Exception.NoSuchThing [];
                                                7# -> GHC.IO.Exception.ResourceExhausted [];
                                                8# -> GHC.IO.Exception.InvalidArgument [];
                                                9# -> GHC.IO.Exception.InvalidArgument [];
                                                10# -> GHC.IO.Exception.NoSuchThing [];
                                                11# -> GHC.IO.Exception.ResourceExhausted [];
                                                12# -> GHC.IO.Exception.ResourceExhausted [];
                                                13# -> GHC.IO.Exception.PermissionDenied [];
                                                15# -> GHC.IO.Exception.InvalidArgument [];
                                                16# -> GHC.IO.Exception.ResourceBusy [];
                                                17# -> GHC.IO.Exception.AlreadyExists [];
                                                18# -> GHC.IO.Exception.UnsupportedOperation [];
                                                19# -> GHC.IO.Exception.UnsupportedOperation [];
                                                20# -> GHC.IO.Exception.InappropriateType [];
                                                21# -> GHC.IO.Exception.InappropriateType [];
                                                22# -> GHC.IO.Exception.InvalidArgument [];
                                                23# -> GHC.IO.Exception.ResourceExhausted [];
                                                24# -> GHC.IO.Exception.ResourceExhausted [];
                                                25# -> GHC.IO.Exception.IllegalOperation [];
                                                26# -> GHC.IO.Exception.ResourceBusy [];
                                                27# -> GHC.IO.Exception.PermissionDenied [];
                                                28# -> GHC.IO.Exception.ResourceExhausted [];
                                                29# -> GHC.IO.Exception.UnsupportedOperation [];
                                                30# -> GHC.IO.Exception.PermissionDenied [];
                                                31# -> GHC.IO.Exception.ResourceExhausted [];
                                                32# -> GHC.IO.Exception.ResourceVanished [];
                                                33# -> GHC.IO.Exception.InvalidArgument [];
                                                34# -> GHC.IO.Exception.UnsupportedOperation [];
                                                35# -> GHC.IO.Exception.ResourceBusy [];
                                                36# -> GHC.IO.Exception.InvalidArgument [];
                                                37# -> GHC.IO.Exception.ResourceExhausted [];
                                                38# -> GHC.IO.Exception.UnsupportedOperation [];
                                                39# -> GHC.IO.Exception.UnsatisfiedConstraints [];
                                                40# -> GHC.IO.Exception.InvalidArgument [];
                                                42# -> GHC.IO.Exception.NoSuchThing [];
                                                43# -> GHC.IO.Exception.ResourceVanished [];
                                                60# -> GHC.IO.Exception.InvalidArgument [];
                                                61# -> GHC.IO.Exception.NoSuchThing [];
                                                62# -> GHC.IO.Exception.TimeExpired [];
                                                63# -> GHC.IO.Exception.ResourceExhausted [];
                                                64# -> GHC.IO.Exception.NoSuchThing [];
                                                66# -> GHC.IO.Exception.IllegalOperation [];
                                                67# -> GHC.IO.Exception.ResourceVanished [];
                                                69# -> GHC.IO.Exception.UnsatisfiedConstraints [];
                                                70# -> GHC.IO.Exception.ResourceVanished [];
                                                71# -> GHC.IO.Exception.ProtocolError [];
                                                72# -> GHC.IO.Exception.UnsupportedOperation [];
                                                74# -> GHC.IO.Exception.InappropriateType [];
                                                78# -> GHC.IO.Exception.ResourceVanished [];
                                                84# -> GHC.IO.Exception.InvalidArgument [];
                                                87# -> GHC.IO.Exception.ResourceExhausted [];
                                                88# -> GHC.IO.Exception.InvalidArgument [];
                                                89# -> GHC.IO.Exception.InvalidArgument [];
                                                90# -> GHC.IO.Exception.ResourceExhausted [];
                                                91# -> GHC.IO.Exception.ProtocolError [];
                                                92# -> GHC.IO.Exception.UnsupportedOperation [];
                                                93# -> GHC.IO.Exception.ProtocolError [];
                                                94# -> GHC.IO.Exception.UnsupportedOperation [];
                                                95# -> GHC.IO.Exception.UnsupportedOperation [];
                                                96# -> GHC.IO.Exception.UnsupportedOperation [];
                                                97# -> GHC.IO.Exception.UnsupportedOperation [];
                                                98# -> GHC.IO.Exception.ResourceBusy [];
                                                99# -> GHC.IO.Exception.UnsupportedOperation [];
                                                100# -> GHC.IO.Exception.ResourceVanished [];
                                                101# -> GHC.IO.Exception.NoSuchThing [];
                                                102# -> GHC.IO.Exception.ResourceVanished [];
                                                104# -> GHC.IO.Exception.ResourceVanished [];
                                                105# -> GHC.IO.Exception.ResourceExhausted [];
                                                106# -> GHC.IO.Exception.AlreadyExists [];
                                                107# -> GHC.IO.Exception.InvalidArgument [];
                                                108# -> GHC.IO.Exception.IllegalOperation [];
                                                109# -> GHC.IO.Exception.ResourceExhausted [];
                                                110# -> GHC.IO.Exception.TimeExpired [];
                                                111# -> GHC.IO.Exception.NoSuchThing [];
                                                112# -> GHC.IO.Exception.NoSuchThing [];
                                                113# -> GHC.IO.Exception.NoSuchThing [];
                                                114# -> GHC.IO.Exception.AlreadyExists [];
                                                115# -> GHC.IO.Exception.AlreadyExists [];
                                                116# -> GHC.IO.Exception.ResourceVanished [];
                                                122# -> GHC.IO.Exception.PermissionDenied [];
                                              }; } in
                                    let {
                                      sat_s943h [Occ=Once] :: GHC.IO.Exception.IOException
                                      [LclId] =
                                          CCCS GHC.IO.Exception.IOError! [w1_s9430
                                                                          sat_s943e
                                                                          w_s942Y
                                                                          ipv3_s943c
                                                                          sat_s943g
                                                                          w2_s9431];
                                    } in  (#,#) [ipv2_s943b sat_s943h];
                              };
                        };
                  };
            }
        of
        { (#,#) _ [Occ=Dead] ipv1_s943k [Occ=Once] -> ipv1_s943k;
        };

Foreign.C.Error.errnoToIOError [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> Foreign.C.Error.Errno
     -> GHC.Base.Maybe GHC.IO.Handle.Types.Handle
     -> GHC.Base.Maybe GHC.Base.String
     -> GHC.IO.Exception.IOError
[GblId,
 Arity=4,
 Str=<L,U><S(S),1*U(U)><L,U><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s943l w1_s943m w2_s943n w3_s943o]
        case w1_s943m of {
          GHC.Int.I32# ww1_s943q [Occ=Once] ->
              Foreign.C.Error.$werrnoToIOError
                  w_s943l ww1_s943q w2_s943n w3_s943o;
        };

Foreign.C.Error.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId, Arity=3, Str=<B,U><B,U><B,U>x, Unf=OtherCon []] =
    [] \r [w_s943r ww_s943s w1_s943t]
        let {
          sat_s943v [Occ=Once] :: GHC.Exception.SomeException
          [LclId] =
              [w_s943r ww_s943s] \u []
                  let {
                    sat_s943u [Occ=Once] :: GHC.IO.Exception.IOException
                    [LclId] =
                        [w_s943r ww_s943s] \u []
                            Foreign.C.Error.$werrnoToIOError
                                w_s943r ww_s943s GHC.Base.Nothing GHC.Base.Nothing;
                  } in 
                    GHC.IO.Exception.$fExceptionIOException_$ctoException sat_s943u;
        } in  raiseIO# [sat_s943v w1_s943t];

Foreign.C.Error.throwErrno1
  :: forall a.
     GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [loc_s943w s_s943x]
        case __pkg_ccall base-4.11.0.0 [s_s943x] of {
          (#,#) ds_s943A [Occ=Once] ds1_s943B [Occ=Once] ->
              case narrow32Int# [ds1_s943B] of sat_s943C {
                __DEFAULT -> Foreign.C.Error.$wlvl loc_s943w sat_s943C ds_s943A;
              };
        };

Foreign.C.Error.throwErrno
  :: forall a. GHC.Base.String -> GHC.Types.IO a
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] Foreign.C.Error.throwErrno1 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIf1
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=4,
 Str=<L,1*C1(U)><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s943D loc_s943E f_s943F s_s943G]
        case f_s943F s_s943G of ds1_s943H {
          (#,#) ipv_s943I [Occ=Once] ipv1_s943J [Occ=Once] ->
              case pred_s943D ipv1_s943J of {
                GHC.Types.False -> ds1_s943H;
                GHC.Types.True -> Foreign.C.Error.throwErrno1 loc_s943E ipv_s943I;
              };
        };

Foreign.C.Error.throwErrnoIf
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=4,
 Str=<L,1*C1(U)><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIf1 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIf_1
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<L,1*C1(U)><L,U><C(S(SL)),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s943L loc_s943M f_s943N eta1_s943O]
        case f_s943N eta1_s943O of {
          (#,#) ipv_s943Q [Occ=Once*] ipv1_s943R [Occ=Once] ->
              case pred_s943L ipv1_s943R of {
                GHC.Types.False -> (#,#) [ipv_s943Q GHC.Tuple.()];
                GHC.Types.True ->
                    case __pkg_ccall base-4.11.0.0 [ipv_s943Q] of {
                      (#,#) ds_s943V [Occ=Once] ds2_s943W [Occ=Once] ->
                          case narrow32Int# [ds2_s943W] of sat_s943X {
                            __DEFAULT -> Foreign.C.Error.$wlvl loc_s943M sat_s943X ds_s943V;
                          };
                    };
              };
        };

Foreign.C.Error.throwErrnoIf_
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Str=<L,1*C1(U)><L,U><C(S(SL)),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIf_1 eta_B4 eta_B3 eta_B2 eta_B1;

sat_s943Z :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1#];

sat_s9440 :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_s943Z GHC.Types.[]];

Foreign.C.Error.throwErrnoIfMinus2 :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_s9440;

Foreign.C.Error.throwErrnoIfMinus1_
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s9441 $dNum_s9442]
        let {
          ds_s9443 [Occ=OnceL] :: a_a91TT
          [LclId] =
              [$dNum_s9442] \u []
                  let {
                    sat_s9444 [Occ=Once] :: a_a91TT
                    [LclId] =
                        [$dNum_s9442] \u []
                            GHC.Num.fromInteger $dNum_s9442 Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s9442 sat_s9444; } in
        let {
          sat_s944i [Occ=Once]
            :: GHC.Base.String
               -> GHC.Types.IO a_a91TT
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [$dEq_s9441 ds_s9443] \r [loc_s9445 f_s9446 eta1_s9447]
                  case f_s9446 eta1_s9447 of {
                    (#,#) ipv_s9449 [Occ=Once*] ipv1_s944a [Occ=Once] ->
                        case GHC.Classes.== $dEq_s9441 ipv1_s944a ds_s9443 of {
                          GHC.Types.False -> (#,#) [ipv_s9449 GHC.Tuple.()];
                          GHC.Types.True ->
                              case __pkg_ccall base-4.11.0.0 [ipv_s9449] of {
                                (#,#) ds2_s944e [Occ=Once] ds3_s944f [Occ=Once] ->
                                    case narrow32Int# [ds3_s944f] of sat_s944g {
                                      __DEFAULT ->
                                          Foreign.C.Error.$wlvl loc_s9445 sat_s944g ds2_s944e;
                                    };
                              };
                        };
                  };
        } in  sat_s944i;

Foreign.C.Error.throwErrnoIfMinus1
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s944j $dNum_s944k]
        let {
          ds_s944l [Occ=OnceL] :: a_a91U5
          [LclId] =
              [$dNum_s944k] \u []
                  let {
                    sat_s944m [Occ=Once] :: a_a91U5
                    [LclId] =
                        [$dNum_s944k] \u []
                            GHC.Num.fromInteger $dNum_s944k Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s944k sat_s944m; } in
        let {
          sat_s944u [Occ=Once]
            :: GHC.Base.String
               -> GHC.Types.IO a_a91U5
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a91U5 #)
          [LclId] =
              [$dEq_s944j ds_s944l] \r [loc_s944n f_s944o s_s944p]
                  case f_s944o s_s944p of ds1_s944q {
                    (#,#) ipv_s944r [Occ=Once] ipv1_s944s [Occ=Once] ->
                        case GHC.Classes.== $dEq_s944j ipv1_s944s ds_s944l of {
                          GHC.Types.False -> ds1_s944q;
                          GHC.Types.True -> Foreign.C.Error.throwErrno1 loc_s944n ipv_s944r;
                        };
                  };
        } in  sat_s944u;

Foreign.C.Error.throwErrnoIfNull1
  :: forall a.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<L,U><C(S(LS(S))),1*C1(U(U,U(U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [loc_s944v f_s944w s_s944x]
        case f_s944w s_s944x of ds1_s944y {
          (#,#) ipv_s944z [Occ=Once] ipv1_s944A [Occ=Once!] ->
              case ipv1_s944A of {
                GHC.Ptr.Ptr a1_s944C [Occ=Once] ->
                    case eqAddr# [a1_s944C __NULL] of {
                      __DEFAULT -> ds1_s944y;
                      1# -> Foreign.C.Error.throwErrno1 loc_s944v ipv_s944z;
                    };
              };
        };

Foreign.C.Error.throwErrnoIfNull
  :: forall a.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a) -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Str=<L,U><C(S(LS(S))),1*C1(U(U,U(U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfNull1 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfMinus1Retry2 [Occ=LoopBreaker]
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=4,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s944E loc_s944F f_s944G s_s944H]
        case f_s944G s_s944H of ds1_s944I {
          (#,#) ipv_s944J [Occ=Once] ipv1_s944K [Occ=Once] ->
              case pred_s944E ipv1_s944K of {
                GHC.Types.False -> ds1_s944I;
                GHC.Types.True ->
                    case __pkg_ccall base-4.11.0.0 [ipv_s944J] of {
                      (#,#) ds_s944O [Occ=Once*] ds2_s944P [Occ=Once] ->
                          case narrow32Int# [ds2_s944P] of {
                            __DEFAULT -> Foreign.C.Error.throwErrno1 loc_s944F ds_s944O;
                            4# ->
                                Foreign.C.Error.throwErrnoIfMinus1Retry2
                                    pred_s944E loc_s944F f_s944G ds_s944O;
                          };
                    };
              };
        };

Foreign.C.Error.throwErrnoIfRetry
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=4,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfMinus1Retry2
            eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfRetry_1
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s944R loc_s944S f_s944T eta1_s944U]
        case
            Foreign.C.Error.throwErrnoIfMinus1Retry2
                pred_s944R loc_s944S f_s944T eta1_s944U
        of
        { (#,#) ipv_s944W [Occ=Once] _ [Occ=Dead] ->
              (#,#) [ipv_s944W GHC.Tuple.()];
        };

Foreign.C.Error.throwErrnoIfRetry_
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfRetry_1 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfMinus1Retry_
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s944Y $dNum_s944Z]
        let {
          ds_s9450 [Occ=OnceL] :: a_a91UP
          [LclId] =
              [$dNum_s944Z] \u []
                  let {
                    sat_s9451 [Occ=Once] :: a_a91UP
                    [LclId] =
                        [$dNum_s944Z] \u []
                            GHC.Num.fromInteger $dNum_s944Z Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s944Z sat_s9451; } in
        let {
          pred_s9452 [Occ=OnceL, Dmd=<L,C(U)>] :: a_a91UP -> GHC.Types.Bool
          [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
              [$dEq_s944Y ds_s9450] \r [ds1_s9453]
                  GHC.Classes.== $dEq_s944Y ds1_s9453 ds_s9450; } in
        let {
          sat_s945a [Occ=Once]
            :: GHC.Base.String
               -> GHC.Types.IO a_a91UP
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [pred_s9452] \r [loc_s9454 f_s9455 eta1_s9456]
                  case
                      Foreign.C.Error.throwErrnoIfMinus1Retry2
                          pred_s9452 loc_s9454 f_s9455 eta1_s9456
                  of
                  { (#,#) ipv_s9458 [Occ=Once] _ [Occ=Dead] ->
                        (#,#) [ipv_s9458 GHC.Tuple.()];
                  };
        } in  sat_s945a;

Foreign.C.Error.throwErrnoIfMinus1Retry1
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s945b $dNum_s945c]
        let {
          ds_s945d [Occ=OnceL] :: a_a91V1
          [LclId] =
              [$dNum_s945c] \u []
                  let {
                    sat_s945e [Occ=Once] :: a_a91V1
                    [LclId] =
                        [$dNum_s945c] \u []
                            GHC.Num.fromInteger $dNum_s945c Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s945c sat_s945e; } in
        let {
          sat_s945g [Occ=Once] :: a_a91V1 -> GHC.Types.Bool
          [LclId] =
              [$dEq_s945b ds_s945d] \r [ds1_s945f]
                  GHC.Classes.== $dEq_s945b ds1_s945f ds_s945d;
        } in  Foreign.C.Error.throwErrnoIfMinus1Retry2 sat_s945g;

Foreign.C.Error.throwErrnoIfMinus1Retry
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfMinus1Retry1 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfNullRetry2
  :: forall a. GHC.Ptr.Ptr a -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [ds_s945h]
        case ds_s945h of {
          GHC.Ptr.Ptr a1_s945j [Occ=Once] ->
              case eqAddr# [a1_s945j __NULL] of sat_s945k {
                __DEFAULT -> tagToEnum# [sat_s945k];
              };
        };

Foreign.C.Error.throwErrnoIfNullRetry1
  :: forall a.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId, Arity=3, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfMinus1Retry2
            Foreign.C.Error.throwErrnoIfNullRetry2 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfNullRetry
  :: forall a.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a) -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId, Arity=3, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfNullRetry1 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2 [Occ=LoopBreaker]
  :: forall a b.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Types.IO b
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=5,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><L,C(U(U,A))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s945l loc_s945m f_s945n on_block_s945o s_s945p]
        case f_s945n s_s945p of ds1_s945q {
          (#,#) ipv_s945r [Occ=Once] ipv1_s945s [Occ=Once] ->
              case pred_s945l ipv1_s945s of {
                GHC.Types.False -> ds1_s945q;
                GHC.Types.True ->
                    case __pkg_ccall base-4.11.0.0 [ipv_s945r] of {
                      (#,#) ds_s945w [Occ=Once*] ds2_s945x [Occ=Once] ->
                          case narrow32Int# [ds2_s945x] of {
                            __DEFAULT -> Foreign.C.Error.throwErrno1 loc_s945m ds_s945w;
                            4# ->
                                Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                                    pred_s945l loc_s945m f_s945n on_block_s945o ds_s945w;
                            11# ->
                                case on_block_s945o ds_s945w of {
                                  (#,#) ipv2_s945A [Occ=Once] _ [Occ=Dead] ->
                                      Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                                          pred_s945l loc_s945m f_s945n on_block_s945o ipv2_s945A;
                                };
                          };
                    };
              };
        };

Foreign.C.Error.throwErrnoIfRetryMayBlock
  :: forall a b.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Types.IO b
     -> GHC.Types.IO a
[GblId,
 Arity=5,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><L,C(U(U,A))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
            eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfRetryMayBlock_1
  :: forall a b.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Types.IO b
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><L,C(U(U,A))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s945C loc_s945D f_s945E on_block_s945F eta1_s945G]
        case
            Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                pred_s945C loc_s945D f_s945E on_block_s945F eta1_s945G
        of
        { (#,#) ipv_s945I [Occ=Once] _ [Occ=Dead] ->
              (#,#) [ipv_s945I GHC.Tuple.()];
        };

Foreign.C.Error.throwErrnoIfRetryMayBlock_
  :: forall a b.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Types.IO b
     -> GHC.Types.IO ()
[GblId,
 Arity=5,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><L,C(U(U,A))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfRetryMayBlock_1
            eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_
  :: forall a b.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.Types.IO a -> GHC.Types.IO b -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s945K $dNum_s945L]
        let {
          ds_s945M [Occ=OnceL] :: a_a91VZ
          [LclId] =
              [$dNum_s945L] \u []
                  let {
                    sat_s945N [Occ=Once] :: a_a91VZ
                    [LclId] =
                        [$dNum_s945L] \u []
                            GHC.Num.fromInteger $dNum_s945L Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s945L sat_s945N; } in
        let {
          pred_s945O [Occ=OnceL, Dmd=<L,C(U)>] :: a_a91VZ -> GHC.Types.Bool
          [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
              [$dEq_s945K ds_s945M] \r [ds1_s945P]
                  GHC.Classes.== $dEq_s945K ds1_s945P ds_s945M; } in
        let {
          sat_s945X [Occ=Once]
            :: GHC.Base.String
               -> GHC.Types.IO a_a91VZ
               -> GHC.Types.IO b_a91W0
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [pred_s945O] \r [loc_s945Q f_s945R on_block_s945S eta1_s945T]
                  case
                      Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                          pred_s945O loc_s945Q f_s945R on_block_s945S eta1_s945T
                  of
                  { (#,#) ipv_s945V [Occ=Once] _ [Occ=Dead] ->
                        (#,#) [ipv_s945V GHC.Tuple.()];
                  };
        } in  sat_s945X;

Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1
  :: forall a b.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Types.IO b
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s945Y $dNum_s945Z]
        let {
          ds_s9460 [Occ=OnceL] :: a_a91Wd
          [LclId] =
              [$dNum_s945Z] \u []
                  let {
                    sat_s9461 [Occ=Once] :: a_a91Wd
                    [LclId] =
                        [$dNum_s945Z] \u []
                            GHC.Num.fromInteger $dNum_s945Z Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s945Z sat_s9461; } in
        let {
          sat_s9463 [Occ=Once] :: a_a91Wd -> GHC.Types.Bool
          [LclId] =
              [$dEq_s945Y ds_s9460] \r [ds1_s9462]
                  GHC.Classes.== $dEq_s945Y ds1_s9462 ds_s9460;
        } in  Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2 sat_s9463;

Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock
  :: forall a b.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.Types.IO a -> GHC.Types.IO b -> GHC.Types.IO a
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfNullRetryMayBlock1
  :: forall a b.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Types.IO b
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId, Arity=4, Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
            Foreign.C.Error.throwErrnoIfNullRetry2 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfNullRetryMayBlock
  :: forall a b.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Types.IO b
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId, Arity=4, Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfNullRetryMayBlock1
            eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.$wlvl1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.IO.FilePath
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId, Arity=4, Str=<B,U><B,U><B,U><B,U>x, Unf=OtherCon []] =
    [] \r [w_s9464 ww_s9465 w1_s9466 w2_s9467]
        let {
          sat_s946a [Occ=Once] :: GHC.Exception.SomeException
          [LclId] =
              [w_s9464 ww_s9465 w1_s9466] \u []
                  let {
                    sat_s9469 [Occ=Once] :: GHC.IO.Exception.IOException
                    [LclId] =
                        [w_s9464 ww_s9465 w1_s9466] \u []
                            let {
                              sat_s9468 [Occ=Once] :: GHC.Base.Maybe GHC.Base.String
                              [LclId] =
                                  CCCS GHC.Base.Just! [w1_s9466];
                            } in 
                              Foreign.C.Error.$werrnoToIOError
                                  w_s9464 ww_s9465 GHC.Base.Nothing sat_s9468;
                  } in 
                    GHC.IO.Exception.$fExceptionIOException_$ctoException sat_s9469;
        } in  raiseIO# [sat_s946a w2_s9467];

Foreign.C.Error.throwErrnoPath1
  :: forall a.
     GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId, Arity=3, Str=<L,U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [loc_s946b path_s946c s_s946d]
        case __pkg_ccall base-4.11.0.0 [s_s946d] of {
          (#,#) ds_s946g [Occ=Once] ds1_s946h [Occ=Once] ->
              case narrow32Int# [ds1_s946h] of sat_s946i {
                __DEFAULT ->
                    Foreign.C.Error.$wlvl1 loc_s946b sat_s946i path_s946c ds_s946g;
              };
        };

Foreign.C.Error.throwErrnoPath
  :: forall a. GHC.Base.String -> GHC.IO.FilePath -> GHC.Types.IO a
[GblId, Arity=3, Str=<L,U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoPath1 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoPathIf1
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=5,
 Str=<L,1*C1(U)><L,U><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s946j loc_s946k path_s946l f_s946m s_s946n]
        case f_s946m s_s946n of ds1_s946o {
          (#,#) ipv_s946p [Occ=Once] ipv1_s946q [Occ=Once] ->
              case pred_s946j ipv1_s946q of {
                GHC.Types.False -> ds1_s946o;
                GHC.Types.True ->
                    Foreign.C.Error.throwErrnoPath1 loc_s946k path_s946l ipv_s946p;
              };
        };

Foreign.C.Error.throwErrnoPathIf
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO a
     -> GHC.Types.IO a
[GblId,
 Arity=5,
 Str=<L,1*C1(U)><L,U><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoPathIf1
            eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoPathIf_1
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Str=<L,1*C1(U)><L,U><L,U><C(S(SL)),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s946s loc_s946t path_s946u f_s946v eta1_s946w]
        case f_s946v eta1_s946w of {
          (#,#) ipv_s946y [Occ=Once*] ipv1_s946z [Occ=Once] ->
              case pred_s946s ipv1_s946z of {
                GHC.Types.False -> (#,#) [ipv_s946y GHC.Tuple.()];
                GHC.Types.True ->
                    case __pkg_ccall base-4.11.0.0 [ipv_s946y] of {
                      (#,#) ds_s946D [Occ=Once] ds2_s946E [Occ=Once] ->
                          case narrow32Int# [ds2_s946E] of sat_s946F {
                            __DEFAULT ->
                                Foreign.C.Error.$wlvl1 loc_s946t sat_s946F path_s946u ds_s946D;
                          };
                    };
              };
        };

Foreign.C.Error.throwErrnoPathIf_
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO a
     -> GHC.Types.IO ()
[GblId,
 Arity=5,
 Str=<L,1*C1(U)><L,U><L,U><C(S(SL)),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoPathIf_1
            eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoPathIfMinus1_
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.IO.FilePath -> GHC.Types.IO a -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s946H $dNum_s946I]
        let {
          ds_s946J [Occ=OnceL] :: a_a91X4
          [LclId] =
              [$dNum_s946I] \u []
                  let {
                    sat_s946K [Occ=Once] :: a_a91X4
                    [LclId] =
                        [$dNum_s946I] \u []
                            GHC.Num.fromInteger $dNum_s946I Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s946I sat_s946K; } in
        let {
          sat_s946Z [Occ=Once]
            :: GHC.Base.String
               -> GHC.IO.FilePath
               -> GHC.Types.IO a_a91X4
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [$dEq_s946H ds_s946J] \r [loc_s946L path_s946M f_s946N eta1_s946O]
                  case f_s946N eta1_s946O of {
                    (#,#) ipv_s946Q [Occ=Once*] ipv1_s946R [Occ=Once] ->
                        case GHC.Classes.== $dEq_s946H ipv1_s946R ds_s946J of {
                          GHC.Types.False -> (#,#) [ipv_s946Q GHC.Tuple.()];
                          GHC.Types.True ->
                              case __pkg_ccall base-4.11.0.0 [ipv_s946Q] of {
                                (#,#) ds2_s946V [Occ=Once] ds3_s946W [Occ=Once] ->
                                    case narrow32Int# [ds3_s946W] of sat_s946X {
                                      __DEFAULT ->
                                          Foreign.C.Error.$wlvl1
                                              loc_s946L sat_s946X path_s946M ds2_s946V;
                                    };
                              };
                        };
                  };
        } in  sat_s946Z;

Foreign.C.Error.throwErrnoPathIfNull1
  :: forall a.
     GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=4,
 Str=<L,U><L,U><C(S(LS(S))),1*C1(U(U,U(U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [loc_s9470 path_s9471 f_s9472 s_s9473]
        case f_s9472 s_s9473 of ds1_s9474 {
          (#,#) ipv_s9475 [Occ=Once] ipv1_s9476 [Occ=Once!] ->
              case ipv1_s9476 of {
                GHC.Ptr.Ptr a1_s9478 [Occ=Once] ->
                    case eqAddr# [a1_s9478 __NULL] of {
                      __DEFAULT -> ds1_s9474;
                      1# ->
                          Foreign.C.Error.throwErrnoPath1 loc_s9470 path_s9471 ipv_s9475;
                    };
              };
        };

Foreign.C.Error.throwErrnoPathIfNull
  :: forall a.
     GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=4,
 Str=<L,U><L,U><C(S(LS(S))),1*C1(U(U,U(U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoPathIfNull1 eta_B4 eta_B3 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoPathIfMinus1
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.IO.FilePath -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s947a $dNum_s947b]
        let {
          ds_s947c [Occ=OnceL] :: a_a91Xn
          [LclId] =
              [$dNum_s947b] \u []
                  let {
                    sat_s947d [Occ=Once] :: a_a91Xn
                    [LclId] =
                        [$dNum_s947b] \u []
                            GHC.Num.fromInteger $dNum_s947b Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s947b sat_s947d; } in
        let {
          sat_s947m [Occ=Once]
            :: GHC.Base.String
               -> GHC.IO.FilePath
               -> GHC.Types.IO a_a91Xn
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a91Xn #)
          [LclId] =
              [$dEq_s947a ds_s947c] \r [loc_s947e path_s947f f_s947g s_s947h]
                  case f_s947g s_s947h of ds1_s947i {
                    (#,#) ipv_s947j [Occ=Once] ipv1_s947k [Occ=Once] ->
                        case GHC.Classes.== $dEq_s947a ipv1_s947k ds_s947c of {
                          GHC.Types.False -> ds1_s947i;
                          GHC.Types.True ->
                              Foreign.C.Error.throwErrnoPath1 loc_s947e path_s947f ipv_s947j;
                        };
                  };
        } in  sat_s947m;


==================== STG syntax: ====================
2018-03-16 16:04:13.751743721 UTC

Foreign.C.Error.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Foreign.C.Error.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Error.$trModule4];

Foreign.C.Error.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.C.Error"#;

Foreign.C.Error.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Error.$trModule2];

Foreign.C.Error.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.C.Error.$trModule3
                                     Foreign.C.Error.$trModule1];

$krep_r92Th :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCInt
                                              GHC.Types.[]];

Foreign.C.Error.$tcErrno2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Errno"#;

Foreign.C.Error.$tcErrno1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Error.$tcErrno2];

Foreign.C.Error.$tcErrno :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9614618910057470603##
                                    5790003468206630810##
                                    Foreign.C.Error.$trModule
                                    Foreign.C.Error.$tcErrno1
                                    0#
                                    GHC.Types.krep$*];

$krep1_r92Ti :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Error.$tcErrno
                                              GHC.Types.[]];

Foreign.C.Error.$tc'Errno1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r92Th $krep1_r92Ti];

Foreign.C.Error.$tc'Errno3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Errno"#;

Foreign.C.Error.$tc'Errno2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Error.$tc'Errno3];

Foreign.C.Error.$tc'Errno :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [18175500743799072511##
                                    6332857689812514354##
                                    Foreign.C.Error.$trModule
                                    Foreign.C.Error.$tc'Errno2
                                    0#
                                    Foreign.C.Error.$tc'Errno1];

Foreign.C.Error.getErrno1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Error.Errno #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
          Unit# ds1_s942v [Occ=Once] ->
              case narrow32Int# [ds1_s942v] of sat_s942w {
                __DEFAULT ->
                    let {
                      sat_s942x [Occ=Once] :: Foreign.C.Error.Errno
                      [LclId] =
                          CCCS GHC.Int.I32#! [sat_s942w];
                    } in  Unit# [sat_s942x];
              };
        };

Foreign.C.Error.getErrno :: GHC.Types.IO Foreign.C.Error.Errno
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E] Foreign.C.Error.getErrno1 GHC.Prim.void#;

Foreign.C.Error.resetErrno1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        case __pkg_ccall base-4.11.0.0 [0# GHC.Prim.void#] of {
          (##) -> Unit# [GHC.Tuple.()];
        };

Foreign.C.Error.resetErrno :: GHC.Types.IO ()
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E] Foreign.C.Error.resetErrno1 GHC.Prim.void#;

Foreign.C.Error.isValidErrno
  :: Foreign.C.Error.Errno -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [ds_s942C]
        case ds_s942C of {
          GHC.Int.I32# x_s942E [Occ=Once!] ->
              case x_s942E of {
                __DEFAULT -> GHC.Types.True [];
                -1# -> GHC.Types.False [];
              };
        };

Foreign.C.Error.$fEqErrno_$c==
  :: Foreign.C.Error.Errno -> Foreign.C.Error.Errno -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)><L,1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [errno1_s942G errno2_s942H]
        case errno1_s942G of {
          GHC.Int.I32# x_s942J [Occ=Once!] ->
              case x_s942J of wild1_s942K {
                __DEFAULT ->
                    case errno2_s942H of {
                      GHC.Int.I32# x1_s942M [Occ=Once!] ->
                          case x1_s942M of wild3_s942N {
                            __DEFAULT ->
                                case ==# [wild1_s942K wild3_s942N] of sat_s942O {
                                  __DEFAULT -> tagToEnum# [sat_s942O];
                                };
                            -1# -> GHC.Types.False [];
                          };
                    };
                -1# -> GHC.Types.False [];
              };
        };

Foreign.C.Error.$fEqErrno_$c/= [InlPrag=INLINE (sat-args=2)]
  :: Foreign.C.Error.Errno -> Foreign.C.Error.Errno -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)><L,1*U(1*U)>,
 Unf=OtherCon []] =
    [] \r [eta_s942P eta1_s942Q]
        case eta_s942P of {
          GHC.Int.I32# x_s942S [Occ=Once!] ->
              case x_s942S of wild1_s942T {
                __DEFAULT ->
                    case eta1_s942Q of {
                      GHC.Int.I32# x1_s942V [Occ=Once!] ->
                          case x1_s942V of wild3_s942W {
                            __DEFAULT ->
                                case ==# [wild1_s942T wild3_s942W] of {
                                  __DEFAULT -> GHC.Types.True [];
                                  1# -> GHC.Types.False [];
                                };
                            -1# -> GHC.Types.True [];
                          };
                    };
                -1# -> GHC.Types.True [];
              };
        };

Foreign.C.Error.$fEqErrno [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Error.Errno
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [Foreign.C.Error.$fEqErrno_$c==
                                     Foreign.C.Error.$fEqErrno_$c/=];

Foreign.C.Error.eXDEV1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [18#];

Foreign.C.Error.eXDEV :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eXDEV1;

Foreign.C.Error.eAGAIN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [11#];

Foreign.C.Error.eWOULDBLOCK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eAGAIN1;

Foreign.C.Error.eUSERS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [87#];

Foreign.C.Error.eUSERS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eUSERS1;

Foreign.C.Error.eTXTBSY1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [26#];

Foreign.C.Error.eTXTBSY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eTXTBSY1;

Foreign.C.Error.eTOOMANYREFS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [109#];

Foreign.C.Error.eTOOMANYREFS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eTOOMANYREFS1;

Foreign.C.Error.eTIMEDOUT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [110#];

Foreign.C.Error.eTIMEDOUT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eTIMEDOUT1;

Foreign.C.Error.eTIME1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [62#];

Foreign.C.Error.eTIME :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eTIME1;

Foreign.C.Error.eSTALE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [116#];

Foreign.C.Error.eSTALE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSTALE1;

Foreign.C.Error.eSRMNT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [69#];

Foreign.C.Error.eSRMNT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSRMNT1;

Foreign.C.Error.eSRCH1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [3#];

Foreign.C.Error.eSRCH :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSRCH1;

Foreign.C.Error.eSPIPE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [29#];

Foreign.C.Error.eSPIPE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSPIPE1;

Foreign.C.Error.eSOCKTNOSUPPORT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [94#];

Foreign.C.Error.eSOCKTNOSUPPORT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSOCKTNOSUPPORT1;

Foreign.C.Error.eSHUTDOWN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [108#];

Foreign.C.Error.eSHUTDOWN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eSHUTDOWN1;

Foreign.C.Error.eBADRPC1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [-1#];

Foreign.C.Error.eRREMOTE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.eRPCMISMATCH :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.eROFS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [30#];

Foreign.C.Error.eROFS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eROFS1;

Foreign.C.Error.eREMOTE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [66#];

Foreign.C.Error.eREMOTE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eREMOTE1;

Foreign.C.Error.eREMCHG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [78#];

Foreign.C.Error.eREMCHG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eREMCHG1;

Foreign.C.Error.eRANGE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [34#];

Foreign.C.Error.eRANGE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eRANGE1;

Foreign.C.Error.ePROTOTYPE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [91#];

Foreign.C.Error.ePROTOTYPE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePROTOTYPE1;

Foreign.C.Error.ePROTONOSUPPORT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [93#];

Foreign.C.Error.ePROTONOSUPPORT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePROTONOSUPPORT1;

Foreign.C.Error.ePROTO1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [71#];

Foreign.C.Error.ePROTO :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePROTO1;

Foreign.C.Error.ePROGUNAVAIL :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.ePROGMISMATCH :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.ePROCUNAVAIL :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.ePROCLIM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.ePIPE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [32#];

Foreign.C.Error.ePIPE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePIPE1;

Foreign.C.Error.ePFNOSUPPORT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [96#];

Foreign.C.Error.ePFNOSUPPORT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePFNOSUPPORT1;

Foreign.C.Error.ePERM1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [1#];

Foreign.C.Error.ePERM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.ePERM1;

Foreign.C.Error.eNOTSUP1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [95#];

Foreign.C.Error.eOPNOTSUPP :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTSUP1;

Foreign.C.Error.eNXIO1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [6#];

Foreign.C.Error.eNXIO :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNXIO1;

Foreign.C.Error.eNOTTY1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [25#];

Foreign.C.Error.eNOTTY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTTY1;

Foreign.C.Error.eNOTSUP :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTSUP1;

Foreign.C.Error.eNOTSOCK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [88#];

Foreign.C.Error.eNOTSOCK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTSOCK1;

Foreign.C.Error.eNOTEMPTY1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [39#];

Foreign.C.Error.eNOTEMPTY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTEMPTY1;

Foreign.C.Error.eNOTDIR1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [20#];

Foreign.C.Error.eNOTDIR :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTDIR1;

Foreign.C.Error.eNOTCONN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [107#];

Foreign.C.Error.eNOTCONN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTCONN1;

Foreign.C.Error.eNOTBLK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [15#];

Foreign.C.Error.eNOTBLK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOTBLK1;

Foreign.C.Error.eNOSYS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [38#];

Foreign.C.Error.eNOSYS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOSYS1;

Foreign.C.Error.eNOSTR1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [60#];

Foreign.C.Error.eNOSTR :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOSTR1;

Foreign.C.Error.eNOSR1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [63#];

Foreign.C.Error.eNOSR :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOSR1;

Foreign.C.Error.eNOSPC1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [28#];

Foreign.C.Error.eNOSPC :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOSPC1;

Foreign.C.Error.eNOPROTOOPT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [92#];

Foreign.C.Error.eNOPROTOOPT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOPROTOOPT1;

Foreign.C.Error.eNONET1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [64#];

Foreign.C.Error.eNONET :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNONET1;

Foreign.C.Error.eNOMSG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [42#];

Foreign.C.Error.eNOMSG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOMSG1;

Foreign.C.Error.eNOMEM1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [12#];

Foreign.C.Error.eNOMEM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOMEM1;

Foreign.C.Error.eNOLINK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [67#];

Foreign.C.Error.eNOLINK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOLINK1;

Foreign.C.Error.eNOLCK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [37#];

Foreign.C.Error.eNOLCK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOLCK1;

Foreign.C.Error.eNOEXEC1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [8#];

Foreign.C.Error.eNOEXEC :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOEXEC1;

Foreign.C.Error.eNOENT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [2#];

Foreign.C.Error.eNOENT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOENT1;

Foreign.C.Error.eNODEV1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [19#];

Foreign.C.Error.eNODEV :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNODEV1;

Foreign.C.Error.eNODATA1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [61#];

Foreign.C.Error.eNODATA :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNODATA1;

Foreign.C.Error.eNOBUFS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [105#];

Foreign.C.Error.eNOBUFS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNOBUFS1;

Foreign.C.Error.eNFILE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [23#];

Foreign.C.Error.eNFILE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNFILE1;

Foreign.C.Error.eNETUNREACH1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [101#];

Foreign.C.Error.eNETUNREACH :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNETUNREACH1;

Foreign.C.Error.eNETRESET1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [102#];

Foreign.C.Error.eNETRESET :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNETRESET1;

Foreign.C.Error.eNETDOWN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [100#];

Foreign.C.Error.eNETDOWN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNETDOWN1;

Foreign.C.Error.eNAMETOOLONG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [36#];

Foreign.C.Error.eNAMETOOLONG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eNAMETOOLONG1;

Foreign.C.Error.eMULTIHOP1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [72#];

Foreign.C.Error.eMULTIHOP :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eMULTIHOP1;

Foreign.C.Error.eMSGSIZE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [90#];

Foreign.C.Error.eMSGSIZE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eMSGSIZE1;

Foreign.C.Error.eMLINK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [31#];

Foreign.C.Error.eMLINK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eMLINK1;

Foreign.C.Error.eMFILE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [24#];

Foreign.C.Error.eMFILE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eMFILE1;

Foreign.C.Error.eLOOP1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [40#];

Foreign.C.Error.eLOOP :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eLOOP1;

Foreign.C.Error.eISDIR1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [21#];

Foreign.C.Error.eISDIR :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eISDIR1;

Foreign.C.Error.eISCONN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [106#];

Foreign.C.Error.eISCONN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eISCONN1;

Foreign.C.Error.eIO1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [5#];

Foreign.C.Error.eIO :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eIO1;

Foreign.C.Error.eINVAL1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [22#];

Foreign.C.Error.eINVAL :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eINVAL1;

Foreign.C.Error.eINTR1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [4#];

Foreign.C.Error.eINTR :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eINTR1;

Foreign.C.Error.eINPROGRESS1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [115#];

Foreign.C.Error.eINPROGRESS :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eINPROGRESS1;

Foreign.C.Error.eILSEQ1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [84#];

Foreign.C.Error.eILSEQ :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eILSEQ1;

Foreign.C.Error.eIDRM1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [43#];

Foreign.C.Error.eIDRM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eIDRM1;

Foreign.C.Error.eHOSTUNREACH1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [113#];

Foreign.C.Error.eHOSTUNREACH :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eHOSTUNREACH1;

Foreign.C.Error.eHOSTDOWN1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [112#];

Foreign.C.Error.eHOSTDOWN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eHOSTDOWN1;

Foreign.C.Error.eFTYPE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.eFBIG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [27#];

Foreign.C.Error.eFBIG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eFBIG1;

Foreign.C.Error.eFAULT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [14#];

Foreign.C.Error.eFAULT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eFAULT1;

Foreign.C.Error.eEXIST1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [17#];

Foreign.C.Error.eEXIST :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eEXIST1;

Foreign.C.Error.eDQUOT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [122#];

Foreign.C.Error.eDQUOT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eDQUOT1;

Foreign.C.Error.eDOM1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [33#];

Foreign.C.Error.eDOM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eDOM1;

Foreign.C.Error.eDIRTY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.eDESTADDRREQ1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [89#];

Foreign.C.Error.eDESTADDRREQ :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eDESTADDRREQ1;

Foreign.C.Error.eDEADLK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [35#];

Foreign.C.Error.eDEADLK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eDEADLK1;

Foreign.C.Error.eCONNRESET1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [104#];

Foreign.C.Error.eCONNRESET :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eCONNRESET1;

Foreign.C.Error.eCONNREFUSED1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [111#];

Foreign.C.Error.eCONNREFUSED :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eCONNREFUSED1;

Foreign.C.Error.eCONNABORTED1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [103#];

Foreign.C.Error.eCONNABORTED :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eCONNABORTED1;

Foreign.C.Error.eCOMM1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [70#];

Foreign.C.Error.eCOMM :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eCOMM1;

Foreign.C.Error.eCHILD1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [10#];

Foreign.C.Error.eCHILD :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eCHILD1;

Foreign.C.Error.eBUSY1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [16#];

Foreign.C.Error.eBUSY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBUSY1;

Foreign.C.Error.eBADRPC :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADRPC1;

Foreign.C.Error.eBADMSG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [74#];

Foreign.C.Error.eBADMSG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADMSG1;

Foreign.C.Error.eBADF1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [9#];

Foreign.C.Error.eBADF :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eBADF1;

Foreign.C.Error.eALREADY1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [114#];

Foreign.C.Error.eALREADY :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eALREADY1;

Foreign.C.Error.eAGAIN :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eAGAIN1;

Foreign.C.Error.eAFNOSUPPORT1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [97#];

Foreign.C.Error.eAFNOSUPPORT :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eAFNOSUPPORT1;

Foreign.C.Error.eADV1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [68#];

Foreign.C.Error.eADV :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eADV1;

Foreign.C.Error.eADDRNOTAVAIL1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [99#];

Foreign.C.Error.eADDRNOTAVAIL :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eADDRNOTAVAIL1;

Foreign.C.Error.eADDRINUSE1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [98#];

Foreign.C.Error.eADDRINUSE :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eADDRINUSE1;

Foreign.C.Error.eACCES1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [13#];

Foreign.C.Error.eACCES :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eACCES1;

Foreign.C.Error.e2BIG1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [7#];

Foreign.C.Error.e2BIG :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.e2BIG1;

Foreign.C.Error.eOK1 :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [0#];

Foreign.C.Error.eOK :: Foreign.C.Error.Errno
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] Foreign.C.Error.eOK1;

Foreign.C.Error.$werrnoToIOError [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Base.Maybe GHC.IO.Handle.Types.Handle
     -> GHC.Base.Maybe GHC.Base.String
     -> GHC.IO.Exception.IOError
[GblId, Arity=4, Str=<L,U><S,U><L,U><L,U>, Unf=OtherCon []] =
    [] \r [w_s942Y ww_s942Z w1_s9430 w2_s9431]
        case
            case noDuplicate# [GHC.Prim.realWorld#] of s'_s9432 {
              (##) ->
                  case __pkg_ccall base-4.11.0.0 [ww_s942Z GHC.Prim.void#] of {
                    Unit# ds1_s9436 [Occ=Once] ->
                        case GHC.IO.Encoding.getForeignEncoding GHC.Prim.void# of {
                          Unit# ipv1_s9439 [Occ=Once] ->
                              case
                                  GHC.Foreign.$wpeekCString ipv1_s9439 ds1_s9436 GHC.Prim.void#
                              of
                              { Unit# ipv3_s943c [Occ=Once] ->
                                    let {
                                      sat_s943f [Occ=Once] :: Foreign.C.Types.CInt
                                      [LclId] =
                                          CCCS GHC.Int.I32#! [ww_s942Z]; } in
                                    let {
                                      sat_s943g [Occ=Once] :: GHC.Base.Maybe Foreign.C.Types.CInt
                                      [LclId] =
                                          CCCS GHC.Base.Just! [sat_s943f]; } in
                                    let {
                                      sat_s943e [Occ=Once] :: GHC.IO.Exception.IOErrorType
                                      [LclId] =
                                          [ww_s942Z] \u []
                                              case ww_s942Z of {
                                                __DEFAULT -> GHC.IO.Exception.OtherError [];
                                                1# -> GHC.IO.Exception.PermissionDenied [];
                                                2# -> GHC.IO.Exception.NoSuchThing [];
                                                3# -> GHC.IO.Exception.NoSuchThing [];
                                                4# -> GHC.IO.Exception.Interrupted [];
                                                5# -> GHC.IO.Exception.HardwareFault [];
                                                6# -> GHC.IO.Exception.NoSuchThing [];
                                                7# -> GHC.IO.Exception.ResourceExhausted [];
                                                8# -> GHC.IO.Exception.InvalidArgument [];
                                                9# -> GHC.IO.Exception.InvalidArgument [];
                                                10# -> GHC.IO.Exception.NoSuchThing [];
                                                11# -> GHC.IO.Exception.ResourceExhausted [];
                                                12# -> GHC.IO.Exception.ResourceExhausted [];
                                                13# -> GHC.IO.Exception.PermissionDenied [];
                                                15# -> GHC.IO.Exception.InvalidArgument [];
                                                16# -> GHC.IO.Exception.ResourceBusy [];
                                                17# -> GHC.IO.Exception.AlreadyExists [];
                                                18# -> GHC.IO.Exception.UnsupportedOperation [];
                                                19# -> GHC.IO.Exception.UnsupportedOperation [];
                                                20# -> GHC.IO.Exception.InappropriateType [];
                                                21# -> GHC.IO.Exception.InappropriateType [];
                                                22# -> GHC.IO.Exception.InvalidArgument [];
                                                23# -> GHC.IO.Exception.ResourceExhausted [];
                                                24# -> GHC.IO.Exception.ResourceExhausted [];
                                                25# -> GHC.IO.Exception.IllegalOperation [];
                                                26# -> GHC.IO.Exception.ResourceBusy [];
                                                27# -> GHC.IO.Exception.PermissionDenied [];
                                                28# -> GHC.IO.Exception.ResourceExhausted [];
                                                29# -> GHC.IO.Exception.UnsupportedOperation [];
                                                30# -> GHC.IO.Exception.PermissionDenied [];
                                                31# -> GHC.IO.Exception.ResourceExhausted [];
                                                32# -> GHC.IO.Exception.ResourceVanished [];
                                                33# -> GHC.IO.Exception.InvalidArgument [];
                                                34# -> GHC.IO.Exception.UnsupportedOperation [];
                                                35# -> GHC.IO.Exception.ResourceBusy [];
                                                36# -> GHC.IO.Exception.InvalidArgument [];
                                                37# -> GHC.IO.Exception.ResourceExhausted [];
                                                38# -> GHC.IO.Exception.UnsupportedOperation [];
                                                39# -> GHC.IO.Exception.UnsatisfiedConstraints [];
                                                40# -> GHC.IO.Exception.InvalidArgument [];
                                                42# -> GHC.IO.Exception.NoSuchThing [];
                                                43# -> GHC.IO.Exception.ResourceVanished [];
                                                60# -> GHC.IO.Exception.InvalidArgument [];
                                                61# -> GHC.IO.Exception.NoSuchThing [];
                                                62# -> GHC.IO.Exception.TimeExpired [];
                                                63# -> GHC.IO.Exception.ResourceExhausted [];
                                                64# -> GHC.IO.Exception.NoSuchThing [];
                                                66# -> GHC.IO.Exception.IllegalOperation [];
                                                67# -> GHC.IO.Exception.ResourceVanished [];
                                                69# -> GHC.IO.Exception.UnsatisfiedConstraints [];
                                                70# -> GHC.IO.Exception.ResourceVanished [];
                                                71# -> GHC.IO.Exception.ProtocolError [];
                                                72# -> GHC.IO.Exception.UnsupportedOperation [];
                                                74# -> GHC.IO.Exception.InappropriateType [];
                                                78# -> GHC.IO.Exception.ResourceVanished [];
                                                84# -> GHC.IO.Exception.InvalidArgument [];
                                                87# -> GHC.IO.Exception.ResourceExhausted [];
                                                88# -> GHC.IO.Exception.InvalidArgument [];
                                                89# -> GHC.IO.Exception.InvalidArgument [];
                                                90# -> GHC.IO.Exception.ResourceExhausted [];
                                                91# -> GHC.IO.Exception.ProtocolError [];
                                                92# -> GHC.IO.Exception.UnsupportedOperation [];
                                                93# -> GHC.IO.Exception.ProtocolError [];
                                                94# -> GHC.IO.Exception.UnsupportedOperation [];
                                                95# -> GHC.IO.Exception.UnsupportedOperation [];
                                                96# -> GHC.IO.Exception.UnsupportedOperation [];
                                                97# -> GHC.IO.Exception.UnsupportedOperation [];
                                                98# -> GHC.IO.Exception.ResourceBusy [];
                                                99# -> GHC.IO.Exception.UnsupportedOperation [];
                                                100# -> GHC.IO.Exception.ResourceVanished [];
                                                101# -> GHC.IO.Exception.NoSuchThing [];
                                                102# -> GHC.IO.Exception.ResourceVanished [];
                                                104# -> GHC.IO.Exception.ResourceVanished [];
                                                105# -> GHC.IO.Exception.ResourceExhausted [];
                                                106# -> GHC.IO.Exception.AlreadyExists [];
                                                107# -> GHC.IO.Exception.InvalidArgument [];
                                                108# -> GHC.IO.Exception.IllegalOperation [];
                                                109# -> GHC.IO.Exception.ResourceExhausted [];
                                                110# -> GHC.IO.Exception.TimeExpired [];
                                                111# -> GHC.IO.Exception.NoSuchThing [];
                                                112# -> GHC.IO.Exception.NoSuchThing [];
                                                113# -> GHC.IO.Exception.NoSuchThing [];
                                                114# -> GHC.IO.Exception.AlreadyExists [];
                                                115# -> GHC.IO.Exception.AlreadyExists [];
                                                116# -> GHC.IO.Exception.ResourceVanished [];
                                                122# -> GHC.IO.Exception.PermissionDenied [];
                                              }; } in
                                    let {
                                      sat_s943h [Occ=Once] :: GHC.IO.Exception.IOException
                                      [LclId] =
                                          CCCS GHC.IO.Exception.IOError! [w1_s9430
                                                                          sat_s943e
                                                                          w_s942Y
                                                                          ipv3_s943c
                                                                          sat_s943g
                                                                          w2_s9431];
                                    } in  Unit# [sat_s943h];
                              };
                        };
                  };
            }
        of
        { Unit# ipv1_s943k [Occ=Once] -> ipv1_s943k;
        };

Foreign.C.Error.errnoToIOError [InlPrag=NOUSERINLINE[0]]
  :: GHC.Base.String
     -> Foreign.C.Error.Errno
     -> GHC.Base.Maybe GHC.IO.Handle.Types.Handle
     -> GHC.Base.Maybe GHC.Base.String
     -> GHC.IO.Exception.IOError
[GblId,
 Arity=4,
 Str=<L,U><S(S),1*U(U)><L,U><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s943l w1_s943m w2_s943n w3_s943o]
        case w1_s943m of {
          GHC.Int.I32# ww1_s943q [Occ=Once] ->
              Foreign.C.Error.$werrnoToIOError
                  w_s943l ww1_s943q w2_s943n w3_s943o;
        };

Foreign.C.Error.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId, Arity=3, Str=<B,U><B,U><B,U>x, Unf=OtherCon []] =
    [] \r [w_s943r ww_s943s void_0E]
        let {
          sat_s943v [Occ=Once] :: GHC.Exception.SomeException
          [LclId] =
              [w_s943r ww_s943s] \u []
                  let {
                    sat_s943u [Occ=Once] :: GHC.IO.Exception.IOException
                    [LclId] =
                        [w_s943r ww_s943s] \u []
                            Foreign.C.Error.$werrnoToIOError
                                w_s943r ww_s943s GHC.Base.Nothing GHC.Base.Nothing;
                  } in 
                    GHC.IO.Exception.$fExceptionIOException_$ctoException sat_s943u;
        } in  raiseIO# [sat_s943v GHC.Prim.void#];

Foreign.C.Error.throwErrno1
  :: forall a.
     GHC.Base.String
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [loc_s943w void_0E]
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
          Unit# ds1_s943B [Occ=Once] ->
              case narrow32Int# [ds1_s943B] of sat_s943C {
                __DEFAULT ->
                    Foreign.C.Error.$wlvl loc_s943w sat_s943C GHC.Prim.void#;
              };
        };

Foreign.C.Error.throwErrno
  :: forall a. GHC.Base.String -> GHC.Types.IO a
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        Foreign.C.Error.throwErrno1 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoIf1
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=4,
 Str=<L,1*C1(U)><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s943D loc_s943E f_s943F void_0E]
        case f_s943F GHC.Prim.void# of ds1_s943H {
          Unit# ipv1_s943J [Occ=Once] ->
              case pred_s943D ipv1_s943J of {
                GHC.Types.False -> Unit# [ipv1_s943J];
                GHC.Types.True ->
                    Foreign.C.Error.throwErrno1 loc_s943E GHC.Prim.void#;
              };
        };

Foreign.C.Error.throwErrnoIf
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=4,
 Str=<L,1*C1(U)><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIf1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoIf_1
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<L,1*C1(U)><L,U><C(S(SL)),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s943L loc_s943M f_s943N void_0E]
        case f_s943N GHC.Prim.void# of {
          Unit# ipv1_s943R [Occ=Once] ->
              case pred_s943L ipv1_s943R of {
                GHC.Types.False -> Unit# [GHC.Tuple.()];
                GHC.Types.True ->
                    case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                      Unit# ds2_s943W [Occ=Once] ->
                          case narrow32Int# [ds2_s943W] of sat_s943X {
                            __DEFAULT ->
                                Foreign.C.Error.$wlvl loc_s943M sat_s943X GHC.Prim.void#;
                          };
                    };
              };
        };

Foreign.C.Error.throwErrnoIf_
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Str=<L,1*C1(U)><L,U><C(S(SL)),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIf_1 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

sat_s943Z :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1#];

sat_s9440 :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_s943Z GHC.Types.[]];

Foreign.C.Error.throwErrnoIfMinus2 :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_s9440;

Foreign.C.Error.throwErrnoIfMinus1_
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s9441 $dNum_s9442]
        let {
          ds_s9443 [Occ=OnceL] :: a_a91TT
          [LclId] =
              [$dNum_s9442] \u []
                  let {
                    sat_s9444 [Occ=Once] :: a_a91TT
                    [LclId] =
                        [$dNum_s9442] \u []
                            GHC.Num.fromInteger $dNum_s9442 Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s9442 sat_s9444; } in
        let {
          sat_s944i [Occ=Once]
            :: GHC.Base.String
               -> GHC.Types.IO a_a91TT
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [$dEq_s9441 ds_s9443] \r [loc_s9445 f_s9446 void_0E]
                  case f_s9446 GHC.Prim.void# of {
                    Unit# ipv1_s944a [Occ=Once] ->
                        case GHC.Classes.== $dEq_s9441 ipv1_s944a ds_s9443 of {
                          GHC.Types.False -> Unit# [GHC.Tuple.()];
                          GHC.Types.True ->
                              case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                                Unit# ds3_s944f [Occ=Once] ->
                                    case narrow32Int# [ds3_s944f] of sat_s944g {
                                      __DEFAULT ->
                                          Foreign.C.Error.$wlvl loc_s9445 sat_s944g GHC.Prim.void#;
                                    };
                              };
                        };
                  };
        } in  sat_s944i;

Foreign.C.Error.throwErrnoIfMinus1
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s944j $dNum_s944k]
        let {
          ds_s944l [Occ=OnceL] :: a_a91U5
          [LclId] =
              [$dNum_s944k] \u []
                  let {
                    sat_s944m [Occ=Once] :: a_a91U5
                    [LclId] =
                        [$dNum_s944k] \u []
                            GHC.Num.fromInteger $dNum_s944k Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s944k sat_s944m; } in
        let {
          sat_s944u [Occ=Once]
            :: GHC.Base.String
               -> GHC.Types.IO a_a91U5
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a91U5 #)
          [LclId] =
              [$dEq_s944j ds_s944l] \r [loc_s944n f_s944o void_0E]
                  case f_s944o GHC.Prim.void# of ds1_s944q {
                    Unit# ipv1_s944s [Occ=Once] ->
                        case GHC.Classes.== $dEq_s944j ipv1_s944s ds_s944l of {
                          GHC.Types.False -> Unit# [ipv1_s944s];
                          GHC.Types.True ->
                              Foreign.C.Error.throwErrno1 loc_s944n GHC.Prim.void#;
                        };
                  };
        } in  sat_s944u;

Foreign.C.Error.throwErrnoIfNull1
  :: forall a.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=3,
 Str=<L,U><C(S(LS(S))),1*C1(U(U,U(U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [loc_s944v f_s944w void_0E]
        case f_s944w GHC.Prim.void# of ds1_s944y {
          Unit# ipv1_s944A [Occ=Once!] ->
              case ipv1_s944A of {
                GHC.Ptr.Ptr a1_s944C [Occ=Once] ->
                    case eqAddr# [a1_s944C __NULL] of {
                      __DEFAULT -> Unit# [ipv1_s944A];
                      1# -> Foreign.C.Error.throwErrno1 loc_s944v GHC.Prim.void#;
                    };
              };
        };

Foreign.C.Error.throwErrnoIfNull
  :: forall a.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a) -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=3,
 Str=<L,U><C(S(LS(S))),1*C1(U(U,U(U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIfNull1 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoIfMinus1Retry2 [Occ=LoopBreaker]
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=4,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s944E loc_s944F f_s944G void_0E]
        case f_s944G GHC.Prim.void# of ds1_s944I {
          Unit# ipv1_s944K [Occ=Once] ->
              case pred_s944E ipv1_s944K of {
                GHC.Types.False -> Unit# [ipv1_s944K];
                GHC.Types.True ->
                    case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                      Unit# ds2_s944P [Occ=Once] ->
                          case narrow32Int# [ds2_s944P] of {
                            __DEFAULT -> Foreign.C.Error.throwErrno1 loc_s944F GHC.Prim.void#;
                            4# ->
                                Foreign.C.Error.throwErrnoIfMinus1Retry2
                                    pred_s944E loc_s944F f_s944G GHC.Prim.void#;
                          };
                    };
              };
        };

Foreign.C.Error.throwErrnoIfRetry
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=4,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIfMinus1Retry2
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoIfRetry_1
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s944R loc_s944S f_s944T void_0E]
        case
            Foreign.C.Error.throwErrnoIfMinus1Retry2
                pred_s944R loc_s944S f_s944T GHC.Prim.void#
        of
        { Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
        };

Foreign.C.Error.throwErrnoIfRetry_
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIfRetry_1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoIfMinus1Retry_
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s944Y $dNum_s944Z]
        let {
          ds_s9450 [Occ=OnceL] :: a_a91UP
          [LclId] =
              [$dNum_s944Z] \u []
                  let {
                    sat_s9451 [Occ=Once] :: a_a91UP
                    [LclId] =
                        [$dNum_s944Z] \u []
                            GHC.Num.fromInteger $dNum_s944Z Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s944Z sat_s9451; } in
        let {
          pred_s9452 [Occ=OnceL, Dmd=<L,C(U)>] :: a_a91UP -> GHC.Types.Bool
          [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
              [$dEq_s944Y ds_s9450] \r [ds1_s9453]
                  GHC.Classes.== $dEq_s944Y ds1_s9453 ds_s9450; } in
        let {
          sat_s945a [Occ=Once]
            :: GHC.Base.String
               -> GHC.Types.IO a_a91UP
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [pred_s9452] \r [loc_s9454 f_s9455 void_0E]
                  case
                      Foreign.C.Error.throwErrnoIfMinus1Retry2
                          pred_s9452 loc_s9454 f_s9455 GHC.Prim.void#
                  of
                  { Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
                  };
        } in  sat_s945a;

Foreign.C.Error.throwErrnoIfMinus1Retry1
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s945b $dNum_s945c]
        let {
          ds_s945d [Occ=OnceL] :: a_a91V1
          [LclId] =
              [$dNum_s945c] \u []
                  let {
                    sat_s945e [Occ=Once] :: a_a91V1
                    [LclId] =
                        [$dNum_s945c] \u []
                            GHC.Num.fromInteger $dNum_s945c Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s945c sat_s945e; } in
        let {
          sat_s945g [Occ=Once] :: a_a91V1 -> GHC.Types.Bool
          [LclId] =
              [$dEq_s945b ds_s945d] \r [ds1_s945f]
                  GHC.Classes.== $dEq_s945b ds1_s945f ds_s945d;
        } in  Foreign.C.Error.throwErrnoIfMinus1Retry2 sat_s945g;

Foreign.C.Error.throwErrnoIfMinus1Retry
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfMinus1Retry1 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfNullRetry2
  :: forall a. GHC.Ptr.Ptr a -> GHC.Types.Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [ds_s945h]
        case ds_s945h of {
          GHC.Ptr.Ptr a1_s945j [Occ=Once] ->
              case eqAddr# [a1_s945j __NULL] of sat_s945k {
                __DEFAULT -> tagToEnum# [sat_s945k];
              };
        };

Foreign.C.Error.throwErrnoIfNullRetry1
  :: forall a.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId, Arity=3, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIfMinus1Retry2
            Foreign.C.Error.throwErrnoIfNullRetry2
            eta_B3
            eta_B2
            GHC.Prim.void#;

Foreign.C.Error.throwErrnoIfNullRetry
  :: forall a.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a) -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId, Arity=3, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIfNullRetry1
            eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2 [Occ=LoopBreaker]
  :: forall a b.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Types.IO b
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=5,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><L,C(U(U,A))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s945l loc_s945m f_s945n on_block_s945o void_0E]
        case f_s945n GHC.Prim.void# of ds1_s945q {
          Unit# ipv1_s945s [Occ=Once] ->
              case pred_s945l ipv1_s945s of {
                GHC.Types.False -> Unit# [ipv1_s945s];
                GHC.Types.True ->
                    case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                      Unit# ds2_s945x [Occ=Once] ->
                          case narrow32Int# [ds2_s945x] of {
                            __DEFAULT -> Foreign.C.Error.throwErrno1 loc_s945m GHC.Prim.void#;
                            4# ->
                                Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                                    pred_s945l loc_s945m f_s945n on_block_s945o GHC.Prim.void#;
                            11# ->
                                case on_block_s945o GHC.Prim.void# of {
                                  Unit# _ [Occ=Dead] ->
                                      Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                                          pred_s945l
                                          loc_s945m
                                          f_s945n
                                          on_block_s945o
                                          GHC.Prim.void#;
                                };
                          };
                    };
              };
        };

Foreign.C.Error.throwErrnoIfRetryMayBlock
  :: forall a b.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Types.IO b
     -> GHC.Types.IO a
[GblId,
 Arity=5,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><L,C(U(U,A))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
            eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoIfRetryMayBlock_1
  :: forall a b.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Types.IO b
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><L,C(U(U,A))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s945C loc_s945D f_s945E on_block_s945F void_0E]
        case
            Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                pred_s945C loc_s945D f_s945E on_block_s945F GHC.Prim.void#
        of
        { Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
        };

Foreign.C.Error.throwErrnoIfRetryMayBlock_
  :: forall a b.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Types.IO b
     -> GHC.Types.IO ()
[GblId,
 Arity=5,
 Str=<L,C(U)><L,U><C(S),C(U(U,U))><L,C(U(U,A))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIfRetryMayBlock_1
            eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock_
  :: forall a b.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.Types.IO a -> GHC.Types.IO b -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s945K $dNum_s945L]
        let {
          ds_s945M [Occ=OnceL] :: a_a91VZ
          [LclId] =
              [$dNum_s945L] \u []
                  let {
                    sat_s945N [Occ=Once] :: a_a91VZ
                    [LclId] =
                        [$dNum_s945L] \u []
                            GHC.Num.fromInteger $dNum_s945L Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s945L sat_s945N; } in
        let {
          pred_s945O [Occ=OnceL, Dmd=<L,C(U)>] :: a_a91VZ -> GHC.Types.Bool
          [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
              [$dEq_s945K ds_s945M] \r [ds1_s945P]
                  GHC.Classes.== $dEq_s945K ds1_s945P ds_s945M; } in
        let {
          sat_s945X [Occ=Once]
            :: GHC.Base.String
               -> GHC.Types.IO a_a91VZ
               -> GHC.Types.IO b_a91W0
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [pred_s945O] \r [loc_s945Q f_s945R on_block_s945S void_0E]
                  case
                      Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
                          pred_s945O loc_s945Q f_s945R on_block_s945S GHC.Prim.void#
                  of
                  { Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
                  };
        } in  sat_s945X;

Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1
  :: forall a b.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Types.IO b
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s945Y $dNum_s945Z]
        let {
          ds_s9460 [Occ=OnceL] :: a_a91Wd
          [LclId] =
              [$dNum_s945Z] \u []
                  let {
                    sat_s9461 [Occ=Once] :: a_a91Wd
                    [LclId] =
                        [$dNum_s945Z] \u []
                            GHC.Num.fromInteger $dNum_s945Z Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s945Z sat_s9461; } in
        let {
          sat_s9463 [Occ=Once] :: a_a91Wd -> GHC.Types.Bool
          [LclId] =
              [$dEq_s945Y ds_s9460] \r [ds1_s9462]
                  GHC.Classes.== $dEq_s945Y ds1_s9462 ds_s9460;
        } in  Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2 sat_s9463;

Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock
  :: forall a b.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.Types.IO a -> GHC.Types.IO b -> GHC.Types.IO a
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock1 eta_B2 eta_B1;

Foreign.C.Error.throwErrnoIfNullRetryMayBlock1
  :: forall a b.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Types.IO b
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId, Arity=4, Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIfMinus1RetryMayBlock2
            Foreign.C.Error.throwErrnoIfNullRetry2
            eta_B4
            eta_B3
            eta_B2
            GHC.Prim.void#;

Foreign.C.Error.throwErrnoIfNullRetryMayBlock
  :: forall a b.
     GHC.Base.String
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Types.IO b
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId, Arity=4, Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoIfNullRetryMayBlock1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.$wlvl1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Base.String
     -> GHC.Prim.Int#
     -> GHC.IO.FilePath
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId, Arity=4, Str=<B,U><B,U><B,U><B,U>x, Unf=OtherCon []] =
    [] \r [w_s9464 ww_s9465 w1_s9466 void_0E]
        let {
          sat_s946a [Occ=Once] :: GHC.Exception.SomeException
          [LclId] =
              [w_s9464 ww_s9465 w1_s9466] \u []
                  let {
                    sat_s9469 [Occ=Once] :: GHC.IO.Exception.IOException
                    [LclId] =
                        [w_s9464 ww_s9465 w1_s9466] \u []
                            let {
                              sat_s9468 [Occ=Once] :: GHC.Base.Maybe GHC.Base.String
                              [LclId] =
                                  CCCS GHC.Base.Just! [w1_s9466];
                            } in 
                              Foreign.C.Error.$werrnoToIOError
                                  w_s9464 ww_s9465 GHC.Base.Nothing sat_s9468;
                  } in 
                    GHC.IO.Exception.$fExceptionIOException_$ctoException sat_s9469;
        } in  raiseIO# [sat_s946a GHC.Prim.void#];

Foreign.C.Error.throwErrnoPath1
  :: forall a.
     GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId, Arity=3, Str=<L,U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [loc_s946b path_s946c void_0E]
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
          Unit# ds1_s946h [Occ=Once] ->
              case narrow32Int# [ds1_s946h] of sat_s946i {
                __DEFAULT ->
                    Foreign.C.Error.$wlvl1
                        loc_s946b sat_s946i path_s946c GHC.Prim.void#;
              };
        };

Foreign.C.Error.throwErrnoPath
  :: forall a. GHC.Base.String -> GHC.IO.FilePath -> GHC.Types.IO a
[GblId, Arity=3, Str=<L,U><L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoPath1 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoPathIf1
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=5,
 Str=<L,1*C1(U)><L,U><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s946j loc_s946k path_s946l f_s946m void_0E]
        case f_s946m GHC.Prim.void# of ds1_s946o {
          Unit# ipv1_s946q [Occ=Once] ->
              case pred_s946j ipv1_s946q of {
                GHC.Types.False -> Unit# [ipv1_s946q];
                GHC.Types.True ->
                    Foreign.C.Error.throwErrnoPath1
                        loc_s946k path_s946l GHC.Prim.void#;
              };
        };

Foreign.C.Error.throwErrnoPathIf
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO a
     -> GHC.Types.IO a
[GblId,
 Arity=5,
 Str=<L,1*C1(U)><L,U><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoPathIf1
            eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoPathIf_1
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=5,
 Str=<L,1*C1(U)><L,U><L,U><C(S(SL)),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [pred_s946s loc_s946t path_s946u f_s946v void_0E]
        case f_s946v GHC.Prim.void# of {
          Unit# ipv1_s946z [Occ=Once] ->
              case pred_s946s ipv1_s946z of {
                GHC.Types.False -> Unit# [GHC.Tuple.()];
                GHC.Types.True ->
                    case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                      Unit# ds2_s946E [Occ=Once] ->
                          case narrow32Int# [ds2_s946E] of sat_s946F {
                            __DEFAULT ->
                                Foreign.C.Error.$wlvl1
                                    loc_s946t sat_s946F path_s946u GHC.Prim.void#;
                          };
                    };
              };
        };

Foreign.C.Error.throwErrnoPathIf_
  :: forall a.
     (a -> GHC.Types.Bool)
     -> GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO a
     -> GHC.Types.IO ()
[GblId,
 Arity=5,
 Str=<L,1*C1(U)><L,U><L,U><C(S(SL)),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoPathIf_1
            eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoPathIfMinus1_
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.IO.FilePath -> GHC.Types.IO a -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s946H $dNum_s946I]
        let {
          ds_s946J [Occ=OnceL] :: a_a91X4
          [LclId] =
              [$dNum_s946I] \u []
                  let {
                    sat_s946K [Occ=Once] :: a_a91X4
                    [LclId] =
                        [$dNum_s946I] \u []
                            GHC.Num.fromInteger $dNum_s946I Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s946I sat_s946K; } in
        let {
          sat_s946Z [Occ=Once]
            :: GHC.Base.String
               -> GHC.IO.FilePath
               -> GHC.Types.IO a_a91X4
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
          [LclId] =
              [$dEq_s946H ds_s946J] \r [loc_s946L path_s946M f_s946N void_0E]
                  case f_s946N GHC.Prim.void# of {
                    Unit# ipv1_s946R [Occ=Once] ->
                        case GHC.Classes.== $dEq_s946H ipv1_s946R ds_s946J of {
                          GHC.Types.False -> Unit# [GHC.Tuple.()];
                          GHC.Types.True ->
                              case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                                Unit# ds3_s946W [Occ=Once] ->
                                    case narrow32Int# [ds3_s946W] of sat_s946X {
                                      __DEFAULT ->
                                          Foreign.C.Error.$wlvl1
                                              loc_s946L sat_s946X path_s946M GHC.Prim.void#;
                                    };
                              };
                        };
                  };
        } in  sat_s946Z;

Foreign.C.Error.throwErrnoPathIfNull1
  :: forall a.
     GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Ptr.Ptr a #)
[GblId,
 Arity=4,
 Str=<L,U><L,U><C(S(LS(S))),1*C1(U(U,U(U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [loc_s9470 path_s9471 f_s9472 void_0E]
        case f_s9472 GHC.Prim.void# of ds1_s9474 {
          Unit# ipv1_s9476 [Occ=Once!] ->
              case ipv1_s9476 of {
                GHC.Ptr.Ptr a1_s9478 [Occ=Once] ->
                    case eqAddr# [a1_s9478 __NULL] of {
                      __DEFAULT -> Unit# [ipv1_s9476];
                      1# ->
                          Foreign.C.Error.throwErrnoPath1
                              loc_s9470 path_s9471 GHC.Prim.void#;
                    };
              };
        };

Foreign.C.Error.throwErrnoPathIfNull
  :: forall a.
     GHC.Base.String
     -> GHC.IO.FilePath
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
     -> GHC.Types.IO (GHC.Ptr.Ptr a)
[GblId,
 Arity=4,
 Str=<L,U><L,U><C(S(LS(S))),1*C1(U(U,U(U)))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        Foreign.C.Error.throwErrnoPathIfNull1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

Foreign.C.Error.throwErrnoPathIfMinus1
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.IO.FilePath -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=2,
 Str=<L,U(C(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,1*C1(U))>,
 Unf=OtherCon []] =
    [] \r [$dEq_s947a $dNum_s947b]
        let {
          ds_s947c [Occ=OnceL] :: a_a91Xn
          [LclId] =
              [$dNum_s947b] \u []
                  let {
                    sat_s947d [Occ=Once] :: a_a91Xn
                    [LclId] =
                        [$dNum_s947b] \u []
                            GHC.Num.fromInteger $dNum_s947b Foreign.C.Error.throwErrnoIfMinus2;
                  } in  GHC.Num.negate $dNum_s947b sat_s947d; } in
        let {
          sat_s947m [Occ=Once]
            :: GHC.Base.String
               -> GHC.IO.FilePath
               -> GHC.Types.IO a_a91Xn
               -> GHC.Prim.State# GHC.Prim.RealWorld
               -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_a91Xn #)
          [LclId] =
              [$dEq_s947a ds_s947c] \r [loc_s947e path_s947f f_s947g void_0E]
                  case f_s947g GHC.Prim.void# of ds1_s947i {
                    Unit# ipv1_s947k [Occ=Once] ->
                        case GHC.Classes.== $dEq_s947a ipv1_s947k ds_s947c of {
                          GHC.Types.False -> Unit# [ipv1_s947k];
                          GHC.Types.True ->
                              Foreign.C.Error.throwErrnoPath1
                                  loc_s947e path_s947f GHC.Prim.void#;
                        };
                  };
        } in  sat_s947m;

