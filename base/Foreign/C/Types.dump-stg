
==================== Pre unarise: ====================
2018-03-16 15:59:49.575031377 UTC

Foreign.C.Types.$fShowCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord64_$cshowsPrec
                                    GHC.Word.$fShowWord64_$cshow
                                    GHC.Word.$fShowWord64_$cshowList];

Foreign.C.Types.$fReadCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord64_$creadsPrec
                                    GHC.Read.$fReadWord64_$creadList
                                    GHC.Read.$fReadWord13
                                    GHC.Read.$fReadWord11];

Foreign.C.Types.$fBoundedCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord7
                                       GHC.Word.$fBoundedWord64_$cmaxBound];

Foreign.C.Types.$fStorableCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord64_$calignment
                                                Foreign.Storable.$fStorableWord64_$calignment
                                                GHC.Storable.readWord64OffPtr1
                                                GHC.Storable.writeWord64OffPtr1
                                                Foreign.Storable.$fStorableWord18
                                                Foreign.Storable.$fStorableWord17
                                                Foreign.Storable.$fStorableWord15
                                                Foreign.Storable.$fStorableWord14];

Foreign.C.Types.$fEnumCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord64_$csucc
                                    GHC.Word.$fEnumWord64_$cpred
                                    GHC.Word.$fEnumWord64_$ctoEnum
                                    GHC.Word.$fEnumWord64_$cfromEnum
                                    GHC.Word.$fEnumWord64_$cenumFrom
                                    GHC.Word.$fEnumWord64_$cenumFromThen
                                    GHC.Word.$fEnumWord64_$cenumFromTo
                                    GHC.Word.$fEnumWord64_$cenumFromThenTo];

Foreign.C.Types.$fNumCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord64_$c+
                                  GHC.Word.$fNumWord64_$c-
                                  GHC.Word.$fNumWord64_$c*
                                  GHC.Word.$fNumWord64_$cnegate
                                  GHC.Word.$fNumWord64_$cabs
                                  GHC.Word.$fNumWord64_$csignum
                                  GHC.Word.$fNumWord64_$cfromInteger];

Foreign.C.Types.$fEqCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord64
                                     GHC.Word.neWord64];

Foreign.C.Types.$fOrdCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUIntMax
                                      GHC.Word.$fOrdWord64_$ccompare
                                      GHC.Word.ltWord64
                                      GHC.Word.leWord64
                                      GHC.Word.gtWord64
                                      GHC.Word.geWord64
                                      GHC.Word.$fOrdWord64_$cmax
                                      GHC.Word.$fOrdWord64_$cmin];

Foreign.C.Types.$fRealCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUIntMax
                                    Foreign.C.Types.$fOrdCUIntMax
                                    GHC.Word.$fRealWord64_$ctoRational];

Foreign.C.Types.$fIntegralCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CUIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCUIntMax
                                        Foreign.C.Types.$fEnumCUIntMax
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cquotRem
                                        GHC.Word.$fIntegralWord64_$cdivMod
                                        GHC.Word.$fIntegralWord64_$ctoInteger];

Foreign.C.Types.$fBitsCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCUIntMax
                                     GHC.Word.$fBitsWord64_$c.&.
                                     GHC.Word.$fBitsWord64_$c.|.
                                     GHC.Word.$fBitsWord64_$cxor
                                     GHC.Word.$fBitsWord64_$ccomplement
                                     GHC.Word.$fBitsWord64_$cshift
                                     GHC.Word.$fBitsWord64_$crotate
                                     GHC.Word.$fBitsWord7
                                     GHC.Word.$fBitsWord64_$cbit
                                     GHC.Word.$fBitsWord64_$csetBit
                                     GHC.Word.$fBitsWord64_$cclearBit
                                     GHC.Word.$fBitsWord64_$ccomplementBit
                                     GHC.Word.$fBitsWord64_$ctestBit
                                     GHC.Word.$fBitsWord64_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord64_$cfiniteBitSize
                                     GHC.Word.$fBitsWord64_$cisSigned
                                     GHC.Word.$fBitsWord64_$cshiftL
                                     GHC.Word.$fBitsWord64_$cunsafeShiftL
                                     GHC.Word.$fBitsWord64_$cshiftR
                                     GHC.Word.$fBitsWord64_$cunsafeShiftR
                                     GHC.Word.$fBitsWord64_$crotateL
                                     GHC.Word.$fBitsWord64_$crotateR
                                     GHC.Word.$fBitsWord64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCUIntMax
                                           GHC.Word.$fBitsWord64_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord64_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fBoundedCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt64_$cminBound
                                       GHC.Int.$fBoundedInt64_$cmaxBound];

Foreign.C.Types.$fStorableCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCIntMax
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCIntMax
                                    Foreign.C.Types.$fOrdCIntMax
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fIntegralCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCIntMax
                                        Foreign.C.Types.$fEnumCIntMax
                                        GHC.Int.$fIntegralInt64_$cquot
                                        GHC.Int.$fIntegralInt64_$crem
                                        GHC.Int.$fIntegralInt64_$cdiv
                                        GHC.Int.$fIntegralInt64_$cmod
                                        GHC.Int.$fIntegralInt64_$cquotRem
                                        GHC.Int.$fIntegralInt64_$cdivMod
                                        GHC.Int.$fIntegralInt64_$ctoInteger];

Foreign.C.Types.$fBitsCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCIntMax
                                     GHC.Int.$fBitsInt64_$c.&.
                                     GHC.Int.$fBitsInt64_$c.|.
                                     GHC.Int.$fBitsInt64_$cxor
                                     GHC.Int.$fBitsInt64_$ccomplement
                                     GHC.Int.$fBitsInt64_$cshift
                                     GHC.Int.$fBitsInt64_$crotate
                                     GHC.Int.$fBitsInt10
                                     GHC.Int.$fBitsInt64_$cbit
                                     GHC.Int.$fBitsInt64_$csetBit
                                     GHC.Int.$fBitsInt64_$cclearBit
                                     GHC.Int.$fBitsInt64_$ccomplementBit
                                     GHC.Int.$fBitsInt64_$ctestBit
                                     GHC.Int.$fBitsInt64_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt64_$cfiniteBitSize
                                     GHC.Int.$fBitsInt64_$cisSigned
                                     GHC.Int.$fBitsInt64_$cshiftL
                                     GHC.Int.$fBitsInt64_$cunsafeShiftL
                                     GHC.Int.$fBitsInt64_$cshiftR
                                     GHC.Int.$fBitsInt64_$cunsafeShiftR
                                     GHC.Int.$fBitsInt64_$crotateL
                                     GHC.Int.$fBitsInt64_$crotateR
                                     GHC.Int.$fBitsInt64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCIntMax
                                           GHC.Int.$fBitsInt64_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord64_$cshowsPrec
                                    GHC.Word.$fShowWord64_$cshow
                                    GHC.Word.$fShowWord64_$cshowList];

Foreign.C.Types.$fReadCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord64_$creadsPrec
                                    GHC.Read.$fReadWord64_$creadList
                                    GHC.Read.$fReadWord13
                                    GHC.Read.$fReadWord11];

Foreign.C.Types.$fBoundedCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord7
                                       GHC.Word.$fBoundedWord64_$cmaxBound];

Foreign.C.Types.$fStorableCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord64_$calignment
                                                Foreign.Storable.$fStorableWord64_$calignment
                                                GHC.Storable.readWord64OffPtr1
                                                GHC.Storable.writeWord64OffPtr1
                                                Foreign.Storable.$fStorableWord18
                                                Foreign.Storable.$fStorableWord17
                                                Foreign.Storable.$fStorableWord15
                                                Foreign.Storable.$fStorableWord14];

Foreign.C.Types.$fEnumCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord64_$csucc
                                    GHC.Word.$fEnumWord64_$cpred
                                    GHC.Word.$fEnumWord64_$ctoEnum
                                    GHC.Word.$fEnumWord64_$cfromEnum
                                    GHC.Word.$fEnumWord64_$cenumFrom
                                    GHC.Word.$fEnumWord64_$cenumFromThen
                                    GHC.Word.$fEnumWord64_$cenumFromTo
                                    GHC.Word.$fEnumWord64_$cenumFromThenTo];

Foreign.C.Types.$fNumCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord64_$c+
                                  GHC.Word.$fNumWord64_$c-
                                  GHC.Word.$fNumWord64_$c*
                                  GHC.Word.$fNumWord64_$cnegate
                                  GHC.Word.$fNumWord64_$cabs
                                  GHC.Word.$fNumWord64_$csignum
                                  GHC.Word.$fNumWord64_$cfromInteger];

Foreign.C.Types.$fEqCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord64
                                     GHC.Word.neWord64];

Foreign.C.Types.$fOrdCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUIntPtr
                                      GHC.Word.$fOrdWord64_$ccompare
                                      GHC.Word.ltWord64
                                      GHC.Word.leWord64
                                      GHC.Word.gtWord64
                                      GHC.Word.geWord64
                                      GHC.Word.$fOrdWord64_$cmax
                                      GHC.Word.$fOrdWord64_$cmin];

Foreign.C.Types.$fRealCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUIntPtr
                                    Foreign.C.Types.$fOrdCUIntPtr
                                    GHC.Word.$fRealWord64_$ctoRational];

Foreign.C.Types.$fIntegralCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CUIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCUIntPtr
                                        Foreign.C.Types.$fEnumCUIntPtr
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cquotRem
                                        GHC.Word.$fIntegralWord64_$cdivMod
                                        GHC.Word.$fIntegralWord64_$ctoInteger];

Foreign.C.Types.$fBitsCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCUIntPtr
                                     GHC.Word.$fBitsWord64_$c.&.
                                     GHC.Word.$fBitsWord64_$c.|.
                                     GHC.Word.$fBitsWord64_$cxor
                                     GHC.Word.$fBitsWord64_$ccomplement
                                     GHC.Word.$fBitsWord64_$cshift
                                     GHC.Word.$fBitsWord64_$crotate
                                     GHC.Word.$fBitsWord7
                                     GHC.Word.$fBitsWord64_$cbit
                                     GHC.Word.$fBitsWord64_$csetBit
                                     GHC.Word.$fBitsWord64_$cclearBit
                                     GHC.Word.$fBitsWord64_$ccomplementBit
                                     GHC.Word.$fBitsWord64_$ctestBit
                                     GHC.Word.$fBitsWord64_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord64_$cfiniteBitSize
                                     GHC.Word.$fBitsWord64_$cisSigned
                                     GHC.Word.$fBitsWord64_$cshiftL
                                     GHC.Word.$fBitsWord64_$cunsafeShiftL
                                     GHC.Word.$fBitsWord64_$cshiftR
                                     GHC.Word.$fBitsWord64_$cunsafeShiftR
                                     GHC.Word.$fBitsWord64_$crotateL
                                     GHC.Word.$fBitsWord64_$crotateR
                                     GHC.Word.$fBitsWord64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCUIntPtr
                                           GHC.Word.$fBitsWord64_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord64_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fBoundedCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt64_$cminBound
                                       GHC.Int.$fBoundedInt64_$cmaxBound];

Foreign.C.Types.$fStorableCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCIntPtr
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCIntPtr
                                    Foreign.C.Types.$fOrdCIntPtr
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fIntegralCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCIntPtr
                                        Foreign.C.Types.$fEnumCIntPtr
                                        GHC.Int.$fIntegralInt64_$cquot
                                        GHC.Int.$fIntegralInt64_$crem
                                        GHC.Int.$fIntegralInt64_$cdiv
                                        GHC.Int.$fIntegralInt64_$cmod
                                        GHC.Int.$fIntegralInt64_$cquotRem
                                        GHC.Int.$fIntegralInt64_$cdivMod
                                        GHC.Int.$fIntegralInt64_$ctoInteger];

Foreign.C.Types.$fBitsCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCIntPtr
                                     GHC.Int.$fBitsInt64_$c.&.
                                     GHC.Int.$fBitsInt64_$c.|.
                                     GHC.Int.$fBitsInt64_$cxor
                                     GHC.Int.$fBitsInt64_$ccomplement
                                     GHC.Int.$fBitsInt64_$cshift
                                     GHC.Int.$fBitsInt64_$crotate
                                     GHC.Int.$fBitsInt10
                                     GHC.Int.$fBitsInt64_$cbit
                                     GHC.Int.$fBitsInt64_$csetBit
                                     GHC.Int.$fBitsInt64_$cclearBit
                                     GHC.Int.$fBitsInt64_$ccomplementBit
                                     GHC.Int.$fBitsInt64_$ctestBit
                                     GHC.Int.$fBitsInt64_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt64_$cfiniteBitSize
                                     GHC.Int.$fBitsInt64_$cisSigned
                                     GHC.Int.$fBitsInt64_$cshiftL
                                     GHC.Int.$fBitsInt64_$cunsafeShiftL
                                     GHC.Int.$fBitsInt64_$cshiftR
                                     GHC.Int.$fBitsInt64_$cunsafeShiftR
                                     GHC.Int.$fBitsInt64_$crotateL
                                     GHC.Int.$fBitsInt64_$crotateR
                                     GHC.Int.$fBitsInt64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCIntPtr
                                           GHC.Int.$fBitsInt64_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CSUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CSUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fStorableCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CSUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CSUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CSUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CSUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CSUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCSUSeconds
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CSUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCSUSeconds
                                    Foreign.C.Types.$fOrdCSUSeconds
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fShowCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord32_$cshowsPrec
                                    GHC.Word.$fShowWord32_$cshow
                                    GHC.Word.$fShowWord32_$cshowList];

Foreign.C.Types.$fReadCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord32_$creadsPrec
                                    GHC.Read.$fReadWord32_$creadList
                                    GHC.Read.$fReadWord10
                                    GHC.Read.$fReadWord7];

Foreign.C.Types.$fStorableCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord32_$calignment
                                                Foreign.Storable.$fStorableWord32_$calignment
                                                GHC.Storable.readWord32OffPtr1
                                                GHC.Storable.writeWord32OffPtr1
                                                Foreign.Storable.$fStorableWord13
                                                Foreign.Storable.$fStorableWord12
                                                Foreign.Storable.$fStorableWord11
                                                Foreign.Storable.$fStorableWord10];

Foreign.C.Types.$fEnumCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord32_$csucc
                                    GHC.Word.$fEnumWord32_$cpred
                                    GHC.Word.$fEnumWord32_$ctoEnum
                                    GHC.Word.$fEnumWord32_$cfromEnum
                                    GHC.Word.$fEnumWord32_$cenumFrom
                                    GHC.Word.$fEnumWord32_$cenumFromThen
                                    GHC.Word.$fEnumWord32_$cenumFromTo
                                    GHC.Word.$fEnumWord32_$cenumFromThenTo];

Foreign.C.Types.$fNumCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord32_$c+
                                  GHC.Word.$fNumWord32_$c-
                                  GHC.Word.$fNumWord32_$c*
                                  GHC.Word.$fNumWord32_$cnegate
                                  GHC.Word.$fNumWord32_$cabs
                                  GHC.Word.$fNumWord32_$csignum
                                  GHC.Word.$fNumWord32_$cfromInteger];

Foreign.C.Types.$fEqCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord32
                                     GHC.Word.neWord32];

Foreign.C.Types.$fOrdCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUSeconds
                                      GHC.Word.$fOrdWord32_$ccompare
                                      GHC.Word.ltWord32
                                      GHC.Word.leWord32
                                      GHC.Word.gtWord32
                                      GHC.Word.geWord32
                                      GHC.Word.$fOrdWord32_$cmax
                                      GHC.Word.$fOrdWord32_$cmin];

Foreign.C.Types.$fRealCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUSeconds
                                    Foreign.C.Types.$fOrdCUSeconds
                                    GHC.Word.$fRealWord32_$ctoRational];

Foreign.C.Types.$fShowCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CTime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CTime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fStorableCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CTime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CTime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CTime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CTime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CTime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCTime
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CTime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCTime
                                    Foreign.C.Types.$fOrdCTime
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fShowCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CClock
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CClock
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fStorableCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CClock
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CClock
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CClock
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CClock
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CClock
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCClock
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CClock
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCClock
                                    Foreign.C.Types.$fOrdCClock
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fShowCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt32_$cshowsPrec
                                    GHC.Int.$fShowInt32_$cshow
                                    GHC.Int.$fShowInt32_$cshowList];

Foreign.C.Types.$fReadCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CSigAtomic
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt32_$creadsPrec
                                    GHC.Int.$fReadInt32_$creadList
                                    GHC.Int.$fReadInt6
                                    GHC.Int.$fReadInt4];

Foreign.C.Types.$fBoundedCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt32_$cminBound
                                       GHC.Int.$fBoundedInt32_$cmaxBound];

Foreign.C.Types.$fStorableCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt32_$calignment
                                                Foreign.Storable.$fStorableInt32_$calignment
                                                GHC.Storable.readInt32OffPtr1
                                                GHC.Storable.writeInt32OffPtr1
                                                Foreign.Storable.$fStorableInt14
                                                Foreign.Storable.$fStorableInt13
                                                Foreign.Storable.$fStorableInt12
                                                Foreign.Storable.$fStorableInt11];

Foreign.C.Types.$fEnumCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CSigAtomic
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt32_$csucc
                                    GHC.Int.$fEnumInt32_$cpred
                                    GHC.Int.$fEnumInt32_$ctoEnum
                                    GHC.Int.$fEnumInt32_$cfromEnum
                                    GHC.Int.$fEnumInt32_$cenumFrom
                                    GHC.Int.$fEnumInt32_$cenumFromThen
                                    GHC.Int.$fEnumInt32_$cenumFromTo
                                    GHC.Int.$fEnumInt32_$cenumFromThenTo];

Foreign.C.Types.$fNumCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt32_$c+
                                  GHC.Int.$fNumInt32_$c-
                                  GHC.Int.$fNumInt32_$c*
                                  GHC.Int.$fNumInt32_$cnegate
                                  GHC.Int.$fNumInt32_$cabs
                                  GHC.Int.$fNumInt32_$csignum
                                  GHC.Int.$fNumInt32_$cfromInteger];

Foreign.C.Types.$fEqCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt32 GHC.Int.neInt32];

Foreign.C.Types.$fOrdCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCSigAtomic
                                      GHC.Int.$fOrdInt32_$ccompare
                                      GHC.Int.ltInt32
                                      GHC.Int.leInt32
                                      GHC.Int.gtInt32
                                      GHC.Int.geInt32
                                      GHC.Int.$fOrdInt32_$cmax
                                      GHC.Int.$fOrdInt32_$cmin];

Foreign.C.Types.$fRealCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CSigAtomic
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCSigAtomic
                                    Foreign.C.Types.$fOrdCSigAtomic
                                    GHC.Int.$fRealInt32_$ctoRational];

Foreign.C.Types.$fIntegralCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CSigAtomic
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCSigAtomic
                                        Foreign.C.Types.$fEnumCSigAtomic
                                        GHC.Int.$fIntegralInt32_$cquot
                                        GHC.Int.$fIntegralInt32_$crem
                                        GHC.Int.$fIntegralInt32_$cdiv
                                        GHC.Int.$fIntegralInt32_$cmod
                                        GHC.Int.$fIntegralInt32_$cquotRem
                                        GHC.Int.$fIntegralInt32_$cdivMod
                                        GHC.Int.$fIntegralInt32_$ctoInteger];

Foreign.C.Types.$fBitsCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCSigAtomic
                                     GHC.Int.$fBitsInt32_$c.&.
                                     GHC.Int.$fBitsInt32_$c.|.
                                     GHC.Int.$fBitsInt32_$cxor
                                     GHC.Int.$fBitsInt32_$ccomplement
                                     GHC.Int.$fBitsInt32_$cshift
                                     GHC.Int.$fBitsInt32_$crotate
                                     GHC.Int.$fBitsInt6
                                     GHC.Int.$fBitsInt32_$cbit
                                     GHC.Int.$fBitsInt32_$csetBit
                                     GHC.Int.$fBitsInt32_$cclearBit
                                     GHC.Int.$fBitsInt32_$ccomplementBit
                                     GHC.Int.$fBitsInt32_$ctestBit
                                     GHC.Int.$fBitsInt32_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt32_$cfiniteBitSize
                                     GHC.Int.$fBitsInt32_$cisSigned
                                     GHC.Int.$fBitsInt32_$cshiftL
                                     GHC.Int.$fBitsInt32_$cunsafeShiftL
                                     GHC.Int.$fBitsInt32_$cshiftR
                                     GHC.Int.$fBitsInt32_$cunsafeShiftR
                                     GHC.Int.$fBitsInt32_$crotateL
                                     GHC.Int.$fBitsInt32_$crotateR
                                     GHC.Int.$fBitsInt32_$cpopCount];

Foreign.C.Types.$fFiniteBitsCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCSigAtomic
                                           GHC.Int.$fBitsInt32_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros];

Foreign.C.Types.$fShowCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt32_$cshowsPrec
                                    GHC.Int.$fShowInt32_$cshow
                                    GHC.Int.$fShowInt32_$cshowList];

Foreign.C.Types.$fReadCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CWchar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt32_$creadsPrec
                                    GHC.Int.$fReadInt32_$creadList
                                    GHC.Int.$fReadInt6
                                    GHC.Int.$fReadInt4];

Foreign.C.Types.$fBoundedCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt32_$cminBound
                                       GHC.Int.$fBoundedInt32_$cmaxBound];

Foreign.C.Types.$fStorableCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt32_$calignment
                                                Foreign.Storable.$fStorableInt32_$calignment
                                                GHC.Storable.readInt32OffPtr1
                                                GHC.Storable.writeInt32OffPtr1
                                                Foreign.Storable.$fStorableInt14
                                                Foreign.Storable.$fStorableInt13
                                                Foreign.Storable.$fStorableInt12
                                                Foreign.Storable.$fStorableInt11];

Foreign.C.Types.$fEnumCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CWchar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt32_$csucc
                                    GHC.Int.$fEnumInt32_$cpred
                                    GHC.Int.$fEnumInt32_$ctoEnum
                                    GHC.Int.$fEnumInt32_$cfromEnum
                                    GHC.Int.$fEnumInt32_$cenumFrom
                                    GHC.Int.$fEnumInt32_$cenumFromThen
                                    GHC.Int.$fEnumInt32_$cenumFromTo
                                    GHC.Int.$fEnumInt32_$cenumFromThenTo];

Foreign.C.Types.$fNumCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt32_$c+
                                  GHC.Int.$fNumInt32_$c-
                                  GHC.Int.$fNumInt32_$c*
                                  GHC.Int.$fNumInt32_$cnegate
                                  GHC.Int.$fNumInt32_$cabs
                                  GHC.Int.$fNumInt32_$csignum
                                  GHC.Int.$fNumInt32_$cfromInteger];

Foreign.C.Types.$fEqCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt32 GHC.Int.neInt32];

Foreign.C.Types.$fOrdCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCWchar
                                      GHC.Int.$fOrdInt32_$ccompare
                                      GHC.Int.ltInt32
                                      GHC.Int.leInt32
                                      GHC.Int.gtInt32
                                      GHC.Int.geInt32
                                      GHC.Int.$fOrdInt32_$cmax
                                      GHC.Int.$fOrdInt32_$cmin];

Foreign.C.Types.$fRealCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CWchar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCWchar
                                    Foreign.C.Types.$fOrdCWchar
                                    GHC.Int.$fRealInt32_$ctoRational];

Foreign.C.Types.$fIntegralCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CWchar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCWchar
                                        Foreign.C.Types.$fEnumCWchar
                                        GHC.Int.$fIntegralInt32_$cquot
                                        GHC.Int.$fIntegralInt32_$crem
                                        GHC.Int.$fIntegralInt32_$cdiv
                                        GHC.Int.$fIntegralInt32_$cmod
                                        GHC.Int.$fIntegralInt32_$cquotRem
                                        GHC.Int.$fIntegralInt32_$cdivMod
                                        GHC.Int.$fIntegralInt32_$ctoInteger];

Foreign.C.Types.$fBitsCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCWchar
                                     GHC.Int.$fBitsInt32_$c.&.
                                     GHC.Int.$fBitsInt32_$c.|.
                                     GHC.Int.$fBitsInt32_$cxor
                                     GHC.Int.$fBitsInt32_$ccomplement
                                     GHC.Int.$fBitsInt32_$cshift
                                     GHC.Int.$fBitsInt32_$crotate
                                     GHC.Int.$fBitsInt6
                                     GHC.Int.$fBitsInt32_$cbit
                                     GHC.Int.$fBitsInt32_$csetBit
                                     GHC.Int.$fBitsInt32_$cclearBit
                                     GHC.Int.$fBitsInt32_$ccomplementBit
                                     GHC.Int.$fBitsInt32_$ctestBit
                                     GHC.Int.$fBitsInt32_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt32_$cfiniteBitSize
                                     GHC.Int.$fBitsInt32_$cisSigned
                                     GHC.Int.$fBitsInt32_$cshiftL
                                     GHC.Int.$fBitsInt32_$cunsafeShiftL
                                     GHC.Int.$fBitsInt32_$cshiftR
                                     GHC.Int.$fBitsInt32_$cunsafeShiftR
                                     GHC.Int.$fBitsInt32_$crotateL
                                     GHC.Int.$fBitsInt32_$crotateR
                                     GHC.Int.$fBitsInt32_$cpopCount];

Foreign.C.Types.$fFiniteBitsCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCWchar
                                           GHC.Int.$fBitsInt32_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros];

Foreign.C.Types.$fShowCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CSize
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord64_$cshowsPrec
                                    GHC.Word.$fShowWord64_$cshow
                                    GHC.Word.$fShowWord64_$cshowList];

Foreign.C.Types.$fReadCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CSize
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord64_$creadsPrec
                                    GHC.Read.$fReadWord64_$creadList
                                    GHC.Read.$fReadWord13
                                    GHC.Read.$fReadWord11];

Foreign.C.Types.$fBoundedCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord7
                                       GHC.Word.$fBoundedWord64_$cmaxBound];

Foreign.C.Types.$fStorableCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord64_$calignment
                                                Foreign.Storable.$fStorableWord64_$calignment
                                                GHC.Storable.readWord64OffPtr1
                                                GHC.Storable.writeWord64OffPtr1
                                                Foreign.Storable.$fStorableWord18
                                                Foreign.Storable.$fStorableWord17
                                                Foreign.Storable.$fStorableWord15
                                                Foreign.Storable.$fStorableWord14];

Foreign.C.Types.$fEnumCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CSize
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord64_$csucc
                                    GHC.Word.$fEnumWord64_$cpred
                                    GHC.Word.$fEnumWord64_$ctoEnum
                                    GHC.Word.$fEnumWord64_$cfromEnum
                                    GHC.Word.$fEnumWord64_$cenumFrom
                                    GHC.Word.$fEnumWord64_$cenumFromThen
                                    GHC.Word.$fEnumWord64_$cenumFromTo
                                    GHC.Word.$fEnumWord64_$cenumFromThenTo];

Foreign.C.Types.$fNumCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord64_$c+
                                  GHC.Word.$fNumWord64_$c-
                                  GHC.Word.$fNumWord64_$c*
                                  GHC.Word.$fNumWord64_$cnegate
                                  GHC.Word.$fNumWord64_$cabs
                                  GHC.Word.$fNumWord64_$csignum
                                  GHC.Word.$fNumWord64_$cfromInteger];

Foreign.C.Types.$fEqCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord64
                                     GHC.Word.neWord64];

Foreign.C.Types.$fOrdCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCSize
                                      GHC.Word.$fOrdWord64_$ccompare
                                      GHC.Word.ltWord64
                                      GHC.Word.leWord64
                                      GHC.Word.gtWord64
                                      GHC.Word.geWord64
                                      GHC.Word.$fOrdWord64_$cmax
                                      GHC.Word.$fOrdWord64_$cmin];

Foreign.C.Types.$fRealCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CSize
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCSize
                                    Foreign.C.Types.$fOrdCSize
                                    GHC.Word.$fRealWord64_$ctoRational];

Foreign.C.Types.$fIntegralCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CSize
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCSize
                                        Foreign.C.Types.$fEnumCSize
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cquotRem
                                        GHC.Word.$fIntegralWord64_$cdivMod
                                        GHC.Word.$fIntegralWord64_$ctoInteger];

Foreign.C.Types.$fBitsCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCSize
                                     GHC.Word.$fBitsWord64_$c.&.
                                     GHC.Word.$fBitsWord64_$c.|.
                                     GHC.Word.$fBitsWord64_$cxor
                                     GHC.Word.$fBitsWord64_$ccomplement
                                     GHC.Word.$fBitsWord64_$cshift
                                     GHC.Word.$fBitsWord64_$crotate
                                     GHC.Word.$fBitsWord7
                                     GHC.Word.$fBitsWord64_$cbit
                                     GHC.Word.$fBitsWord64_$csetBit
                                     GHC.Word.$fBitsWord64_$cclearBit
                                     GHC.Word.$fBitsWord64_$ccomplementBit
                                     GHC.Word.$fBitsWord64_$ctestBit
                                     GHC.Word.$fBitsWord64_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord64_$cfiniteBitSize
                                     GHC.Word.$fBitsWord64_$cisSigned
                                     GHC.Word.$fBitsWord64_$cshiftL
                                     GHC.Word.$fBitsWord64_$cunsafeShiftL
                                     GHC.Word.$fBitsWord64_$cshiftR
                                     GHC.Word.$fBitsWord64_$cunsafeShiftR
                                     GHC.Word.$fBitsWord64_$crotateL
                                     GHC.Word.$fBitsWord64_$crotateR
                                     GHC.Word.$fBitsWord64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCSize
                                           GHC.Word.$fBitsWord64_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord64_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CPtrdiff
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fBoundedCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt64_$cminBound
                                       GHC.Int.$fBoundedInt64_$cmaxBound];

Foreign.C.Types.$fStorableCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CPtrdiff
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCPtrdiff
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CPtrdiff
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCPtrdiff
                                    Foreign.C.Types.$fOrdCPtrdiff
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fIntegralCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CPtrdiff
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCPtrdiff
                                        Foreign.C.Types.$fEnumCPtrdiff
                                        GHC.Int.$fIntegralInt64_$cquot
                                        GHC.Int.$fIntegralInt64_$crem
                                        GHC.Int.$fIntegralInt64_$cdiv
                                        GHC.Int.$fIntegralInt64_$cmod
                                        GHC.Int.$fIntegralInt64_$cquotRem
                                        GHC.Int.$fIntegralInt64_$cdivMod
                                        GHC.Int.$fIntegralInt64_$ctoInteger];

Foreign.C.Types.$fBitsCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCPtrdiff
                                     GHC.Int.$fBitsInt64_$c.&.
                                     GHC.Int.$fBitsInt64_$c.|.
                                     GHC.Int.$fBitsInt64_$cxor
                                     GHC.Int.$fBitsInt64_$ccomplement
                                     GHC.Int.$fBitsInt64_$cshift
                                     GHC.Int.$fBitsInt64_$crotate
                                     GHC.Int.$fBitsInt10
                                     GHC.Int.$fBitsInt64_$cbit
                                     GHC.Int.$fBitsInt64_$csetBit
                                     GHC.Int.$fBitsInt64_$cclearBit
                                     GHC.Int.$fBitsInt64_$ccomplementBit
                                     GHC.Int.$fBitsInt64_$ctestBit
                                     GHC.Int.$fBitsInt64_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt64_$cfiniteBitSize
                                     GHC.Int.$fBitsInt64_$cisSigned
                                     GHC.Int.$fBitsInt64_$cshiftL
                                     GHC.Int.$fBitsInt64_$cunsafeShiftL
                                     GHC.Int.$fBitsInt64_$cshiftR
                                     GHC.Int.$fBitsInt64_$cunsafeShiftR
                                     GHC.Int.$fBitsInt64_$crotateL
                                     GHC.Int.$fBitsInt64_$crotateR
                                     GHC.Int.$fBitsInt64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCPtrdiff
                                           GHC.Int.$fBitsInt64_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Float.$fShowDouble_$cshowsPrec
                                    GHC.Float.$fShowDouble_$cshow
                                    GHC.Float.$fShowDouble_$cshowList];

Foreign.C.Types.$fReadCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadDouble_$creadsPrec
                                    GHC.Read.$fReadDouble_$creadList
                                    GHC.Read.$fReadDouble1
                                    GHC.Read.$fReadDouble_$creadListPrec];

Foreign.C.Types.$fStorableCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CDouble
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableDouble_$calignment
                                                Foreign.Storable.$fStorableDouble_$calignment
                                                GHC.Storable.readDoubleOffPtr1
                                                GHC.Storable.writeDoubleOffPtr1
                                                Foreign.Storable.$fStorableDouble4
                                                Foreign.Storable.$fStorableDouble3
                                                Foreign.Storable.$fStorableDouble2
                                                Foreign.Storable.$fStorableDouble1];

Foreign.C.Types.$fEnumCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Float.$fEnumDouble_$csucc
                                    GHC.Float.$fEnumDouble_$cpred
                                    GHC.Float.RealFracMethods.int2Double
                                    GHC.Float.$fEnumDouble_$cfromEnum
                                    GHC.Float.$fEnumDouble_$snumericEnumFrom
                                    GHC.Float.$fEnumDouble_$snumericEnumFromThen
                                    GHC.Float.$fEnumDouble_$cenumFromTo
                                    GHC.Float.$fEnumDouble_$cenumFromThenTo];

Foreign.C.Types.$fNumCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CDouble
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Float.plusDouble
                                  GHC.Float.minusDouble
                                  GHC.Float.timesDouble
                                  GHC.Float.negateDouble
                                  GHC.Float.fabsDouble
                                  GHC.Float.$fNumDouble_$csignum
                                  GHC.Float.$fNumDouble_$cfromInteger];

Foreign.C.Types.$fFractionalCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Fractional Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Fractional! [Foreign.C.Types.$fNumCDouble
                                          GHC.Float.divideDouble
                                          GHC.Float.$fFractionalDouble_$crecip
                                          GHC.Float.$fFractionalDouble_$cfromRational];

Foreign.C.Types.$fFloatingCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Float.Floating Foreign.C.Types.CDouble
[GblId[DFunId]] =
    CCS_DONT_CARE GHC.Float.C:Floating! [Foreign.C.Types.$fFractionalCDouble
                                         GHC.Float.$fFloatingDouble_$cpi
                                         GHC.Float.expDouble
                                         GHC.Float.logDouble
                                         GHC.Float.sqrtDouble
                                         GHC.Float.powerDouble
                                         GHC.Float.$fFloatingDouble_$clogBase
                                         GHC.Float.sinDouble
                                         GHC.Float.cosDouble
                                         GHC.Float.tanDouble
                                         GHC.Float.asinDouble
                                         GHC.Float.acosDouble
                                         GHC.Float.atanDouble
                                         GHC.Float.sinhDouble
                                         GHC.Float.coshDouble
                                         GHC.Float.tanhDouble
                                         GHC.Float.$fFloatingDouble_$casinh
                                         GHC.Float.$fFloatingDouble_$cacosh
                                         GHC.Float.$fFloatingDouble_$catanh
                                         GHC.Float.log1pDouble
                                         GHC.Float.expm1Double
                                         GHC.Float.$fFloatingDouble_$clog1pexp
                                         GHC.Float.$fFloatingDouble_$clog1mexp];

Foreign.C.Types.$fEqCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CDouble
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Classes.eqDouble
                                     GHC.Classes.$fEqDouble_$c/=];

Foreign.C.Types.$fOrdCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CDouble
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCDouble
                                      GHC.Classes.$fOrdDouble_$ccompare
                                      GHC.Classes.$fOrdDouble_$c<
                                      GHC.Classes.$fOrdDouble_$c<=
                                      GHC.Classes.$fOrdDouble_$c>
                                      GHC.Classes.$fOrdDouble_$c>=
                                      GHC.Classes.$fOrdDouble_$cmax
                                      GHC.Classes.$fOrdDouble_$cmin];

Foreign.C.Types.$fRealCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCDouble
                                    Foreign.C.Types.$fOrdCDouble
                                    GHC.Float.$fRealDouble_$ctoRational];

Foreign.C.Types.$fRealFracCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.RealFrac Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:RealFrac! [Foreign.C.Types.$fRealCDouble
                                        Foreign.C.Types.$fFractionalCDouble
                                        GHC.Float.$fRealFracDouble_$cproperFraction
                                        GHC.Float.$fRealFracDouble_$ctruncate
                                        GHC.Float.$fRealFracDouble_$cround
                                        GHC.Float.$fRealFracDouble_$cceiling
                                        GHC.Float.$fRealFracDouble_$cfloor];

Foreign.C.Types.$fRealFloatCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Float.RealFloat Foreign.C.Types.CDouble
[GblId[DFunId]] =
    CCS_DONT_CARE GHC.Float.C:RealFloat! [Foreign.C.Types.$fRealFracCDouble
                                          Foreign.C.Types.$fFloatingCDouble
                                          GHC.Float.$fRealFloatDouble_$cfloatRadix
                                          GHC.Float.$fRealFloatDouble_$cfloatDigits
                                          GHC.Float.$fRealFloatDouble_$cfloatRange
                                          GHC.Float.$fRealFloatDouble_$cdecodeFloat
                                          GHC.Float.$fRealFloatDouble_$cencodeFloat
                                          GHC.Float.$fRealFloatDouble_$cexponent
                                          GHC.Float.$fRealFloatDouble_$csignificand
                                          GHC.Float.$fRealFloatDouble_$cscaleFloat
                                          GHC.Float.$fRealFloatDouble_$cisNaN
                                          GHC.Float.$fRealFloatDouble_$cisInfinite
                                          GHC.Float.$fRealFloatDouble_$cisDenormalized
                                          GHC.Float.$fRealFloatDouble_$cisNegativeZero
                                          GHC.Float.$fRealFloatDouble_$cisIEEE
                                          GHC.Float.$fRealFloatDouble_$catan2];

Foreign.C.Types.$fShowCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Float.$fShowFloat_$cshowsPrec
                                    GHC.Float.$fShowFloat_$cshow
                                    GHC.Float.$fShowFloat_$cshowList];

Foreign.C.Types.$fReadCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadFloat_$creadsPrec
                                    GHC.Read.$fReadFloat_$creadList
                                    GHC.Read.$fReadFloat1
                                    GHC.Read.$fReadFloat_$creadListPrec];

Foreign.C.Types.$fStorableCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CFloat
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableFloat_$calignment
                                                Foreign.Storable.$fStorableFloat_$calignment
                                                GHC.Storable.readFloatOffPtr1
                                                GHC.Storable.writeFloatOffPtr1
                                                Foreign.Storable.$fStorableFloat4
                                                Foreign.Storable.$fStorableFloat3
                                                Foreign.Storable.$fStorableFloat2
                                                Foreign.Storable.$fStorableFloat1];

Foreign.C.Types.$fEnumCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Float.$fEnumFloat_$csucc
                                    GHC.Float.$fEnumFloat_$cpred
                                    GHC.Float.RealFracMethods.int2Float
                                    GHC.Float.$fEnumFloat_$cfromEnum
                                    GHC.Float.$fEnumFloat_$snumericEnumFrom
                                    GHC.Float.$fEnumFloat_$snumericEnumFromThen
                                    GHC.Float.$fEnumFloat_$cenumFromTo
                                    GHC.Float.$fEnumFloat_$cenumFromThenTo];

Foreign.C.Types.$fNumCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CFloat
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Float.plusFloat
                                  GHC.Float.minusFloat
                                  GHC.Float.timesFloat
                                  GHC.Float.negateFloat
                                  GHC.Float.fabsFloat
                                  GHC.Float.$fNumFloat_$csignum
                                  GHC.Float.$fNumFloat_$cfromInteger];

Foreign.C.Types.$fFractionalCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Fractional Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Fractional! [Foreign.C.Types.$fNumCFloat
                                          GHC.Float.divideFloat
                                          GHC.Float.$fFractionalFloat_$crecip
                                          GHC.Float.$fFractionalFloat_$cfromRational];

Foreign.C.Types.$fFloatingCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Float.Floating Foreign.C.Types.CFloat
[GblId[DFunId]] =
    CCS_DONT_CARE GHC.Float.C:Floating! [Foreign.C.Types.$fFractionalCFloat
                                         GHC.Float.$fFloatingFloat_$cpi
                                         GHC.Float.expFloat
                                         GHC.Float.logFloat
                                         GHC.Float.sqrtFloat
                                         GHC.Float.powerFloat
                                         GHC.Float.$fFloatingFloat_$clogBase
                                         GHC.Float.sinFloat
                                         GHC.Float.cosFloat
                                         GHC.Float.tanFloat
                                         GHC.Float.asinFloat
                                         GHC.Float.acosFloat
                                         GHC.Float.atanFloat
                                         GHC.Float.sinhFloat
                                         GHC.Float.coshFloat
                                         GHC.Float.tanhFloat
                                         GHC.Float.$fFloatingFloat_$casinh
                                         GHC.Float.$fFloatingFloat_$cacosh
                                         GHC.Float.$fFloatingFloat_$catanh
                                         GHC.Float.log1pFloat
                                         GHC.Float.expm1Float
                                         GHC.Float.$fFloatingFloat_$clog1pexp
                                         GHC.Float.$fFloatingFloat_$clog1mexp];

Foreign.C.Types.$fEqCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CFloat
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Classes.eqFloat
                                     GHC.Classes.$fEqFloat_$c/=];

Foreign.C.Types.$fOrdCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CFloat
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCFloat
                                      GHC.Classes.$fOrdFloat_$ccompare
                                      GHC.Classes.$fOrdFloat_$c<
                                      GHC.Classes.$fOrdFloat_$c<=
                                      GHC.Classes.$fOrdFloat_$c>
                                      GHC.Classes.$fOrdFloat_$c>=
                                      GHC.Classes.$fOrdFloat_$cmax
                                      GHC.Classes.$fOrdFloat_$cmin];

Foreign.C.Types.$fRealCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCFloat
                                    Foreign.C.Types.$fOrdCFloat
                                    GHC.Float.$fRealFloat_$ctoRational];

Foreign.C.Types.$fRealFracCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.RealFrac Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:RealFrac! [Foreign.C.Types.$fRealCFloat
                                        Foreign.C.Types.$fFractionalCFloat
                                        GHC.Float.$fRealFracFloat_$cproperFraction
                                        GHC.Float.$fRealFracFloat_$ctruncate
                                        GHC.Float.$fRealFracFloat_$cround
                                        GHC.Float.$fRealFracFloat_$cceiling
                                        GHC.Float.$fRealFracFloat_$cfloor];

Foreign.C.Types.$fRealFloatCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Float.RealFloat Foreign.C.Types.CFloat
[GblId[DFunId]] =
    CCS_DONT_CARE GHC.Float.C:RealFloat! [Foreign.C.Types.$fRealFracCFloat
                                          Foreign.C.Types.$fFloatingCFloat
                                          GHC.Float.$fRealFloatFloat_$cfloatRadix
                                          GHC.Float.$fRealFloatFloat_$cfloatDigits
                                          GHC.Float.$fRealFloatFloat_$cfloatRange
                                          GHC.Float.$fRealFloatFloat_$cdecodeFloat
                                          GHC.Float.$fRealFloatFloat_$cencodeFloat
                                          GHC.Float.$fRealFloatFloat_$cexponent
                                          GHC.Float.$fRealFloatFloat_$csignificand
                                          GHC.Float.$fRealFloatFloat_$cscaleFloat
                                          GHC.Float.$fRealFloatFloat_$cisNaN
                                          GHC.Float.$fRealFloatFloat_$cisInfinite
                                          GHC.Float.$fRealFloatFloat_$cisDenormalized
                                          GHC.Float.$fRealFloatFloat_$cisNegativeZero
                                          GHC.Float.$fRealFloatFloat_$cisIEEE
                                          GHC.Float.$fRealFloatFloat_$catan2];

Foreign.C.Types.$fShowCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord8_$cshowsPrec
                                    GHC.Word.$fShowWord8_$cshow
                                    GHC.Word.$fShowWord8_$cshowList];

Foreign.C.Types.$fReadCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CBool
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord8_$creadsPrec
                                    GHC.Read.$fReadWord8_$creadList
                                    GHC.Read.$fReadWord17
                                    GHC.Read.$fReadWord14];

Foreign.C.Types.$fBoundedCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord8_$cminBound
                                       GHC.Word.$fBoundedWord8_$cmaxBound];

Foreign.C.Types.$fStorableCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord8_$calignment
                                                Foreign.Storable.$fStorableWord8_$calignment
                                                GHC.Storable.readWord8OffPtr1
                                                GHC.Storable.writeWord8OffPtr1
                                                Foreign.Storable.$fStorableWord22
                                                Foreign.Storable.$fStorableWord21
                                                Foreign.Storable.$fStorableWord20
                                                Foreign.Storable.$fStorableWord19];

Foreign.C.Types.$fEnumCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CBool
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord8_$csucc
                                    GHC.Word.$fEnumWord8_$cpred
                                    GHC.Word.$fEnumWord8_$ctoEnum
                                    GHC.Word.$fEnumWord8_$cfromEnum
                                    GHC.Word.$fEnumWord8_$cenumFrom
                                    GHC.Word.$fEnumWord8_$cenumFromThen
                                    GHC.Word.$fEnumWord8_$cenumFromTo
                                    GHC.Word.$fEnumWord8_$cenumFromThenTo];

Foreign.C.Types.$fNumCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord8_$c+
                                  GHC.Word.$fNumWord8_$c-
                                  GHC.Word.$fNumWord8_$c*
                                  GHC.Word.$fNumWord8_$cnegate
                                  GHC.Word.$fNumWord8_$cabs
                                  GHC.Word.$fNumWord8_$csignum
                                  GHC.Word.$fNumWord8_$cfromInteger];

Foreign.C.Types.$fEqCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord8
                                     GHC.Word.neWord8];

Foreign.C.Types.$fOrdCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCBool
                                      GHC.Word.$fOrdWord8_$ccompare
                                      GHC.Word.ltWord8
                                      GHC.Word.leWord8
                                      GHC.Word.gtWord8
                                      GHC.Word.geWord8
                                      GHC.Word.$fOrdWord8_$cmax
                                      GHC.Word.$fOrdWord8_$cmin];

Foreign.C.Types.$fRealCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CBool
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCBool
                                    Foreign.C.Types.$fOrdCBool
                                    GHC.Word.$fRealWord8_$ctoRational];

Foreign.C.Types.$fIntegralCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CBool
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCBool
                                        Foreign.C.Types.$fEnumCBool
                                        GHC.Word.$fIntegralWord8_$cquot
                                        GHC.Word.$fIntegralWord8_$crem
                                        GHC.Word.$fIntegralWord8_$cquot
                                        GHC.Word.$fIntegralWord8_$crem
                                        GHC.Word.$fIntegralWord8_$cquotRem
                                        GHC.Word.$fIntegralWord8_$cdivMod
                                        GHC.Word.$ctoInteger];

Foreign.C.Types.$fBitsCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCBool
                                     GHC.Word.$fBitsWord8_$c.&.
                                     GHC.Word.$fBitsWord8_$c.|.
                                     GHC.Word.$fBitsWord8_$cxor
                                     GHC.Word.$fBitsWord8_$ccomplement
                                     GHC.Word.$fBitsWord8_$cshift
                                     GHC.Word.$fBitsWord8_$crotate
                                     GHC.Word.$fBitsWord8_$cminBound
                                     GHC.Word.$fBitsWord8_$cbit
                                     GHC.Word.$fBitsWord8_$csetBit
                                     GHC.Word.$fBitsWord8_$cclearBit
                                     GHC.Word.$fBitsWord8_$ccomplementBit
                                     GHC.Word.$fBitsWord8_$ctestBit
                                     GHC.Word.$fBitsWord8_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord8_$cfiniteBitSize
                                     GHC.Word.$fBitsWord8_$cisSigned
                                     GHC.Word.$fBitsWord8_$cshiftL
                                     GHC.Word.$fBitsWord8_$cunsafeShiftL
                                     GHC.Word.$fBitsWord8_$cshiftR
                                     GHC.Word.$fBitsWord8_$cunsafeShiftR
                                     GHC.Word.$fBitsWord8_$crotateL
                                     GHC.Word.$fBitsWord8_$crotateR
                                     GHC.Word.$fBitsWord8_$cpopCount];

Foreign.C.Types.$fFiniteBitsCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCBool
                                           GHC.Word.$fBitsWord8_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord8_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord8_$ccountTrailingZeros];

Foreign.C.Types.$fShowCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CULLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord64_$cshowsPrec
                                    GHC.Word.$fShowWord64_$cshow
                                    GHC.Word.$fShowWord64_$cshowList];

Foreign.C.Types.$fReadCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CULLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord64_$creadsPrec
                                    GHC.Read.$fReadWord64_$creadList
                                    GHC.Read.$fReadWord13
                                    GHC.Read.$fReadWord11];

Foreign.C.Types.$fBoundedCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord7
                                       GHC.Word.$fBoundedWord64_$cmaxBound];

Foreign.C.Types.$fStorableCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord64_$calignment
                                                Foreign.Storable.$fStorableWord64_$calignment
                                                GHC.Storable.readWord64OffPtr1
                                                GHC.Storable.writeWord64OffPtr1
                                                Foreign.Storable.$fStorableWord18
                                                Foreign.Storable.$fStorableWord17
                                                Foreign.Storable.$fStorableWord15
                                                Foreign.Storable.$fStorableWord14];

Foreign.C.Types.$fEnumCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CULLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord64_$csucc
                                    GHC.Word.$fEnumWord64_$cpred
                                    GHC.Word.$fEnumWord64_$ctoEnum
                                    GHC.Word.$fEnumWord64_$cfromEnum
                                    GHC.Word.$fEnumWord64_$cenumFrom
                                    GHC.Word.$fEnumWord64_$cenumFromThen
                                    GHC.Word.$fEnumWord64_$cenumFromTo
                                    GHC.Word.$fEnumWord64_$cenumFromThenTo];

Foreign.C.Types.$fNumCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord64_$c+
                                  GHC.Word.$fNumWord64_$c-
                                  GHC.Word.$fNumWord64_$c*
                                  GHC.Word.$fNumWord64_$cnegate
                                  GHC.Word.$fNumWord64_$cabs
                                  GHC.Word.$fNumWord64_$csignum
                                  GHC.Word.$fNumWord64_$cfromInteger];

Foreign.C.Types.$fEqCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord64
                                     GHC.Word.neWord64];

Foreign.C.Types.$fOrdCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCULLong
                                      GHC.Word.$fOrdWord64_$ccompare
                                      GHC.Word.ltWord64
                                      GHC.Word.leWord64
                                      GHC.Word.gtWord64
                                      GHC.Word.geWord64
                                      GHC.Word.$fOrdWord64_$cmax
                                      GHC.Word.$fOrdWord64_$cmin];

Foreign.C.Types.$fRealCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CULLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCULLong
                                    Foreign.C.Types.$fOrdCULLong
                                    GHC.Word.$fRealWord64_$ctoRational];

Foreign.C.Types.$fIntegralCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CULLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCULLong
                                        Foreign.C.Types.$fEnumCULLong
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cquotRem
                                        GHC.Word.$fIntegralWord64_$cdivMod
                                        GHC.Word.$fIntegralWord64_$ctoInteger];

Foreign.C.Types.$fBitsCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCULLong
                                     GHC.Word.$fBitsWord64_$c.&.
                                     GHC.Word.$fBitsWord64_$c.|.
                                     GHC.Word.$fBitsWord64_$cxor
                                     GHC.Word.$fBitsWord64_$ccomplement
                                     GHC.Word.$fBitsWord64_$cshift
                                     GHC.Word.$fBitsWord64_$crotate
                                     GHC.Word.$fBitsWord7
                                     GHC.Word.$fBitsWord64_$cbit
                                     GHC.Word.$fBitsWord64_$csetBit
                                     GHC.Word.$fBitsWord64_$cclearBit
                                     GHC.Word.$fBitsWord64_$ccomplementBit
                                     GHC.Word.$fBitsWord64_$ctestBit
                                     GHC.Word.$fBitsWord64_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord64_$cfiniteBitSize
                                     GHC.Word.$fBitsWord64_$cisSigned
                                     GHC.Word.$fBitsWord64_$cshiftL
                                     GHC.Word.$fBitsWord64_$cunsafeShiftL
                                     GHC.Word.$fBitsWord64_$cshiftR
                                     GHC.Word.$fBitsWord64_$cunsafeShiftR
                                     GHC.Word.$fBitsWord64_$crotateL
                                     GHC.Word.$fBitsWord64_$crotateR
                                     GHC.Word.$fBitsWord64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCULLong
                                           GHC.Word.$fBitsWord64_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord64_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CLLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fBoundedCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt64_$cminBound
                                       GHC.Int.$fBoundedInt64_$cmaxBound];

Foreign.C.Types.$fStorableCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CLLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCLLong
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CLLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCLLong
                                    Foreign.C.Types.$fOrdCLLong
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fIntegralCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CLLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCLLong
                                        Foreign.C.Types.$fEnumCLLong
                                        GHC.Int.$fIntegralInt64_$cquot
                                        GHC.Int.$fIntegralInt64_$crem
                                        GHC.Int.$fIntegralInt64_$cdiv
                                        GHC.Int.$fIntegralInt64_$cmod
                                        GHC.Int.$fIntegralInt64_$cquotRem
                                        GHC.Int.$fIntegralInt64_$cdivMod
                                        GHC.Int.$fIntegralInt64_$ctoInteger];

Foreign.C.Types.$fBitsCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCLLong
                                     GHC.Int.$fBitsInt64_$c.&.
                                     GHC.Int.$fBitsInt64_$c.|.
                                     GHC.Int.$fBitsInt64_$cxor
                                     GHC.Int.$fBitsInt64_$ccomplement
                                     GHC.Int.$fBitsInt64_$cshift
                                     GHC.Int.$fBitsInt64_$crotate
                                     GHC.Int.$fBitsInt10
                                     GHC.Int.$fBitsInt64_$cbit
                                     GHC.Int.$fBitsInt64_$csetBit
                                     GHC.Int.$fBitsInt64_$cclearBit
                                     GHC.Int.$fBitsInt64_$ccomplementBit
                                     GHC.Int.$fBitsInt64_$ctestBit
                                     GHC.Int.$fBitsInt64_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt64_$cfiniteBitSize
                                     GHC.Int.$fBitsInt64_$cisSigned
                                     GHC.Int.$fBitsInt64_$cshiftL
                                     GHC.Int.$fBitsInt64_$cunsafeShiftL
                                     GHC.Int.$fBitsInt64_$cshiftR
                                     GHC.Int.$fBitsInt64_$cunsafeShiftR
                                     GHC.Int.$fBitsInt64_$crotateL
                                     GHC.Int.$fBitsInt64_$crotateR
                                     GHC.Int.$fBitsInt64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCLLong
                                           GHC.Int.$fBitsInt64_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CULong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord64_$cshowsPrec
                                    GHC.Word.$fShowWord64_$cshow
                                    GHC.Word.$fShowWord64_$cshowList];

Foreign.C.Types.$fReadCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CULong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord64_$creadsPrec
                                    GHC.Read.$fReadWord64_$creadList
                                    GHC.Read.$fReadWord13
                                    GHC.Read.$fReadWord11];

Foreign.C.Types.$fBoundedCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord7
                                       GHC.Word.$fBoundedWord64_$cmaxBound];

Foreign.C.Types.$fStorableCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord64_$calignment
                                                Foreign.Storable.$fStorableWord64_$calignment
                                                GHC.Storable.readWord64OffPtr1
                                                GHC.Storable.writeWord64OffPtr1
                                                Foreign.Storable.$fStorableWord18
                                                Foreign.Storable.$fStorableWord17
                                                Foreign.Storable.$fStorableWord15
                                                Foreign.Storable.$fStorableWord14];

Foreign.C.Types.$fEnumCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CULong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord64_$csucc
                                    GHC.Word.$fEnumWord64_$cpred
                                    GHC.Word.$fEnumWord64_$ctoEnum
                                    GHC.Word.$fEnumWord64_$cfromEnum
                                    GHC.Word.$fEnumWord64_$cenumFrom
                                    GHC.Word.$fEnumWord64_$cenumFromThen
                                    GHC.Word.$fEnumWord64_$cenumFromTo
                                    GHC.Word.$fEnumWord64_$cenumFromThenTo];

Foreign.C.Types.$fNumCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord64_$c+
                                  GHC.Word.$fNumWord64_$c-
                                  GHC.Word.$fNumWord64_$c*
                                  GHC.Word.$fNumWord64_$cnegate
                                  GHC.Word.$fNumWord64_$cabs
                                  GHC.Word.$fNumWord64_$csignum
                                  GHC.Word.$fNumWord64_$cfromInteger];

Foreign.C.Types.$fEqCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord64
                                     GHC.Word.neWord64];

Foreign.C.Types.$fOrdCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCULong
                                      GHC.Word.$fOrdWord64_$ccompare
                                      GHC.Word.ltWord64
                                      GHC.Word.leWord64
                                      GHC.Word.gtWord64
                                      GHC.Word.geWord64
                                      GHC.Word.$fOrdWord64_$cmax
                                      GHC.Word.$fOrdWord64_$cmin];

Foreign.C.Types.$fRealCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CULong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCULong
                                    Foreign.C.Types.$fOrdCULong
                                    GHC.Word.$fRealWord64_$ctoRational];

Foreign.C.Types.$fIntegralCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CULong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCULong
                                        Foreign.C.Types.$fEnumCULong
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cquotRem
                                        GHC.Word.$fIntegralWord64_$cdivMod
                                        GHC.Word.$fIntegralWord64_$ctoInteger];

Foreign.C.Types.$fBitsCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCULong
                                     GHC.Word.$fBitsWord64_$c.&.
                                     GHC.Word.$fBitsWord64_$c.|.
                                     GHC.Word.$fBitsWord64_$cxor
                                     GHC.Word.$fBitsWord64_$ccomplement
                                     GHC.Word.$fBitsWord64_$cshift
                                     GHC.Word.$fBitsWord64_$crotate
                                     GHC.Word.$fBitsWord7
                                     GHC.Word.$fBitsWord64_$cbit
                                     GHC.Word.$fBitsWord64_$csetBit
                                     GHC.Word.$fBitsWord64_$cclearBit
                                     GHC.Word.$fBitsWord64_$ccomplementBit
                                     GHC.Word.$fBitsWord64_$ctestBit
                                     GHC.Word.$fBitsWord64_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord64_$cfiniteBitSize
                                     GHC.Word.$fBitsWord64_$cisSigned
                                     GHC.Word.$fBitsWord64_$cshiftL
                                     GHC.Word.$fBitsWord64_$cunsafeShiftL
                                     GHC.Word.$fBitsWord64_$cshiftR
                                     GHC.Word.$fBitsWord64_$cunsafeShiftR
                                     GHC.Word.$fBitsWord64_$crotateL
                                     GHC.Word.$fBitsWord64_$crotateR
                                     GHC.Word.$fBitsWord64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCULong
                                           GHC.Word.$fBitsWord64_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord64_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fBoundedCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt64_$cminBound
                                       GHC.Int.$fBoundedInt64_$cmaxBound];

Foreign.C.Types.$fStorableCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCLong
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCLong
                                    Foreign.C.Types.$fOrdCLong
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fIntegralCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCLong
                                        Foreign.C.Types.$fEnumCLong
                                        GHC.Int.$fIntegralInt64_$cquot
                                        GHC.Int.$fIntegralInt64_$crem
                                        GHC.Int.$fIntegralInt64_$cdiv
                                        GHC.Int.$fIntegralInt64_$cmod
                                        GHC.Int.$fIntegralInt64_$cquotRem
                                        GHC.Int.$fIntegralInt64_$cdivMod
                                        GHC.Int.$fIntegralInt64_$ctoInteger];

Foreign.C.Types.$fBitsCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCLong
                                     GHC.Int.$fBitsInt64_$c.&.
                                     GHC.Int.$fBitsInt64_$c.|.
                                     GHC.Int.$fBitsInt64_$cxor
                                     GHC.Int.$fBitsInt64_$ccomplement
                                     GHC.Int.$fBitsInt64_$cshift
                                     GHC.Int.$fBitsInt64_$crotate
                                     GHC.Int.$fBitsInt10
                                     GHC.Int.$fBitsInt64_$cbit
                                     GHC.Int.$fBitsInt64_$csetBit
                                     GHC.Int.$fBitsInt64_$cclearBit
                                     GHC.Int.$fBitsInt64_$ccomplementBit
                                     GHC.Int.$fBitsInt64_$ctestBit
                                     GHC.Int.$fBitsInt64_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt64_$cfiniteBitSize
                                     GHC.Int.$fBitsInt64_$cisSigned
                                     GHC.Int.$fBitsInt64_$cshiftL
                                     GHC.Int.$fBitsInt64_$cunsafeShiftL
                                     GHC.Int.$fBitsInt64_$cshiftR
                                     GHC.Int.$fBitsInt64_$cunsafeShiftR
                                     GHC.Int.$fBitsInt64_$crotateL
                                     GHC.Int.$fBitsInt64_$crotateR
                                     GHC.Int.$fBitsInt64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCLong
                                           GHC.Int.$fBitsInt64_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord32_$cshowsPrec
                                    GHC.Word.$fShowWord32_$cshow
                                    GHC.Word.$fShowWord32_$cshowList];

Foreign.C.Types.$fReadCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord32_$creadsPrec
                                    GHC.Read.$fReadWord32_$creadList
                                    GHC.Read.$fReadWord10
                                    GHC.Read.$fReadWord7];

Foreign.C.Types.$fBoundedCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord32_$cminBound
                                       GHC.Word.$fBoundedWord32_$cmaxBound];

Foreign.C.Types.$fStorableCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord32_$calignment
                                                Foreign.Storable.$fStorableWord32_$calignment
                                                GHC.Storable.readWord32OffPtr1
                                                GHC.Storable.writeWord32OffPtr1
                                                Foreign.Storable.$fStorableWord13
                                                Foreign.Storable.$fStorableWord12
                                                Foreign.Storable.$fStorableWord11
                                                Foreign.Storable.$fStorableWord10];

Foreign.C.Types.$fEnumCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord32_$csucc
                                    GHC.Word.$fEnumWord32_$cpred
                                    GHC.Word.$fEnumWord32_$ctoEnum
                                    GHC.Word.$fEnumWord32_$cfromEnum
                                    GHC.Word.$fEnumWord32_$cenumFrom
                                    GHC.Word.$fEnumWord32_$cenumFromThen
                                    GHC.Word.$fEnumWord32_$cenumFromTo
                                    GHC.Word.$fEnumWord32_$cenumFromThenTo];

Foreign.C.Types.$fNumCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord32_$c+
                                  GHC.Word.$fNumWord32_$c-
                                  GHC.Word.$fNumWord32_$c*
                                  GHC.Word.$fNumWord32_$cnegate
                                  GHC.Word.$fNumWord32_$cabs
                                  GHC.Word.$fNumWord32_$csignum
                                  GHC.Word.$fNumWord32_$cfromInteger];

Foreign.C.Types.$fEqCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord32
                                     GHC.Word.neWord32];

Foreign.C.Types.$fOrdCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUInt
                                      GHC.Word.$fOrdWord32_$ccompare
                                      GHC.Word.ltWord32
                                      GHC.Word.leWord32
                                      GHC.Word.gtWord32
                                      GHC.Word.geWord32
                                      GHC.Word.$fOrdWord32_$cmax
                                      GHC.Word.$fOrdWord32_$cmin];

Foreign.C.Types.$fRealCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUInt
                                    Foreign.C.Types.$fOrdCUInt
                                    GHC.Word.$fRealWord32_$ctoRational];

Foreign.C.Types.$fIntegralCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CUInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCUInt
                                        Foreign.C.Types.$fEnumCUInt
                                        GHC.Word.$fIntegralWord32_$cquot
                                        GHC.Word.$fIntegralWord32_$crem
                                        GHC.Word.$fIntegralWord32_$cquot
                                        GHC.Word.$fIntegralWord32_$crem
                                        GHC.Word.$fIntegralWord32_$cquotRem
                                        GHC.Word.$fIntegralWord32_$cdivMod
                                        GHC.Word.$ctoInteger2];

Foreign.C.Types.$fBitsCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCUInt
                                     GHC.Word.$fBitsWord32_$c.&.
                                     GHC.Word.$fBitsWord32_$c.|.
                                     GHC.Word.$fBitsWord32_$cxor
                                     GHC.Word.$fBitsWord32_$ccomplement
                                     GHC.Word.$fBitsWord32_$cshift
                                     GHC.Word.$fBitsWord32_$crotate
                                     GHC.Word.$fBitsWord32_$cminBound
                                     GHC.Word.$fBitsWord32_$cbit
                                     GHC.Word.$fBitsWord32_$csetBit
                                     GHC.Word.$fBitsWord32_$cclearBit
                                     GHC.Word.$fBitsWord32_$ccomplementBit
                                     GHC.Word.$fBitsWord32_$ctestBit
                                     GHC.Word.$fBitsWord32_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord32_$cfiniteBitSize
                                     GHC.Word.$fBitsWord32_$cisSigned
                                     GHC.Word.$fBitsWord32_$cshiftL
                                     GHC.Word.$fBitsWord32_$cunsafeShiftL
                                     GHC.Word.$fBitsWord32_$cshiftR
                                     GHC.Word.$fBitsWord32_$cunsafeShiftR
                                     GHC.Word.$fBitsWord32_$crotateL
                                     GHC.Word.$fBitsWord32_$crotateR
                                     GHC.Word.$fBitsWord32_$cpopCount];

Foreign.C.Types.$fFiniteBitsCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCUInt
                                           GHC.Word.$fBitsWord32_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord32_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord32_$ccountTrailingZeros];

Foreign.C.Types.$fShowCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt32_$cshowsPrec
                                    GHC.Int.$fShowInt32_$cshow
                                    GHC.Int.$fShowInt32_$cshowList];

Foreign.C.Types.$fReadCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt32_$creadsPrec
                                    GHC.Int.$fReadInt32_$creadList
                                    GHC.Int.$fReadInt6
                                    GHC.Int.$fReadInt4];

Foreign.C.Types.$fBoundedCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt32_$cminBound
                                       GHC.Int.$fBoundedInt32_$cmaxBound];

Foreign.C.Types.$fStorableCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt32_$calignment
                                                Foreign.Storable.$fStorableInt32_$calignment
                                                GHC.Storable.readInt32OffPtr1
                                                GHC.Storable.writeInt32OffPtr1
                                                Foreign.Storable.$fStorableInt14
                                                Foreign.Storable.$fStorableInt13
                                                Foreign.Storable.$fStorableInt12
                                                Foreign.Storable.$fStorableInt11];

Foreign.C.Types.$fEnumCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt32_$csucc
                                    GHC.Int.$fEnumInt32_$cpred
                                    GHC.Int.$fEnumInt32_$ctoEnum
                                    GHC.Int.$fEnumInt32_$cfromEnum
                                    GHC.Int.$fEnumInt32_$cenumFrom
                                    GHC.Int.$fEnumInt32_$cenumFromThen
                                    GHC.Int.$fEnumInt32_$cenumFromTo
                                    GHC.Int.$fEnumInt32_$cenumFromThenTo];

Foreign.C.Types.$fNumCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt32_$c+
                                  GHC.Int.$fNumInt32_$c-
                                  GHC.Int.$fNumInt32_$c*
                                  GHC.Int.$fNumInt32_$cnegate
                                  GHC.Int.$fNumInt32_$cabs
                                  GHC.Int.$fNumInt32_$csignum
                                  GHC.Int.$fNumInt32_$cfromInteger];

Foreign.C.Types.$fEqCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt32 GHC.Int.neInt32];

Foreign.C.Types.$fOrdCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCInt
                                      GHC.Int.$fOrdInt32_$ccompare
                                      GHC.Int.ltInt32
                                      GHC.Int.leInt32
                                      GHC.Int.gtInt32
                                      GHC.Int.geInt32
                                      GHC.Int.$fOrdInt32_$cmax
                                      GHC.Int.$fOrdInt32_$cmin];

Foreign.C.Types.$fRealCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCInt
                                    Foreign.C.Types.$fOrdCInt
                                    GHC.Int.$fRealInt32_$ctoRational];

Foreign.C.Types.$fIntegralCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCInt
                                        Foreign.C.Types.$fEnumCInt
                                        GHC.Int.$fIntegralInt32_$cquot
                                        GHC.Int.$fIntegralInt32_$crem
                                        GHC.Int.$fIntegralInt32_$cdiv
                                        GHC.Int.$fIntegralInt32_$cmod
                                        GHC.Int.$fIntegralInt32_$cquotRem
                                        GHC.Int.$fIntegralInt32_$cdivMod
                                        GHC.Int.$fIntegralInt32_$ctoInteger];

Foreign.C.Types.$fBitsCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCInt
                                     GHC.Int.$fBitsInt32_$c.&.
                                     GHC.Int.$fBitsInt32_$c.|.
                                     GHC.Int.$fBitsInt32_$cxor
                                     GHC.Int.$fBitsInt32_$ccomplement
                                     GHC.Int.$fBitsInt32_$cshift
                                     GHC.Int.$fBitsInt32_$crotate
                                     GHC.Int.$fBitsInt6
                                     GHC.Int.$fBitsInt32_$cbit
                                     GHC.Int.$fBitsInt32_$csetBit
                                     GHC.Int.$fBitsInt32_$cclearBit
                                     GHC.Int.$fBitsInt32_$ccomplementBit
                                     GHC.Int.$fBitsInt32_$ctestBit
                                     GHC.Int.$fBitsInt32_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt32_$cfiniteBitSize
                                     GHC.Int.$fBitsInt32_$cisSigned
                                     GHC.Int.$fBitsInt32_$cshiftL
                                     GHC.Int.$fBitsInt32_$cunsafeShiftL
                                     GHC.Int.$fBitsInt32_$cshiftR
                                     GHC.Int.$fBitsInt32_$cunsafeShiftR
                                     GHC.Int.$fBitsInt32_$crotateL
                                     GHC.Int.$fBitsInt32_$crotateR
                                     GHC.Int.$fBitsInt32_$cpopCount];

Foreign.C.Types.$fFiniteBitsCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCInt
                                           GHC.Int.$fBitsInt32_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros];

Foreign.C.Types.$fShowCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord16_$cshowsPrec
                                    GHC.Word.$fShowWord16_$cshow
                                    GHC.Word.$fShowWord16_$cshowList];

Foreign.C.Types.$fReadCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord16_$creadsPrec
                                    GHC.Read.$fReadWord16_$creadList
                                    GHC.Read.$fReadWord6
                                    GHC.Read.$fReadWord4];

Foreign.C.Types.$fBoundedCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord16_$cminBound
                                       GHC.Word.$fBoundedWord16_$cmaxBound];

Foreign.C.Types.$fStorableCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord16_$calignment
                                                Foreign.Storable.$fStorableWord16_$calignment
                                                GHC.Storable.readWord16OffPtr1
                                                GHC.Storable.writeWord16OffPtr1
                                                Foreign.Storable.$fStorableWord9
                                                Foreign.Storable.$fStorableWord7
                                                Foreign.Storable.$fStorableWord6
                                                Foreign.Storable.$fStorableWord5];

Foreign.C.Types.$fEnumCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord16_$csucc
                                    GHC.Word.$fEnumWord16_$cpred
                                    GHC.Word.$fEnumWord16_$ctoEnum
                                    GHC.Word.$fEnumWord16_$cfromEnum
                                    GHC.Word.$fEnumWord16_$cenumFrom
                                    GHC.Word.$fEnumWord16_$cenumFromThen
                                    GHC.Word.$fEnumWord16_$cenumFromTo
                                    GHC.Word.$fEnumWord16_$cenumFromThenTo];

Foreign.C.Types.$fNumCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord16_$c+
                                  GHC.Word.$fNumWord16_$c-
                                  GHC.Word.$fNumWord16_$c*
                                  GHC.Word.$fNumWord16_$cnegate
                                  GHC.Word.$fNumWord16_$cabs
                                  GHC.Word.$fNumWord16_$csignum
                                  GHC.Word.$fNumWord16_$cfromInteger];

Foreign.C.Types.$fEqCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord16
                                     GHC.Word.neWord16];

Foreign.C.Types.$fOrdCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUShort
                                      GHC.Word.$fOrdWord16_$ccompare
                                      GHC.Word.ltWord16
                                      GHC.Word.leWord16
                                      GHC.Word.gtWord16
                                      GHC.Word.geWord16
                                      GHC.Word.$fOrdWord16_$cmax
                                      GHC.Word.$fOrdWord16_$cmin];

Foreign.C.Types.$fRealCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUShort
                                    Foreign.C.Types.$fOrdCUShort
                                    GHC.Word.$fRealWord16_$ctoRational];

Foreign.C.Types.$fIntegralCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CUShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCUShort
                                        Foreign.C.Types.$fEnumCUShort
                                        GHC.Word.$fIntegralWord16_$cquot
                                        GHC.Word.$fIntegralWord16_$crem
                                        GHC.Word.$fIntegralWord16_$cquot
                                        GHC.Word.$fIntegralWord16_$crem
                                        GHC.Word.$fIntegralWord16_$cquotRem
                                        GHC.Word.$fIntegralWord16_$cdivMod
                                        GHC.Word.$ctoInteger1];

Foreign.C.Types.$fBitsCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCUShort
                                     GHC.Word.$fBitsWord16_$c.&.
                                     GHC.Word.$fBitsWord16_$c.|.
                                     GHC.Word.$fBitsWord16_$cxor
                                     GHC.Word.$fBitsWord16_$ccomplement
                                     GHC.Word.$fBitsWord16_$cshift
                                     GHC.Word.$fBitsWord16_$crotate
                                     GHC.Word.$fBitsWord16_$cminBound
                                     GHC.Word.$fBitsWord16_$cbit
                                     GHC.Word.$fBitsWord16_$csetBit
                                     GHC.Word.$fBitsWord16_$cclearBit
                                     GHC.Word.$fBitsWord16_$ccomplementBit
                                     GHC.Word.$fBitsWord16_$ctestBit
                                     GHC.Word.$fBitsWord16_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord16_$cfiniteBitSize
                                     GHC.Word.$fBitsWord16_$cisSigned
                                     GHC.Word.$fBitsWord16_$cshiftL
                                     GHC.Word.$fBitsWord16_$cunsafeShiftL
                                     GHC.Word.$fBitsWord16_$cshiftR
                                     GHC.Word.$fBitsWord16_$cunsafeShiftR
                                     GHC.Word.$fBitsWord16_$crotateL
                                     GHC.Word.$fBitsWord16_$crotateR
                                     GHC.Word.$fBitsWord16_$cpopCount];

Foreign.C.Types.$fFiniteBitsCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCUShort
                                           GHC.Word.$fBitsWord16_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord16_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord16_$ccountTrailingZeros];

Foreign.C.Types.$fShowCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt16_$cshowsPrec
                                    GHC.Int.$fShowInt16_$cshow
                                    GHC.Int.$fShowInt16_$cshowList];

Foreign.C.Types.$fReadCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt16_$creadsPrec
                                    GHC.Int.$fReadInt16_$creadList
                                    GHC.Int.$fReadInt3
                                    GHC.Int.$fReadInt1];

Foreign.C.Types.$fBoundedCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt16_$cminBound
                                       GHC.Int.$fBoundedInt16_$cmaxBound];

Foreign.C.Types.$fStorableCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt16_$calignment
                                                Foreign.Storable.$fStorableInt16_$calignment
                                                GHC.Storable.readInt16OffPtr1
                                                GHC.Storable.writeInt16OffPtr1
                                                Foreign.Storable.$fStorableInt9
                                                Foreign.Storable.$fStorableInt7
                                                Foreign.Storable.$fStorableInt6
                                                Foreign.Storable.$fStorableInt5];

Foreign.C.Types.$fEnumCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt16_$csucc
                                    GHC.Int.$fEnumInt16_$cpred
                                    GHC.Int.$fEnumInt16_$ctoEnum
                                    GHC.Int.$fEnumInt16_$cfromEnum
                                    GHC.Int.$fEnumInt16_$cenumFrom
                                    GHC.Int.$fEnumInt16_$cenumFromThen
                                    GHC.Int.$fEnumInt16_$cenumFromTo
                                    GHC.Int.$fEnumInt16_$cenumFromThenTo];

Foreign.C.Types.$fNumCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt16_$c+
                                  GHC.Int.$fNumInt16_$c-
                                  GHC.Int.$fNumInt16_$c*
                                  GHC.Int.$fNumInt16_$cnegate
                                  GHC.Int.$fNumInt16_$cabs
                                  GHC.Int.$fNumInt16_$csignum
                                  GHC.Int.$fNumInt16_$cfromInteger];

Foreign.C.Types.$fEqCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt16 GHC.Int.neInt16];

Foreign.C.Types.$fOrdCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCShort
                                      GHC.Int.$fOrdInt16_$ccompare
                                      GHC.Int.ltInt16
                                      GHC.Int.leInt16
                                      GHC.Int.gtInt16
                                      GHC.Int.geInt16
                                      GHC.Int.$fOrdInt16_$cmax
                                      GHC.Int.$fOrdInt16_$cmin];

Foreign.C.Types.$fRealCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCShort
                                    Foreign.C.Types.$fOrdCShort
                                    GHC.Int.$fRealInt16_$ctoRational];

Foreign.C.Types.$fIntegralCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCShort
                                        Foreign.C.Types.$fEnumCShort
                                        GHC.Int.$fIntegralInt16_$cquot
                                        GHC.Int.$fIntegralInt16_$crem
                                        GHC.Int.$fIntegralInt16_$cdiv
                                        GHC.Int.$fIntegralInt16_$cmod
                                        GHC.Int.$fIntegralInt16_$cquotRem
                                        GHC.Int.$fIntegralInt16_$cdivMod
                                        GHC.Int.$fIntegralInt16_$ctoInteger];

Foreign.C.Types.$fBitsCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCShort
                                     GHC.Int.$fBitsInt16_$c.&.
                                     GHC.Int.$fBitsInt16_$c.|.
                                     GHC.Int.$fBitsInt16_$cxor
                                     GHC.Int.$fBitsInt16_$ccomplement
                                     GHC.Int.$fBitsInt16_$cshift
                                     GHC.Int.$fBitsInt16_$crotate
                                     GHC.Int.$fBitsInt3
                                     GHC.Int.$fBitsInt16_$cbit
                                     GHC.Int.$fBitsInt16_$csetBit
                                     GHC.Int.$fBitsInt16_$cclearBit
                                     GHC.Int.$fBitsInt16_$ccomplementBit
                                     GHC.Int.$fBitsInt16_$ctestBit
                                     GHC.Int.$fBitsInt16_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt16_$cfiniteBitSize
                                     GHC.Int.$fBitsInt16_$cisSigned
                                     GHC.Int.$fBitsInt16_$cshiftL
                                     GHC.Int.$fBitsInt16_$cunsafeShiftL
                                     GHC.Int.$fBitsInt16_$cshiftR
                                     GHC.Int.$fBitsInt16_$cunsafeShiftR
                                     GHC.Int.$fBitsInt16_$crotateL
                                     GHC.Int.$fBitsInt16_$crotateR
                                     GHC.Int.$fBitsInt16_$cpopCount];

Foreign.C.Types.$fFiniteBitsCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCShort
                                           GHC.Int.$fBitsInt16_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros];

Foreign.C.Types.$fShowCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord8_$cshowsPrec
                                    GHC.Word.$fShowWord8_$cshow
                                    GHC.Word.$fShowWord8_$cshowList];

Foreign.C.Types.$fReadCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord8_$creadsPrec
                                    GHC.Read.$fReadWord8_$creadList
                                    GHC.Read.$fReadWord17
                                    GHC.Read.$fReadWord14];

Foreign.C.Types.$fBoundedCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord8_$cminBound
                                       GHC.Word.$fBoundedWord8_$cmaxBound];

Foreign.C.Types.$fStorableCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord8_$calignment
                                                Foreign.Storable.$fStorableWord8_$calignment
                                                GHC.Storable.readWord8OffPtr1
                                                GHC.Storable.writeWord8OffPtr1
                                                Foreign.Storable.$fStorableWord22
                                                Foreign.Storable.$fStorableWord21
                                                Foreign.Storable.$fStorableWord20
                                                Foreign.Storable.$fStorableWord19];

Foreign.C.Types.$fEnumCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord8_$csucc
                                    GHC.Word.$fEnumWord8_$cpred
                                    GHC.Word.$fEnumWord8_$ctoEnum
                                    GHC.Word.$fEnumWord8_$cfromEnum
                                    GHC.Word.$fEnumWord8_$cenumFrom
                                    GHC.Word.$fEnumWord8_$cenumFromThen
                                    GHC.Word.$fEnumWord8_$cenumFromTo
                                    GHC.Word.$fEnumWord8_$cenumFromThenTo];

Foreign.C.Types.$fNumCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord8_$c+
                                  GHC.Word.$fNumWord8_$c-
                                  GHC.Word.$fNumWord8_$c*
                                  GHC.Word.$fNumWord8_$cnegate
                                  GHC.Word.$fNumWord8_$cabs
                                  GHC.Word.$fNumWord8_$csignum
                                  GHC.Word.$fNumWord8_$cfromInteger];

Foreign.C.Types.$fEqCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord8
                                     GHC.Word.neWord8];

Foreign.C.Types.$fOrdCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUChar
                                      GHC.Word.$fOrdWord8_$ccompare
                                      GHC.Word.ltWord8
                                      GHC.Word.leWord8
                                      GHC.Word.gtWord8
                                      GHC.Word.geWord8
                                      GHC.Word.$fOrdWord8_$cmax
                                      GHC.Word.$fOrdWord8_$cmin];

Foreign.C.Types.$fRealCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUChar
                                    Foreign.C.Types.$fOrdCUChar
                                    GHC.Word.$fRealWord8_$ctoRational];

Foreign.C.Types.$fIntegralCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CUChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCUChar
                                        Foreign.C.Types.$fEnumCUChar
                                        GHC.Word.$fIntegralWord8_$cquot
                                        GHC.Word.$fIntegralWord8_$crem
                                        GHC.Word.$fIntegralWord8_$cquot
                                        GHC.Word.$fIntegralWord8_$crem
                                        GHC.Word.$fIntegralWord8_$cquotRem
                                        GHC.Word.$fIntegralWord8_$cdivMod
                                        GHC.Word.$ctoInteger];

Foreign.C.Types.$fBitsCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCUChar
                                     GHC.Word.$fBitsWord8_$c.&.
                                     GHC.Word.$fBitsWord8_$c.|.
                                     GHC.Word.$fBitsWord8_$cxor
                                     GHC.Word.$fBitsWord8_$ccomplement
                                     GHC.Word.$fBitsWord8_$cshift
                                     GHC.Word.$fBitsWord8_$crotate
                                     GHC.Word.$fBitsWord8_$cminBound
                                     GHC.Word.$fBitsWord8_$cbit
                                     GHC.Word.$fBitsWord8_$csetBit
                                     GHC.Word.$fBitsWord8_$cclearBit
                                     GHC.Word.$fBitsWord8_$ccomplementBit
                                     GHC.Word.$fBitsWord8_$ctestBit
                                     GHC.Word.$fBitsWord8_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord8_$cfiniteBitSize
                                     GHC.Word.$fBitsWord8_$cisSigned
                                     GHC.Word.$fBitsWord8_$cshiftL
                                     GHC.Word.$fBitsWord8_$cunsafeShiftL
                                     GHC.Word.$fBitsWord8_$cshiftR
                                     GHC.Word.$fBitsWord8_$cunsafeShiftR
                                     GHC.Word.$fBitsWord8_$crotateL
                                     GHC.Word.$fBitsWord8_$crotateR
                                     GHC.Word.$fBitsWord8_$cpopCount];

Foreign.C.Types.$fFiniteBitsCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCUChar
                                           GHC.Word.$fBitsWord8_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord8_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord8_$ccountTrailingZeros];

Foreign.C.Types.$fShowCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt8_$cshowsPrec
                                    GHC.Int.$fShowInt8_$cshow
                                    GHC.Int.$fShowInt8_$cshowList];

Foreign.C.Types.$fReadCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CSChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt8_$creadsPrec
                                    GHC.Int.$fReadInt8_$creadList
                                    GHC.Int.$fReadInt13
                                    GHC.Int.$fReadInt11];

Foreign.C.Types.$fBoundedCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt8_$cminBound
                                       GHC.Int.$fBoundedInt8_$cmaxBound];

Foreign.C.Types.$fStorableCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt8_$calignment
                                                Foreign.Storable.$fStorableInt8_$calignment
                                                GHC.Storable.readInt8OffPtr1
                                                GHC.Storable.writeInt8OffPtr1
                                                Foreign.Storable.$fStorableInt23
                                                Foreign.Storable.$fStorableInt22
                                                Foreign.Storable.$fStorableInt21
                                                Foreign.Storable.$fStorableInt20];

Foreign.C.Types.$fEnumCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CSChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt8_$csucc
                                    GHC.Int.$fEnumInt8_$cpred
                                    GHC.Int.$fEnumInt8_$ctoEnum
                                    GHC.Int.$fEnumInt8_$cfromEnum
                                    GHC.Int.$fEnumInt8_$cenumFrom
                                    GHC.Int.$fEnumInt8_$cenumFromThen
                                    GHC.Int.$fEnumInt8_$cenumFromTo
                                    GHC.Int.$fEnumInt8_$cenumFromThenTo];

Foreign.C.Types.$fNumCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt8_$c+
                                  GHC.Int.$fNumInt8_$c-
                                  GHC.Int.$fNumInt8_$c*
                                  GHC.Int.$fNumInt8_$cnegate
                                  GHC.Int.$fNumInt8_$cabs
                                  GHC.Int.$fNumInt8_$csignum
                                  GHC.Int.$fNumInt8_$cfromInteger];

Foreign.C.Types.$fEqCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt8 GHC.Int.neInt8];

Foreign.C.Types.$fOrdCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCSChar
                                      GHC.Int.$fOrdInt8_$ccompare
                                      GHC.Int.ltInt8
                                      GHC.Int.leInt8
                                      GHC.Int.gtInt8
                                      GHC.Int.geInt8
                                      GHC.Int.$fOrdInt8_$cmax
                                      GHC.Int.$fOrdInt8_$cmin];

Foreign.C.Types.$fRealCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CSChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCSChar
                                    Foreign.C.Types.$fOrdCSChar
                                    GHC.Int.$fRealInt8_$ctoRational];

Foreign.C.Types.$fIntegralCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CSChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCSChar
                                        Foreign.C.Types.$fEnumCSChar
                                        GHC.Int.$fIntegralInt8_$cquot
                                        GHC.Int.$fIntegralInt8_$crem
                                        GHC.Int.$fIntegralInt8_$cdiv
                                        GHC.Int.$fIntegralInt8_$cmod
                                        GHC.Int.$fIntegralInt8_$cquotRem
                                        GHC.Int.$fIntegralInt8_$cdivMod
                                        GHC.Int.$fIntegralInt8_$ctoInteger];

Foreign.C.Types.$fBitsCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCSChar
                                     GHC.Int.$fBitsInt8_$c.&.
                                     GHC.Int.$fBitsInt8_$c.|.
                                     GHC.Int.$fBitsInt8_$cxor
                                     GHC.Int.$fBitsInt8_$ccomplement
                                     GHC.Int.$fBitsInt8_$cshift
                                     GHC.Int.$fBitsInt8_$crotate
                                     GHC.Int.$fBitsInt13
                                     GHC.Int.$fBitsInt8_$cbit
                                     GHC.Int.$fBitsInt8_$csetBit
                                     GHC.Int.$fBitsInt8_$cclearBit
                                     GHC.Int.$fBitsInt8_$ccomplementBit
                                     GHC.Int.$fBitsInt8_$ctestBit
                                     GHC.Int.$fBitsInt8_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt8_$cfiniteBitSize
                                     GHC.Int.$fBitsInt8_$cisSigned
                                     GHC.Int.$fBitsInt8_$cshiftL
                                     GHC.Int.$fBitsInt8_$cunsafeShiftL
                                     GHC.Int.$fBitsInt8_$cshiftR
                                     GHC.Int.$fBitsInt8_$cunsafeShiftR
                                     GHC.Int.$fBitsInt8_$crotateL
                                     GHC.Int.$fBitsInt8_$crotateR
                                     GHC.Int.$fBitsInt8_$cpopCount];

Foreign.C.Types.$fFiniteBitsCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCSChar
                                           GHC.Int.$fBitsInt8_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros];

Foreign.C.Types.$fShowCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt8_$cshowsPrec
                                    GHC.Int.$fShowInt8_$cshow
                                    GHC.Int.$fShowInt8_$cshowList];

Foreign.C.Types.$fReadCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt8_$creadsPrec
                                    GHC.Int.$fReadInt8_$creadList
                                    GHC.Int.$fReadInt13
                                    GHC.Int.$fReadInt11];

Foreign.C.Types.$fBoundedCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt8_$cminBound
                                       GHC.Int.$fBoundedInt8_$cmaxBound];

Foreign.C.Types.$fStorableCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt8_$calignment
                                                Foreign.Storable.$fStorableInt8_$calignment
                                                GHC.Storable.readInt8OffPtr1
                                                GHC.Storable.writeInt8OffPtr1
                                                Foreign.Storable.$fStorableInt23
                                                Foreign.Storable.$fStorableInt22
                                                Foreign.Storable.$fStorableInt21
                                                Foreign.Storable.$fStorableInt20];

Foreign.C.Types.$fEnumCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt8_$csucc
                                    GHC.Int.$fEnumInt8_$cpred
                                    GHC.Int.$fEnumInt8_$ctoEnum
                                    GHC.Int.$fEnumInt8_$cfromEnum
                                    GHC.Int.$fEnumInt8_$cenumFrom
                                    GHC.Int.$fEnumInt8_$cenumFromThen
                                    GHC.Int.$fEnumInt8_$cenumFromTo
                                    GHC.Int.$fEnumInt8_$cenumFromThenTo];

Foreign.C.Types.$fNumCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt8_$c+
                                  GHC.Int.$fNumInt8_$c-
                                  GHC.Int.$fNumInt8_$c*
                                  GHC.Int.$fNumInt8_$cnegate
                                  GHC.Int.$fNumInt8_$cabs
                                  GHC.Int.$fNumInt8_$csignum
                                  GHC.Int.$fNumInt8_$cfromInteger];

Foreign.C.Types.$fEqCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt8 GHC.Int.neInt8];

Foreign.C.Types.$fOrdCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCChar
                                      GHC.Int.$fOrdInt8_$ccompare
                                      GHC.Int.ltInt8
                                      GHC.Int.leInt8
                                      GHC.Int.gtInt8
                                      GHC.Int.geInt8
                                      GHC.Int.$fOrdInt8_$cmax
                                      GHC.Int.$fOrdInt8_$cmin];

Foreign.C.Types.$fRealCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCChar
                                    Foreign.C.Types.$fOrdCChar
                                    GHC.Int.$fRealInt8_$ctoRational];

Foreign.C.Types.$fIntegralCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCChar
                                        Foreign.C.Types.$fEnumCChar
                                        GHC.Int.$fIntegralInt8_$cquot
                                        GHC.Int.$fIntegralInt8_$crem
                                        GHC.Int.$fIntegralInt8_$cdiv
                                        GHC.Int.$fIntegralInt8_$cmod
                                        GHC.Int.$fIntegralInt8_$cquotRem
                                        GHC.Int.$fIntegralInt8_$cdivMod
                                        GHC.Int.$fIntegralInt8_$ctoInteger];

Foreign.C.Types.$fBitsCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCChar
                                     GHC.Int.$fBitsInt8_$c.&.
                                     GHC.Int.$fBitsInt8_$c.|.
                                     GHC.Int.$fBitsInt8_$cxor
                                     GHC.Int.$fBitsInt8_$ccomplement
                                     GHC.Int.$fBitsInt8_$cshift
                                     GHC.Int.$fBitsInt8_$crotate
                                     GHC.Int.$fBitsInt13
                                     GHC.Int.$fBitsInt8_$cbit
                                     GHC.Int.$fBitsInt8_$csetBit
                                     GHC.Int.$fBitsInt8_$cclearBit
                                     GHC.Int.$fBitsInt8_$ccomplementBit
                                     GHC.Int.$fBitsInt8_$ctestBit
                                     GHC.Int.$fBitsInt8_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt8_$cfiniteBitSize
                                     GHC.Int.$fBitsInt8_$cisSigned
                                     GHC.Int.$fBitsInt8_$cshiftL
                                     GHC.Int.$fBitsInt8_$cunsafeShiftL
                                     GHC.Int.$fBitsInt8_$cshiftR
                                     GHC.Int.$fBitsInt8_$cunsafeShiftR
                                     GHC.Int.$fBitsInt8_$crotateL
                                     GHC.Int.$fBitsInt8_$crotateR
                                     GHC.Int.$fBitsInt8_$cpopCount];

Foreign.C.Types.$fFiniteBitsCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCChar
                                           GHC.Int.$fBitsInt8_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros];

Foreign.C.Types.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Foreign.C.Types.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$trModule4];

Foreign.C.Types.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.C.Types"#;

Foreign.C.Types.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$trModule2];

Foreign.C.Types.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.C.Types.$trModule3
                                     Foreign.C.Types.$trModule1];

$krep_r54rc :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Int.$tcInt8
                                              GHC.Types.[]];

$krep1_r54rd :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Int.$tcInt16
                                              GHC.Types.[]];

$krep2_r54re :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord16
                                              GHC.Types.[]];

$krep3_r54rf :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord8
                                              GHC.Types.[]];

$krep4_r54rg :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcFloat
                                              GHC.Types.[]];

$krep5_r54rh :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcDouble
                                              GHC.Types.[]];

$krep6_r54ri :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Int.$tcInt32
                                              GHC.Types.[]];

$krep7_r54rj :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord32
                                              GHC.Types.[]];

$krep8_r54rk :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Int.$tcInt64
                                              GHC.Types.[]];

$krep9_r54rl :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord64
                                              GHC.Types.[]];

Foreign.C.Types.$tcCChar2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CChar"#;

Foreign.C.Types.$tcCChar1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCChar2];

Foreign.C.Types.$tcCChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2396474507734313709##
                                    6682082218532013927##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCChar1
                                    0#
                                    GHC.Types.krep$*];

$krep10_r54rm :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCChar
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CChar1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r54rc $krep10_r54rm];

Foreign.C.Types.$tc'CChar3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CChar"#;

Foreign.C.Types.$tc'CChar2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CChar3];

Foreign.C.Types.$tc'CChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16530466139966006137##
                                    10909368544422599906##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CChar2
                                    0#
                                    Foreign.C.Types.$tc'CChar1];

Foreign.C.Types.$tcCSChar2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CSChar"#;

Foreign.C.Types.$tcCSChar1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCSChar2];

Foreign.C.Types.$tcCSChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [670014241423056801##
                                    13143642922997006659##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCSChar1
                                    0#
                                    GHC.Types.krep$*];

$krep11_r54rn :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCSChar
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CSChar1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r54rc $krep11_r54rn];

Foreign.C.Types.$tc'CSChar3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CSChar"#;

Foreign.C.Types.$tc'CSChar2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CSChar3];

Foreign.C.Types.$tc'CSChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12967293744565543744##
                                    16172465149069937779##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CSChar2
                                    0#
                                    Foreign.C.Types.$tc'CSChar1];

Foreign.C.Types.$tcCUChar2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUChar"#;

Foreign.C.Types.$tcCUChar1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUChar2];

Foreign.C.Types.$tcCUChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8453544638672177657##
                                    4088140939900538118##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUChar1
                                    0#
                                    GHC.Types.krep$*];

$krep12_r54ro :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUChar
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUChar1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r54rf $krep12_r54ro];

Foreign.C.Types.$tc'CUChar3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUChar"#;

Foreign.C.Types.$tc'CUChar2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUChar3];

Foreign.C.Types.$tc'CUChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10663029171348202549##
                                    3183188510825835811##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUChar2
                                    0#
                                    Foreign.C.Types.$tc'CUChar1];

Foreign.C.Types.$tcCShort2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CShort"#;

Foreign.C.Types.$tcCShort1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCShort2];

Foreign.C.Types.$tcCShort :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14914560985572859509##
                                    5456450767128082830##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCShort1
                                    0#
                                    GHC.Types.krep$*];

$krep13_r54rp :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCShort
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CShort1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_r54rd $krep13_r54rp];

Foreign.C.Types.$tc'CShort3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CShort"#;

Foreign.C.Types.$tc'CShort2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CShort3];

Foreign.C.Types.$tc'CShort :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8012790609237483390##
                                    5585194063474609654##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CShort2
                                    0#
                                    Foreign.C.Types.$tc'CShort1];

Foreign.C.Types.$tcCUShort2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUShort"#;

Foreign.C.Types.$tcCUShort1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUShort2];

Foreign.C.Types.$tcCUShort :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8017488325625726968##
                                    17560577666502845853##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUShort1
                                    0#
                                    GHC.Types.krep$*];

$krep14_r54rq :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUShort
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUShort1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r54re $krep14_r54rq];

Foreign.C.Types.$tc'CUShort3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUShort"#;

Foreign.C.Types.$tc'CUShort2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUShort3];

Foreign.C.Types.$tc'CUShort :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [230481143628903571##
                                    69801006601599105##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUShort2
                                    0#
                                    Foreign.C.Types.$tc'CUShort1];

Foreign.C.Types.$tcCInt2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CInt"#;

Foreign.C.Types.$tcCInt1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCInt2];

Foreign.C.Types.$tcCInt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12436196710956858214##
                                    2085191951279969833##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCInt1
                                    0#
                                    GHC.Types.krep$*];

$krep15_r54rr :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCInt
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CInt1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep6_r54ri $krep15_r54rr];

Foreign.C.Types.$tc'CInt3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CInt"#;

Foreign.C.Types.$tc'CInt2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CInt3];

Foreign.C.Types.$tc'CInt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [1120313203669928333##
                                    2109434438009157121##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CInt2
                                    0#
                                    Foreign.C.Types.$tc'CInt1];

Foreign.C.Types.$tcCUInt2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUInt"#;

Foreign.C.Types.$tcCUInt1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUInt2];

Foreign.C.Types.$tcCUInt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14846027554880959849##
                                    1568033666229718172##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUInt1
                                    0#
                                    GHC.Types.krep$*];

$krep16_r54rs :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUInt
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUInt1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep7_r54rj $krep16_r54rs];

Foreign.C.Types.$tc'CUInt3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUInt"#;

Foreign.C.Types.$tc'CUInt2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUInt3];

Foreign.C.Types.$tc'CUInt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5056806206685987871##
                                    16269849959994571619##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUInt2
                                    0#
                                    Foreign.C.Types.$tc'CUInt1];

Foreign.C.Types.$tcCLong2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CLong"#;

Foreign.C.Types.$tcCLong1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCLong2];

Foreign.C.Types.$tcCLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10646618100418836143##
                                    9243001812621971743##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCLong1
                                    0#
                                    GHC.Types.krep$*];

$krep17_r54rt :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCLong
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CLong1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep17_r54rt];

Foreign.C.Types.$tc'CLong3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CLong"#;

Foreign.C.Types.$tc'CLong2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CLong3];

Foreign.C.Types.$tc'CLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3628484187667118205##
                                    18251486164209701606##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CLong2
                                    0#
                                    Foreign.C.Types.$tc'CLong1];

Foreign.C.Types.$tcCULong2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CULong"#;

Foreign.C.Types.$tcCULong1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCULong2];

Foreign.C.Types.$tcCULong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13895283310731510483##
                                    3072096496662073086##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCULong1
                                    0#
                                    GHC.Types.krep$*];

$krep18_r54ru :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCULong
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CULong1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r54rl $krep18_r54ru];

Foreign.C.Types.$tc'CULong3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CULong"#;

Foreign.C.Types.$tc'CULong2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CULong3];

Foreign.C.Types.$tc'CULong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15519685101152487835##
                                    12004583885240283077##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CULong2
                                    0#
                                    Foreign.C.Types.$tc'CULong1];

Foreign.C.Types.$tcCLLong2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CLLong"#;

Foreign.C.Types.$tcCLLong1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCLLong2];

Foreign.C.Types.$tcCLLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14244409577131416195##
                                    5952802457093262910##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCLLong1
                                    0#
                                    GHC.Types.krep$*];

$krep19_r54rv :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCLLong
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CLLong1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep19_r54rv];

Foreign.C.Types.$tc'CLLong3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CLLong"#;

Foreign.C.Types.$tc'CLLong2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CLLong3];

Foreign.C.Types.$tc'CLLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5567960549599469613##
                                    3143535471112770491##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CLLong2
                                    0#
                                    Foreign.C.Types.$tc'CLLong1];

Foreign.C.Types.$tcCULLong2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CULLong"#;

Foreign.C.Types.$tcCULLong1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCULLong2];

Foreign.C.Types.$tcCULLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12322165229137886614##
                                    18269851590527847329##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCULLong1
                                    0#
                                    GHC.Types.krep$*];

$krep20_r54rw :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCULLong
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CULLong1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r54rl $krep20_r54rw];

Foreign.C.Types.$tc'CULLong3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CULLong"#;

Foreign.C.Types.$tc'CULLong2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CULLong3];

Foreign.C.Types.$tc'CULLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3146513334079263607##
                                    15997303439394869846##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CULLong2
                                    0#
                                    Foreign.C.Types.$tc'CULLong1];

Foreign.C.Types.$tcCBool2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CBool"#;

Foreign.C.Types.$tcCBool1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCBool2];

Foreign.C.Types.$tcCBool :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2279337507396481328##
                                    13354832971938562972##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCBool1
                                    0#
                                    GHC.Types.krep$*];

$krep21_r54rx :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCBool
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CBool1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r54rf $krep21_r54rx];

Foreign.C.Types.$tc'CBool3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CBool"#;

Foreign.C.Types.$tc'CBool2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CBool3];

Foreign.C.Types.$tc'CBool :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7877573716786595125##
                                    10108068606237611138##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CBool2
                                    0#
                                    Foreign.C.Types.$tc'CBool1];

Foreign.C.Types.$tcCFloat2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CFloat"#;

Foreign.C.Types.$tcCFloat1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCFloat2];

Foreign.C.Types.$tcCFloat :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7535293774037760901##
                                    15755754912293552836##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCFloat1
                                    0#
                                    GHC.Types.krep$*];

$krep22_r54ry :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCFloat
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CFloat1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_r54rg $krep22_r54ry];

Foreign.C.Types.$tc'CFloat3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CFloat"#;

Foreign.C.Types.$tc'CFloat2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CFloat3];

Foreign.C.Types.$tc'CFloat :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14616473864857291281##
                                    17808868477168782076##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CFloat2
                                    0#
                                    Foreign.C.Types.$tc'CFloat1];

Foreign.C.Types.$tcCDouble2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CDouble"#;

Foreign.C.Types.$tcCDouble1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCDouble2];

Foreign.C.Types.$tcCDouble :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6818159078703101232##
                                    2532424603516558210##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCDouble1
                                    0#
                                    GHC.Types.krep$*];

$krep23_r54rz :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCDouble
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CDouble1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep5_r54rh $krep23_r54rz];

Foreign.C.Types.$tc'CDouble3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CDouble"#;

Foreign.C.Types.$tc'CDouble2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CDouble3];

Foreign.C.Types.$tc'CDouble :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17825589113792566821##
                                    2117840440117442278##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CDouble2
                                    0#
                                    Foreign.C.Types.$tc'CDouble1];

Foreign.C.Types.$tcCPtrdiff2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CPtrdiff"#;

Foreign.C.Types.$tcCPtrdiff1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCPtrdiff2];

Foreign.C.Types.$tcCPtrdiff :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17214415904810395203##
                                    17157228803030510849##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCPtrdiff1
                                    0#
                                    GHC.Types.krep$*];

$krep24_r54rA :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCPtrdiff
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CPtrdiff1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep24_r54rA];

Foreign.C.Types.$tc'CPtrdiff3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CPtrdiff"#;

Foreign.C.Types.$tc'CPtrdiff2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CPtrdiff3];

Foreign.C.Types.$tc'CPtrdiff :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11471205784925482390##
                                    4232446785647106570##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CPtrdiff2
                                    0#
                                    Foreign.C.Types.$tc'CPtrdiff1];

Foreign.C.Types.$tcCSize2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CSize"#;

Foreign.C.Types.$tcCSize1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCSize2];

Foreign.C.Types.$tcCSize :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13349225497583392568##
                                    2637756187933719306##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCSize1
                                    0#
                                    GHC.Types.krep$*];

$krep25_r54rB :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCSize
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CSize1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r54rl $krep25_r54rB];

Foreign.C.Types.$tc'CSize3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CSize"#;

Foreign.C.Types.$tc'CSize2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CSize3];

Foreign.C.Types.$tc'CSize :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10732574519801736620##
                                    9582148817759369933##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CSize2
                                    0#
                                    Foreign.C.Types.$tc'CSize1];

Foreign.C.Types.$tcCWchar2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CWchar"#;

Foreign.C.Types.$tcCWchar1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCWchar2];

Foreign.C.Types.$tcCWchar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17109569786881617348##
                                    12848424059160789567##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCWchar1
                                    0#
                                    GHC.Types.krep$*];

$krep26_r54rC :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCWchar
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CWchar1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep6_r54ri $krep26_r54rC];

Foreign.C.Types.$tc'CWchar3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CWchar"#;

Foreign.C.Types.$tc'CWchar2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CWchar3];

Foreign.C.Types.$tc'CWchar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12847418893300185693##
                                    10342021236626115560##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CWchar2
                                    0#
                                    Foreign.C.Types.$tc'CWchar1];

Foreign.C.Types.$tcCSigAtomic2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CSigAtomic"#;

Foreign.C.Types.$tcCSigAtomic1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCSigAtomic2];

Foreign.C.Types.$tcCSigAtomic :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10964102087567040849##
                                    4732914489126451968##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCSigAtomic1
                                    0#
                                    GHC.Types.krep$*];

$krep27_r54rD :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCSigAtomic
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CSigAtomic1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep6_r54ri $krep27_r54rD];

Foreign.C.Types.$tc'CSigAtomic3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CSigAtomic"#;

Foreign.C.Types.$tc'CSigAtomic2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CSigAtomic3];

Foreign.C.Types.$tc'CSigAtomic :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13396342001631048434##
                                    10235017041220212375##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CSigAtomic2
                                    0#
                                    Foreign.C.Types.$tc'CSigAtomic1];

Foreign.C.Types.$tcCClock2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CClock"#;

Foreign.C.Types.$tcCClock1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCClock2];

Foreign.C.Types.$tcCClock :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4014099957796664594##
                                    16004588873343805550##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCClock1
                                    0#
                                    GHC.Types.krep$*];

$krep28_r54rE :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCClock
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CClock1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep28_r54rE];

Foreign.C.Types.$tc'CClock3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CClock"#;

Foreign.C.Types.$tc'CClock2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CClock3];

Foreign.C.Types.$tc'CClock :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7016713985082915031##
                                    17346134655367323413##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CClock2
                                    0#
                                    Foreign.C.Types.$tc'CClock1];

Foreign.C.Types.$tcCTime2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CTime"#;

Foreign.C.Types.$tcCTime1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCTime2];

Foreign.C.Types.$tcCTime :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6217075761792864271##
                                    2605806391289821578##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCTime1
                                    0#
                                    GHC.Types.krep$*];

$krep29_r54rF :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCTime
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CTime1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep29_r54rF];

Foreign.C.Types.$tc'CTime3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CTime"#;

Foreign.C.Types.$tc'CTime2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CTime3];

Foreign.C.Types.$tc'CTime :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17509316711753497463##
                                    1311689641528100086##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CTime2
                                    0#
                                    Foreign.C.Types.$tc'CTime1];

Foreign.C.Types.$tcCUSeconds2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUSeconds"#;

Foreign.C.Types.$tcCUSeconds1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUSeconds2];

Foreign.C.Types.$tcCUSeconds :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17405471525584189701##
                                    2346565657742720464##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUSeconds1
                                    0#
                                    GHC.Types.krep$*];

$krep30_r54rG :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUSeconds
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUSeconds1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep7_r54rj $krep30_r54rG];

Foreign.C.Types.$tc'CUSeconds3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUSeconds"#;

Foreign.C.Types.$tc'CUSeconds2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUSeconds3];

Foreign.C.Types.$tc'CUSeconds :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [1636377087964720166##
                                    9077913612209140483##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUSeconds2
                                    0#
                                    Foreign.C.Types.$tc'CUSeconds1];

Foreign.C.Types.$tcCSUSeconds2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CSUSeconds"#;

Foreign.C.Types.$tcCSUSeconds1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCSUSeconds2];

Foreign.C.Types.$tcCSUSeconds :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17742176050705091078##
                                    4953235515970284689##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCSUSeconds1
                                    0#
                                    GHC.Types.krep$*];

$krep31_r54rH :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCSUSeconds
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CSUSeconds1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep31_r54rH];

Foreign.C.Types.$tc'CSUSeconds3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CSUSeconds"#;

Foreign.C.Types.$tc'CSUSeconds2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CSUSeconds3];

Foreign.C.Types.$tc'CSUSeconds :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [1705325731812814046##
                                    1387105441940513020##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CSUSeconds2
                                    0#
                                    Foreign.C.Types.$tc'CSUSeconds1];

Foreign.C.Types.$tcCFile2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CFile"#;

Foreign.C.Types.$tcCFile1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCFile2];

Foreign.C.Types.$tcCFile :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14154907999347903425##
                                    1814172269682152286##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCFile1
                                    0#
                                    GHC.Types.krep$*];

Foreign.C.Types.$tc'CFile1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCFile
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CFile3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CFile"#;

Foreign.C.Types.$tc'CFile2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CFile3];

Foreign.C.Types.$tc'CFile :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12302197724313820129##
                                    4785193272387875481##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CFile2
                                    0#
                                    Foreign.C.Types.$tc'CFile1];

Foreign.C.Types.$tcCFpos2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CFpos"#;

Foreign.C.Types.$tcCFpos1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCFpos2];

Foreign.C.Types.$tcCFpos :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16874339295908012189##
                                    2656467663994338805##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCFpos1
                                    0#
                                    GHC.Types.krep$*];

Foreign.C.Types.$tc'CFpos1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCFpos
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CFpos3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CFpos"#;

Foreign.C.Types.$tc'CFpos2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CFpos3];

Foreign.C.Types.$tc'CFpos :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [18279263347003670163##
                                    11699892855938511932##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CFpos2
                                    0#
                                    Foreign.C.Types.$tc'CFpos1];

Foreign.C.Types.$tcCJmpBuf2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CJmpBuf"#;

Foreign.C.Types.$tcCJmpBuf1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCJmpBuf2];

Foreign.C.Types.$tcCJmpBuf :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5219762936910773001##
                                    5563521999894797471##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCJmpBuf1
                                    0#
                                    GHC.Types.krep$*];

Foreign.C.Types.$tc'CJmpBuf1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCJmpBuf
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CJmpBuf3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CJmpBuf"#;

Foreign.C.Types.$tc'CJmpBuf2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CJmpBuf3];

Foreign.C.Types.$tc'CJmpBuf :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8278531976244408132##
                                    11989261641992411619##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CJmpBuf2
                                    0#
                                    Foreign.C.Types.$tc'CJmpBuf1];

Foreign.C.Types.$tcCIntPtr2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CIntPtr"#;

Foreign.C.Types.$tcCIntPtr1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCIntPtr2];

Foreign.C.Types.$tcCIntPtr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4666846936648130190##
                                    1074292558155745783##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCIntPtr1
                                    0#
                                    GHC.Types.krep$*];

$krep32_r54rI :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCIntPtr
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CIntPtr1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep32_r54rI];

Foreign.C.Types.$tc'CIntPtr3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CIntPtr"#;

Foreign.C.Types.$tc'CIntPtr2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CIntPtr3];

Foreign.C.Types.$tc'CIntPtr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14193281566492847253##
                                    11429158215235451511##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CIntPtr2
                                    0#
                                    Foreign.C.Types.$tc'CIntPtr1];

Foreign.C.Types.$tcCUIntPtr2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUIntPtr"#;

Foreign.C.Types.$tcCUIntPtr1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUIntPtr2];

Foreign.C.Types.$tcCUIntPtr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3784320557383063626##
                                    5356790357315597843##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUIntPtr1
                                    0#
                                    GHC.Types.krep$*];

$krep33_r54rJ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUIntPtr
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUIntPtr1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r54rl $krep33_r54rJ];

Foreign.C.Types.$tc'CUIntPtr3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUIntPtr"#;

Foreign.C.Types.$tc'CUIntPtr2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUIntPtr3];

Foreign.C.Types.$tc'CUIntPtr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13898690391388793946##
                                    494854583711937458##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUIntPtr2
                                    0#
                                    Foreign.C.Types.$tc'CUIntPtr1];

Foreign.C.Types.$tcCIntMax2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CIntMax"#;

Foreign.C.Types.$tcCIntMax1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCIntMax2];

Foreign.C.Types.$tcCIntMax :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12739001320308858558##
                                    4975233500487868495##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCIntMax1
                                    0#
                                    GHC.Types.krep$*];

$krep34_r54rK :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCIntMax
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CIntMax1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep34_r54rK];

Foreign.C.Types.$tc'CIntMax3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CIntMax"#;

Foreign.C.Types.$tc'CIntMax2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CIntMax3];

Foreign.C.Types.$tc'CIntMax :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2671575007670815434##
                                    14572633195159182874##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CIntMax2
                                    0#
                                    Foreign.C.Types.$tc'CIntMax1];

Foreign.C.Types.$tcCUIntMax2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUIntMax"#;

Foreign.C.Types.$tcCUIntMax1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUIntMax2];

Foreign.C.Types.$tcCUIntMax :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10275136122733258480##
                                    14814319483566909713##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUIntMax1
                                    0#
                                    GHC.Types.krep$*];

$krep35_r54rL :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUIntMax
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUIntMax1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r54rl $krep35_r54rL];

Foreign.C.Types.$tc'CUIntMax3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUIntMax"#;

Foreign.C.Types.$tc'CUIntMax2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUIntMax3];

Foreign.C.Types.$tc'CUIntMax :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4605074089694102640##
                                    11721661597354817794##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUIntMax2
                                    0#
                                    Foreign.C.Types.$tc'CUIntMax1];

Foreign.C.Types.CJmpBuf :: Foreign.C.Types.CJmpBuf
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE Foreign.C.Types.CJmpBuf! [];

Foreign.C.Types.CFpos :: Foreign.C.Types.CFpos
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE Foreign.C.Types.CFpos! [];

Foreign.C.Types.CFile :: Foreign.C.Types.CFile
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE Foreign.C.Types.CFile! [];


==================== STG syntax: ====================
2018-03-16 15:59:49.620692737 UTC

Foreign.C.Types.$fShowCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord64_$cshowsPrec
                                    GHC.Word.$fShowWord64_$cshow
                                    GHC.Word.$fShowWord64_$cshowList];

Foreign.C.Types.$fReadCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord64_$creadsPrec
                                    GHC.Read.$fReadWord64_$creadList
                                    GHC.Read.$fReadWord13
                                    GHC.Read.$fReadWord11];

Foreign.C.Types.$fBoundedCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord7
                                       GHC.Word.$fBoundedWord64_$cmaxBound];

Foreign.C.Types.$fStorableCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord64_$calignment
                                                Foreign.Storable.$fStorableWord64_$calignment
                                                GHC.Storable.readWord64OffPtr1
                                                GHC.Storable.writeWord64OffPtr1
                                                Foreign.Storable.$fStorableWord18
                                                Foreign.Storable.$fStorableWord17
                                                Foreign.Storable.$fStorableWord15
                                                Foreign.Storable.$fStorableWord14];

Foreign.C.Types.$fEnumCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord64_$csucc
                                    GHC.Word.$fEnumWord64_$cpred
                                    GHC.Word.$fEnumWord64_$ctoEnum
                                    GHC.Word.$fEnumWord64_$cfromEnum
                                    GHC.Word.$fEnumWord64_$cenumFrom
                                    GHC.Word.$fEnumWord64_$cenumFromThen
                                    GHC.Word.$fEnumWord64_$cenumFromTo
                                    GHC.Word.$fEnumWord64_$cenumFromThenTo];

Foreign.C.Types.$fNumCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord64_$c+
                                  GHC.Word.$fNumWord64_$c-
                                  GHC.Word.$fNumWord64_$c*
                                  GHC.Word.$fNumWord64_$cnegate
                                  GHC.Word.$fNumWord64_$cabs
                                  GHC.Word.$fNumWord64_$csignum
                                  GHC.Word.$fNumWord64_$cfromInteger];

Foreign.C.Types.$fEqCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord64
                                     GHC.Word.neWord64];

Foreign.C.Types.$fOrdCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUIntMax
                                      GHC.Word.$fOrdWord64_$ccompare
                                      GHC.Word.ltWord64
                                      GHC.Word.leWord64
                                      GHC.Word.gtWord64
                                      GHC.Word.geWord64
                                      GHC.Word.$fOrdWord64_$cmax
                                      GHC.Word.$fOrdWord64_$cmin];

Foreign.C.Types.$fRealCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUIntMax
                                    Foreign.C.Types.$fOrdCUIntMax
                                    GHC.Word.$fRealWord64_$ctoRational];

Foreign.C.Types.$fIntegralCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CUIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCUIntMax
                                        Foreign.C.Types.$fEnumCUIntMax
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cquotRem
                                        GHC.Word.$fIntegralWord64_$cdivMod
                                        GHC.Word.$fIntegralWord64_$ctoInteger];

Foreign.C.Types.$fBitsCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCUIntMax
                                     GHC.Word.$fBitsWord64_$c.&.
                                     GHC.Word.$fBitsWord64_$c.|.
                                     GHC.Word.$fBitsWord64_$cxor
                                     GHC.Word.$fBitsWord64_$ccomplement
                                     GHC.Word.$fBitsWord64_$cshift
                                     GHC.Word.$fBitsWord64_$crotate
                                     GHC.Word.$fBitsWord7
                                     GHC.Word.$fBitsWord64_$cbit
                                     GHC.Word.$fBitsWord64_$csetBit
                                     GHC.Word.$fBitsWord64_$cclearBit
                                     GHC.Word.$fBitsWord64_$ccomplementBit
                                     GHC.Word.$fBitsWord64_$ctestBit
                                     GHC.Word.$fBitsWord64_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord64_$cfiniteBitSize
                                     GHC.Word.$fBitsWord64_$cisSigned
                                     GHC.Word.$fBitsWord64_$cshiftL
                                     GHC.Word.$fBitsWord64_$cunsafeShiftL
                                     GHC.Word.$fBitsWord64_$cshiftR
                                     GHC.Word.$fBitsWord64_$cunsafeShiftR
                                     GHC.Word.$fBitsWord64_$crotateL
                                     GHC.Word.$fBitsWord64_$crotateR
                                     GHC.Word.$fBitsWord64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCUIntMax
                                           GHC.Word.$fBitsWord64_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord64_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fBoundedCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt64_$cminBound
                                       GHC.Int.$fBoundedInt64_$cmaxBound];

Foreign.C.Types.$fStorableCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCIntMax
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCIntMax
                                    Foreign.C.Types.$fOrdCIntMax
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fIntegralCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCIntMax
                                        Foreign.C.Types.$fEnumCIntMax
                                        GHC.Int.$fIntegralInt64_$cquot
                                        GHC.Int.$fIntegralInt64_$crem
                                        GHC.Int.$fIntegralInt64_$cdiv
                                        GHC.Int.$fIntegralInt64_$cmod
                                        GHC.Int.$fIntegralInt64_$cquotRem
                                        GHC.Int.$fIntegralInt64_$cdivMod
                                        GHC.Int.$fIntegralInt64_$ctoInteger];

Foreign.C.Types.$fBitsCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCIntMax
                                     GHC.Int.$fBitsInt64_$c.&.
                                     GHC.Int.$fBitsInt64_$c.|.
                                     GHC.Int.$fBitsInt64_$cxor
                                     GHC.Int.$fBitsInt64_$ccomplement
                                     GHC.Int.$fBitsInt64_$cshift
                                     GHC.Int.$fBitsInt64_$crotate
                                     GHC.Int.$fBitsInt10
                                     GHC.Int.$fBitsInt64_$cbit
                                     GHC.Int.$fBitsInt64_$csetBit
                                     GHC.Int.$fBitsInt64_$cclearBit
                                     GHC.Int.$fBitsInt64_$ccomplementBit
                                     GHC.Int.$fBitsInt64_$ctestBit
                                     GHC.Int.$fBitsInt64_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt64_$cfiniteBitSize
                                     GHC.Int.$fBitsInt64_$cisSigned
                                     GHC.Int.$fBitsInt64_$cshiftL
                                     GHC.Int.$fBitsInt64_$cunsafeShiftL
                                     GHC.Int.$fBitsInt64_$cshiftR
                                     GHC.Int.$fBitsInt64_$cunsafeShiftR
                                     GHC.Int.$fBitsInt64_$crotateL
                                     GHC.Int.$fBitsInt64_$crotateR
                                     GHC.Int.$fBitsInt64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCIntMax
                                           GHC.Int.$fBitsInt64_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord64_$cshowsPrec
                                    GHC.Word.$fShowWord64_$cshow
                                    GHC.Word.$fShowWord64_$cshowList];

Foreign.C.Types.$fReadCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord64_$creadsPrec
                                    GHC.Read.$fReadWord64_$creadList
                                    GHC.Read.$fReadWord13
                                    GHC.Read.$fReadWord11];

Foreign.C.Types.$fBoundedCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord7
                                       GHC.Word.$fBoundedWord64_$cmaxBound];

Foreign.C.Types.$fStorableCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord64_$calignment
                                                Foreign.Storable.$fStorableWord64_$calignment
                                                GHC.Storable.readWord64OffPtr1
                                                GHC.Storable.writeWord64OffPtr1
                                                Foreign.Storable.$fStorableWord18
                                                Foreign.Storable.$fStorableWord17
                                                Foreign.Storable.$fStorableWord15
                                                Foreign.Storable.$fStorableWord14];

Foreign.C.Types.$fEnumCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord64_$csucc
                                    GHC.Word.$fEnumWord64_$cpred
                                    GHC.Word.$fEnumWord64_$ctoEnum
                                    GHC.Word.$fEnumWord64_$cfromEnum
                                    GHC.Word.$fEnumWord64_$cenumFrom
                                    GHC.Word.$fEnumWord64_$cenumFromThen
                                    GHC.Word.$fEnumWord64_$cenumFromTo
                                    GHC.Word.$fEnumWord64_$cenumFromThenTo];

Foreign.C.Types.$fNumCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord64_$c+
                                  GHC.Word.$fNumWord64_$c-
                                  GHC.Word.$fNumWord64_$c*
                                  GHC.Word.$fNumWord64_$cnegate
                                  GHC.Word.$fNumWord64_$cabs
                                  GHC.Word.$fNumWord64_$csignum
                                  GHC.Word.$fNumWord64_$cfromInteger];

Foreign.C.Types.$fEqCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord64
                                     GHC.Word.neWord64];

Foreign.C.Types.$fOrdCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUIntPtr
                                      GHC.Word.$fOrdWord64_$ccompare
                                      GHC.Word.ltWord64
                                      GHC.Word.leWord64
                                      GHC.Word.gtWord64
                                      GHC.Word.geWord64
                                      GHC.Word.$fOrdWord64_$cmax
                                      GHC.Word.$fOrdWord64_$cmin];

Foreign.C.Types.$fRealCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUIntPtr
                                    Foreign.C.Types.$fOrdCUIntPtr
                                    GHC.Word.$fRealWord64_$ctoRational];

Foreign.C.Types.$fIntegralCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CUIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCUIntPtr
                                        Foreign.C.Types.$fEnumCUIntPtr
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cquotRem
                                        GHC.Word.$fIntegralWord64_$cdivMod
                                        GHC.Word.$fIntegralWord64_$ctoInteger];

Foreign.C.Types.$fBitsCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCUIntPtr
                                     GHC.Word.$fBitsWord64_$c.&.
                                     GHC.Word.$fBitsWord64_$c.|.
                                     GHC.Word.$fBitsWord64_$cxor
                                     GHC.Word.$fBitsWord64_$ccomplement
                                     GHC.Word.$fBitsWord64_$cshift
                                     GHC.Word.$fBitsWord64_$crotate
                                     GHC.Word.$fBitsWord7
                                     GHC.Word.$fBitsWord64_$cbit
                                     GHC.Word.$fBitsWord64_$csetBit
                                     GHC.Word.$fBitsWord64_$cclearBit
                                     GHC.Word.$fBitsWord64_$ccomplementBit
                                     GHC.Word.$fBitsWord64_$ctestBit
                                     GHC.Word.$fBitsWord64_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord64_$cfiniteBitSize
                                     GHC.Word.$fBitsWord64_$cisSigned
                                     GHC.Word.$fBitsWord64_$cshiftL
                                     GHC.Word.$fBitsWord64_$cunsafeShiftL
                                     GHC.Word.$fBitsWord64_$cshiftR
                                     GHC.Word.$fBitsWord64_$cunsafeShiftR
                                     GHC.Word.$fBitsWord64_$crotateL
                                     GHC.Word.$fBitsWord64_$crotateR
                                     GHC.Word.$fBitsWord64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCUIntPtr
                                           GHC.Word.$fBitsWord64_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord64_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fBoundedCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt64_$cminBound
                                       GHC.Int.$fBoundedInt64_$cmaxBound];

Foreign.C.Types.$fStorableCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCIntPtr
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCIntPtr
                                    Foreign.C.Types.$fOrdCIntPtr
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fIntegralCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCIntPtr
                                        Foreign.C.Types.$fEnumCIntPtr
                                        GHC.Int.$fIntegralInt64_$cquot
                                        GHC.Int.$fIntegralInt64_$crem
                                        GHC.Int.$fIntegralInt64_$cdiv
                                        GHC.Int.$fIntegralInt64_$cmod
                                        GHC.Int.$fIntegralInt64_$cquotRem
                                        GHC.Int.$fIntegralInt64_$cdivMod
                                        GHC.Int.$fIntegralInt64_$ctoInteger];

Foreign.C.Types.$fBitsCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCIntPtr
                                     GHC.Int.$fBitsInt64_$c.&.
                                     GHC.Int.$fBitsInt64_$c.|.
                                     GHC.Int.$fBitsInt64_$cxor
                                     GHC.Int.$fBitsInt64_$ccomplement
                                     GHC.Int.$fBitsInt64_$cshift
                                     GHC.Int.$fBitsInt64_$crotate
                                     GHC.Int.$fBitsInt10
                                     GHC.Int.$fBitsInt64_$cbit
                                     GHC.Int.$fBitsInt64_$csetBit
                                     GHC.Int.$fBitsInt64_$cclearBit
                                     GHC.Int.$fBitsInt64_$ccomplementBit
                                     GHC.Int.$fBitsInt64_$ctestBit
                                     GHC.Int.$fBitsInt64_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt64_$cfiniteBitSize
                                     GHC.Int.$fBitsInt64_$cisSigned
                                     GHC.Int.$fBitsInt64_$cshiftL
                                     GHC.Int.$fBitsInt64_$cunsafeShiftL
                                     GHC.Int.$fBitsInt64_$cshiftR
                                     GHC.Int.$fBitsInt64_$cunsafeShiftR
                                     GHC.Int.$fBitsInt64_$crotateL
                                     GHC.Int.$fBitsInt64_$crotateR
                                     GHC.Int.$fBitsInt64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCIntPtr
                                           GHC.Int.$fBitsInt64_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CSUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CSUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fStorableCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CSUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CSUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CSUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CSUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CSUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCSUSeconds
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CSUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCSUSeconds
                                    Foreign.C.Types.$fOrdCSUSeconds
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fShowCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord32_$cshowsPrec
                                    GHC.Word.$fShowWord32_$cshow
                                    GHC.Word.$fShowWord32_$cshowList];

Foreign.C.Types.$fReadCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord32_$creadsPrec
                                    GHC.Read.$fReadWord32_$creadList
                                    GHC.Read.$fReadWord10
                                    GHC.Read.$fReadWord7];

Foreign.C.Types.$fStorableCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord32_$calignment
                                                Foreign.Storable.$fStorableWord32_$calignment
                                                GHC.Storable.readWord32OffPtr1
                                                GHC.Storable.writeWord32OffPtr1
                                                Foreign.Storable.$fStorableWord13
                                                Foreign.Storable.$fStorableWord12
                                                Foreign.Storable.$fStorableWord11
                                                Foreign.Storable.$fStorableWord10];

Foreign.C.Types.$fEnumCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord32_$csucc
                                    GHC.Word.$fEnumWord32_$cpred
                                    GHC.Word.$fEnumWord32_$ctoEnum
                                    GHC.Word.$fEnumWord32_$cfromEnum
                                    GHC.Word.$fEnumWord32_$cenumFrom
                                    GHC.Word.$fEnumWord32_$cenumFromThen
                                    GHC.Word.$fEnumWord32_$cenumFromTo
                                    GHC.Word.$fEnumWord32_$cenumFromThenTo];

Foreign.C.Types.$fNumCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord32_$c+
                                  GHC.Word.$fNumWord32_$c-
                                  GHC.Word.$fNumWord32_$c*
                                  GHC.Word.$fNumWord32_$cnegate
                                  GHC.Word.$fNumWord32_$cabs
                                  GHC.Word.$fNumWord32_$csignum
                                  GHC.Word.$fNumWord32_$cfromInteger];

Foreign.C.Types.$fEqCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord32
                                     GHC.Word.neWord32];

Foreign.C.Types.$fOrdCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUSeconds
                                      GHC.Word.$fOrdWord32_$ccompare
                                      GHC.Word.ltWord32
                                      GHC.Word.leWord32
                                      GHC.Word.gtWord32
                                      GHC.Word.geWord32
                                      GHC.Word.$fOrdWord32_$cmax
                                      GHC.Word.$fOrdWord32_$cmin];

Foreign.C.Types.$fRealCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUSeconds
                                    Foreign.C.Types.$fOrdCUSeconds
                                    GHC.Word.$fRealWord32_$ctoRational];

Foreign.C.Types.$fShowCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CTime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CTime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fStorableCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CTime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CTime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CTime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CTime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CTime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCTime
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CTime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCTime
                                    Foreign.C.Types.$fOrdCTime
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fShowCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CClock
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CClock
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fStorableCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CClock
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CClock
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CClock
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CClock
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CClock
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCClock
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CClock
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCClock
                                    Foreign.C.Types.$fOrdCClock
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fShowCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt32_$cshowsPrec
                                    GHC.Int.$fShowInt32_$cshow
                                    GHC.Int.$fShowInt32_$cshowList];

Foreign.C.Types.$fReadCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CSigAtomic
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt32_$creadsPrec
                                    GHC.Int.$fReadInt32_$creadList
                                    GHC.Int.$fReadInt6
                                    GHC.Int.$fReadInt4];

Foreign.C.Types.$fBoundedCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt32_$cminBound
                                       GHC.Int.$fBoundedInt32_$cmaxBound];

Foreign.C.Types.$fStorableCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt32_$calignment
                                                Foreign.Storable.$fStorableInt32_$calignment
                                                GHC.Storable.readInt32OffPtr1
                                                GHC.Storable.writeInt32OffPtr1
                                                Foreign.Storable.$fStorableInt14
                                                Foreign.Storable.$fStorableInt13
                                                Foreign.Storable.$fStorableInt12
                                                Foreign.Storable.$fStorableInt11];

Foreign.C.Types.$fEnumCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CSigAtomic
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt32_$csucc
                                    GHC.Int.$fEnumInt32_$cpred
                                    GHC.Int.$fEnumInt32_$ctoEnum
                                    GHC.Int.$fEnumInt32_$cfromEnum
                                    GHC.Int.$fEnumInt32_$cenumFrom
                                    GHC.Int.$fEnumInt32_$cenumFromThen
                                    GHC.Int.$fEnumInt32_$cenumFromTo
                                    GHC.Int.$fEnumInt32_$cenumFromThenTo];

Foreign.C.Types.$fNumCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt32_$c+
                                  GHC.Int.$fNumInt32_$c-
                                  GHC.Int.$fNumInt32_$c*
                                  GHC.Int.$fNumInt32_$cnegate
                                  GHC.Int.$fNumInt32_$cabs
                                  GHC.Int.$fNumInt32_$csignum
                                  GHC.Int.$fNumInt32_$cfromInteger];

Foreign.C.Types.$fEqCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt32 GHC.Int.neInt32];

Foreign.C.Types.$fOrdCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCSigAtomic
                                      GHC.Int.$fOrdInt32_$ccompare
                                      GHC.Int.ltInt32
                                      GHC.Int.leInt32
                                      GHC.Int.gtInt32
                                      GHC.Int.geInt32
                                      GHC.Int.$fOrdInt32_$cmax
                                      GHC.Int.$fOrdInt32_$cmin];

Foreign.C.Types.$fRealCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CSigAtomic
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCSigAtomic
                                    Foreign.C.Types.$fOrdCSigAtomic
                                    GHC.Int.$fRealInt32_$ctoRational];

Foreign.C.Types.$fIntegralCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CSigAtomic
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCSigAtomic
                                        Foreign.C.Types.$fEnumCSigAtomic
                                        GHC.Int.$fIntegralInt32_$cquot
                                        GHC.Int.$fIntegralInt32_$crem
                                        GHC.Int.$fIntegralInt32_$cdiv
                                        GHC.Int.$fIntegralInt32_$cmod
                                        GHC.Int.$fIntegralInt32_$cquotRem
                                        GHC.Int.$fIntegralInt32_$cdivMod
                                        GHC.Int.$fIntegralInt32_$ctoInteger];

Foreign.C.Types.$fBitsCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCSigAtomic
                                     GHC.Int.$fBitsInt32_$c.&.
                                     GHC.Int.$fBitsInt32_$c.|.
                                     GHC.Int.$fBitsInt32_$cxor
                                     GHC.Int.$fBitsInt32_$ccomplement
                                     GHC.Int.$fBitsInt32_$cshift
                                     GHC.Int.$fBitsInt32_$crotate
                                     GHC.Int.$fBitsInt6
                                     GHC.Int.$fBitsInt32_$cbit
                                     GHC.Int.$fBitsInt32_$csetBit
                                     GHC.Int.$fBitsInt32_$cclearBit
                                     GHC.Int.$fBitsInt32_$ccomplementBit
                                     GHC.Int.$fBitsInt32_$ctestBit
                                     GHC.Int.$fBitsInt32_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt32_$cfiniteBitSize
                                     GHC.Int.$fBitsInt32_$cisSigned
                                     GHC.Int.$fBitsInt32_$cshiftL
                                     GHC.Int.$fBitsInt32_$cunsafeShiftL
                                     GHC.Int.$fBitsInt32_$cshiftR
                                     GHC.Int.$fBitsInt32_$cunsafeShiftR
                                     GHC.Int.$fBitsInt32_$crotateL
                                     GHC.Int.$fBitsInt32_$crotateR
                                     GHC.Int.$fBitsInt32_$cpopCount];

Foreign.C.Types.$fFiniteBitsCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCSigAtomic
                                           GHC.Int.$fBitsInt32_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros];

Foreign.C.Types.$fShowCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt32_$cshowsPrec
                                    GHC.Int.$fShowInt32_$cshow
                                    GHC.Int.$fShowInt32_$cshowList];

Foreign.C.Types.$fReadCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CWchar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt32_$creadsPrec
                                    GHC.Int.$fReadInt32_$creadList
                                    GHC.Int.$fReadInt6
                                    GHC.Int.$fReadInt4];

Foreign.C.Types.$fBoundedCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt32_$cminBound
                                       GHC.Int.$fBoundedInt32_$cmaxBound];

Foreign.C.Types.$fStorableCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt32_$calignment
                                                Foreign.Storable.$fStorableInt32_$calignment
                                                GHC.Storable.readInt32OffPtr1
                                                GHC.Storable.writeInt32OffPtr1
                                                Foreign.Storable.$fStorableInt14
                                                Foreign.Storable.$fStorableInt13
                                                Foreign.Storable.$fStorableInt12
                                                Foreign.Storable.$fStorableInt11];

Foreign.C.Types.$fEnumCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CWchar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt32_$csucc
                                    GHC.Int.$fEnumInt32_$cpred
                                    GHC.Int.$fEnumInt32_$ctoEnum
                                    GHC.Int.$fEnumInt32_$cfromEnum
                                    GHC.Int.$fEnumInt32_$cenumFrom
                                    GHC.Int.$fEnumInt32_$cenumFromThen
                                    GHC.Int.$fEnumInt32_$cenumFromTo
                                    GHC.Int.$fEnumInt32_$cenumFromThenTo];

Foreign.C.Types.$fNumCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt32_$c+
                                  GHC.Int.$fNumInt32_$c-
                                  GHC.Int.$fNumInt32_$c*
                                  GHC.Int.$fNumInt32_$cnegate
                                  GHC.Int.$fNumInt32_$cabs
                                  GHC.Int.$fNumInt32_$csignum
                                  GHC.Int.$fNumInt32_$cfromInteger];

Foreign.C.Types.$fEqCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt32 GHC.Int.neInt32];

Foreign.C.Types.$fOrdCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCWchar
                                      GHC.Int.$fOrdInt32_$ccompare
                                      GHC.Int.ltInt32
                                      GHC.Int.leInt32
                                      GHC.Int.gtInt32
                                      GHC.Int.geInt32
                                      GHC.Int.$fOrdInt32_$cmax
                                      GHC.Int.$fOrdInt32_$cmin];

Foreign.C.Types.$fRealCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CWchar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCWchar
                                    Foreign.C.Types.$fOrdCWchar
                                    GHC.Int.$fRealInt32_$ctoRational];

Foreign.C.Types.$fIntegralCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CWchar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCWchar
                                        Foreign.C.Types.$fEnumCWchar
                                        GHC.Int.$fIntegralInt32_$cquot
                                        GHC.Int.$fIntegralInt32_$crem
                                        GHC.Int.$fIntegralInt32_$cdiv
                                        GHC.Int.$fIntegralInt32_$cmod
                                        GHC.Int.$fIntegralInt32_$cquotRem
                                        GHC.Int.$fIntegralInt32_$cdivMod
                                        GHC.Int.$fIntegralInt32_$ctoInteger];

Foreign.C.Types.$fBitsCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCWchar
                                     GHC.Int.$fBitsInt32_$c.&.
                                     GHC.Int.$fBitsInt32_$c.|.
                                     GHC.Int.$fBitsInt32_$cxor
                                     GHC.Int.$fBitsInt32_$ccomplement
                                     GHC.Int.$fBitsInt32_$cshift
                                     GHC.Int.$fBitsInt32_$crotate
                                     GHC.Int.$fBitsInt6
                                     GHC.Int.$fBitsInt32_$cbit
                                     GHC.Int.$fBitsInt32_$csetBit
                                     GHC.Int.$fBitsInt32_$cclearBit
                                     GHC.Int.$fBitsInt32_$ccomplementBit
                                     GHC.Int.$fBitsInt32_$ctestBit
                                     GHC.Int.$fBitsInt32_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt32_$cfiniteBitSize
                                     GHC.Int.$fBitsInt32_$cisSigned
                                     GHC.Int.$fBitsInt32_$cshiftL
                                     GHC.Int.$fBitsInt32_$cunsafeShiftL
                                     GHC.Int.$fBitsInt32_$cshiftR
                                     GHC.Int.$fBitsInt32_$cunsafeShiftR
                                     GHC.Int.$fBitsInt32_$crotateL
                                     GHC.Int.$fBitsInt32_$crotateR
                                     GHC.Int.$fBitsInt32_$cpopCount];

Foreign.C.Types.$fFiniteBitsCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCWchar
                                           GHC.Int.$fBitsInt32_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros];

Foreign.C.Types.$fShowCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CSize
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord64_$cshowsPrec
                                    GHC.Word.$fShowWord64_$cshow
                                    GHC.Word.$fShowWord64_$cshowList];

Foreign.C.Types.$fReadCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CSize
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord64_$creadsPrec
                                    GHC.Read.$fReadWord64_$creadList
                                    GHC.Read.$fReadWord13
                                    GHC.Read.$fReadWord11];

Foreign.C.Types.$fBoundedCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord7
                                       GHC.Word.$fBoundedWord64_$cmaxBound];

Foreign.C.Types.$fStorableCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord64_$calignment
                                                Foreign.Storable.$fStorableWord64_$calignment
                                                GHC.Storable.readWord64OffPtr1
                                                GHC.Storable.writeWord64OffPtr1
                                                Foreign.Storable.$fStorableWord18
                                                Foreign.Storable.$fStorableWord17
                                                Foreign.Storable.$fStorableWord15
                                                Foreign.Storable.$fStorableWord14];

Foreign.C.Types.$fEnumCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CSize
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord64_$csucc
                                    GHC.Word.$fEnumWord64_$cpred
                                    GHC.Word.$fEnumWord64_$ctoEnum
                                    GHC.Word.$fEnumWord64_$cfromEnum
                                    GHC.Word.$fEnumWord64_$cenumFrom
                                    GHC.Word.$fEnumWord64_$cenumFromThen
                                    GHC.Word.$fEnumWord64_$cenumFromTo
                                    GHC.Word.$fEnumWord64_$cenumFromThenTo];

Foreign.C.Types.$fNumCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord64_$c+
                                  GHC.Word.$fNumWord64_$c-
                                  GHC.Word.$fNumWord64_$c*
                                  GHC.Word.$fNumWord64_$cnegate
                                  GHC.Word.$fNumWord64_$cabs
                                  GHC.Word.$fNumWord64_$csignum
                                  GHC.Word.$fNumWord64_$cfromInteger];

Foreign.C.Types.$fEqCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord64
                                     GHC.Word.neWord64];

Foreign.C.Types.$fOrdCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCSize
                                      GHC.Word.$fOrdWord64_$ccompare
                                      GHC.Word.ltWord64
                                      GHC.Word.leWord64
                                      GHC.Word.gtWord64
                                      GHC.Word.geWord64
                                      GHC.Word.$fOrdWord64_$cmax
                                      GHC.Word.$fOrdWord64_$cmin];

Foreign.C.Types.$fRealCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CSize
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCSize
                                    Foreign.C.Types.$fOrdCSize
                                    GHC.Word.$fRealWord64_$ctoRational];

Foreign.C.Types.$fIntegralCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CSize
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCSize
                                        Foreign.C.Types.$fEnumCSize
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cquotRem
                                        GHC.Word.$fIntegralWord64_$cdivMod
                                        GHC.Word.$fIntegralWord64_$ctoInteger];

Foreign.C.Types.$fBitsCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCSize
                                     GHC.Word.$fBitsWord64_$c.&.
                                     GHC.Word.$fBitsWord64_$c.|.
                                     GHC.Word.$fBitsWord64_$cxor
                                     GHC.Word.$fBitsWord64_$ccomplement
                                     GHC.Word.$fBitsWord64_$cshift
                                     GHC.Word.$fBitsWord64_$crotate
                                     GHC.Word.$fBitsWord7
                                     GHC.Word.$fBitsWord64_$cbit
                                     GHC.Word.$fBitsWord64_$csetBit
                                     GHC.Word.$fBitsWord64_$cclearBit
                                     GHC.Word.$fBitsWord64_$ccomplementBit
                                     GHC.Word.$fBitsWord64_$ctestBit
                                     GHC.Word.$fBitsWord64_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord64_$cfiniteBitSize
                                     GHC.Word.$fBitsWord64_$cisSigned
                                     GHC.Word.$fBitsWord64_$cshiftL
                                     GHC.Word.$fBitsWord64_$cunsafeShiftL
                                     GHC.Word.$fBitsWord64_$cshiftR
                                     GHC.Word.$fBitsWord64_$cunsafeShiftR
                                     GHC.Word.$fBitsWord64_$crotateL
                                     GHC.Word.$fBitsWord64_$crotateR
                                     GHC.Word.$fBitsWord64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCSize
                                           GHC.Word.$fBitsWord64_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord64_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CPtrdiff
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fBoundedCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt64_$cminBound
                                       GHC.Int.$fBoundedInt64_$cmaxBound];

Foreign.C.Types.$fStorableCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CPtrdiff
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCPtrdiff
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CPtrdiff
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCPtrdiff
                                    Foreign.C.Types.$fOrdCPtrdiff
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fIntegralCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CPtrdiff
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCPtrdiff
                                        Foreign.C.Types.$fEnumCPtrdiff
                                        GHC.Int.$fIntegralInt64_$cquot
                                        GHC.Int.$fIntegralInt64_$crem
                                        GHC.Int.$fIntegralInt64_$cdiv
                                        GHC.Int.$fIntegralInt64_$cmod
                                        GHC.Int.$fIntegralInt64_$cquotRem
                                        GHC.Int.$fIntegralInt64_$cdivMod
                                        GHC.Int.$fIntegralInt64_$ctoInteger];

Foreign.C.Types.$fBitsCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCPtrdiff
                                     GHC.Int.$fBitsInt64_$c.&.
                                     GHC.Int.$fBitsInt64_$c.|.
                                     GHC.Int.$fBitsInt64_$cxor
                                     GHC.Int.$fBitsInt64_$ccomplement
                                     GHC.Int.$fBitsInt64_$cshift
                                     GHC.Int.$fBitsInt64_$crotate
                                     GHC.Int.$fBitsInt10
                                     GHC.Int.$fBitsInt64_$cbit
                                     GHC.Int.$fBitsInt64_$csetBit
                                     GHC.Int.$fBitsInt64_$cclearBit
                                     GHC.Int.$fBitsInt64_$ccomplementBit
                                     GHC.Int.$fBitsInt64_$ctestBit
                                     GHC.Int.$fBitsInt64_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt64_$cfiniteBitSize
                                     GHC.Int.$fBitsInt64_$cisSigned
                                     GHC.Int.$fBitsInt64_$cshiftL
                                     GHC.Int.$fBitsInt64_$cunsafeShiftL
                                     GHC.Int.$fBitsInt64_$cshiftR
                                     GHC.Int.$fBitsInt64_$cunsafeShiftR
                                     GHC.Int.$fBitsInt64_$crotateL
                                     GHC.Int.$fBitsInt64_$crotateR
                                     GHC.Int.$fBitsInt64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCPtrdiff
                                           GHC.Int.$fBitsInt64_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Float.$fShowDouble_$cshowsPrec
                                    GHC.Float.$fShowDouble_$cshow
                                    GHC.Float.$fShowDouble_$cshowList];

Foreign.C.Types.$fReadCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadDouble_$creadsPrec
                                    GHC.Read.$fReadDouble_$creadList
                                    GHC.Read.$fReadDouble1
                                    GHC.Read.$fReadDouble_$creadListPrec];

Foreign.C.Types.$fStorableCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CDouble
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableDouble_$calignment
                                                Foreign.Storable.$fStorableDouble_$calignment
                                                GHC.Storable.readDoubleOffPtr1
                                                GHC.Storable.writeDoubleOffPtr1
                                                Foreign.Storable.$fStorableDouble4
                                                Foreign.Storable.$fStorableDouble3
                                                Foreign.Storable.$fStorableDouble2
                                                Foreign.Storable.$fStorableDouble1];

Foreign.C.Types.$fEnumCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Float.$fEnumDouble_$csucc
                                    GHC.Float.$fEnumDouble_$cpred
                                    GHC.Float.RealFracMethods.int2Double
                                    GHC.Float.$fEnumDouble_$cfromEnum
                                    GHC.Float.$fEnumDouble_$snumericEnumFrom
                                    GHC.Float.$fEnumDouble_$snumericEnumFromThen
                                    GHC.Float.$fEnumDouble_$cenumFromTo
                                    GHC.Float.$fEnumDouble_$cenumFromThenTo];

Foreign.C.Types.$fNumCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CDouble
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Float.plusDouble
                                  GHC.Float.minusDouble
                                  GHC.Float.timesDouble
                                  GHC.Float.negateDouble
                                  GHC.Float.fabsDouble
                                  GHC.Float.$fNumDouble_$csignum
                                  GHC.Float.$fNumDouble_$cfromInteger];

Foreign.C.Types.$fFractionalCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Fractional Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Fractional! [Foreign.C.Types.$fNumCDouble
                                          GHC.Float.divideDouble
                                          GHC.Float.$fFractionalDouble_$crecip
                                          GHC.Float.$fFractionalDouble_$cfromRational];

Foreign.C.Types.$fFloatingCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Float.Floating Foreign.C.Types.CDouble
[GblId[DFunId]] =
    CCS_DONT_CARE GHC.Float.C:Floating! [Foreign.C.Types.$fFractionalCDouble
                                         GHC.Float.$fFloatingDouble_$cpi
                                         GHC.Float.expDouble
                                         GHC.Float.logDouble
                                         GHC.Float.sqrtDouble
                                         GHC.Float.powerDouble
                                         GHC.Float.$fFloatingDouble_$clogBase
                                         GHC.Float.sinDouble
                                         GHC.Float.cosDouble
                                         GHC.Float.tanDouble
                                         GHC.Float.asinDouble
                                         GHC.Float.acosDouble
                                         GHC.Float.atanDouble
                                         GHC.Float.sinhDouble
                                         GHC.Float.coshDouble
                                         GHC.Float.tanhDouble
                                         GHC.Float.$fFloatingDouble_$casinh
                                         GHC.Float.$fFloatingDouble_$cacosh
                                         GHC.Float.$fFloatingDouble_$catanh
                                         GHC.Float.log1pDouble
                                         GHC.Float.expm1Double
                                         GHC.Float.$fFloatingDouble_$clog1pexp
                                         GHC.Float.$fFloatingDouble_$clog1mexp];

Foreign.C.Types.$fEqCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CDouble
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Classes.eqDouble
                                     GHC.Classes.$fEqDouble_$c/=];

Foreign.C.Types.$fOrdCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CDouble
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCDouble
                                      GHC.Classes.$fOrdDouble_$ccompare
                                      GHC.Classes.$fOrdDouble_$c<
                                      GHC.Classes.$fOrdDouble_$c<=
                                      GHC.Classes.$fOrdDouble_$c>
                                      GHC.Classes.$fOrdDouble_$c>=
                                      GHC.Classes.$fOrdDouble_$cmax
                                      GHC.Classes.$fOrdDouble_$cmin];

Foreign.C.Types.$fRealCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCDouble
                                    Foreign.C.Types.$fOrdCDouble
                                    GHC.Float.$fRealDouble_$ctoRational];

Foreign.C.Types.$fRealFracCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.RealFrac Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:RealFrac! [Foreign.C.Types.$fRealCDouble
                                        Foreign.C.Types.$fFractionalCDouble
                                        GHC.Float.$fRealFracDouble_$cproperFraction
                                        GHC.Float.$fRealFracDouble_$ctruncate
                                        GHC.Float.$fRealFracDouble_$cround
                                        GHC.Float.$fRealFracDouble_$cceiling
                                        GHC.Float.$fRealFracDouble_$cfloor];

Foreign.C.Types.$fRealFloatCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Float.RealFloat Foreign.C.Types.CDouble
[GblId[DFunId]] =
    CCS_DONT_CARE GHC.Float.C:RealFloat! [Foreign.C.Types.$fRealFracCDouble
                                          Foreign.C.Types.$fFloatingCDouble
                                          GHC.Float.$fRealFloatDouble_$cfloatRadix
                                          GHC.Float.$fRealFloatDouble_$cfloatDigits
                                          GHC.Float.$fRealFloatDouble_$cfloatRange
                                          GHC.Float.$fRealFloatDouble_$cdecodeFloat
                                          GHC.Float.$fRealFloatDouble_$cencodeFloat
                                          GHC.Float.$fRealFloatDouble_$cexponent
                                          GHC.Float.$fRealFloatDouble_$csignificand
                                          GHC.Float.$fRealFloatDouble_$cscaleFloat
                                          GHC.Float.$fRealFloatDouble_$cisNaN
                                          GHC.Float.$fRealFloatDouble_$cisInfinite
                                          GHC.Float.$fRealFloatDouble_$cisDenormalized
                                          GHC.Float.$fRealFloatDouble_$cisNegativeZero
                                          GHC.Float.$fRealFloatDouble_$cisIEEE
                                          GHC.Float.$fRealFloatDouble_$catan2];

Foreign.C.Types.$fShowCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Float.$fShowFloat_$cshowsPrec
                                    GHC.Float.$fShowFloat_$cshow
                                    GHC.Float.$fShowFloat_$cshowList];

Foreign.C.Types.$fReadCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadFloat_$creadsPrec
                                    GHC.Read.$fReadFloat_$creadList
                                    GHC.Read.$fReadFloat1
                                    GHC.Read.$fReadFloat_$creadListPrec];

Foreign.C.Types.$fStorableCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CFloat
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableFloat_$calignment
                                                Foreign.Storable.$fStorableFloat_$calignment
                                                GHC.Storable.readFloatOffPtr1
                                                GHC.Storable.writeFloatOffPtr1
                                                Foreign.Storable.$fStorableFloat4
                                                Foreign.Storable.$fStorableFloat3
                                                Foreign.Storable.$fStorableFloat2
                                                Foreign.Storable.$fStorableFloat1];

Foreign.C.Types.$fEnumCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Float.$fEnumFloat_$csucc
                                    GHC.Float.$fEnumFloat_$cpred
                                    GHC.Float.RealFracMethods.int2Float
                                    GHC.Float.$fEnumFloat_$cfromEnum
                                    GHC.Float.$fEnumFloat_$snumericEnumFrom
                                    GHC.Float.$fEnumFloat_$snumericEnumFromThen
                                    GHC.Float.$fEnumFloat_$cenumFromTo
                                    GHC.Float.$fEnumFloat_$cenumFromThenTo];

Foreign.C.Types.$fNumCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CFloat
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Float.plusFloat
                                  GHC.Float.minusFloat
                                  GHC.Float.timesFloat
                                  GHC.Float.negateFloat
                                  GHC.Float.fabsFloat
                                  GHC.Float.$fNumFloat_$csignum
                                  GHC.Float.$fNumFloat_$cfromInteger];

Foreign.C.Types.$fFractionalCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Fractional Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Fractional! [Foreign.C.Types.$fNumCFloat
                                          GHC.Float.divideFloat
                                          GHC.Float.$fFractionalFloat_$crecip
                                          GHC.Float.$fFractionalFloat_$cfromRational];

Foreign.C.Types.$fFloatingCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Float.Floating Foreign.C.Types.CFloat
[GblId[DFunId]] =
    CCS_DONT_CARE GHC.Float.C:Floating! [Foreign.C.Types.$fFractionalCFloat
                                         GHC.Float.$fFloatingFloat_$cpi
                                         GHC.Float.expFloat
                                         GHC.Float.logFloat
                                         GHC.Float.sqrtFloat
                                         GHC.Float.powerFloat
                                         GHC.Float.$fFloatingFloat_$clogBase
                                         GHC.Float.sinFloat
                                         GHC.Float.cosFloat
                                         GHC.Float.tanFloat
                                         GHC.Float.asinFloat
                                         GHC.Float.acosFloat
                                         GHC.Float.atanFloat
                                         GHC.Float.sinhFloat
                                         GHC.Float.coshFloat
                                         GHC.Float.tanhFloat
                                         GHC.Float.$fFloatingFloat_$casinh
                                         GHC.Float.$fFloatingFloat_$cacosh
                                         GHC.Float.$fFloatingFloat_$catanh
                                         GHC.Float.log1pFloat
                                         GHC.Float.expm1Float
                                         GHC.Float.$fFloatingFloat_$clog1pexp
                                         GHC.Float.$fFloatingFloat_$clog1mexp];

Foreign.C.Types.$fEqCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CFloat
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Classes.eqFloat
                                     GHC.Classes.$fEqFloat_$c/=];

Foreign.C.Types.$fOrdCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CFloat
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCFloat
                                      GHC.Classes.$fOrdFloat_$ccompare
                                      GHC.Classes.$fOrdFloat_$c<
                                      GHC.Classes.$fOrdFloat_$c<=
                                      GHC.Classes.$fOrdFloat_$c>
                                      GHC.Classes.$fOrdFloat_$c>=
                                      GHC.Classes.$fOrdFloat_$cmax
                                      GHC.Classes.$fOrdFloat_$cmin];

Foreign.C.Types.$fRealCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCFloat
                                    Foreign.C.Types.$fOrdCFloat
                                    GHC.Float.$fRealFloat_$ctoRational];

Foreign.C.Types.$fRealFracCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.RealFrac Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:RealFrac! [Foreign.C.Types.$fRealCFloat
                                        Foreign.C.Types.$fFractionalCFloat
                                        GHC.Float.$fRealFracFloat_$cproperFraction
                                        GHC.Float.$fRealFracFloat_$ctruncate
                                        GHC.Float.$fRealFracFloat_$cround
                                        GHC.Float.$fRealFracFloat_$cceiling
                                        GHC.Float.$fRealFracFloat_$cfloor];

Foreign.C.Types.$fRealFloatCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Float.RealFloat Foreign.C.Types.CFloat
[GblId[DFunId]] =
    CCS_DONT_CARE GHC.Float.C:RealFloat! [Foreign.C.Types.$fRealFracCFloat
                                          Foreign.C.Types.$fFloatingCFloat
                                          GHC.Float.$fRealFloatFloat_$cfloatRadix
                                          GHC.Float.$fRealFloatFloat_$cfloatDigits
                                          GHC.Float.$fRealFloatFloat_$cfloatRange
                                          GHC.Float.$fRealFloatFloat_$cdecodeFloat
                                          GHC.Float.$fRealFloatFloat_$cencodeFloat
                                          GHC.Float.$fRealFloatFloat_$cexponent
                                          GHC.Float.$fRealFloatFloat_$csignificand
                                          GHC.Float.$fRealFloatFloat_$cscaleFloat
                                          GHC.Float.$fRealFloatFloat_$cisNaN
                                          GHC.Float.$fRealFloatFloat_$cisInfinite
                                          GHC.Float.$fRealFloatFloat_$cisDenormalized
                                          GHC.Float.$fRealFloatFloat_$cisNegativeZero
                                          GHC.Float.$fRealFloatFloat_$cisIEEE
                                          GHC.Float.$fRealFloatFloat_$catan2];

Foreign.C.Types.$fShowCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord8_$cshowsPrec
                                    GHC.Word.$fShowWord8_$cshow
                                    GHC.Word.$fShowWord8_$cshowList];

Foreign.C.Types.$fReadCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CBool
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord8_$creadsPrec
                                    GHC.Read.$fReadWord8_$creadList
                                    GHC.Read.$fReadWord17
                                    GHC.Read.$fReadWord14];

Foreign.C.Types.$fBoundedCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord8_$cminBound
                                       GHC.Word.$fBoundedWord8_$cmaxBound];

Foreign.C.Types.$fStorableCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord8_$calignment
                                                Foreign.Storable.$fStorableWord8_$calignment
                                                GHC.Storable.readWord8OffPtr1
                                                GHC.Storable.writeWord8OffPtr1
                                                Foreign.Storable.$fStorableWord22
                                                Foreign.Storable.$fStorableWord21
                                                Foreign.Storable.$fStorableWord20
                                                Foreign.Storable.$fStorableWord19];

Foreign.C.Types.$fEnumCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CBool
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord8_$csucc
                                    GHC.Word.$fEnumWord8_$cpred
                                    GHC.Word.$fEnumWord8_$ctoEnum
                                    GHC.Word.$fEnumWord8_$cfromEnum
                                    GHC.Word.$fEnumWord8_$cenumFrom
                                    GHC.Word.$fEnumWord8_$cenumFromThen
                                    GHC.Word.$fEnumWord8_$cenumFromTo
                                    GHC.Word.$fEnumWord8_$cenumFromThenTo];

Foreign.C.Types.$fNumCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord8_$c+
                                  GHC.Word.$fNumWord8_$c-
                                  GHC.Word.$fNumWord8_$c*
                                  GHC.Word.$fNumWord8_$cnegate
                                  GHC.Word.$fNumWord8_$cabs
                                  GHC.Word.$fNumWord8_$csignum
                                  GHC.Word.$fNumWord8_$cfromInteger];

Foreign.C.Types.$fEqCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord8
                                     GHC.Word.neWord8];

Foreign.C.Types.$fOrdCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCBool
                                      GHC.Word.$fOrdWord8_$ccompare
                                      GHC.Word.ltWord8
                                      GHC.Word.leWord8
                                      GHC.Word.gtWord8
                                      GHC.Word.geWord8
                                      GHC.Word.$fOrdWord8_$cmax
                                      GHC.Word.$fOrdWord8_$cmin];

Foreign.C.Types.$fRealCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CBool
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCBool
                                    Foreign.C.Types.$fOrdCBool
                                    GHC.Word.$fRealWord8_$ctoRational];

Foreign.C.Types.$fIntegralCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CBool
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCBool
                                        Foreign.C.Types.$fEnumCBool
                                        GHC.Word.$fIntegralWord8_$cquot
                                        GHC.Word.$fIntegralWord8_$crem
                                        GHC.Word.$fIntegralWord8_$cquot
                                        GHC.Word.$fIntegralWord8_$crem
                                        GHC.Word.$fIntegralWord8_$cquotRem
                                        GHC.Word.$fIntegralWord8_$cdivMod
                                        GHC.Word.$ctoInteger];

Foreign.C.Types.$fBitsCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCBool
                                     GHC.Word.$fBitsWord8_$c.&.
                                     GHC.Word.$fBitsWord8_$c.|.
                                     GHC.Word.$fBitsWord8_$cxor
                                     GHC.Word.$fBitsWord8_$ccomplement
                                     GHC.Word.$fBitsWord8_$cshift
                                     GHC.Word.$fBitsWord8_$crotate
                                     GHC.Word.$fBitsWord8_$cminBound
                                     GHC.Word.$fBitsWord8_$cbit
                                     GHC.Word.$fBitsWord8_$csetBit
                                     GHC.Word.$fBitsWord8_$cclearBit
                                     GHC.Word.$fBitsWord8_$ccomplementBit
                                     GHC.Word.$fBitsWord8_$ctestBit
                                     GHC.Word.$fBitsWord8_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord8_$cfiniteBitSize
                                     GHC.Word.$fBitsWord8_$cisSigned
                                     GHC.Word.$fBitsWord8_$cshiftL
                                     GHC.Word.$fBitsWord8_$cunsafeShiftL
                                     GHC.Word.$fBitsWord8_$cshiftR
                                     GHC.Word.$fBitsWord8_$cunsafeShiftR
                                     GHC.Word.$fBitsWord8_$crotateL
                                     GHC.Word.$fBitsWord8_$crotateR
                                     GHC.Word.$fBitsWord8_$cpopCount];

Foreign.C.Types.$fFiniteBitsCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCBool
                                           GHC.Word.$fBitsWord8_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord8_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord8_$ccountTrailingZeros];

Foreign.C.Types.$fShowCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CULLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord64_$cshowsPrec
                                    GHC.Word.$fShowWord64_$cshow
                                    GHC.Word.$fShowWord64_$cshowList];

Foreign.C.Types.$fReadCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CULLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord64_$creadsPrec
                                    GHC.Read.$fReadWord64_$creadList
                                    GHC.Read.$fReadWord13
                                    GHC.Read.$fReadWord11];

Foreign.C.Types.$fBoundedCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord7
                                       GHC.Word.$fBoundedWord64_$cmaxBound];

Foreign.C.Types.$fStorableCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord64_$calignment
                                                Foreign.Storable.$fStorableWord64_$calignment
                                                GHC.Storable.readWord64OffPtr1
                                                GHC.Storable.writeWord64OffPtr1
                                                Foreign.Storable.$fStorableWord18
                                                Foreign.Storable.$fStorableWord17
                                                Foreign.Storable.$fStorableWord15
                                                Foreign.Storable.$fStorableWord14];

Foreign.C.Types.$fEnumCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CULLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord64_$csucc
                                    GHC.Word.$fEnumWord64_$cpred
                                    GHC.Word.$fEnumWord64_$ctoEnum
                                    GHC.Word.$fEnumWord64_$cfromEnum
                                    GHC.Word.$fEnumWord64_$cenumFrom
                                    GHC.Word.$fEnumWord64_$cenumFromThen
                                    GHC.Word.$fEnumWord64_$cenumFromTo
                                    GHC.Word.$fEnumWord64_$cenumFromThenTo];

Foreign.C.Types.$fNumCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord64_$c+
                                  GHC.Word.$fNumWord64_$c-
                                  GHC.Word.$fNumWord64_$c*
                                  GHC.Word.$fNumWord64_$cnegate
                                  GHC.Word.$fNumWord64_$cabs
                                  GHC.Word.$fNumWord64_$csignum
                                  GHC.Word.$fNumWord64_$cfromInteger];

Foreign.C.Types.$fEqCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord64
                                     GHC.Word.neWord64];

Foreign.C.Types.$fOrdCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCULLong
                                      GHC.Word.$fOrdWord64_$ccompare
                                      GHC.Word.ltWord64
                                      GHC.Word.leWord64
                                      GHC.Word.gtWord64
                                      GHC.Word.geWord64
                                      GHC.Word.$fOrdWord64_$cmax
                                      GHC.Word.$fOrdWord64_$cmin];

Foreign.C.Types.$fRealCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CULLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCULLong
                                    Foreign.C.Types.$fOrdCULLong
                                    GHC.Word.$fRealWord64_$ctoRational];

Foreign.C.Types.$fIntegralCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CULLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCULLong
                                        Foreign.C.Types.$fEnumCULLong
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cquotRem
                                        GHC.Word.$fIntegralWord64_$cdivMod
                                        GHC.Word.$fIntegralWord64_$ctoInteger];

Foreign.C.Types.$fBitsCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCULLong
                                     GHC.Word.$fBitsWord64_$c.&.
                                     GHC.Word.$fBitsWord64_$c.|.
                                     GHC.Word.$fBitsWord64_$cxor
                                     GHC.Word.$fBitsWord64_$ccomplement
                                     GHC.Word.$fBitsWord64_$cshift
                                     GHC.Word.$fBitsWord64_$crotate
                                     GHC.Word.$fBitsWord7
                                     GHC.Word.$fBitsWord64_$cbit
                                     GHC.Word.$fBitsWord64_$csetBit
                                     GHC.Word.$fBitsWord64_$cclearBit
                                     GHC.Word.$fBitsWord64_$ccomplementBit
                                     GHC.Word.$fBitsWord64_$ctestBit
                                     GHC.Word.$fBitsWord64_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord64_$cfiniteBitSize
                                     GHC.Word.$fBitsWord64_$cisSigned
                                     GHC.Word.$fBitsWord64_$cshiftL
                                     GHC.Word.$fBitsWord64_$cunsafeShiftL
                                     GHC.Word.$fBitsWord64_$cshiftR
                                     GHC.Word.$fBitsWord64_$cunsafeShiftR
                                     GHC.Word.$fBitsWord64_$crotateL
                                     GHC.Word.$fBitsWord64_$crotateR
                                     GHC.Word.$fBitsWord64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCULLong
                                           GHC.Word.$fBitsWord64_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord64_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CLLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fBoundedCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt64_$cminBound
                                       GHC.Int.$fBoundedInt64_$cmaxBound];

Foreign.C.Types.$fStorableCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CLLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCLLong
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CLLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCLLong
                                    Foreign.C.Types.$fOrdCLLong
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fIntegralCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CLLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCLLong
                                        Foreign.C.Types.$fEnumCLLong
                                        GHC.Int.$fIntegralInt64_$cquot
                                        GHC.Int.$fIntegralInt64_$crem
                                        GHC.Int.$fIntegralInt64_$cdiv
                                        GHC.Int.$fIntegralInt64_$cmod
                                        GHC.Int.$fIntegralInt64_$cquotRem
                                        GHC.Int.$fIntegralInt64_$cdivMod
                                        GHC.Int.$fIntegralInt64_$ctoInteger];

Foreign.C.Types.$fBitsCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCLLong
                                     GHC.Int.$fBitsInt64_$c.&.
                                     GHC.Int.$fBitsInt64_$c.|.
                                     GHC.Int.$fBitsInt64_$cxor
                                     GHC.Int.$fBitsInt64_$ccomplement
                                     GHC.Int.$fBitsInt64_$cshift
                                     GHC.Int.$fBitsInt64_$crotate
                                     GHC.Int.$fBitsInt10
                                     GHC.Int.$fBitsInt64_$cbit
                                     GHC.Int.$fBitsInt64_$csetBit
                                     GHC.Int.$fBitsInt64_$cclearBit
                                     GHC.Int.$fBitsInt64_$ccomplementBit
                                     GHC.Int.$fBitsInt64_$ctestBit
                                     GHC.Int.$fBitsInt64_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt64_$cfiniteBitSize
                                     GHC.Int.$fBitsInt64_$cisSigned
                                     GHC.Int.$fBitsInt64_$cshiftL
                                     GHC.Int.$fBitsInt64_$cunsafeShiftL
                                     GHC.Int.$fBitsInt64_$cshiftR
                                     GHC.Int.$fBitsInt64_$cunsafeShiftR
                                     GHC.Int.$fBitsInt64_$crotateL
                                     GHC.Int.$fBitsInt64_$crotateR
                                     GHC.Int.$fBitsInt64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCLLong
                                           GHC.Int.$fBitsInt64_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CULong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord64_$cshowsPrec
                                    GHC.Word.$fShowWord64_$cshow
                                    GHC.Word.$fShowWord64_$cshowList];

Foreign.C.Types.$fReadCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CULong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord64_$creadsPrec
                                    GHC.Read.$fReadWord64_$creadList
                                    GHC.Read.$fReadWord13
                                    GHC.Read.$fReadWord11];

Foreign.C.Types.$fBoundedCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord7
                                       GHC.Word.$fBoundedWord64_$cmaxBound];

Foreign.C.Types.$fStorableCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord64_$calignment
                                                Foreign.Storable.$fStorableWord64_$calignment
                                                GHC.Storable.readWord64OffPtr1
                                                GHC.Storable.writeWord64OffPtr1
                                                Foreign.Storable.$fStorableWord18
                                                Foreign.Storable.$fStorableWord17
                                                Foreign.Storable.$fStorableWord15
                                                Foreign.Storable.$fStorableWord14];

Foreign.C.Types.$fEnumCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CULong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord64_$csucc
                                    GHC.Word.$fEnumWord64_$cpred
                                    GHC.Word.$fEnumWord64_$ctoEnum
                                    GHC.Word.$fEnumWord64_$cfromEnum
                                    GHC.Word.$fEnumWord64_$cenumFrom
                                    GHC.Word.$fEnumWord64_$cenumFromThen
                                    GHC.Word.$fEnumWord64_$cenumFromTo
                                    GHC.Word.$fEnumWord64_$cenumFromThenTo];

Foreign.C.Types.$fNumCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord64_$c+
                                  GHC.Word.$fNumWord64_$c-
                                  GHC.Word.$fNumWord64_$c*
                                  GHC.Word.$fNumWord64_$cnegate
                                  GHC.Word.$fNumWord64_$cabs
                                  GHC.Word.$fNumWord64_$csignum
                                  GHC.Word.$fNumWord64_$cfromInteger];

Foreign.C.Types.$fEqCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord64
                                     GHC.Word.neWord64];

Foreign.C.Types.$fOrdCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCULong
                                      GHC.Word.$fOrdWord64_$ccompare
                                      GHC.Word.ltWord64
                                      GHC.Word.leWord64
                                      GHC.Word.gtWord64
                                      GHC.Word.geWord64
                                      GHC.Word.$fOrdWord64_$cmax
                                      GHC.Word.$fOrdWord64_$cmin];

Foreign.C.Types.$fRealCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CULong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCULong
                                    Foreign.C.Types.$fOrdCULong
                                    GHC.Word.$fRealWord64_$ctoRational];

Foreign.C.Types.$fIntegralCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CULong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCULong
                                        Foreign.C.Types.$fEnumCULong
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cquotRem
                                        GHC.Word.$fIntegralWord64_$cdivMod
                                        GHC.Word.$fIntegralWord64_$ctoInteger];

Foreign.C.Types.$fBitsCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCULong
                                     GHC.Word.$fBitsWord64_$c.&.
                                     GHC.Word.$fBitsWord64_$c.|.
                                     GHC.Word.$fBitsWord64_$cxor
                                     GHC.Word.$fBitsWord64_$ccomplement
                                     GHC.Word.$fBitsWord64_$cshift
                                     GHC.Word.$fBitsWord64_$crotate
                                     GHC.Word.$fBitsWord7
                                     GHC.Word.$fBitsWord64_$cbit
                                     GHC.Word.$fBitsWord64_$csetBit
                                     GHC.Word.$fBitsWord64_$cclearBit
                                     GHC.Word.$fBitsWord64_$ccomplementBit
                                     GHC.Word.$fBitsWord64_$ctestBit
                                     GHC.Word.$fBitsWord64_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord64_$cfiniteBitSize
                                     GHC.Word.$fBitsWord64_$cisSigned
                                     GHC.Word.$fBitsWord64_$cshiftL
                                     GHC.Word.$fBitsWord64_$cunsafeShiftL
                                     GHC.Word.$fBitsWord64_$cshiftR
                                     GHC.Word.$fBitsWord64_$cunsafeShiftR
                                     GHC.Word.$fBitsWord64_$crotateL
                                     GHC.Word.$fBitsWord64_$crotateR
                                     GHC.Word.$fBitsWord64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCULong
                                           GHC.Word.$fBitsWord64_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord64_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fBoundedCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt64_$cminBound
                                       GHC.Int.$fBoundedInt64_$cmaxBound];

Foreign.C.Types.$fStorableCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCLong
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCLong
                                    Foreign.C.Types.$fOrdCLong
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fIntegralCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCLong
                                        Foreign.C.Types.$fEnumCLong
                                        GHC.Int.$fIntegralInt64_$cquot
                                        GHC.Int.$fIntegralInt64_$crem
                                        GHC.Int.$fIntegralInt64_$cdiv
                                        GHC.Int.$fIntegralInt64_$cmod
                                        GHC.Int.$fIntegralInt64_$cquotRem
                                        GHC.Int.$fIntegralInt64_$cdivMod
                                        GHC.Int.$fIntegralInt64_$ctoInteger];

Foreign.C.Types.$fBitsCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCLong
                                     GHC.Int.$fBitsInt64_$c.&.
                                     GHC.Int.$fBitsInt64_$c.|.
                                     GHC.Int.$fBitsInt64_$cxor
                                     GHC.Int.$fBitsInt64_$ccomplement
                                     GHC.Int.$fBitsInt64_$cshift
                                     GHC.Int.$fBitsInt64_$crotate
                                     GHC.Int.$fBitsInt10
                                     GHC.Int.$fBitsInt64_$cbit
                                     GHC.Int.$fBitsInt64_$csetBit
                                     GHC.Int.$fBitsInt64_$cclearBit
                                     GHC.Int.$fBitsInt64_$ccomplementBit
                                     GHC.Int.$fBitsInt64_$ctestBit
                                     GHC.Int.$fBitsInt64_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt64_$cfiniteBitSize
                                     GHC.Int.$fBitsInt64_$cisSigned
                                     GHC.Int.$fBitsInt64_$cshiftL
                                     GHC.Int.$fBitsInt64_$cunsafeShiftL
                                     GHC.Int.$fBitsInt64_$cshiftR
                                     GHC.Int.$fBitsInt64_$cunsafeShiftR
                                     GHC.Int.$fBitsInt64_$crotateL
                                     GHC.Int.$fBitsInt64_$crotateR
                                     GHC.Int.$fBitsInt64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCLong
                                           GHC.Int.$fBitsInt64_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord32_$cshowsPrec
                                    GHC.Word.$fShowWord32_$cshow
                                    GHC.Word.$fShowWord32_$cshowList];

Foreign.C.Types.$fReadCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord32_$creadsPrec
                                    GHC.Read.$fReadWord32_$creadList
                                    GHC.Read.$fReadWord10
                                    GHC.Read.$fReadWord7];

Foreign.C.Types.$fBoundedCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord32_$cminBound
                                       GHC.Word.$fBoundedWord32_$cmaxBound];

Foreign.C.Types.$fStorableCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord32_$calignment
                                                Foreign.Storable.$fStorableWord32_$calignment
                                                GHC.Storable.readWord32OffPtr1
                                                GHC.Storable.writeWord32OffPtr1
                                                Foreign.Storable.$fStorableWord13
                                                Foreign.Storable.$fStorableWord12
                                                Foreign.Storable.$fStorableWord11
                                                Foreign.Storable.$fStorableWord10];

Foreign.C.Types.$fEnumCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord32_$csucc
                                    GHC.Word.$fEnumWord32_$cpred
                                    GHC.Word.$fEnumWord32_$ctoEnum
                                    GHC.Word.$fEnumWord32_$cfromEnum
                                    GHC.Word.$fEnumWord32_$cenumFrom
                                    GHC.Word.$fEnumWord32_$cenumFromThen
                                    GHC.Word.$fEnumWord32_$cenumFromTo
                                    GHC.Word.$fEnumWord32_$cenumFromThenTo];

Foreign.C.Types.$fNumCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord32_$c+
                                  GHC.Word.$fNumWord32_$c-
                                  GHC.Word.$fNumWord32_$c*
                                  GHC.Word.$fNumWord32_$cnegate
                                  GHC.Word.$fNumWord32_$cabs
                                  GHC.Word.$fNumWord32_$csignum
                                  GHC.Word.$fNumWord32_$cfromInteger];

Foreign.C.Types.$fEqCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord32
                                     GHC.Word.neWord32];

Foreign.C.Types.$fOrdCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUInt
                                      GHC.Word.$fOrdWord32_$ccompare
                                      GHC.Word.ltWord32
                                      GHC.Word.leWord32
                                      GHC.Word.gtWord32
                                      GHC.Word.geWord32
                                      GHC.Word.$fOrdWord32_$cmax
                                      GHC.Word.$fOrdWord32_$cmin];

Foreign.C.Types.$fRealCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUInt
                                    Foreign.C.Types.$fOrdCUInt
                                    GHC.Word.$fRealWord32_$ctoRational];

Foreign.C.Types.$fIntegralCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CUInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCUInt
                                        Foreign.C.Types.$fEnumCUInt
                                        GHC.Word.$fIntegralWord32_$cquot
                                        GHC.Word.$fIntegralWord32_$crem
                                        GHC.Word.$fIntegralWord32_$cquot
                                        GHC.Word.$fIntegralWord32_$crem
                                        GHC.Word.$fIntegralWord32_$cquotRem
                                        GHC.Word.$fIntegralWord32_$cdivMod
                                        GHC.Word.$ctoInteger2];

Foreign.C.Types.$fBitsCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCUInt
                                     GHC.Word.$fBitsWord32_$c.&.
                                     GHC.Word.$fBitsWord32_$c.|.
                                     GHC.Word.$fBitsWord32_$cxor
                                     GHC.Word.$fBitsWord32_$ccomplement
                                     GHC.Word.$fBitsWord32_$cshift
                                     GHC.Word.$fBitsWord32_$crotate
                                     GHC.Word.$fBitsWord32_$cminBound
                                     GHC.Word.$fBitsWord32_$cbit
                                     GHC.Word.$fBitsWord32_$csetBit
                                     GHC.Word.$fBitsWord32_$cclearBit
                                     GHC.Word.$fBitsWord32_$ccomplementBit
                                     GHC.Word.$fBitsWord32_$ctestBit
                                     GHC.Word.$fBitsWord32_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord32_$cfiniteBitSize
                                     GHC.Word.$fBitsWord32_$cisSigned
                                     GHC.Word.$fBitsWord32_$cshiftL
                                     GHC.Word.$fBitsWord32_$cunsafeShiftL
                                     GHC.Word.$fBitsWord32_$cshiftR
                                     GHC.Word.$fBitsWord32_$cunsafeShiftR
                                     GHC.Word.$fBitsWord32_$crotateL
                                     GHC.Word.$fBitsWord32_$crotateR
                                     GHC.Word.$fBitsWord32_$cpopCount];

Foreign.C.Types.$fFiniteBitsCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCUInt
                                           GHC.Word.$fBitsWord32_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord32_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord32_$ccountTrailingZeros];

Foreign.C.Types.$fShowCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt32_$cshowsPrec
                                    GHC.Int.$fShowInt32_$cshow
                                    GHC.Int.$fShowInt32_$cshowList];

Foreign.C.Types.$fReadCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt32_$creadsPrec
                                    GHC.Int.$fReadInt32_$creadList
                                    GHC.Int.$fReadInt6
                                    GHC.Int.$fReadInt4];

Foreign.C.Types.$fBoundedCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt32_$cminBound
                                       GHC.Int.$fBoundedInt32_$cmaxBound];

Foreign.C.Types.$fStorableCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt32_$calignment
                                                Foreign.Storable.$fStorableInt32_$calignment
                                                GHC.Storable.readInt32OffPtr1
                                                GHC.Storable.writeInt32OffPtr1
                                                Foreign.Storable.$fStorableInt14
                                                Foreign.Storable.$fStorableInt13
                                                Foreign.Storable.$fStorableInt12
                                                Foreign.Storable.$fStorableInt11];

Foreign.C.Types.$fEnumCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt32_$csucc
                                    GHC.Int.$fEnumInt32_$cpred
                                    GHC.Int.$fEnumInt32_$ctoEnum
                                    GHC.Int.$fEnumInt32_$cfromEnum
                                    GHC.Int.$fEnumInt32_$cenumFrom
                                    GHC.Int.$fEnumInt32_$cenumFromThen
                                    GHC.Int.$fEnumInt32_$cenumFromTo
                                    GHC.Int.$fEnumInt32_$cenumFromThenTo];

Foreign.C.Types.$fNumCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt32_$c+
                                  GHC.Int.$fNumInt32_$c-
                                  GHC.Int.$fNumInt32_$c*
                                  GHC.Int.$fNumInt32_$cnegate
                                  GHC.Int.$fNumInt32_$cabs
                                  GHC.Int.$fNumInt32_$csignum
                                  GHC.Int.$fNumInt32_$cfromInteger];

Foreign.C.Types.$fEqCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt32 GHC.Int.neInt32];

Foreign.C.Types.$fOrdCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCInt
                                      GHC.Int.$fOrdInt32_$ccompare
                                      GHC.Int.ltInt32
                                      GHC.Int.leInt32
                                      GHC.Int.gtInt32
                                      GHC.Int.geInt32
                                      GHC.Int.$fOrdInt32_$cmax
                                      GHC.Int.$fOrdInt32_$cmin];

Foreign.C.Types.$fRealCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCInt
                                    Foreign.C.Types.$fOrdCInt
                                    GHC.Int.$fRealInt32_$ctoRational];

Foreign.C.Types.$fIntegralCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCInt
                                        Foreign.C.Types.$fEnumCInt
                                        GHC.Int.$fIntegralInt32_$cquot
                                        GHC.Int.$fIntegralInt32_$crem
                                        GHC.Int.$fIntegralInt32_$cdiv
                                        GHC.Int.$fIntegralInt32_$cmod
                                        GHC.Int.$fIntegralInt32_$cquotRem
                                        GHC.Int.$fIntegralInt32_$cdivMod
                                        GHC.Int.$fIntegralInt32_$ctoInteger];

Foreign.C.Types.$fBitsCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCInt
                                     GHC.Int.$fBitsInt32_$c.&.
                                     GHC.Int.$fBitsInt32_$c.|.
                                     GHC.Int.$fBitsInt32_$cxor
                                     GHC.Int.$fBitsInt32_$ccomplement
                                     GHC.Int.$fBitsInt32_$cshift
                                     GHC.Int.$fBitsInt32_$crotate
                                     GHC.Int.$fBitsInt6
                                     GHC.Int.$fBitsInt32_$cbit
                                     GHC.Int.$fBitsInt32_$csetBit
                                     GHC.Int.$fBitsInt32_$cclearBit
                                     GHC.Int.$fBitsInt32_$ccomplementBit
                                     GHC.Int.$fBitsInt32_$ctestBit
                                     GHC.Int.$fBitsInt32_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt32_$cfiniteBitSize
                                     GHC.Int.$fBitsInt32_$cisSigned
                                     GHC.Int.$fBitsInt32_$cshiftL
                                     GHC.Int.$fBitsInt32_$cunsafeShiftL
                                     GHC.Int.$fBitsInt32_$cshiftR
                                     GHC.Int.$fBitsInt32_$cunsafeShiftR
                                     GHC.Int.$fBitsInt32_$crotateL
                                     GHC.Int.$fBitsInt32_$crotateR
                                     GHC.Int.$fBitsInt32_$cpopCount];

Foreign.C.Types.$fFiniteBitsCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCInt
                                           GHC.Int.$fBitsInt32_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros];

Foreign.C.Types.$fShowCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord16_$cshowsPrec
                                    GHC.Word.$fShowWord16_$cshow
                                    GHC.Word.$fShowWord16_$cshowList];

Foreign.C.Types.$fReadCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord16_$creadsPrec
                                    GHC.Read.$fReadWord16_$creadList
                                    GHC.Read.$fReadWord6
                                    GHC.Read.$fReadWord4];

Foreign.C.Types.$fBoundedCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord16_$cminBound
                                       GHC.Word.$fBoundedWord16_$cmaxBound];

Foreign.C.Types.$fStorableCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord16_$calignment
                                                Foreign.Storable.$fStorableWord16_$calignment
                                                GHC.Storable.readWord16OffPtr1
                                                GHC.Storable.writeWord16OffPtr1
                                                Foreign.Storable.$fStorableWord9
                                                Foreign.Storable.$fStorableWord7
                                                Foreign.Storable.$fStorableWord6
                                                Foreign.Storable.$fStorableWord5];

Foreign.C.Types.$fEnumCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord16_$csucc
                                    GHC.Word.$fEnumWord16_$cpred
                                    GHC.Word.$fEnumWord16_$ctoEnum
                                    GHC.Word.$fEnumWord16_$cfromEnum
                                    GHC.Word.$fEnumWord16_$cenumFrom
                                    GHC.Word.$fEnumWord16_$cenumFromThen
                                    GHC.Word.$fEnumWord16_$cenumFromTo
                                    GHC.Word.$fEnumWord16_$cenumFromThenTo];

Foreign.C.Types.$fNumCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord16_$c+
                                  GHC.Word.$fNumWord16_$c-
                                  GHC.Word.$fNumWord16_$c*
                                  GHC.Word.$fNumWord16_$cnegate
                                  GHC.Word.$fNumWord16_$cabs
                                  GHC.Word.$fNumWord16_$csignum
                                  GHC.Word.$fNumWord16_$cfromInteger];

Foreign.C.Types.$fEqCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord16
                                     GHC.Word.neWord16];

Foreign.C.Types.$fOrdCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUShort
                                      GHC.Word.$fOrdWord16_$ccompare
                                      GHC.Word.ltWord16
                                      GHC.Word.leWord16
                                      GHC.Word.gtWord16
                                      GHC.Word.geWord16
                                      GHC.Word.$fOrdWord16_$cmax
                                      GHC.Word.$fOrdWord16_$cmin];

Foreign.C.Types.$fRealCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUShort
                                    Foreign.C.Types.$fOrdCUShort
                                    GHC.Word.$fRealWord16_$ctoRational];

Foreign.C.Types.$fIntegralCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CUShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCUShort
                                        Foreign.C.Types.$fEnumCUShort
                                        GHC.Word.$fIntegralWord16_$cquot
                                        GHC.Word.$fIntegralWord16_$crem
                                        GHC.Word.$fIntegralWord16_$cquot
                                        GHC.Word.$fIntegralWord16_$crem
                                        GHC.Word.$fIntegralWord16_$cquotRem
                                        GHC.Word.$fIntegralWord16_$cdivMod
                                        GHC.Word.$ctoInteger1];

Foreign.C.Types.$fBitsCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCUShort
                                     GHC.Word.$fBitsWord16_$c.&.
                                     GHC.Word.$fBitsWord16_$c.|.
                                     GHC.Word.$fBitsWord16_$cxor
                                     GHC.Word.$fBitsWord16_$ccomplement
                                     GHC.Word.$fBitsWord16_$cshift
                                     GHC.Word.$fBitsWord16_$crotate
                                     GHC.Word.$fBitsWord16_$cminBound
                                     GHC.Word.$fBitsWord16_$cbit
                                     GHC.Word.$fBitsWord16_$csetBit
                                     GHC.Word.$fBitsWord16_$cclearBit
                                     GHC.Word.$fBitsWord16_$ccomplementBit
                                     GHC.Word.$fBitsWord16_$ctestBit
                                     GHC.Word.$fBitsWord16_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord16_$cfiniteBitSize
                                     GHC.Word.$fBitsWord16_$cisSigned
                                     GHC.Word.$fBitsWord16_$cshiftL
                                     GHC.Word.$fBitsWord16_$cunsafeShiftL
                                     GHC.Word.$fBitsWord16_$cshiftR
                                     GHC.Word.$fBitsWord16_$cunsafeShiftR
                                     GHC.Word.$fBitsWord16_$crotateL
                                     GHC.Word.$fBitsWord16_$crotateR
                                     GHC.Word.$fBitsWord16_$cpopCount];

Foreign.C.Types.$fFiniteBitsCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCUShort
                                           GHC.Word.$fBitsWord16_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord16_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord16_$ccountTrailingZeros];

Foreign.C.Types.$fShowCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt16_$cshowsPrec
                                    GHC.Int.$fShowInt16_$cshow
                                    GHC.Int.$fShowInt16_$cshowList];

Foreign.C.Types.$fReadCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt16_$creadsPrec
                                    GHC.Int.$fReadInt16_$creadList
                                    GHC.Int.$fReadInt3
                                    GHC.Int.$fReadInt1];

Foreign.C.Types.$fBoundedCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt16_$cminBound
                                       GHC.Int.$fBoundedInt16_$cmaxBound];

Foreign.C.Types.$fStorableCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt16_$calignment
                                                Foreign.Storable.$fStorableInt16_$calignment
                                                GHC.Storable.readInt16OffPtr1
                                                GHC.Storable.writeInt16OffPtr1
                                                Foreign.Storable.$fStorableInt9
                                                Foreign.Storable.$fStorableInt7
                                                Foreign.Storable.$fStorableInt6
                                                Foreign.Storable.$fStorableInt5];

Foreign.C.Types.$fEnumCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt16_$csucc
                                    GHC.Int.$fEnumInt16_$cpred
                                    GHC.Int.$fEnumInt16_$ctoEnum
                                    GHC.Int.$fEnumInt16_$cfromEnum
                                    GHC.Int.$fEnumInt16_$cenumFrom
                                    GHC.Int.$fEnumInt16_$cenumFromThen
                                    GHC.Int.$fEnumInt16_$cenumFromTo
                                    GHC.Int.$fEnumInt16_$cenumFromThenTo];

Foreign.C.Types.$fNumCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt16_$c+
                                  GHC.Int.$fNumInt16_$c-
                                  GHC.Int.$fNumInt16_$c*
                                  GHC.Int.$fNumInt16_$cnegate
                                  GHC.Int.$fNumInt16_$cabs
                                  GHC.Int.$fNumInt16_$csignum
                                  GHC.Int.$fNumInt16_$cfromInteger];

Foreign.C.Types.$fEqCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt16 GHC.Int.neInt16];

Foreign.C.Types.$fOrdCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCShort
                                      GHC.Int.$fOrdInt16_$ccompare
                                      GHC.Int.ltInt16
                                      GHC.Int.leInt16
                                      GHC.Int.gtInt16
                                      GHC.Int.geInt16
                                      GHC.Int.$fOrdInt16_$cmax
                                      GHC.Int.$fOrdInt16_$cmin];

Foreign.C.Types.$fRealCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCShort
                                    Foreign.C.Types.$fOrdCShort
                                    GHC.Int.$fRealInt16_$ctoRational];

Foreign.C.Types.$fIntegralCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCShort
                                        Foreign.C.Types.$fEnumCShort
                                        GHC.Int.$fIntegralInt16_$cquot
                                        GHC.Int.$fIntegralInt16_$crem
                                        GHC.Int.$fIntegralInt16_$cdiv
                                        GHC.Int.$fIntegralInt16_$cmod
                                        GHC.Int.$fIntegralInt16_$cquotRem
                                        GHC.Int.$fIntegralInt16_$cdivMod
                                        GHC.Int.$fIntegralInt16_$ctoInteger];

Foreign.C.Types.$fBitsCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCShort
                                     GHC.Int.$fBitsInt16_$c.&.
                                     GHC.Int.$fBitsInt16_$c.|.
                                     GHC.Int.$fBitsInt16_$cxor
                                     GHC.Int.$fBitsInt16_$ccomplement
                                     GHC.Int.$fBitsInt16_$cshift
                                     GHC.Int.$fBitsInt16_$crotate
                                     GHC.Int.$fBitsInt3
                                     GHC.Int.$fBitsInt16_$cbit
                                     GHC.Int.$fBitsInt16_$csetBit
                                     GHC.Int.$fBitsInt16_$cclearBit
                                     GHC.Int.$fBitsInt16_$ccomplementBit
                                     GHC.Int.$fBitsInt16_$ctestBit
                                     GHC.Int.$fBitsInt16_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt16_$cfiniteBitSize
                                     GHC.Int.$fBitsInt16_$cisSigned
                                     GHC.Int.$fBitsInt16_$cshiftL
                                     GHC.Int.$fBitsInt16_$cunsafeShiftL
                                     GHC.Int.$fBitsInt16_$cshiftR
                                     GHC.Int.$fBitsInt16_$cunsafeShiftR
                                     GHC.Int.$fBitsInt16_$crotateL
                                     GHC.Int.$fBitsInt16_$crotateR
                                     GHC.Int.$fBitsInt16_$cpopCount];

Foreign.C.Types.$fFiniteBitsCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCShort
                                           GHC.Int.$fBitsInt16_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros];

Foreign.C.Types.$fShowCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord8_$cshowsPrec
                                    GHC.Word.$fShowWord8_$cshow
                                    GHC.Word.$fShowWord8_$cshowList];

Foreign.C.Types.$fReadCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord8_$creadsPrec
                                    GHC.Read.$fReadWord8_$creadList
                                    GHC.Read.$fReadWord17
                                    GHC.Read.$fReadWord14];

Foreign.C.Types.$fBoundedCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord8_$cminBound
                                       GHC.Word.$fBoundedWord8_$cmaxBound];

Foreign.C.Types.$fStorableCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord8_$calignment
                                                Foreign.Storable.$fStorableWord8_$calignment
                                                GHC.Storable.readWord8OffPtr1
                                                GHC.Storable.writeWord8OffPtr1
                                                Foreign.Storable.$fStorableWord22
                                                Foreign.Storable.$fStorableWord21
                                                Foreign.Storable.$fStorableWord20
                                                Foreign.Storable.$fStorableWord19];

Foreign.C.Types.$fEnumCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord8_$csucc
                                    GHC.Word.$fEnumWord8_$cpred
                                    GHC.Word.$fEnumWord8_$ctoEnum
                                    GHC.Word.$fEnumWord8_$cfromEnum
                                    GHC.Word.$fEnumWord8_$cenumFrom
                                    GHC.Word.$fEnumWord8_$cenumFromThen
                                    GHC.Word.$fEnumWord8_$cenumFromTo
                                    GHC.Word.$fEnumWord8_$cenumFromThenTo];

Foreign.C.Types.$fNumCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord8_$c+
                                  GHC.Word.$fNumWord8_$c-
                                  GHC.Word.$fNumWord8_$c*
                                  GHC.Word.$fNumWord8_$cnegate
                                  GHC.Word.$fNumWord8_$cabs
                                  GHC.Word.$fNumWord8_$csignum
                                  GHC.Word.$fNumWord8_$cfromInteger];

Foreign.C.Types.$fEqCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord8
                                     GHC.Word.neWord8];

Foreign.C.Types.$fOrdCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUChar
                                      GHC.Word.$fOrdWord8_$ccompare
                                      GHC.Word.ltWord8
                                      GHC.Word.leWord8
                                      GHC.Word.gtWord8
                                      GHC.Word.geWord8
                                      GHC.Word.$fOrdWord8_$cmax
                                      GHC.Word.$fOrdWord8_$cmin];

Foreign.C.Types.$fRealCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUChar
                                    Foreign.C.Types.$fOrdCUChar
                                    GHC.Word.$fRealWord8_$ctoRational];

Foreign.C.Types.$fIntegralCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CUChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCUChar
                                        Foreign.C.Types.$fEnumCUChar
                                        GHC.Word.$fIntegralWord8_$cquot
                                        GHC.Word.$fIntegralWord8_$crem
                                        GHC.Word.$fIntegralWord8_$cquot
                                        GHC.Word.$fIntegralWord8_$crem
                                        GHC.Word.$fIntegralWord8_$cquotRem
                                        GHC.Word.$fIntegralWord8_$cdivMod
                                        GHC.Word.$ctoInteger];

Foreign.C.Types.$fBitsCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCUChar
                                     GHC.Word.$fBitsWord8_$c.&.
                                     GHC.Word.$fBitsWord8_$c.|.
                                     GHC.Word.$fBitsWord8_$cxor
                                     GHC.Word.$fBitsWord8_$ccomplement
                                     GHC.Word.$fBitsWord8_$cshift
                                     GHC.Word.$fBitsWord8_$crotate
                                     GHC.Word.$fBitsWord8_$cminBound
                                     GHC.Word.$fBitsWord8_$cbit
                                     GHC.Word.$fBitsWord8_$csetBit
                                     GHC.Word.$fBitsWord8_$cclearBit
                                     GHC.Word.$fBitsWord8_$ccomplementBit
                                     GHC.Word.$fBitsWord8_$ctestBit
                                     GHC.Word.$fBitsWord8_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord8_$cfiniteBitSize
                                     GHC.Word.$fBitsWord8_$cisSigned
                                     GHC.Word.$fBitsWord8_$cshiftL
                                     GHC.Word.$fBitsWord8_$cunsafeShiftL
                                     GHC.Word.$fBitsWord8_$cshiftR
                                     GHC.Word.$fBitsWord8_$cunsafeShiftR
                                     GHC.Word.$fBitsWord8_$crotateL
                                     GHC.Word.$fBitsWord8_$crotateR
                                     GHC.Word.$fBitsWord8_$cpopCount];

Foreign.C.Types.$fFiniteBitsCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCUChar
                                           GHC.Word.$fBitsWord8_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord8_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord8_$ccountTrailingZeros];

Foreign.C.Types.$fShowCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt8_$cshowsPrec
                                    GHC.Int.$fShowInt8_$cshow
                                    GHC.Int.$fShowInt8_$cshowList];

Foreign.C.Types.$fReadCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CSChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt8_$creadsPrec
                                    GHC.Int.$fReadInt8_$creadList
                                    GHC.Int.$fReadInt13
                                    GHC.Int.$fReadInt11];

Foreign.C.Types.$fBoundedCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt8_$cminBound
                                       GHC.Int.$fBoundedInt8_$cmaxBound];

Foreign.C.Types.$fStorableCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt8_$calignment
                                                Foreign.Storable.$fStorableInt8_$calignment
                                                GHC.Storable.readInt8OffPtr1
                                                GHC.Storable.writeInt8OffPtr1
                                                Foreign.Storable.$fStorableInt23
                                                Foreign.Storable.$fStorableInt22
                                                Foreign.Storable.$fStorableInt21
                                                Foreign.Storable.$fStorableInt20];

Foreign.C.Types.$fEnumCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CSChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt8_$csucc
                                    GHC.Int.$fEnumInt8_$cpred
                                    GHC.Int.$fEnumInt8_$ctoEnum
                                    GHC.Int.$fEnumInt8_$cfromEnum
                                    GHC.Int.$fEnumInt8_$cenumFrom
                                    GHC.Int.$fEnumInt8_$cenumFromThen
                                    GHC.Int.$fEnumInt8_$cenumFromTo
                                    GHC.Int.$fEnumInt8_$cenumFromThenTo];

Foreign.C.Types.$fNumCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt8_$c+
                                  GHC.Int.$fNumInt8_$c-
                                  GHC.Int.$fNumInt8_$c*
                                  GHC.Int.$fNumInt8_$cnegate
                                  GHC.Int.$fNumInt8_$cabs
                                  GHC.Int.$fNumInt8_$csignum
                                  GHC.Int.$fNumInt8_$cfromInteger];

Foreign.C.Types.$fEqCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt8 GHC.Int.neInt8];

Foreign.C.Types.$fOrdCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCSChar
                                      GHC.Int.$fOrdInt8_$ccompare
                                      GHC.Int.ltInt8
                                      GHC.Int.leInt8
                                      GHC.Int.gtInt8
                                      GHC.Int.geInt8
                                      GHC.Int.$fOrdInt8_$cmax
                                      GHC.Int.$fOrdInt8_$cmin];

Foreign.C.Types.$fRealCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CSChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCSChar
                                    Foreign.C.Types.$fOrdCSChar
                                    GHC.Int.$fRealInt8_$ctoRational];

Foreign.C.Types.$fIntegralCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CSChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCSChar
                                        Foreign.C.Types.$fEnumCSChar
                                        GHC.Int.$fIntegralInt8_$cquot
                                        GHC.Int.$fIntegralInt8_$crem
                                        GHC.Int.$fIntegralInt8_$cdiv
                                        GHC.Int.$fIntegralInt8_$cmod
                                        GHC.Int.$fIntegralInt8_$cquotRem
                                        GHC.Int.$fIntegralInt8_$cdivMod
                                        GHC.Int.$fIntegralInt8_$ctoInteger];

Foreign.C.Types.$fBitsCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCSChar
                                     GHC.Int.$fBitsInt8_$c.&.
                                     GHC.Int.$fBitsInt8_$c.|.
                                     GHC.Int.$fBitsInt8_$cxor
                                     GHC.Int.$fBitsInt8_$ccomplement
                                     GHC.Int.$fBitsInt8_$cshift
                                     GHC.Int.$fBitsInt8_$crotate
                                     GHC.Int.$fBitsInt13
                                     GHC.Int.$fBitsInt8_$cbit
                                     GHC.Int.$fBitsInt8_$csetBit
                                     GHC.Int.$fBitsInt8_$cclearBit
                                     GHC.Int.$fBitsInt8_$ccomplementBit
                                     GHC.Int.$fBitsInt8_$ctestBit
                                     GHC.Int.$fBitsInt8_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt8_$cfiniteBitSize
                                     GHC.Int.$fBitsInt8_$cisSigned
                                     GHC.Int.$fBitsInt8_$cshiftL
                                     GHC.Int.$fBitsInt8_$cunsafeShiftL
                                     GHC.Int.$fBitsInt8_$cshiftR
                                     GHC.Int.$fBitsInt8_$cunsafeShiftR
                                     GHC.Int.$fBitsInt8_$crotateL
                                     GHC.Int.$fBitsInt8_$crotateR
                                     GHC.Int.$fBitsInt8_$cpopCount];

Foreign.C.Types.$fFiniteBitsCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCSChar
                                           GHC.Int.$fBitsInt8_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros];

Foreign.C.Types.$fShowCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt8_$cshowsPrec
                                    GHC.Int.$fShowInt8_$cshow
                                    GHC.Int.$fShowInt8_$cshowList];

Foreign.C.Types.$fReadCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt8_$creadsPrec
                                    GHC.Int.$fReadInt8_$creadList
                                    GHC.Int.$fReadInt13
                                    GHC.Int.$fReadInt11];

Foreign.C.Types.$fBoundedCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt8_$cminBound
                                       GHC.Int.$fBoundedInt8_$cmaxBound];

Foreign.C.Types.$fStorableCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt8_$calignment
                                                Foreign.Storable.$fStorableInt8_$calignment
                                                GHC.Storable.readInt8OffPtr1
                                                GHC.Storable.writeInt8OffPtr1
                                                Foreign.Storable.$fStorableInt23
                                                Foreign.Storable.$fStorableInt22
                                                Foreign.Storable.$fStorableInt21
                                                Foreign.Storable.$fStorableInt20];

Foreign.C.Types.$fEnumCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt8_$csucc
                                    GHC.Int.$fEnumInt8_$cpred
                                    GHC.Int.$fEnumInt8_$ctoEnum
                                    GHC.Int.$fEnumInt8_$cfromEnum
                                    GHC.Int.$fEnumInt8_$cenumFrom
                                    GHC.Int.$fEnumInt8_$cenumFromThen
                                    GHC.Int.$fEnumInt8_$cenumFromTo
                                    GHC.Int.$fEnumInt8_$cenumFromThenTo];

Foreign.C.Types.$fNumCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt8_$c+
                                  GHC.Int.$fNumInt8_$c-
                                  GHC.Int.$fNumInt8_$c*
                                  GHC.Int.$fNumInt8_$cnegate
                                  GHC.Int.$fNumInt8_$cabs
                                  GHC.Int.$fNumInt8_$csignum
                                  GHC.Int.$fNumInt8_$cfromInteger];

Foreign.C.Types.$fEqCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt8 GHC.Int.neInt8];

Foreign.C.Types.$fOrdCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCChar
                                      GHC.Int.$fOrdInt8_$ccompare
                                      GHC.Int.ltInt8
                                      GHC.Int.leInt8
                                      GHC.Int.gtInt8
                                      GHC.Int.geInt8
                                      GHC.Int.$fOrdInt8_$cmax
                                      GHC.Int.$fOrdInt8_$cmin];

Foreign.C.Types.$fRealCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCChar
                                    Foreign.C.Types.$fOrdCChar
                                    GHC.Int.$fRealInt8_$ctoRational];

Foreign.C.Types.$fIntegralCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCChar
                                        Foreign.C.Types.$fEnumCChar
                                        GHC.Int.$fIntegralInt8_$cquot
                                        GHC.Int.$fIntegralInt8_$crem
                                        GHC.Int.$fIntegralInt8_$cdiv
                                        GHC.Int.$fIntegralInt8_$cmod
                                        GHC.Int.$fIntegralInt8_$cquotRem
                                        GHC.Int.$fIntegralInt8_$cdivMod
                                        GHC.Int.$fIntegralInt8_$ctoInteger];

Foreign.C.Types.$fBitsCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCChar
                                     GHC.Int.$fBitsInt8_$c.&.
                                     GHC.Int.$fBitsInt8_$c.|.
                                     GHC.Int.$fBitsInt8_$cxor
                                     GHC.Int.$fBitsInt8_$ccomplement
                                     GHC.Int.$fBitsInt8_$cshift
                                     GHC.Int.$fBitsInt8_$crotate
                                     GHC.Int.$fBitsInt13
                                     GHC.Int.$fBitsInt8_$cbit
                                     GHC.Int.$fBitsInt8_$csetBit
                                     GHC.Int.$fBitsInt8_$cclearBit
                                     GHC.Int.$fBitsInt8_$ccomplementBit
                                     GHC.Int.$fBitsInt8_$ctestBit
                                     GHC.Int.$fBitsInt8_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt8_$cfiniteBitSize
                                     GHC.Int.$fBitsInt8_$cisSigned
                                     GHC.Int.$fBitsInt8_$cshiftL
                                     GHC.Int.$fBitsInt8_$cunsafeShiftL
                                     GHC.Int.$fBitsInt8_$cshiftR
                                     GHC.Int.$fBitsInt8_$cunsafeShiftR
                                     GHC.Int.$fBitsInt8_$crotateL
                                     GHC.Int.$fBitsInt8_$crotateR
                                     GHC.Int.$fBitsInt8_$cpopCount];

Foreign.C.Types.$fFiniteBitsCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCChar
                                           GHC.Int.$fBitsInt8_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros];

Foreign.C.Types.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Foreign.C.Types.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$trModule4];

Foreign.C.Types.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.C.Types"#;

Foreign.C.Types.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$trModule2];

Foreign.C.Types.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.C.Types.$trModule3
                                     Foreign.C.Types.$trModule1];

$krep_r54rc :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Int.$tcInt8
                                              GHC.Types.[]];

$krep1_r54rd :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Int.$tcInt16
                                              GHC.Types.[]];

$krep2_r54re :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord16
                                              GHC.Types.[]];

$krep3_r54rf :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord8
                                              GHC.Types.[]];

$krep4_r54rg :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcFloat
                                              GHC.Types.[]];

$krep5_r54rh :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcDouble
                                              GHC.Types.[]];

$krep6_r54ri :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Int.$tcInt32
                                              GHC.Types.[]];

$krep7_r54rj :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord32
                                              GHC.Types.[]];

$krep8_r54rk :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Int.$tcInt64
                                              GHC.Types.[]];

$krep9_r54rl :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord64
                                              GHC.Types.[]];

Foreign.C.Types.$tcCChar2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CChar"#;

Foreign.C.Types.$tcCChar1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCChar2];

Foreign.C.Types.$tcCChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2396474507734313709##
                                    6682082218532013927##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCChar1
                                    0#
                                    GHC.Types.krep$*];

$krep10_r54rm :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCChar
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CChar1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r54rc $krep10_r54rm];

Foreign.C.Types.$tc'CChar3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CChar"#;

Foreign.C.Types.$tc'CChar2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CChar3];

Foreign.C.Types.$tc'CChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16530466139966006137##
                                    10909368544422599906##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CChar2
                                    0#
                                    Foreign.C.Types.$tc'CChar1];

Foreign.C.Types.$tcCSChar2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CSChar"#;

Foreign.C.Types.$tcCSChar1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCSChar2];

Foreign.C.Types.$tcCSChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [670014241423056801##
                                    13143642922997006659##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCSChar1
                                    0#
                                    GHC.Types.krep$*];

$krep11_r54rn :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCSChar
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CSChar1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r54rc $krep11_r54rn];

Foreign.C.Types.$tc'CSChar3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CSChar"#;

Foreign.C.Types.$tc'CSChar2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CSChar3];

Foreign.C.Types.$tc'CSChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12967293744565543744##
                                    16172465149069937779##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CSChar2
                                    0#
                                    Foreign.C.Types.$tc'CSChar1];

Foreign.C.Types.$tcCUChar2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUChar"#;

Foreign.C.Types.$tcCUChar1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUChar2];

Foreign.C.Types.$tcCUChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8453544638672177657##
                                    4088140939900538118##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUChar1
                                    0#
                                    GHC.Types.krep$*];

$krep12_r54ro :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUChar
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUChar1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r54rf $krep12_r54ro];

Foreign.C.Types.$tc'CUChar3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUChar"#;

Foreign.C.Types.$tc'CUChar2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUChar3];

Foreign.C.Types.$tc'CUChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10663029171348202549##
                                    3183188510825835811##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUChar2
                                    0#
                                    Foreign.C.Types.$tc'CUChar1];

Foreign.C.Types.$tcCShort2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CShort"#;

Foreign.C.Types.$tcCShort1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCShort2];

Foreign.C.Types.$tcCShort :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14914560985572859509##
                                    5456450767128082830##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCShort1
                                    0#
                                    GHC.Types.krep$*];

$krep13_r54rp :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCShort
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CShort1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_r54rd $krep13_r54rp];

Foreign.C.Types.$tc'CShort3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CShort"#;

Foreign.C.Types.$tc'CShort2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CShort3];

Foreign.C.Types.$tc'CShort :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8012790609237483390##
                                    5585194063474609654##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CShort2
                                    0#
                                    Foreign.C.Types.$tc'CShort1];

Foreign.C.Types.$tcCUShort2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUShort"#;

Foreign.C.Types.$tcCUShort1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUShort2];

Foreign.C.Types.$tcCUShort :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8017488325625726968##
                                    17560577666502845853##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUShort1
                                    0#
                                    GHC.Types.krep$*];

$krep14_r54rq :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUShort
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUShort1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r54re $krep14_r54rq];

Foreign.C.Types.$tc'CUShort3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUShort"#;

Foreign.C.Types.$tc'CUShort2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUShort3];

Foreign.C.Types.$tc'CUShort :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [230481143628903571##
                                    69801006601599105##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUShort2
                                    0#
                                    Foreign.C.Types.$tc'CUShort1];

Foreign.C.Types.$tcCInt2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CInt"#;

Foreign.C.Types.$tcCInt1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCInt2];

Foreign.C.Types.$tcCInt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12436196710956858214##
                                    2085191951279969833##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCInt1
                                    0#
                                    GHC.Types.krep$*];

$krep15_r54rr :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCInt
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CInt1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep6_r54ri $krep15_r54rr];

Foreign.C.Types.$tc'CInt3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CInt"#;

Foreign.C.Types.$tc'CInt2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CInt3];

Foreign.C.Types.$tc'CInt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [1120313203669928333##
                                    2109434438009157121##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CInt2
                                    0#
                                    Foreign.C.Types.$tc'CInt1];

Foreign.C.Types.$tcCUInt2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUInt"#;

Foreign.C.Types.$tcCUInt1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUInt2];

Foreign.C.Types.$tcCUInt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14846027554880959849##
                                    1568033666229718172##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUInt1
                                    0#
                                    GHC.Types.krep$*];

$krep16_r54rs :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUInt
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUInt1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep7_r54rj $krep16_r54rs];

Foreign.C.Types.$tc'CUInt3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUInt"#;

Foreign.C.Types.$tc'CUInt2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUInt3];

Foreign.C.Types.$tc'CUInt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5056806206685987871##
                                    16269849959994571619##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUInt2
                                    0#
                                    Foreign.C.Types.$tc'CUInt1];

Foreign.C.Types.$tcCLong2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CLong"#;

Foreign.C.Types.$tcCLong1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCLong2];

Foreign.C.Types.$tcCLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10646618100418836143##
                                    9243001812621971743##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCLong1
                                    0#
                                    GHC.Types.krep$*];

$krep17_r54rt :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCLong
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CLong1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep17_r54rt];

Foreign.C.Types.$tc'CLong3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CLong"#;

Foreign.C.Types.$tc'CLong2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CLong3];

Foreign.C.Types.$tc'CLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3628484187667118205##
                                    18251486164209701606##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CLong2
                                    0#
                                    Foreign.C.Types.$tc'CLong1];

Foreign.C.Types.$tcCULong2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CULong"#;

Foreign.C.Types.$tcCULong1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCULong2];

Foreign.C.Types.$tcCULong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13895283310731510483##
                                    3072096496662073086##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCULong1
                                    0#
                                    GHC.Types.krep$*];

$krep18_r54ru :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCULong
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CULong1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r54rl $krep18_r54ru];

Foreign.C.Types.$tc'CULong3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CULong"#;

Foreign.C.Types.$tc'CULong2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CULong3];

Foreign.C.Types.$tc'CULong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15519685101152487835##
                                    12004583885240283077##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CULong2
                                    0#
                                    Foreign.C.Types.$tc'CULong1];

Foreign.C.Types.$tcCLLong2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CLLong"#;

Foreign.C.Types.$tcCLLong1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCLLong2];

Foreign.C.Types.$tcCLLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14244409577131416195##
                                    5952802457093262910##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCLLong1
                                    0#
                                    GHC.Types.krep$*];

$krep19_r54rv :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCLLong
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CLLong1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep19_r54rv];

Foreign.C.Types.$tc'CLLong3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CLLong"#;

Foreign.C.Types.$tc'CLLong2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CLLong3];

Foreign.C.Types.$tc'CLLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5567960549599469613##
                                    3143535471112770491##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CLLong2
                                    0#
                                    Foreign.C.Types.$tc'CLLong1];

Foreign.C.Types.$tcCULLong2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CULLong"#;

Foreign.C.Types.$tcCULLong1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCULLong2];

Foreign.C.Types.$tcCULLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12322165229137886614##
                                    18269851590527847329##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCULLong1
                                    0#
                                    GHC.Types.krep$*];

$krep20_r54rw :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCULLong
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CULLong1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r54rl $krep20_r54rw];

Foreign.C.Types.$tc'CULLong3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CULLong"#;

Foreign.C.Types.$tc'CULLong2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CULLong3];

Foreign.C.Types.$tc'CULLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3146513334079263607##
                                    15997303439394869846##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CULLong2
                                    0#
                                    Foreign.C.Types.$tc'CULLong1];

Foreign.C.Types.$tcCBool2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CBool"#;

Foreign.C.Types.$tcCBool1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCBool2];

Foreign.C.Types.$tcCBool :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2279337507396481328##
                                    13354832971938562972##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCBool1
                                    0#
                                    GHC.Types.krep$*];

$krep21_r54rx :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCBool
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CBool1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r54rf $krep21_r54rx];

Foreign.C.Types.$tc'CBool3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CBool"#;

Foreign.C.Types.$tc'CBool2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CBool3];

Foreign.C.Types.$tc'CBool :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7877573716786595125##
                                    10108068606237611138##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CBool2
                                    0#
                                    Foreign.C.Types.$tc'CBool1];

Foreign.C.Types.$tcCFloat2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CFloat"#;

Foreign.C.Types.$tcCFloat1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCFloat2];

Foreign.C.Types.$tcCFloat :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7535293774037760901##
                                    15755754912293552836##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCFloat1
                                    0#
                                    GHC.Types.krep$*];

$krep22_r54ry :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCFloat
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CFloat1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_r54rg $krep22_r54ry];

Foreign.C.Types.$tc'CFloat3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CFloat"#;

Foreign.C.Types.$tc'CFloat2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CFloat3];

Foreign.C.Types.$tc'CFloat :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14616473864857291281##
                                    17808868477168782076##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CFloat2
                                    0#
                                    Foreign.C.Types.$tc'CFloat1];

Foreign.C.Types.$tcCDouble2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CDouble"#;

Foreign.C.Types.$tcCDouble1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCDouble2];

Foreign.C.Types.$tcCDouble :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6818159078703101232##
                                    2532424603516558210##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCDouble1
                                    0#
                                    GHC.Types.krep$*];

$krep23_r54rz :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCDouble
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CDouble1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep5_r54rh $krep23_r54rz];

Foreign.C.Types.$tc'CDouble3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CDouble"#;

Foreign.C.Types.$tc'CDouble2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CDouble3];

Foreign.C.Types.$tc'CDouble :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17825589113792566821##
                                    2117840440117442278##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CDouble2
                                    0#
                                    Foreign.C.Types.$tc'CDouble1];

Foreign.C.Types.$tcCPtrdiff2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CPtrdiff"#;

Foreign.C.Types.$tcCPtrdiff1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCPtrdiff2];

Foreign.C.Types.$tcCPtrdiff :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17214415904810395203##
                                    17157228803030510849##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCPtrdiff1
                                    0#
                                    GHC.Types.krep$*];

$krep24_r54rA :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCPtrdiff
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CPtrdiff1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep24_r54rA];

Foreign.C.Types.$tc'CPtrdiff3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CPtrdiff"#;

Foreign.C.Types.$tc'CPtrdiff2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CPtrdiff3];

Foreign.C.Types.$tc'CPtrdiff :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11471205784925482390##
                                    4232446785647106570##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CPtrdiff2
                                    0#
                                    Foreign.C.Types.$tc'CPtrdiff1];

Foreign.C.Types.$tcCSize2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CSize"#;

Foreign.C.Types.$tcCSize1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCSize2];

Foreign.C.Types.$tcCSize :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13349225497583392568##
                                    2637756187933719306##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCSize1
                                    0#
                                    GHC.Types.krep$*];

$krep25_r54rB :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCSize
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CSize1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r54rl $krep25_r54rB];

Foreign.C.Types.$tc'CSize3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CSize"#;

Foreign.C.Types.$tc'CSize2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CSize3];

Foreign.C.Types.$tc'CSize :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10732574519801736620##
                                    9582148817759369933##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CSize2
                                    0#
                                    Foreign.C.Types.$tc'CSize1];

Foreign.C.Types.$tcCWchar2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CWchar"#;

Foreign.C.Types.$tcCWchar1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCWchar2];

Foreign.C.Types.$tcCWchar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17109569786881617348##
                                    12848424059160789567##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCWchar1
                                    0#
                                    GHC.Types.krep$*];

$krep26_r54rC :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCWchar
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CWchar1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep6_r54ri $krep26_r54rC];

Foreign.C.Types.$tc'CWchar3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CWchar"#;

Foreign.C.Types.$tc'CWchar2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CWchar3];

Foreign.C.Types.$tc'CWchar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12847418893300185693##
                                    10342021236626115560##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CWchar2
                                    0#
                                    Foreign.C.Types.$tc'CWchar1];

Foreign.C.Types.$tcCSigAtomic2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CSigAtomic"#;

Foreign.C.Types.$tcCSigAtomic1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCSigAtomic2];

Foreign.C.Types.$tcCSigAtomic :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10964102087567040849##
                                    4732914489126451968##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCSigAtomic1
                                    0#
                                    GHC.Types.krep$*];

$krep27_r54rD :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCSigAtomic
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CSigAtomic1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep6_r54ri $krep27_r54rD];

Foreign.C.Types.$tc'CSigAtomic3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CSigAtomic"#;

Foreign.C.Types.$tc'CSigAtomic2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CSigAtomic3];

Foreign.C.Types.$tc'CSigAtomic :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13396342001631048434##
                                    10235017041220212375##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CSigAtomic2
                                    0#
                                    Foreign.C.Types.$tc'CSigAtomic1];

Foreign.C.Types.$tcCClock2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CClock"#;

Foreign.C.Types.$tcCClock1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCClock2];

Foreign.C.Types.$tcCClock :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4014099957796664594##
                                    16004588873343805550##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCClock1
                                    0#
                                    GHC.Types.krep$*];

$krep28_r54rE :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCClock
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CClock1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep28_r54rE];

Foreign.C.Types.$tc'CClock3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CClock"#;

Foreign.C.Types.$tc'CClock2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CClock3];

Foreign.C.Types.$tc'CClock :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7016713985082915031##
                                    17346134655367323413##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CClock2
                                    0#
                                    Foreign.C.Types.$tc'CClock1];

Foreign.C.Types.$tcCTime2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CTime"#;

Foreign.C.Types.$tcCTime1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCTime2];

Foreign.C.Types.$tcCTime :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6217075761792864271##
                                    2605806391289821578##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCTime1
                                    0#
                                    GHC.Types.krep$*];

$krep29_r54rF :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCTime
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CTime1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep29_r54rF];

Foreign.C.Types.$tc'CTime3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CTime"#;

Foreign.C.Types.$tc'CTime2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CTime3];

Foreign.C.Types.$tc'CTime :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17509316711753497463##
                                    1311689641528100086##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CTime2
                                    0#
                                    Foreign.C.Types.$tc'CTime1];

Foreign.C.Types.$tcCUSeconds2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUSeconds"#;

Foreign.C.Types.$tcCUSeconds1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUSeconds2];

Foreign.C.Types.$tcCUSeconds :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17405471525584189701##
                                    2346565657742720464##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUSeconds1
                                    0#
                                    GHC.Types.krep$*];

$krep30_r54rG :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUSeconds
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUSeconds1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep7_r54rj $krep30_r54rG];

Foreign.C.Types.$tc'CUSeconds3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUSeconds"#;

Foreign.C.Types.$tc'CUSeconds2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUSeconds3];

Foreign.C.Types.$tc'CUSeconds :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [1636377087964720166##
                                    9077913612209140483##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUSeconds2
                                    0#
                                    Foreign.C.Types.$tc'CUSeconds1];

Foreign.C.Types.$tcCSUSeconds2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CSUSeconds"#;

Foreign.C.Types.$tcCSUSeconds1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCSUSeconds2];

Foreign.C.Types.$tcCSUSeconds :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17742176050705091078##
                                    4953235515970284689##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCSUSeconds1
                                    0#
                                    GHC.Types.krep$*];

$krep31_r54rH :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCSUSeconds
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CSUSeconds1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep31_r54rH];

Foreign.C.Types.$tc'CSUSeconds3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CSUSeconds"#;

Foreign.C.Types.$tc'CSUSeconds2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CSUSeconds3];

Foreign.C.Types.$tc'CSUSeconds :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [1705325731812814046##
                                    1387105441940513020##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CSUSeconds2
                                    0#
                                    Foreign.C.Types.$tc'CSUSeconds1];

Foreign.C.Types.$tcCFile2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CFile"#;

Foreign.C.Types.$tcCFile1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCFile2];

Foreign.C.Types.$tcCFile :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14154907999347903425##
                                    1814172269682152286##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCFile1
                                    0#
                                    GHC.Types.krep$*];

Foreign.C.Types.$tc'CFile1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCFile
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CFile3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CFile"#;

Foreign.C.Types.$tc'CFile2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CFile3];

Foreign.C.Types.$tc'CFile :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12302197724313820129##
                                    4785193272387875481##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CFile2
                                    0#
                                    Foreign.C.Types.$tc'CFile1];

Foreign.C.Types.$tcCFpos2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CFpos"#;

Foreign.C.Types.$tcCFpos1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCFpos2];

Foreign.C.Types.$tcCFpos :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16874339295908012189##
                                    2656467663994338805##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCFpos1
                                    0#
                                    GHC.Types.krep$*];

Foreign.C.Types.$tc'CFpos1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCFpos
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CFpos3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CFpos"#;

Foreign.C.Types.$tc'CFpos2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CFpos3];

Foreign.C.Types.$tc'CFpos :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [18279263347003670163##
                                    11699892855938511932##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CFpos2
                                    0#
                                    Foreign.C.Types.$tc'CFpos1];

Foreign.C.Types.$tcCJmpBuf2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CJmpBuf"#;

Foreign.C.Types.$tcCJmpBuf1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCJmpBuf2];

Foreign.C.Types.$tcCJmpBuf :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5219762936910773001##
                                    5563521999894797471##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCJmpBuf1
                                    0#
                                    GHC.Types.krep$*];

Foreign.C.Types.$tc'CJmpBuf1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCJmpBuf
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CJmpBuf3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CJmpBuf"#;

Foreign.C.Types.$tc'CJmpBuf2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CJmpBuf3];

Foreign.C.Types.$tc'CJmpBuf :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8278531976244408132##
                                    11989261641992411619##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CJmpBuf2
                                    0#
                                    Foreign.C.Types.$tc'CJmpBuf1];

Foreign.C.Types.$tcCIntPtr2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CIntPtr"#;

Foreign.C.Types.$tcCIntPtr1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCIntPtr2];

Foreign.C.Types.$tcCIntPtr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4666846936648130190##
                                    1074292558155745783##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCIntPtr1
                                    0#
                                    GHC.Types.krep$*];

$krep32_r54rI :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCIntPtr
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CIntPtr1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep32_r54rI];

Foreign.C.Types.$tc'CIntPtr3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CIntPtr"#;

Foreign.C.Types.$tc'CIntPtr2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CIntPtr3];

Foreign.C.Types.$tc'CIntPtr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14193281566492847253##
                                    11429158215235451511##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CIntPtr2
                                    0#
                                    Foreign.C.Types.$tc'CIntPtr1];

Foreign.C.Types.$tcCUIntPtr2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUIntPtr"#;

Foreign.C.Types.$tcCUIntPtr1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUIntPtr2];

Foreign.C.Types.$tcCUIntPtr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3784320557383063626##
                                    5356790357315597843##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUIntPtr1
                                    0#
                                    GHC.Types.krep$*];

$krep33_r54rJ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUIntPtr
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUIntPtr1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r54rl $krep33_r54rJ];

Foreign.C.Types.$tc'CUIntPtr3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUIntPtr"#;

Foreign.C.Types.$tc'CUIntPtr2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUIntPtr3];

Foreign.C.Types.$tc'CUIntPtr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13898690391388793946##
                                    494854583711937458##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUIntPtr2
                                    0#
                                    Foreign.C.Types.$tc'CUIntPtr1];

Foreign.C.Types.$tcCIntMax2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CIntMax"#;

Foreign.C.Types.$tcCIntMax1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCIntMax2];

Foreign.C.Types.$tcCIntMax :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12739001320308858558##
                                    4975233500487868495##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCIntMax1
                                    0#
                                    GHC.Types.krep$*];

$krep34_r54rK :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCIntMax
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CIntMax1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep34_r54rK];

Foreign.C.Types.$tc'CIntMax3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CIntMax"#;

Foreign.C.Types.$tc'CIntMax2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CIntMax3];

Foreign.C.Types.$tc'CIntMax :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2671575007670815434##
                                    14572633195159182874##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CIntMax2
                                    0#
                                    Foreign.C.Types.$tc'CIntMax1];

Foreign.C.Types.$tcCUIntMax2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUIntMax"#;

Foreign.C.Types.$tcCUIntMax1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUIntMax2];

Foreign.C.Types.$tcCUIntMax :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10275136122733258480##
                                    14814319483566909713##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUIntMax1
                                    0#
                                    GHC.Types.krep$*];

$krep35_r54rL :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUIntMax
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUIntMax1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r54rl $krep35_r54rL];

Foreign.C.Types.$tc'CUIntMax3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUIntMax"#;

Foreign.C.Types.$tc'CUIntMax2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUIntMax3];

Foreign.C.Types.$tc'CUIntMax :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4605074089694102640##
                                    11721661597354817794##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUIntMax2
                                    0#
                                    Foreign.C.Types.$tc'CUIntMax1];

Foreign.C.Types.CJmpBuf :: Foreign.C.Types.CJmpBuf
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE Foreign.C.Types.CJmpBuf! [];

Foreign.C.Types.CFpos :: Foreign.C.Types.CFpos
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE Foreign.C.Types.CFpos! [];

Foreign.C.Types.CFile :: Foreign.C.Types.CFile
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE Foreign.C.Types.CFile! [];


==================== Pre unarise: ====================
2018-03-16 15:59:59.68292259 UTC

Foreign.C.Types.$fShowCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord64_$cshowsPrec
                                    GHC.Word.$fShowWord64_$cshow
                                    GHC.Word.$fShowWord64_$cshowList];

Foreign.C.Types.$fReadCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord64_$creadsPrec
                                    GHC.Read.$fReadWord64_$creadList
                                    GHC.Read.$fReadWord13
                                    GHC.Read.$fReadWord11];

Foreign.C.Types.$fBoundedCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord7
                                       GHC.Word.$fBoundedWord64_$cmaxBound];

Foreign.C.Types.$fStorableCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord64_$calignment
                                                Foreign.Storable.$fStorableWord64_$calignment
                                                GHC.Storable.readWord64OffPtr1
                                                GHC.Storable.writeWord64OffPtr1
                                                Foreign.Storable.$fStorableWord18
                                                Foreign.Storable.$fStorableWord17
                                                Foreign.Storable.$fStorableWord15
                                                Foreign.Storable.$fStorableWord14];

Foreign.C.Types.$fEnumCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord64_$csucc
                                    GHC.Word.$fEnumWord64_$cpred
                                    GHC.Word.$fEnumWord64_$ctoEnum
                                    GHC.Word.$fEnumWord64_$cfromEnum
                                    GHC.Word.$fEnumWord64_$cenumFrom
                                    GHC.Word.$fEnumWord64_$cenumFromThen
                                    GHC.Word.$fEnumWord64_$cenumFromTo
                                    GHC.Word.$fEnumWord64_$cenumFromThenTo];

Foreign.C.Types.$fNumCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord64_$c+
                                  GHC.Word.$fNumWord64_$c-
                                  GHC.Word.$fNumWord64_$c*
                                  GHC.Word.$fNumWord64_$cnegate
                                  GHC.Word.$fNumWord64_$cabs
                                  GHC.Word.$fNumWord64_$csignum
                                  GHC.Word.$fNumWord64_$cfromInteger];

Foreign.C.Types.$fEqCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord64
                                     GHC.Word.neWord64];

Foreign.C.Types.$fOrdCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUIntMax
                                      GHC.Word.$fOrdWord64_$ccompare
                                      GHC.Word.ltWord64
                                      GHC.Word.leWord64
                                      GHC.Word.gtWord64
                                      GHC.Word.geWord64
                                      GHC.Word.$fOrdWord64_$cmax
                                      GHC.Word.$fOrdWord64_$cmin];

Foreign.C.Types.$fRealCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUIntMax
                                    Foreign.C.Types.$fOrdCUIntMax
                                    GHC.Word.$fRealWord64_$ctoRational];

Foreign.C.Types.$fIntegralCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CUIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCUIntMax
                                        Foreign.C.Types.$fEnumCUIntMax
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cquotRem
                                        GHC.Word.$fIntegralWord64_$cdivMod
                                        GHC.Word.$fIntegralWord64_$ctoInteger];

Foreign.C.Types.$fBitsCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCUIntMax
                                     GHC.Word.$fBitsWord64_$c.&.
                                     GHC.Word.$fBitsWord64_$c.|.
                                     GHC.Word.$fBitsWord64_$cxor
                                     GHC.Word.$fBitsWord64_$ccomplement
                                     GHC.Word.$fBitsWord64_$cshift
                                     GHC.Word.$fBitsWord64_$crotate
                                     GHC.Word.$fBitsWord7
                                     GHC.Word.$fBitsWord64_$cbit
                                     GHC.Word.$fBitsWord64_$csetBit
                                     GHC.Word.$fBitsWord64_$cclearBit
                                     GHC.Word.$fBitsWord64_$ccomplementBit
                                     GHC.Word.$fBitsWord64_$ctestBit
                                     GHC.Word.$fBitsWord64_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord64_$cfiniteBitSize
                                     GHC.Word.$fBitsWord64_$cisSigned
                                     GHC.Word.$fBitsWord64_$cshiftL
                                     GHC.Word.$fBitsWord64_$cunsafeShiftL
                                     GHC.Word.$fBitsWord64_$cshiftR
                                     GHC.Word.$fBitsWord64_$cunsafeShiftR
                                     GHC.Word.$fBitsWord64_$crotateL
                                     GHC.Word.$fBitsWord64_$crotateR
                                     GHC.Word.$fBitsWord64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCUIntMax
                                           GHC.Word.$fBitsWord64_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord64_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fBoundedCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt64_$cminBound
                                       GHC.Int.$fBoundedInt64_$cmaxBound];

Foreign.C.Types.$fStorableCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCIntMax
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCIntMax
                                    Foreign.C.Types.$fOrdCIntMax
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fIntegralCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCIntMax
                                        Foreign.C.Types.$fEnumCIntMax
                                        GHC.Int.$fIntegralInt64_$cquot
                                        GHC.Int.$fIntegralInt64_$crem
                                        GHC.Int.$fIntegralInt64_$cdiv
                                        GHC.Int.$fIntegralInt64_$cmod
                                        GHC.Int.$fIntegralInt64_$cquotRem
                                        GHC.Int.$fIntegralInt64_$cdivMod
                                        GHC.Int.$fIntegralInt64_$ctoInteger];

Foreign.C.Types.$fBitsCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCIntMax
                                     GHC.Int.$fBitsInt64_$c.&.
                                     GHC.Int.$fBitsInt64_$c.|.
                                     GHC.Int.$fBitsInt64_$cxor
                                     GHC.Int.$fBitsInt64_$ccomplement
                                     GHC.Int.$fBitsInt64_$cshift
                                     GHC.Int.$fBitsInt64_$crotate
                                     GHC.Int.$fBitsInt10
                                     GHC.Int.$fBitsInt64_$cbit
                                     GHC.Int.$fBitsInt64_$csetBit
                                     GHC.Int.$fBitsInt64_$cclearBit
                                     GHC.Int.$fBitsInt64_$ccomplementBit
                                     GHC.Int.$fBitsInt64_$ctestBit
                                     GHC.Int.$fBitsInt64_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt64_$cfiniteBitSize
                                     GHC.Int.$fBitsInt64_$cisSigned
                                     GHC.Int.$fBitsInt64_$cshiftL
                                     GHC.Int.$fBitsInt64_$cunsafeShiftL
                                     GHC.Int.$fBitsInt64_$cshiftR
                                     GHC.Int.$fBitsInt64_$cunsafeShiftR
                                     GHC.Int.$fBitsInt64_$crotateL
                                     GHC.Int.$fBitsInt64_$crotateR
                                     GHC.Int.$fBitsInt64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCIntMax
                                           GHC.Int.$fBitsInt64_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord64_$cshowsPrec
                                    GHC.Word.$fShowWord64_$cshow
                                    GHC.Word.$fShowWord64_$cshowList];

Foreign.C.Types.$fReadCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord64_$creadsPrec
                                    GHC.Read.$fReadWord64_$creadList
                                    GHC.Read.$fReadWord13
                                    GHC.Read.$fReadWord11];

Foreign.C.Types.$fBoundedCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord7
                                       GHC.Word.$fBoundedWord64_$cmaxBound];

Foreign.C.Types.$fStorableCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord64_$calignment
                                                Foreign.Storable.$fStorableWord64_$calignment
                                                GHC.Storable.readWord64OffPtr1
                                                GHC.Storable.writeWord64OffPtr1
                                                Foreign.Storable.$fStorableWord18
                                                Foreign.Storable.$fStorableWord17
                                                Foreign.Storable.$fStorableWord15
                                                Foreign.Storable.$fStorableWord14];

Foreign.C.Types.$fEnumCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord64_$csucc
                                    GHC.Word.$fEnumWord64_$cpred
                                    GHC.Word.$fEnumWord64_$ctoEnum
                                    GHC.Word.$fEnumWord64_$cfromEnum
                                    GHC.Word.$fEnumWord64_$cenumFrom
                                    GHC.Word.$fEnumWord64_$cenumFromThen
                                    GHC.Word.$fEnumWord64_$cenumFromTo
                                    GHC.Word.$fEnumWord64_$cenumFromThenTo];

Foreign.C.Types.$fNumCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord64_$c+
                                  GHC.Word.$fNumWord64_$c-
                                  GHC.Word.$fNumWord64_$c*
                                  GHC.Word.$fNumWord64_$cnegate
                                  GHC.Word.$fNumWord64_$cabs
                                  GHC.Word.$fNumWord64_$csignum
                                  GHC.Word.$fNumWord64_$cfromInteger];

Foreign.C.Types.$fEqCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord64
                                     GHC.Word.neWord64];

Foreign.C.Types.$fOrdCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUIntPtr
                                      GHC.Word.$fOrdWord64_$ccompare
                                      GHC.Word.ltWord64
                                      GHC.Word.leWord64
                                      GHC.Word.gtWord64
                                      GHC.Word.geWord64
                                      GHC.Word.$fOrdWord64_$cmax
                                      GHC.Word.$fOrdWord64_$cmin];

Foreign.C.Types.$fRealCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUIntPtr
                                    Foreign.C.Types.$fOrdCUIntPtr
                                    GHC.Word.$fRealWord64_$ctoRational];

Foreign.C.Types.$fIntegralCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CUIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCUIntPtr
                                        Foreign.C.Types.$fEnumCUIntPtr
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cquotRem
                                        GHC.Word.$fIntegralWord64_$cdivMod
                                        GHC.Word.$fIntegralWord64_$ctoInteger];

Foreign.C.Types.$fBitsCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCUIntPtr
                                     GHC.Word.$fBitsWord64_$c.&.
                                     GHC.Word.$fBitsWord64_$c.|.
                                     GHC.Word.$fBitsWord64_$cxor
                                     GHC.Word.$fBitsWord64_$ccomplement
                                     GHC.Word.$fBitsWord64_$cshift
                                     GHC.Word.$fBitsWord64_$crotate
                                     GHC.Word.$fBitsWord7
                                     GHC.Word.$fBitsWord64_$cbit
                                     GHC.Word.$fBitsWord64_$csetBit
                                     GHC.Word.$fBitsWord64_$cclearBit
                                     GHC.Word.$fBitsWord64_$ccomplementBit
                                     GHC.Word.$fBitsWord64_$ctestBit
                                     GHC.Word.$fBitsWord64_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord64_$cfiniteBitSize
                                     GHC.Word.$fBitsWord64_$cisSigned
                                     GHC.Word.$fBitsWord64_$cshiftL
                                     GHC.Word.$fBitsWord64_$cunsafeShiftL
                                     GHC.Word.$fBitsWord64_$cshiftR
                                     GHC.Word.$fBitsWord64_$cunsafeShiftR
                                     GHC.Word.$fBitsWord64_$crotateL
                                     GHC.Word.$fBitsWord64_$crotateR
                                     GHC.Word.$fBitsWord64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCUIntPtr
                                           GHC.Word.$fBitsWord64_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord64_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fBoundedCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt64_$cminBound
                                       GHC.Int.$fBoundedInt64_$cmaxBound];

Foreign.C.Types.$fStorableCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCIntPtr
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCIntPtr
                                    Foreign.C.Types.$fOrdCIntPtr
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fIntegralCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCIntPtr
                                        Foreign.C.Types.$fEnumCIntPtr
                                        GHC.Int.$fIntegralInt64_$cquot
                                        GHC.Int.$fIntegralInt64_$crem
                                        GHC.Int.$fIntegralInt64_$cdiv
                                        GHC.Int.$fIntegralInt64_$cmod
                                        GHC.Int.$fIntegralInt64_$cquotRem
                                        GHC.Int.$fIntegralInt64_$cdivMod
                                        GHC.Int.$fIntegralInt64_$ctoInteger];

Foreign.C.Types.$fBitsCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCIntPtr
                                     GHC.Int.$fBitsInt64_$c.&.
                                     GHC.Int.$fBitsInt64_$c.|.
                                     GHC.Int.$fBitsInt64_$cxor
                                     GHC.Int.$fBitsInt64_$ccomplement
                                     GHC.Int.$fBitsInt64_$cshift
                                     GHC.Int.$fBitsInt64_$crotate
                                     GHC.Int.$fBitsInt10
                                     GHC.Int.$fBitsInt64_$cbit
                                     GHC.Int.$fBitsInt64_$csetBit
                                     GHC.Int.$fBitsInt64_$cclearBit
                                     GHC.Int.$fBitsInt64_$ccomplementBit
                                     GHC.Int.$fBitsInt64_$ctestBit
                                     GHC.Int.$fBitsInt64_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt64_$cfiniteBitSize
                                     GHC.Int.$fBitsInt64_$cisSigned
                                     GHC.Int.$fBitsInt64_$cshiftL
                                     GHC.Int.$fBitsInt64_$cunsafeShiftL
                                     GHC.Int.$fBitsInt64_$cshiftR
                                     GHC.Int.$fBitsInt64_$cunsafeShiftR
                                     GHC.Int.$fBitsInt64_$crotateL
                                     GHC.Int.$fBitsInt64_$crotateR
                                     GHC.Int.$fBitsInt64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCIntPtr
                                           GHC.Int.$fBitsInt64_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CSUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CSUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fStorableCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CSUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CSUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CSUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CSUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CSUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCSUSeconds
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CSUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCSUSeconds
                                    Foreign.C.Types.$fOrdCSUSeconds
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fShowCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord32_$cshowsPrec
                                    GHC.Word.$fShowWord32_$cshow
                                    GHC.Word.$fShowWord32_$cshowList];

Foreign.C.Types.$fReadCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord32_$creadsPrec
                                    GHC.Read.$fReadWord32_$creadList
                                    GHC.Read.$fReadWord10
                                    GHC.Read.$fReadWord7];

Foreign.C.Types.$fStorableCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord32_$calignment
                                                Foreign.Storable.$fStorableWord32_$calignment
                                                GHC.Storable.readWord32OffPtr1
                                                GHC.Storable.writeWord32OffPtr1
                                                Foreign.Storable.$fStorableWord13
                                                Foreign.Storable.$fStorableWord12
                                                Foreign.Storable.$fStorableWord11
                                                Foreign.Storable.$fStorableWord10];

Foreign.C.Types.$fEnumCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord32_$csucc
                                    GHC.Word.$fEnumWord32_$cpred
                                    GHC.Word.$fEnumWord32_$ctoEnum
                                    GHC.Word.$fEnumWord32_$cfromEnum
                                    GHC.Word.$fEnumWord32_$cenumFrom
                                    GHC.Word.$fEnumWord32_$cenumFromThen
                                    GHC.Word.$fEnumWord32_$cenumFromTo
                                    GHC.Word.$fEnumWord32_$cenumFromThenTo];

Foreign.C.Types.$fNumCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord32_$c+
                                  GHC.Word.$fNumWord32_$c-
                                  GHC.Word.$fNumWord32_$c*
                                  GHC.Word.$fNumWord32_$cnegate
                                  GHC.Word.$fNumWord32_$cabs
                                  GHC.Word.$fNumWord32_$csignum
                                  GHC.Word.$fNumWord32_$cfromInteger];

Foreign.C.Types.$fEqCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord32
                                     GHC.Word.neWord32];

Foreign.C.Types.$fOrdCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUSeconds
                                      GHC.Word.$fOrdWord32_$ccompare
                                      GHC.Word.ltWord32
                                      GHC.Word.leWord32
                                      GHC.Word.gtWord32
                                      GHC.Word.geWord32
                                      GHC.Word.$fOrdWord32_$cmax
                                      GHC.Word.$fOrdWord32_$cmin];

Foreign.C.Types.$fRealCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUSeconds
                                    Foreign.C.Types.$fOrdCUSeconds
                                    GHC.Word.$fRealWord32_$ctoRational];

Foreign.C.Types.$fShowCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CTime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CTime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fStorableCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CTime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CTime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CTime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CTime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CTime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCTime
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CTime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCTime
                                    Foreign.C.Types.$fOrdCTime
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fShowCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CClock
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CClock
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fStorableCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CClock
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CClock
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CClock
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CClock
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CClock
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCClock
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CClock
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCClock
                                    Foreign.C.Types.$fOrdCClock
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fShowCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt32_$cshowsPrec
                                    GHC.Int.$fShowInt32_$cshow
                                    GHC.Int.$fShowInt32_$cshowList];

Foreign.C.Types.$fReadCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CSigAtomic
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt32_$creadsPrec
                                    GHC.Int.$fReadInt32_$creadList
                                    GHC.Int.$fReadInt6
                                    GHC.Int.$fReadInt4];

Foreign.C.Types.$fBoundedCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt32_$cminBound
                                       GHC.Int.$fBoundedInt32_$cmaxBound];

Foreign.C.Types.$fStorableCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt32_$calignment
                                                Foreign.Storable.$fStorableInt32_$calignment
                                                GHC.Storable.readInt32OffPtr1
                                                GHC.Storable.writeInt32OffPtr1
                                                Foreign.Storable.$fStorableInt14
                                                Foreign.Storable.$fStorableInt13
                                                Foreign.Storable.$fStorableInt12
                                                Foreign.Storable.$fStorableInt11];

Foreign.C.Types.$fEnumCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CSigAtomic
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt32_$csucc
                                    GHC.Int.$fEnumInt32_$cpred
                                    GHC.Int.$fEnumInt32_$ctoEnum
                                    GHC.Int.$fEnumInt32_$cfromEnum
                                    GHC.Int.$fEnumInt32_$cenumFrom
                                    GHC.Int.$fEnumInt32_$cenumFromThen
                                    GHC.Int.$fEnumInt32_$cenumFromTo
                                    GHC.Int.$fEnumInt32_$cenumFromThenTo];

Foreign.C.Types.$fNumCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt32_$c+
                                  GHC.Int.$fNumInt32_$c-
                                  GHC.Int.$fNumInt32_$c*
                                  GHC.Int.$fNumInt32_$cnegate
                                  GHC.Int.$fNumInt32_$cabs
                                  GHC.Int.$fNumInt32_$csignum
                                  GHC.Int.$fNumInt32_$cfromInteger];

Foreign.C.Types.$fEqCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt32 GHC.Int.neInt32];

Foreign.C.Types.$fOrdCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCSigAtomic
                                      GHC.Int.$fOrdInt32_$ccompare
                                      GHC.Int.ltInt32
                                      GHC.Int.leInt32
                                      GHC.Int.gtInt32
                                      GHC.Int.geInt32
                                      GHC.Int.$fOrdInt32_$cmax
                                      GHC.Int.$fOrdInt32_$cmin];

Foreign.C.Types.$fRealCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CSigAtomic
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCSigAtomic
                                    Foreign.C.Types.$fOrdCSigAtomic
                                    GHC.Int.$fRealInt32_$ctoRational];

Foreign.C.Types.$fIntegralCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CSigAtomic
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCSigAtomic
                                        Foreign.C.Types.$fEnumCSigAtomic
                                        GHC.Int.$fIntegralInt32_$cquot
                                        GHC.Int.$fIntegralInt32_$crem
                                        GHC.Int.$fIntegralInt32_$cdiv
                                        GHC.Int.$fIntegralInt32_$cmod
                                        GHC.Int.$fIntegralInt32_$cquotRem
                                        GHC.Int.$fIntegralInt32_$cdivMod
                                        GHC.Int.$fIntegralInt32_$ctoInteger];

Foreign.C.Types.$fBitsCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCSigAtomic
                                     GHC.Int.$fBitsInt32_$c.&.
                                     GHC.Int.$fBitsInt32_$c.|.
                                     GHC.Int.$fBitsInt32_$cxor
                                     GHC.Int.$fBitsInt32_$ccomplement
                                     GHC.Int.$fBitsInt32_$cshift
                                     GHC.Int.$fBitsInt32_$crotate
                                     GHC.Int.$fBitsInt6
                                     GHC.Int.$fBitsInt32_$cbit
                                     GHC.Int.$fBitsInt32_$csetBit
                                     GHC.Int.$fBitsInt32_$cclearBit
                                     GHC.Int.$fBitsInt32_$ccomplementBit
                                     GHC.Int.$fBitsInt32_$ctestBit
                                     GHC.Int.$fBitsInt32_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt32_$cfiniteBitSize
                                     GHC.Int.$fBitsInt32_$cisSigned
                                     GHC.Int.$fBitsInt32_$cshiftL
                                     GHC.Int.$fBitsInt32_$cunsafeShiftL
                                     GHC.Int.$fBitsInt32_$cshiftR
                                     GHC.Int.$fBitsInt32_$cunsafeShiftR
                                     GHC.Int.$fBitsInt32_$crotateL
                                     GHC.Int.$fBitsInt32_$crotateR
                                     GHC.Int.$fBitsInt32_$cpopCount];

Foreign.C.Types.$fFiniteBitsCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCSigAtomic
                                           GHC.Int.$fBitsInt32_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros];

Foreign.C.Types.$fShowCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt32_$cshowsPrec
                                    GHC.Int.$fShowInt32_$cshow
                                    GHC.Int.$fShowInt32_$cshowList];

Foreign.C.Types.$fReadCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CWchar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt32_$creadsPrec
                                    GHC.Int.$fReadInt32_$creadList
                                    GHC.Int.$fReadInt6
                                    GHC.Int.$fReadInt4];

Foreign.C.Types.$fBoundedCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt32_$cminBound
                                       GHC.Int.$fBoundedInt32_$cmaxBound];

Foreign.C.Types.$fStorableCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt32_$calignment
                                                Foreign.Storable.$fStorableInt32_$calignment
                                                GHC.Storable.readInt32OffPtr1
                                                GHC.Storable.writeInt32OffPtr1
                                                Foreign.Storable.$fStorableInt14
                                                Foreign.Storable.$fStorableInt13
                                                Foreign.Storable.$fStorableInt12
                                                Foreign.Storable.$fStorableInt11];

Foreign.C.Types.$fEnumCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CWchar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt32_$csucc
                                    GHC.Int.$fEnumInt32_$cpred
                                    GHC.Int.$fEnumInt32_$ctoEnum
                                    GHC.Int.$fEnumInt32_$cfromEnum
                                    GHC.Int.$fEnumInt32_$cenumFrom
                                    GHC.Int.$fEnumInt32_$cenumFromThen
                                    GHC.Int.$fEnumInt32_$cenumFromTo
                                    GHC.Int.$fEnumInt32_$cenumFromThenTo];

Foreign.C.Types.$fNumCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt32_$c+
                                  GHC.Int.$fNumInt32_$c-
                                  GHC.Int.$fNumInt32_$c*
                                  GHC.Int.$fNumInt32_$cnegate
                                  GHC.Int.$fNumInt32_$cabs
                                  GHC.Int.$fNumInt32_$csignum
                                  GHC.Int.$fNumInt32_$cfromInteger];

Foreign.C.Types.$fEqCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt32 GHC.Int.neInt32];

Foreign.C.Types.$fOrdCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCWchar
                                      GHC.Int.$fOrdInt32_$ccompare
                                      GHC.Int.ltInt32
                                      GHC.Int.leInt32
                                      GHC.Int.gtInt32
                                      GHC.Int.geInt32
                                      GHC.Int.$fOrdInt32_$cmax
                                      GHC.Int.$fOrdInt32_$cmin];

Foreign.C.Types.$fRealCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CWchar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCWchar
                                    Foreign.C.Types.$fOrdCWchar
                                    GHC.Int.$fRealInt32_$ctoRational];

Foreign.C.Types.$fIntegralCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CWchar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCWchar
                                        Foreign.C.Types.$fEnumCWchar
                                        GHC.Int.$fIntegralInt32_$cquot
                                        GHC.Int.$fIntegralInt32_$crem
                                        GHC.Int.$fIntegralInt32_$cdiv
                                        GHC.Int.$fIntegralInt32_$cmod
                                        GHC.Int.$fIntegralInt32_$cquotRem
                                        GHC.Int.$fIntegralInt32_$cdivMod
                                        GHC.Int.$fIntegralInt32_$ctoInteger];

Foreign.C.Types.$fBitsCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCWchar
                                     GHC.Int.$fBitsInt32_$c.&.
                                     GHC.Int.$fBitsInt32_$c.|.
                                     GHC.Int.$fBitsInt32_$cxor
                                     GHC.Int.$fBitsInt32_$ccomplement
                                     GHC.Int.$fBitsInt32_$cshift
                                     GHC.Int.$fBitsInt32_$crotate
                                     GHC.Int.$fBitsInt6
                                     GHC.Int.$fBitsInt32_$cbit
                                     GHC.Int.$fBitsInt32_$csetBit
                                     GHC.Int.$fBitsInt32_$cclearBit
                                     GHC.Int.$fBitsInt32_$ccomplementBit
                                     GHC.Int.$fBitsInt32_$ctestBit
                                     GHC.Int.$fBitsInt32_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt32_$cfiniteBitSize
                                     GHC.Int.$fBitsInt32_$cisSigned
                                     GHC.Int.$fBitsInt32_$cshiftL
                                     GHC.Int.$fBitsInt32_$cunsafeShiftL
                                     GHC.Int.$fBitsInt32_$cshiftR
                                     GHC.Int.$fBitsInt32_$cunsafeShiftR
                                     GHC.Int.$fBitsInt32_$crotateL
                                     GHC.Int.$fBitsInt32_$crotateR
                                     GHC.Int.$fBitsInt32_$cpopCount];

Foreign.C.Types.$fFiniteBitsCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCWchar
                                           GHC.Int.$fBitsInt32_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros];

Foreign.C.Types.$fShowCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CSize
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord64_$cshowsPrec
                                    GHC.Word.$fShowWord64_$cshow
                                    GHC.Word.$fShowWord64_$cshowList];

Foreign.C.Types.$fReadCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CSize
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord64_$creadsPrec
                                    GHC.Read.$fReadWord64_$creadList
                                    GHC.Read.$fReadWord13
                                    GHC.Read.$fReadWord11];

Foreign.C.Types.$fBoundedCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord7
                                       GHC.Word.$fBoundedWord64_$cmaxBound];

Foreign.C.Types.$fStorableCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord64_$calignment
                                                Foreign.Storable.$fStorableWord64_$calignment
                                                GHC.Storable.readWord64OffPtr1
                                                GHC.Storable.writeWord64OffPtr1
                                                Foreign.Storable.$fStorableWord18
                                                Foreign.Storable.$fStorableWord17
                                                Foreign.Storable.$fStorableWord15
                                                Foreign.Storable.$fStorableWord14];

Foreign.C.Types.$fEnumCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CSize
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord64_$csucc
                                    GHC.Word.$fEnumWord64_$cpred
                                    GHC.Word.$fEnumWord64_$ctoEnum
                                    GHC.Word.$fEnumWord64_$cfromEnum
                                    GHC.Word.$fEnumWord64_$cenumFrom
                                    GHC.Word.$fEnumWord64_$cenumFromThen
                                    GHC.Word.$fEnumWord64_$cenumFromTo
                                    GHC.Word.$fEnumWord64_$cenumFromThenTo];

Foreign.C.Types.$fNumCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord64_$c+
                                  GHC.Word.$fNumWord64_$c-
                                  GHC.Word.$fNumWord64_$c*
                                  GHC.Word.$fNumWord64_$cnegate
                                  GHC.Word.$fNumWord64_$cabs
                                  GHC.Word.$fNumWord64_$csignum
                                  GHC.Word.$fNumWord64_$cfromInteger];

Foreign.C.Types.$fEqCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord64
                                     GHC.Word.neWord64];

Foreign.C.Types.$fOrdCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCSize
                                      GHC.Word.$fOrdWord64_$ccompare
                                      GHC.Word.ltWord64
                                      GHC.Word.leWord64
                                      GHC.Word.gtWord64
                                      GHC.Word.geWord64
                                      GHC.Word.$fOrdWord64_$cmax
                                      GHC.Word.$fOrdWord64_$cmin];

Foreign.C.Types.$fRealCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CSize
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCSize
                                    Foreign.C.Types.$fOrdCSize
                                    GHC.Word.$fRealWord64_$ctoRational];

Foreign.C.Types.$fIntegralCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CSize
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCSize
                                        Foreign.C.Types.$fEnumCSize
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cquotRem
                                        GHC.Word.$fIntegralWord64_$cdivMod
                                        GHC.Word.$fIntegralWord64_$ctoInteger];

Foreign.C.Types.$fBitsCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCSize
                                     GHC.Word.$fBitsWord64_$c.&.
                                     GHC.Word.$fBitsWord64_$c.|.
                                     GHC.Word.$fBitsWord64_$cxor
                                     GHC.Word.$fBitsWord64_$ccomplement
                                     GHC.Word.$fBitsWord64_$cshift
                                     GHC.Word.$fBitsWord64_$crotate
                                     GHC.Word.$fBitsWord7
                                     GHC.Word.$fBitsWord64_$cbit
                                     GHC.Word.$fBitsWord64_$csetBit
                                     GHC.Word.$fBitsWord64_$cclearBit
                                     GHC.Word.$fBitsWord64_$ccomplementBit
                                     GHC.Word.$fBitsWord64_$ctestBit
                                     GHC.Word.$fBitsWord64_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord64_$cfiniteBitSize
                                     GHC.Word.$fBitsWord64_$cisSigned
                                     GHC.Word.$fBitsWord64_$cshiftL
                                     GHC.Word.$fBitsWord64_$cunsafeShiftL
                                     GHC.Word.$fBitsWord64_$cshiftR
                                     GHC.Word.$fBitsWord64_$cunsafeShiftR
                                     GHC.Word.$fBitsWord64_$crotateL
                                     GHC.Word.$fBitsWord64_$crotateR
                                     GHC.Word.$fBitsWord64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCSize
                                           GHC.Word.$fBitsWord64_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord64_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CPtrdiff
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fBoundedCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt64_$cminBound
                                       GHC.Int.$fBoundedInt64_$cmaxBound];

Foreign.C.Types.$fStorableCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CPtrdiff
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCPtrdiff
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CPtrdiff
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCPtrdiff
                                    Foreign.C.Types.$fOrdCPtrdiff
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fIntegralCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CPtrdiff
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCPtrdiff
                                        Foreign.C.Types.$fEnumCPtrdiff
                                        GHC.Int.$fIntegralInt64_$cquot
                                        GHC.Int.$fIntegralInt64_$crem
                                        GHC.Int.$fIntegralInt64_$cdiv
                                        GHC.Int.$fIntegralInt64_$cmod
                                        GHC.Int.$fIntegralInt64_$cquotRem
                                        GHC.Int.$fIntegralInt64_$cdivMod
                                        GHC.Int.$fIntegralInt64_$ctoInteger];

Foreign.C.Types.$fBitsCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCPtrdiff
                                     GHC.Int.$fBitsInt64_$c.&.
                                     GHC.Int.$fBitsInt64_$c.|.
                                     GHC.Int.$fBitsInt64_$cxor
                                     GHC.Int.$fBitsInt64_$ccomplement
                                     GHC.Int.$fBitsInt64_$cshift
                                     GHC.Int.$fBitsInt64_$crotate
                                     GHC.Int.$fBitsInt10
                                     GHC.Int.$fBitsInt64_$cbit
                                     GHC.Int.$fBitsInt64_$csetBit
                                     GHC.Int.$fBitsInt64_$cclearBit
                                     GHC.Int.$fBitsInt64_$ccomplementBit
                                     GHC.Int.$fBitsInt64_$ctestBit
                                     GHC.Int.$fBitsInt64_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt64_$cfiniteBitSize
                                     GHC.Int.$fBitsInt64_$cisSigned
                                     GHC.Int.$fBitsInt64_$cshiftL
                                     GHC.Int.$fBitsInt64_$cunsafeShiftL
                                     GHC.Int.$fBitsInt64_$cshiftR
                                     GHC.Int.$fBitsInt64_$cunsafeShiftR
                                     GHC.Int.$fBitsInt64_$crotateL
                                     GHC.Int.$fBitsInt64_$crotateR
                                     GHC.Int.$fBitsInt64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCPtrdiff
                                           GHC.Int.$fBitsInt64_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Float.$fShowDouble_$cshowsPrec
                                    GHC.Float.$fShowDouble_$cshow
                                    GHC.Float.$fShowDouble_$cshowList];

Foreign.C.Types.$fReadCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadDouble_$creadsPrec
                                    GHC.Read.$fReadDouble_$creadList
                                    GHC.Read.$fReadDouble1
                                    GHC.Read.$fReadDouble_$creadListPrec];

Foreign.C.Types.$fStorableCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CDouble
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableDouble_$calignment
                                                Foreign.Storable.$fStorableDouble_$calignment
                                                GHC.Storable.readDoubleOffPtr1
                                                GHC.Storable.writeDoubleOffPtr1
                                                Foreign.Storable.$fStorableDouble4
                                                Foreign.Storable.$fStorableDouble3
                                                Foreign.Storable.$fStorableDouble2
                                                Foreign.Storable.$fStorableDouble1];

Foreign.C.Types.$fEnumCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Float.$fEnumDouble_$csucc
                                    GHC.Float.$fEnumDouble_$cpred
                                    GHC.Float.RealFracMethods.int2Double
                                    GHC.Float.$fEnumDouble_$cfromEnum
                                    GHC.Float.$fEnumDouble_$snumericEnumFrom
                                    GHC.Float.$fEnumDouble_$snumericEnumFromThen
                                    GHC.Float.$fEnumDouble_$cenumFromTo
                                    GHC.Float.$fEnumDouble_$cenumFromThenTo];

Foreign.C.Types.$fNumCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CDouble
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Float.plusDouble
                                  GHC.Float.minusDouble
                                  GHC.Float.timesDouble
                                  GHC.Float.negateDouble
                                  GHC.Float.fabsDouble
                                  GHC.Float.$fNumDouble_$csignum
                                  GHC.Float.$fNumDouble_$cfromInteger];

Foreign.C.Types.$fFractionalCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Fractional Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Fractional! [Foreign.C.Types.$fNumCDouble
                                          GHC.Float.divideDouble
                                          GHC.Float.$fFractionalDouble_$crecip
                                          GHC.Float.$fFractionalDouble_$cfromRational];

Foreign.C.Types.$fFloatingCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Float.Floating Foreign.C.Types.CDouble
[GblId[DFunId]] =
    CCS_DONT_CARE GHC.Float.C:Floating! [Foreign.C.Types.$fFractionalCDouble
                                         GHC.Float.$fFloatingDouble_$cpi
                                         GHC.Float.expDouble
                                         GHC.Float.logDouble
                                         GHC.Float.sqrtDouble
                                         GHC.Float.powerDouble
                                         GHC.Float.$fFloatingDouble_$clogBase
                                         GHC.Float.sinDouble
                                         GHC.Float.cosDouble
                                         GHC.Float.tanDouble
                                         GHC.Float.asinDouble
                                         GHC.Float.acosDouble
                                         GHC.Float.atanDouble
                                         GHC.Float.sinhDouble
                                         GHC.Float.coshDouble
                                         GHC.Float.tanhDouble
                                         GHC.Float.$fFloatingDouble_$casinh
                                         GHC.Float.$fFloatingDouble_$cacosh
                                         GHC.Float.$fFloatingDouble_$catanh
                                         GHC.Float.log1pDouble
                                         GHC.Float.expm1Double
                                         GHC.Float.$fFloatingDouble_$clog1pexp
                                         GHC.Float.$fFloatingDouble_$clog1mexp];

Foreign.C.Types.$fEqCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CDouble
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Classes.eqDouble
                                     GHC.Classes.$fEqDouble_$c/=];

Foreign.C.Types.$fOrdCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CDouble
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCDouble
                                      GHC.Classes.$fOrdDouble_$ccompare
                                      GHC.Classes.$fOrdDouble_$c<
                                      GHC.Classes.$fOrdDouble_$c<=
                                      GHC.Classes.$fOrdDouble_$c>
                                      GHC.Classes.$fOrdDouble_$c>=
                                      GHC.Classes.$fOrdDouble_$cmax
                                      GHC.Classes.$fOrdDouble_$cmin];

Foreign.C.Types.$fRealCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCDouble
                                    Foreign.C.Types.$fOrdCDouble
                                    GHC.Float.$fRealDouble_$ctoRational];

Foreign.C.Types.$fRealFracCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.RealFrac Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:RealFrac! [Foreign.C.Types.$fRealCDouble
                                        Foreign.C.Types.$fFractionalCDouble
                                        GHC.Float.$fRealFracDouble_$cproperFraction
                                        GHC.Float.$fRealFracDouble_$ctruncate
                                        GHC.Float.$fRealFracDouble_$cround
                                        GHC.Float.$fRealFracDouble_$cceiling
                                        GHC.Float.$fRealFracDouble_$cfloor];

Foreign.C.Types.$fRealFloatCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Float.RealFloat Foreign.C.Types.CDouble
[GblId[DFunId]] =
    CCS_DONT_CARE GHC.Float.C:RealFloat! [Foreign.C.Types.$fRealFracCDouble
                                          Foreign.C.Types.$fFloatingCDouble
                                          GHC.Float.$fRealFloatDouble_$cfloatRadix
                                          GHC.Float.$fRealFloatDouble_$cfloatDigits
                                          GHC.Float.$fRealFloatDouble_$cfloatRange
                                          GHC.Float.$fRealFloatDouble_$cdecodeFloat
                                          GHC.Float.$fRealFloatDouble_$cencodeFloat
                                          GHC.Float.$fRealFloatDouble_$cexponent
                                          GHC.Float.$fRealFloatDouble_$csignificand
                                          GHC.Float.$fRealFloatDouble_$cscaleFloat
                                          GHC.Float.$fRealFloatDouble_$cisNaN
                                          GHC.Float.$fRealFloatDouble_$cisInfinite
                                          GHC.Float.$fRealFloatDouble_$cisDenormalized
                                          GHC.Float.$fRealFloatDouble_$cisNegativeZero
                                          GHC.Float.$fRealFloatDouble_$cisIEEE
                                          GHC.Float.$fRealFloatDouble_$catan2];

Foreign.C.Types.$fShowCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Float.$fShowFloat_$cshowsPrec
                                    GHC.Float.$fShowFloat_$cshow
                                    GHC.Float.$fShowFloat_$cshowList];

Foreign.C.Types.$fReadCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadFloat_$creadsPrec
                                    GHC.Read.$fReadFloat_$creadList
                                    GHC.Read.$fReadFloat1
                                    GHC.Read.$fReadFloat_$creadListPrec];

Foreign.C.Types.$fStorableCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CFloat
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableFloat_$calignment
                                                Foreign.Storable.$fStorableFloat_$calignment
                                                GHC.Storable.readFloatOffPtr1
                                                GHC.Storable.writeFloatOffPtr1
                                                Foreign.Storable.$fStorableFloat4
                                                Foreign.Storable.$fStorableFloat3
                                                Foreign.Storable.$fStorableFloat2
                                                Foreign.Storable.$fStorableFloat1];

Foreign.C.Types.$fEnumCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Float.$fEnumFloat_$csucc
                                    GHC.Float.$fEnumFloat_$cpred
                                    GHC.Float.RealFracMethods.int2Float
                                    GHC.Float.$fEnumFloat_$cfromEnum
                                    GHC.Float.$fEnumFloat_$snumericEnumFrom
                                    GHC.Float.$fEnumFloat_$snumericEnumFromThen
                                    GHC.Float.$fEnumFloat_$cenumFromTo
                                    GHC.Float.$fEnumFloat_$cenumFromThenTo];

Foreign.C.Types.$fNumCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CFloat
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Float.plusFloat
                                  GHC.Float.minusFloat
                                  GHC.Float.timesFloat
                                  GHC.Float.negateFloat
                                  GHC.Float.fabsFloat
                                  GHC.Float.$fNumFloat_$csignum
                                  GHC.Float.$fNumFloat_$cfromInteger];

Foreign.C.Types.$fFractionalCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Fractional Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Fractional! [Foreign.C.Types.$fNumCFloat
                                          GHC.Float.divideFloat
                                          GHC.Float.$fFractionalFloat_$crecip
                                          GHC.Float.$fFractionalFloat_$cfromRational];

Foreign.C.Types.$fFloatingCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Float.Floating Foreign.C.Types.CFloat
[GblId[DFunId]] =
    CCS_DONT_CARE GHC.Float.C:Floating! [Foreign.C.Types.$fFractionalCFloat
                                         GHC.Float.$fFloatingFloat_$cpi
                                         GHC.Float.expFloat
                                         GHC.Float.logFloat
                                         GHC.Float.sqrtFloat
                                         GHC.Float.powerFloat
                                         GHC.Float.$fFloatingFloat_$clogBase
                                         GHC.Float.sinFloat
                                         GHC.Float.cosFloat
                                         GHC.Float.tanFloat
                                         GHC.Float.asinFloat
                                         GHC.Float.acosFloat
                                         GHC.Float.atanFloat
                                         GHC.Float.sinhFloat
                                         GHC.Float.coshFloat
                                         GHC.Float.tanhFloat
                                         GHC.Float.$fFloatingFloat_$casinh
                                         GHC.Float.$fFloatingFloat_$cacosh
                                         GHC.Float.$fFloatingFloat_$catanh
                                         GHC.Float.log1pFloat
                                         GHC.Float.expm1Float
                                         GHC.Float.$fFloatingFloat_$clog1pexp
                                         GHC.Float.$fFloatingFloat_$clog1mexp];

Foreign.C.Types.$fEqCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CFloat
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Classes.eqFloat
                                     GHC.Classes.$fEqFloat_$c/=];

Foreign.C.Types.$fOrdCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CFloat
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCFloat
                                      GHC.Classes.$fOrdFloat_$ccompare
                                      GHC.Classes.$fOrdFloat_$c<
                                      GHC.Classes.$fOrdFloat_$c<=
                                      GHC.Classes.$fOrdFloat_$c>
                                      GHC.Classes.$fOrdFloat_$c>=
                                      GHC.Classes.$fOrdFloat_$cmax
                                      GHC.Classes.$fOrdFloat_$cmin];

Foreign.C.Types.$fRealCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCFloat
                                    Foreign.C.Types.$fOrdCFloat
                                    GHC.Float.$fRealFloat_$ctoRational];

Foreign.C.Types.$fRealFracCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.RealFrac Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:RealFrac! [Foreign.C.Types.$fRealCFloat
                                        Foreign.C.Types.$fFractionalCFloat
                                        GHC.Float.$fRealFracFloat_$cproperFraction
                                        GHC.Float.$fRealFracFloat_$ctruncate
                                        GHC.Float.$fRealFracFloat_$cround
                                        GHC.Float.$fRealFracFloat_$cceiling
                                        GHC.Float.$fRealFracFloat_$cfloor];

Foreign.C.Types.$fRealFloatCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Float.RealFloat Foreign.C.Types.CFloat
[GblId[DFunId]] =
    CCS_DONT_CARE GHC.Float.C:RealFloat! [Foreign.C.Types.$fRealFracCFloat
                                          Foreign.C.Types.$fFloatingCFloat
                                          GHC.Float.$fRealFloatFloat_$cfloatRadix
                                          GHC.Float.$fRealFloatFloat_$cfloatDigits
                                          GHC.Float.$fRealFloatFloat_$cfloatRange
                                          GHC.Float.$fRealFloatFloat_$cdecodeFloat
                                          GHC.Float.$fRealFloatFloat_$cencodeFloat
                                          GHC.Float.$fRealFloatFloat_$cexponent
                                          GHC.Float.$fRealFloatFloat_$csignificand
                                          GHC.Float.$fRealFloatFloat_$cscaleFloat
                                          GHC.Float.$fRealFloatFloat_$cisNaN
                                          GHC.Float.$fRealFloatFloat_$cisInfinite
                                          GHC.Float.$fRealFloatFloat_$cisDenormalized
                                          GHC.Float.$fRealFloatFloat_$cisNegativeZero
                                          GHC.Float.$fRealFloatFloat_$cisIEEE
                                          GHC.Float.$fRealFloatFloat_$catan2];

Foreign.C.Types.$fShowCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord8_$cshowsPrec
                                    GHC.Word.$fShowWord8_$cshow
                                    GHC.Word.$fShowWord8_$cshowList];

Foreign.C.Types.$fReadCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CBool
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord8_$creadsPrec
                                    GHC.Read.$fReadWord8_$creadList
                                    GHC.Read.$fReadWord17
                                    GHC.Read.$fReadWord14];

Foreign.C.Types.$fBoundedCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord8_$cminBound
                                       GHC.Word.$fBoundedWord8_$cmaxBound];

Foreign.C.Types.$fStorableCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord8_$calignment
                                                Foreign.Storable.$fStorableWord8_$calignment
                                                GHC.Storable.readWord8OffPtr1
                                                GHC.Storable.writeWord8OffPtr1
                                                Foreign.Storable.$fStorableWord22
                                                Foreign.Storable.$fStorableWord21
                                                Foreign.Storable.$fStorableWord20
                                                Foreign.Storable.$fStorableWord19];

Foreign.C.Types.$fEnumCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CBool
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord8_$csucc
                                    GHC.Word.$fEnumWord8_$cpred
                                    GHC.Word.$fEnumWord8_$ctoEnum
                                    GHC.Word.$fEnumWord8_$cfromEnum
                                    GHC.Word.$fEnumWord8_$cenumFrom
                                    GHC.Word.$fEnumWord8_$cenumFromThen
                                    GHC.Word.$fEnumWord8_$cenumFromTo
                                    GHC.Word.$fEnumWord8_$cenumFromThenTo];

Foreign.C.Types.$fNumCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord8_$c+
                                  GHC.Word.$fNumWord8_$c-
                                  GHC.Word.$fNumWord8_$c*
                                  GHC.Word.$fNumWord8_$cnegate
                                  GHC.Word.$fNumWord8_$cabs
                                  GHC.Word.$fNumWord8_$csignum
                                  GHC.Word.$fNumWord8_$cfromInteger];

Foreign.C.Types.$fEqCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord8
                                     GHC.Word.neWord8];

Foreign.C.Types.$fOrdCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCBool
                                      GHC.Word.$fOrdWord8_$ccompare
                                      GHC.Word.ltWord8
                                      GHC.Word.leWord8
                                      GHC.Word.gtWord8
                                      GHC.Word.geWord8
                                      GHC.Word.$fOrdWord8_$cmax
                                      GHC.Word.$fOrdWord8_$cmin];

Foreign.C.Types.$fRealCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CBool
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCBool
                                    Foreign.C.Types.$fOrdCBool
                                    GHC.Word.$fRealWord8_$ctoRational];

Foreign.C.Types.$fIntegralCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CBool
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCBool
                                        Foreign.C.Types.$fEnumCBool
                                        GHC.Word.$fIntegralWord8_$cquot
                                        GHC.Word.$fIntegralWord8_$crem
                                        GHC.Word.$fIntegralWord8_$cquot
                                        GHC.Word.$fIntegralWord8_$crem
                                        GHC.Word.$fIntegralWord8_$cquotRem
                                        GHC.Word.$fIntegralWord8_$cdivMod
                                        GHC.Word.$ctoInteger];

Foreign.C.Types.$fBitsCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCBool
                                     GHC.Word.$fBitsWord8_$c.&.
                                     GHC.Word.$fBitsWord8_$c.|.
                                     GHC.Word.$fBitsWord8_$cxor
                                     GHC.Word.$fBitsWord8_$ccomplement
                                     GHC.Word.$fBitsWord8_$cshift
                                     GHC.Word.$fBitsWord8_$crotate
                                     GHC.Word.$fBitsWord8_$cminBound
                                     GHC.Word.$fBitsWord8_$cbit
                                     GHC.Word.$fBitsWord8_$csetBit
                                     GHC.Word.$fBitsWord8_$cclearBit
                                     GHC.Word.$fBitsWord8_$ccomplementBit
                                     GHC.Word.$fBitsWord8_$ctestBit
                                     GHC.Word.$fBitsWord8_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord8_$cfiniteBitSize
                                     GHC.Word.$fBitsWord8_$cisSigned
                                     GHC.Word.$fBitsWord8_$cshiftL
                                     GHC.Word.$fBitsWord8_$cunsafeShiftL
                                     GHC.Word.$fBitsWord8_$cshiftR
                                     GHC.Word.$fBitsWord8_$cunsafeShiftR
                                     GHC.Word.$fBitsWord8_$crotateL
                                     GHC.Word.$fBitsWord8_$crotateR
                                     GHC.Word.$fBitsWord8_$cpopCount];

Foreign.C.Types.$fFiniteBitsCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCBool
                                           GHC.Word.$fBitsWord8_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord8_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord8_$ccountTrailingZeros];

Foreign.C.Types.$fShowCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CULLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord64_$cshowsPrec
                                    GHC.Word.$fShowWord64_$cshow
                                    GHC.Word.$fShowWord64_$cshowList];

Foreign.C.Types.$fReadCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CULLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord64_$creadsPrec
                                    GHC.Read.$fReadWord64_$creadList
                                    GHC.Read.$fReadWord13
                                    GHC.Read.$fReadWord11];

Foreign.C.Types.$fBoundedCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord7
                                       GHC.Word.$fBoundedWord64_$cmaxBound];

Foreign.C.Types.$fStorableCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord64_$calignment
                                                Foreign.Storable.$fStorableWord64_$calignment
                                                GHC.Storable.readWord64OffPtr1
                                                GHC.Storable.writeWord64OffPtr1
                                                Foreign.Storable.$fStorableWord18
                                                Foreign.Storable.$fStorableWord17
                                                Foreign.Storable.$fStorableWord15
                                                Foreign.Storable.$fStorableWord14];

Foreign.C.Types.$fEnumCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CULLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord64_$csucc
                                    GHC.Word.$fEnumWord64_$cpred
                                    GHC.Word.$fEnumWord64_$ctoEnum
                                    GHC.Word.$fEnumWord64_$cfromEnum
                                    GHC.Word.$fEnumWord64_$cenumFrom
                                    GHC.Word.$fEnumWord64_$cenumFromThen
                                    GHC.Word.$fEnumWord64_$cenumFromTo
                                    GHC.Word.$fEnumWord64_$cenumFromThenTo];

Foreign.C.Types.$fNumCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord64_$c+
                                  GHC.Word.$fNumWord64_$c-
                                  GHC.Word.$fNumWord64_$c*
                                  GHC.Word.$fNumWord64_$cnegate
                                  GHC.Word.$fNumWord64_$cabs
                                  GHC.Word.$fNumWord64_$csignum
                                  GHC.Word.$fNumWord64_$cfromInteger];

Foreign.C.Types.$fEqCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord64
                                     GHC.Word.neWord64];

Foreign.C.Types.$fOrdCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCULLong
                                      GHC.Word.$fOrdWord64_$ccompare
                                      GHC.Word.ltWord64
                                      GHC.Word.leWord64
                                      GHC.Word.gtWord64
                                      GHC.Word.geWord64
                                      GHC.Word.$fOrdWord64_$cmax
                                      GHC.Word.$fOrdWord64_$cmin];

Foreign.C.Types.$fRealCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CULLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCULLong
                                    Foreign.C.Types.$fOrdCULLong
                                    GHC.Word.$fRealWord64_$ctoRational];

Foreign.C.Types.$fIntegralCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CULLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCULLong
                                        Foreign.C.Types.$fEnumCULLong
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cquotRem
                                        GHC.Word.$fIntegralWord64_$cdivMod
                                        GHC.Word.$fIntegralWord64_$ctoInteger];

Foreign.C.Types.$fBitsCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCULLong
                                     GHC.Word.$fBitsWord64_$c.&.
                                     GHC.Word.$fBitsWord64_$c.|.
                                     GHC.Word.$fBitsWord64_$cxor
                                     GHC.Word.$fBitsWord64_$ccomplement
                                     GHC.Word.$fBitsWord64_$cshift
                                     GHC.Word.$fBitsWord64_$crotate
                                     GHC.Word.$fBitsWord7
                                     GHC.Word.$fBitsWord64_$cbit
                                     GHC.Word.$fBitsWord64_$csetBit
                                     GHC.Word.$fBitsWord64_$cclearBit
                                     GHC.Word.$fBitsWord64_$ccomplementBit
                                     GHC.Word.$fBitsWord64_$ctestBit
                                     GHC.Word.$fBitsWord64_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord64_$cfiniteBitSize
                                     GHC.Word.$fBitsWord64_$cisSigned
                                     GHC.Word.$fBitsWord64_$cshiftL
                                     GHC.Word.$fBitsWord64_$cunsafeShiftL
                                     GHC.Word.$fBitsWord64_$cshiftR
                                     GHC.Word.$fBitsWord64_$cunsafeShiftR
                                     GHC.Word.$fBitsWord64_$crotateL
                                     GHC.Word.$fBitsWord64_$crotateR
                                     GHC.Word.$fBitsWord64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCULLong
                                           GHC.Word.$fBitsWord64_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord64_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CLLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fBoundedCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt64_$cminBound
                                       GHC.Int.$fBoundedInt64_$cmaxBound];

Foreign.C.Types.$fStorableCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CLLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCLLong
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CLLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCLLong
                                    Foreign.C.Types.$fOrdCLLong
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fIntegralCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CLLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCLLong
                                        Foreign.C.Types.$fEnumCLLong
                                        GHC.Int.$fIntegralInt64_$cquot
                                        GHC.Int.$fIntegralInt64_$crem
                                        GHC.Int.$fIntegralInt64_$cdiv
                                        GHC.Int.$fIntegralInt64_$cmod
                                        GHC.Int.$fIntegralInt64_$cquotRem
                                        GHC.Int.$fIntegralInt64_$cdivMod
                                        GHC.Int.$fIntegralInt64_$ctoInteger];

Foreign.C.Types.$fBitsCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCLLong
                                     GHC.Int.$fBitsInt64_$c.&.
                                     GHC.Int.$fBitsInt64_$c.|.
                                     GHC.Int.$fBitsInt64_$cxor
                                     GHC.Int.$fBitsInt64_$ccomplement
                                     GHC.Int.$fBitsInt64_$cshift
                                     GHC.Int.$fBitsInt64_$crotate
                                     GHC.Int.$fBitsInt10
                                     GHC.Int.$fBitsInt64_$cbit
                                     GHC.Int.$fBitsInt64_$csetBit
                                     GHC.Int.$fBitsInt64_$cclearBit
                                     GHC.Int.$fBitsInt64_$ccomplementBit
                                     GHC.Int.$fBitsInt64_$ctestBit
                                     GHC.Int.$fBitsInt64_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt64_$cfiniteBitSize
                                     GHC.Int.$fBitsInt64_$cisSigned
                                     GHC.Int.$fBitsInt64_$cshiftL
                                     GHC.Int.$fBitsInt64_$cunsafeShiftL
                                     GHC.Int.$fBitsInt64_$cshiftR
                                     GHC.Int.$fBitsInt64_$cunsafeShiftR
                                     GHC.Int.$fBitsInt64_$crotateL
                                     GHC.Int.$fBitsInt64_$crotateR
                                     GHC.Int.$fBitsInt64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCLLong
                                           GHC.Int.$fBitsInt64_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CULong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord64_$cshowsPrec
                                    GHC.Word.$fShowWord64_$cshow
                                    GHC.Word.$fShowWord64_$cshowList];

Foreign.C.Types.$fReadCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CULong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord64_$creadsPrec
                                    GHC.Read.$fReadWord64_$creadList
                                    GHC.Read.$fReadWord13
                                    GHC.Read.$fReadWord11];

Foreign.C.Types.$fBoundedCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord7
                                       GHC.Word.$fBoundedWord64_$cmaxBound];

Foreign.C.Types.$fStorableCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord64_$calignment
                                                Foreign.Storable.$fStorableWord64_$calignment
                                                GHC.Storable.readWord64OffPtr1
                                                GHC.Storable.writeWord64OffPtr1
                                                Foreign.Storable.$fStorableWord18
                                                Foreign.Storable.$fStorableWord17
                                                Foreign.Storable.$fStorableWord15
                                                Foreign.Storable.$fStorableWord14];

Foreign.C.Types.$fEnumCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CULong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord64_$csucc
                                    GHC.Word.$fEnumWord64_$cpred
                                    GHC.Word.$fEnumWord64_$ctoEnum
                                    GHC.Word.$fEnumWord64_$cfromEnum
                                    GHC.Word.$fEnumWord64_$cenumFrom
                                    GHC.Word.$fEnumWord64_$cenumFromThen
                                    GHC.Word.$fEnumWord64_$cenumFromTo
                                    GHC.Word.$fEnumWord64_$cenumFromThenTo];

Foreign.C.Types.$fNumCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord64_$c+
                                  GHC.Word.$fNumWord64_$c-
                                  GHC.Word.$fNumWord64_$c*
                                  GHC.Word.$fNumWord64_$cnegate
                                  GHC.Word.$fNumWord64_$cabs
                                  GHC.Word.$fNumWord64_$csignum
                                  GHC.Word.$fNumWord64_$cfromInteger];

Foreign.C.Types.$fEqCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord64
                                     GHC.Word.neWord64];

Foreign.C.Types.$fOrdCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCULong
                                      GHC.Word.$fOrdWord64_$ccompare
                                      GHC.Word.ltWord64
                                      GHC.Word.leWord64
                                      GHC.Word.gtWord64
                                      GHC.Word.geWord64
                                      GHC.Word.$fOrdWord64_$cmax
                                      GHC.Word.$fOrdWord64_$cmin];

Foreign.C.Types.$fRealCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CULong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCULong
                                    Foreign.C.Types.$fOrdCULong
                                    GHC.Word.$fRealWord64_$ctoRational];

Foreign.C.Types.$fIntegralCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CULong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCULong
                                        Foreign.C.Types.$fEnumCULong
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cquotRem
                                        GHC.Word.$fIntegralWord64_$cdivMod
                                        GHC.Word.$fIntegralWord64_$ctoInteger];

Foreign.C.Types.$fBitsCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCULong
                                     GHC.Word.$fBitsWord64_$c.&.
                                     GHC.Word.$fBitsWord64_$c.|.
                                     GHC.Word.$fBitsWord64_$cxor
                                     GHC.Word.$fBitsWord64_$ccomplement
                                     GHC.Word.$fBitsWord64_$cshift
                                     GHC.Word.$fBitsWord64_$crotate
                                     GHC.Word.$fBitsWord7
                                     GHC.Word.$fBitsWord64_$cbit
                                     GHC.Word.$fBitsWord64_$csetBit
                                     GHC.Word.$fBitsWord64_$cclearBit
                                     GHC.Word.$fBitsWord64_$ccomplementBit
                                     GHC.Word.$fBitsWord64_$ctestBit
                                     GHC.Word.$fBitsWord64_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord64_$cfiniteBitSize
                                     GHC.Word.$fBitsWord64_$cisSigned
                                     GHC.Word.$fBitsWord64_$cshiftL
                                     GHC.Word.$fBitsWord64_$cunsafeShiftL
                                     GHC.Word.$fBitsWord64_$cshiftR
                                     GHC.Word.$fBitsWord64_$cunsafeShiftR
                                     GHC.Word.$fBitsWord64_$crotateL
                                     GHC.Word.$fBitsWord64_$crotateR
                                     GHC.Word.$fBitsWord64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCULong
                                           GHC.Word.$fBitsWord64_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord64_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fBoundedCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt64_$cminBound
                                       GHC.Int.$fBoundedInt64_$cmaxBound];

Foreign.C.Types.$fStorableCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCLong
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCLong
                                    Foreign.C.Types.$fOrdCLong
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fIntegralCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCLong
                                        Foreign.C.Types.$fEnumCLong
                                        GHC.Int.$fIntegralInt64_$cquot
                                        GHC.Int.$fIntegralInt64_$crem
                                        GHC.Int.$fIntegralInt64_$cdiv
                                        GHC.Int.$fIntegralInt64_$cmod
                                        GHC.Int.$fIntegralInt64_$cquotRem
                                        GHC.Int.$fIntegralInt64_$cdivMod
                                        GHC.Int.$fIntegralInt64_$ctoInteger];

Foreign.C.Types.$fBitsCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCLong
                                     GHC.Int.$fBitsInt64_$c.&.
                                     GHC.Int.$fBitsInt64_$c.|.
                                     GHC.Int.$fBitsInt64_$cxor
                                     GHC.Int.$fBitsInt64_$ccomplement
                                     GHC.Int.$fBitsInt64_$cshift
                                     GHC.Int.$fBitsInt64_$crotate
                                     GHC.Int.$fBitsInt10
                                     GHC.Int.$fBitsInt64_$cbit
                                     GHC.Int.$fBitsInt64_$csetBit
                                     GHC.Int.$fBitsInt64_$cclearBit
                                     GHC.Int.$fBitsInt64_$ccomplementBit
                                     GHC.Int.$fBitsInt64_$ctestBit
                                     GHC.Int.$fBitsInt64_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt64_$cfiniteBitSize
                                     GHC.Int.$fBitsInt64_$cisSigned
                                     GHC.Int.$fBitsInt64_$cshiftL
                                     GHC.Int.$fBitsInt64_$cunsafeShiftL
                                     GHC.Int.$fBitsInt64_$cshiftR
                                     GHC.Int.$fBitsInt64_$cunsafeShiftR
                                     GHC.Int.$fBitsInt64_$crotateL
                                     GHC.Int.$fBitsInt64_$crotateR
                                     GHC.Int.$fBitsInt64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCLong
                                           GHC.Int.$fBitsInt64_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord32_$cshowsPrec
                                    GHC.Word.$fShowWord32_$cshow
                                    GHC.Word.$fShowWord32_$cshowList];

Foreign.C.Types.$fReadCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord32_$creadsPrec
                                    GHC.Read.$fReadWord32_$creadList
                                    GHC.Read.$fReadWord10
                                    GHC.Read.$fReadWord7];

Foreign.C.Types.$fBoundedCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord32_$cminBound
                                       GHC.Word.$fBoundedWord32_$cmaxBound];

Foreign.C.Types.$fStorableCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord32_$calignment
                                                Foreign.Storable.$fStorableWord32_$calignment
                                                GHC.Storable.readWord32OffPtr1
                                                GHC.Storable.writeWord32OffPtr1
                                                Foreign.Storable.$fStorableWord13
                                                Foreign.Storable.$fStorableWord12
                                                Foreign.Storable.$fStorableWord11
                                                Foreign.Storable.$fStorableWord10];

Foreign.C.Types.$fEnumCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord32_$csucc
                                    GHC.Word.$fEnumWord32_$cpred
                                    GHC.Word.$fEnumWord32_$ctoEnum
                                    GHC.Word.$fEnumWord32_$cfromEnum
                                    GHC.Word.$fEnumWord32_$cenumFrom
                                    GHC.Word.$fEnumWord32_$cenumFromThen
                                    GHC.Word.$fEnumWord32_$cenumFromTo
                                    GHC.Word.$fEnumWord32_$cenumFromThenTo];

Foreign.C.Types.$fNumCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord32_$c+
                                  GHC.Word.$fNumWord32_$c-
                                  GHC.Word.$fNumWord32_$c*
                                  GHC.Word.$fNumWord32_$cnegate
                                  GHC.Word.$fNumWord32_$cabs
                                  GHC.Word.$fNumWord32_$csignum
                                  GHC.Word.$fNumWord32_$cfromInteger];

Foreign.C.Types.$fEqCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord32
                                     GHC.Word.neWord32];

Foreign.C.Types.$fOrdCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUInt
                                      GHC.Word.$fOrdWord32_$ccompare
                                      GHC.Word.ltWord32
                                      GHC.Word.leWord32
                                      GHC.Word.gtWord32
                                      GHC.Word.geWord32
                                      GHC.Word.$fOrdWord32_$cmax
                                      GHC.Word.$fOrdWord32_$cmin];

Foreign.C.Types.$fRealCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUInt
                                    Foreign.C.Types.$fOrdCUInt
                                    GHC.Word.$fRealWord32_$ctoRational];

Foreign.C.Types.$fIntegralCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CUInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCUInt
                                        Foreign.C.Types.$fEnumCUInt
                                        GHC.Word.$fIntegralWord32_$cquot
                                        GHC.Word.$fIntegralWord32_$crem
                                        GHC.Word.$fIntegralWord32_$cquot
                                        GHC.Word.$fIntegralWord32_$crem
                                        GHC.Word.$fIntegralWord32_$cquotRem
                                        GHC.Word.$fIntegralWord32_$cdivMod
                                        GHC.Word.$ctoInteger2];

Foreign.C.Types.$fBitsCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCUInt
                                     GHC.Word.$fBitsWord32_$c.&.
                                     GHC.Word.$fBitsWord32_$c.|.
                                     GHC.Word.$fBitsWord32_$cxor
                                     GHC.Word.$fBitsWord32_$ccomplement
                                     GHC.Word.$fBitsWord32_$cshift
                                     GHC.Word.$fBitsWord32_$crotate
                                     GHC.Word.$fBitsWord32_$cminBound
                                     GHC.Word.$fBitsWord32_$cbit
                                     GHC.Word.$fBitsWord32_$csetBit
                                     GHC.Word.$fBitsWord32_$cclearBit
                                     GHC.Word.$fBitsWord32_$ccomplementBit
                                     GHC.Word.$fBitsWord32_$ctestBit
                                     GHC.Word.$fBitsWord32_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord32_$cfiniteBitSize
                                     GHC.Word.$fBitsWord32_$cisSigned
                                     GHC.Word.$fBitsWord32_$cshiftL
                                     GHC.Word.$fBitsWord32_$cunsafeShiftL
                                     GHC.Word.$fBitsWord32_$cshiftR
                                     GHC.Word.$fBitsWord32_$cunsafeShiftR
                                     GHC.Word.$fBitsWord32_$crotateL
                                     GHC.Word.$fBitsWord32_$crotateR
                                     GHC.Word.$fBitsWord32_$cpopCount];

Foreign.C.Types.$fFiniteBitsCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCUInt
                                           GHC.Word.$fBitsWord32_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord32_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord32_$ccountTrailingZeros];

Foreign.C.Types.$fShowCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt32_$cshowsPrec
                                    GHC.Int.$fShowInt32_$cshow
                                    GHC.Int.$fShowInt32_$cshowList];

Foreign.C.Types.$fReadCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt32_$creadsPrec
                                    GHC.Int.$fReadInt32_$creadList
                                    GHC.Int.$fReadInt6
                                    GHC.Int.$fReadInt4];

Foreign.C.Types.$fBoundedCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt32_$cminBound
                                       GHC.Int.$fBoundedInt32_$cmaxBound];

Foreign.C.Types.$fStorableCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt32_$calignment
                                                Foreign.Storable.$fStorableInt32_$calignment
                                                GHC.Storable.readInt32OffPtr1
                                                GHC.Storable.writeInt32OffPtr1
                                                Foreign.Storable.$fStorableInt14
                                                Foreign.Storable.$fStorableInt13
                                                Foreign.Storable.$fStorableInt12
                                                Foreign.Storable.$fStorableInt11];

Foreign.C.Types.$fEnumCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt32_$csucc
                                    GHC.Int.$fEnumInt32_$cpred
                                    GHC.Int.$fEnumInt32_$ctoEnum
                                    GHC.Int.$fEnumInt32_$cfromEnum
                                    GHC.Int.$fEnumInt32_$cenumFrom
                                    GHC.Int.$fEnumInt32_$cenumFromThen
                                    GHC.Int.$fEnumInt32_$cenumFromTo
                                    GHC.Int.$fEnumInt32_$cenumFromThenTo];

Foreign.C.Types.$fNumCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt32_$c+
                                  GHC.Int.$fNumInt32_$c-
                                  GHC.Int.$fNumInt32_$c*
                                  GHC.Int.$fNumInt32_$cnegate
                                  GHC.Int.$fNumInt32_$cabs
                                  GHC.Int.$fNumInt32_$csignum
                                  GHC.Int.$fNumInt32_$cfromInteger];

Foreign.C.Types.$fEqCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt32 GHC.Int.neInt32];

Foreign.C.Types.$fOrdCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCInt
                                      GHC.Int.$fOrdInt32_$ccompare
                                      GHC.Int.ltInt32
                                      GHC.Int.leInt32
                                      GHC.Int.gtInt32
                                      GHC.Int.geInt32
                                      GHC.Int.$fOrdInt32_$cmax
                                      GHC.Int.$fOrdInt32_$cmin];

Foreign.C.Types.$fRealCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCInt
                                    Foreign.C.Types.$fOrdCInt
                                    GHC.Int.$fRealInt32_$ctoRational];

Foreign.C.Types.$fIntegralCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCInt
                                        Foreign.C.Types.$fEnumCInt
                                        GHC.Int.$fIntegralInt32_$cquot
                                        GHC.Int.$fIntegralInt32_$crem
                                        GHC.Int.$fIntegralInt32_$cdiv
                                        GHC.Int.$fIntegralInt32_$cmod
                                        GHC.Int.$fIntegralInt32_$cquotRem
                                        GHC.Int.$fIntegralInt32_$cdivMod
                                        GHC.Int.$fIntegralInt32_$ctoInteger];

Foreign.C.Types.$fBitsCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCInt
                                     GHC.Int.$fBitsInt32_$c.&.
                                     GHC.Int.$fBitsInt32_$c.|.
                                     GHC.Int.$fBitsInt32_$cxor
                                     GHC.Int.$fBitsInt32_$ccomplement
                                     GHC.Int.$fBitsInt32_$cshift
                                     GHC.Int.$fBitsInt32_$crotate
                                     GHC.Int.$fBitsInt6
                                     GHC.Int.$fBitsInt32_$cbit
                                     GHC.Int.$fBitsInt32_$csetBit
                                     GHC.Int.$fBitsInt32_$cclearBit
                                     GHC.Int.$fBitsInt32_$ccomplementBit
                                     GHC.Int.$fBitsInt32_$ctestBit
                                     GHC.Int.$fBitsInt32_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt32_$cfiniteBitSize
                                     GHC.Int.$fBitsInt32_$cisSigned
                                     GHC.Int.$fBitsInt32_$cshiftL
                                     GHC.Int.$fBitsInt32_$cunsafeShiftL
                                     GHC.Int.$fBitsInt32_$cshiftR
                                     GHC.Int.$fBitsInt32_$cunsafeShiftR
                                     GHC.Int.$fBitsInt32_$crotateL
                                     GHC.Int.$fBitsInt32_$crotateR
                                     GHC.Int.$fBitsInt32_$cpopCount];

Foreign.C.Types.$fFiniteBitsCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCInt
                                           GHC.Int.$fBitsInt32_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros];

Foreign.C.Types.$fShowCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord16_$cshowsPrec
                                    GHC.Word.$fShowWord16_$cshow
                                    GHC.Word.$fShowWord16_$cshowList];

Foreign.C.Types.$fReadCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord16_$creadsPrec
                                    GHC.Read.$fReadWord16_$creadList
                                    GHC.Read.$fReadWord6
                                    GHC.Read.$fReadWord4];

Foreign.C.Types.$fBoundedCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord16_$cminBound
                                       GHC.Word.$fBoundedWord16_$cmaxBound];

Foreign.C.Types.$fStorableCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord16_$calignment
                                                Foreign.Storable.$fStorableWord16_$calignment
                                                GHC.Storable.readWord16OffPtr1
                                                GHC.Storable.writeWord16OffPtr1
                                                Foreign.Storable.$fStorableWord9
                                                Foreign.Storable.$fStorableWord7
                                                Foreign.Storable.$fStorableWord6
                                                Foreign.Storable.$fStorableWord5];

Foreign.C.Types.$fEnumCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord16_$csucc
                                    GHC.Word.$fEnumWord16_$cpred
                                    GHC.Word.$fEnumWord16_$ctoEnum
                                    GHC.Word.$fEnumWord16_$cfromEnum
                                    GHC.Word.$fEnumWord16_$cenumFrom
                                    GHC.Word.$fEnumWord16_$cenumFromThen
                                    GHC.Word.$fEnumWord16_$cenumFromTo
                                    GHC.Word.$fEnumWord16_$cenumFromThenTo];

Foreign.C.Types.$fNumCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord16_$c+
                                  GHC.Word.$fNumWord16_$c-
                                  GHC.Word.$fNumWord16_$c*
                                  GHC.Word.$fNumWord16_$cnegate
                                  GHC.Word.$fNumWord16_$cabs
                                  GHC.Word.$fNumWord16_$csignum
                                  GHC.Word.$fNumWord16_$cfromInteger];

Foreign.C.Types.$fEqCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord16
                                     GHC.Word.neWord16];

Foreign.C.Types.$fOrdCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUShort
                                      GHC.Word.$fOrdWord16_$ccompare
                                      GHC.Word.ltWord16
                                      GHC.Word.leWord16
                                      GHC.Word.gtWord16
                                      GHC.Word.geWord16
                                      GHC.Word.$fOrdWord16_$cmax
                                      GHC.Word.$fOrdWord16_$cmin];

Foreign.C.Types.$fRealCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUShort
                                    Foreign.C.Types.$fOrdCUShort
                                    GHC.Word.$fRealWord16_$ctoRational];

Foreign.C.Types.$fIntegralCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CUShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCUShort
                                        Foreign.C.Types.$fEnumCUShort
                                        GHC.Word.$fIntegralWord16_$cquot
                                        GHC.Word.$fIntegralWord16_$crem
                                        GHC.Word.$fIntegralWord16_$cquot
                                        GHC.Word.$fIntegralWord16_$crem
                                        GHC.Word.$fIntegralWord16_$cquotRem
                                        GHC.Word.$fIntegralWord16_$cdivMod
                                        GHC.Word.$ctoInteger1];

Foreign.C.Types.$fBitsCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCUShort
                                     GHC.Word.$fBitsWord16_$c.&.
                                     GHC.Word.$fBitsWord16_$c.|.
                                     GHC.Word.$fBitsWord16_$cxor
                                     GHC.Word.$fBitsWord16_$ccomplement
                                     GHC.Word.$fBitsWord16_$cshift
                                     GHC.Word.$fBitsWord16_$crotate
                                     GHC.Word.$fBitsWord16_$cminBound
                                     GHC.Word.$fBitsWord16_$cbit
                                     GHC.Word.$fBitsWord16_$csetBit
                                     GHC.Word.$fBitsWord16_$cclearBit
                                     GHC.Word.$fBitsWord16_$ccomplementBit
                                     GHC.Word.$fBitsWord16_$ctestBit
                                     GHC.Word.$fBitsWord16_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord16_$cfiniteBitSize
                                     GHC.Word.$fBitsWord16_$cisSigned
                                     GHC.Word.$fBitsWord16_$cshiftL
                                     GHC.Word.$fBitsWord16_$cunsafeShiftL
                                     GHC.Word.$fBitsWord16_$cshiftR
                                     GHC.Word.$fBitsWord16_$cunsafeShiftR
                                     GHC.Word.$fBitsWord16_$crotateL
                                     GHC.Word.$fBitsWord16_$crotateR
                                     GHC.Word.$fBitsWord16_$cpopCount];

Foreign.C.Types.$fFiniteBitsCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCUShort
                                           GHC.Word.$fBitsWord16_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord16_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord16_$ccountTrailingZeros];

Foreign.C.Types.$fShowCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt16_$cshowsPrec
                                    GHC.Int.$fShowInt16_$cshow
                                    GHC.Int.$fShowInt16_$cshowList];

Foreign.C.Types.$fReadCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt16_$creadsPrec
                                    GHC.Int.$fReadInt16_$creadList
                                    GHC.Int.$fReadInt3
                                    GHC.Int.$fReadInt1];

Foreign.C.Types.$fBoundedCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt16_$cminBound
                                       GHC.Int.$fBoundedInt16_$cmaxBound];

Foreign.C.Types.$fStorableCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt16_$calignment
                                                Foreign.Storable.$fStorableInt16_$calignment
                                                GHC.Storable.readInt16OffPtr1
                                                GHC.Storable.writeInt16OffPtr1
                                                Foreign.Storable.$fStorableInt9
                                                Foreign.Storable.$fStorableInt7
                                                Foreign.Storable.$fStorableInt6
                                                Foreign.Storable.$fStorableInt5];

Foreign.C.Types.$fEnumCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt16_$csucc
                                    GHC.Int.$fEnumInt16_$cpred
                                    GHC.Int.$fEnumInt16_$ctoEnum
                                    GHC.Int.$fEnumInt16_$cfromEnum
                                    GHC.Int.$fEnumInt16_$cenumFrom
                                    GHC.Int.$fEnumInt16_$cenumFromThen
                                    GHC.Int.$fEnumInt16_$cenumFromTo
                                    GHC.Int.$fEnumInt16_$cenumFromThenTo];

Foreign.C.Types.$fNumCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt16_$c+
                                  GHC.Int.$fNumInt16_$c-
                                  GHC.Int.$fNumInt16_$c*
                                  GHC.Int.$fNumInt16_$cnegate
                                  GHC.Int.$fNumInt16_$cabs
                                  GHC.Int.$fNumInt16_$csignum
                                  GHC.Int.$fNumInt16_$cfromInteger];

Foreign.C.Types.$fEqCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt16 GHC.Int.neInt16];

Foreign.C.Types.$fOrdCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCShort
                                      GHC.Int.$fOrdInt16_$ccompare
                                      GHC.Int.ltInt16
                                      GHC.Int.leInt16
                                      GHC.Int.gtInt16
                                      GHC.Int.geInt16
                                      GHC.Int.$fOrdInt16_$cmax
                                      GHC.Int.$fOrdInt16_$cmin];

Foreign.C.Types.$fRealCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCShort
                                    Foreign.C.Types.$fOrdCShort
                                    GHC.Int.$fRealInt16_$ctoRational];

Foreign.C.Types.$fIntegralCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCShort
                                        Foreign.C.Types.$fEnumCShort
                                        GHC.Int.$fIntegralInt16_$cquot
                                        GHC.Int.$fIntegralInt16_$crem
                                        GHC.Int.$fIntegralInt16_$cdiv
                                        GHC.Int.$fIntegralInt16_$cmod
                                        GHC.Int.$fIntegralInt16_$cquotRem
                                        GHC.Int.$fIntegralInt16_$cdivMod
                                        GHC.Int.$fIntegralInt16_$ctoInteger];

Foreign.C.Types.$fBitsCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCShort
                                     GHC.Int.$fBitsInt16_$c.&.
                                     GHC.Int.$fBitsInt16_$c.|.
                                     GHC.Int.$fBitsInt16_$cxor
                                     GHC.Int.$fBitsInt16_$ccomplement
                                     GHC.Int.$fBitsInt16_$cshift
                                     GHC.Int.$fBitsInt16_$crotate
                                     GHC.Int.$fBitsInt3
                                     GHC.Int.$fBitsInt16_$cbit
                                     GHC.Int.$fBitsInt16_$csetBit
                                     GHC.Int.$fBitsInt16_$cclearBit
                                     GHC.Int.$fBitsInt16_$ccomplementBit
                                     GHC.Int.$fBitsInt16_$ctestBit
                                     GHC.Int.$fBitsInt16_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt16_$cfiniteBitSize
                                     GHC.Int.$fBitsInt16_$cisSigned
                                     GHC.Int.$fBitsInt16_$cshiftL
                                     GHC.Int.$fBitsInt16_$cunsafeShiftL
                                     GHC.Int.$fBitsInt16_$cshiftR
                                     GHC.Int.$fBitsInt16_$cunsafeShiftR
                                     GHC.Int.$fBitsInt16_$crotateL
                                     GHC.Int.$fBitsInt16_$crotateR
                                     GHC.Int.$fBitsInt16_$cpopCount];

Foreign.C.Types.$fFiniteBitsCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCShort
                                           GHC.Int.$fBitsInt16_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros];

Foreign.C.Types.$fShowCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord8_$cshowsPrec
                                    GHC.Word.$fShowWord8_$cshow
                                    GHC.Word.$fShowWord8_$cshowList];

Foreign.C.Types.$fReadCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord8_$creadsPrec
                                    GHC.Read.$fReadWord8_$creadList
                                    GHC.Read.$fReadWord17
                                    GHC.Read.$fReadWord14];

Foreign.C.Types.$fBoundedCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord8_$cminBound
                                       GHC.Word.$fBoundedWord8_$cmaxBound];

Foreign.C.Types.$fStorableCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord8_$calignment
                                                Foreign.Storable.$fStorableWord8_$calignment
                                                GHC.Storable.readWord8OffPtr1
                                                GHC.Storable.writeWord8OffPtr1
                                                Foreign.Storable.$fStorableWord22
                                                Foreign.Storable.$fStorableWord21
                                                Foreign.Storable.$fStorableWord20
                                                Foreign.Storable.$fStorableWord19];

Foreign.C.Types.$fEnumCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord8_$csucc
                                    GHC.Word.$fEnumWord8_$cpred
                                    GHC.Word.$fEnumWord8_$ctoEnum
                                    GHC.Word.$fEnumWord8_$cfromEnum
                                    GHC.Word.$fEnumWord8_$cenumFrom
                                    GHC.Word.$fEnumWord8_$cenumFromThen
                                    GHC.Word.$fEnumWord8_$cenumFromTo
                                    GHC.Word.$fEnumWord8_$cenumFromThenTo];

Foreign.C.Types.$fNumCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord8_$c+
                                  GHC.Word.$fNumWord8_$c-
                                  GHC.Word.$fNumWord8_$c*
                                  GHC.Word.$fNumWord8_$cnegate
                                  GHC.Word.$fNumWord8_$cabs
                                  GHC.Word.$fNumWord8_$csignum
                                  GHC.Word.$fNumWord8_$cfromInteger];

Foreign.C.Types.$fEqCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord8
                                     GHC.Word.neWord8];

Foreign.C.Types.$fOrdCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUChar
                                      GHC.Word.$fOrdWord8_$ccompare
                                      GHC.Word.ltWord8
                                      GHC.Word.leWord8
                                      GHC.Word.gtWord8
                                      GHC.Word.geWord8
                                      GHC.Word.$fOrdWord8_$cmax
                                      GHC.Word.$fOrdWord8_$cmin];

Foreign.C.Types.$fRealCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUChar
                                    Foreign.C.Types.$fOrdCUChar
                                    GHC.Word.$fRealWord8_$ctoRational];

Foreign.C.Types.$fIntegralCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CUChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCUChar
                                        Foreign.C.Types.$fEnumCUChar
                                        GHC.Word.$fIntegralWord8_$cquot
                                        GHC.Word.$fIntegralWord8_$crem
                                        GHC.Word.$fIntegralWord8_$cquot
                                        GHC.Word.$fIntegralWord8_$crem
                                        GHC.Word.$fIntegralWord8_$cquotRem
                                        GHC.Word.$fIntegralWord8_$cdivMod
                                        GHC.Word.$ctoInteger];

Foreign.C.Types.$fBitsCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCUChar
                                     GHC.Word.$fBitsWord8_$c.&.
                                     GHC.Word.$fBitsWord8_$c.|.
                                     GHC.Word.$fBitsWord8_$cxor
                                     GHC.Word.$fBitsWord8_$ccomplement
                                     GHC.Word.$fBitsWord8_$cshift
                                     GHC.Word.$fBitsWord8_$crotate
                                     GHC.Word.$fBitsWord8_$cminBound
                                     GHC.Word.$fBitsWord8_$cbit
                                     GHC.Word.$fBitsWord8_$csetBit
                                     GHC.Word.$fBitsWord8_$cclearBit
                                     GHC.Word.$fBitsWord8_$ccomplementBit
                                     GHC.Word.$fBitsWord8_$ctestBit
                                     GHC.Word.$fBitsWord8_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord8_$cfiniteBitSize
                                     GHC.Word.$fBitsWord8_$cisSigned
                                     GHC.Word.$fBitsWord8_$cshiftL
                                     GHC.Word.$fBitsWord8_$cunsafeShiftL
                                     GHC.Word.$fBitsWord8_$cshiftR
                                     GHC.Word.$fBitsWord8_$cunsafeShiftR
                                     GHC.Word.$fBitsWord8_$crotateL
                                     GHC.Word.$fBitsWord8_$crotateR
                                     GHC.Word.$fBitsWord8_$cpopCount];

Foreign.C.Types.$fFiniteBitsCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCUChar
                                           GHC.Word.$fBitsWord8_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord8_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord8_$ccountTrailingZeros];

Foreign.C.Types.$fShowCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt8_$cshowsPrec
                                    GHC.Int.$fShowInt8_$cshow
                                    GHC.Int.$fShowInt8_$cshowList];

Foreign.C.Types.$fReadCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CSChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt8_$creadsPrec
                                    GHC.Int.$fReadInt8_$creadList
                                    GHC.Int.$fReadInt13
                                    GHC.Int.$fReadInt11];

Foreign.C.Types.$fBoundedCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt8_$cminBound
                                       GHC.Int.$fBoundedInt8_$cmaxBound];

Foreign.C.Types.$fStorableCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt8_$calignment
                                                Foreign.Storable.$fStorableInt8_$calignment
                                                GHC.Storable.readInt8OffPtr1
                                                GHC.Storable.writeInt8OffPtr1
                                                Foreign.Storable.$fStorableInt23
                                                Foreign.Storable.$fStorableInt22
                                                Foreign.Storable.$fStorableInt21
                                                Foreign.Storable.$fStorableInt20];

Foreign.C.Types.$fEnumCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CSChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt8_$csucc
                                    GHC.Int.$fEnumInt8_$cpred
                                    GHC.Int.$fEnumInt8_$ctoEnum
                                    GHC.Int.$fEnumInt8_$cfromEnum
                                    GHC.Int.$fEnumInt8_$cenumFrom
                                    GHC.Int.$fEnumInt8_$cenumFromThen
                                    GHC.Int.$fEnumInt8_$cenumFromTo
                                    GHC.Int.$fEnumInt8_$cenumFromThenTo];

Foreign.C.Types.$fNumCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt8_$c+
                                  GHC.Int.$fNumInt8_$c-
                                  GHC.Int.$fNumInt8_$c*
                                  GHC.Int.$fNumInt8_$cnegate
                                  GHC.Int.$fNumInt8_$cabs
                                  GHC.Int.$fNumInt8_$csignum
                                  GHC.Int.$fNumInt8_$cfromInteger];

Foreign.C.Types.$fEqCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt8 GHC.Int.neInt8];

Foreign.C.Types.$fOrdCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCSChar
                                      GHC.Int.$fOrdInt8_$ccompare
                                      GHC.Int.ltInt8
                                      GHC.Int.leInt8
                                      GHC.Int.gtInt8
                                      GHC.Int.geInt8
                                      GHC.Int.$fOrdInt8_$cmax
                                      GHC.Int.$fOrdInt8_$cmin];

Foreign.C.Types.$fRealCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CSChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCSChar
                                    Foreign.C.Types.$fOrdCSChar
                                    GHC.Int.$fRealInt8_$ctoRational];

Foreign.C.Types.$fIntegralCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CSChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCSChar
                                        Foreign.C.Types.$fEnumCSChar
                                        GHC.Int.$fIntegralInt8_$cquot
                                        GHC.Int.$fIntegralInt8_$crem
                                        GHC.Int.$fIntegralInt8_$cdiv
                                        GHC.Int.$fIntegralInt8_$cmod
                                        GHC.Int.$fIntegralInt8_$cquotRem
                                        GHC.Int.$fIntegralInt8_$cdivMod
                                        GHC.Int.$fIntegralInt8_$ctoInteger];

Foreign.C.Types.$fBitsCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCSChar
                                     GHC.Int.$fBitsInt8_$c.&.
                                     GHC.Int.$fBitsInt8_$c.|.
                                     GHC.Int.$fBitsInt8_$cxor
                                     GHC.Int.$fBitsInt8_$ccomplement
                                     GHC.Int.$fBitsInt8_$cshift
                                     GHC.Int.$fBitsInt8_$crotate
                                     GHC.Int.$fBitsInt13
                                     GHC.Int.$fBitsInt8_$cbit
                                     GHC.Int.$fBitsInt8_$csetBit
                                     GHC.Int.$fBitsInt8_$cclearBit
                                     GHC.Int.$fBitsInt8_$ccomplementBit
                                     GHC.Int.$fBitsInt8_$ctestBit
                                     GHC.Int.$fBitsInt8_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt8_$cfiniteBitSize
                                     GHC.Int.$fBitsInt8_$cisSigned
                                     GHC.Int.$fBitsInt8_$cshiftL
                                     GHC.Int.$fBitsInt8_$cunsafeShiftL
                                     GHC.Int.$fBitsInt8_$cshiftR
                                     GHC.Int.$fBitsInt8_$cunsafeShiftR
                                     GHC.Int.$fBitsInt8_$crotateL
                                     GHC.Int.$fBitsInt8_$crotateR
                                     GHC.Int.$fBitsInt8_$cpopCount];

Foreign.C.Types.$fFiniteBitsCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCSChar
                                           GHC.Int.$fBitsInt8_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros];

Foreign.C.Types.$fShowCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt8_$cshowsPrec
                                    GHC.Int.$fShowInt8_$cshow
                                    GHC.Int.$fShowInt8_$cshowList];

Foreign.C.Types.$fReadCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt8_$creadsPrec
                                    GHC.Int.$fReadInt8_$creadList
                                    GHC.Int.$fReadInt13
                                    GHC.Int.$fReadInt11];

Foreign.C.Types.$fBoundedCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt8_$cminBound
                                       GHC.Int.$fBoundedInt8_$cmaxBound];

Foreign.C.Types.$fStorableCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt8_$calignment
                                                Foreign.Storable.$fStorableInt8_$calignment
                                                GHC.Storable.readInt8OffPtr1
                                                GHC.Storable.writeInt8OffPtr1
                                                Foreign.Storable.$fStorableInt23
                                                Foreign.Storable.$fStorableInt22
                                                Foreign.Storable.$fStorableInt21
                                                Foreign.Storable.$fStorableInt20];

Foreign.C.Types.$fEnumCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt8_$csucc
                                    GHC.Int.$fEnumInt8_$cpred
                                    GHC.Int.$fEnumInt8_$ctoEnum
                                    GHC.Int.$fEnumInt8_$cfromEnum
                                    GHC.Int.$fEnumInt8_$cenumFrom
                                    GHC.Int.$fEnumInt8_$cenumFromThen
                                    GHC.Int.$fEnumInt8_$cenumFromTo
                                    GHC.Int.$fEnumInt8_$cenumFromThenTo];

Foreign.C.Types.$fNumCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt8_$c+
                                  GHC.Int.$fNumInt8_$c-
                                  GHC.Int.$fNumInt8_$c*
                                  GHC.Int.$fNumInt8_$cnegate
                                  GHC.Int.$fNumInt8_$cabs
                                  GHC.Int.$fNumInt8_$csignum
                                  GHC.Int.$fNumInt8_$cfromInteger];

Foreign.C.Types.$fEqCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt8 GHC.Int.neInt8];

Foreign.C.Types.$fOrdCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCChar
                                      GHC.Int.$fOrdInt8_$ccompare
                                      GHC.Int.ltInt8
                                      GHC.Int.leInt8
                                      GHC.Int.gtInt8
                                      GHC.Int.geInt8
                                      GHC.Int.$fOrdInt8_$cmax
                                      GHC.Int.$fOrdInt8_$cmin];

Foreign.C.Types.$fRealCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCChar
                                    Foreign.C.Types.$fOrdCChar
                                    GHC.Int.$fRealInt8_$ctoRational];

Foreign.C.Types.$fIntegralCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCChar
                                        Foreign.C.Types.$fEnumCChar
                                        GHC.Int.$fIntegralInt8_$cquot
                                        GHC.Int.$fIntegralInt8_$crem
                                        GHC.Int.$fIntegralInt8_$cdiv
                                        GHC.Int.$fIntegralInt8_$cmod
                                        GHC.Int.$fIntegralInt8_$cquotRem
                                        GHC.Int.$fIntegralInt8_$cdivMod
                                        GHC.Int.$fIntegralInt8_$ctoInteger];

Foreign.C.Types.$fBitsCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCChar
                                     GHC.Int.$fBitsInt8_$c.&.
                                     GHC.Int.$fBitsInt8_$c.|.
                                     GHC.Int.$fBitsInt8_$cxor
                                     GHC.Int.$fBitsInt8_$ccomplement
                                     GHC.Int.$fBitsInt8_$cshift
                                     GHC.Int.$fBitsInt8_$crotate
                                     GHC.Int.$fBitsInt13
                                     GHC.Int.$fBitsInt8_$cbit
                                     GHC.Int.$fBitsInt8_$csetBit
                                     GHC.Int.$fBitsInt8_$cclearBit
                                     GHC.Int.$fBitsInt8_$ccomplementBit
                                     GHC.Int.$fBitsInt8_$ctestBit
                                     GHC.Int.$fBitsInt8_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt8_$cfiniteBitSize
                                     GHC.Int.$fBitsInt8_$cisSigned
                                     GHC.Int.$fBitsInt8_$cshiftL
                                     GHC.Int.$fBitsInt8_$cunsafeShiftL
                                     GHC.Int.$fBitsInt8_$cshiftR
                                     GHC.Int.$fBitsInt8_$cunsafeShiftR
                                     GHC.Int.$fBitsInt8_$crotateL
                                     GHC.Int.$fBitsInt8_$crotateR
                                     GHC.Int.$fBitsInt8_$cpopCount];

Foreign.C.Types.$fFiniteBitsCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCChar
                                           GHC.Int.$fBitsInt8_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros];

Foreign.C.Types.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Foreign.C.Types.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$trModule4];

Foreign.C.Types.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.C.Types"#;

Foreign.C.Types.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$trModule2];

Foreign.C.Types.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.C.Types.$trModule3
                                     Foreign.C.Types.$trModule1];

$krep_r54rc :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Int.$tcInt8
                                              GHC.Types.[]];

$krep1_r54rd :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Int.$tcInt16
                                              GHC.Types.[]];

$krep2_r54re :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord16
                                              GHC.Types.[]];

$krep3_r54rf :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord8
                                              GHC.Types.[]];

$krep4_r54rg :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcFloat
                                              GHC.Types.[]];

$krep5_r54rh :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcDouble
                                              GHC.Types.[]];

$krep6_r54ri :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Int.$tcInt32
                                              GHC.Types.[]];

$krep7_r54rj :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord32
                                              GHC.Types.[]];

$krep8_r54rk :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Int.$tcInt64
                                              GHC.Types.[]];

$krep9_r54rl :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord64
                                              GHC.Types.[]];

Foreign.C.Types.$tcCChar2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CChar"#;

Foreign.C.Types.$tcCChar1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCChar2];

Foreign.C.Types.$tcCChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2396474507734313709##
                                    6682082218532013927##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCChar1
                                    0#
                                    GHC.Types.krep$*];

$krep10_r54rm :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCChar
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CChar1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r54rc $krep10_r54rm];

Foreign.C.Types.$tc'CChar3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CChar"#;

Foreign.C.Types.$tc'CChar2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CChar3];

Foreign.C.Types.$tc'CChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16530466139966006137##
                                    10909368544422599906##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CChar2
                                    0#
                                    Foreign.C.Types.$tc'CChar1];

Foreign.C.Types.$tcCSChar2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CSChar"#;

Foreign.C.Types.$tcCSChar1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCSChar2];

Foreign.C.Types.$tcCSChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [670014241423056801##
                                    13143642922997006659##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCSChar1
                                    0#
                                    GHC.Types.krep$*];

$krep11_r54rn :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCSChar
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CSChar1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r54rc $krep11_r54rn];

Foreign.C.Types.$tc'CSChar3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CSChar"#;

Foreign.C.Types.$tc'CSChar2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CSChar3];

Foreign.C.Types.$tc'CSChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12967293744565543744##
                                    16172465149069937779##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CSChar2
                                    0#
                                    Foreign.C.Types.$tc'CSChar1];

Foreign.C.Types.$tcCUChar2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUChar"#;

Foreign.C.Types.$tcCUChar1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUChar2];

Foreign.C.Types.$tcCUChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8453544638672177657##
                                    4088140939900538118##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUChar1
                                    0#
                                    GHC.Types.krep$*];

$krep12_r54ro :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUChar
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUChar1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r54rf $krep12_r54ro];

Foreign.C.Types.$tc'CUChar3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUChar"#;

Foreign.C.Types.$tc'CUChar2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUChar3];

Foreign.C.Types.$tc'CUChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10663029171348202549##
                                    3183188510825835811##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUChar2
                                    0#
                                    Foreign.C.Types.$tc'CUChar1];

Foreign.C.Types.$tcCShort2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CShort"#;

Foreign.C.Types.$tcCShort1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCShort2];

Foreign.C.Types.$tcCShort :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14914560985572859509##
                                    5456450767128082830##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCShort1
                                    0#
                                    GHC.Types.krep$*];

$krep13_r54rp :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCShort
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CShort1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_r54rd $krep13_r54rp];

Foreign.C.Types.$tc'CShort3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CShort"#;

Foreign.C.Types.$tc'CShort2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CShort3];

Foreign.C.Types.$tc'CShort :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8012790609237483390##
                                    5585194063474609654##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CShort2
                                    0#
                                    Foreign.C.Types.$tc'CShort1];

Foreign.C.Types.$tcCUShort2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUShort"#;

Foreign.C.Types.$tcCUShort1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUShort2];

Foreign.C.Types.$tcCUShort :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8017488325625726968##
                                    17560577666502845853##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUShort1
                                    0#
                                    GHC.Types.krep$*];

$krep14_r54rq :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUShort
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUShort1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r54re $krep14_r54rq];

Foreign.C.Types.$tc'CUShort3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUShort"#;

Foreign.C.Types.$tc'CUShort2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUShort3];

Foreign.C.Types.$tc'CUShort :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [230481143628903571##
                                    69801006601599105##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUShort2
                                    0#
                                    Foreign.C.Types.$tc'CUShort1];

Foreign.C.Types.$tcCInt2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CInt"#;

Foreign.C.Types.$tcCInt1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCInt2];

Foreign.C.Types.$tcCInt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12436196710956858214##
                                    2085191951279969833##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCInt1
                                    0#
                                    GHC.Types.krep$*];

$krep15_r54rr :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCInt
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CInt1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep6_r54ri $krep15_r54rr];

Foreign.C.Types.$tc'CInt3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CInt"#;

Foreign.C.Types.$tc'CInt2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CInt3];

Foreign.C.Types.$tc'CInt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [1120313203669928333##
                                    2109434438009157121##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CInt2
                                    0#
                                    Foreign.C.Types.$tc'CInt1];

Foreign.C.Types.$tcCUInt2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUInt"#;

Foreign.C.Types.$tcCUInt1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUInt2];

Foreign.C.Types.$tcCUInt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14846027554880959849##
                                    1568033666229718172##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUInt1
                                    0#
                                    GHC.Types.krep$*];

$krep16_r54rs :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUInt
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUInt1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep7_r54rj $krep16_r54rs];

Foreign.C.Types.$tc'CUInt3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUInt"#;

Foreign.C.Types.$tc'CUInt2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUInt3];

Foreign.C.Types.$tc'CUInt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5056806206685987871##
                                    16269849959994571619##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUInt2
                                    0#
                                    Foreign.C.Types.$tc'CUInt1];

Foreign.C.Types.$tcCLong2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CLong"#;

Foreign.C.Types.$tcCLong1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCLong2];

Foreign.C.Types.$tcCLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10646618100418836143##
                                    9243001812621971743##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCLong1
                                    0#
                                    GHC.Types.krep$*];

$krep17_r54rt :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCLong
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CLong1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep17_r54rt];

Foreign.C.Types.$tc'CLong3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CLong"#;

Foreign.C.Types.$tc'CLong2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CLong3];

Foreign.C.Types.$tc'CLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3628484187667118205##
                                    18251486164209701606##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CLong2
                                    0#
                                    Foreign.C.Types.$tc'CLong1];

Foreign.C.Types.$tcCULong2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CULong"#;

Foreign.C.Types.$tcCULong1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCULong2];

Foreign.C.Types.$tcCULong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13895283310731510483##
                                    3072096496662073086##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCULong1
                                    0#
                                    GHC.Types.krep$*];

$krep18_r54ru :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCULong
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CULong1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r54rl $krep18_r54ru];

Foreign.C.Types.$tc'CULong3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CULong"#;

Foreign.C.Types.$tc'CULong2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CULong3];

Foreign.C.Types.$tc'CULong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15519685101152487835##
                                    12004583885240283077##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CULong2
                                    0#
                                    Foreign.C.Types.$tc'CULong1];

Foreign.C.Types.$tcCLLong2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CLLong"#;

Foreign.C.Types.$tcCLLong1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCLLong2];

Foreign.C.Types.$tcCLLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14244409577131416195##
                                    5952802457093262910##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCLLong1
                                    0#
                                    GHC.Types.krep$*];

$krep19_r54rv :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCLLong
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CLLong1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep19_r54rv];

Foreign.C.Types.$tc'CLLong3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CLLong"#;

Foreign.C.Types.$tc'CLLong2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CLLong3];

Foreign.C.Types.$tc'CLLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5567960549599469613##
                                    3143535471112770491##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CLLong2
                                    0#
                                    Foreign.C.Types.$tc'CLLong1];

Foreign.C.Types.$tcCULLong2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CULLong"#;

Foreign.C.Types.$tcCULLong1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCULLong2];

Foreign.C.Types.$tcCULLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12322165229137886614##
                                    18269851590527847329##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCULLong1
                                    0#
                                    GHC.Types.krep$*];

$krep20_r54rw :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCULLong
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CULLong1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r54rl $krep20_r54rw];

Foreign.C.Types.$tc'CULLong3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CULLong"#;

Foreign.C.Types.$tc'CULLong2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CULLong3];

Foreign.C.Types.$tc'CULLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3146513334079263607##
                                    15997303439394869846##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CULLong2
                                    0#
                                    Foreign.C.Types.$tc'CULLong1];

Foreign.C.Types.$tcCBool2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CBool"#;

Foreign.C.Types.$tcCBool1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCBool2];

Foreign.C.Types.$tcCBool :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2279337507396481328##
                                    13354832971938562972##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCBool1
                                    0#
                                    GHC.Types.krep$*];

$krep21_r54rx :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCBool
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CBool1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r54rf $krep21_r54rx];

Foreign.C.Types.$tc'CBool3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CBool"#;

Foreign.C.Types.$tc'CBool2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CBool3];

Foreign.C.Types.$tc'CBool :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7877573716786595125##
                                    10108068606237611138##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CBool2
                                    0#
                                    Foreign.C.Types.$tc'CBool1];

Foreign.C.Types.$tcCFloat2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CFloat"#;

Foreign.C.Types.$tcCFloat1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCFloat2];

Foreign.C.Types.$tcCFloat :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7535293774037760901##
                                    15755754912293552836##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCFloat1
                                    0#
                                    GHC.Types.krep$*];

$krep22_r54ry :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCFloat
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CFloat1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_r54rg $krep22_r54ry];

Foreign.C.Types.$tc'CFloat3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CFloat"#;

Foreign.C.Types.$tc'CFloat2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CFloat3];

Foreign.C.Types.$tc'CFloat :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14616473864857291281##
                                    17808868477168782076##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CFloat2
                                    0#
                                    Foreign.C.Types.$tc'CFloat1];

Foreign.C.Types.$tcCDouble2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CDouble"#;

Foreign.C.Types.$tcCDouble1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCDouble2];

Foreign.C.Types.$tcCDouble :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6818159078703101232##
                                    2532424603516558210##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCDouble1
                                    0#
                                    GHC.Types.krep$*];

$krep23_r54rz :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCDouble
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CDouble1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep5_r54rh $krep23_r54rz];

Foreign.C.Types.$tc'CDouble3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CDouble"#;

Foreign.C.Types.$tc'CDouble2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CDouble3];

Foreign.C.Types.$tc'CDouble :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17825589113792566821##
                                    2117840440117442278##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CDouble2
                                    0#
                                    Foreign.C.Types.$tc'CDouble1];

Foreign.C.Types.$tcCPtrdiff2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CPtrdiff"#;

Foreign.C.Types.$tcCPtrdiff1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCPtrdiff2];

Foreign.C.Types.$tcCPtrdiff :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17214415904810395203##
                                    17157228803030510849##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCPtrdiff1
                                    0#
                                    GHC.Types.krep$*];

$krep24_r54rA :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCPtrdiff
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CPtrdiff1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep24_r54rA];

Foreign.C.Types.$tc'CPtrdiff3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CPtrdiff"#;

Foreign.C.Types.$tc'CPtrdiff2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CPtrdiff3];

Foreign.C.Types.$tc'CPtrdiff :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11471205784925482390##
                                    4232446785647106570##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CPtrdiff2
                                    0#
                                    Foreign.C.Types.$tc'CPtrdiff1];

Foreign.C.Types.$tcCSize2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CSize"#;

Foreign.C.Types.$tcCSize1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCSize2];

Foreign.C.Types.$tcCSize :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13349225497583392568##
                                    2637756187933719306##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCSize1
                                    0#
                                    GHC.Types.krep$*];

$krep25_r54rB :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCSize
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CSize1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r54rl $krep25_r54rB];

Foreign.C.Types.$tc'CSize3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CSize"#;

Foreign.C.Types.$tc'CSize2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CSize3];

Foreign.C.Types.$tc'CSize :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10732574519801736620##
                                    9582148817759369933##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CSize2
                                    0#
                                    Foreign.C.Types.$tc'CSize1];

Foreign.C.Types.$tcCWchar2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CWchar"#;

Foreign.C.Types.$tcCWchar1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCWchar2];

Foreign.C.Types.$tcCWchar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17109569786881617348##
                                    12848424059160789567##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCWchar1
                                    0#
                                    GHC.Types.krep$*];

$krep26_r54rC :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCWchar
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CWchar1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep6_r54ri $krep26_r54rC];

Foreign.C.Types.$tc'CWchar3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CWchar"#;

Foreign.C.Types.$tc'CWchar2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CWchar3];

Foreign.C.Types.$tc'CWchar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12847418893300185693##
                                    10342021236626115560##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CWchar2
                                    0#
                                    Foreign.C.Types.$tc'CWchar1];

Foreign.C.Types.$tcCSigAtomic2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CSigAtomic"#;

Foreign.C.Types.$tcCSigAtomic1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCSigAtomic2];

Foreign.C.Types.$tcCSigAtomic :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10964102087567040849##
                                    4732914489126451968##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCSigAtomic1
                                    0#
                                    GHC.Types.krep$*];

$krep27_r54rD :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCSigAtomic
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CSigAtomic1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep6_r54ri $krep27_r54rD];

Foreign.C.Types.$tc'CSigAtomic3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CSigAtomic"#;

Foreign.C.Types.$tc'CSigAtomic2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CSigAtomic3];

Foreign.C.Types.$tc'CSigAtomic :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13396342001631048434##
                                    10235017041220212375##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CSigAtomic2
                                    0#
                                    Foreign.C.Types.$tc'CSigAtomic1];

Foreign.C.Types.$tcCClock2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CClock"#;

Foreign.C.Types.$tcCClock1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCClock2];

Foreign.C.Types.$tcCClock :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4014099957796664594##
                                    16004588873343805550##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCClock1
                                    0#
                                    GHC.Types.krep$*];

$krep28_r54rE :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCClock
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CClock1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep28_r54rE];

Foreign.C.Types.$tc'CClock3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CClock"#;

Foreign.C.Types.$tc'CClock2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CClock3];

Foreign.C.Types.$tc'CClock :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7016713985082915031##
                                    17346134655367323413##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CClock2
                                    0#
                                    Foreign.C.Types.$tc'CClock1];

Foreign.C.Types.$tcCTime2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CTime"#;

Foreign.C.Types.$tcCTime1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCTime2];

Foreign.C.Types.$tcCTime :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6217075761792864271##
                                    2605806391289821578##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCTime1
                                    0#
                                    GHC.Types.krep$*];

$krep29_r54rF :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCTime
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CTime1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep29_r54rF];

Foreign.C.Types.$tc'CTime3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CTime"#;

Foreign.C.Types.$tc'CTime2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CTime3];

Foreign.C.Types.$tc'CTime :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17509316711753497463##
                                    1311689641528100086##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CTime2
                                    0#
                                    Foreign.C.Types.$tc'CTime1];

Foreign.C.Types.$tcCUSeconds2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUSeconds"#;

Foreign.C.Types.$tcCUSeconds1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUSeconds2];

Foreign.C.Types.$tcCUSeconds :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17405471525584189701##
                                    2346565657742720464##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUSeconds1
                                    0#
                                    GHC.Types.krep$*];

$krep30_r54rG :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUSeconds
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUSeconds1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep7_r54rj $krep30_r54rG];

Foreign.C.Types.$tc'CUSeconds3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUSeconds"#;

Foreign.C.Types.$tc'CUSeconds2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUSeconds3];

Foreign.C.Types.$tc'CUSeconds :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [1636377087964720166##
                                    9077913612209140483##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUSeconds2
                                    0#
                                    Foreign.C.Types.$tc'CUSeconds1];

Foreign.C.Types.$tcCSUSeconds2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CSUSeconds"#;

Foreign.C.Types.$tcCSUSeconds1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCSUSeconds2];

Foreign.C.Types.$tcCSUSeconds :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17742176050705091078##
                                    4953235515970284689##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCSUSeconds1
                                    0#
                                    GHC.Types.krep$*];

$krep31_r54rH :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCSUSeconds
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CSUSeconds1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep31_r54rH];

Foreign.C.Types.$tc'CSUSeconds3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CSUSeconds"#;

Foreign.C.Types.$tc'CSUSeconds2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CSUSeconds3];

Foreign.C.Types.$tc'CSUSeconds :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [1705325731812814046##
                                    1387105441940513020##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CSUSeconds2
                                    0#
                                    Foreign.C.Types.$tc'CSUSeconds1];

Foreign.C.Types.$tcCFile2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CFile"#;

Foreign.C.Types.$tcCFile1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCFile2];

Foreign.C.Types.$tcCFile :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14154907999347903425##
                                    1814172269682152286##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCFile1
                                    0#
                                    GHC.Types.krep$*];

Foreign.C.Types.$tc'CFile1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCFile
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CFile3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CFile"#;

Foreign.C.Types.$tc'CFile2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CFile3];

Foreign.C.Types.$tc'CFile :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12302197724313820129##
                                    4785193272387875481##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CFile2
                                    0#
                                    Foreign.C.Types.$tc'CFile1];

Foreign.C.Types.$tcCFpos2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CFpos"#;

Foreign.C.Types.$tcCFpos1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCFpos2];

Foreign.C.Types.$tcCFpos :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16874339295908012189##
                                    2656467663994338805##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCFpos1
                                    0#
                                    GHC.Types.krep$*];

Foreign.C.Types.$tc'CFpos1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCFpos
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CFpos3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CFpos"#;

Foreign.C.Types.$tc'CFpos2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CFpos3];

Foreign.C.Types.$tc'CFpos :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [18279263347003670163##
                                    11699892855938511932##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CFpos2
                                    0#
                                    Foreign.C.Types.$tc'CFpos1];

Foreign.C.Types.$tcCJmpBuf2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CJmpBuf"#;

Foreign.C.Types.$tcCJmpBuf1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCJmpBuf2];

Foreign.C.Types.$tcCJmpBuf :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5219762936910773001##
                                    5563521999894797471##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCJmpBuf1
                                    0#
                                    GHC.Types.krep$*];

Foreign.C.Types.$tc'CJmpBuf1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCJmpBuf
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CJmpBuf3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CJmpBuf"#;

Foreign.C.Types.$tc'CJmpBuf2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CJmpBuf3];

Foreign.C.Types.$tc'CJmpBuf :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8278531976244408132##
                                    11989261641992411619##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CJmpBuf2
                                    0#
                                    Foreign.C.Types.$tc'CJmpBuf1];

Foreign.C.Types.$tcCIntPtr2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CIntPtr"#;

Foreign.C.Types.$tcCIntPtr1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCIntPtr2];

Foreign.C.Types.$tcCIntPtr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4666846936648130190##
                                    1074292558155745783##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCIntPtr1
                                    0#
                                    GHC.Types.krep$*];

$krep32_r54rI :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCIntPtr
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CIntPtr1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep32_r54rI];

Foreign.C.Types.$tc'CIntPtr3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CIntPtr"#;

Foreign.C.Types.$tc'CIntPtr2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CIntPtr3];

Foreign.C.Types.$tc'CIntPtr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14193281566492847253##
                                    11429158215235451511##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CIntPtr2
                                    0#
                                    Foreign.C.Types.$tc'CIntPtr1];

Foreign.C.Types.$tcCUIntPtr2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUIntPtr"#;

Foreign.C.Types.$tcCUIntPtr1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUIntPtr2];

Foreign.C.Types.$tcCUIntPtr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3784320557383063626##
                                    5356790357315597843##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUIntPtr1
                                    0#
                                    GHC.Types.krep$*];

$krep33_r54rJ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUIntPtr
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUIntPtr1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r54rl $krep33_r54rJ];

Foreign.C.Types.$tc'CUIntPtr3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUIntPtr"#;

Foreign.C.Types.$tc'CUIntPtr2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUIntPtr3];

Foreign.C.Types.$tc'CUIntPtr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13898690391388793946##
                                    494854583711937458##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUIntPtr2
                                    0#
                                    Foreign.C.Types.$tc'CUIntPtr1];

Foreign.C.Types.$tcCIntMax2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CIntMax"#;

Foreign.C.Types.$tcCIntMax1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCIntMax2];

Foreign.C.Types.$tcCIntMax :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12739001320308858558##
                                    4975233500487868495##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCIntMax1
                                    0#
                                    GHC.Types.krep$*];

$krep34_r54rK :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCIntMax
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CIntMax1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep34_r54rK];

Foreign.C.Types.$tc'CIntMax3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CIntMax"#;

Foreign.C.Types.$tc'CIntMax2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CIntMax3];

Foreign.C.Types.$tc'CIntMax :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2671575007670815434##
                                    14572633195159182874##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CIntMax2
                                    0#
                                    Foreign.C.Types.$tc'CIntMax1];

Foreign.C.Types.$tcCUIntMax2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUIntMax"#;

Foreign.C.Types.$tcCUIntMax1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUIntMax2];

Foreign.C.Types.$tcCUIntMax :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10275136122733258480##
                                    14814319483566909713##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUIntMax1
                                    0#
                                    GHC.Types.krep$*];

$krep35_r54rL :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUIntMax
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUIntMax1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r54rl $krep35_r54rL];

Foreign.C.Types.$tc'CUIntMax3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUIntMax"#;

Foreign.C.Types.$tc'CUIntMax2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUIntMax3];

Foreign.C.Types.$tc'CUIntMax :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4605074089694102640##
                                    11721661597354817794##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUIntMax2
                                    0#
                                    Foreign.C.Types.$tc'CUIntMax1];

Foreign.C.Types.CJmpBuf :: Foreign.C.Types.CJmpBuf
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE Foreign.C.Types.CJmpBuf! [];

Foreign.C.Types.CFpos :: Foreign.C.Types.CFpos
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE Foreign.C.Types.CFpos! [];

Foreign.C.Types.CFile :: Foreign.C.Types.CFile
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE Foreign.C.Types.CFile! [];


==================== STG syntax: ====================
2018-03-16 15:59:59.749174614 UTC

Foreign.C.Types.$fShowCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord64_$cshowsPrec
                                    GHC.Word.$fShowWord64_$cshow
                                    GHC.Word.$fShowWord64_$cshowList];

Foreign.C.Types.$fReadCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord64_$creadsPrec
                                    GHC.Read.$fReadWord64_$creadList
                                    GHC.Read.$fReadWord13
                                    GHC.Read.$fReadWord11];

Foreign.C.Types.$fBoundedCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord7
                                       GHC.Word.$fBoundedWord64_$cmaxBound];

Foreign.C.Types.$fStorableCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord64_$calignment
                                                Foreign.Storable.$fStorableWord64_$calignment
                                                GHC.Storable.readWord64OffPtr1
                                                GHC.Storable.writeWord64OffPtr1
                                                Foreign.Storable.$fStorableWord18
                                                Foreign.Storable.$fStorableWord17
                                                Foreign.Storable.$fStorableWord15
                                                Foreign.Storable.$fStorableWord14];

Foreign.C.Types.$fEnumCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord64_$csucc
                                    GHC.Word.$fEnumWord64_$cpred
                                    GHC.Word.$fEnumWord64_$ctoEnum
                                    GHC.Word.$fEnumWord64_$cfromEnum
                                    GHC.Word.$fEnumWord64_$cenumFrom
                                    GHC.Word.$fEnumWord64_$cenumFromThen
                                    GHC.Word.$fEnumWord64_$cenumFromTo
                                    GHC.Word.$fEnumWord64_$cenumFromThenTo];

Foreign.C.Types.$fNumCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord64_$c+
                                  GHC.Word.$fNumWord64_$c-
                                  GHC.Word.$fNumWord64_$c*
                                  GHC.Word.$fNumWord64_$cnegate
                                  GHC.Word.$fNumWord64_$cabs
                                  GHC.Word.$fNumWord64_$csignum
                                  GHC.Word.$fNumWord64_$cfromInteger];

Foreign.C.Types.$fEqCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord64
                                     GHC.Word.neWord64];

Foreign.C.Types.$fOrdCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUIntMax
                                      GHC.Word.$fOrdWord64_$ccompare
                                      GHC.Word.ltWord64
                                      GHC.Word.leWord64
                                      GHC.Word.gtWord64
                                      GHC.Word.geWord64
                                      GHC.Word.$fOrdWord64_$cmax
                                      GHC.Word.$fOrdWord64_$cmin];

Foreign.C.Types.$fRealCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUIntMax
                                    Foreign.C.Types.$fOrdCUIntMax
                                    GHC.Word.$fRealWord64_$ctoRational];

Foreign.C.Types.$fIntegralCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CUIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCUIntMax
                                        Foreign.C.Types.$fEnumCUIntMax
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cquotRem
                                        GHC.Word.$fIntegralWord64_$cdivMod
                                        GHC.Word.$fIntegralWord64_$ctoInteger];

Foreign.C.Types.$fBitsCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCUIntMax
                                     GHC.Word.$fBitsWord64_$c.&.
                                     GHC.Word.$fBitsWord64_$c.|.
                                     GHC.Word.$fBitsWord64_$cxor
                                     GHC.Word.$fBitsWord64_$ccomplement
                                     GHC.Word.$fBitsWord64_$cshift
                                     GHC.Word.$fBitsWord64_$crotate
                                     GHC.Word.$fBitsWord7
                                     GHC.Word.$fBitsWord64_$cbit
                                     GHC.Word.$fBitsWord64_$csetBit
                                     GHC.Word.$fBitsWord64_$cclearBit
                                     GHC.Word.$fBitsWord64_$ccomplementBit
                                     GHC.Word.$fBitsWord64_$ctestBit
                                     GHC.Word.$fBitsWord64_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord64_$cfiniteBitSize
                                     GHC.Word.$fBitsWord64_$cisSigned
                                     GHC.Word.$fBitsWord64_$cshiftL
                                     GHC.Word.$fBitsWord64_$cunsafeShiftL
                                     GHC.Word.$fBitsWord64_$cshiftR
                                     GHC.Word.$fBitsWord64_$cunsafeShiftR
                                     GHC.Word.$fBitsWord64_$crotateL
                                     GHC.Word.$fBitsWord64_$crotateR
                                     GHC.Word.$fBitsWord64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCUIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CUIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCUIntMax
                                           GHC.Word.$fBitsWord64_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord64_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fBoundedCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt64_$cminBound
                                       GHC.Int.$fBoundedInt64_$cmaxBound];

Foreign.C.Types.$fStorableCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCIntMax
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCIntMax
                                    Foreign.C.Types.$fOrdCIntMax
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fIntegralCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CIntMax
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCIntMax
                                        Foreign.C.Types.$fEnumCIntMax
                                        GHC.Int.$fIntegralInt64_$cquot
                                        GHC.Int.$fIntegralInt64_$crem
                                        GHC.Int.$fIntegralInt64_$cdiv
                                        GHC.Int.$fIntegralInt64_$cmod
                                        GHC.Int.$fIntegralInt64_$cquotRem
                                        GHC.Int.$fIntegralInt64_$cdivMod
                                        GHC.Int.$fIntegralInt64_$ctoInteger];

Foreign.C.Types.$fBitsCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCIntMax
                                     GHC.Int.$fBitsInt64_$c.&.
                                     GHC.Int.$fBitsInt64_$c.|.
                                     GHC.Int.$fBitsInt64_$cxor
                                     GHC.Int.$fBitsInt64_$ccomplement
                                     GHC.Int.$fBitsInt64_$cshift
                                     GHC.Int.$fBitsInt64_$crotate
                                     GHC.Int.$fBitsInt10
                                     GHC.Int.$fBitsInt64_$cbit
                                     GHC.Int.$fBitsInt64_$csetBit
                                     GHC.Int.$fBitsInt64_$cclearBit
                                     GHC.Int.$fBitsInt64_$ccomplementBit
                                     GHC.Int.$fBitsInt64_$ctestBit
                                     GHC.Int.$fBitsInt64_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt64_$cfiniteBitSize
                                     GHC.Int.$fBitsInt64_$cisSigned
                                     GHC.Int.$fBitsInt64_$cshiftL
                                     GHC.Int.$fBitsInt64_$cunsafeShiftL
                                     GHC.Int.$fBitsInt64_$cshiftR
                                     GHC.Int.$fBitsInt64_$cunsafeShiftR
                                     GHC.Int.$fBitsInt64_$crotateL
                                     GHC.Int.$fBitsInt64_$crotateR
                                     GHC.Int.$fBitsInt64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCIntMax [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CIntMax
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCIntMax
                                           GHC.Int.$fBitsInt64_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord64_$cshowsPrec
                                    GHC.Word.$fShowWord64_$cshow
                                    GHC.Word.$fShowWord64_$cshowList];

Foreign.C.Types.$fReadCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord64_$creadsPrec
                                    GHC.Read.$fReadWord64_$creadList
                                    GHC.Read.$fReadWord13
                                    GHC.Read.$fReadWord11];

Foreign.C.Types.$fBoundedCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord7
                                       GHC.Word.$fBoundedWord64_$cmaxBound];

Foreign.C.Types.$fStorableCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord64_$calignment
                                                Foreign.Storable.$fStorableWord64_$calignment
                                                GHC.Storable.readWord64OffPtr1
                                                GHC.Storable.writeWord64OffPtr1
                                                Foreign.Storable.$fStorableWord18
                                                Foreign.Storable.$fStorableWord17
                                                Foreign.Storable.$fStorableWord15
                                                Foreign.Storable.$fStorableWord14];

Foreign.C.Types.$fEnumCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord64_$csucc
                                    GHC.Word.$fEnumWord64_$cpred
                                    GHC.Word.$fEnumWord64_$ctoEnum
                                    GHC.Word.$fEnumWord64_$cfromEnum
                                    GHC.Word.$fEnumWord64_$cenumFrom
                                    GHC.Word.$fEnumWord64_$cenumFromThen
                                    GHC.Word.$fEnumWord64_$cenumFromTo
                                    GHC.Word.$fEnumWord64_$cenumFromThenTo];

Foreign.C.Types.$fNumCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord64_$c+
                                  GHC.Word.$fNumWord64_$c-
                                  GHC.Word.$fNumWord64_$c*
                                  GHC.Word.$fNumWord64_$cnegate
                                  GHC.Word.$fNumWord64_$cabs
                                  GHC.Word.$fNumWord64_$csignum
                                  GHC.Word.$fNumWord64_$cfromInteger];

Foreign.C.Types.$fEqCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord64
                                     GHC.Word.neWord64];

Foreign.C.Types.$fOrdCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUIntPtr
                                      GHC.Word.$fOrdWord64_$ccompare
                                      GHC.Word.ltWord64
                                      GHC.Word.leWord64
                                      GHC.Word.gtWord64
                                      GHC.Word.geWord64
                                      GHC.Word.$fOrdWord64_$cmax
                                      GHC.Word.$fOrdWord64_$cmin];

Foreign.C.Types.$fRealCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUIntPtr
                                    Foreign.C.Types.$fOrdCUIntPtr
                                    GHC.Word.$fRealWord64_$ctoRational];

Foreign.C.Types.$fIntegralCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CUIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCUIntPtr
                                        Foreign.C.Types.$fEnumCUIntPtr
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cquotRem
                                        GHC.Word.$fIntegralWord64_$cdivMod
                                        GHC.Word.$fIntegralWord64_$ctoInteger];

Foreign.C.Types.$fBitsCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCUIntPtr
                                     GHC.Word.$fBitsWord64_$c.&.
                                     GHC.Word.$fBitsWord64_$c.|.
                                     GHC.Word.$fBitsWord64_$cxor
                                     GHC.Word.$fBitsWord64_$ccomplement
                                     GHC.Word.$fBitsWord64_$cshift
                                     GHC.Word.$fBitsWord64_$crotate
                                     GHC.Word.$fBitsWord7
                                     GHC.Word.$fBitsWord64_$cbit
                                     GHC.Word.$fBitsWord64_$csetBit
                                     GHC.Word.$fBitsWord64_$cclearBit
                                     GHC.Word.$fBitsWord64_$ccomplementBit
                                     GHC.Word.$fBitsWord64_$ctestBit
                                     GHC.Word.$fBitsWord64_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord64_$cfiniteBitSize
                                     GHC.Word.$fBitsWord64_$cisSigned
                                     GHC.Word.$fBitsWord64_$cshiftL
                                     GHC.Word.$fBitsWord64_$cunsafeShiftL
                                     GHC.Word.$fBitsWord64_$cshiftR
                                     GHC.Word.$fBitsWord64_$cunsafeShiftR
                                     GHC.Word.$fBitsWord64_$crotateL
                                     GHC.Word.$fBitsWord64_$crotateR
                                     GHC.Word.$fBitsWord64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCUIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CUIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCUIntPtr
                                           GHC.Word.$fBitsWord64_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord64_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fBoundedCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt64_$cminBound
                                       GHC.Int.$fBoundedInt64_$cmaxBound];

Foreign.C.Types.$fStorableCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCIntPtr
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCIntPtr
                                    Foreign.C.Types.$fOrdCIntPtr
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fIntegralCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CIntPtr
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCIntPtr
                                        Foreign.C.Types.$fEnumCIntPtr
                                        GHC.Int.$fIntegralInt64_$cquot
                                        GHC.Int.$fIntegralInt64_$crem
                                        GHC.Int.$fIntegralInt64_$cdiv
                                        GHC.Int.$fIntegralInt64_$cmod
                                        GHC.Int.$fIntegralInt64_$cquotRem
                                        GHC.Int.$fIntegralInt64_$cdivMod
                                        GHC.Int.$fIntegralInt64_$ctoInteger];

Foreign.C.Types.$fBitsCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCIntPtr
                                     GHC.Int.$fBitsInt64_$c.&.
                                     GHC.Int.$fBitsInt64_$c.|.
                                     GHC.Int.$fBitsInt64_$cxor
                                     GHC.Int.$fBitsInt64_$ccomplement
                                     GHC.Int.$fBitsInt64_$cshift
                                     GHC.Int.$fBitsInt64_$crotate
                                     GHC.Int.$fBitsInt10
                                     GHC.Int.$fBitsInt64_$cbit
                                     GHC.Int.$fBitsInt64_$csetBit
                                     GHC.Int.$fBitsInt64_$cclearBit
                                     GHC.Int.$fBitsInt64_$ccomplementBit
                                     GHC.Int.$fBitsInt64_$ctestBit
                                     GHC.Int.$fBitsInt64_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt64_$cfiniteBitSize
                                     GHC.Int.$fBitsInt64_$cisSigned
                                     GHC.Int.$fBitsInt64_$cshiftL
                                     GHC.Int.$fBitsInt64_$cunsafeShiftL
                                     GHC.Int.$fBitsInt64_$cshiftR
                                     GHC.Int.$fBitsInt64_$cunsafeShiftR
                                     GHC.Int.$fBitsInt64_$crotateL
                                     GHC.Int.$fBitsInt64_$crotateR
                                     GHC.Int.$fBitsInt64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCIntPtr [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CIntPtr
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCIntPtr
                                           GHC.Int.$fBitsInt64_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CSUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CSUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fStorableCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CSUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CSUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CSUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CSUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CSUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCSUSeconds
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCSUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CSUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCSUSeconds
                                    Foreign.C.Types.$fOrdCSUSeconds
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fShowCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord32_$cshowsPrec
                                    GHC.Word.$fShowWord32_$cshow
                                    GHC.Word.$fShowWord32_$cshowList];

Foreign.C.Types.$fReadCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord32_$creadsPrec
                                    GHC.Read.$fReadWord32_$creadList
                                    GHC.Read.$fReadWord10
                                    GHC.Read.$fReadWord7];

Foreign.C.Types.$fStorableCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord32_$calignment
                                                Foreign.Storable.$fStorableWord32_$calignment
                                                GHC.Storable.readWord32OffPtr1
                                                GHC.Storable.writeWord32OffPtr1
                                                Foreign.Storable.$fStorableWord13
                                                Foreign.Storable.$fStorableWord12
                                                Foreign.Storable.$fStorableWord11
                                                Foreign.Storable.$fStorableWord10];

Foreign.C.Types.$fEnumCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord32_$csucc
                                    GHC.Word.$fEnumWord32_$cpred
                                    GHC.Word.$fEnumWord32_$ctoEnum
                                    GHC.Word.$fEnumWord32_$cfromEnum
                                    GHC.Word.$fEnumWord32_$cenumFrom
                                    GHC.Word.$fEnumWord32_$cenumFromThen
                                    GHC.Word.$fEnumWord32_$cenumFromTo
                                    GHC.Word.$fEnumWord32_$cenumFromThenTo];

Foreign.C.Types.$fNumCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord32_$c+
                                  GHC.Word.$fNumWord32_$c-
                                  GHC.Word.$fNumWord32_$c*
                                  GHC.Word.$fNumWord32_$cnegate
                                  GHC.Word.$fNumWord32_$cabs
                                  GHC.Word.$fNumWord32_$csignum
                                  GHC.Word.$fNumWord32_$cfromInteger];

Foreign.C.Types.$fEqCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord32
                                     GHC.Word.neWord32];

Foreign.C.Types.$fOrdCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUSeconds
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUSeconds
                                      GHC.Word.$fOrdWord32_$ccompare
                                      GHC.Word.ltWord32
                                      GHC.Word.leWord32
                                      GHC.Word.gtWord32
                                      GHC.Word.geWord32
                                      GHC.Word.$fOrdWord32_$cmax
                                      GHC.Word.$fOrdWord32_$cmin];

Foreign.C.Types.$fRealCUSeconds [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUSeconds
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUSeconds
                                    Foreign.C.Types.$fOrdCUSeconds
                                    GHC.Word.$fRealWord32_$ctoRational];

Foreign.C.Types.$fShowCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CTime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CTime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fStorableCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CTime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CTime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CTime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CTime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CTime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCTime
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCTime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CTime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCTime
                                    Foreign.C.Types.$fOrdCTime
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fShowCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CClock
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CClock
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fStorableCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CClock
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CClock
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CClock
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CClock
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CClock
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCClock
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCClock [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CClock
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCClock
                                    Foreign.C.Types.$fOrdCClock
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fShowCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt32_$cshowsPrec
                                    GHC.Int.$fShowInt32_$cshow
                                    GHC.Int.$fShowInt32_$cshowList];

Foreign.C.Types.$fReadCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CSigAtomic
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt32_$creadsPrec
                                    GHC.Int.$fReadInt32_$creadList
                                    GHC.Int.$fReadInt6
                                    GHC.Int.$fReadInt4];

Foreign.C.Types.$fBoundedCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt32_$cminBound
                                       GHC.Int.$fBoundedInt32_$cmaxBound];

Foreign.C.Types.$fStorableCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt32_$calignment
                                                Foreign.Storable.$fStorableInt32_$calignment
                                                GHC.Storable.readInt32OffPtr1
                                                GHC.Storable.writeInt32OffPtr1
                                                Foreign.Storable.$fStorableInt14
                                                Foreign.Storable.$fStorableInt13
                                                Foreign.Storable.$fStorableInt12
                                                Foreign.Storable.$fStorableInt11];

Foreign.C.Types.$fEnumCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CSigAtomic
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt32_$csucc
                                    GHC.Int.$fEnumInt32_$cpred
                                    GHC.Int.$fEnumInt32_$ctoEnum
                                    GHC.Int.$fEnumInt32_$cfromEnum
                                    GHC.Int.$fEnumInt32_$cenumFrom
                                    GHC.Int.$fEnumInt32_$cenumFromThen
                                    GHC.Int.$fEnumInt32_$cenumFromTo
                                    GHC.Int.$fEnumInt32_$cenumFromThenTo];

Foreign.C.Types.$fNumCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt32_$c+
                                  GHC.Int.$fNumInt32_$c-
                                  GHC.Int.$fNumInt32_$c*
                                  GHC.Int.$fNumInt32_$cnegate
                                  GHC.Int.$fNumInt32_$cabs
                                  GHC.Int.$fNumInt32_$csignum
                                  GHC.Int.$fNumInt32_$cfromInteger];

Foreign.C.Types.$fEqCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt32 GHC.Int.neInt32];

Foreign.C.Types.$fOrdCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCSigAtomic
                                      GHC.Int.$fOrdInt32_$ccompare
                                      GHC.Int.ltInt32
                                      GHC.Int.leInt32
                                      GHC.Int.gtInt32
                                      GHC.Int.geInt32
                                      GHC.Int.$fOrdInt32_$cmax
                                      GHC.Int.$fOrdInt32_$cmin];

Foreign.C.Types.$fRealCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CSigAtomic
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCSigAtomic
                                    Foreign.C.Types.$fOrdCSigAtomic
                                    GHC.Int.$fRealInt32_$ctoRational];

Foreign.C.Types.$fIntegralCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CSigAtomic
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCSigAtomic
                                        Foreign.C.Types.$fEnumCSigAtomic
                                        GHC.Int.$fIntegralInt32_$cquot
                                        GHC.Int.$fIntegralInt32_$crem
                                        GHC.Int.$fIntegralInt32_$cdiv
                                        GHC.Int.$fIntegralInt32_$cmod
                                        GHC.Int.$fIntegralInt32_$cquotRem
                                        GHC.Int.$fIntegralInt32_$cdivMod
                                        GHC.Int.$fIntegralInt32_$ctoInteger];

Foreign.C.Types.$fBitsCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCSigAtomic
                                     GHC.Int.$fBitsInt32_$c.&.
                                     GHC.Int.$fBitsInt32_$c.|.
                                     GHC.Int.$fBitsInt32_$cxor
                                     GHC.Int.$fBitsInt32_$ccomplement
                                     GHC.Int.$fBitsInt32_$cshift
                                     GHC.Int.$fBitsInt32_$crotate
                                     GHC.Int.$fBitsInt6
                                     GHC.Int.$fBitsInt32_$cbit
                                     GHC.Int.$fBitsInt32_$csetBit
                                     GHC.Int.$fBitsInt32_$cclearBit
                                     GHC.Int.$fBitsInt32_$ccomplementBit
                                     GHC.Int.$fBitsInt32_$ctestBit
                                     GHC.Int.$fBitsInt32_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt32_$cfiniteBitSize
                                     GHC.Int.$fBitsInt32_$cisSigned
                                     GHC.Int.$fBitsInt32_$cshiftL
                                     GHC.Int.$fBitsInt32_$cunsafeShiftL
                                     GHC.Int.$fBitsInt32_$cshiftR
                                     GHC.Int.$fBitsInt32_$cunsafeShiftR
                                     GHC.Int.$fBitsInt32_$crotateL
                                     GHC.Int.$fBitsInt32_$crotateR
                                     GHC.Int.$fBitsInt32_$cpopCount];

Foreign.C.Types.$fFiniteBitsCSigAtomic [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CSigAtomic
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCSigAtomic
                                           GHC.Int.$fBitsInt32_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros];

Foreign.C.Types.$fShowCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt32_$cshowsPrec
                                    GHC.Int.$fShowInt32_$cshow
                                    GHC.Int.$fShowInt32_$cshowList];

Foreign.C.Types.$fReadCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CWchar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt32_$creadsPrec
                                    GHC.Int.$fReadInt32_$creadList
                                    GHC.Int.$fReadInt6
                                    GHC.Int.$fReadInt4];

Foreign.C.Types.$fBoundedCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt32_$cminBound
                                       GHC.Int.$fBoundedInt32_$cmaxBound];

Foreign.C.Types.$fStorableCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt32_$calignment
                                                Foreign.Storable.$fStorableInt32_$calignment
                                                GHC.Storable.readInt32OffPtr1
                                                GHC.Storable.writeInt32OffPtr1
                                                Foreign.Storable.$fStorableInt14
                                                Foreign.Storable.$fStorableInt13
                                                Foreign.Storable.$fStorableInt12
                                                Foreign.Storable.$fStorableInt11];

Foreign.C.Types.$fEnumCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CWchar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt32_$csucc
                                    GHC.Int.$fEnumInt32_$cpred
                                    GHC.Int.$fEnumInt32_$ctoEnum
                                    GHC.Int.$fEnumInt32_$cfromEnum
                                    GHC.Int.$fEnumInt32_$cenumFrom
                                    GHC.Int.$fEnumInt32_$cenumFromThen
                                    GHC.Int.$fEnumInt32_$cenumFromTo
                                    GHC.Int.$fEnumInt32_$cenumFromThenTo];

Foreign.C.Types.$fNumCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt32_$c+
                                  GHC.Int.$fNumInt32_$c-
                                  GHC.Int.$fNumInt32_$c*
                                  GHC.Int.$fNumInt32_$cnegate
                                  GHC.Int.$fNumInt32_$cabs
                                  GHC.Int.$fNumInt32_$csignum
                                  GHC.Int.$fNumInt32_$cfromInteger];

Foreign.C.Types.$fEqCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt32 GHC.Int.neInt32];

Foreign.C.Types.$fOrdCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCWchar
                                      GHC.Int.$fOrdInt32_$ccompare
                                      GHC.Int.ltInt32
                                      GHC.Int.leInt32
                                      GHC.Int.gtInt32
                                      GHC.Int.geInt32
                                      GHC.Int.$fOrdInt32_$cmax
                                      GHC.Int.$fOrdInt32_$cmin];

Foreign.C.Types.$fRealCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CWchar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCWchar
                                    Foreign.C.Types.$fOrdCWchar
                                    GHC.Int.$fRealInt32_$ctoRational];

Foreign.C.Types.$fIntegralCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CWchar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCWchar
                                        Foreign.C.Types.$fEnumCWchar
                                        GHC.Int.$fIntegralInt32_$cquot
                                        GHC.Int.$fIntegralInt32_$crem
                                        GHC.Int.$fIntegralInt32_$cdiv
                                        GHC.Int.$fIntegralInt32_$cmod
                                        GHC.Int.$fIntegralInt32_$cquotRem
                                        GHC.Int.$fIntegralInt32_$cdivMod
                                        GHC.Int.$fIntegralInt32_$ctoInteger];

Foreign.C.Types.$fBitsCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCWchar
                                     GHC.Int.$fBitsInt32_$c.&.
                                     GHC.Int.$fBitsInt32_$c.|.
                                     GHC.Int.$fBitsInt32_$cxor
                                     GHC.Int.$fBitsInt32_$ccomplement
                                     GHC.Int.$fBitsInt32_$cshift
                                     GHC.Int.$fBitsInt32_$crotate
                                     GHC.Int.$fBitsInt6
                                     GHC.Int.$fBitsInt32_$cbit
                                     GHC.Int.$fBitsInt32_$csetBit
                                     GHC.Int.$fBitsInt32_$cclearBit
                                     GHC.Int.$fBitsInt32_$ccomplementBit
                                     GHC.Int.$fBitsInt32_$ctestBit
                                     GHC.Int.$fBitsInt32_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt32_$cfiniteBitSize
                                     GHC.Int.$fBitsInt32_$cisSigned
                                     GHC.Int.$fBitsInt32_$cshiftL
                                     GHC.Int.$fBitsInt32_$cunsafeShiftL
                                     GHC.Int.$fBitsInt32_$cshiftR
                                     GHC.Int.$fBitsInt32_$cunsafeShiftR
                                     GHC.Int.$fBitsInt32_$crotateL
                                     GHC.Int.$fBitsInt32_$crotateR
                                     GHC.Int.$fBitsInt32_$cpopCount];

Foreign.C.Types.$fFiniteBitsCWchar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CWchar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCWchar
                                           GHC.Int.$fBitsInt32_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros];

Foreign.C.Types.$fShowCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CSize
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord64_$cshowsPrec
                                    GHC.Word.$fShowWord64_$cshow
                                    GHC.Word.$fShowWord64_$cshowList];

Foreign.C.Types.$fReadCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CSize
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord64_$creadsPrec
                                    GHC.Read.$fReadWord64_$creadList
                                    GHC.Read.$fReadWord13
                                    GHC.Read.$fReadWord11];

Foreign.C.Types.$fBoundedCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord7
                                       GHC.Word.$fBoundedWord64_$cmaxBound];

Foreign.C.Types.$fStorableCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord64_$calignment
                                                Foreign.Storable.$fStorableWord64_$calignment
                                                GHC.Storable.readWord64OffPtr1
                                                GHC.Storable.writeWord64OffPtr1
                                                Foreign.Storable.$fStorableWord18
                                                Foreign.Storable.$fStorableWord17
                                                Foreign.Storable.$fStorableWord15
                                                Foreign.Storable.$fStorableWord14];

Foreign.C.Types.$fEnumCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CSize
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord64_$csucc
                                    GHC.Word.$fEnumWord64_$cpred
                                    GHC.Word.$fEnumWord64_$ctoEnum
                                    GHC.Word.$fEnumWord64_$cfromEnum
                                    GHC.Word.$fEnumWord64_$cenumFrom
                                    GHC.Word.$fEnumWord64_$cenumFromThen
                                    GHC.Word.$fEnumWord64_$cenumFromTo
                                    GHC.Word.$fEnumWord64_$cenumFromThenTo];

Foreign.C.Types.$fNumCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord64_$c+
                                  GHC.Word.$fNumWord64_$c-
                                  GHC.Word.$fNumWord64_$c*
                                  GHC.Word.$fNumWord64_$cnegate
                                  GHC.Word.$fNumWord64_$cabs
                                  GHC.Word.$fNumWord64_$csignum
                                  GHC.Word.$fNumWord64_$cfromInteger];

Foreign.C.Types.$fEqCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord64
                                     GHC.Word.neWord64];

Foreign.C.Types.$fOrdCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCSize
                                      GHC.Word.$fOrdWord64_$ccompare
                                      GHC.Word.ltWord64
                                      GHC.Word.leWord64
                                      GHC.Word.gtWord64
                                      GHC.Word.geWord64
                                      GHC.Word.$fOrdWord64_$cmax
                                      GHC.Word.$fOrdWord64_$cmin];

Foreign.C.Types.$fRealCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CSize
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCSize
                                    Foreign.C.Types.$fOrdCSize
                                    GHC.Word.$fRealWord64_$ctoRational];

Foreign.C.Types.$fIntegralCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CSize
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCSize
                                        Foreign.C.Types.$fEnumCSize
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cquotRem
                                        GHC.Word.$fIntegralWord64_$cdivMod
                                        GHC.Word.$fIntegralWord64_$ctoInteger];

Foreign.C.Types.$fBitsCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCSize
                                     GHC.Word.$fBitsWord64_$c.&.
                                     GHC.Word.$fBitsWord64_$c.|.
                                     GHC.Word.$fBitsWord64_$cxor
                                     GHC.Word.$fBitsWord64_$ccomplement
                                     GHC.Word.$fBitsWord64_$cshift
                                     GHC.Word.$fBitsWord64_$crotate
                                     GHC.Word.$fBitsWord7
                                     GHC.Word.$fBitsWord64_$cbit
                                     GHC.Word.$fBitsWord64_$csetBit
                                     GHC.Word.$fBitsWord64_$cclearBit
                                     GHC.Word.$fBitsWord64_$ccomplementBit
                                     GHC.Word.$fBitsWord64_$ctestBit
                                     GHC.Word.$fBitsWord64_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord64_$cfiniteBitSize
                                     GHC.Word.$fBitsWord64_$cisSigned
                                     GHC.Word.$fBitsWord64_$cshiftL
                                     GHC.Word.$fBitsWord64_$cunsafeShiftL
                                     GHC.Word.$fBitsWord64_$cshiftR
                                     GHC.Word.$fBitsWord64_$cunsafeShiftR
                                     GHC.Word.$fBitsWord64_$crotateL
                                     GHC.Word.$fBitsWord64_$crotateR
                                     GHC.Word.$fBitsWord64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCSize [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CSize
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCSize
                                           GHC.Word.$fBitsWord64_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord64_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CPtrdiff
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fBoundedCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt64_$cminBound
                                       GHC.Int.$fBoundedInt64_$cmaxBound];

Foreign.C.Types.$fStorableCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CPtrdiff
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCPtrdiff
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CPtrdiff
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCPtrdiff
                                    Foreign.C.Types.$fOrdCPtrdiff
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fIntegralCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CPtrdiff
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCPtrdiff
                                        Foreign.C.Types.$fEnumCPtrdiff
                                        GHC.Int.$fIntegralInt64_$cquot
                                        GHC.Int.$fIntegralInt64_$crem
                                        GHC.Int.$fIntegralInt64_$cdiv
                                        GHC.Int.$fIntegralInt64_$cmod
                                        GHC.Int.$fIntegralInt64_$cquotRem
                                        GHC.Int.$fIntegralInt64_$cdivMod
                                        GHC.Int.$fIntegralInt64_$ctoInteger];

Foreign.C.Types.$fBitsCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCPtrdiff
                                     GHC.Int.$fBitsInt64_$c.&.
                                     GHC.Int.$fBitsInt64_$c.|.
                                     GHC.Int.$fBitsInt64_$cxor
                                     GHC.Int.$fBitsInt64_$ccomplement
                                     GHC.Int.$fBitsInt64_$cshift
                                     GHC.Int.$fBitsInt64_$crotate
                                     GHC.Int.$fBitsInt10
                                     GHC.Int.$fBitsInt64_$cbit
                                     GHC.Int.$fBitsInt64_$csetBit
                                     GHC.Int.$fBitsInt64_$cclearBit
                                     GHC.Int.$fBitsInt64_$ccomplementBit
                                     GHC.Int.$fBitsInt64_$ctestBit
                                     GHC.Int.$fBitsInt64_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt64_$cfiniteBitSize
                                     GHC.Int.$fBitsInt64_$cisSigned
                                     GHC.Int.$fBitsInt64_$cshiftL
                                     GHC.Int.$fBitsInt64_$cunsafeShiftL
                                     GHC.Int.$fBitsInt64_$cshiftR
                                     GHC.Int.$fBitsInt64_$cunsafeShiftR
                                     GHC.Int.$fBitsInt64_$crotateL
                                     GHC.Int.$fBitsInt64_$crotateR
                                     GHC.Int.$fBitsInt64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCPtrdiff [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CPtrdiff
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCPtrdiff
                                           GHC.Int.$fBitsInt64_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Float.$fShowDouble_$cshowsPrec
                                    GHC.Float.$fShowDouble_$cshow
                                    GHC.Float.$fShowDouble_$cshowList];

Foreign.C.Types.$fReadCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadDouble_$creadsPrec
                                    GHC.Read.$fReadDouble_$creadList
                                    GHC.Read.$fReadDouble1
                                    GHC.Read.$fReadDouble_$creadListPrec];

Foreign.C.Types.$fStorableCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CDouble
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableDouble_$calignment
                                                Foreign.Storable.$fStorableDouble_$calignment
                                                GHC.Storable.readDoubleOffPtr1
                                                GHC.Storable.writeDoubleOffPtr1
                                                Foreign.Storable.$fStorableDouble4
                                                Foreign.Storable.$fStorableDouble3
                                                Foreign.Storable.$fStorableDouble2
                                                Foreign.Storable.$fStorableDouble1];

Foreign.C.Types.$fEnumCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Float.$fEnumDouble_$csucc
                                    GHC.Float.$fEnumDouble_$cpred
                                    GHC.Float.RealFracMethods.int2Double
                                    GHC.Float.$fEnumDouble_$cfromEnum
                                    GHC.Float.$fEnumDouble_$snumericEnumFrom
                                    GHC.Float.$fEnumDouble_$snumericEnumFromThen
                                    GHC.Float.$fEnumDouble_$cenumFromTo
                                    GHC.Float.$fEnumDouble_$cenumFromThenTo];

Foreign.C.Types.$fNumCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CDouble
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Float.plusDouble
                                  GHC.Float.minusDouble
                                  GHC.Float.timesDouble
                                  GHC.Float.negateDouble
                                  GHC.Float.fabsDouble
                                  GHC.Float.$fNumDouble_$csignum
                                  GHC.Float.$fNumDouble_$cfromInteger];

Foreign.C.Types.$fFractionalCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Fractional Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Fractional! [Foreign.C.Types.$fNumCDouble
                                          GHC.Float.divideDouble
                                          GHC.Float.$fFractionalDouble_$crecip
                                          GHC.Float.$fFractionalDouble_$cfromRational];

Foreign.C.Types.$fFloatingCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Float.Floating Foreign.C.Types.CDouble
[GblId[DFunId]] =
    CCS_DONT_CARE GHC.Float.C:Floating! [Foreign.C.Types.$fFractionalCDouble
                                         GHC.Float.$fFloatingDouble_$cpi
                                         GHC.Float.expDouble
                                         GHC.Float.logDouble
                                         GHC.Float.sqrtDouble
                                         GHC.Float.powerDouble
                                         GHC.Float.$fFloatingDouble_$clogBase
                                         GHC.Float.sinDouble
                                         GHC.Float.cosDouble
                                         GHC.Float.tanDouble
                                         GHC.Float.asinDouble
                                         GHC.Float.acosDouble
                                         GHC.Float.atanDouble
                                         GHC.Float.sinhDouble
                                         GHC.Float.coshDouble
                                         GHC.Float.tanhDouble
                                         GHC.Float.$fFloatingDouble_$casinh
                                         GHC.Float.$fFloatingDouble_$cacosh
                                         GHC.Float.$fFloatingDouble_$catanh
                                         GHC.Float.log1pDouble
                                         GHC.Float.expm1Double
                                         GHC.Float.$fFloatingDouble_$clog1pexp
                                         GHC.Float.$fFloatingDouble_$clog1mexp];

Foreign.C.Types.$fEqCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CDouble
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Classes.eqDouble
                                     GHC.Classes.$fEqDouble_$c/=];

Foreign.C.Types.$fOrdCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CDouble
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCDouble
                                      GHC.Classes.$fOrdDouble_$ccompare
                                      GHC.Classes.$fOrdDouble_$c<
                                      GHC.Classes.$fOrdDouble_$c<=
                                      GHC.Classes.$fOrdDouble_$c>
                                      GHC.Classes.$fOrdDouble_$c>=
                                      GHC.Classes.$fOrdDouble_$cmax
                                      GHC.Classes.$fOrdDouble_$cmin];

Foreign.C.Types.$fRealCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCDouble
                                    Foreign.C.Types.$fOrdCDouble
                                    GHC.Float.$fRealDouble_$ctoRational];

Foreign.C.Types.$fRealFracCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.RealFrac Foreign.C.Types.CDouble
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:RealFrac! [Foreign.C.Types.$fRealCDouble
                                        Foreign.C.Types.$fFractionalCDouble
                                        GHC.Float.$fRealFracDouble_$cproperFraction
                                        GHC.Float.$fRealFracDouble_$ctruncate
                                        GHC.Float.$fRealFracDouble_$cround
                                        GHC.Float.$fRealFracDouble_$cceiling
                                        GHC.Float.$fRealFracDouble_$cfloor];

Foreign.C.Types.$fRealFloatCDouble [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Float.RealFloat Foreign.C.Types.CDouble
[GblId[DFunId]] =
    CCS_DONT_CARE GHC.Float.C:RealFloat! [Foreign.C.Types.$fRealFracCDouble
                                          Foreign.C.Types.$fFloatingCDouble
                                          GHC.Float.$fRealFloatDouble_$cfloatRadix
                                          GHC.Float.$fRealFloatDouble_$cfloatDigits
                                          GHC.Float.$fRealFloatDouble_$cfloatRange
                                          GHC.Float.$fRealFloatDouble_$cdecodeFloat
                                          GHC.Float.$fRealFloatDouble_$cencodeFloat
                                          GHC.Float.$fRealFloatDouble_$cexponent
                                          GHC.Float.$fRealFloatDouble_$csignificand
                                          GHC.Float.$fRealFloatDouble_$cscaleFloat
                                          GHC.Float.$fRealFloatDouble_$cisNaN
                                          GHC.Float.$fRealFloatDouble_$cisInfinite
                                          GHC.Float.$fRealFloatDouble_$cisDenormalized
                                          GHC.Float.$fRealFloatDouble_$cisNegativeZero
                                          GHC.Float.$fRealFloatDouble_$cisIEEE
                                          GHC.Float.$fRealFloatDouble_$catan2];

Foreign.C.Types.$fShowCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Float.$fShowFloat_$cshowsPrec
                                    GHC.Float.$fShowFloat_$cshow
                                    GHC.Float.$fShowFloat_$cshowList];

Foreign.C.Types.$fReadCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadFloat_$creadsPrec
                                    GHC.Read.$fReadFloat_$creadList
                                    GHC.Read.$fReadFloat1
                                    GHC.Read.$fReadFloat_$creadListPrec];

Foreign.C.Types.$fStorableCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CFloat
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableFloat_$calignment
                                                Foreign.Storable.$fStorableFloat_$calignment
                                                GHC.Storable.readFloatOffPtr1
                                                GHC.Storable.writeFloatOffPtr1
                                                Foreign.Storable.$fStorableFloat4
                                                Foreign.Storable.$fStorableFloat3
                                                Foreign.Storable.$fStorableFloat2
                                                Foreign.Storable.$fStorableFloat1];

Foreign.C.Types.$fEnumCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Float.$fEnumFloat_$csucc
                                    GHC.Float.$fEnumFloat_$cpred
                                    GHC.Float.RealFracMethods.int2Float
                                    GHC.Float.$fEnumFloat_$cfromEnum
                                    GHC.Float.$fEnumFloat_$snumericEnumFrom
                                    GHC.Float.$fEnumFloat_$snumericEnumFromThen
                                    GHC.Float.$fEnumFloat_$cenumFromTo
                                    GHC.Float.$fEnumFloat_$cenumFromThenTo];

Foreign.C.Types.$fNumCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CFloat
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Float.plusFloat
                                  GHC.Float.minusFloat
                                  GHC.Float.timesFloat
                                  GHC.Float.negateFloat
                                  GHC.Float.fabsFloat
                                  GHC.Float.$fNumFloat_$csignum
                                  GHC.Float.$fNumFloat_$cfromInteger];

Foreign.C.Types.$fFractionalCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Fractional Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Fractional! [Foreign.C.Types.$fNumCFloat
                                          GHC.Float.divideFloat
                                          GHC.Float.$fFractionalFloat_$crecip
                                          GHC.Float.$fFractionalFloat_$cfromRational];

Foreign.C.Types.$fFloatingCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Float.Floating Foreign.C.Types.CFloat
[GblId[DFunId]] =
    CCS_DONT_CARE GHC.Float.C:Floating! [Foreign.C.Types.$fFractionalCFloat
                                         GHC.Float.$fFloatingFloat_$cpi
                                         GHC.Float.expFloat
                                         GHC.Float.logFloat
                                         GHC.Float.sqrtFloat
                                         GHC.Float.powerFloat
                                         GHC.Float.$fFloatingFloat_$clogBase
                                         GHC.Float.sinFloat
                                         GHC.Float.cosFloat
                                         GHC.Float.tanFloat
                                         GHC.Float.asinFloat
                                         GHC.Float.acosFloat
                                         GHC.Float.atanFloat
                                         GHC.Float.sinhFloat
                                         GHC.Float.coshFloat
                                         GHC.Float.tanhFloat
                                         GHC.Float.$fFloatingFloat_$casinh
                                         GHC.Float.$fFloatingFloat_$cacosh
                                         GHC.Float.$fFloatingFloat_$catanh
                                         GHC.Float.log1pFloat
                                         GHC.Float.expm1Float
                                         GHC.Float.$fFloatingFloat_$clog1pexp
                                         GHC.Float.$fFloatingFloat_$clog1mexp];

Foreign.C.Types.$fEqCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CFloat
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Classes.eqFloat
                                     GHC.Classes.$fEqFloat_$c/=];

Foreign.C.Types.$fOrdCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CFloat
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCFloat
                                      GHC.Classes.$fOrdFloat_$ccompare
                                      GHC.Classes.$fOrdFloat_$c<
                                      GHC.Classes.$fOrdFloat_$c<=
                                      GHC.Classes.$fOrdFloat_$c>
                                      GHC.Classes.$fOrdFloat_$c>=
                                      GHC.Classes.$fOrdFloat_$cmax
                                      GHC.Classes.$fOrdFloat_$cmin];

Foreign.C.Types.$fRealCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCFloat
                                    Foreign.C.Types.$fOrdCFloat
                                    GHC.Float.$fRealFloat_$ctoRational];

Foreign.C.Types.$fRealFracCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.RealFrac Foreign.C.Types.CFloat
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:RealFrac! [Foreign.C.Types.$fRealCFloat
                                        Foreign.C.Types.$fFractionalCFloat
                                        GHC.Float.$fRealFracFloat_$cproperFraction
                                        GHC.Float.$fRealFracFloat_$ctruncate
                                        GHC.Float.$fRealFracFloat_$cround
                                        GHC.Float.$fRealFracFloat_$cceiling
                                        GHC.Float.$fRealFracFloat_$cfloor];

Foreign.C.Types.$fRealFloatCFloat [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Float.RealFloat Foreign.C.Types.CFloat
[GblId[DFunId]] =
    CCS_DONT_CARE GHC.Float.C:RealFloat! [Foreign.C.Types.$fRealFracCFloat
                                          Foreign.C.Types.$fFloatingCFloat
                                          GHC.Float.$fRealFloatFloat_$cfloatRadix
                                          GHC.Float.$fRealFloatFloat_$cfloatDigits
                                          GHC.Float.$fRealFloatFloat_$cfloatRange
                                          GHC.Float.$fRealFloatFloat_$cdecodeFloat
                                          GHC.Float.$fRealFloatFloat_$cencodeFloat
                                          GHC.Float.$fRealFloatFloat_$cexponent
                                          GHC.Float.$fRealFloatFloat_$csignificand
                                          GHC.Float.$fRealFloatFloat_$cscaleFloat
                                          GHC.Float.$fRealFloatFloat_$cisNaN
                                          GHC.Float.$fRealFloatFloat_$cisInfinite
                                          GHC.Float.$fRealFloatFloat_$cisDenormalized
                                          GHC.Float.$fRealFloatFloat_$cisNegativeZero
                                          GHC.Float.$fRealFloatFloat_$cisIEEE
                                          GHC.Float.$fRealFloatFloat_$catan2];

Foreign.C.Types.$fShowCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord8_$cshowsPrec
                                    GHC.Word.$fShowWord8_$cshow
                                    GHC.Word.$fShowWord8_$cshowList];

Foreign.C.Types.$fReadCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CBool
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord8_$creadsPrec
                                    GHC.Read.$fReadWord8_$creadList
                                    GHC.Read.$fReadWord17
                                    GHC.Read.$fReadWord14];

Foreign.C.Types.$fBoundedCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord8_$cminBound
                                       GHC.Word.$fBoundedWord8_$cmaxBound];

Foreign.C.Types.$fStorableCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord8_$calignment
                                                Foreign.Storable.$fStorableWord8_$calignment
                                                GHC.Storable.readWord8OffPtr1
                                                GHC.Storable.writeWord8OffPtr1
                                                Foreign.Storable.$fStorableWord22
                                                Foreign.Storable.$fStorableWord21
                                                Foreign.Storable.$fStorableWord20
                                                Foreign.Storable.$fStorableWord19];

Foreign.C.Types.$fEnumCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CBool
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord8_$csucc
                                    GHC.Word.$fEnumWord8_$cpred
                                    GHC.Word.$fEnumWord8_$ctoEnum
                                    GHC.Word.$fEnumWord8_$cfromEnum
                                    GHC.Word.$fEnumWord8_$cenumFrom
                                    GHC.Word.$fEnumWord8_$cenumFromThen
                                    GHC.Word.$fEnumWord8_$cenumFromTo
                                    GHC.Word.$fEnumWord8_$cenumFromThenTo];

Foreign.C.Types.$fNumCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord8_$c+
                                  GHC.Word.$fNumWord8_$c-
                                  GHC.Word.$fNumWord8_$c*
                                  GHC.Word.$fNumWord8_$cnegate
                                  GHC.Word.$fNumWord8_$cabs
                                  GHC.Word.$fNumWord8_$csignum
                                  GHC.Word.$fNumWord8_$cfromInteger];

Foreign.C.Types.$fEqCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord8
                                     GHC.Word.neWord8];

Foreign.C.Types.$fOrdCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCBool
                                      GHC.Word.$fOrdWord8_$ccompare
                                      GHC.Word.ltWord8
                                      GHC.Word.leWord8
                                      GHC.Word.gtWord8
                                      GHC.Word.geWord8
                                      GHC.Word.$fOrdWord8_$cmax
                                      GHC.Word.$fOrdWord8_$cmin];

Foreign.C.Types.$fRealCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CBool
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCBool
                                    Foreign.C.Types.$fOrdCBool
                                    GHC.Word.$fRealWord8_$ctoRational];

Foreign.C.Types.$fIntegralCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CBool
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCBool
                                        Foreign.C.Types.$fEnumCBool
                                        GHC.Word.$fIntegralWord8_$cquot
                                        GHC.Word.$fIntegralWord8_$crem
                                        GHC.Word.$fIntegralWord8_$cquot
                                        GHC.Word.$fIntegralWord8_$crem
                                        GHC.Word.$fIntegralWord8_$cquotRem
                                        GHC.Word.$fIntegralWord8_$cdivMod
                                        GHC.Word.$ctoInteger];

Foreign.C.Types.$fBitsCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCBool
                                     GHC.Word.$fBitsWord8_$c.&.
                                     GHC.Word.$fBitsWord8_$c.|.
                                     GHC.Word.$fBitsWord8_$cxor
                                     GHC.Word.$fBitsWord8_$ccomplement
                                     GHC.Word.$fBitsWord8_$cshift
                                     GHC.Word.$fBitsWord8_$crotate
                                     GHC.Word.$fBitsWord8_$cminBound
                                     GHC.Word.$fBitsWord8_$cbit
                                     GHC.Word.$fBitsWord8_$csetBit
                                     GHC.Word.$fBitsWord8_$cclearBit
                                     GHC.Word.$fBitsWord8_$ccomplementBit
                                     GHC.Word.$fBitsWord8_$ctestBit
                                     GHC.Word.$fBitsWord8_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord8_$cfiniteBitSize
                                     GHC.Word.$fBitsWord8_$cisSigned
                                     GHC.Word.$fBitsWord8_$cshiftL
                                     GHC.Word.$fBitsWord8_$cunsafeShiftL
                                     GHC.Word.$fBitsWord8_$cshiftR
                                     GHC.Word.$fBitsWord8_$cunsafeShiftR
                                     GHC.Word.$fBitsWord8_$crotateL
                                     GHC.Word.$fBitsWord8_$crotateR
                                     GHC.Word.$fBitsWord8_$cpopCount];

Foreign.C.Types.$fFiniteBitsCBool [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CBool
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCBool
                                           GHC.Word.$fBitsWord8_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord8_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord8_$ccountTrailingZeros];

Foreign.C.Types.$fShowCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CULLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord64_$cshowsPrec
                                    GHC.Word.$fShowWord64_$cshow
                                    GHC.Word.$fShowWord64_$cshowList];

Foreign.C.Types.$fReadCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CULLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord64_$creadsPrec
                                    GHC.Read.$fReadWord64_$creadList
                                    GHC.Read.$fReadWord13
                                    GHC.Read.$fReadWord11];

Foreign.C.Types.$fBoundedCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord7
                                       GHC.Word.$fBoundedWord64_$cmaxBound];

Foreign.C.Types.$fStorableCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord64_$calignment
                                                Foreign.Storable.$fStorableWord64_$calignment
                                                GHC.Storable.readWord64OffPtr1
                                                GHC.Storable.writeWord64OffPtr1
                                                Foreign.Storable.$fStorableWord18
                                                Foreign.Storable.$fStorableWord17
                                                Foreign.Storable.$fStorableWord15
                                                Foreign.Storable.$fStorableWord14];

Foreign.C.Types.$fEnumCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CULLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord64_$csucc
                                    GHC.Word.$fEnumWord64_$cpred
                                    GHC.Word.$fEnumWord64_$ctoEnum
                                    GHC.Word.$fEnumWord64_$cfromEnum
                                    GHC.Word.$fEnumWord64_$cenumFrom
                                    GHC.Word.$fEnumWord64_$cenumFromThen
                                    GHC.Word.$fEnumWord64_$cenumFromTo
                                    GHC.Word.$fEnumWord64_$cenumFromThenTo];

Foreign.C.Types.$fNumCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord64_$c+
                                  GHC.Word.$fNumWord64_$c-
                                  GHC.Word.$fNumWord64_$c*
                                  GHC.Word.$fNumWord64_$cnegate
                                  GHC.Word.$fNumWord64_$cabs
                                  GHC.Word.$fNumWord64_$csignum
                                  GHC.Word.$fNumWord64_$cfromInteger];

Foreign.C.Types.$fEqCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord64
                                     GHC.Word.neWord64];

Foreign.C.Types.$fOrdCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCULLong
                                      GHC.Word.$fOrdWord64_$ccompare
                                      GHC.Word.ltWord64
                                      GHC.Word.leWord64
                                      GHC.Word.gtWord64
                                      GHC.Word.geWord64
                                      GHC.Word.$fOrdWord64_$cmax
                                      GHC.Word.$fOrdWord64_$cmin];

Foreign.C.Types.$fRealCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CULLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCULLong
                                    Foreign.C.Types.$fOrdCULLong
                                    GHC.Word.$fRealWord64_$ctoRational];

Foreign.C.Types.$fIntegralCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CULLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCULLong
                                        Foreign.C.Types.$fEnumCULLong
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cquotRem
                                        GHC.Word.$fIntegralWord64_$cdivMod
                                        GHC.Word.$fIntegralWord64_$ctoInteger];

Foreign.C.Types.$fBitsCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCULLong
                                     GHC.Word.$fBitsWord64_$c.&.
                                     GHC.Word.$fBitsWord64_$c.|.
                                     GHC.Word.$fBitsWord64_$cxor
                                     GHC.Word.$fBitsWord64_$ccomplement
                                     GHC.Word.$fBitsWord64_$cshift
                                     GHC.Word.$fBitsWord64_$crotate
                                     GHC.Word.$fBitsWord7
                                     GHC.Word.$fBitsWord64_$cbit
                                     GHC.Word.$fBitsWord64_$csetBit
                                     GHC.Word.$fBitsWord64_$cclearBit
                                     GHC.Word.$fBitsWord64_$ccomplementBit
                                     GHC.Word.$fBitsWord64_$ctestBit
                                     GHC.Word.$fBitsWord64_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord64_$cfiniteBitSize
                                     GHC.Word.$fBitsWord64_$cisSigned
                                     GHC.Word.$fBitsWord64_$cshiftL
                                     GHC.Word.$fBitsWord64_$cunsafeShiftL
                                     GHC.Word.$fBitsWord64_$cshiftR
                                     GHC.Word.$fBitsWord64_$cunsafeShiftR
                                     GHC.Word.$fBitsWord64_$crotateL
                                     GHC.Word.$fBitsWord64_$crotateR
                                     GHC.Word.$fBitsWord64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCULLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CULLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCULLong
                                           GHC.Word.$fBitsWord64_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord64_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CLLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fBoundedCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt64_$cminBound
                                       GHC.Int.$fBoundedInt64_$cmaxBound];

Foreign.C.Types.$fStorableCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CLLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCLLong
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CLLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCLLong
                                    Foreign.C.Types.$fOrdCLLong
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fIntegralCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CLLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCLLong
                                        Foreign.C.Types.$fEnumCLLong
                                        GHC.Int.$fIntegralInt64_$cquot
                                        GHC.Int.$fIntegralInt64_$crem
                                        GHC.Int.$fIntegralInt64_$cdiv
                                        GHC.Int.$fIntegralInt64_$cmod
                                        GHC.Int.$fIntegralInt64_$cquotRem
                                        GHC.Int.$fIntegralInt64_$cdivMod
                                        GHC.Int.$fIntegralInt64_$ctoInteger];

Foreign.C.Types.$fBitsCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCLLong
                                     GHC.Int.$fBitsInt64_$c.&.
                                     GHC.Int.$fBitsInt64_$c.|.
                                     GHC.Int.$fBitsInt64_$cxor
                                     GHC.Int.$fBitsInt64_$ccomplement
                                     GHC.Int.$fBitsInt64_$cshift
                                     GHC.Int.$fBitsInt64_$crotate
                                     GHC.Int.$fBitsInt10
                                     GHC.Int.$fBitsInt64_$cbit
                                     GHC.Int.$fBitsInt64_$csetBit
                                     GHC.Int.$fBitsInt64_$cclearBit
                                     GHC.Int.$fBitsInt64_$ccomplementBit
                                     GHC.Int.$fBitsInt64_$ctestBit
                                     GHC.Int.$fBitsInt64_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt64_$cfiniteBitSize
                                     GHC.Int.$fBitsInt64_$cisSigned
                                     GHC.Int.$fBitsInt64_$cshiftL
                                     GHC.Int.$fBitsInt64_$cunsafeShiftL
                                     GHC.Int.$fBitsInt64_$cshiftR
                                     GHC.Int.$fBitsInt64_$cunsafeShiftR
                                     GHC.Int.$fBitsInt64_$crotateL
                                     GHC.Int.$fBitsInt64_$crotateR
                                     GHC.Int.$fBitsInt64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCLLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CLLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCLLong
                                           GHC.Int.$fBitsInt64_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CULong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord64_$cshowsPrec
                                    GHC.Word.$fShowWord64_$cshow
                                    GHC.Word.$fShowWord64_$cshowList];

Foreign.C.Types.$fReadCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CULong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord64_$creadsPrec
                                    GHC.Read.$fReadWord64_$creadList
                                    GHC.Read.$fReadWord13
                                    GHC.Read.$fReadWord11];

Foreign.C.Types.$fBoundedCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord7
                                       GHC.Word.$fBoundedWord64_$cmaxBound];

Foreign.C.Types.$fStorableCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord64_$calignment
                                                Foreign.Storable.$fStorableWord64_$calignment
                                                GHC.Storable.readWord64OffPtr1
                                                GHC.Storable.writeWord64OffPtr1
                                                Foreign.Storable.$fStorableWord18
                                                Foreign.Storable.$fStorableWord17
                                                Foreign.Storable.$fStorableWord15
                                                Foreign.Storable.$fStorableWord14];

Foreign.C.Types.$fEnumCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CULong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord64_$csucc
                                    GHC.Word.$fEnumWord64_$cpred
                                    GHC.Word.$fEnumWord64_$ctoEnum
                                    GHC.Word.$fEnumWord64_$cfromEnum
                                    GHC.Word.$fEnumWord64_$cenumFrom
                                    GHC.Word.$fEnumWord64_$cenumFromThen
                                    GHC.Word.$fEnumWord64_$cenumFromTo
                                    GHC.Word.$fEnumWord64_$cenumFromThenTo];

Foreign.C.Types.$fNumCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord64_$c+
                                  GHC.Word.$fNumWord64_$c-
                                  GHC.Word.$fNumWord64_$c*
                                  GHC.Word.$fNumWord64_$cnegate
                                  GHC.Word.$fNumWord64_$cabs
                                  GHC.Word.$fNumWord64_$csignum
                                  GHC.Word.$fNumWord64_$cfromInteger];

Foreign.C.Types.$fEqCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord64
                                     GHC.Word.neWord64];

Foreign.C.Types.$fOrdCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCULong
                                      GHC.Word.$fOrdWord64_$ccompare
                                      GHC.Word.ltWord64
                                      GHC.Word.leWord64
                                      GHC.Word.gtWord64
                                      GHC.Word.geWord64
                                      GHC.Word.$fOrdWord64_$cmax
                                      GHC.Word.$fOrdWord64_$cmin];

Foreign.C.Types.$fRealCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CULong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCULong
                                    Foreign.C.Types.$fOrdCULong
                                    GHC.Word.$fRealWord64_$ctoRational];

Foreign.C.Types.$fIntegralCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CULong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCULong
                                        Foreign.C.Types.$fEnumCULong
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cdiv
                                        GHC.Word.$fIntegralWord64_$cmod
                                        GHC.Word.$fIntegralWord64_$cquotRem
                                        GHC.Word.$fIntegralWord64_$cdivMod
                                        GHC.Word.$fIntegralWord64_$ctoInteger];

Foreign.C.Types.$fBitsCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCULong
                                     GHC.Word.$fBitsWord64_$c.&.
                                     GHC.Word.$fBitsWord64_$c.|.
                                     GHC.Word.$fBitsWord64_$cxor
                                     GHC.Word.$fBitsWord64_$ccomplement
                                     GHC.Word.$fBitsWord64_$cshift
                                     GHC.Word.$fBitsWord64_$crotate
                                     GHC.Word.$fBitsWord7
                                     GHC.Word.$fBitsWord64_$cbit
                                     GHC.Word.$fBitsWord64_$csetBit
                                     GHC.Word.$fBitsWord64_$cclearBit
                                     GHC.Word.$fBitsWord64_$ccomplementBit
                                     GHC.Word.$fBitsWord64_$ctestBit
                                     GHC.Word.$fBitsWord64_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord64_$cfiniteBitSize
                                     GHC.Word.$fBitsWord64_$cisSigned
                                     GHC.Word.$fBitsWord64_$cshiftL
                                     GHC.Word.$fBitsWord64_$cunsafeShiftL
                                     GHC.Word.$fBitsWord64_$cshiftR
                                     GHC.Word.$fBitsWord64_$cunsafeShiftR
                                     GHC.Word.$fBitsWord64_$crotateL
                                     GHC.Word.$fBitsWord64_$crotateR
                                     GHC.Word.$fBitsWord64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCULong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CULong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCULong
                                           GHC.Word.$fBitsWord64_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord64_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt64_$cshowsPrec
                                    GHC.Int.$fShowInt64_$cshow
                                    GHC.Int.$fShowInt64_$cshowList];

Foreign.C.Types.$fReadCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt64_$creadsPrec
                                    GHC.Int.$fReadInt64_$creadList
                                    GHC.Int.$fReadInt10
                                    GHC.Int.$fReadInt7];

Foreign.C.Types.$fBoundedCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt64_$cminBound
                                       GHC.Int.$fBoundedInt64_$cmaxBound];

Foreign.C.Types.$fStorableCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt64_$calignment
                                                Foreign.Storable.$fStorableInt64_$calignment
                                                GHC.Storable.readInt64OffPtr1
                                                GHC.Storable.writeInt64OffPtr1
                                                Foreign.Storable.$fStorableInt19
                                                Foreign.Storable.$fStorableInt18
                                                Foreign.Storable.$fStorableInt17
                                                Foreign.Storable.$fStorableInt15];

Foreign.C.Types.$fEnumCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt64_$csucc
                                    GHC.Int.$fEnumInt64_$cpred
                                    GHC.Int.$fEnumInt64_$ctoEnum
                                    GHC.Int.$fEnumInt64_$cfromEnum
                                    GHC.Int.$fEnumInt64_$cenumFrom
                                    GHC.Int.$fEnumInt64_$cenumFromThen
                                    GHC.Int.$fEnumInt64_$cenumFromTo
                                    GHC.Int.$fEnumInt64_$cenumFromThenTo];

Foreign.C.Types.$fNumCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt64_$c+
                                  GHC.Int.$fNumInt64_$c-
                                  GHC.Int.$fNumInt64_$c*
                                  GHC.Int.$fNumInt64_$cnegate
                                  GHC.Int.$fNumInt64_$cabs
                                  GHC.Int.$fNumInt64_$csignum
                                  GHC.Int.$fNumInt64_$cfromInteger];

Foreign.C.Types.$fEqCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt64 GHC.Int.neInt64];

Foreign.C.Types.$fOrdCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCLong
                                      GHC.Int.$fOrdInt64_$ccompare
                                      GHC.Int.ltInt64
                                      GHC.Int.leInt64
                                      GHC.Int.gtInt64
                                      GHC.Int.geInt64
                                      GHC.Int.$fOrdInt64_$cmax
                                      GHC.Int.$fOrdInt64_$cmin];

Foreign.C.Types.$fRealCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCLong
                                    Foreign.C.Types.$fOrdCLong
                                    GHC.Int.$fRealInt64_$ctoRational];

Foreign.C.Types.$fIntegralCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CLong
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCLong
                                        Foreign.C.Types.$fEnumCLong
                                        GHC.Int.$fIntegralInt64_$cquot
                                        GHC.Int.$fIntegralInt64_$crem
                                        GHC.Int.$fIntegralInt64_$cdiv
                                        GHC.Int.$fIntegralInt64_$cmod
                                        GHC.Int.$fIntegralInt64_$cquotRem
                                        GHC.Int.$fIntegralInt64_$cdivMod
                                        GHC.Int.$fIntegralInt64_$ctoInteger];

Foreign.C.Types.$fBitsCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCLong
                                     GHC.Int.$fBitsInt64_$c.&.
                                     GHC.Int.$fBitsInt64_$c.|.
                                     GHC.Int.$fBitsInt64_$cxor
                                     GHC.Int.$fBitsInt64_$ccomplement
                                     GHC.Int.$fBitsInt64_$cshift
                                     GHC.Int.$fBitsInt64_$crotate
                                     GHC.Int.$fBitsInt10
                                     GHC.Int.$fBitsInt64_$cbit
                                     GHC.Int.$fBitsInt64_$csetBit
                                     GHC.Int.$fBitsInt64_$cclearBit
                                     GHC.Int.$fBitsInt64_$ccomplementBit
                                     GHC.Int.$fBitsInt64_$ctestBit
                                     GHC.Int.$fBitsInt64_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt64_$cfiniteBitSize
                                     GHC.Int.$fBitsInt64_$cisSigned
                                     GHC.Int.$fBitsInt64_$cshiftL
                                     GHC.Int.$fBitsInt64_$cunsafeShiftL
                                     GHC.Int.$fBitsInt64_$cshiftR
                                     GHC.Int.$fBitsInt64_$cunsafeShiftR
                                     GHC.Int.$fBitsInt64_$crotateL
                                     GHC.Int.$fBitsInt64_$crotateR
                                     GHC.Int.$fBitsInt64_$cpopCount];

Foreign.C.Types.$fFiniteBitsCLong [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CLong
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCLong
                                           GHC.Int.$fBitsInt64_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt64_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt64_$ccountTrailingZeros];

Foreign.C.Types.$fShowCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord32_$cshowsPrec
                                    GHC.Word.$fShowWord32_$cshow
                                    GHC.Word.$fShowWord32_$cshowList];

Foreign.C.Types.$fReadCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord32_$creadsPrec
                                    GHC.Read.$fReadWord32_$creadList
                                    GHC.Read.$fReadWord10
                                    GHC.Read.$fReadWord7];

Foreign.C.Types.$fBoundedCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord32_$cminBound
                                       GHC.Word.$fBoundedWord32_$cmaxBound];

Foreign.C.Types.$fStorableCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord32_$calignment
                                                Foreign.Storable.$fStorableWord32_$calignment
                                                GHC.Storable.readWord32OffPtr1
                                                GHC.Storable.writeWord32OffPtr1
                                                Foreign.Storable.$fStorableWord13
                                                Foreign.Storable.$fStorableWord12
                                                Foreign.Storable.$fStorableWord11
                                                Foreign.Storable.$fStorableWord10];

Foreign.C.Types.$fEnumCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord32_$csucc
                                    GHC.Word.$fEnumWord32_$cpred
                                    GHC.Word.$fEnumWord32_$ctoEnum
                                    GHC.Word.$fEnumWord32_$cfromEnum
                                    GHC.Word.$fEnumWord32_$cenumFrom
                                    GHC.Word.$fEnumWord32_$cenumFromThen
                                    GHC.Word.$fEnumWord32_$cenumFromTo
                                    GHC.Word.$fEnumWord32_$cenumFromThenTo];

Foreign.C.Types.$fNumCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord32_$c+
                                  GHC.Word.$fNumWord32_$c-
                                  GHC.Word.$fNumWord32_$c*
                                  GHC.Word.$fNumWord32_$cnegate
                                  GHC.Word.$fNumWord32_$cabs
                                  GHC.Word.$fNumWord32_$csignum
                                  GHC.Word.$fNumWord32_$cfromInteger];

Foreign.C.Types.$fEqCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord32
                                     GHC.Word.neWord32];

Foreign.C.Types.$fOrdCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUInt
                                      GHC.Word.$fOrdWord32_$ccompare
                                      GHC.Word.ltWord32
                                      GHC.Word.leWord32
                                      GHC.Word.gtWord32
                                      GHC.Word.geWord32
                                      GHC.Word.$fOrdWord32_$cmax
                                      GHC.Word.$fOrdWord32_$cmin];

Foreign.C.Types.$fRealCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUInt
                                    Foreign.C.Types.$fOrdCUInt
                                    GHC.Word.$fRealWord32_$ctoRational];

Foreign.C.Types.$fIntegralCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CUInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCUInt
                                        Foreign.C.Types.$fEnumCUInt
                                        GHC.Word.$fIntegralWord32_$cquot
                                        GHC.Word.$fIntegralWord32_$crem
                                        GHC.Word.$fIntegralWord32_$cquot
                                        GHC.Word.$fIntegralWord32_$crem
                                        GHC.Word.$fIntegralWord32_$cquotRem
                                        GHC.Word.$fIntegralWord32_$cdivMod
                                        GHC.Word.$ctoInteger2];

Foreign.C.Types.$fBitsCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCUInt
                                     GHC.Word.$fBitsWord32_$c.&.
                                     GHC.Word.$fBitsWord32_$c.|.
                                     GHC.Word.$fBitsWord32_$cxor
                                     GHC.Word.$fBitsWord32_$ccomplement
                                     GHC.Word.$fBitsWord32_$cshift
                                     GHC.Word.$fBitsWord32_$crotate
                                     GHC.Word.$fBitsWord32_$cminBound
                                     GHC.Word.$fBitsWord32_$cbit
                                     GHC.Word.$fBitsWord32_$csetBit
                                     GHC.Word.$fBitsWord32_$cclearBit
                                     GHC.Word.$fBitsWord32_$ccomplementBit
                                     GHC.Word.$fBitsWord32_$ctestBit
                                     GHC.Word.$fBitsWord32_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord32_$cfiniteBitSize
                                     GHC.Word.$fBitsWord32_$cisSigned
                                     GHC.Word.$fBitsWord32_$cshiftL
                                     GHC.Word.$fBitsWord32_$cunsafeShiftL
                                     GHC.Word.$fBitsWord32_$cshiftR
                                     GHC.Word.$fBitsWord32_$cunsafeShiftR
                                     GHC.Word.$fBitsWord32_$crotateL
                                     GHC.Word.$fBitsWord32_$crotateR
                                     GHC.Word.$fBitsWord32_$cpopCount];

Foreign.C.Types.$fFiniteBitsCUInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CUInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCUInt
                                           GHC.Word.$fBitsWord32_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord32_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord32_$ccountTrailingZeros];

Foreign.C.Types.$fShowCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt32_$cshowsPrec
                                    GHC.Int.$fShowInt32_$cshow
                                    GHC.Int.$fShowInt32_$cshowList];

Foreign.C.Types.$fReadCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt32_$creadsPrec
                                    GHC.Int.$fReadInt32_$creadList
                                    GHC.Int.$fReadInt6
                                    GHC.Int.$fReadInt4];

Foreign.C.Types.$fBoundedCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt32_$cminBound
                                       GHC.Int.$fBoundedInt32_$cmaxBound];

Foreign.C.Types.$fStorableCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt32_$calignment
                                                Foreign.Storable.$fStorableInt32_$calignment
                                                GHC.Storable.readInt32OffPtr1
                                                GHC.Storable.writeInt32OffPtr1
                                                Foreign.Storable.$fStorableInt14
                                                Foreign.Storable.$fStorableInt13
                                                Foreign.Storable.$fStorableInt12
                                                Foreign.Storable.$fStorableInt11];

Foreign.C.Types.$fEnumCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt32_$csucc
                                    GHC.Int.$fEnumInt32_$cpred
                                    GHC.Int.$fEnumInt32_$ctoEnum
                                    GHC.Int.$fEnumInt32_$cfromEnum
                                    GHC.Int.$fEnumInt32_$cenumFrom
                                    GHC.Int.$fEnumInt32_$cenumFromThen
                                    GHC.Int.$fEnumInt32_$cenumFromTo
                                    GHC.Int.$fEnumInt32_$cenumFromThenTo];

Foreign.C.Types.$fNumCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt32_$c+
                                  GHC.Int.$fNumInt32_$c-
                                  GHC.Int.$fNumInt32_$c*
                                  GHC.Int.$fNumInt32_$cnegate
                                  GHC.Int.$fNumInt32_$cabs
                                  GHC.Int.$fNumInt32_$csignum
                                  GHC.Int.$fNumInt32_$cfromInteger];

Foreign.C.Types.$fEqCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt32 GHC.Int.neInt32];

Foreign.C.Types.$fOrdCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCInt
                                      GHC.Int.$fOrdInt32_$ccompare
                                      GHC.Int.ltInt32
                                      GHC.Int.leInt32
                                      GHC.Int.gtInt32
                                      GHC.Int.geInt32
                                      GHC.Int.$fOrdInt32_$cmax
                                      GHC.Int.$fOrdInt32_$cmin];

Foreign.C.Types.$fRealCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCInt
                                    Foreign.C.Types.$fOrdCInt
                                    GHC.Int.$fRealInt32_$ctoRational];

Foreign.C.Types.$fIntegralCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CInt
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCInt
                                        Foreign.C.Types.$fEnumCInt
                                        GHC.Int.$fIntegralInt32_$cquot
                                        GHC.Int.$fIntegralInt32_$crem
                                        GHC.Int.$fIntegralInt32_$cdiv
                                        GHC.Int.$fIntegralInt32_$cmod
                                        GHC.Int.$fIntegralInt32_$cquotRem
                                        GHC.Int.$fIntegralInt32_$cdivMod
                                        GHC.Int.$fIntegralInt32_$ctoInteger];

Foreign.C.Types.$fBitsCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCInt
                                     GHC.Int.$fBitsInt32_$c.&.
                                     GHC.Int.$fBitsInt32_$c.|.
                                     GHC.Int.$fBitsInt32_$cxor
                                     GHC.Int.$fBitsInt32_$ccomplement
                                     GHC.Int.$fBitsInt32_$cshift
                                     GHC.Int.$fBitsInt32_$crotate
                                     GHC.Int.$fBitsInt6
                                     GHC.Int.$fBitsInt32_$cbit
                                     GHC.Int.$fBitsInt32_$csetBit
                                     GHC.Int.$fBitsInt32_$cclearBit
                                     GHC.Int.$fBitsInt32_$ccomplementBit
                                     GHC.Int.$fBitsInt32_$ctestBit
                                     GHC.Int.$fBitsInt32_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt32_$cfiniteBitSize
                                     GHC.Int.$fBitsInt32_$cisSigned
                                     GHC.Int.$fBitsInt32_$cshiftL
                                     GHC.Int.$fBitsInt32_$cunsafeShiftL
                                     GHC.Int.$fBitsInt32_$cshiftR
                                     GHC.Int.$fBitsInt32_$cunsafeShiftR
                                     GHC.Int.$fBitsInt32_$crotateL
                                     GHC.Int.$fBitsInt32_$crotateR
                                     GHC.Int.$fBitsInt32_$cpopCount];

Foreign.C.Types.$fFiniteBitsCInt [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CInt
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCInt
                                           GHC.Int.$fBitsInt32_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt32_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt32_$ccountTrailingZeros];

Foreign.C.Types.$fShowCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord16_$cshowsPrec
                                    GHC.Word.$fShowWord16_$cshow
                                    GHC.Word.$fShowWord16_$cshowList];

Foreign.C.Types.$fReadCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord16_$creadsPrec
                                    GHC.Read.$fReadWord16_$creadList
                                    GHC.Read.$fReadWord6
                                    GHC.Read.$fReadWord4];

Foreign.C.Types.$fBoundedCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord16_$cminBound
                                       GHC.Word.$fBoundedWord16_$cmaxBound];

Foreign.C.Types.$fStorableCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord16_$calignment
                                                Foreign.Storable.$fStorableWord16_$calignment
                                                GHC.Storable.readWord16OffPtr1
                                                GHC.Storable.writeWord16OffPtr1
                                                Foreign.Storable.$fStorableWord9
                                                Foreign.Storable.$fStorableWord7
                                                Foreign.Storable.$fStorableWord6
                                                Foreign.Storable.$fStorableWord5];

Foreign.C.Types.$fEnumCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord16_$csucc
                                    GHC.Word.$fEnumWord16_$cpred
                                    GHC.Word.$fEnumWord16_$ctoEnum
                                    GHC.Word.$fEnumWord16_$cfromEnum
                                    GHC.Word.$fEnumWord16_$cenumFrom
                                    GHC.Word.$fEnumWord16_$cenumFromThen
                                    GHC.Word.$fEnumWord16_$cenumFromTo
                                    GHC.Word.$fEnumWord16_$cenumFromThenTo];

Foreign.C.Types.$fNumCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord16_$c+
                                  GHC.Word.$fNumWord16_$c-
                                  GHC.Word.$fNumWord16_$c*
                                  GHC.Word.$fNumWord16_$cnegate
                                  GHC.Word.$fNumWord16_$cabs
                                  GHC.Word.$fNumWord16_$csignum
                                  GHC.Word.$fNumWord16_$cfromInteger];

Foreign.C.Types.$fEqCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord16
                                     GHC.Word.neWord16];

Foreign.C.Types.$fOrdCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUShort
                                      GHC.Word.$fOrdWord16_$ccompare
                                      GHC.Word.ltWord16
                                      GHC.Word.leWord16
                                      GHC.Word.gtWord16
                                      GHC.Word.geWord16
                                      GHC.Word.$fOrdWord16_$cmax
                                      GHC.Word.$fOrdWord16_$cmin];

Foreign.C.Types.$fRealCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUShort
                                    Foreign.C.Types.$fOrdCUShort
                                    GHC.Word.$fRealWord16_$ctoRational];

Foreign.C.Types.$fIntegralCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CUShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCUShort
                                        Foreign.C.Types.$fEnumCUShort
                                        GHC.Word.$fIntegralWord16_$cquot
                                        GHC.Word.$fIntegralWord16_$crem
                                        GHC.Word.$fIntegralWord16_$cquot
                                        GHC.Word.$fIntegralWord16_$crem
                                        GHC.Word.$fIntegralWord16_$cquotRem
                                        GHC.Word.$fIntegralWord16_$cdivMod
                                        GHC.Word.$ctoInteger1];

Foreign.C.Types.$fBitsCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCUShort
                                     GHC.Word.$fBitsWord16_$c.&.
                                     GHC.Word.$fBitsWord16_$c.|.
                                     GHC.Word.$fBitsWord16_$cxor
                                     GHC.Word.$fBitsWord16_$ccomplement
                                     GHC.Word.$fBitsWord16_$cshift
                                     GHC.Word.$fBitsWord16_$crotate
                                     GHC.Word.$fBitsWord16_$cminBound
                                     GHC.Word.$fBitsWord16_$cbit
                                     GHC.Word.$fBitsWord16_$csetBit
                                     GHC.Word.$fBitsWord16_$cclearBit
                                     GHC.Word.$fBitsWord16_$ccomplementBit
                                     GHC.Word.$fBitsWord16_$ctestBit
                                     GHC.Word.$fBitsWord16_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord16_$cfiniteBitSize
                                     GHC.Word.$fBitsWord16_$cisSigned
                                     GHC.Word.$fBitsWord16_$cshiftL
                                     GHC.Word.$fBitsWord16_$cunsafeShiftL
                                     GHC.Word.$fBitsWord16_$cshiftR
                                     GHC.Word.$fBitsWord16_$cunsafeShiftR
                                     GHC.Word.$fBitsWord16_$crotateL
                                     GHC.Word.$fBitsWord16_$crotateR
                                     GHC.Word.$fBitsWord16_$cpopCount];

Foreign.C.Types.$fFiniteBitsCUShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CUShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCUShort
                                           GHC.Word.$fBitsWord16_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord16_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord16_$ccountTrailingZeros];

Foreign.C.Types.$fShowCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt16_$cshowsPrec
                                    GHC.Int.$fShowInt16_$cshow
                                    GHC.Int.$fShowInt16_$cshowList];

Foreign.C.Types.$fReadCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt16_$creadsPrec
                                    GHC.Int.$fReadInt16_$creadList
                                    GHC.Int.$fReadInt3
                                    GHC.Int.$fReadInt1];

Foreign.C.Types.$fBoundedCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt16_$cminBound
                                       GHC.Int.$fBoundedInt16_$cmaxBound];

Foreign.C.Types.$fStorableCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt16_$calignment
                                                Foreign.Storable.$fStorableInt16_$calignment
                                                GHC.Storable.readInt16OffPtr1
                                                GHC.Storable.writeInt16OffPtr1
                                                Foreign.Storable.$fStorableInt9
                                                Foreign.Storable.$fStorableInt7
                                                Foreign.Storable.$fStorableInt6
                                                Foreign.Storable.$fStorableInt5];

Foreign.C.Types.$fEnumCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt16_$csucc
                                    GHC.Int.$fEnumInt16_$cpred
                                    GHC.Int.$fEnumInt16_$ctoEnum
                                    GHC.Int.$fEnumInt16_$cfromEnum
                                    GHC.Int.$fEnumInt16_$cenumFrom
                                    GHC.Int.$fEnumInt16_$cenumFromThen
                                    GHC.Int.$fEnumInt16_$cenumFromTo
                                    GHC.Int.$fEnumInt16_$cenumFromThenTo];

Foreign.C.Types.$fNumCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt16_$c+
                                  GHC.Int.$fNumInt16_$c-
                                  GHC.Int.$fNumInt16_$c*
                                  GHC.Int.$fNumInt16_$cnegate
                                  GHC.Int.$fNumInt16_$cabs
                                  GHC.Int.$fNumInt16_$csignum
                                  GHC.Int.$fNumInt16_$cfromInteger];

Foreign.C.Types.$fEqCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt16 GHC.Int.neInt16];

Foreign.C.Types.$fOrdCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCShort
                                      GHC.Int.$fOrdInt16_$ccompare
                                      GHC.Int.ltInt16
                                      GHC.Int.leInt16
                                      GHC.Int.gtInt16
                                      GHC.Int.geInt16
                                      GHC.Int.$fOrdInt16_$cmax
                                      GHC.Int.$fOrdInt16_$cmin];

Foreign.C.Types.$fRealCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCShort
                                    Foreign.C.Types.$fOrdCShort
                                    GHC.Int.$fRealInt16_$ctoRational];

Foreign.C.Types.$fIntegralCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CShort
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCShort
                                        Foreign.C.Types.$fEnumCShort
                                        GHC.Int.$fIntegralInt16_$cquot
                                        GHC.Int.$fIntegralInt16_$crem
                                        GHC.Int.$fIntegralInt16_$cdiv
                                        GHC.Int.$fIntegralInt16_$cmod
                                        GHC.Int.$fIntegralInt16_$cquotRem
                                        GHC.Int.$fIntegralInt16_$cdivMod
                                        GHC.Int.$fIntegralInt16_$ctoInteger];

Foreign.C.Types.$fBitsCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCShort
                                     GHC.Int.$fBitsInt16_$c.&.
                                     GHC.Int.$fBitsInt16_$c.|.
                                     GHC.Int.$fBitsInt16_$cxor
                                     GHC.Int.$fBitsInt16_$ccomplement
                                     GHC.Int.$fBitsInt16_$cshift
                                     GHC.Int.$fBitsInt16_$crotate
                                     GHC.Int.$fBitsInt3
                                     GHC.Int.$fBitsInt16_$cbit
                                     GHC.Int.$fBitsInt16_$csetBit
                                     GHC.Int.$fBitsInt16_$cclearBit
                                     GHC.Int.$fBitsInt16_$ccomplementBit
                                     GHC.Int.$fBitsInt16_$ctestBit
                                     GHC.Int.$fBitsInt16_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt16_$cfiniteBitSize
                                     GHC.Int.$fBitsInt16_$cisSigned
                                     GHC.Int.$fBitsInt16_$cshiftL
                                     GHC.Int.$fBitsInt16_$cunsafeShiftL
                                     GHC.Int.$fBitsInt16_$cshiftR
                                     GHC.Int.$fBitsInt16_$cunsafeShiftR
                                     GHC.Int.$fBitsInt16_$crotateL
                                     GHC.Int.$fBitsInt16_$crotateR
                                     GHC.Int.$fBitsInt16_$cpopCount];

Foreign.C.Types.$fFiniteBitsCShort [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CShort
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCShort
                                           GHC.Int.$fBitsInt16_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros];

Foreign.C.Types.$fShowCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Word.$fShowWord8_$cshowsPrec
                                    GHC.Word.$fShowWord8_$cshow
                                    GHC.Word.$fShowWord8_$cshowList];

Foreign.C.Types.$fReadCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CUChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Read.$fReadWord8_$creadsPrec
                                    GHC.Read.$fReadWord8_$creadList
                                    GHC.Read.$fReadWord17
                                    GHC.Read.$fReadWord14];

Foreign.C.Types.$fBoundedCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Word.$fBitsWord8_$cminBound
                                       GHC.Word.$fBoundedWord8_$cmaxBound];

Foreign.C.Types.$fStorableCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableWord8_$calignment
                                                Foreign.Storable.$fStorableWord8_$calignment
                                                GHC.Storable.readWord8OffPtr1
                                                GHC.Storable.writeWord8OffPtr1
                                                Foreign.Storable.$fStorableWord22
                                                Foreign.Storable.$fStorableWord21
                                                Foreign.Storable.$fStorableWord20
                                                Foreign.Storable.$fStorableWord19];

Foreign.C.Types.$fEnumCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CUChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Word.$fEnumWord8_$csucc
                                    GHC.Word.$fEnumWord8_$cpred
                                    GHC.Word.$fEnumWord8_$ctoEnum
                                    GHC.Word.$fEnumWord8_$cfromEnum
                                    GHC.Word.$fEnumWord8_$cenumFrom
                                    GHC.Word.$fEnumWord8_$cenumFromThen
                                    GHC.Word.$fEnumWord8_$cenumFromTo
                                    GHC.Word.$fEnumWord8_$cenumFromThenTo];

Foreign.C.Types.$fNumCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord8_$c+
                                  GHC.Word.$fNumWord8_$c-
                                  GHC.Word.$fNumWord8_$c*
                                  GHC.Word.$fNumWord8_$cnegate
                                  GHC.Word.$fNumWord8_$cabs
                                  GHC.Word.$fNumWord8_$csignum
                                  GHC.Word.$fNumWord8_$cfromInteger];

Foreign.C.Types.$fEqCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord8
                                     GHC.Word.neWord8];

Foreign.C.Types.$fOrdCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCUChar
                                      GHC.Word.$fOrdWord8_$ccompare
                                      GHC.Word.ltWord8
                                      GHC.Word.leWord8
                                      GHC.Word.gtWord8
                                      GHC.Word.geWord8
                                      GHC.Word.$fOrdWord8_$cmax
                                      GHC.Word.$fOrdWord8_$cmin];

Foreign.C.Types.$fRealCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CUChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCUChar
                                    Foreign.C.Types.$fOrdCUChar
                                    GHC.Word.$fRealWord8_$ctoRational];

Foreign.C.Types.$fIntegralCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CUChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCUChar
                                        Foreign.C.Types.$fEnumCUChar
                                        GHC.Word.$fIntegralWord8_$cquot
                                        GHC.Word.$fIntegralWord8_$crem
                                        GHC.Word.$fIntegralWord8_$cquot
                                        GHC.Word.$fIntegralWord8_$crem
                                        GHC.Word.$fIntegralWord8_$cquotRem
                                        GHC.Word.$fIntegralWord8_$cdivMod
                                        GHC.Word.$ctoInteger];

Foreign.C.Types.$fBitsCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCUChar
                                     GHC.Word.$fBitsWord8_$c.&.
                                     GHC.Word.$fBitsWord8_$c.|.
                                     GHC.Word.$fBitsWord8_$cxor
                                     GHC.Word.$fBitsWord8_$ccomplement
                                     GHC.Word.$fBitsWord8_$cshift
                                     GHC.Word.$fBitsWord8_$crotate
                                     GHC.Word.$fBitsWord8_$cminBound
                                     GHC.Word.$fBitsWord8_$cbit
                                     GHC.Word.$fBitsWord8_$csetBit
                                     GHC.Word.$fBitsWord8_$cclearBit
                                     GHC.Word.$fBitsWord8_$ccomplementBit
                                     GHC.Word.$fBitsWord8_$ctestBit
                                     GHC.Word.$fBitsWord8_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord8_$cfiniteBitSize
                                     GHC.Word.$fBitsWord8_$cisSigned
                                     GHC.Word.$fBitsWord8_$cshiftL
                                     GHC.Word.$fBitsWord8_$cunsafeShiftL
                                     GHC.Word.$fBitsWord8_$cshiftR
                                     GHC.Word.$fBitsWord8_$cunsafeShiftR
                                     GHC.Word.$fBitsWord8_$crotateL
                                     GHC.Word.$fBitsWord8_$crotateR
                                     GHC.Word.$fBitsWord8_$cpopCount];

Foreign.C.Types.$fFiniteBitsCUChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CUChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCUChar
                                           GHC.Word.$fBitsWord8_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord8_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord8_$ccountTrailingZeros];

Foreign.C.Types.$fShowCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt8_$cshowsPrec
                                    GHC.Int.$fShowInt8_$cshow
                                    GHC.Int.$fShowInt8_$cshowList];

Foreign.C.Types.$fReadCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CSChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt8_$creadsPrec
                                    GHC.Int.$fReadInt8_$creadList
                                    GHC.Int.$fReadInt13
                                    GHC.Int.$fReadInt11];

Foreign.C.Types.$fBoundedCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt8_$cminBound
                                       GHC.Int.$fBoundedInt8_$cmaxBound];

Foreign.C.Types.$fStorableCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt8_$calignment
                                                Foreign.Storable.$fStorableInt8_$calignment
                                                GHC.Storable.readInt8OffPtr1
                                                GHC.Storable.writeInt8OffPtr1
                                                Foreign.Storable.$fStorableInt23
                                                Foreign.Storable.$fStorableInt22
                                                Foreign.Storable.$fStorableInt21
                                                Foreign.Storable.$fStorableInt20];

Foreign.C.Types.$fEnumCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CSChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt8_$csucc
                                    GHC.Int.$fEnumInt8_$cpred
                                    GHC.Int.$fEnumInt8_$ctoEnum
                                    GHC.Int.$fEnumInt8_$cfromEnum
                                    GHC.Int.$fEnumInt8_$cenumFrom
                                    GHC.Int.$fEnumInt8_$cenumFromThen
                                    GHC.Int.$fEnumInt8_$cenumFromTo
                                    GHC.Int.$fEnumInt8_$cenumFromThenTo];

Foreign.C.Types.$fNumCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt8_$c+
                                  GHC.Int.$fNumInt8_$c-
                                  GHC.Int.$fNumInt8_$c*
                                  GHC.Int.$fNumInt8_$cnegate
                                  GHC.Int.$fNumInt8_$cabs
                                  GHC.Int.$fNumInt8_$csignum
                                  GHC.Int.$fNumInt8_$cfromInteger];

Foreign.C.Types.$fEqCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt8 GHC.Int.neInt8];

Foreign.C.Types.$fOrdCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCSChar
                                      GHC.Int.$fOrdInt8_$ccompare
                                      GHC.Int.ltInt8
                                      GHC.Int.leInt8
                                      GHC.Int.gtInt8
                                      GHC.Int.geInt8
                                      GHC.Int.$fOrdInt8_$cmax
                                      GHC.Int.$fOrdInt8_$cmin];

Foreign.C.Types.$fRealCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CSChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCSChar
                                    Foreign.C.Types.$fOrdCSChar
                                    GHC.Int.$fRealInt8_$ctoRational];

Foreign.C.Types.$fIntegralCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CSChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCSChar
                                        Foreign.C.Types.$fEnumCSChar
                                        GHC.Int.$fIntegralInt8_$cquot
                                        GHC.Int.$fIntegralInt8_$crem
                                        GHC.Int.$fIntegralInt8_$cdiv
                                        GHC.Int.$fIntegralInt8_$cmod
                                        GHC.Int.$fIntegralInt8_$cquotRem
                                        GHC.Int.$fIntegralInt8_$cdivMod
                                        GHC.Int.$fIntegralInt8_$ctoInteger];

Foreign.C.Types.$fBitsCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCSChar
                                     GHC.Int.$fBitsInt8_$c.&.
                                     GHC.Int.$fBitsInt8_$c.|.
                                     GHC.Int.$fBitsInt8_$cxor
                                     GHC.Int.$fBitsInt8_$ccomplement
                                     GHC.Int.$fBitsInt8_$cshift
                                     GHC.Int.$fBitsInt8_$crotate
                                     GHC.Int.$fBitsInt13
                                     GHC.Int.$fBitsInt8_$cbit
                                     GHC.Int.$fBitsInt8_$csetBit
                                     GHC.Int.$fBitsInt8_$cclearBit
                                     GHC.Int.$fBitsInt8_$ccomplementBit
                                     GHC.Int.$fBitsInt8_$ctestBit
                                     GHC.Int.$fBitsInt8_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt8_$cfiniteBitSize
                                     GHC.Int.$fBitsInt8_$cisSigned
                                     GHC.Int.$fBitsInt8_$cshiftL
                                     GHC.Int.$fBitsInt8_$cunsafeShiftL
                                     GHC.Int.$fBitsInt8_$cshiftR
                                     GHC.Int.$fBitsInt8_$cunsafeShiftR
                                     GHC.Int.$fBitsInt8_$crotateL
                                     GHC.Int.$fBitsInt8_$crotateR
                                     GHC.Int.$fBitsInt8_$cpopCount];

Foreign.C.Types.$fFiniteBitsCSChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CSChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCSChar
                                           GHC.Int.$fBitsInt8_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros];

Foreign.C.Types.$fShowCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Int.$fShowInt8_$cshowsPrec
                                    GHC.Int.$fShowInt8_$cshow
                                    GHC.Int.$fShowInt8_$cshowList];

Foreign.C.Types.$fReadCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Read.Read Foreign.C.Types.CChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Read.C:Read! [GHC.Int.$fReadInt8_$creadsPrec
                                    GHC.Int.$fReadInt8_$creadList
                                    GHC.Int.$fReadInt13
                                    GHC.Int.$fReadInt11];

Foreign.C.Types.$fBoundedCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Bounded Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Bounded! [GHC.Int.$fBoundedInt8_$cminBound
                                       GHC.Int.$fBoundedInt8_$cmaxBound];

Foreign.C.Types.$fStorableCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt8_$calignment
                                                Foreign.Storable.$fStorableInt8_$calignment
                                                GHC.Storable.readInt8OffPtr1
                                                GHC.Storable.writeInt8OffPtr1
                                                Foreign.Storable.$fStorableInt23
                                                Foreign.Storable.$fStorableInt22
                                                Foreign.Storable.$fStorableInt21
                                                Foreign.Storable.$fStorableInt20];

Foreign.C.Types.$fEnumCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Enum.Enum Foreign.C.Types.CChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Enum.C:Enum! [GHC.Int.$fEnumInt8_$csucc
                                    GHC.Int.$fEnumInt8_$cpred
                                    GHC.Int.$fEnumInt8_$ctoEnum
                                    GHC.Int.$fEnumInt8_$cfromEnum
                                    GHC.Int.$fEnumInt8_$cenumFrom
                                    GHC.Int.$fEnumInt8_$cenumFromThen
                                    GHC.Int.$fEnumInt8_$cenumFromTo
                                    GHC.Int.$fEnumInt8_$cenumFromThenTo];

Foreign.C.Types.$fNumCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt8_$c+
                                  GHC.Int.$fNumInt8_$c-
                                  GHC.Int.$fNumInt8_$c*
                                  GHC.Int.$fNumInt8_$cnegate
                                  GHC.Int.$fNumInt8_$cabs
                                  GHC.Int.$fNumInt8_$csignum
                                  GHC.Int.$fNumInt8_$cfromInteger];

Foreign.C.Types.$fEqCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt8 GHC.Int.neInt8];

Foreign.C.Types.$fOrdCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Ord Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Ord! [Foreign.C.Types.$fEqCChar
                                      GHC.Int.$fOrdInt8_$ccompare
                                      GHC.Int.ltInt8
                                      GHC.Int.leInt8
                                      GHC.Int.gtInt8
                                      GHC.Int.geInt8
                                      GHC.Int.$fOrdInt8_$cmax
                                      GHC.Int.$fOrdInt8_$cmin];

Foreign.C.Types.$fRealCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Real Foreign.C.Types.CChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Real! [Foreign.C.Types.$fNumCChar
                                    Foreign.C.Types.$fOrdCChar
                                    GHC.Int.$fRealInt8_$ctoRational];

Foreign.C.Types.$fIntegralCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Real.Integral Foreign.C.Types.CChar
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Real.C:Integral! [Foreign.C.Types.$fRealCChar
                                        Foreign.C.Types.$fEnumCChar
                                        GHC.Int.$fIntegralInt8_$cquot
                                        GHC.Int.$fIntegralInt8_$crem
                                        GHC.Int.$fIntegralInt8_$cdiv
                                        GHC.Int.$fIntegralInt8_$cmod
                                        GHC.Int.$fIntegralInt8_$cquotRem
                                        GHC.Int.$fIntegralInt8_$cdivMod
                                        GHC.Int.$fIntegralInt8_$ctoInteger];

Foreign.C.Types.$fBitsCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [Foreign.C.Types.$fEqCChar
                                     GHC.Int.$fBitsInt8_$c.&.
                                     GHC.Int.$fBitsInt8_$c.|.
                                     GHC.Int.$fBitsInt8_$cxor
                                     GHC.Int.$fBitsInt8_$ccomplement
                                     GHC.Int.$fBitsInt8_$cshift
                                     GHC.Int.$fBitsInt8_$crotate
                                     GHC.Int.$fBitsInt13
                                     GHC.Int.$fBitsInt8_$cbit
                                     GHC.Int.$fBitsInt8_$csetBit
                                     GHC.Int.$fBitsInt8_$cclearBit
                                     GHC.Int.$fBitsInt8_$ccomplementBit
                                     GHC.Int.$fBitsInt8_$ctestBit
                                     GHC.Int.$fBitsInt8_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt8_$cfiniteBitSize
                                     GHC.Int.$fBitsInt8_$cisSigned
                                     GHC.Int.$fBitsInt8_$cshiftL
                                     GHC.Int.$fBitsInt8_$cunsafeShiftL
                                     GHC.Int.$fBitsInt8_$cshiftR
                                     GHC.Int.$fBitsInt8_$cunsafeShiftR
                                     GHC.Int.$fBitsInt8_$crotateL
                                     GHC.Int.$fBitsInt8_$crotateR
                                     GHC.Int.$fBitsInt8_$cpopCount];

Foreign.C.Types.$fFiniteBitsCChar [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits Foreign.C.Types.CChar
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [Foreign.C.Types.$fBitsCChar
                                           GHC.Int.$fBitsInt8_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt8_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt8_$ccountTrailingZeros];

Foreign.C.Types.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Foreign.C.Types.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$trModule4];

Foreign.C.Types.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Foreign.C.Types"#;

Foreign.C.Types.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$trModule2];

Foreign.C.Types.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Foreign.C.Types.$trModule3
                                     Foreign.C.Types.$trModule1];

$krep_r54rc :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Int.$tcInt8
                                              GHC.Types.[]];

$krep1_r54rd :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Int.$tcInt16
                                              GHC.Types.[]];

$krep2_r54re :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord16
                                              GHC.Types.[]];

$krep3_r54rf :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord8
                                              GHC.Types.[]];

$krep4_r54rg :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcFloat
                                              GHC.Types.[]];

$krep5_r54rh :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcDouble
                                              GHC.Types.[]];

$krep6_r54ri :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Int.$tcInt32
                                              GHC.Types.[]];

$krep7_r54rj :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord32
                                              GHC.Types.[]];

$krep8_r54rk :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Int.$tcInt64
                                              GHC.Types.[]];

$krep9_r54rl :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord64
                                              GHC.Types.[]];

Foreign.C.Types.$tcCChar2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CChar"#;

Foreign.C.Types.$tcCChar1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCChar2];

Foreign.C.Types.$tcCChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2396474507734313709##
                                    6682082218532013927##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCChar1
                                    0#
                                    GHC.Types.krep$*];

$krep10_r54rm :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCChar
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CChar1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r54rc $krep10_r54rm];

Foreign.C.Types.$tc'CChar3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CChar"#;

Foreign.C.Types.$tc'CChar2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CChar3];

Foreign.C.Types.$tc'CChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16530466139966006137##
                                    10909368544422599906##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CChar2
                                    0#
                                    Foreign.C.Types.$tc'CChar1];

Foreign.C.Types.$tcCSChar2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CSChar"#;

Foreign.C.Types.$tcCSChar1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCSChar2];

Foreign.C.Types.$tcCSChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [670014241423056801##
                                    13143642922997006659##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCSChar1
                                    0#
                                    GHC.Types.krep$*];

$krep11_r54rn :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCSChar
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CSChar1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r54rc $krep11_r54rn];

Foreign.C.Types.$tc'CSChar3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CSChar"#;

Foreign.C.Types.$tc'CSChar2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CSChar3];

Foreign.C.Types.$tc'CSChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12967293744565543744##
                                    16172465149069937779##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CSChar2
                                    0#
                                    Foreign.C.Types.$tc'CSChar1];

Foreign.C.Types.$tcCUChar2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUChar"#;

Foreign.C.Types.$tcCUChar1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUChar2];

Foreign.C.Types.$tcCUChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8453544638672177657##
                                    4088140939900538118##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUChar1
                                    0#
                                    GHC.Types.krep$*];

$krep12_r54ro :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUChar
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUChar1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r54rf $krep12_r54ro];

Foreign.C.Types.$tc'CUChar3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUChar"#;

Foreign.C.Types.$tc'CUChar2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUChar3];

Foreign.C.Types.$tc'CUChar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10663029171348202549##
                                    3183188510825835811##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUChar2
                                    0#
                                    Foreign.C.Types.$tc'CUChar1];

Foreign.C.Types.$tcCShort2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CShort"#;

Foreign.C.Types.$tcCShort1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCShort2];

Foreign.C.Types.$tcCShort :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14914560985572859509##
                                    5456450767128082830##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCShort1
                                    0#
                                    GHC.Types.krep$*];

$krep13_r54rp :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCShort
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CShort1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_r54rd $krep13_r54rp];

Foreign.C.Types.$tc'CShort3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CShort"#;

Foreign.C.Types.$tc'CShort2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CShort3];

Foreign.C.Types.$tc'CShort :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8012790609237483390##
                                    5585194063474609654##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CShort2
                                    0#
                                    Foreign.C.Types.$tc'CShort1];

Foreign.C.Types.$tcCUShort2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUShort"#;

Foreign.C.Types.$tcCUShort1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUShort2];

Foreign.C.Types.$tcCUShort :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8017488325625726968##
                                    17560577666502845853##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUShort1
                                    0#
                                    GHC.Types.krep$*];

$krep14_r54rq :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUShort
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUShort1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r54re $krep14_r54rq];

Foreign.C.Types.$tc'CUShort3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUShort"#;

Foreign.C.Types.$tc'CUShort2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUShort3];

Foreign.C.Types.$tc'CUShort :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [230481143628903571##
                                    69801006601599105##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUShort2
                                    0#
                                    Foreign.C.Types.$tc'CUShort1];

Foreign.C.Types.$tcCInt2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CInt"#;

Foreign.C.Types.$tcCInt1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCInt2];

Foreign.C.Types.$tcCInt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12436196710956858214##
                                    2085191951279969833##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCInt1
                                    0#
                                    GHC.Types.krep$*];

$krep15_r54rr :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCInt
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CInt1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep6_r54ri $krep15_r54rr];

Foreign.C.Types.$tc'CInt3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CInt"#;

Foreign.C.Types.$tc'CInt2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CInt3];

Foreign.C.Types.$tc'CInt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [1120313203669928333##
                                    2109434438009157121##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CInt2
                                    0#
                                    Foreign.C.Types.$tc'CInt1];

Foreign.C.Types.$tcCUInt2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUInt"#;

Foreign.C.Types.$tcCUInt1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUInt2];

Foreign.C.Types.$tcCUInt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14846027554880959849##
                                    1568033666229718172##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUInt1
                                    0#
                                    GHC.Types.krep$*];

$krep16_r54rs :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUInt
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUInt1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep7_r54rj $krep16_r54rs];

Foreign.C.Types.$tc'CUInt3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUInt"#;

Foreign.C.Types.$tc'CUInt2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUInt3];

Foreign.C.Types.$tc'CUInt :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5056806206685987871##
                                    16269849959994571619##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUInt2
                                    0#
                                    Foreign.C.Types.$tc'CUInt1];

Foreign.C.Types.$tcCLong2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CLong"#;

Foreign.C.Types.$tcCLong1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCLong2];

Foreign.C.Types.$tcCLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10646618100418836143##
                                    9243001812621971743##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCLong1
                                    0#
                                    GHC.Types.krep$*];

$krep17_r54rt :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCLong
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CLong1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep17_r54rt];

Foreign.C.Types.$tc'CLong3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CLong"#;

Foreign.C.Types.$tc'CLong2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CLong3];

Foreign.C.Types.$tc'CLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3628484187667118205##
                                    18251486164209701606##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CLong2
                                    0#
                                    Foreign.C.Types.$tc'CLong1];

Foreign.C.Types.$tcCULong2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CULong"#;

Foreign.C.Types.$tcCULong1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCULong2];

Foreign.C.Types.$tcCULong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13895283310731510483##
                                    3072096496662073086##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCULong1
                                    0#
                                    GHC.Types.krep$*];

$krep18_r54ru :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCULong
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CULong1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r54rl $krep18_r54ru];

Foreign.C.Types.$tc'CULong3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CULong"#;

Foreign.C.Types.$tc'CULong2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CULong3];

Foreign.C.Types.$tc'CULong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15519685101152487835##
                                    12004583885240283077##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CULong2
                                    0#
                                    Foreign.C.Types.$tc'CULong1];

Foreign.C.Types.$tcCLLong2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CLLong"#;

Foreign.C.Types.$tcCLLong1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCLLong2];

Foreign.C.Types.$tcCLLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14244409577131416195##
                                    5952802457093262910##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCLLong1
                                    0#
                                    GHC.Types.krep$*];

$krep19_r54rv :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCLLong
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CLLong1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep19_r54rv];

Foreign.C.Types.$tc'CLLong3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CLLong"#;

Foreign.C.Types.$tc'CLLong2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CLLong3];

Foreign.C.Types.$tc'CLLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5567960549599469613##
                                    3143535471112770491##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CLLong2
                                    0#
                                    Foreign.C.Types.$tc'CLLong1];

Foreign.C.Types.$tcCULLong2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CULLong"#;

Foreign.C.Types.$tcCULLong1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCULLong2];

Foreign.C.Types.$tcCULLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12322165229137886614##
                                    18269851590527847329##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCULLong1
                                    0#
                                    GHC.Types.krep$*];

$krep20_r54rw :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCULLong
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CULLong1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r54rl $krep20_r54rw];

Foreign.C.Types.$tc'CULLong3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CULLong"#;

Foreign.C.Types.$tc'CULLong2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CULLong3];

Foreign.C.Types.$tc'CULLong :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3146513334079263607##
                                    15997303439394869846##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CULLong2
                                    0#
                                    Foreign.C.Types.$tc'CULLong1];

Foreign.C.Types.$tcCBool2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CBool"#;

Foreign.C.Types.$tcCBool1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCBool2];

Foreign.C.Types.$tcCBool :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2279337507396481328##
                                    13354832971938562972##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCBool1
                                    0#
                                    GHC.Types.krep$*];

$krep21_r54rx :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCBool
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CBool1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r54rf $krep21_r54rx];

Foreign.C.Types.$tc'CBool3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CBool"#;

Foreign.C.Types.$tc'CBool2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CBool3];

Foreign.C.Types.$tc'CBool :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7877573716786595125##
                                    10108068606237611138##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CBool2
                                    0#
                                    Foreign.C.Types.$tc'CBool1];

Foreign.C.Types.$tcCFloat2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CFloat"#;

Foreign.C.Types.$tcCFloat1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCFloat2];

Foreign.C.Types.$tcCFloat :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7535293774037760901##
                                    15755754912293552836##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCFloat1
                                    0#
                                    GHC.Types.krep$*];

$krep22_r54ry :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCFloat
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CFloat1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_r54rg $krep22_r54ry];

Foreign.C.Types.$tc'CFloat3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CFloat"#;

Foreign.C.Types.$tc'CFloat2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CFloat3];

Foreign.C.Types.$tc'CFloat :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14616473864857291281##
                                    17808868477168782076##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CFloat2
                                    0#
                                    Foreign.C.Types.$tc'CFloat1];

Foreign.C.Types.$tcCDouble2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CDouble"#;

Foreign.C.Types.$tcCDouble1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCDouble2];

Foreign.C.Types.$tcCDouble :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6818159078703101232##
                                    2532424603516558210##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCDouble1
                                    0#
                                    GHC.Types.krep$*];

$krep23_r54rz :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCDouble
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CDouble1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep5_r54rh $krep23_r54rz];

Foreign.C.Types.$tc'CDouble3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CDouble"#;

Foreign.C.Types.$tc'CDouble2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CDouble3];

Foreign.C.Types.$tc'CDouble :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17825589113792566821##
                                    2117840440117442278##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CDouble2
                                    0#
                                    Foreign.C.Types.$tc'CDouble1];

Foreign.C.Types.$tcCPtrdiff2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CPtrdiff"#;

Foreign.C.Types.$tcCPtrdiff1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCPtrdiff2];

Foreign.C.Types.$tcCPtrdiff :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17214415904810395203##
                                    17157228803030510849##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCPtrdiff1
                                    0#
                                    GHC.Types.krep$*];

$krep24_r54rA :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCPtrdiff
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CPtrdiff1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep24_r54rA];

Foreign.C.Types.$tc'CPtrdiff3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CPtrdiff"#;

Foreign.C.Types.$tc'CPtrdiff2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CPtrdiff3];

Foreign.C.Types.$tc'CPtrdiff :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11471205784925482390##
                                    4232446785647106570##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CPtrdiff2
                                    0#
                                    Foreign.C.Types.$tc'CPtrdiff1];

Foreign.C.Types.$tcCSize2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CSize"#;

Foreign.C.Types.$tcCSize1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCSize2];

Foreign.C.Types.$tcCSize :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13349225497583392568##
                                    2637756187933719306##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCSize1
                                    0#
                                    GHC.Types.krep$*];

$krep25_r54rB :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCSize
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CSize1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r54rl $krep25_r54rB];

Foreign.C.Types.$tc'CSize3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CSize"#;

Foreign.C.Types.$tc'CSize2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CSize3];

Foreign.C.Types.$tc'CSize :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10732574519801736620##
                                    9582148817759369933##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CSize2
                                    0#
                                    Foreign.C.Types.$tc'CSize1];

Foreign.C.Types.$tcCWchar2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CWchar"#;

Foreign.C.Types.$tcCWchar1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCWchar2];

Foreign.C.Types.$tcCWchar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17109569786881617348##
                                    12848424059160789567##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCWchar1
                                    0#
                                    GHC.Types.krep$*];

$krep26_r54rC :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCWchar
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CWchar1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep6_r54ri $krep26_r54rC];

Foreign.C.Types.$tc'CWchar3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CWchar"#;

Foreign.C.Types.$tc'CWchar2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CWchar3];

Foreign.C.Types.$tc'CWchar :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12847418893300185693##
                                    10342021236626115560##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CWchar2
                                    0#
                                    Foreign.C.Types.$tc'CWchar1];

Foreign.C.Types.$tcCSigAtomic2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CSigAtomic"#;

Foreign.C.Types.$tcCSigAtomic1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCSigAtomic2];

Foreign.C.Types.$tcCSigAtomic :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10964102087567040849##
                                    4732914489126451968##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCSigAtomic1
                                    0#
                                    GHC.Types.krep$*];

$krep27_r54rD :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCSigAtomic
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CSigAtomic1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep6_r54ri $krep27_r54rD];

Foreign.C.Types.$tc'CSigAtomic3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CSigAtomic"#;

Foreign.C.Types.$tc'CSigAtomic2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CSigAtomic3];

Foreign.C.Types.$tc'CSigAtomic :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13396342001631048434##
                                    10235017041220212375##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CSigAtomic2
                                    0#
                                    Foreign.C.Types.$tc'CSigAtomic1];

Foreign.C.Types.$tcCClock2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CClock"#;

Foreign.C.Types.$tcCClock1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCClock2];

Foreign.C.Types.$tcCClock :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4014099957796664594##
                                    16004588873343805550##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCClock1
                                    0#
                                    GHC.Types.krep$*];

$krep28_r54rE :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCClock
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CClock1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep28_r54rE];

Foreign.C.Types.$tc'CClock3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CClock"#;

Foreign.C.Types.$tc'CClock2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CClock3];

Foreign.C.Types.$tc'CClock :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7016713985082915031##
                                    17346134655367323413##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CClock2
                                    0#
                                    Foreign.C.Types.$tc'CClock1];

Foreign.C.Types.$tcCTime2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CTime"#;

Foreign.C.Types.$tcCTime1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCTime2];

Foreign.C.Types.$tcCTime :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6217075761792864271##
                                    2605806391289821578##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCTime1
                                    0#
                                    GHC.Types.krep$*];

$krep29_r54rF :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCTime
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CTime1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep29_r54rF];

Foreign.C.Types.$tc'CTime3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CTime"#;

Foreign.C.Types.$tc'CTime2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CTime3];

Foreign.C.Types.$tc'CTime :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17509316711753497463##
                                    1311689641528100086##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CTime2
                                    0#
                                    Foreign.C.Types.$tc'CTime1];

Foreign.C.Types.$tcCUSeconds2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUSeconds"#;

Foreign.C.Types.$tcCUSeconds1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUSeconds2];

Foreign.C.Types.$tcCUSeconds :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17405471525584189701##
                                    2346565657742720464##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUSeconds1
                                    0#
                                    GHC.Types.krep$*];

$krep30_r54rG :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUSeconds
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUSeconds1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep7_r54rj $krep30_r54rG];

Foreign.C.Types.$tc'CUSeconds3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUSeconds"#;

Foreign.C.Types.$tc'CUSeconds2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUSeconds3];

Foreign.C.Types.$tc'CUSeconds :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [1636377087964720166##
                                    9077913612209140483##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUSeconds2
                                    0#
                                    Foreign.C.Types.$tc'CUSeconds1];

Foreign.C.Types.$tcCSUSeconds2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CSUSeconds"#;

Foreign.C.Types.$tcCSUSeconds1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCSUSeconds2];

Foreign.C.Types.$tcCSUSeconds :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17742176050705091078##
                                    4953235515970284689##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCSUSeconds1
                                    0#
                                    GHC.Types.krep$*];

$krep31_r54rH :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCSUSeconds
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CSUSeconds1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep31_r54rH];

Foreign.C.Types.$tc'CSUSeconds3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CSUSeconds"#;

Foreign.C.Types.$tc'CSUSeconds2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CSUSeconds3];

Foreign.C.Types.$tc'CSUSeconds :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [1705325731812814046##
                                    1387105441940513020##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CSUSeconds2
                                    0#
                                    Foreign.C.Types.$tc'CSUSeconds1];

Foreign.C.Types.$tcCFile2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CFile"#;

Foreign.C.Types.$tcCFile1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCFile2];

Foreign.C.Types.$tcCFile :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14154907999347903425##
                                    1814172269682152286##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCFile1
                                    0#
                                    GHC.Types.krep$*];

Foreign.C.Types.$tc'CFile1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCFile
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CFile3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CFile"#;

Foreign.C.Types.$tc'CFile2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CFile3];

Foreign.C.Types.$tc'CFile :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12302197724313820129##
                                    4785193272387875481##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CFile2
                                    0#
                                    Foreign.C.Types.$tc'CFile1];

Foreign.C.Types.$tcCFpos2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CFpos"#;

Foreign.C.Types.$tcCFpos1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCFpos2];

Foreign.C.Types.$tcCFpos :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16874339295908012189##
                                    2656467663994338805##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCFpos1
                                    0#
                                    GHC.Types.krep$*];

Foreign.C.Types.$tc'CFpos1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCFpos
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CFpos3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CFpos"#;

Foreign.C.Types.$tc'CFpos2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CFpos3];

Foreign.C.Types.$tc'CFpos :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [18279263347003670163##
                                    11699892855938511932##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CFpos2
                                    0#
                                    Foreign.C.Types.$tc'CFpos1];

Foreign.C.Types.$tcCJmpBuf2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CJmpBuf"#;

Foreign.C.Types.$tcCJmpBuf1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCJmpBuf2];

Foreign.C.Types.$tcCJmpBuf :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5219762936910773001##
                                    5563521999894797471##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCJmpBuf1
                                    0#
                                    GHC.Types.krep$*];

Foreign.C.Types.$tc'CJmpBuf1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCJmpBuf
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CJmpBuf3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CJmpBuf"#;

Foreign.C.Types.$tc'CJmpBuf2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CJmpBuf3];

Foreign.C.Types.$tc'CJmpBuf :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8278531976244408132##
                                    11989261641992411619##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CJmpBuf2
                                    0#
                                    Foreign.C.Types.$tc'CJmpBuf1];

Foreign.C.Types.$tcCIntPtr2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CIntPtr"#;

Foreign.C.Types.$tcCIntPtr1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCIntPtr2];

Foreign.C.Types.$tcCIntPtr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4666846936648130190##
                                    1074292558155745783##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCIntPtr1
                                    0#
                                    GHC.Types.krep$*];

$krep32_r54rI :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCIntPtr
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CIntPtr1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep32_r54rI];

Foreign.C.Types.$tc'CIntPtr3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CIntPtr"#;

Foreign.C.Types.$tc'CIntPtr2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CIntPtr3];

Foreign.C.Types.$tc'CIntPtr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14193281566492847253##
                                    11429158215235451511##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CIntPtr2
                                    0#
                                    Foreign.C.Types.$tc'CIntPtr1];

Foreign.C.Types.$tcCUIntPtr2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUIntPtr"#;

Foreign.C.Types.$tcCUIntPtr1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUIntPtr2];

Foreign.C.Types.$tcCUIntPtr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3784320557383063626##
                                    5356790357315597843##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUIntPtr1
                                    0#
                                    GHC.Types.krep$*];

$krep33_r54rJ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUIntPtr
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUIntPtr1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r54rl $krep33_r54rJ];

Foreign.C.Types.$tc'CUIntPtr3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUIntPtr"#;

Foreign.C.Types.$tc'CUIntPtr2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUIntPtr3];

Foreign.C.Types.$tc'CUIntPtr :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13898690391388793946##
                                    494854583711937458##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUIntPtr2
                                    0#
                                    Foreign.C.Types.$tc'CUIntPtr1];

Foreign.C.Types.$tcCIntMax2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CIntMax"#;

Foreign.C.Types.$tcCIntMax1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCIntMax2];

Foreign.C.Types.$tcCIntMax :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [12739001320308858558##
                                    4975233500487868495##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCIntMax1
                                    0#
                                    GHC.Types.krep$*];

$krep34_r54rK :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCIntMax
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CIntMax1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep8_r54rk $krep34_r54rK];

Foreign.C.Types.$tc'CIntMax3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CIntMax"#;

Foreign.C.Types.$tc'CIntMax2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CIntMax3];

Foreign.C.Types.$tc'CIntMax :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2671575007670815434##
                                    14572633195159182874##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CIntMax2
                                    0#
                                    Foreign.C.Types.$tc'CIntMax1];

Foreign.C.Types.$tcCUIntMax2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "CUIntMax"#;

Foreign.C.Types.$tcCUIntMax1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tcCUIntMax2];

Foreign.C.Types.$tcCUIntMax :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10275136122733258480##
                                    14814319483566909713##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tcCUIntMax1
                                    0#
                                    GHC.Types.krep$*];

$krep35_r54rL :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCUIntMax
                                              GHC.Types.[]];

Foreign.C.Types.$tc'CUIntMax1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r54rl $krep35_r54rL];

Foreign.C.Types.$tc'CUIntMax3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'CUIntMax"#;

Foreign.C.Types.$tc'CUIntMax2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Foreign.C.Types.$tc'CUIntMax3];

Foreign.C.Types.$tc'CUIntMax :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4605074089694102640##
                                    11721661597354817794##
                                    Foreign.C.Types.$trModule
                                    Foreign.C.Types.$tc'CUIntMax2
                                    0#
                                    Foreign.C.Types.$tc'CUIntMax1];

Foreign.C.Types.CJmpBuf :: Foreign.C.Types.CJmpBuf
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE Foreign.C.Types.CJmpBuf! [];

Foreign.C.Types.CFpos :: Foreign.C.Types.CFpos
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE Foreign.C.Types.CFpos! [];

Foreign.C.Types.CFile :: Foreign.C.Types.CFile
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE Foreign.C.Types.CFile! [];

