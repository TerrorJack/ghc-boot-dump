
==================== Tidy Core ====================
2018-03-16 16:06:56.355549873 UTC

Result size of Tidy Core
  = {terms: 366, types: 758, coercions: 65, joins: 0/3}

-- RHS size: {terms: 13, types: 17, coercions: 0, joins: 0/0}
Debug.Trace.traceEventIO2
  :: Ptr Foreign.C.Types.CChar
     -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dc2bC [Occ=Once!] :: Ptr Foreign.C.Types.CChar)
                 (eta_X4 [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                 case ds_dc2bC of { Ptr p_ac25D [Occ=Once] ->
                 case traceEvent# @ RealWorld p_ac25D eta_X4 of s'_ac25F
                 { __DEFAULT ->
                 (# s'_ac25F, GHC.Tuple.() #)
                 }
                 }}]
Debug.Trace.traceEventIO2
  = \ (ds_dc2bC :: Ptr Foreign.C.Types.CChar)
      (eta_X4 [OS=OneShot] :: State# RealWorld) ->
      case ds_dc2bC of { Ptr p_ac25D ->
      case traceEvent# @ RealWorld p_ac25D eta_X4 of s'_ac25F
      { __DEFAULT ->
      (# s'_ac25F, GHC.Tuple.() #)
      }
      }

-- RHS size: {terms: 7, types: 4, coercions: 6, joins: 0/0}
Debug.Trace.traceEventIO1
  :: String -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Str=<L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (msg_ac25C [Occ=Once] :: String)
                 (eta_B1 [Occ=Once] :: State# RealWorld) ->
                 GHC.Foreign.charIsRepresentable3
                   @ ()
                   GHC.IO.Encoding.UTF8.utf8
                   msg_ac25C
                   (Debug.Trace.traceEventIO2
                    `cast` (<Ptr Foreign.C.Types.CChar>_R
                            ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                            :: (Ptr Foreign.C.Types.CChar
                                -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                               ~R# (Ptr Foreign.C.Types.CChar -> IO () :: *)))
                   eta_B1}]
Debug.Trace.traceEventIO1
  = \ (msg_ac25C :: String) (eta_B1 :: State# RealWorld) ->
      GHC.Foreign.charIsRepresentable3
        @ ()
        GHC.IO.Encoding.UTF8.utf8
        msg_ac25C
        (Debug.Trace.traceEventIO2
         `cast` (<Ptr Foreign.C.Types.CChar>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                 :: (Ptr Foreign.C.Types.CChar
                     -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                    ~R# (Ptr Foreign.C.Types.CChar -> IO () :: *)))
        eta_B1

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
traceEventIO :: String -> IO ()
[GblId,
 Arity=2,
 Str=<L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Debug.Trace.traceEventIO1
               `cast` (<String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (String -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                          ~R# (String -> IO () :: *))}]
traceEventIO
  = Debug.Trace.traceEventIO1
    `cast` (<String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (String -> State# RealWorld -> (# State# RealWorld, () #) :: *)
               ~R# (String -> IO () :: *))

-- RHS size: {terms: 13, types: 17, coercions: 0, joins: 0/0}
Debug.Trace.traceMarkerIO2
  :: Ptr Foreign.C.Types.CChar
     -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dc2bu [Occ=Once!] :: Ptr Foreign.C.Types.CChar)
                 (eta_X4 [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                 case ds_dc2bu of { Ptr p_ac25J [Occ=Once] ->
                 case traceMarker# @ RealWorld p_ac25J eta_X4 of s'_ac25L
                 { __DEFAULT ->
                 (# s'_ac25L, GHC.Tuple.() #)
                 }
                 }}]
Debug.Trace.traceMarkerIO2
  = \ (ds_dc2bu :: Ptr Foreign.C.Types.CChar)
      (eta_X4 [OS=OneShot] :: State# RealWorld) ->
      case ds_dc2bu of { Ptr p_ac25J ->
      case traceMarker# @ RealWorld p_ac25J eta_X4 of s'_ac25L
      { __DEFAULT ->
      (# s'_ac25L, GHC.Tuple.() #)
      }
      }

-- RHS size: {terms: 7, types: 4, coercions: 6, joins: 0/0}
Debug.Trace.traceMarkerIO1
  :: String -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Str=<L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (msg_ac25I [Occ=Once] :: String)
                 (eta_B1 [Occ=Once] :: State# RealWorld) ->
                 GHC.Foreign.charIsRepresentable3
                   @ ()
                   GHC.IO.Encoding.UTF8.utf8
                   msg_ac25I
                   (Debug.Trace.traceMarkerIO2
                    `cast` (<Ptr Foreign.C.Types.CChar>_R
                            ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                            :: (Ptr Foreign.C.Types.CChar
                                -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                               ~R# (Ptr Foreign.C.Types.CChar -> IO () :: *)))
                   eta_B1}]
Debug.Trace.traceMarkerIO1
  = \ (msg_ac25I :: String) (eta_B1 :: State# RealWorld) ->
      GHC.Foreign.charIsRepresentable3
        @ ()
        GHC.IO.Encoding.UTF8.utf8
        msg_ac25I
        (Debug.Trace.traceMarkerIO2
         `cast` (<Ptr Foreign.C.Types.CChar>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                 :: (Ptr Foreign.C.Types.CChar
                     -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                    ~R# (Ptr Foreign.C.Types.CChar -> IO () :: *)))
        eta_B1

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
traceMarkerIO :: String -> IO ()
[GblId,
 Arity=2,
 Str=<L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Debug.Trace.traceMarkerIO1
               `cast` (<String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (String -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                          ~R# (String -> IO () :: *))}]
traceMarkerIO
  = Debug.Trace.traceMarkerIO1
    `cast` (<String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (String -> State# RealWorld -> (# State# RealWorld, () #) :: *)
               ~R# (String -> IO () :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Debug.Trace.$trModule4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Debug.Trace.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Debug.Trace.$trModule3 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Debug.Trace.$trModule3 = GHC.Types.TrNameS Debug.Trace.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Debug.Trace.$trModule2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
Debug.Trace.$trModule2 = "Debug.Trace"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Debug.Trace.$trModule1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Debug.Trace.$trModule1 = GHC.Types.TrNameS Debug.Trace.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Debug.Trace.$trModule :: Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Debug.Trace.$trModule
  = GHC.Types.Module Debug.Trace.$trModule3 Debug.Trace.$trModule1

-- RHS size: {terms: 18, types: 55, coercions: 6, joins: 0/0}
traceMarker [InlPrag=NOINLINE] :: forall a. String -> a -> a
[GblId, Arity=2, Str=<L,U><L,U>, Unf=OtherCon []]
traceMarker
  = \ (@ a_ac28I) (msg_ac25G :: String) (expr_ac25H :: a_ac28I) ->
      case runRW#
             @ ('TupleRep '['TupleRep '[], 'LiftedRep])
             @ (# State# RealWorld, a_ac28I #)
             (\ (s_i7JiH [OS=OneShot] :: State# RealWorld) ->
                case GHC.Foreign.charIsRepresentable3
                       @ ()
                       GHC.IO.Encoding.UTF8.utf8
                       msg_ac25G
                       (Debug.Trace.traceMarkerIO2
                        `cast` (<Ptr Foreign.C.Types.CChar>_R
                                ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                                :: (Ptr Foreign.C.Types.CChar
                                    -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                                   ~R# (Ptr Foreign.C.Types.CChar -> IO () :: *)))
                       s_i7JiH
                of
                { (# ipv_i7JiK, ipv1_i7JiL #) ->
                (# ipv_i7JiK, expr_ac25H #)
                })
      of
      { (# ipv_i8hmF, ipv1_i8hmG #) ->
      ipv1_i8hmG
      }

-- RHS size: {terms: 18, types: 55, coercions: 6, joins: 0/0}
traceEvent [InlPrag=NOINLINE] :: forall a. String -> a -> a
[GblId, Arity=2, Str=<L,U><L,U>, Unf=OtherCon []]
traceEvent
  = \ (@ a_ac295) (msg_ac25A :: String) (expr_ac25B :: a_ac295) ->
      case runRW#
             @ ('TupleRep '['TupleRep '[], 'LiftedRep])
             @ (# State# RealWorld, a_ac295 #)
             (\ (s_i7JiH [OS=OneShot] :: State# RealWorld) ->
                case GHC.Foreign.charIsRepresentable3
                       @ ()
                       GHC.IO.Encoding.UTF8.utf8
                       msg_ac25A
                       (Debug.Trace.traceEventIO2
                        `cast` (<Ptr Foreign.C.Types.CChar>_R
                                ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                                :: (Ptr Foreign.C.Types.CChar
                                    -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                                   ~R# (Ptr Foreign.C.Types.CChar -> IO () :: *)))
                       s_i7JiH
                of
                { (# ipv_i7JiK, ipv1_i7JiL #) ->
                (# ipv_i7JiK, expr_ac25B #)
                })
      of
      { (# ipv_i8hmF, ipv1_i8hmG #) ->
      ipv1_i8hmG
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Debug.Trace.putTraceMsg5 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Debug.Trace.putTraceMsg5 = "%s\n"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Debug.Trace.putTraceMsg4 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Debug.Trace.putTraceMsg4 = unpackCString# Debug.Trace.putTraceMsg5

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Debug.Trace.putTraceMsg3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 130 0}]
Debug.Trace.putTraceMsg3
  = "WARNING: previous trace message had null bytes"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Debug.Trace.putTraceMsg2 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Debug.Trace.putTraceMsg2 = unpackCString# Debug.Trace.putTraceMsg3

Rec {
-- RHS size: {terms: 45, types: 88, coercions: 0, joins: 0/1}
Debug.Trace.$wgo [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: [Char] -> (# [Char], [Char] #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []]
Debug.Trace.$wgo
  = \ (w_sc2oV :: [Char]) ->
      case w_sc2oV of {
        [] -> (# GHC.Types.[] @ Char, GHC.Types.[] @ Char #);
        : y_i7Jcp ys_i7Jcq ->
          case y_i7Jcp of wild1_a5if { C# x_a5ih ->
          let {
            w2_iax6T [Dmd=<L,U(1*U,1*U)>] :: ([Char], [Char])
            [LclId]
            w2_iax6T
              = case Debug.Trace.$wgo ys_i7Jcq of { (# ww1_sc2p8, ww2_sc2p9 #) ->
                (ww1_sc2p8, ww2_sc2p9)
                } } in
          case x_a5ih of {
            __DEFAULT ->
              (# case w2_iax6T of { (ts_iax6Z, fs_iax70) -> ts_iax6Z },
                 GHC.Types.:
                   @ Char
                   wild1_a5if
                   (case w2_iax6T of { (ts_iax74, fs_iax75) -> fs_iax75 }) #);
            '\NUL'# ->
              (# GHC.Types.:
                   @ Char
                   wild1_a5if
                   (case w2_iax6T of { (ts_iax7b, fs_iax7c) -> ts_iax7b }),
                 case w2_iax6T of { (ts_iax7g, fs_iax7h) -> fs_iax7h } #)
          }
          }
      }
end Rec }

-- RHS size: {terms: 90, types: 158, coercions: 21, joins: 0/2}
Debug.Trace.putTraceMsg1
  :: String -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Str=<L,1*U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 450 0}]
Debug.Trace.putTraceMsg1
  = \ (msg_ac25m :: String) (s1_ic2gz :: State# RealWorld) ->
      case ((noinline @ (IO TextEncoding) getForeignEncoding)
            `cast` (GHC.Types.N:IO[0] <TextEncoding>_R
                    :: (IO TextEncoding :: *)
                       ~R# (State# RealWorld
                            -> (# State# RealWorld, TextEncoding #) :: *)))
             s1_ic2gz
      of
      { (# ipv_ic2gD, ipv1_ic2gE #) ->
      let {
        ds_sc2iH [Dmd=<L,U(U,1*U)>] :: ([Char], [Char])
        [LclId]
        ds_sc2iH
          = case Debug.Trace.$wgo msg_ac25m of
            { (# ww1_sc2p8, ww2_sc2p9 #) ->
            (ww1_sc2p8, ww2_sc2p9)
            } } in
      let {
        lvl_sc2iI :: String
        [LclId]
        lvl_sc2iI
          = case ds_sc2iH of { (nulls_ac29u, msg'_ac29w) -> msg'_ac29w } } in
      GHC.Foreign.charIsRepresentable3
        @ ()
        ipv1_ic2gE
        Debug.Trace.putTraceMsg4
        ((\ (cfmt_ac25n :: CString)
            (eta_B1 [OS=OneShot] :: State# RealWorld) ->
            case ((noinline @ (IO TextEncoding) getForeignEncoding)
                  `cast` (GHC.Types.N:IO[0] <TextEncoding>_R
                          :: (IO TextEncoding :: *)
                             ~R# (State# RealWorld
                                  -> (# State# RealWorld, TextEncoding #) :: *)))
                   eta_B1
            of
            { (# ipv2_Xc2hk, ipv3_Xc2hm #) ->
            case GHC.Foreign.charIsRepresentable3
                   @ ()
                   ipv3_Xc2hm
                   lvl_sc2iI
                   ((\ (cmsg_ac25q :: CString)
                       (eta1_X9 [OS=OneShot] :: State# RealWorld) ->
                       case cfmt_ac25n of { Ptr ds4_dc2ck ->
                       case cmsg_ac25q of { Ptr ds6_dc2cm ->
                       case {__pkg_ccall base-4.11.0.0 Addr#
                           -> Addr# -> State# RealWorld -> (# State# RealWorld #)}_dc2cp
                              ds4_dc2ck ds6_dc2cm eta1_X9
                       of
                       { (# ds7_dc2cn #) ->
                       (# ds7_dc2cn, GHC.Tuple.() #)
                       }
                       }
                       })
                    `cast` (<CString>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                            :: (CString -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                               ~R# (CString -> IO () :: *)))
                   ipv2_Xc2hk
            of
            { (# ipv4_i7JiK, ipv5_i7JiL #) ->
            case ds_sc2iH of { (nulls_ac29u, msg'_ac29w) ->
            case nulls_ac29u of {
              [] -> (# ipv4_i7JiK, GHC.Tuple.() #);
              : ds4_i8hNn ds5_i8hNo ->
                case ((noinline @ (IO TextEncoding) getForeignEncoding)
                      `cast` (GHC.Types.N:IO[0] <TextEncoding>_R
                              :: (IO TextEncoding :: *)
                                 ~R# (State# RealWorld
                                      -> (# State# RealWorld, TextEncoding #) :: *)))
                       ipv4_i7JiK
                of
                { (# ipv6_Xc2ht, ipv7_Xc2hv #) ->
                GHC.Foreign.charIsRepresentable3
                  @ ()
                  ipv7_Xc2hv
                  Debug.Trace.putTraceMsg2
                  ((\ (cmsg_ac25r :: CString)
                      (eta1_Xe [OS=OneShot] :: State# RealWorld) ->
                      case cfmt_ac25n of { Ptr ds8_dc2ck ->
                      case cmsg_ac25r of { Ptr ds10_dc2cm ->
                      case {__pkg_ccall base-4.11.0.0 Addr#
                           -> Addr# -> State# RealWorld -> (# State# RealWorld #)}_dc2cp
                             ds8_dc2ck ds10_dc2cm eta1_Xe
                      of
                      { (# ds11_dc2cn #) ->
                      (# ds11_dc2cn, GHC.Tuple.() #)
                      }
                      }
                      })
                   `cast` (<CString>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                           :: (CString -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                              ~R# (CString -> IO () :: *)))
                  ipv6_Xc2ht
                }
            }
            }
            }
            })
         `cast` (<CString>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                 :: (CString -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                    ~R# (CString -> IO () :: *)))
        ipv_ic2gD
      }

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
traceIO :: String -> IO ()
[GblId,
 Arity=2,
 Str=<L,1*U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Debug.Trace.putTraceMsg1
               `cast` (<String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (String -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                          ~R# (String -> IO () :: *))}]
traceIO
  = Debug.Trace.putTraceMsg1
    `cast` (<String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (String -> State# RealWorld -> (# State# RealWorld, () #) :: *)
               ~R# (String -> IO () :: *))

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
putTraceMsg :: String -> IO ()
[GblId,
 Arity=2,
 Str=<L,1*U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Debug.Trace.putTraceMsg1
               `cast` (<String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (String -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                          ~R# (String -> IO () :: *))}]
putTraceMsg
  = Debug.Trace.putTraceMsg1
    `cast` (<String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (String -> State# RealWorld -> (# State# RealWorld, () #) :: *)
               ~R# (String -> IO () :: *))

-- RHS size: {terms: 20, types: 57, coercions: 0, joins: 0/0}
trace [InlPrag=NOINLINE] :: forall a. String -> a -> a
[GblId, Arity=2, Str=<L,1*U><L,U>, Unf=OtherCon []]
trace
  = \ (@ a_ac29X) (string_ac25s :: String) (expr_ac25t :: a_ac29X) ->
      case runRW#
             @ ('TupleRep '['TupleRep '[], 'LiftedRep])
             @ (# State# RealWorld, a_ac29X #)
             (\ (s_i91ZD [OS=OneShot] :: State# RealWorld) ->
                case noDuplicate# @ RealWorld s_i91ZD of s'_i91ZE { __DEFAULT ->
                case Debug.Trace.putTraceMsg1 string_ac25s s'_i91ZE of
                { (# ipv_i7JiK, ipv1_i7JiL #) ->
                (# ipv_i7JiK, expr_ac25t #)
                }
                })
      of
      { (# ipv_i91ZH, ipv1_i91ZI #) ->
      ipv1_i91ZI
      }

-- RHS size: {terms: 4, types: 2, coercions: 0, joins: 0/0}
traceId :: String -> String
[GblId,
 Arity=1,
 Str=<L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (a_ac25u :: String) -> trace @ String a_ac25u a_ac25u}]
traceId = \ (a_ac25u :: String) -> trace @ String a_ac25u a_ac25u

-- RHS size: {terms: 8, types: 9, coercions: 0, joins: 0/0}
traceShow :: forall a b. Show a => a -> b -> b
[GblId,
 Arity=2,
 Str=<L,1*U(A,1*C1(U),A)><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_ac2ac)
                 (@ b_ac2ad)
                 ($dShow_ac2af [Occ=Once] :: Show a_ac2ac)
                 (eta_B1 [Occ=Once] :: a_ac2ac) ->
                 trace @ b_ac2ad (show @ a_ac2ac $dShow_ac2af eta_B1)}]
traceShow
  = \ (@ a_ac2ac)
      (@ b_ac2ad)
      ($dShow_ac2af :: Show a_ac2ac)
      (eta_B1 :: a_ac2ac) ->
      trace @ b_ac2ad (show @ a_ac2ac $dShow_ac2af eta_B1)

-- RHS size: {terms: 8, types: 7, coercions: 0, joins: 0/0}
traceShowId :: forall a. Show a => a -> a
[GblId,
 Arity=2,
 Str=<L,1*U(A,1*C1(U),A)><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_ac2an)
                 ($dShow_ac2ap [Occ=Once] :: Show a_ac2an)
                 (a1_ac25v :: a_ac2an) ->
                 trace @ a_ac2an (show @ a_ac2an $dShow_ac2ap a1_ac25v) a1_ac25v}]
traceShowId
  = \ (@ a_ac2an)
      ($dShow_ac2ap :: Show a_ac2an)
      (a1_ac25v :: a_ac2an) ->
      trace @ a_ac2an (show @ a_ac2an $dShow_ac2ap a1_ac25v) a1_ac25v

-- RHS size: {terms: 8, types: 11, coercions: 0, joins: 0/0}
traceM :: forall (f :: * -> *). Applicative f => String -> f ()
[GblId,
 Arity=2,
 Str=<L,1*U(A,1*C1(U),A,A,A,A)><L,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ (f_ac2au :: * -> *))
                 ($dApplicative_ac2aw [Occ=Once] :: Applicative f_ac2au)
                 (string_ac25w [Occ=Once] :: String) ->
                 trace
                   @ (f_ac2au ())
                   string_ac25w
                   (pure @ f_ac2au $dApplicative_ac2aw @ () GHC.Tuple.())}]
traceM
  = \ (@ (f_ac2au :: * -> *))
      ($dApplicative_ac2aw :: Applicative f_ac2au)
      (string_ac25w :: String) ->
      trace
        @ (f_ac2au ())
        string_ac25w
        (pure @ f_ac2au $dApplicative_ac2aw @ () GHC.Tuple.())

-- RHS size: {terms: 12, types: 16, coercions: 0, joins: 0/0}
traceShowM
  :: forall a (f :: * -> *). (Show a, Applicative f) => a -> f ()
[GblId,
 Arity=3,
 Str=<L,1*U(A,1*C1(U),A)><L,1*U(A,1*C1(U),A,A,A,A)><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_ac2aE)
                 (@ (f_ac2aF :: * -> *))
                 ($dShow_ac2aH [Occ=Once] :: Show a_ac2aE)
                 ($dApplicative_ac2aI [Occ=Once] :: Applicative f_ac2aF)
                 (eta_B1 [Occ=Once] :: a_ac2aE) ->
                 trace
                   @ (f_ac2aF ())
                   (show @ a_ac2aE $dShow_ac2aH eta_B1)
                   (pure @ f_ac2aF $dApplicative_ac2aI @ () GHC.Tuple.())}]
traceShowM
  = \ (@ a_ac2aE)
      (@ (f_ac2aF :: * -> *))
      ($dShow_ac2aH :: Show a_ac2aE)
      ($dApplicative_ac2aI :: Applicative f_ac2aF)
      (eta_B1 :: a_ac2aE) ->
      trace
        @ (f_ac2aF ())
        (show @ a_ac2aE $dShow_ac2aH eta_B1)
        (pure @ f_ac2aF $dApplicative_ac2aI @ () GHC.Tuple.())

-- RHS size: {terms: 48, types: 110, coercions: 0, joins: 0/0}
traceStack :: forall a. String -> a -> a
[GblId,
 Arity=2,
 Str=<L,1*U><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 243 0}]
traceStack
  = \ (@ a_ac2aR) (str_ac25x :: String) (expr_ac25y :: a_ac2aR) ->
      case runRW#
             @ ('TupleRep '['TupleRep '[], 'LiftedRep])
             @ (# State# RealWorld, a_ac2aR #)
             (\ (s_i91ZD [OS=OneShot] :: State# RealWorld) ->
                case noDuplicate# @ RealWorld s_i91ZD of s'_i91ZE { __DEFAULT ->
                case Debug.Trace.putTraceMsg1 str_ac25x s'_i91ZE of
                { (# ipv_i7JiK, ipv1_i7JiL #) ->
                case getCurrentCCS# @ () @ RealWorld GHC.Tuple.() ipv_i7JiK of
                { (# s'1_sc2rw, addr_sc2rx #) ->
                case GHC.Stack.CCS.$wgo
                       addr_sc2rx (GHC.Types.[] @ [Char]) s'1_sc2rw
                of
                { (# ipv2_i7IAy, ipv3_i7IAz #) ->
                case ipv3_i7IAz of wild1_i8hrH {
                  [] -> (# ipv2_i7IAy, expr_ac25y #);
                  : ds3_i8hNn ds4_i8hNo ->
                    case Debug.Trace.putTraceMsg1
                           (unpackAppendCString#
                              GHC.Stack.CCS.renderStack1
                              (GHC.Stack.CCS.renderStack_go
                                 (GHC.List.reverse1 @ String wild1_i8hrH (GHC.Types.[] @ String))))
                           ipv2_i7IAy
                    of
                    { (# ipv4_X7JjI, ipv5_X7JjK #) ->
                    (# ipv4_X7JjI, expr_ac25y #)
                    }
                }
                }
                }
                }
                })
      of
      { (# ipv_i91ZH, ipv1_i91ZI #) ->
      ipv1_i91ZI
      }


