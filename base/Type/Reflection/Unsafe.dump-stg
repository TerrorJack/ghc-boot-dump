
==================== Pre unarise: ====================
2018-03-16 16:07:02.446102212 UTC

Type.Reflection.Unsafe.mkTrApp
  :: forall k1 k2 (a :: k1 -> k2) (b :: k1).
     Data.Typeable.Internal.TypeRep a
     -> Data.Typeable.Internal.TypeRep b
     -> Data.Typeable.Internal.TypeRep (a b)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Data.Typeable.Internal.mkTrAppChecked eta_B2 eta_B1;

Type.Reflection.Unsafe.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Type.Reflection.Unsafe.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Type.Reflection.Unsafe.$trModule4];

Type.Reflection.Unsafe.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Type.Reflection.Unsafe"#;

Type.Reflection.Unsafe.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Type.Reflection.Unsafe.$trModule2];

Type.Reflection.Unsafe.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Type.Reflection.Unsafe.$trModule3
                                     Type.Reflection.Unsafe.$trModule1];


==================== STG syntax: ====================
2018-03-16 16:07:02.447085406 UTC

Type.Reflection.Unsafe.mkTrApp
  :: forall k1 k2 (a :: k1 -> k2) (b :: k1).
     Data.Typeable.Internal.TypeRep a
     -> Data.Typeable.Internal.TypeRep b
     -> Data.Typeable.Internal.TypeRep (a b)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Data.Typeable.Internal.mkTrAppChecked eta_B2 eta_B1;

Type.Reflection.Unsafe.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Type.Reflection.Unsafe.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Type.Reflection.Unsafe.$trModule4];

Type.Reflection.Unsafe.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Type.Reflection.Unsafe"#;

Type.Reflection.Unsafe.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Type.Reflection.Unsafe.$trModule2];

Type.Reflection.Unsafe.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Type.Reflection.Unsafe.$trModule3
                                     Type.Reflection.Unsafe.$trModule1];


==================== Pre unarise: ====================
2018-03-16 16:07:02.485621082 UTC

Type.Reflection.Unsafe.mkTrApp
  :: forall k1 k2 (a :: k1 -> k2) (b :: k1).
     Data.Typeable.Internal.TypeRep a
     -> Data.Typeable.Internal.TypeRep b
     -> Data.Typeable.Internal.TypeRep (a b)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Data.Typeable.Internal.mkTrAppChecked eta_B2 eta_B1;

Type.Reflection.Unsafe.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Type.Reflection.Unsafe.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Type.Reflection.Unsafe.$trModule4];

Type.Reflection.Unsafe.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Type.Reflection.Unsafe"#;

Type.Reflection.Unsafe.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Type.Reflection.Unsafe.$trModule2];

Type.Reflection.Unsafe.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Type.Reflection.Unsafe.$trModule3
                                     Type.Reflection.Unsafe.$trModule1];


==================== STG syntax: ====================
2018-03-16 16:07:02.486727687 UTC

Type.Reflection.Unsafe.mkTrApp
  :: forall k1 k2 (a :: k1 -> k2) (b :: k1).
     Data.Typeable.Internal.TypeRep a
     -> Data.Typeable.Internal.TypeRep b
     -> Data.Typeable.Internal.TypeRep (a b)
[GblId, Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        Data.Typeable.Internal.mkTrAppChecked eta_B2 eta_B1;

Type.Reflection.Unsafe.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

Type.Reflection.Unsafe.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Type.Reflection.Unsafe.$trModule4];

Type.Reflection.Unsafe.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Type.Reflection.Unsafe"#;

Type.Reflection.Unsafe.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [Type.Reflection.Unsafe.$trModule2];

Type.Reflection.Unsafe.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [Type.Reflection.Unsafe.$trModule3
                                     Type.Reflection.Unsafe.$trModule1];

