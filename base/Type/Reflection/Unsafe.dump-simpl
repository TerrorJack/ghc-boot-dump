
==================== Tidy Core ====================
2018-03-16 16:07:02.44245395 UTC

Result size of Tidy Core
  = {terms: 16, types: 23, coercions: 0, joins: 0/0}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
mkTrApp
  :: forall k1 k2 (a :: k1 -> k2) (b :: k1).
     TypeRep a -> TypeRep b -> TypeRep (a b)
[GblId,
 Arity=2,
 Str=<S,1*U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= mkTrAppChecked}]
mkTrApp = mkTrAppChecked

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Type.Reflection.Unsafe.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Type.Reflection.Unsafe.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Type.Reflection.Unsafe.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Type.Reflection.Unsafe.$trModule3
  = GHC.Types.TrNameS Type.Reflection.Unsafe.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Type.Reflection.Unsafe.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
Type.Reflection.Unsafe.$trModule2 = "Type.Reflection.Unsafe"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Type.Reflection.Unsafe.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Type.Reflection.Unsafe.$trModule1
  = GHC.Types.TrNameS Type.Reflection.Unsafe.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Type.Reflection.Unsafe.$trModule :: Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Type.Reflection.Unsafe.$trModule
  = GHC.Types.Module
      Type.Reflection.Unsafe.$trModule3 Type.Reflection.Unsafe.$trModule1


