
==================== Tidy Core ====================
2018-03-16 16:09:12.070126969 UTC

Result size of Tidy Core
  = {terms: 803, types: 1,720, coercions: 167, joins: 0/4}

-- RHS size: {terms: 13, types: 21, coercions: 0, joins: 0/0}
Control.Concurrent.isCurrentThreadBound1
  :: State# RealWorld -> (# State# RealWorld, Bool #)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (s#_adVQ6 [Occ=Once] :: State# RealWorld) ->
                 case isCurrentThreadBound# s#_adVQ6 of
                 { (# ipv_sdVZ2 [Occ=Once], ipv1_sdVZ3 [Occ=Once!] #) ->
                 (# ipv_sdVZ2,
                    case ipv1_sdVZ3 of {
                      __DEFAULT -> GHC.Types.True;
                      0# -> GHC.Types.False
                    } #)
                 }}]
Control.Concurrent.isCurrentThreadBound1
  = \ (s#_adVQ6 :: State# RealWorld) ->
      case isCurrentThreadBound# s#_adVQ6 of
      { (# ipv_sdVZ2, ipv1_sdVZ3 #) ->
      (# ipv_sdVZ2,
         case ipv1_sdVZ3 of {
           __DEFAULT -> GHC.Types.True;
           0# -> GHC.Types.False
         } #)
      }

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
isCurrentThreadBound :: IO Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Control.Concurrent.isCurrentThreadBound1
               `cast` (Sym (GHC.Types.N:IO[0] <Bool>_R)
                       :: (State# RealWorld -> (# State# RealWorld, Bool #) :: *)
                          ~R# (IO Bool :: *))}]
isCurrentThreadBound
  = Control.Concurrent.isCurrentThreadBound1
    `cast` (Sym (GHC.Types.N:IO[0] <Bool>_R)
            :: (State# RealWorld -> (# State# RealWorld, Bool #) :: *)
               ~R# (IO Bool :: *))

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
threadWaitRead :: Fd -> IO ()
[GblId,
 Arity=2,
 Str=<L,U(U)><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.Conc.IO.threadWaitRead1
               `cast` (<Fd>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (Fd -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                          ~R# (Fd -> IO () :: *))}]
threadWaitRead
  = GHC.Conc.IO.threadWaitRead1
    `cast` (<Fd>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (Fd -> State# RealWorld -> (# State# RealWorld, () #) :: *)
               ~R# (Fd -> IO () :: *))

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
threadWaitWrite :: Fd -> IO ()
[GblId,
 Arity=2,
 Str=<L,U(U)><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.Conc.IO.threadWaitWrite1
               `cast` (<Fd>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (Fd -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                          ~R# (Fd -> IO () :: *))}]
threadWaitWrite
  = GHC.Conc.IO.threadWaitWrite1
    `cast` (<Fd>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (Fd -> State# RealWorld -> (# State# RealWorld, () #) :: *)
               ~R# (Fd -> IO () :: *))

-- RHS size: {terms: 1, types: 0, coercions: 9, joins: 0/0}
threadWaitReadSTM :: Fd -> IO (STM (), IO ())
[GblId,
 Arity=2,
 Str=<L,U(U)><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.Conc.IO.threadWaitReadSTM1
               `cast` (<Fd>_R ->_R Sym (GHC.Types.N:IO[0] <(STM (), IO ())>_R)
                       :: (Fd
                           -> State# RealWorld
                           -> (# State# RealWorld, (STM (), IO ()) #) :: *)
                          ~R# (Fd -> IO (STM (), IO ()) :: *))}]
threadWaitReadSTM
  = GHC.Conc.IO.threadWaitReadSTM1
    `cast` (<Fd>_R ->_R Sym (GHC.Types.N:IO[0] <(STM (), IO ())>_R)
            :: (Fd
                -> State# RealWorld
                -> (# State# RealWorld, (STM (), IO ()) #) :: *)
               ~R# (Fd -> IO (STM (), IO ()) :: *))

-- RHS size: {terms: 1, types: 0, coercions: 9, joins: 0/0}
threadWaitWriteSTM :: Fd -> IO (STM (), IO ())
[GblId,
 Arity=2,
 Str=<L,U(U)><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.Conc.IO.threadWaitWriteSTM1
               `cast` (<Fd>_R ->_R Sym (GHC.Types.N:IO[0] <(STM (), IO ())>_R)
                       :: (Fd
                           -> State# RealWorld
                           -> (# State# RealWorld, (STM (), IO ()) #) :: *)
                          ~R# (Fd -> IO (STM (), IO ()) :: *))}]
threadWaitWriteSTM
  = GHC.Conc.IO.threadWaitWriteSTM1
    `cast` (<Fd>_R ->_R Sym (GHC.Types.N:IO[0] <(STM (), IO ())>_R)
            :: (Fd
                -> State# RealWorld
                -> (# State# RealWorld, (STM (), IO ()) #) :: *)
               ~R# (Fd -> IO (STM (), IO ()) :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Control.Concurrent.$trModule4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Control.Concurrent.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Control.Concurrent.$trModule3 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Control.Concurrent.$trModule3
  = GHC.Types.TrNameS Control.Concurrent.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Control.Concurrent.$trModule2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 60 0}]
Control.Concurrent.$trModule2 = "Control.Concurrent"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Control.Concurrent.$trModule1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Control.Concurrent.$trModule1
  = GHC.Types.TrNameS Control.Concurrent.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Control.Concurrent.$trModule :: Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Control.Concurrent.$trModule
  = GHC.Types.Module
      Control.Concurrent.$trModule3 Control.Concurrent.$trModule1

-- RHS size: {terms: 10, types: 12, coercions: 0, joins: 0/0}
rtsSupportsBoundThreads :: Bool
[GblId,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=False,boring_ok=False)
         Tmpl= case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_ddVYX
                      realWorld#
               of
               { (# _ [Occ=Dead], ds1_ddVYV [Occ=Once!] #) ->
               case ds1_ddVYV of {
                 __DEFAULT -> GHC.Types.True;
                 0# -> GHC.Types.False
               }
               }}]
rtsSupportsBoundThreads
  = case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_ddVYX
           realWorld#
    of
    { (# ds_ddVYW, ds1_ddVYV #) ->
    case ds1_ddVYV of {
      __DEFAULT -> GHC.Types.True;
      0# -> GHC.Types.False
    }
    }

-- RHS size: {terms: 7, types: 16, coercions: 0, joins: 0/0}
Control.Concurrent.forkFinally2
  :: forall a.
     SomeException
     -> State# RealWorld
     -> (# State# RealWorld, Either SomeException a #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_adVT0)
                 (e1_idW1O [Occ=Once, OS=OneShot] :: SomeException)
                 (eta1_idW1P [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                 (# eta1_idW1P,
                    Data.Either.Left @ SomeException @ a_adVT0 e1_idW1O #)}]
Control.Concurrent.forkFinally2
  = \ (@ a_adVT0)
      (e1_idW1O [OS=OneShot] :: SomeException)
      (eta1_idW1P [OS=OneShot] :: State# RealWorld) ->
      (# eta1_idW1P,
         Data.Either.Left @ SomeException @ a_adVT0 e1_idW1O #)

-- RHS size: {terms: 220, types: 464, coercions: 17, joins: 0/4}
Control.Concurrent.runInUnboundThread1
  :: forall a. IO a -> State# RealWorld -> (# State# RealWorld, a #)
[GblId,
 Arity=2,
 Str=<L,C(U(U,U))><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [60 0] 589 60}]
Control.Concurrent.runInUnboundThread1
  = \ (@ a_adVT0)
      (action_adVQe :: IO a_adVT0)
      (s_i7IAv :: State# RealWorld) ->
      case isCurrentThreadBound# s_i7IAv of
      { (# ipv_sdVZ2, ipv1_sdVZ3 #) ->
      case ipv1_sdVZ3 of {
        __DEFAULT ->
          case newMVar#
                 @ RealWorld @ (Either SomeException a_adVT0) ipv_sdVZ2
          of
          { (# ipv2_iaIyp, ipv3_iaIyq #) ->
          case getMaskingState# ipv2_iaIyp of
          { (# ipv4_idW1o, ipv5_idW1p #) ->
          let {
            lvl13_sdW71 [Dmd=<L,C(U)>]
              :: State# RealWorld
                 -> (# State# RealWorld, Either SomeException a_adVT0 #)
            [LclId,
             Arity=1,
             Str=<S,U>,
             Unf=Unf{Src=InlineStable, TopLvl=False, Value=True, ConLike=True,
                     WorkFree=True, Expandable=True,
                     Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
                     Tmpl= \ (eta_i9Dsl [Occ=Once] :: State# RealWorld) ->
                             takeMVar#
                               @ RealWorld @ (Either SomeException a_adVT0) ipv3_iaIyq eta_i9Dsl}]
            lvl13_sdW71
              = \ (eta_i9Dsl :: State# RealWorld) ->
                  takeMVar#
                    @ RealWorld
                    @ (Either SomeException a_adVT0)
                    ipv3_iaIyq
                    eta_i9Dsl } in
          case ipv5_idW1p of {
            __DEFAULT ->
              case fork#
                     @ (IO ())
                     ((\ (eta_idW1x :: State# RealWorld) ->
                         catch#
                           @ ()
                           @ SomeException
                           (\ (s1_X7IBs [OS=OneShot] :: State# RealWorld) ->
                              case catch#
                                     @ (Either SomeException a_adVT0)
                                     @ SomeException
                                     (\ (s2_idW1I [OS=OneShot] :: State# RealWorld) ->
                                        case maskAsyncExceptions#
                                               @ a_adVT0
                                               (action_adVQe
                                                `cast` (GHC.Types.N:IO[0] <a_adVT0>_R
                                                        :: (IO a_adVT0 :: *)
                                                           ~R# (State# RealWorld
                                                                -> (# State# RealWorld,
                                                                      a_adVT0 #) :: *)))
                                               s2_idW1I
                                        of
                                        { (# ipv6_idW1L, ipv7_idW1M #) ->
                                        (# ipv6_idW1L,
                                           Data.Either.Right @ SomeException @ a_adVT0 ipv7_idW1M #)
                                        })
                                     (Control.Concurrent.forkFinally2 @ a_adVT0)
                                     s1_X7IBs
                              of
                              { (# ipv6_X7IBy, ipv7_X7IBA #) ->
                              case putMVar#
                                     @ RealWorld
                                     @ (Either SomeException a_adVT0)
                                     ipv3_iaIyq
                                     ipv7_X7IBA
                                     ipv6_X7IBy
                              of s2#_i9DsB
                              { __DEFAULT ->
                              (# s2#_i9DsB, GHC.Tuple.() #)
                              }
                              })
                           GHC.Conc.Sync.forkIO2
                           eta_idW1x)
                      `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                              :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                 ~R# (IO () :: *)))
                     ipv4_idW1o
              of
              { (# ipv6_idW1A, ipv7_idW1B #) ->
              letrec {
                wait_sdW6Y [Occ=LoopBreaker]
                  :: State# RealWorld
                     -> (# State# RealWorld, Either SomeException a_adVT0 #)
                [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                wait_sdW6Y
                  = \ (eta_idPOR :: State# RealWorld) ->
                      catch#
                        @ (Either SomeException a_adVT0)
                        @ SomeException
                        lvl13_sdW71
                        (\ (e1_idPOT [OS=OneShot] :: SomeException)
                           (s1_i7JiH [OS=OneShot] :: State# RealWorld) ->
                           case killThread# @ SomeException ipv7_idW1B e1_idPOT s1_i7JiH
                           of s2_idPRs
                           { __DEFAULT ->
                           wait_sdW6Y s2_idPRs
                           })
                        eta_idPOR; } in
              case wait_sdW6Y ipv6_idW1A of { (# ipv8_X7IBG, ipv9_X7IBI #) ->
              case ipv9_X7IBI of {
                Left x_ibNlX ->
                  raiseIO# @ SomeException @ a_adVT0 x_ibNlX ipv8_X7IBG;
                Right y_ibNm0 -> (# ipv8_X7IBG, y_ibNm0 #)
              }
              }
              };
            0# ->
              maskAsyncExceptions#
                @ a_adVT0
                (\ (s1_X7IBq [OS=OneShot] :: State# RealWorld) ->
                   case fork#
                          @ (IO ())
                          ((\ (eta_idW1x :: State# RealWorld) ->
                              catch#
                                @ ()
                                @ SomeException
                                (\ (s2_X7IBs [OS=OneShot] :: State# RealWorld) ->
                                   case catch#
                                          @ (Either SomeException a_adVT0)
                                          @ SomeException
                                          (\ (s3_idW1I [OS=OneShot] :: State# RealWorld) ->
                                             case unmaskAsyncExceptions#
                                                    @ a_adVT0
                                                    (action_adVQe
                                                     `cast` (GHC.Types.N:IO[0] <a_adVT0>_R
                                                             :: (IO a_adVT0 :: *)
                                                                ~R# (State# RealWorld
                                                                     -> (# State# RealWorld,
                                                                           a_adVT0 #) :: *)))
                                                    s3_idW1I
                                             of
                                             { (# ipv6_idW1L, ipv7_idW1M #) ->
                                             (# ipv6_idW1L,
                                                Data.Either.Right
                                                  @ SomeException @ a_adVT0 ipv7_idW1M #)
                                             })
                                          (Control.Concurrent.forkFinally2 @ a_adVT0)
                                          s2_X7IBs
                                   of
                                   { (# ipv6_X7IBy, ipv7_X7IBA #) ->
                                   case putMVar#
                                          @ RealWorld
                                          @ (Either SomeException a_adVT0)
                                          ipv3_iaIyq
                                          ipv7_X7IBA
                                          ipv6_X7IBy
                                   of s2#_i9DsB
                                   { __DEFAULT ->
                                   (# s2#_i9DsB, GHC.Tuple.() #)
                                   }
                                   })
                                GHC.Conc.Sync.forkIO2
                                eta_idW1x)
                           `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                                   :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                      ~R# (IO () :: *)))
                          s1_X7IBq
                   of
                   { (# ipv6_idW1A, ipv7_idW1B #) ->
                   letrec {
                     wait_sdW6Y [Occ=LoopBreaker]
                       :: State# RealWorld
                          -> (# State# RealWorld, Either SomeException a_adVT0 #)
                     [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                     wait_sdW6Y
                       = \ (eta_idPOR :: State# RealWorld) ->
                           catch#
                             @ (Either SomeException a_adVT0)
                             @ SomeException
                             lvl13_sdW71
                             (\ (e1_idPOT [OS=OneShot] :: SomeException)
                                (s2_i7JiH [OS=OneShot] :: State# RealWorld) ->
                                case killThread# @ SomeException ipv7_idW1B e1_idPOT s2_i7JiH
                                of s3_idPRs
                                { __DEFAULT ->
                                wait_sdW6Y s3_idPRs
                                })
                             eta_idPOR; } in
                   case wait_sdW6Y ipv6_idW1A of { (# ipv8_X7IBG, ipv9_X7IBI #) ->
                   case ipv9_X7IBI of {
                     Left x_ibNlX ->
                       raiseIO# @ SomeException @ a_adVT0 x_ibNlX ipv8_X7IBG;
                     Right y_ibNm0 -> (# ipv8_X7IBG, y_ibNm0 #)
                   }
                   }
                   })
                ipv4_idW1o;
            1# ->
              case fork#
                     @ (IO ())
                     ((\ (eta_idW1x :: State# RealWorld) ->
                         catch#
                           @ ()
                           @ SomeException
                           (\ (s1_X7IBs [OS=OneShot] :: State# RealWorld) ->
                              case catch#
                                     @ (Either SomeException a_adVT0)
                                     @ SomeException
                                     (\ (s2_idW1I [OS=OneShot] :: State# RealWorld) ->
                                        case maskUninterruptible#
                                               @ a_adVT0
                                               (action_adVQe
                                                `cast` (GHC.Types.N:IO[0] <a_adVT0>_R
                                                        :: (IO a_adVT0 :: *)
                                                           ~R# (State# RealWorld
                                                                -> (# State# RealWorld,
                                                                      a_adVT0 #) :: *)))
                                               s2_idW1I
                                        of
                                        { (# ipv6_idW1L, ipv7_idW1M #) ->
                                        (# ipv6_idW1L,
                                           Data.Either.Right @ SomeException @ a_adVT0 ipv7_idW1M #)
                                        })
                                     (Control.Concurrent.forkFinally2 @ a_adVT0)
                                     s1_X7IBs
                              of
                              { (# ipv6_X7IBy, ipv7_X7IBA #) ->
                              case putMVar#
                                     @ RealWorld
                                     @ (Either SomeException a_adVT0)
                                     ipv3_iaIyq
                                     ipv7_X7IBA
                                     ipv6_X7IBy
                              of s2#_i9DsB
                              { __DEFAULT ->
                              (# s2#_i9DsB, GHC.Tuple.() #)
                              }
                              })
                           GHC.Conc.Sync.forkIO2
                           eta_idW1x)
                      `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                              :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                 ~R# (IO () :: *)))
                     ipv4_idW1o
              of
              { (# ipv6_idW1A, ipv7_idW1B #) ->
              letrec {
                wait_sdW6Y [Occ=LoopBreaker]
                  :: State# RealWorld
                     -> (# State# RealWorld, Either SomeException a_adVT0 #)
                [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                wait_sdW6Y
                  = \ (eta_idPOR :: State# RealWorld) ->
                      catch#
                        @ (Either SomeException a_adVT0)
                        @ SomeException
                        lvl13_sdW71
                        (\ (e1_idPOT [OS=OneShot] :: SomeException)
                           (s1_i7JiH [OS=OneShot] :: State# RealWorld) ->
                           case killThread# @ SomeException ipv7_idW1B e1_idPOT s1_i7JiH
                           of s2_idPRs
                           { __DEFAULT ->
                           wait_sdW6Y s2_idPRs
                           })
                        eta_idPOR; } in
              case wait_sdW6Y ipv6_idW1A of { (# ipv8_X7IBG, ipv9_X7IBI #) ->
              case ipv9_X7IBI of {
                Left x_ibNlX ->
                  raiseIO# @ SomeException @ a_adVT0 x_ibNlX ipv8_X7IBG;
                Right y_ibNm0 -> (# ipv8_X7IBG, y_ibNm0 #)
              }
              }
              }
          }
          }
          };
        0# ->
          (action_adVQe
           `cast` (GHC.Types.N:IO[0] <a_adVT0>_R
                   :: (IO a_adVT0 :: *)
                      ~R# (State# RealWorld -> (# State# RealWorld, a_adVT0 #) :: *)))
            ipv_sdVZ2
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 9, joins: 0/0}
runInUnboundThread :: forall a. IO a -> IO a
[GblId,
 Arity=2,
 Str=<L,C(U(U,U))><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Control.Concurrent.runInUnboundThread1
               `cast` (forall (a :: <*>_N).
                       <IO a>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R)
                       :: (forall a.
                           IO a -> State# RealWorld -> (# State# RealWorld, a #) :: *)
                          ~R# (forall a. IO a -> IO a :: *))}]
runInUnboundThread
  = Control.Concurrent.runInUnboundThread1
    `cast` (forall (a :: <*>_N).
            <IO a>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R)
            :: (forall a.
                IO a -> State# RealWorld -> (# State# RealWorld, a #) :: *)
               ~R# (forall a. IO a -> IO a :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_rdWnQ :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl_rdWnQ
  = "RTS doesn't support multiple OS threads (use ghc -threaded when linking)"#

-- RHS size: {terms: 6, types: 5, coercions: 0, joins: 0/0}
Control.Concurrent.forkOS2
  :: forall a. State# RealWorld -> (# State# RealWorld, a #)
[GblId, Arity=1, Str=<B,U>x, Unf=OtherCon []]
Control.Concurrent.forkOS2
  = \ (@ a_adVTZ) (eta_B1 :: State# RealWorld) ->
      GHC.IO.failIO1 @ a_adVTZ (unpackCString# lvl_rdWnQ) eta_B1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl1_rdWnR :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl1_rdWnR = "undefined"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl2_rdWnS :: [Char]
[GblId]
lvl2_rdWnS = unpackCString# lvl1_rdWnR

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl3_rdWnT :: [Char]
[GblId]
lvl3_rdWnT = unpackCString# Control.Concurrent.$trModule4

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl4_rdWnU :: [Char]
[GblId]
lvl4_rdWnU = unpackCString# Control.Concurrent.$trModule2

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl5_rdWnV :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl5_rdWnV = "./Control/Concurrent.hs"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl6_rdWnW :: [Char]
[GblId]
lvl6_rdWnW = unpackCString# lvl5_rdWnV

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl7_rdWnX :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl7_rdWnX = GHC.Types.I# 353#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl8_rdWnY :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl8_rdWnY = GHC.Types.I# 33#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl9_rdWnZ :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl9_rdWnZ = GHC.Types.I# 42#

-- RHS size: {terms: 8, types: 0, coercions: 0, joins: 0/0}
lvl10_rdWo0 :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []]
lvl10_rdWo0
  = GHC.Stack.Types.SrcLoc
      lvl3_rdWnT
      lvl4_rdWnU
      lvl6_rdWnW
      lvl7_rdWnX
      lvl8_rdWnY
      lvl7_rdWnX
      lvl9_rdWnZ

-- RHS size: {terms: 4, types: 0, coercions: 0, joins: 0/0}
lvl11_rdWo1 :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []]
lvl11_rdWo1
  = GHC.Stack.Types.PushCallStack
      lvl2_rdWnS lvl10_rdWo0 GHC.Stack.Types.EmptyCallStack

-- RHS size: {terms: 3, types: 6, coercions: 4, joins: 0/0}
Control.Concurrent.runInBoundThread2
  :: forall a. Either SomeException a
[GblId, Str=x]
Control.Concurrent.runInBoundThread2
  = \ (@ a_adVVB) ->
      undefined
        @ 'LiftedRep
        @ (Either SomeException a_adVVB)
        (lvl11_rdWo1
         `cast` (Sym (GHC.Classes.N:IP[0]
                          <"callStack">_N <GHC.Stack.Types.CallStack>_N)
                 :: (GHC.Stack.Types.CallStack :: *)
                    ~R# (?callStack::GHC.Stack.Types.CallStack :: Constraint)))

-- RHS size: {terms: 246, types: 555, coercions: 17, joins: 0/0}
Control.Concurrent.runInBoundThread1
  :: forall a. IO a -> State# RealWorld -> (# State# RealWorld, a #)
[GblId,
 Arity=2,
 Str=<L,C(U(U,U))><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [240 0] 702 90}]
Control.Concurrent.runInBoundThread1
  = \ (@ a_adVVB)
      (action_XdVR6 :: IO a_adVVB)
      (eta_B1 :: State# RealWorld) ->
      case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_ddVYX
             realWorld#
      of
      { (# ds_ddVYW, ds1_ddVYV #) ->
      case ds1_ddVYV of {
        __DEFAULT ->
          case isCurrentThreadBound# eta_B1 of
          { (# ipv_sdVZ2, ipv1_sdVZ3 #) ->
          case ipv1_sdVZ3 of {
            __DEFAULT ->
              (action_XdVR6
               `cast` (GHC.Types.N:IO[0] <a_adVVB>_R
                       :: (IO a_adVVB :: *)
                          ~R# (State# RealWorld -> (# State# RealWorld, a_adVVB #) :: *)))
                ipv_sdVZ2;
            0# ->
              case newMutVar#
                     @ (Either SomeException a_adVVB)
                     @ RealWorld
                     (Control.Concurrent.runInBoundThread2 @ a_adVVB)
                     ipv_sdVZ2
              of
              { (# ipv2_icBfx, ipv3_icBfy #) ->
              case getMaskingState# ipv2_icBfx of
              { (# ipv4_icnDc, ipv5_icnDd #) ->
              case ipv5_icnDd of {
                __DEFAULT ->
                  case makeStablePtr#
                         @ (IO ())
                         ((\ (s_X7IBP :: State# RealWorld) ->
                             case catch#
                                    @ (Either SomeException a_adVVB)
                                    @ SomeException
                                    (\ (s1_idW1I [OS=OneShot] :: State# RealWorld) ->
                                       case (action_XdVR6
                                             `cast` (GHC.Types.N:IO[0] <a_adVVB>_R
                                                     :: (IO a_adVVB :: *)
                                                        ~R# (State# RealWorld
                                                             -> (# State# RealWorld,
                                                                   a_adVVB #) :: *)))
                                              s1_idW1I
                                       of
                                       { (# ipv6_idW1L, ipv7_idW1M #) ->
                                       (# ipv6_idW1L,
                                          Data.Either.Right @ SomeException @ a_adVVB ipv7_idW1M #)
                                       })
                                    (Control.Concurrent.forkFinally2 @ a_adVVB)
                                    s_X7IBP
                             of
                             { (# ipv6_X7IBV, ipv7_X7IBX #) ->
                             case writeMutVar#
                                    @ RealWorld
                                    @ (Either SomeException a_adVVB)
                                    ipv3_icBfy
                                    ipv7_X7IBX
                                    ipv6_X7IBV
                             of s2#_i7IBe
                             { __DEFAULT ->
                             (# s2#_i7IBe, GHC.Tuple.() #)
                             }
                             })
                          `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                                  :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                     ~R# (IO () :: *)))
                         ipv4_icnDc
                  of
                  { (# ipv6_i9DrV, ipv7_i9DrW #) ->
                  case catch#
                         @ (Either SomeException a_adVVB)
                         @ SomeException
                         (maskAsyncExceptions#
                            @ (Either SomeException a_adVVB)
                            (\ (s_i7JiH [OS=OneShot] :: State# RealWorld) ->
                               case {__pkg_ccall_GC base-4.11.0.0 StablePtr# (IO ())
                              -> State# RealWorld -> (# State# RealWorld #)}_ddVYT
                                      ipv7_i9DrW s_i7JiH
                               of
                               { (# ds7_ddVYR #) ->
                               readMutVar#
                                 @ RealWorld @ (Either SomeException a_adVVB) ipv3_icBfy ds7_ddVYR
                               }))
                         (\ (e1_icnDl [OS=OneShot] :: SomeException)
                            (s_icnDm [OS=OneShot] :: State# RealWorld) ->
                            case {__pkg_ccall base-4.11.0.0 forall a.
                           StablePtr# a -> State# RealWorld -> (# State# RealWorld #)}_i9Ddh
                                   @ (IO ()) ipv7_i9DrW s_icnDm
                            of
                            { (# ds7_i9Ddm #) ->
                            raiseIO#
                              @ SomeException @ (Either SomeException a_adVVB) e1_icnDl ds7_i9Ddm
                            })
                         ipv6_i9DrV
                  of
                  { (# ipv8_icnDu, ipv9_icnDv #) ->
                  case {__pkg_ccall base-4.11.0.0 forall a.
                           StablePtr# a -> State# RealWorld -> (# State# RealWorld #)}_i9Ddh
                         @ (IO ()) ipv7_i9DrW ipv8_icnDu
                  of
                  { (# ds8_i9Ddm #) ->
                  case ipv9_icnDv of {
                    Left x_ibNlX ->
                      raiseIO# @ SomeException @ a_adVVB x_ibNlX ds8_i9Ddm;
                    Right y_ibNm0 -> (# ds8_i9Ddm, y_ibNm0 #)
                  }
                  }
                  }
                  };
                0# ->
                  case maskAsyncExceptions#
                         @ (Either SomeException a_adVVB)
                         (\ (s_icnDC [OS=OneShot] :: State# RealWorld) ->
                            case makeStablePtr#
                                   @ (IO ())
                                   ((\ (s1_X7IBP :: State# RealWorld) ->
                                       case catch#
                                              @ (Either SomeException a_adVVB)
                                              @ SomeException
                                              (\ (s2_idW1I [OS=OneShot] :: State# RealWorld) ->
                                                 case (action_XdVR6
                                                       `cast` (GHC.Types.N:IO[0] <a_adVVB>_R
                                                               :: (IO a_adVVB :: *)
                                                                  ~R# (State# RealWorld
                                                                       -> (# State# RealWorld,
                                                                             a_adVVB #) :: *)))
                                                        s2_idW1I
                                                 of
                                                 { (# ipv6_idW1L, ipv7_idW1M #) ->
                                                 (# ipv6_idW1L,
                                                    Data.Either.Right
                                                      @ SomeException @ a_adVVB ipv7_idW1M #)
                                                 })
                                              (Control.Concurrent.forkFinally2 @ a_adVVB)
                                              s1_X7IBP
                                       of
                                       { (# ipv6_X7IBV, ipv7_X7IBX #) ->
                                       case writeMutVar#
                                              @ RealWorld
                                              @ (Either SomeException a_adVVB)
                                              ipv3_icBfy
                                              ipv7_X7IBX
                                              ipv6_X7IBV
                                       of s2#_i7IBe
                                       { __DEFAULT ->
                                       (# s2#_i7IBe, GHC.Tuple.() #)
                                       }
                                       })
                                    `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                                            :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                               ~R# (IO () :: *)))
                                   s_icnDC
                            of
                            { (# ipv6_i9DrV, ipv7_i9DrW #) ->
                            case catch#
                                   @ (Either SomeException a_adVVB)
                                   @ SomeException
                                   (unmaskAsyncExceptions#
                                      @ (Either SomeException a_adVVB)
                                      (\ (s1_i7JiH [OS=OneShot] :: State# RealWorld) ->
                                         case {__pkg_ccall_GC base-4.11.0.0 StablePtr# (IO ())
                              -> State# RealWorld -> (# State# RealWorld #)}_ddVYT
                                                ipv7_i9DrW s1_i7JiH
                                         of
                                         { (# ds7_ddVYR #) ->
                                         readMutVar#
                                           @ RealWorld
                                           @ (Either SomeException a_adVVB)
                                           ipv3_icBfy
                                           ds7_ddVYR
                                         }))
                                   (\ (e1_icnDI [OS=OneShot] :: SomeException)
                                      (s1_icnDJ [OS=OneShot] :: State# RealWorld) ->
                                      case {__pkg_ccall base-4.11.0.0 forall a.
                           StablePtr# a -> State# RealWorld -> (# State# RealWorld #)}_i9Ddh
                                             @ (IO ()) ipv7_i9DrW s1_icnDJ
                                      of
                                      { (# ds7_i9Ddm #) ->
                                      raiseIO#
                                        @ SomeException
                                        @ (Either SomeException a_adVVB)
                                        e1_icnDI
                                        ds7_i9Ddm
                                      })
                                   ipv6_i9DrV
                            of
                            { (# ipv8_icnDR, ipv9_icnDS #) ->
                            case {__pkg_ccall base-4.11.0.0 forall a.
                           StablePtr# a -> State# RealWorld -> (# State# RealWorld #)}_i9Ddh
                                   @ (IO ()) ipv7_i9DrW ipv8_icnDR
                            of
                            { (# ds8_i9Ddm #) ->
                            (# ds8_i9Ddm, ipv9_icnDS #)
                            }
                            }
                            })
                         ipv4_icnDc
                  of
                  { (# ipv6_X7IBZ, ipv7_X7IC1 #) ->
                  case ipv7_X7IC1 of {
                    Left x_ibNlX ->
                      raiseIO# @ SomeException @ a_adVVB x_ibNlX ipv6_X7IBZ;
                    Right y_ibNm0 -> (# ipv6_X7IBZ, y_ibNm0 #)
                  }
                  };
                1# ->
                  case makeStablePtr#
                         @ (IO ())
                         ((\ (s_X7IBP :: State# RealWorld) ->
                             case catch#
                                    @ (Either SomeException a_adVVB)
                                    @ SomeException
                                    (\ (s1_idW1I [OS=OneShot] :: State# RealWorld) ->
                                       case (action_XdVR6
                                             `cast` (GHC.Types.N:IO[0] <a_adVVB>_R
                                                     :: (IO a_adVVB :: *)
                                                        ~R# (State# RealWorld
                                                             -> (# State# RealWorld,
                                                                   a_adVVB #) :: *)))
                                              s1_idW1I
                                       of
                                       { (# ipv6_idW1L, ipv7_idW1M #) ->
                                       (# ipv6_idW1L,
                                          Data.Either.Right @ SomeException @ a_adVVB ipv7_idW1M #)
                                       })
                                    (Control.Concurrent.forkFinally2 @ a_adVVB)
                                    s_X7IBP
                             of
                             { (# ipv6_X7IBV, ipv7_X7IBX #) ->
                             case writeMutVar#
                                    @ RealWorld
                                    @ (Either SomeException a_adVVB)
                                    ipv3_icBfy
                                    ipv7_X7IBX
                                    ipv6_X7IBV
                             of s2#_i7IBe
                             { __DEFAULT ->
                             (# s2#_i7IBe, GHC.Tuple.() #)
                             }
                             })
                          `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                                  :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                     ~R# (IO () :: *)))
                         ipv4_icnDc
                  of
                  { (# ipv6_i9DrV, ipv7_i9DrW #) ->
                  case catch#
                         @ (Either SomeException a_adVVB)
                         @ SomeException
                         (maskUninterruptible#
                            @ (Either SomeException a_adVVB)
                            (\ (s_i7JiH [OS=OneShot] :: State# RealWorld) ->
                               case {__pkg_ccall_GC base-4.11.0.0 StablePtr# (IO ())
                              -> State# RealWorld -> (# State# RealWorld #)}_ddVYT
                                      ipv7_i9DrW s_i7JiH
                               of
                               { (# ds7_ddVYR #) ->
                               readMutVar#
                                 @ RealWorld @ (Either SomeException a_adVVB) ipv3_icBfy ds7_ddVYR
                               }))
                         (\ (e1_icnE4 [OS=OneShot] :: SomeException)
                            (s_icnE5 [OS=OneShot] :: State# RealWorld) ->
                            case {__pkg_ccall base-4.11.0.0 forall a.
                           StablePtr# a -> State# RealWorld -> (# State# RealWorld #)}_i9Ddh
                                   @ (IO ()) ipv7_i9DrW s_icnE5
                            of
                            { (# ds7_i9Ddm #) ->
                            raiseIO#
                              @ SomeException @ (Either SomeException a_adVVB) e1_icnE4 ds7_i9Ddm
                            })
                         ipv6_i9DrV
                  of
                  { (# ipv8_icnEd, ipv9_icnEe #) ->
                  case {__pkg_ccall base-4.11.0.0 forall a.
                           StablePtr# a -> State# RealWorld -> (# State# RealWorld #)}_i9Ddh
                         @ (IO ()) ipv7_i9DrW ipv8_icnEd
                  of
                  { (# ds8_i9Ddm #) ->
                  case ipv9_icnEe of {
                    Left x_ibNlX ->
                      raiseIO# @ SomeException @ a_adVVB x_ibNlX ds8_i9Ddm;
                    Right y_ibNm0 -> (# ds8_i9Ddm, y_ibNm0 #)
                  }
                  }
                  }
                  }
              }
              }
              }
          }
          };
        0# -> Control.Concurrent.forkOS2 @ a_adVVB eta_B1
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 9, joins: 0/0}
runInBoundThread :: forall a. IO a -> IO a
[GblId,
 Arity=2,
 Str=<L,C(U(U,U))><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Control.Concurrent.runInBoundThread1
               `cast` (forall (a :: <*>_N).
                       <IO a>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R)
                       :: (forall a.
                           IO a -> State# RealWorld -> (# State# RealWorld, a #) :: *)
                          ~R# (forall a. IO a -> IO a :: *))}]
runInBoundThread
  = Control.Concurrent.runInBoundThread1
    `cast` (forall (a :: <*>_N).
            <IO a>_R ->_R Sym (GHC.Types.N:IO[0] <a>_R)
            :: (forall a.
                IO a -> State# RealWorld -> (# State# RealWorld, a #) :: *)
               ~R# (forall a. IO a -> IO a :: *))

-- RHS size: {terms: 109, types: 239, coercions: 21, joins: 0/0}
Control.Concurrent.forkFinally1
  :: forall a.
     IO a
     -> (Either SomeException a -> IO ())
     -> State# RealWorld
     -> (# State# RealWorld, ThreadId #)
[GblId,
 Arity=3,
 Str=<L,C(U)><L,C(C1(U))><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 60 0] 297 60}]
Control.Concurrent.forkFinally1
  = \ (@ a_adVWY)
      (action_adVPS :: IO a_adVWY)
      (and_then_adVPT :: Either SomeException a_adVWY -> IO ())
      (eta_B1 :: State# RealWorld) ->
      case getMaskingState# eta_B1 of { (# ipv_idW1o, ipv1_idW1p #) ->
      case ipv1_idW1p of {
        __DEFAULT ->
          case fork#
                 @ (IO ())
                 ((\ (eta1_idW1x :: State# RealWorld) ->
                     catch#
                       @ ()
                       @ SomeException
                       (\ (s_i7IAv [OS=OneShot] :: State# RealWorld) ->
                          case catch#
                                 @ (Either SomeException a_adVWY)
                                 @ SomeException
                                 (\ (s1_idW1I [OS=OneShot] :: State# RealWorld) ->
                                    case maskAsyncExceptions#
                                           @ a_adVWY
                                           (action_adVPS
                                            `cast` (GHC.Types.N:IO[0] <a_adVWY>_R
                                                    :: (IO a_adVWY :: *)
                                                       ~R# (State# RealWorld
                                                            -> (# State# RealWorld,
                                                                  a_adVWY #) :: *)))
                                           s1_idW1I
                                    of
                                    { (# ipv2_idW1L, ipv3_idW1M #) ->
                                    (# ipv2_idW1L,
                                       Data.Either.Right @ SomeException @ a_adVWY ipv3_idW1M #)
                                    })
                                 (Control.Concurrent.forkFinally2 @ a_adVWY)
                                 s_i7IAv
                          of
                          { (# ipv2_i7IAy, ipv3_i7IAz #) ->
                          ((and_then_adVPT ipv3_i7IAz)
                           `cast` (GHC.Types.N:IO[0] <()>_R
                                   :: (IO () :: *)
                                      ~R# (State# RealWorld -> (# State# RealWorld, () #) :: *)))
                            ipv2_i7IAy
                          })
                       GHC.Conc.Sync.forkIO2
                       eta1_idW1x)
                  `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                          :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                             ~R# (IO () :: *)))
                 ipv_idW1o
          of
          { (# ipv2_idW1A, ipv3_idW1B #) ->
          (# ipv2_idW1A, GHC.Conc.Sync.ThreadId ipv3_idW1B #)
          };
        0# ->
          maskAsyncExceptions#
            @ ThreadId
            (\ (s_idW1w [OS=OneShot] :: State# RealWorld) ->
               case fork#
                      @ (IO ())
                      ((\ (eta1_idW1x :: State# RealWorld) ->
                          catch#
                            @ ()
                            @ SomeException
                            (\ (s1_i7IAv [OS=OneShot] :: State# RealWorld) ->
                               case catch#
                                      @ (Either SomeException a_adVWY)
                                      @ SomeException
                                      (\ (s2_idW1I [OS=OneShot] :: State# RealWorld) ->
                                         case unmaskAsyncExceptions#
                                                @ a_adVWY
                                                (action_adVPS
                                                 `cast` (GHC.Types.N:IO[0] <a_adVWY>_R
                                                         :: (IO a_adVWY :: *)
                                                            ~R# (State# RealWorld
                                                                 -> (# State# RealWorld,
                                                                       a_adVWY #) :: *)))
                                                s2_idW1I
                                         of
                                         { (# ipv2_idW1L, ipv3_idW1M #) ->
                                         (# ipv2_idW1L,
                                            Data.Either.Right
                                              @ SomeException @ a_adVWY ipv3_idW1M #)
                                         })
                                      (Control.Concurrent.forkFinally2 @ a_adVWY)
                                      s1_i7IAv
                               of
                               { (# ipv2_i7IAy, ipv3_i7IAz #) ->
                               ((and_then_adVPT ipv3_i7IAz)
                                `cast` (GHC.Types.N:IO[0] <()>_R
                                        :: (IO () :: *)
                                           ~R# (State# RealWorld
                                                -> (# State# RealWorld, () #) :: *)))
                                 ipv2_i7IAy
                               })
                            GHC.Conc.Sync.forkIO2
                            eta1_idW1x)
                       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                               :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                  ~R# (IO () :: *)))
                      s_idW1w
               of
               { (# ipv2_idW1A, ipv3_idW1B #) ->
               (# ipv2_idW1A, GHC.Conc.Sync.ThreadId ipv3_idW1B #)
               })
            ipv_idW1o;
        1# ->
          case fork#
                 @ (IO ())
                 ((\ (eta1_idW1x :: State# RealWorld) ->
                     catch#
                       @ ()
                       @ SomeException
                       (\ (s_i7IAv [OS=OneShot] :: State# RealWorld) ->
                          case catch#
                                 @ (Either SomeException a_adVWY)
                                 @ SomeException
                                 (\ (s1_idW1I [OS=OneShot] :: State# RealWorld) ->
                                    case maskUninterruptible#
                                           @ a_adVWY
                                           (action_adVPS
                                            `cast` (GHC.Types.N:IO[0] <a_adVWY>_R
                                                    :: (IO a_adVWY :: *)
                                                       ~R# (State# RealWorld
                                                            -> (# State# RealWorld,
                                                                  a_adVWY #) :: *)))
                                           s1_idW1I
                                    of
                                    { (# ipv2_idW1L, ipv3_idW1M #) ->
                                    (# ipv2_idW1L,
                                       Data.Either.Right @ SomeException @ a_adVWY ipv3_idW1M #)
                                    })
                                 (Control.Concurrent.forkFinally2 @ a_adVWY)
                                 s_i7IAv
                          of
                          { (# ipv2_i7IAy, ipv3_i7IAz #) ->
                          ((and_then_adVPT ipv3_i7IAz)
                           `cast` (GHC.Types.N:IO[0] <()>_R
                                   :: (IO () :: *)
                                      ~R# (State# RealWorld -> (# State# RealWorld, () #) :: *)))
                            ipv2_i7IAy
                          })
                       GHC.Conc.Sync.forkIO2
                       eta1_idW1x)
                  `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                          :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                             ~R# (IO () :: *)))
                 ipv_idW1o
          of
          { (# ipv2_idW1A, ipv3_idW1B #) ->
          (# ipv2_idW1A, GHC.Conc.Sync.ThreadId ipv3_idW1B #)
          }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 15, joins: 0/0}
forkFinally
  :: forall a.
     IO a -> (Either SomeException a -> IO ()) -> IO ThreadId
[GblId,
 Arity=3,
 Str=<L,C(U)><L,C(C1(U))><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Control.Concurrent.forkFinally1
               `cast` (forall (a :: <*>_N).
                       <IO a>_R
                       ->_R <Either SomeException a -> IO ()>_R
                       ->_R Sym (GHC.Types.N:IO[0] <ThreadId>_R)
                       :: (forall a.
                           IO a
                           -> (Either SomeException a -> IO ())
                           -> State# RealWorld
                           -> (# State# RealWorld, ThreadId #) :: *)
                          ~R# (forall a.
                               IO a -> (Either SomeException a -> IO ()) -> IO ThreadId :: *))}]
forkFinally
  = Control.Concurrent.forkFinally1
    `cast` (forall (a :: <*>_N).
            <IO a>_R
            ->_R <Either SomeException a -> IO ()>_R
            ->_R Sym (GHC.Types.N:IO[0] <ThreadId>_R)
            :: (forall a.
                IO a
                -> (Either SomeException a -> IO ())
                -> State# RealWorld
                -> (# State# RealWorld, ThreadId #) :: *)
               ~R# (forall a.
                    IO a -> (Either SomeException a -> IO ()) -> IO ThreadId :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl12_rdWo2 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl12_rdWo2 = "Cannot create OS thread."#

-- RHS size: {terms: 5, types: 3, coercions: 0, joins: 0/0}
Control.Concurrent.forkOS3
  :: State# RealWorld -> (# State# RealWorld, () #)
[GblId, Arity=1, Str=<B,U>x, Unf=OtherCon []]
Control.Concurrent.forkOS3
  = \ (eta_B1 :: State# RealWorld) ->
      GHC.IO.failIO1 @ () (unpackCString# lvl12_rdWo2) eta_B1

-- RHS size: {terms: 75, types: 134, coercions: 7, joins: 0/0}
Control.Concurrent.forkOS1
  :: IO () -> State# RealWorld -> (# State# RealWorld, ThreadId #)
[GblId,
 Arity=2,
 Str=<L,C(U(U,U))><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 252 30}]
Control.Concurrent.forkOS1
  = \ (action0_adVPX :: IO ()) (eta_B1 :: State# RealWorld) ->
      case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_ddVYX
             realWorld#
      of
      { (# ds_ddVYW, ds1_ddVYV #) ->
      case ds1_ddVYV of {
        __DEFAULT ->
          case newMVar# @ RealWorld @ ThreadId eta_B1 of
          { (# ipv_iaIyp, ipv1_iaIyq #) ->
          case getMaskingState# ipv_iaIyp of
          { (# ipv2_idW3z, ipv3_idW3A #) ->
          case makeStablePtr#
                 @ (IO ())
                 ((\ (s_i7JiH :: State# RealWorld) ->
                     case myThreadId# s_i7JiH of { (# ipv4_idPQK, ipv5_idPQL #) ->
                     case putMVar#
                            @ RealWorld
                            @ ThreadId
                            ipv1_iaIyq
                            (GHC.Conc.Sync.ThreadId ipv5_idPQL)
                            ipv4_idPQK
                     of s2#_i9DsB
                     { __DEFAULT ->
                     catch#
                       @ ()
                       @ SomeException
                       (case ipv3_idW3A of {
                          __DEFAULT ->
                            action0_adVPX
                            `cast` (GHC.Types.N:IO[0] <()>_R
                                    :: (IO () :: *)
                                       ~R# (State# RealWorld -> (# State# RealWorld, () #) :: *));
                          0# ->
                            unmaskAsyncExceptions#
                              @ ()
                              (action0_adVPX
                               `cast` (GHC.Types.N:IO[0] <()>_R
                                       :: (IO () :: *)
                                          ~R# (State# RealWorld
                                               -> (# State# RealWorld, () #) :: *)));
                          1# -> GHC.IO.uninterruptibleMask_1 @ () action0_adVPX
                        })
                       GHC.Conc.Sync.childHandler1
                       s2#_i9DsB
                     }
                     })
                  `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                          :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                             ~R# (IO () :: *)))
                 ipv2_idW3z
          of
          { (# ipv4_i9DrV, ipv5_i9DrW #) ->
          case {__pkg_ccall_GC base-4.11.0.0 StablePtr# (IO ())
                              -> State# RealWorld -> (# State# RealWorld, Int# #)}_ddVYM
                 ipv5_i9DrW ipv4_i9DrV
          of
          { (# ds5_ddVYK, ds6_ddVYJ #) ->
          case narrow32Int# ds6_ddVYJ of {
            __DEFAULT ->
              case Control.Concurrent.forkOS3 ds5_ddVYK of wild4_00 { };
            0# ->
              case takeMVar# @ RealWorld @ ThreadId ipv1_iaIyq ds5_ddVYK of
              { (# ipv6_X7IC0, ipv7_X7IC2 #) ->
              case {__pkg_ccall base-4.11.0.0 forall a.
                           StablePtr# a -> State# RealWorld -> (# State# RealWorld #)}_i9Ddh
                     @ (IO ()) ipv5_i9DrW ipv6_X7IC0
              of
              { (# ds8_i9Ddm #) ->
              (# ds8_i9Ddm, ipv7_X7IC2 #)
              }
              }
          }
          }
          }
          }
          };
        0# -> Control.Concurrent.forkOS2 @ ThreadId eta_B1
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 6, joins: 0/0}
forkOS :: IO () -> IO ThreadId
[GblId,
 Arity=2,
 Str=<L,C(U(U,U))><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Control.Concurrent.forkOS1
               `cast` (<IO ()>_R ->_R Sym (GHC.Types.N:IO[0] <ThreadId>_R)
                       :: (IO ()
                           -> State# RealWorld -> (# State# RealWorld, ThreadId #) :: *)
                          ~R# (IO () -> IO ThreadId :: *))}]
forkOS
  = Control.Concurrent.forkOS1
    `cast` (<IO ()>_R ->_R Sym (GHC.Types.N:IO[0] <ThreadId>_R)
            :: (IO ()
                -> State# RealWorld -> (# State# RealWorld, ThreadId #) :: *)
               ~R# (IO () -> IO ThreadId :: *))

-- RHS size: {terms: 6, types: 10, coercions: 10, joins: 0/0}
Control.Concurrent.forkOSWithUnmask1
  :: ((forall a. IO a -> IO a) -> IO ())
     -> State# RealWorld -> (# State# RealWorld, ThreadId #)
[GblId,
 Arity=2,
 Str=<L,1*C1(C(U(U,U)))><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (io_adVQ5 [Occ=Once!] :: (forall a. IO a -> IO a) -> IO ())
                 (eta_B1 [Occ=Once] :: State# RealWorld) ->
                 Control.Concurrent.forkOS1
                   (io_adVQ5
                      (unmaskAsyncExceptions#
                       `cast` (forall (a :: <*>_N).
                               Sym (GHC.Types.N:IO[0] <a>_R) ->_R Sym (GHC.Types.N:IO[0] <a>_R)
                               :: (forall a.
                                   (State# RealWorld -> (# State# RealWorld, a #))
                                   -> State# RealWorld -> (# State# RealWorld, a #) :: *)
                                  ~R# (forall a. IO a -> IO a :: *))))
                   eta_B1}]
Control.Concurrent.forkOSWithUnmask1
  = \ (io_adVQ5 :: (forall a. IO a -> IO a) -> IO ())
      (eta_B1 :: State# RealWorld) ->
      Control.Concurrent.forkOS1
        (io_adVQ5
           (unmaskAsyncExceptions#
            `cast` (forall (a :: <*>_N).
                    Sym (GHC.Types.N:IO[0] <a>_R) ->_R Sym (GHC.Types.N:IO[0] <a>_R)
                    :: (forall a.
                        (State# RealWorld -> (# State# RealWorld, a #))
                        -> State# RealWorld -> (# State# RealWorld, a #) :: *)
                       ~R# (forall a. IO a -> IO a :: *))))
        eta_B1

-- RHS size: {terms: 1, types: 0, coercions: 12, joins: 0/0}
forkOSWithUnmask
  :: ((forall a. IO a -> IO a) -> IO ()) -> IO ThreadId
[GblId,
 Arity=2,
 Str=<L,1*C1(C(U(U,U)))><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Control.Concurrent.forkOSWithUnmask1
               `cast` (<(forall a. IO a -> IO a) -> IO ()>_R
                       ->_R Sym (GHC.Types.N:IO[0] <ThreadId>_R)
                       :: (((forall a. IO a -> IO a) -> IO ())
                           -> State# RealWorld -> (# State# RealWorld, ThreadId #) :: *)
                          ~R# (((forall a. IO a -> IO a) -> IO ()) -> IO ThreadId :: *))}]
forkOSWithUnmask
  = Control.Concurrent.forkOSWithUnmask1
    `cast` (<(forall a. IO a -> IO a) -> IO ()>_R
            ->_R Sym (GHC.Types.N:IO[0] <ThreadId>_R)
            :: (((forall a. IO a -> IO a) -> IO ())
                -> State# RealWorld -> (# State# RealWorld, ThreadId #) :: *)
               ~R# (((forall a. IO a -> IO a) -> IO ()) -> IO ThreadId :: *))

-- RHS size: {terms: 12, types: 26, coercions: 2, joins: 0/0}
Control.Concurrent.$fstableZC0ZCbaseZCControlziConcurrentZCforkOSzuentry1
  :: StablePtr (IO ())
     -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (stableAction_adVPV [Occ=Once!] :: StablePtr (IO ()))
                 (s_i7IAv [Occ=Once] :: State# RealWorld) ->
                 case stableAction_adVPV of
                 { GHC.Stable.StablePtr sp_i9Dsc [Occ=Once] ->
                 case deRefStablePtr# @ (IO ()) sp_i9Dsc s_i7IAv of
                 { (# ipv_i7IAy [Occ=Once], ipv1_i7IAz [Occ=Once] #) ->
                 (ipv1_i7IAz
                  `cast` (GHC.Types.N:IO[0] <()>_R
                          :: (IO () :: *)
                             ~R# (State# RealWorld -> (# State# RealWorld, () #) :: *)))
                   ipv_i7IAy
                 }
                 }}]
Control.Concurrent.$fstableZC0ZCbaseZCControlziConcurrentZCforkOSzuentry1
  = \ (stableAction_adVPV :: StablePtr (IO ()))
      (s_i7IAv :: State# RealWorld) ->
      case stableAction_adVPV of { GHC.Stable.StablePtr sp_i9Dsc ->
      case deRefStablePtr# @ (IO ()) sp_i9Dsc s_i7IAv of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      (ipv1_i7IAz
       `cast` (GHC.Types.N:IO[0] <()>_R
               :: (IO () :: *)
                  ~R# (State# RealWorld -> (# State# RealWorld, () #) :: *)))
        ipv_i7IAy
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 7, joins: 0/0}
Control.Concurrent.$fstableZC0ZCbaseZCControlziConcurrentZCforkOSzuentry
  :: StablePtr (IO ()) -> IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Control.Concurrent.$fstableZC0ZCbaseZCControlziConcurrentZCforkOSzuentry1
               `cast` (<StablePtr (IO ())>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (StablePtr (IO ())
                           -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                          ~R# (StablePtr (IO ()) -> IO () :: *))}]
Control.Concurrent.$fstableZC0ZCbaseZCControlziConcurrentZCforkOSzuentry
  = Control.Concurrent.$fstableZC0ZCbaseZCControlziConcurrentZCforkOSzuentry1
    `cast` (<StablePtr (IO ())>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (StablePtr (IO ())
                -> State# RealWorld -> (# State# RealWorld, () #) :: *)
               ~R# (StablePtr (IO ()) -> IO () :: *))


