
==================== Raw Cmm ====================
2018-03-16 16:07:34.47596748 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:07:34.477819138 UTC

[section ""data" . Control.Monad.IO.Class.$p1MonadIO_closure" {
     Control.Monad.IO.Class.$p1MonadIO_closure:
         const Control.Monad.IO.Class.$p1MonadIO_info;
 },
 Control.Monad.IO.Class.$p1MonadIO_entry() //  [R2]
         { []
         }
     {offset
       ccEWJ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccEWK; else goto ccEWL;
       ccEWK: // global
           R2 = R2;
           R1 = Control.Monad.IO.Class.$p1MonadIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccEWL: // global
           I64[Sp - 8] = block_ccEWG_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucEWP; else goto ccEWH;
       ucEWP: // global
           call _ccEWG(R1) args: 0, res: 0, upd: 0;
       ccEWH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Monad.IO.Class.$p1MonadIO_info" {
     Control.Monad.IO.Class.$p1MonadIO_info:
         const Control.Monad.IO.Class.$p1MonadIO_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _ccEWG() //  [R1]
         { []
         }
     {offset
       ccEWG: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccEWG_info" {
     block_ccEWG_info:
         const _ccEWG;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.484219217 UTC

[section ""data" . Control.Monad.IO.Class.liftIO_closure" {
     Control.Monad.IO.Class.liftIO_closure:
         const Control.Monad.IO.Class.liftIO_info;
 },
 Control.Monad.IO.Class.liftIO_entry() //  [R2]
         { []
         }
     {offset
       ccEX8: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccEX9; else goto ccEXa;
       ccEX9: // global
           R2 = R2;
           R1 = Control.Monad.IO.Class.liftIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccEXa: // global
           I64[Sp - 8] = block_ccEX5_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucEXe; else goto ccEX6;
       ucEXe: // global
           call _ccEX5(R1) args: 0, res: 0, upd: 0;
       ccEX6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Monad.IO.Class.liftIO_info" {
     Control.Monad.IO.Class.liftIO_info:
         const Control.Monad.IO.Class.liftIO_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _ccEX5() //  [R1]
         { []
         }
     {offset
       ccEX5: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccEX5_info" {
     block_ccEX5_info:
         const _ccEX5;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.489448973 UTC

[section ""data" . Control.Monad.IO.Class.$fMonadIOIO_closure" {
     Control.Monad.IO.Class.$fMonadIOIO_closure:
         const Control.Monad.IO.Class.C:MonadIO_con_info;
         const GHC.Base.$fMonadIO_closure;
         const GHC.Base.id_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.491277084 UTC

[section ""cstring" . Control.Monad.IO.Class.$trModule4_bytes" {
     Control.Monad.IO.Class.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.492997101 UTC

[section ""data" . Control.Monad.IO.Class.$trModule3_closure" {
     Control.Monad.IO.Class.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.IO.Class.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.49479686 UTC

[section ""cstring" . Control.Monad.IO.Class.$trModule2_bytes" {
     Control.Monad.IO.Class.$trModule2_bytes:
         I8[] [67,111,110,116,114,111,108,46,77,111,110,97,100,46,73,79,46,67,108,97,115,115]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.49654705 UTC

[section ""data" . Control.Monad.IO.Class.$trModule1_closure" {
     Control.Monad.IO.Class.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.IO.Class.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.498310729 UTC

[section ""data" . Control.Monad.IO.Class.$trModule_closure" {
     Control.Monad.IO.Class.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Control.Monad.IO.Class.$trModule3_closure+1;
         const Control.Monad.IO.Class.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.500066889 UTC

[section ""data" . $krep_rcEVa_closure" {
     $krep_rcEVa_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.502389851 UTC

[section ""data" . Control.Monad.IO.Class.$tcMonadIO1_closure" {
     Control.Monad.IO.Class.$tcMonadIO1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const $krep_rcEVa_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.504202916 UTC

[section ""cstring" . Control.Monad.IO.Class.$tcMonadIO3_bytes" {
     Control.Monad.IO.Class.$tcMonadIO3_bytes:
         I8[] [77,111,110,97,100,73,79]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.505950275 UTC

[section ""data" . Control.Monad.IO.Class.$tcMonadIO2_closure" {
     Control.Monad.IO.Class.$tcMonadIO2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.IO.Class.$tcMonadIO3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.507752977 UTC

[section ""data" . Control.Monad.IO.Class.$tcMonadIO_closure" {
     Control.Monad.IO.Class.$tcMonadIO_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Monad.IO.Class.$trModule_closure+1;
         const Control.Monad.IO.Class.$tcMonadIO2_closure+1;
         const Control.Monad.IO.Class.$tcMonadIO1_closure+4;
         const 6022017498382306114;
         const 7075110953231061561;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.51086846 UTC

[section ""data" . Control.Monad.IO.Class.C:MonadIO_closure" {
     Control.Monad.IO.Class.C:MonadIO_closure:
         const Control.Monad.IO.Class.C:MonadIO_info;
 },
 Control.Monad.IO.Class.C:MonadIO_entry() //  [R2, R3]
         { []
         }
     {offset
       ccEXE: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto ccEXI; else goto ccEXH;
       ccEXI: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Monad.IO.Class.C:MonadIO_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccEXH: // global
           I64[Hp - 16] = Control.Monad.IO.Class.C:MonadIO_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Monad.IO.Class.C:MonadIO_info" {
     Control.Monad.IO.Class.C:MonadIO_info:
         const Control.Monad.IO.Class.C:MonadIO_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.515265654 UTC

[section ""cstring" . icEWB_str" {
     icEWB_str:
         I8[] [98,97,115,101,58,67,111,110,116,114,111,108,46,77,111,110,97,100,46,73,79,46,67,108,97,115,115,46,67,58,77,111,110,97,100,73,79]
 },
 Control.Monad.IO.Class.C:MonadIO_con_entry() //  [R1]
         { []
         }
     {offset
       ccEXO: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Monad.IO.Class.C:MonadIO_con_info" {
     Control.Monad.IO.Class.C:MonadIO_con_info:
         const Control.Monad.IO.Class.C:MonadIO_con_entry;
         const 2;
         const 4;
         const icEWB_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.518413114 UTC

[section ""relreadonly" . ScEVX_srt" { ScEVX_srt:
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.552505857 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:07:34.554596868 UTC

[section ""data" . Control.Monad.IO.Class.$p1MonadIO_closure" {
     Control.Monad.IO.Class.$p1MonadIO_closure:
         const Control.Monad.IO.Class.$p1MonadIO_info;
 },
 Control.Monad.IO.Class.$p1MonadIO_entry() //  [R2]
         { []
         }
     {offset
       ccEYa: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccEYb; else goto ccEYc;
       ccEYb: // global
           R2 = R2;
           R1 = Control.Monad.IO.Class.$p1MonadIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccEYc: // global
           I64[Sp - 8] = block_ccEY7_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucEYg; else goto ccEY8;
       ucEYg: // global
           call _ccEY7(R1) args: 0, res: 0, upd: 0;
       ccEY8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Monad.IO.Class.$p1MonadIO_info" {
     Control.Monad.IO.Class.$p1MonadIO_info:
         const Control.Monad.IO.Class.$p1MonadIO_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _ccEY7() //  [R1]
         { []
         }
     {offset
       ccEY7: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccEY7_info" {
     block_ccEY7_info:
         const _ccEY7;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.560506814 UTC

[section ""data" . Control.Monad.IO.Class.liftIO_closure" {
     Control.Monad.IO.Class.liftIO_closure:
         const Control.Monad.IO.Class.liftIO_info;
 },
 Control.Monad.IO.Class.liftIO_entry() //  [R2]
         { []
         }
     {offset
       ccEYA: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccEYB; else goto ccEYC;
       ccEYB: // global
           R2 = R2;
           R1 = Control.Monad.IO.Class.liftIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccEYC: // global
           I64[Sp - 8] = block_ccEYx_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucEYG; else goto ccEYy;
       ucEYG: // global
           call _ccEYx(R1) args: 0, res: 0, upd: 0;
       ccEYy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Monad.IO.Class.liftIO_info" {
     Control.Monad.IO.Class.liftIO_info:
         const Control.Monad.IO.Class.liftIO_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _ccEYx() //  [R1]
         { []
         }
     {offset
       ccEYx: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccEYx_info" {
     block_ccEYx_info:
         const _ccEYx;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.566300716 UTC

[section ""data" . Control.Monad.IO.Class.$fMonadIOIO_closure" {
     Control.Monad.IO.Class.$fMonadIOIO_closure:
         const Control.Monad.IO.Class.C:MonadIO_con_info;
         const GHC.Base.$fMonadIO_closure;
         const GHC.Base.id_closure+1;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.568119396 UTC

[section ""cstring" . Control.Monad.IO.Class.$trModule4_bytes" {
     Control.Monad.IO.Class.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.56998853 UTC

[section ""data" . Control.Monad.IO.Class.$trModule3_closure" {
     Control.Monad.IO.Class.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.IO.Class.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.571763217 UTC

[section ""cstring" . Control.Monad.IO.Class.$trModule2_bytes" {
     Control.Monad.IO.Class.$trModule2_bytes:
         I8[] [67,111,110,116,114,111,108,46,77,111,110,97,100,46,73,79,46,67,108,97,115,115]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.573544177 UTC

[section ""data" . Control.Monad.IO.Class.$trModule1_closure" {
     Control.Monad.IO.Class.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.IO.Class.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.575393412 UTC

[section ""data" . Control.Monad.IO.Class.$trModule_closure" {
     Control.Monad.IO.Class.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Control.Monad.IO.Class.$trModule3_closure+1;
         const Control.Monad.IO.Class.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.577213775 UTC

[section ""data" . $krep_rcEVa_closure" {
     $krep_rcEVa_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.579518398 UTC

[section ""data" . Control.Monad.IO.Class.$tcMonadIO1_closure" {
     Control.Monad.IO.Class.$tcMonadIO1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const $krep_rcEVa_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.581444436 UTC

[section ""cstring" . Control.Monad.IO.Class.$tcMonadIO3_bytes" {
     Control.Monad.IO.Class.$tcMonadIO3_bytes:
         I8[] [77,111,110,97,100,73,79]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.58327222 UTC

[section ""data" . Control.Monad.IO.Class.$tcMonadIO2_closure" {
     Control.Monad.IO.Class.$tcMonadIO2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.IO.Class.$tcMonadIO3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.585117505 UTC

[section ""data" . Control.Monad.IO.Class.$tcMonadIO_closure" {
     Control.Monad.IO.Class.$tcMonadIO_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Monad.IO.Class.$trModule_closure+1;
         const Control.Monad.IO.Class.$tcMonadIO2_closure+1;
         const Control.Monad.IO.Class.$tcMonadIO1_closure+4;
         const 6022017498382306114;
         const 7075110953231061561;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.58774128 UTC

[section ""data" . Control.Monad.IO.Class.C:MonadIO_closure" {
     Control.Monad.IO.Class.C:MonadIO_closure:
         const Control.Monad.IO.Class.C:MonadIO_info;
 },
 Control.Monad.IO.Class.C:MonadIO_entry() //  [R2, R3]
         { []
         }
     {offset
       ccEZ7: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto ccEZb; else goto ccEZa;
       ccEZb: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Monad.IO.Class.C:MonadIO_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccEZa: // global
           I64[Hp - 16] = Control.Monad.IO.Class.C:MonadIO_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Monad.IO.Class.C:MonadIO_info" {
     Control.Monad.IO.Class.C:MonadIO_info:
         const Control.Monad.IO.Class.C:MonadIO_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.591501748 UTC

[section ""cstring" . icEZj_str" {
     icEZj_str:
         I8[] [98,97,115,101,58,67,111,110,116,114,111,108,46,77,111,110,97,100,46,73,79,46,67,108,97,115,115,46,67,58,77,111,110,97,100,73,79]
 },
 Control.Monad.IO.Class.C:MonadIO_con_entry() //  [R1]
         { []
         }
     {offset
       ccEZi: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Monad.IO.Class.C:MonadIO_con_info" {
     Control.Monad.IO.Class.C:MonadIO_con_info:
         const Control.Monad.IO.Class.C:MonadIO_con_entry;
         const 2;
         const 4;
         const icEZj_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:34.595266073 UTC

[section ""relreadonly" . ScEZp_srt" { ScEZp_srt:
 }]

