
==================== Tidy Core ====================
2018-03-16 16:07:34.441017538 UTC

Result size of Tidy Core
  = {terms: 54, types: 70, coercions: 0, joins: 0/0}

-- RHS size: {terms: 6, types: 16, coercions: 0, joins: 0/0}
Control.Monad.IO.Class.$p1MonadIO
  :: forall (m :: * -> *). MonadIO m => Monad m
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),U(U,A)>,
 RULES: Built in rule for Control.Monad.IO.Class.$p1MonadIO: "Class op $p1MonadIO"]
Control.Monad.IO.Class.$p1MonadIO
  = \ (@ (m_acETO :: * -> *)) (v_B1 :: MonadIO m_acETO) ->
      case v_B1 of v_B1 { Control.Monad.IO.Class.C:MonadIO v_B2 v_B3 ->
      v_B2
      }

-- RHS size: {terms: 6, types: 16, coercions: 0, joins: 0/0}
liftIO :: forall (m :: * -> *). MonadIO m => forall a. IO a -> m a
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LS),U(A,U)>,
 RULES: Built in rule for liftIO: "Class op liftIO"]
liftIO
  = \ (@ (m_acETO :: * -> *)) (v_B1 :: MonadIO m_acETO) ->
      case v_B1 of v_B1 { Control.Monad.IO.Class.C:MonadIO v_B2 v_B3 ->
      v_B3
      }

-- RHS size: {terms: 4, types: 5, coercions: 0, joins: 0/0}
Control.Monad.IO.Class.$fMonadIOIO [InlPrag=NOUSERINLINE CONLIKE]
  :: MonadIO IO
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       Control.Monad.IO.Class.C:MonadIO TYPE: IO
                                        GHC.Base.$fMonadIO
                                        \ (@ a_acEUz) -> id @ (IO a_acEUz)]
Control.Monad.IO.Class.$fMonadIOIO
  = Control.Monad.IO.Class.C:MonadIO
      @ IO GHC.Base.$fMonadIO (\ (@ a_acEUz) -> id @ (IO a_acEUz))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Control.Monad.IO.Class.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Control.Monad.IO.Class.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Control.Monad.IO.Class.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Control.Monad.IO.Class.$trModule3
  = GHC.Types.TrNameS Control.Monad.IO.Class.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Control.Monad.IO.Class.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
Control.Monad.IO.Class.$trModule2 = "Control.Monad.IO.Class"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Control.Monad.IO.Class.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Control.Monad.IO.Class.$trModule1
  = GHC.Types.TrNameS Control.Monad.IO.Class.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Control.Monad.IO.Class.$trModule :: GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Control.Monad.IO.Class.$trModule
  = GHC.Types.Module
      Control.Monad.IO.Class.$trModule3 Control.Monad.IO.Class.$trModule1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_rcEVa :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep_rcEVa
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcConstraint (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Control.Monad.IO.Class.$tcMonadIO1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
Control.Monad.IO.Class.$tcMonadIO1
  = GHC.Types.KindRepFun GHC.Types.krep$*Arr* $krep_rcEVa

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Control.Monad.IO.Class.$tcMonadIO3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
Control.Monad.IO.Class.$tcMonadIO3 = "MonadIO"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Control.Monad.IO.Class.$tcMonadIO2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Control.Monad.IO.Class.$tcMonadIO2
  = GHC.Types.TrNameS Control.Monad.IO.Class.$tcMonadIO3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Control.Monad.IO.Class.$tcMonadIO :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Control.Monad.IO.Class.$tcMonadIO
  = GHC.Types.TyCon
      6022017498382306114##
      7075110953231061561##
      Control.Monad.IO.Class.$trModule
      Control.Monad.IO.Class.$tcMonadIO2
      0#
      Control.Monad.IO.Class.$tcMonadIO1


