
==================== Output Cmm ====================
2018-03-16 16:07:34.450199271 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:34.451131804 UTC

[section ""data" . Control.Monad.IO.Class.$p1MonadIO_closure" {
     Control.Monad.IO.Class.$p1MonadIO_closure:
         const Control.Monad.IO.Class.$p1MonadIO_info;
 },
 Control.Monad.IO.Class.$p1MonadIO_entry() //  [R2]
         { info_tbl: [(ccEVr,
                       label: Control.Monad.IO.Class.$p1MonadIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEVr: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccEVs; else goto ccEVt;
       ccEVs: // global
           R2 = R2;
           R1 = Control.Monad.IO.Class.$p1MonadIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccEVt: // global
           I64[Sp - 8] = block_ccEVo_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucEVx; else goto ccEVp;
       ucEVx: // global
           call _ccEVo(R1) args: 0, res: 0, upd: 0;
       ccEVp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccEVo() //  [R1]
         { info_tbl: [(ccEVo,
                       label: block_ccEVo_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEVo: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.452365356 UTC

[section ""data" . Control.Monad.IO.Class.liftIO_closure" {
     Control.Monad.IO.Class.liftIO_closure:
         const Control.Monad.IO.Class.liftIO_info;
 },
 Control.Monad.IO.Class.liftIO_entry() //  [R2]
         { info_tbl: [(ccEVF,
                       label: Control.Monad.IO.Class.liftIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEVF: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccEVG; else goto ccEVH;
       ccEVG: // global
           R2 = R2;
           R1 = Control.Monad.IO.Class.liftIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccEVH: // global
           I64[Sp - 8] = block_ccEVC_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucEVL; else goto ccEVD;
       ucEVL: // global
           call _ccEVC(R1) args: 0, res: 0, upd: 0;
       ccEVD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccEVC() //  [R1]
         { info_tbl: [(ccEVC,
                       label: block_ccEVC_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEVC: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.453396235 UTC

[section ""data" . Control.Monad.IO.Class.$fMonadIOIO_closure" {
     Control.Monad.IO.Class.$fMonadIOIO_closure:
         const Control.Monad.IO.Class.C:MonadIO_con_info;
         const GHC.Base.$fMonadIO_closure;
         const GHC.Base.id_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.453984214 UTC

[section ""cstring" . Control.Monad.IO.Class.$trModule4_bytes" {
     Control.Monad.IO.Class.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.45459249 UTC

[section ""data" . Control.Monad.IO.Class.$trModule3_closure" {
     Control.Monad.IO.Class.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.IO.Class.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.455187237 UTC

[section ""cstring" . Control.Monad.IO.Class.$trModule2_bytes" {
     Control.Monad.IO.Class.$trModule2_bytes:
         I8[] [67,111,110,116,114,111,108,46,77,111,110,97,100,46,73,79,46,67,108,97,115,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.455776783 UTC

[section ""data" . Control.Monad.IO.Class.$trModule1_closure" {
     Control.Monad.IO.Class.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.IO.Class.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.456385927 UTC

[section ""data" . Control.Monad.IO.Class.$trModule_closure" {
     Control.Monad.IO.Class.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Control.Monad.IO.Class.$trModule3_closure+1;
         const Control.Monad.IO.Class.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.456963891 UTC

[section ""data" . $krep_rcEVa_closure" {
     $krep_rcEVa_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.457669311 UTC

[section ""data" . Control.Monad.IO.Class.$tcMonadIO1_closure" {
     Control.Monad.IO.Class.$tcMonadIO1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const $krep_rcEVa_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.458306251 UTC

[section ""cstring" . Control.Monad.IO.Class.$tcMonadIO3_bytes" {
     Control.Monad.IO.Class.$tcMonadIO3_bytes:
         I8[] [77,111,110,97,100,73,79]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.458924777 UTC

[section ""data" . Control.Monad.IO.Class.$tcMonadIO2_closure" {
     Control.Monad.IO.Class.$tcMonadIO2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.IO.Class.$tcMonadIO3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.459557633 UTC

[section ""data" . Control.Monad.IO.Class.$tcMonadIO_closure" {
     Control.Monad.IO.Class.$tcMonadIO_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Monad.IO.Class.$trModule_closure+1;
         const Control.Monad.IO.Class.$tcMonadIO2_closure+1;
         const Control.Monad.IO.Class.$tcMonadIO1_closure+4;
         const 6022017498382306114;
         const 7075110953231061561;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.460463536 UTC

[section ""data" . Control.Monad.IO.Class.C:MonadIO_closure" {
     Control.Monad.IO.Class.C:MonadIO_closure:
         const Control.Monad.IO.Class.C:MonadIO_info;
 },
 Control.Monad.IO.Class.C:MonadIO_entry() //  [R2, R3]
         { info_tbl: [(ccEVR,
                       label: Control.Monad.IO.Class.C:MonadIO_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEVR: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto ccEVV; else goto ccEVU;
       ccEVV: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Monad.IO.Class.C:MonadIO_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccEVU: // global
           I64[Hp - 16] = Control.Monad.IO.Class.C:MonadIO_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.461410611 UTC

[Control.Monad.IO.Class.C:MonadIO_con_entry() //  [R1]
         { info_tbl: [(ccEVW,
                       label: Control.Monad.IO.Class.C:MonadIO_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,67,111,110,116,114,111,108,46,77,111,110,97,100,46,73,79,46,67,108,97,115,115,46,67,58,77,111,110,97,100,73,79]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEVW: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.462172244 UTC

[section ""relreadonly" . ScEVX_srt" { ScEVX_srt:
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.462718652 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:34.463515759 UTC

[section ""data" . Control.Monad.IO.Class.$p1MonadIO_closure" {
     Control.Monad.IO.Class.$p1MonadIO_closure:
         const Control.Monad.IO.Class.$p1MonadIO_info;
 },
 Control.Monad.IO.Class.$p1MonadIO_entry() //  [R2]
         { info_tbl: [(ccEW5,
                       label: Control.Monad.IO.Class.$p1MonadIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEW5: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccEW6; else goto ccEW7;
       ccEW6: // global
           R2 = R2;
           R1 = Control.Monad.IO.Class.$p1MonadIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccEW7: // global
           I64[Sp - 8] = block_ccEW2_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucEWb; else goto ccEW3;
       ucEWb: // global
           call _ccEW2(R1) args: 0, res: 0, upd: 0;
       ccEW3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccEW2() //  [R1]
         { info_tbl: [(ccEW2,
                       label: block_ccEW2_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEW2: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.464715231 UTC

[section ""data" . Control.Monad.IO.Class.liftIO_closure" {
     Control.Monad.IO.Class.liftIO_closure:
         const Control.Monad.IO.Class.liftIO_info;
 },
 Control.Monad.IO.Class.liftIO_entry() //  [R2]
         { info_tbl: [(ccEWj,
                       label: Control.Monad.IO.Class.liftIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEWj: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccEWk; else goto ccEWl;
       ccEWk: // global
           R2 = R2;
           R1 = Control.Monad.IO.Class.liftIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccEWl: // global
           I64[Sp - 8] = block_ccEWg_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucEWp; else goto ccEWh;
       ucEWp: // global
           call _ccEWg(R1) args: 0, res: 0, upd: 0;
       ccEWh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccEWg() //  [R1]
         { info_tbl: [(ccEWg,
                       label: block_ccEWg_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEWg: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.465784944 UTC

[section ""data" . Control.Monad.IO.Class.$fMonadIOIO_closure" {
     Control.Monad.IO.Class.$fMonadIOIO_closure:
         const Control.Monad.IO.Class.C:MonadIO_con_info;
         const GHC.Base.$fMonadIO_closure;
         const GHC.Base.id_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.466399401 UTC

[section ""cstring" . Control.Monad.IO.Class.$trModule4_bytes" {
     Control.Monad.IO.Class.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.466971056 UTC

[section ""data" . Control.Monad.IO.Class.$trModule3_closure" {
     Control.Monad.IO.Class.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.IO.Class.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.467517626 UTC

[section ""cstring" . Control.Monad.IO.Class.$trModule2_bytes" {
     Control.Monad.IO.Class.$trModule2_bytes:
         I8[] [67,111,110,116,114,111,108,46,77,111,110,97,100,46,73,79,46,67,108,97,115,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.468103665 UTC

[section ""data" . Control.Monad.IO.Class.$trModule1_closure" {
     Control.Monad.IO.Class.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.IO.Class.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.468688523 UTC

[section ""data" . Control.Monad.IO.Class.$trModule_closure" {
     Control.Monad.IO.Class.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Control.Monad.IO.Class.$trModule3_closure+1;
         const Control.Monad.IO.Class.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.469665791 UTC

[section ""data" . $krep_rcEVa_closure" {
     $krep_rcEVa_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.470301692 UTC

[section ""data" . Control.Monad.IO.Class.$tcMonadIO1_closure" {
     Control.Monad.IO.Class.$tcMonadIO1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const $krep_rcEVa_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.470875841 UTC

[section ""cstring" . Control.Monad.IO.Class.$tcMonadIO3_bytes" {
     Control.Monad.IO.Class.$tcMonadIO3_bytes:
         I8[] [77,111,110,97,100,73,79]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.471441354 UTC

[section ""data" . Control.Monad.IO.Class.$tcMonadIO2_closure" {
     Control.Monad.IO.Class.$tcMonadIO2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.IO.Class.$tcMonadIO3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.472057759 UTC

[section ""data" . Control.Monad.IO.Class.$tcMonadIO_closure" {
     Control.Monad.IO.Class.$tcMonadIO_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Monad.IO.Class.$trModule_closure+1;
         const Control.Monad.IO.Class.$tcMonadIO2_closure+1;
         const Control.Monad.IO.Class.$tcMonadIO1_closure+4;
         const 6022017498382306114;
         const 7075110953231061561;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.472932796 UTC

[section ""data" . Control.Monad.IO.Class.C:MonadIO_closure" {
     Control.Monad.IO.Class.C:MonadIO_closure:
         const Control.Monad.IO.Class.C:MonadIO_info;
 },
 Control.Monad.IO.Class.C:MonadIO_entry() //  [R2, R3]
         { info_tbl: [(ccEWv,
                       label: Control.Monad.IO.Class.C:MonadIO_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEWv: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto ccEWz; else goto ccEWy;
       ccEWz: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Monad.IO.Class.C:MonadIO_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccEWy: // global
           I64[Hp - 16] = Control.Monad.IO.Class.C:MonadIO_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.473853232 UTC

[Control.Monad.IO.Class.C:MonadIO_con_entry() //  [R1]
         { info_tbl: [(ccEWA,
                       label: Control.Monad.IO.Class.C:MonadIO_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,67,111,110,116,114,111,108,46,77,111,110,97,100,46,73,79,46,67,108,97,115,115,46,67,58,77,111,110,97,100,73,79]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEWA: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.474555844 UTC

[section ""relreadonly" . ScEVX_srt" { ScEVX_srt:
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.475379576 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:34.476788828 UTC

[section ""data" . Control.Monad.IO.Class.$p1MonadIO_closure" {
     Control.Monad.IO.Class.$p1MonadIO_closure:
         const Control.Monad.IO.Class.$p1MonadIO_info;
 },
 Control.Monad.IO.Class.$p1MonadIO_entry() //  [R2]
         { info_tbl: [(ccEWJ,
                       label: Control.Monad.IO.Class.$p1MonadIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEWJ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccEWK; else goto ccEWL;
       ccEWK: // global
           R2 = R2;
           R1 = Control.Monad.IO.Class.$p1MonadIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccEWL: // global
           I64[Sp - 8] = block_ccEWG_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucEWP; else goto ccEWH;
       ucEWP: // global
           call _ccEWG(R1) args: 0, res: 0, upd: 0;
       ccEWH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccEWG() //  [R1]
         { info_tbl: [(ccEWG,
                       label: block_ccEWG_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEWG: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.483263757 UTC

[section ""data" . Control.Monad.IO.Class.liftIO_closure" {
     Control.Monad.IO.Class.liftIO_closure:
         const Control.Monad.IO.Class.liftIO_info;
 },
 Control.Monad.IO.Class.liftIO_entry() //  [R2]
         { info_tbl: [(ccEX8,
                       label: Control.Monad.IO.Class.liftIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEX8: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccEX9; else goto ccEXa;
       ccEX9: // global
           R2 = R2;
           R1 = Control.Monad.IO.Class.liftIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccEXa: // global
           I64[Sp - 8] = block_ccEX5_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucEXe; else goto ccEX6;
       ucEXe: // global
           call _ccEX5(R1) args: 0, res: 0, upd: 0;
       ccEX6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccEX5() //  [R1]
         { info_tbl: [(ccEX5,
                       label: block_ccEX5_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEX5: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.488847281 UTC

[section ""data" . Control.Monad.IO.Class.$fMonadIOIO_closure" {
     Control.Monad.IO.Class.$fMonadIOIO_closure:
         const Control.Monad.IO.Class.C:MonadIO_con_info;
         const GHC.Base.$fMonadIO_closure;
         const GHC.Base.id_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.490721274 UTC

[section ""cstring" . Control.Monad.IO.Class.$trModule4_bytes" {
     Control.Monad.IO.Class.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.492411674 UTC

[section ""data" . Control.Monad.IO.Class.$trModule3_closure" {
     Control.Monad.IO.Class.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.IO.Class.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.494224103 UTC

[section ""cstring" . Control.Monad.IO.Class.$trModule2_bytes" {
     Control.Monad.IO.Class.$trModule2_bytes:
         I8[] [67,111,110,116,114,111,108,46,77,111,110,97,100,46,73,79,46,67,108,97,115,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.49598662 UTC

[section ""data" . Control.Monad.IO.Class.$trModule1_closure" {
     Control.Monad.IO.Class.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.IO.Class.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.497717223 UTC

[section ""data" . Control.Monad.IO.Class.$trModule_closure" {
     Control.Monad.IO.Class.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Control.Monad.IO.Class.$trModule3_closure+1;
         const Control.Monad.IO.Class.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.499491387 UTC

[section ""data" . $krep_rcEVa_closure" {
     $krep_rcEVa_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.501767833 UTC

[section ""data" . Control.Monad.IO.Class.$tcMonadIO1_closure" {
     Control.Monad.IO.Class.$tcMonadIO1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const $krep_rcEVa_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.503614561 UTC

[section ""cstring" . Control.Monad.IO.Class.$tcMonadIO3_bytes" {
     Control.Monad.IO.Class.$tcMonadIO3_bytes:
         I8[] [77,111,110,97,100,73,79]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.505352742 UTC

[section ""data" . Control.Monad.IO.Class.$tcMonadIO2_closure" {
     Control.Monad.IO.Class.$tcMonadIO2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.IO.Class.$tcMonadIO3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.507119285 UTC

[section ""data" . Control.Monad.IO.Class.$tcMonadIO_closure" {
     Control.Monad.IO.Class.$tcMonadIO_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Monad.IO.Class.$trModule_closure+1;
         const Control.Monad.IO.Class.$tcMonadIO2_closure+1;
         const Control.Monad.IO.Class.$tcMonadIO1_closure+4;
         const 6022017498382306114;
         const 7075110953231061561;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.509969396 UTC

[section ""data" . Control.Monad.IO.Class.C:MonadIO_closure" {
     Control.Monad.IO.Class.C:MonadIO_closure:
         const Control.Monad.IO.Class.C:MonadIO_info;
 },
 Control.Monad.IO.Class.C:MonadIO_entry() //  [R2, R3]
         { info_tbl: [(ccEXE,
                       label: Control.Monad.IO.Class.C:MonadIO_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEXE: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto ccEXI; else goto ccEXH;
       ccEXI: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Monad.IO.Class.C:MonadIO_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccEXH: // global
           I64[Hp - 16] = Control.Monad.IO.Class.C:MonadIO_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.514550143 UTC

[Control.Monad.IO.Class.C:MonadIO_con_entry() //  [R1]
         { info_tbl: [(ccEXO,
                       label: Control.Monad.IO.Class.C:MonadIO_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,67,111,110,116,114,111,108,46,77,111,110,97,100,46,73,79,46,67,108,97,115,115,46,67,58,77,111,110,97,100,73,79]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEXO: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.517869101 UTC

[section ""relreadonly" . ScEVX_srt" { ScEVX_srt:
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.551944199 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:34.553496116 UTC

[section ""data" . Control.Monad.IO.Class.$p1MonadIO_closure" {
     Control.Monad.IO.Class.$p1MonadIO_closure:
         const Control.Monad.IO.Class.$p1MonadIO_info;
 },
 Control.Monad.IO.Class.$p1MonadIO_entry() //  [R2]
         { info_tbl: [(ccEYa,
                       label: Control.Monad.IO.Class.$p1MonadIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEYa: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccEYb; else goto ccEYc;
       ccEYb: // global
           R2 = R2;
           R1 = Control.Monad.IO.Class.$p1MonadIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccEYc: // global
           I64[Sp - 8] = block_ccEY7_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucEYg; else goto ccEY8;
       ucEYg: // global
           call _ccEY7(R1) args: 0, res: 0, upd: 0;
       ccEY8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccEY7() //  [R1]
         { info_tbl: [(ccEY7,
                       label: block_ccEY7_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEY7: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.55950036 UTC

[section ""data" . Control.Monad.IO.Class.liftIO_closure" {
     Control.Monad.IO.Class.liftIO_closure:
         const Control.Monad.IO.Class.liftIO_info;
 },
 Control.Monad.IO.Class.liftIO_entry() //  [R2]
         { info_tbl: [(ccEYA,
                       label: Control.Monad.IO.Class.liftIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEYA: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccEYB; else goto ccEYC;
       ccEYB: // global
           R2 = R2;
           R1 = Control.Monad.IO.Class.liftIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccEYC: // global
           I64[Sp - 8] = block_ccEYx_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucEYG; else goto ccEYy;
       ucEYG: // global
           call _ccEYx(R1) args: 0, res: 0, upd: 0;
       ccEYy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccEYx() //  [R1]
         { info_tbl: [(ccEYx,
                       label: block_ccEYx_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEYx: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.56506983 UTC

[section ""data" . Control.Monad.IO.Class.$fMonadIOIO_closure" {
     Control.Monad.IO.Class.$fMonadIOIO_closure:
         const Control.Monad.IO.Class.C:MonadIO_con_info;
         const GHC.Base.$fMonadIO_closure;
         const GHC.Base.id_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.56751762 UTC

[section ""cstring" . Control.Monad.IO.Class.$trModule4_bytes" {
     Control.Monad.IO.Class.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.56939269 UTC

[section ""data" . Control.Monad.IO.Class.$trModule3_closure" {
     Control.Monad.IO.Class.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.IO.Class.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.571192793 UTC

[section ""cstring" . Control.Monad.IO.Class.$trModule2_bytes" {
     Control.Monad.IO.Class.$trModule2_bytes:
         I8[] [67,111,110,116,114,111,108,46,77,111,110,97,100,46,73,79,46,67,108,97,115,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.57294892 UTC

[section ""data" . Control.Monad.IO.Class.$trModule1_closure" {
     Control.Monad.IO.Class.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.IO.Class.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.574806535 UTC

[section ""data" . Control.Monad.IO.Class.$trModule_closure" {
     Control.Monad.IO.Class.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Control.Monad.IO.Class.$trModule3_closure+1;
         const Control.Monad.IO.Class.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.576623198 UTC

[section ""data" . $krep_rcEVa_closure" {
     $krep_rcEVa_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.578940821 UTC

[section ""data" . Control.Monad.IO.Class.$tcMonadIO1_closure" {
     Control.Monad.IO.Class.$tcMonadIO1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const $krep_rcEVa_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.580817672 UTC

[section ""cstring" . Control.Monad.IO.Class.$tcMonadIO3_bytes" {
     Control.Monad.IO.Class.$tcMonadIO3_bytes:
         I8[] [77,111,110,97,100,73,79]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.582626466 UTC

[section ""data" . Control.Monad.IO.Class.$tcMonadIO2_closure" {
     Control.Monad.IO.Class.$tcMonadIO2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.IO.Class.$tcMonadIO3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.58446393 UTC

[section ""data" . Control.Monad.IO.Class.$tcMonadIO_closure" {
     Control.Monad.IO.Class.$tcMonadIO_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Monad.IO.Class.$trModule_closure+1;
         const Control.Monad.IO.Class.$tcMonadIO2_closure+1;
         const Control.Monad.IO.Class.$tcMonadIO1_closure+4;
         const 6022017498382306114;
         const 7075110953231061561;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.586797833 UTC

[section ""data" . Control.Monad.IO.Class.C:MonadIO_closure" {
     Control.Monad.IO.Class.C:MonadIO_closure:
         const Control.Monad.IO.Class.C:MonadIO_info;
 },
 Control.Monad.IO.Class.C:MonadIO_entry() //  [R2, R3]
         { info_tbl: [(ccEZ7,
                       label: Control.Monad.IO.Class.C:MonadIO_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEZ7: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto ccEZb; else goto ccEZa;
       ccEZb: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Monad.IO.Class.C:MonadIO_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       ccEZa: // global
           I64[Hp - 16] = Control.Monad.IO.Class.C:MonadIO_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.590769282 UTC

[Control.Monad.IO.Class.C:MonadIO_con_entry() //  [R1]
         { info_tbl: [(ccEZi,
                       label: Control.Monad.IO.Class.C:MonadIO_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,67,111,110,116,114,111,108,46,77,111,110,97,100,46,73,79,46,67,108,97,115,115,46,67,58,77,111,110,97,100,73,79]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccEZi: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:34.594129216 UTC

[section ""relreadonly" . ScEZp_srt" { ScEZp_srt:
 }]

