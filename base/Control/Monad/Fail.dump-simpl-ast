CgGuts
  { cg_module =
      Module { moduleUnitId = base , moduleName = Control.Monad.Fail }
  , cg_tycons = [ TyCon "base_ControlziMonadziFail_MonadFail" ]
  , cg_binds =
      [ NonRec
          (Var "base_ControlziMonadziFail_zdp1MonadFail")
          (Lam
             (Var "a1IXp")
             (Lam
                (Var "B1")
                (Case
                   (Var (Var "B1"))
                   (Var "B1")
                   (TyConApp (TyCon "base_GHCziBase_Monad") [ TyVarTy (Var "a1IXp") ])
                   [ ( DataAlt (DataCon "base_ControlziMonadziFail_CZCMonadFail")
                     , [ Var "B2" , Var "B3" ]
                     , Var (Var "B2")
                     )
                   ])))
      , NonRec
          (Var "base_ControlziMonadziFail_fail")
          (Lam
             (Var "a1IXp")
             (Lam
                (Var "B1")
                (Case
                   (Var (Var "B1"))
                   (Var "B1")
                   (ForAllTy
                      (TvBndr (Var "a1IXq") Specified)
                      (FunTy
                         (TyConApp (TyCon "base_GHCziBase_String") [])
                         (AppTy (TyVarTy (Var "a1IXp")) (TyVarTy (Var "a1IXq")))))
                   [ ( DataAlt (DataCon "base_ControlziMonadziFail_CZCMonadFail")
                     , [ Var "B2" , Var "B3" ]
                     , Var (Var "B3")
                     )
                   ])))
      , NonRec
          (Var "base_ControlziMonadziFail_zdfMonadFailMaybezuzdcfail")
          (Lam
             (Var "a1IYW")
             (Lam
                (Var "d1IZa")
                (App
                   (Var (Var "base_GHCziBase_Nothing"))
                   (Type (TyVarTy (Var "a1IYW"))))))
      , NonRec
          (Var "base_ControlziMonadziFail_zdfMonadFailMaybe")
          (App
             (App
                (App
                   (Var (Var "base_ControlziMonadziFail_CZCMonadFail"))
                   (Type (TyConApp (TyCon "base_GHCziBase_Maybe") [])))
                (Var (Var "base_GHCziBase_zdfMonadMaybe")))
             (Var (Var "base_ControlziMonadziFail_zdfMonadFailMaybezuzdcfail")))
      , NonRec
          (Var "base_ControlziMonadziFail_zdfMonadFailZMZNzuzdcfail")
          (Lam
             (Var "a1IYL")
             (Lam
                (Var "d1IZ7")
                (App
                   (Var (Var "ghczmprim_GHCziTypes_ZMZN"))
                   (Type (TyVarTy (Var "a1IYL"))))))
      , NonRec
          (Var "base_ControlziMonadziFail_zdfMonadFailZMZN")
          (App
             (App
                (App
                   (Var (Var "base_ControlziMonadziFail_CZCMonadFail"))
                   (Type (TyConApp (TyCon "ghczmprim_GHCziTypes_ZMZN") [])))
                (Var (Var "base_GHCziBase_zdfMonadZMZN")))
             (Var (Var "base_ControlziMonadziFail_zdfMonadFailZMZNzuzdcfail")))
      , NonRec
          (Var "base_ControlziMonadziFail_zdfMonadFailIO")
          (App
             (App
                (App
                   (Var (Var "base_ControlziMonadziFail_CZCMonadFail"))
                   (Type (TyConApp (TyCon "ghczmprim_GHCziTypes_IO") [])))
                (Var (Var "base_GHCziBase_zdfMonadIO")))
             (Var (Var "base_GHCziIO_failIO")))
      , NonRec
          (Var "base_ControlziMonadziFail_zdtrModule4")
          (Lit (MachStr "base"))
      , NonRec
          (Var "base_ControlziMonadziFail_zdtrModule3")
          (App
             (Var (Var "ghczmprim_GHCziTypes_TrNameS"))
             (Var (Var "base_ControlziMonadziFail_zdtrModule4")))
      , NonRec
          (Var "base_ControlziMonadziFail_zdtrModule2")
          (Lit (MachStr "Control.Monad.Fail"))
      , NonRec
          (Var "base_ControlziMonadziFail_zdtrModule1")
          (App
             (Var (Var "ghczmprim_GHCziTypes_TrNameS"))
             (Var (Var "base_ControlziMonadziFail_zdtrModule2")))
      , NonRec
          (Var "base_ControlziMonadziFail_zdtrModule")
          (App
             (App
                (Var (Var "ghczmprim_GHCziTypes_Module"))
                (Var (Var "base_ControlziMonadziFail_zdtrModule3")))
             (Var (Var "base_ControlziMonadziFail_zdtrModule1")))
      , NonRec
          (Var "r1J03")
          (App
             (App
                (Var (Var "ghczmprim_GHCziTypes_KindRepTyConApp"))
                (Var (Var "ghczmprim_GHCziTypes_zdtcConstraint")))
             (App
                (Var (Var "ghczmprim_GHCziTypes_ZMZN"))
                (Type (TyConApp (TyCon "ghczmprim_GHCziTypes_KindRep") []))))
      , NonRec
          (Var "base_ControlziMonadziFail_zdtcMonadFail1")
          (App
             (App
                (Var (Var "ghczmprim_GHCziTypes_KindRepFun"))
                (Var (Var "ghczmprim_GHCziTypes_krepzdztArrzt")))
             (Var (Var "r1J03")))
      , NonRec
          (Var "base_ControlziMonadziFail_zdtcMonadFail3")
          (Lit (MachStr "MonadFail"))
      , NonRec
          (Var "base_ControlziMonadziFail_zdtcMonadFail2")
          (App
             (Var (Var "ghczmprim_GHCziTypes_TrNameS"))
             (Var (Var "base_ControlziMonadziFail_zdtcMonadFail3")))
      , NonRec
          (Var "base_ControlziMonadziFail_zdtcMonadFail")
          (App
             (App
                (App
                   (App
                      (App
                         (App
                            (Var (Var "ghczmprim_GHCziTypes_TyCon"))
                            (Lit (MachWord 13075553528933503976)))
                         (Lit (MachWord 10446785369700436050)))
                      (Var (Var "base_ControlziMonadziFail_zdtrModule")))
                   (Var (Var "base_ControlziMonadziFail_zdtcMonadFail2")))
                (Lit (MachInt 0)))
             (Var (Var "base_ControlziMonadziFail_zdtcMonadFail1")))
      ]
  , cg_foreign = ForeignStubs (SDoc "") (SDoc "")
  , cg_foreign_files = []
  , cg_dep_pkgs =
      [ InstalledUnitId { installedUnitIdFS = "ghc-prim" }
      , InstalledUnitId { installedUnitIdFS = "integer-simple" }
      ]
  , cg_hpc_info = NoHpcInfo { hpcUsed = False }
  , cg_modBreaks = Nothing
  , cg_spt_entries = []
  }