
==================== Output Cmm ====================
2018-03-16 15:56:30.162728564 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:56:30.163791343 UTC

[section ""data" . Control.Monad.Fail.$p1MonadFail_closure" {
     Control.Monad.Fail.$p1MonadFail_closure:
         const Control.Monad.Fail.$p1MonadFail_info;
 },
 Control.Monad.Fail.$p1MonadFail_entry() //  [R2]
         { info_tbl: [(c1J0m,
                       label: Control.Monad.Fail.$p1MonadFail_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J0m: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c1J0n; else goto c1J0o;
       c1J0n: // global
           R2 = R2;
           R1 = Control.Monad.Fail.$p1MonadFail_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1J0o: // global
           I64[Sp - 8] = block_c1J0j_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u1J0s; else goto c1J0k;
       u1J0s: // global
           call _c1J0j(R1) args: 0, res: 0, upd: 0;
       c1J0k: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c1J0j() //  [R1]
         { info_tbl: [(c1J0j,
                       label: block_c1J0j_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J0j: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.165131659 UTC

[section ""data" . Control.Monad.Fail.fail_closure" {
     Control.Monad.Fail.fail_closure:
         const Control.Monad.Fail.fail_info;
 },
 Control.Monad.Fail.fail_entry() //  [R2]
         { info_tbl: [(c1J0A,
                       label: Control.Monad.Fail.fail_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J0A: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c1J0B; else goto c1J0C;
       c1J0B: // global
           R2 = R2;
           R1 = Control.Monad.Fail.fail_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1J0C: // global
           I64[Sp - 8] = block_c1J0x_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u1J0G; else goto c1J0y;
       u1J0G: // global
           call _c1J0x(R1) args: 0, res: 0, upd: 0;
       c1J0y: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c1J0x() //  [R1]
         { info_tbl: [(c1J0x,
                       label: block_c1J0x_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J0x: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.166260167 UTC

[section ""data" . Control.Monad.Fail.$fMonadFailMaybe_$cfail_closure" {
     Control.Monad.Fail.$fMonadFailMaybe_$cfail_closure:
         const Control.Monad.Fail.$fMonadFailMaybe_$cfail_info;
 },
 Control.Monad.Fail.$fMonadFailMaybe_$cfail_entry() //  []
         { info_tbl: [(c1J0L,
                       label: Control.Monad.Fail.$fMonadFailMaybe_$cfail_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J0L: // global
           R1 = GHC.Base.Nothing_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.167027747 UTC

[section ""data" . Control.Monad.Fail.$fMonadFailMaybe_closure" {
     Control.Monad.Fail.$fMonadFailMaybe_closure:
         const Control.Monad.Fail.C:MonadFail_con_info;
         const GHC.Base.$fMonadMaybe_closure;
         const Control.Monad.Fail.$fMonadFailMaybe_$cfail_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.167747629 UTC

[section ""data" . Control.Monad.Fail.$fMonadFail[]_$cfail_closure" {
     Control.Monad.Fail.$fMonadFail[]_$cfail_closure:
         const Control.Monad.Fail.$fMonadFail[]_$cfail_info;
 },
 Control.Monad.Fail.$fMonadFail[]_$cfail_entry() //  []
         { info_tbl: [(c1J0S,
                       label: Control.Monad.Fail.$fMonadFail[]_$cfail_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J0S: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.168514936 UTC

[section ""data" . Control.Monad.Fail.$fMonadFail[]_closure" {
     Control.Monad.Fail.$fMonadFail[]_closure:
         const Control.Monad.Fail.C:MonadFail_con_info;
         const GHC.Base.$fMonad[]_closure;
         const Control.Monad.Fail.$fMonadFail[]_$cfail_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.169141726 UTC

[section ""data" . Control.Monad.Fail.$fMonadFailIO_closure" {
     Control.Monad.Fail.$fMonadFailIO_closure:
         const Control.Monad.Fail.C:MonadFail_con_info;
         const GHC.Base.$fMonadIO_closure;
         const GHC.IO.failIO_closure;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.169861354 UTC

[section ""cstring" . Control.Monad.Fail.$trModule4_bytes" {
     Control.Monad.Fail.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.170464401 UTC

[section ""data" . Control.Monad.Fail.$trModule3_closure" {
     Control.Monad.Fail.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.Fail.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.171082456 UTC

[section ""cstring" . Control.Monad.Fail.$trModule2_bytes" {
     Control.Monad.Fail.$trModule2_bytes:
         I8[] [67,111,110,116,114,111,108,46,77,111,110,97,100,46,70,97,105,108]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.17169232 UTC

[section ""data" . Control.Monad.Fail.$trModule1_closure" {
     Control.Monad.Fail.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.Fail.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.172250201 UTC

[section ""data" . Control.Monad.Fail.$trModule_closure" {
     Control.Monad.Fail.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Control.Monad.Fail.$trModule3_closure+1;
         const Control.Monad.Fail.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.172916138 UTC

[section ""data" . $krep_r1J03_closure" {
     $krep_r1J03_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.173591733 UTC

[section ""data" . Control.Monad.Fail.$tcMonadFail1_closure" {
     Control.Monad.Fail.$tcMonadFail1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const $krep_r1J03_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.17421821 UTC

[section ""cstring" . Control.Monad.Fail.$tcMonadFail3_bytes" {
     Control.Monad.Fail.$tcMonadFail3_bytes:
         I8[] [77,111,110,97,100,70,97,105,108]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.174795891 UTC

[section ""data" . Control.Monad.Fail.$tcMonadFail2_closure" {
     Control.Monad.Fail.$tcMonadFail2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.Fail.$tcMonadFail3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.175404655 UTC

[section ""data" . Control.Monad.Fail.$tcMonadFail_closure" {
     Control.Monad.Fail.$tcMonadFail_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Monad.Fail.$trModule_closure+1;
         const Control.Monad.Fail.$tcMonadFail2_closure+1;
         const Control.Monad.Fail.$tcMonadFail1_closure+4;
         const 13075553528933503976;
         const 10446785369700436050;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.176445478 UTC

[section ""data" . Control.Monad.Fail.C:MonadFail_closure" {
     Control.Monad.Fail.C:MonadFail_closure:
         const Control.Monad.Fail.C:MonadFail_info;
 },
 Control.Monad.Fail.C:MonadFail_entry() //  [R2, R3]
         { info_tbl: [(c1J10,
                       label: Control.Monad.Fail.C:MonadFail_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J10: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c1J14; else goto c1J13;
       c1J14: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Monad.Fail.C:MonadFail_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c1J13: // global
           I64[Hp - 16] = Control.Monad.Fail.C:MonadFail_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.177461742 UTC

[Control.Monad.Fail.C:MonadFail_con_entry() //  [R1]
         { info_tbl: [(c1J15,
                       label: Control.Monad.Fail.C:MonadFail_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,67,111,110,116,114,111,108,46,77,111,110,97,100,46,70,97,105,108,46,67,58,77,111,110,97,100,70,97,105,108]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J15: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.178246656 UTC

[section ""relreadonly" . S1J16_srt" { S1J16_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.178785473 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:56:30.179594623 UTC

[section ""data" . Control.Monad.Fail.$p1MonadFail_closure" {
     Control.Monad.Fail.$p1MonadFail_closure:
         const Control.Monad.Fail.$p1MonadFail_info;
 },
 Control.Monad.Fail.$p1MonadFail_entry() //  [R2]
         { info_tbl: [(c1J1e,
                       label: Control.Monad.Fail.$p1MonadFail_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J1e: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c1J1f; else goto c1J1g;
       c1J1f: // global
           R2 = R2;
           R1 = Control.Monad.Fail.$p1MonadFail_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1J1g: // global
           I64[Sp - 8] = block_c1J1b_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u1J1k; else goto c1J1c;
       u1J1k: // global
           call _c1J1b(R1) args: 0, res: 0, upd: 0;
       c1J1c: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c1J1b() //  [R1]
         { info_tbl: [(c1J1b,
                       label: block_c1J1b_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J1b: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.181094925 UTC

[section ""data" . Control.Monad.Fail.fail_closure" {
     Control.Monad.Fail.fail_closure:
         const Control.Monad.Fail.fail_info;
 },
 Control.Monad.Fail.fail_entry() //  [R2]
         { info_tbl: [(c1J1s,
                       label: Control.Monad.Fail.fail_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J1s: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c1J1t; else goto c1J1u;
       c1J1t: // global
           R2 = R2;
           R1 = Control.Monad.Fail.fail_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1J1u: // global
           I64[Sp - 8] = block_c1J1p_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u1J1y; else goto c1J1q;
       u1J1y: // global
           call _c1J1p(R1) args: 0, res: 0, upd: 0;
       c1J1q: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c1J1p() //  [R1]
         { info_tbl: [(c1J1p,
                       label: block_c1J1p_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J1p: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.182248469 UTC

[section ""data" . Control.Monad.Fail.$fMonadFailMaybe_$cfail_closure" {
     Control.Monad.Fail.$fMonadFailMaybe_$cfail_closure:
         const Control.Monad.Fail.$fMonadFailMaybe_$cfail_info;
 },
 Control.Monad.Fail.$fMonadFailMaybe_$cfail_entry() //  []
         { info_tbl: [(c1J1D,
                       label: Control.Monad.Fail.$fMonadFailMaybe_$cfail_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J1D: // global
           R1 = GHC.Base.Nothing_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.183051712 UTC

[section ""data" . Control.Monad.Fail.$fMonadFailMaybe_closure" {
     Control.Monad.Fail.$fMonadFailMaybe_closure:
         const Control.Monad.Fail.C:MonadFail_con_info;
         const GHC.Base.$fMonadMaybe_closure;
         const Control.Monad.Fail.$fMonadFailMaybe_$cfail_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.183909809 UTC

[section ""data" . Control.Monad.Fail.$fMonadFail[]_$cfail_closure" {
     Control.Monad.Fail.$fMonadFail[]_$cfail_closure:
         const Control.Monad.Fail.$fMonadFail[]_$cfail_info;
 },
 Control.Monad.Fail.$fMonadFail[]_$cfail_entry() //  []
         { info_tbl: [(c1J1K,
                       label: Control.Monad.Fail.$fMonadFail[]_$cfail_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J1K: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.184628731 UTC

[section ""data" . Control.Monad.Fail.$fMonadFail[]_closure" {
     Control.Monad.Fail.$fMonadFail[]_closure:
         const Control.Monad.Fail.C:MonadFail_con_info;
         const GHC.Base.$fMonad[]_closure;
         const Control.Monad.Fail.$fMonadFail[]_$cfail_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.185321939 UTC

[section ""data" . Control.Monad.Fail.$fMonadFailIO_closure" {
     Control.Monad.Fail.$fMonadFailIO_closure:
         const Control.Monad.Fail.C:MonadFail_con_info;
         const GHC.Base.$fMonadIO_closure;
         const GHC.IO.failIO_closure;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.185991993 UTC

[section ""cstring" . Control.Monad.Fail.$trModule4_bytes" {
     Control.Monad.Fail.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.186619692 UTC

[section ""data" . Control.Monad.Fail.$trModule3_closure" {
     Control.Monad.Fail.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.Fail.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.187216746 UTC

[section ""cstring" . Control.Monad.Fail.$trModule2_bytes" {
     Control.Monad.Fail.$trModule2_bytes:
         I8[] [67,111,110,116,114,111,108,46,77,111,110,97,100,46,70,97,105,108]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.187847868 UTC

[section ""data" . Control.Monad.Fail.$trModule1_closure" {
     Control.Monad.Fail.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.Fail.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.188651907 UTC

[section ""data" . Control.Monad.Fail.$trModule_closure" {
     Control.Monad.Fail.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Control.Monad.Fail.$trModule3_closure+1;
         const Control.Monad.Fail.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.189336288 UTC

[section ""data" . $krep_r1J03_closure" {
     $krep_r1J03_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.18994465 UTC

[section ""data" . Control.Monad.Fail.$tcMonadFail1_closure" {
     Control.Monad.Fail.$tcMonadFail1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const $krep_r1J03_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.190579199 UTC

[section ""cstring" . Control.Monad.Fail.$tcMonadFail3_bytes" {
     Control.Monad.Fail.$tcMonadFail3_bytes:
         I8[] [77,111,110,97,100,70,97,105,108]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.191197781 UTC

[section ""data" . Control.Monad.Fail.$tcMonadFail2_closure" {
     Control.Monad.Fail.$tcMonadFail2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.Fail.$tcMonadFail3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.191825813 UTC

[section ""data" . Control.Monad.Fail.$tcMonadFail_closure" {
     Control.Monad.Fail.$tcMonadFail_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Monad.Fail.$trModule_closure+1;
         const Control.Monad.Fail.$tcMonadFail2_closure+1;
         const Control.Monad.Fail.$tcMonadFail1_closure+4;
         const 13075553528933503976;
         const 10446785369700436050;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.192882214 UTC

[section ""data" . Control.Monad.Fail.C:MonadFail_closure" {
     Control.Monad.Fail.C:MonadFail_closure:
         const Control.Monad.Fail.C:MonadFail_info;
 },
 Control.Monad.Fail.C:MonadFail_entry() //  [R2, R3]
         { info_tbl: [(c1J1S,
                       label: Control.Monad.Fail.C:MonadFail_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J1S: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c1J1W; else goto c1J1V;
       c1J1W: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Monad.Fail.C:MonadFail_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c1J1V: // global
           I64[Hp - 16] = Control.Monad.Fail.C:MonadFail_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.195042621 UTC

[Control.Monad.Fail.C:MonadFail_con_entry() //  [R1]
         { info_tbl: [(c1J1X,
                       label: Control.Monad.Fail.C:MonadFail_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,67,111,110,116,114,111,108,46,77,111,110,97,100,46,70,97,105,108,46,67,58,77,111,110,97,100,70,97,105,108]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J1X: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.195794674 UTC

[section ""relreadonly" . S1J16_srt" { S1J16_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.196619848 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:56:30.198179302 UTC

[section ""data" . Control.Monad.Fail.$p1MonadFail_closure" {
     Control.Monad.Fail.$p1MonadFail_closure:
         const Control.Monad.Fail.$p1MonadFail_info;
 },
 Control.Monad.Fail.$p1MonadFail_entry() //  [R2]
         { info_tbl: [(c1J26,
                       label: Control.Monad.Fail.$p1MonadFail_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J26: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c1J27; else goto c1J28;
       c1J27: // global
           R2 = R2;
           R1 = Control.Monad.Fail.$p1MonadFail_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1J28: // global
           I64[Sp - 8] = block_c1J23_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u1J2c; else goto c1J24;
       u1J2c: // global
           call _c1J23(R1) args: 0, res: 0, upd: 0;
       c1J24: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c1J23() //  [R1]
         { info_tbl: [(c1J23,
                       label: block_c1J23_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J23: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.204502221 UTC

[section ""data" . Control.Monad.Fail.fail_closure" {
     Control.Monad.Fail.fail_closure:
         const Control.Monad.Fail.fail_info;
 },
 Control.Monad.Fail.fail_entry() //  [R2]
         { info_tbl: [(c1J2v,
                       label: Control.Monad.Fail.fail_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J2v: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c1J2w; else goto c1J2x;
       c1J2w: // global
           R2 = R2;
           R1 = Control.Monad.Fail.fail_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1J2x: // global
           I64[Sp - 8] = block_c1J2s_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u1J2B; else goto c1J2t;
       u1J2B: // global
           call _c1J2s(R1) args: 0, res: 0, upd: 0;
       c1J2t: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c1J2s() //  [R1]
         { info_tbl: [(c1J2s,
                       label: block_c1J2s_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J2s: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.210531732 UTC

[section ""data" . Control.Monad.Fail.$fMonadFailMaybe_$cfail_closure" {
     Control.Monad.Fail.$fMonadFailMaybe_$cfail_closure:
         const Control.Monad.Fail.$fMonadFailMaybe_$cfail_info;
 },
 Control.Monad.Fail.$fMonadFailMaybe_$cfail_entry() //  []
         { info_tbl: [(c1J2P,
                       label: Control.Monad.Fail.$fMonadFailMaybe_$cfail_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J2P: // global
           R1 = GHC.Base.Nothing_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.214027664 UTC

[section ""data" . Control.Monad.Fail.$fMonadFailMaybe_closure" {
     Control.Monad.Fail.$fMonadFailMaybe_closure:
         const Control.Monad.Fail.C:MonadFail_con_info;
         const GHC.Base.$fMonadMaybe_closure;
         const Control.Monad.Fail.$fMonadFailMaybe_$cfail_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.216019417 UTC

[section ""data" . Control.Monad.Fail.$fMonadFail[]_$cfail_closure" {
     Control.Monad.Fail.$fMonadFail[]_$cfail_closure:
         const Control.Monad.Fail.$fMonadFail[]_$cfail_info;
 },
 Control.Monad.Fail.$fMonadFail[]_$cfail_entry() //  []
         { info_tbl: [(c1J32,
                       label: Control.Monad.Fail.$fMonadFail[]_$cfail_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J32: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.219428974 UTC

[section ""data" . Control.Monad.Fail.$fMonadFail[]_closure" {
     Control.Monad.Fail.$fMonadFail[]_closure:
         const Control.Monad.Fail.C:MonadFail_con_info;
         const GHC.Base.$fMonad[]_closure;
         const Control.Monad.Fail.$fMonadFail[]_$cfail_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.221194055 UTC

[section ""data" . Control.Monad.Fail.$fMonadFailIO_closure" {
     Control.Monad.Fail.$fMonadFailIO_closure:
         const Control.Monad.Fail.C:MonadFail_con_info;
         const GHC.Base.$fMonadIO_closure;
         const GHC.IO.failIO_closure;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.222993162 UTC

[section ""cstring" . Control.Monad.Fail.$trModule4_bytes" {
     Control.Monad.Fail.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.224897123 UTC

[section ""data" . Control.Monad.Fail.$trModule3_closure" {
     Control.Monad.Fail.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.Fail.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.227453013 UTC

[section ""cstring" . Control.Monad.Fail.$trModule2_bytes" {
     Control.Monad.Fail.$trModule2_bytes:
         I8[] [67,111,110,116,114,111,108,46,77,111,110,97,100,46,70,97,105,108]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.229356666 UTC

[section ""data" . Control.Monad.Fail.$trModule1_closure" {
     Control.Monad.Fail.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.Fail.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.231100333 UTC

[section ""data" . Control.Monad.Fail.$trModule_closure" {
     Control.Monad.Fail.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Control.Monad.Fail.$trModule3_closure+1;
         const Control.Monad.Fail.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.232910318 UTC

[section ""data" . $krep_r1J03_closure" {
     $krep_r1J03_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.234820221 UTC

[section ""data" . Control.Monad.Fail.$tcMonadFail1_closure" {
     Control.Monad.Fail.$tcMonadFail1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const $krep_r1J03_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.236626131 UTC

[section ""cstring" . Control.Monad.Fail.$tcMonadFail3_bytes" {
     Control.Monad.Fail.$tcMonadFail3_bytes:
         I8[] [77,111,110,97,100,70,97,105,108]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.238361012 UTC

[section ""data" . Control.Monad.Fail.$tcMonadFail2_closure" {
     Control.Monad.Fail.$tcMonadFail2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.Fail.$tcMonadFail3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.240119696 UTC

[section ""data" . Control.Monad.Fail.$tcMonadFail_closure" {
     Control.Monad.Fail.$tcMonadFail_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Monad.Fail.$trModule_closure+1;
         const Control.Monad.Fail.$tcMonadFail2_closure+1;
         const Control.Monad.Fail.$tcMonadFail1_closure+4;
         const 13075553528933503976;
         const 10446785369700436050;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.242285794 UTC

[section ""data" . Control.Monad.Fail.C:MonadFail_closure" {
     Control.Monad.Fail.C:MonadFail_closure:
         const Control.Monad.Fail.C:MonadFail_info;
 },
 Control.Monad.Fail.C:MonadFail_entry() //  [R2, R3]
         { info_tbl: [(c1J3r,
                       label: Control.Monad.Fail.C:MonadFail_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J3r: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c1J3v; else goto c1J3u;
       c1J3v: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Monad.Fail.C:MonadFail_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c1J3u: // global
           I64[Hp - 16] = Control.Monad.Fail.C:MonadFail_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.246133289 UTC

[Control.Monad.Fail.C:MonadFail_con_entry() //  [R1]
         { info_tbl: [(c1J3B,
                       label: Control.Monad.Fail.C:MonadFail_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,67,111,110,116,114,111,108,46,77,111,110,97,100,46,70,97,105,108,46,67,58,77,111,110,97,100,70,97,105,108]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J3B: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.249413858 UTC

[section ""relreadonly" . S1J16_srt" { S1J16_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.292932147 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:56:30.294480467 UTC

[section ""data" . Control.Monad.Fail.$p1MonadFail_closure" {
     Control.Monad.Fail.$p1MonadFail_closure:
         const Control.Monad.Fail.$p1MonadFail_info;
 },
 Control.Monad.Fail.$p1MonadFail_entry() //  [R2]
         { info_tbl: [(c1J3Z,
                       label: Control.Monad.Fail.$p1MonadFail_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J3Z: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c1J40; else goto c1J41;
       c1J40: // global
           R2 = R2;
           R1 = Control.Monad.Fail.$p1MonadFail_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1J41: // global
           I64[Sp - 8] = block_c1J3W_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u1J45; else goto c1J3X;
       u1J45: // global
           call _c1J3W(R1) args: 0, res: 0, upd: 0;
       c1J3X: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c1J3W() //  [R1]
         { info_tbl: [(c1J3W,
                       label: block_c1J3W_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J3W: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.300326614 UTC

[section ""data" . Control.Monad.Fail.fail_closure" {
     Control.Monad.Fail.fail_closure:
         const Control.Monad.Fail.fail_info;
 },
 Control.Monad.Fail.fail_entry() //  [R2]
         { info_tbl: [(c1J4p,
                       label: Control.Monad.Fail.fail_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J4p: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c1J4q; else goto c1J4r;
       c1J4q: // global
           R2 = R2;
           R1 = Control.Monad.Fail.fail_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1J4r: // global
           I64[Sp - 8] = block_c1J4m_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u1J4v; else goto c1J4n;
       u1J4v: // global
           call _c1J4m(R1) args: 0, res: 0, upd: 0;
       c1J4n: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c1J4m() //  [R1]
         { info_tbl: [(c1J4m,
                       label: block_c1J4m_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J4m: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.307200506 UTC

[section ""data" . Control.Monad.Fail.$fMonadFailMaybe_$cfail_closure" {
     Control.Monad.Fail.$fMonadFailMaybe_$cfail_closure:
         const Control.Monad.Fail.$fMonadFailMaybe_$cfail_info;
 },
 Control.Monad.Fail.$fMonadFailMaybe_$cfail_entry() //  []
         { info_tbl: [(c1J4K,
                       label: Control.Monad.Fail.$fMonadFailMaybe_$cfail_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J4K: // global
           R1 = GHC.Base.Nothing_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.311223635 UTC

[section ""data" . Control.Monad.Fail.$fMonadFailMaybe_closure" {
     Control.Monad.Fail.$fMonadFailMaybe_closure:
         const Control.Monad.Fail.C:MonadFail_con_info;
         const GHC.Base.$fMonadMaybe_closure;
         const Control.Monad.Fail.$fMonadFailMaybe_$cfail_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.31344505 UTC

[section ""data" . Control.Monad.Fail.$fMonadFail[]_$cfail_closure" {
     Control.Monad.Fail.$fMonadFail[]_$cfail_closure:
         const Control.Monad.Fail.$fMonadFail[]_$cfail_info;
 },
 Control.Monad.Fail.$fMonadFail[]_$cfail_entry() //  []
         { info_tbl: [(c1J4Y,
                       label: Control.Monad.Fail.$fMonadFail[]_$cfail_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J4Y: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.317211421 UTC

[section ""data" . Control.Monad.Fail.$fMonadFail[]_closure" {
     Control.Monad.Fail.$fMonadFail[]_closure:
         const Control.Monad.Fail.C:MonadFail_con_info;
         const GHC.Base.$fMonad[]_closure;
         const Control.Monad.Fail.$fMonadFail[]_$cfail_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.319143045 UTC

[section ""data" . Control.Monad.Fail.$fMonadFailIO_closure" {
     Control.Monad.Fail.$fMonadFailIO_closure:
         const Control.Monad.Fail.C:MonadFail_con_info;
         const GHC.Base.$fMonadIO_closure;
         const GHC.IO.failIO_closure;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.321053829 UTC

[section ""cstring" . Control.Monad.Fail.$trModule4_bytes" {
     Control.Monad.Fail.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.3229062 UTC

[section ""data" . Control.Monad.Fail.$trModule3_closure" {
     Control.Monad.Fail.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.Fail.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.324674856 UTC

[section ""cstring" . Control.Monad.Fail.$trModule2_bytes" {
     Control.Monad.Fail.$trModule2_bytes:
         I8[] [67,111,110,116,114,111,108,46,77,111,110,97,100,46,70,97,105,108]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.326504929 UTC

[section ""data" . Control.Monad.Fail.$trModule1_closure" {
     Control.Monad.Fail.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.Fail.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.328256415 UTC

[section ""data" . Control.Monad.Fail.$trModule_closure" {
     Control.Monad.Fail.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Control.Monad.Fail.$trModule3_closure+1;
         const Control.Monad.Fail.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.330095158 UTC

[section ""data" . $krep_r1J03_closure" {
     $krep_r1J03_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.331904434 UTC

[section ""data" . Control.Monad.Fail.$tcMonadFail1_closure" {
     Control.Monad.Fail.$tcMonadFail1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const $krep_r1J03_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.333846268 UTC

[section ""cstring" . Control.Monad.Fail.$tcMonadFail3_bytes" {
     Control.Monad.Fail.$tcMonadFail3_bytes:
         I8[] [77,111,110,97,100,70,97,105,108]
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.336692901 UTC

[section ""data" . Control.Monad.Fail.$tcMonadFail2_closure" {
     Control.Monad.Fail.$tcMonadFail2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.Fail.$tcMonadFail3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.338781326 UTC

[section ""data" . Control.Monad.Fail.$tcMonadFail_closure" {
     Control.Monad.Fail.$tcMonadFail_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Monad.Fail.$trModule_closure+1;
         const Control.Monad.Fail.$tcMonadFail2_closure+1;
         const Control.Monad.Fail.$tcMonadFail1_closure+4;
         const 13075553528933503976;
         const 10446785369700436050;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.341151696 UTC

[section ""data" . Control.Monad.Fail.C:MonadFail_closure" {
     Control.Monad.Fail.C:MonadFail_closure:
         const Control.Monad.Fail.C:MonadFail_info;
 },
 Control.Monad.Fail.C:MonadFail_entry() //  [R2, R3]
         { info_tbl: [(c1J5o,
                       label: Control.Monad.Fail.C:MonadFail_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J5o: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c1J5s; else goto c1J5r;
       c1J5s: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Monad.Fail.C:MonadFail_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c1J5r: // global
           I64[Hp - 16] = Control.Monad.Fail.C:MonadFail_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.345184569 UTC

[Control.Monad.Fail.C:MonadFail_con_entry() //  [R1]
         { info_tbl: [(c1J5z,
                       label: Control.Monad.Fail.C:MonadFail_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,67,111,110,116,114,111,108,46,77,111,110,97,100,46,70,97,105,108,46,67,58,77,111,110,97,100,70,97,105,108]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c1J5z: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:56:30.348621859 UTC

[section ""relreadonly" . S1J5G_srt" { S1J5G_srt:
 }]

