
==================== Tidy Core ====================
2018-03-16 15:56:30.122393953 UTC

Result size of Tidy Core
  = {terms: 69, types: 87, coercions: 0, joins: 0/0}

-- RHS size: {terms: 6, types: 15, coercions: 0, joins: 0/0}
Control.Monad.Fail.$p1MonadFail
  :: forall (m :: * -> *). MonadFail m => Monad m
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),U(U,A)>,
 RULES: Built in rule for Control.Monad.Fail.$p1MonadFail: "Class op $p1MonadFail"]
Control.Monad.Fail.$p1MonadFail
  = \ (@ (m_a1IXp :: * -> *)) (v_B1 :: MonadFail m_a1IXp) ->
      case v_B1 of v_B1 { Control.Monad.Fail.C:MonadFail v_B2 v_B3 ->
      v_B2
      }

-- RHS size: {terms: 6, types: 15, coercions: 0, joins: 0/0}
fail
  :: forall (m :: * -> *). MonadFail m => forall a. String -> m a
[GblId[ClassOp],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LS),U(A,U)>,
 RULES: Built in rule for fail: "Class op fail"]
fail
  = \ (@ (m_a1IXp :: * -> *)) (v_B1 :: MonadFail m_a1IXp) ->
      case v_B1 of v_B1 { Control.Monad.Fail.C:MonadFail v_B2 v_B3 ->
      v_B3
      }

-- RHS size: {terms: 3, types: 4, coercions: 0, joins: 0/0}
Control.Monad.Fail.$fMonadFailMaybe_$cfail
  :: forall a. String -> Maybe a
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,A>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ a_a1IYW) _ [Occ=Dead] -> GHC.Base.Nothing @ a_a1IYW}]
Control.Monad.Fail.$fMonadFailMaybe_$cfail
  = \ (@ a_a1IYW) _ [Occ=Dead] -> GHC.Base.Nothing @ a_a1IYW

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
Control.Monad.Fail.$fMonadFailMaybe [InlPrag=NOUSERINLINE CONLIKE]
  :: MonadFail Maybe
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       Control.Monad.Fail.C:MonadFail TYPE: Maybe
                                      GHC.Base.$fMonadMaybe
                                      Control.Monad.Fail.$fMonadFailMaybe_$cfail]
Control.Monad.Fail.$fMonadFailMaybe
  = Control.Monad.Fail.C:MonadFail
      @ Maybe
      GHC.Base.$fMonadMaybe
      Control.Monad.Fail.$fMonadFailMaybe_$cfail

-- RHS size: {terms: 3, types: 4, coercions: 0, joins: 0/0}
Control.Monad.Fail.$fMonadFail[]_$cfail [InlPrag=INLINE (sat-args=1)]
  :: forall a. String -> [a]
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,A>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=False,boring_ok=True)
         Tmpl= \ (@ a_a1IYL) _ [Occ=Dead] -> GHC.Types.[] @ a_a1IYL}]
Control.Monad.Fail.$fMonadFail[]_$cfail
  = \ (@ a_a1IYL) _ [Occ=Dead] -> GHC.Types.[] @ a_a1IYL

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
Control.Monad.Fail.$fMonadFail[] [InlPrag=NOUSERINLINE CONLIKE]
  :: MonadFail []
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       Control.Monad.Fail.C:MonadFail TYPE: []
                                      GHC.Base.$fMonad[]
                                      Control.Monad.Fail.$fMonadFail[]_$cfail]
Control.Monad.Fail.$fMonadFail[]
  = Control.Monad.Fail.C:MonadFail
      @ [] GHC.Base.$fMonad[] Control.Monad.Fail.$fMonadFail[]_$cfail

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
Control.Monad.Fail.$fMonadFailIO [InlPrag=NOUSERINLINE CONLIKE]
  :: MonadFail IO
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       Control.Monad.Fail.C:MonadFail TYPE: IO GHC.Base.$fMonadIO failIO]
Control.Monad.Fail.$fMonadFailIO
  = Control.Monad.Fail.C:MonadFail @ IO GHC.Base.$fMonadIO failIO

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Control.Monad.Fail.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Control.Monad.Fail.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Control.Monad.Fail.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Control.Monad.Fail.$trModule3
  = GHC.Types.TrNameS Control.Monad.Fail.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Control.Monad.Fail.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 60 0}]
Control.Monad.Fail.$trModule2 = "Control.Monad.Fail"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Control.Monad.Fail.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Control.Monad.Fail.$trModule1
  = GHC.Types.TrNameS Control.Monad.Fail.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Control.Monad.Fail.$trModule :: GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Control.Monad.Fail.$trModule
  = GHC.Types.Module
      Control.Monad.Fail.$trModule3 Control.Monad.Fail.$trModule1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_r1J03 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep_r1J03
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcConstraint (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Control.Monad.Fail.$tcMonadFail1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
Control.Monad.Fail.$tcMonadFail1
  = GHC.Types.KindRepFun GHC.Types.krep$*Arr* $krep_r1J03

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Control.Monad.Fail.$tcMonadFail3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
Control.Monad.Fail.$tcMonadFail3 = "MonadFail"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Control.Monad.Fail.$tcMonadFail2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Control.Monad.Fail.$tcMonadFail2
  = GHC.Types.TrNameS Control.Monad.Fail.$tcMonadFail3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Control.Monad.Fail.$tcMonadFail :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Control.Monad.Fail.$tcMonadFail
  = GHC.Types.TyCon
      13075553528933503976##
      10446785369700436050##
      Control.Monad.Fail.$trModule
      Control.Monad.Fail.$tcMonadFail2
      0#
      Control.Monad.Fail.$tcMonadFail1


