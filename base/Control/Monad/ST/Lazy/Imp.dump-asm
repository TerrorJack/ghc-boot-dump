
==================== Asm code ====================
2018-03-16 16:07:32.910569539 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST5_closure
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST5_closure, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST5_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST5_info


==================== Asm code ====================
2018-03-16 16:07:32.911493139 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST5_entry
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST5_entry, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST5_entry:
_ccE3f:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccE3j
_ccE3i:
	movq $(,)_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccE3j:
	movq $24,904(%r13)
	movl $Control.Monad.ST.Lazy.Imp.$fApplicativeST5_closure,%ebx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$fApplicativeST5_entry, .-Control.Monad.ST.Lazy.Imp.$fApplicativeST5_entry


==================== Asm code ====================
2018-03-16 16:07:32.912210891 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST5_info
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST5_info, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST5_info:
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST5_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:32.914865124 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_closure
.type Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_closure, @object
Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:32.915530497 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_entry
.type Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_entry, @object
Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_entry:
_ccE3t:
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_entry, .-Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_entry


==================== Asm code ====================
2018-03-16 16:07:32.916156581 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_info
.type Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_info, @object
Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_info:
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	ScDMD_srt


==================== Asm code ====================
2018-03-16 16:07:32.918472684 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unST1_closure
.type Control.Monad.ST.Lazy.Imp.unST1_closure, @object
Control.Monad.ST.Lazy.Imp.unST1_closure:
	.quad	Control.Monad.ST.Lazy.Imp.unST1_info


==================== Asm code ====================
2018-03-16 16:07:32.919121161 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.unST1_entry
.type Control.Monad.ST.Lazy.Imp.unST1_entry, @object
Control.Monad.ST.Lazy.Imp.unST1_entry:
_ccE3E:
	movq %r14,%rbx
	jmp stg_ap_0_fast
	.size Control.Monad.ST.Lazy.Imp.unST1_entry, .-Control.Monad.ST.Lazy.Imp.unST1_entry


==================== Asm code ====================
2018-03-16 16:07:32.919787665 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unST1_info
.type Control.Monad.ST.Lazy.Imp.unST1_info, @object
Control.Monad.ST.Lazy.Imp.unST1_info:
	.quad	Control.Monad.ST.Lazy.Imp.unST1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:32.922078157 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unST_closure
.type Control.Monad.ST.Lazy.Imp.unST_closure, @object
Control.Monad.ST.Lazy.Imp.unST_closure:
	.quad	Control.Monad.ST.Lazy.Imp.unST_info


==================== Asm code ====================
2018-03-16 16:07:32.922730444 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.unST_entry
.type Control.Monad.ST.Lazy.Imp.unST_entry, @object
Control.Monad.ST.Lazy.Imp.unST_entry:
_ccE3P:
	jmp Control.Monad.ST.Lazy.Imp.unST1_entry
	.size Control.Monad.ST.Lazy.Imp.unST_entry, .-Control.Monad.ST.Lazy.Imp.unST_entry


==================== Asm code ====================
2018-03-16 16:07:32.923366947 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unST_info
.type Control.Monad.ST.Lazy.Imp.unST_info, @object
Control.Monad.ST.Lazy.Imp.unST_info:
	.quad	Control.Monad.ST.Lazy.Imp.unST_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:32.927088815 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fMonadST1_closure
.type Control.Monad.ST.Lazy.Imp.$fMonadST1_closure, @object
Control.Monad.ST.Lazy.Imp.$fMonadST1_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadST1_info


==================== Asm code ====================
2018-03-16 16:07:32.927919455 UTC

.section .text
.align 8
res_scDJp_entry:
_ccE46:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccE47
_ccE48:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccE44_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp stg_noDuplicate#
_ccE47:
	jmp *-16(%r13)
	.size res_scDJp_entry, .-res_scDJp_entry


==================== Asm code ====================
2018-03-16 16:07:32.928637672 UTC

.section .data.rel.ro
.align 8
.align 1
res_scDJp_info:
	.quad	res_scDJp_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:32.929735853 UTC

.section .text
.align 8
_ccE44:
_ccE44:
	movq 16(%rbp),%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp stg_ap_p_fast
	.size _ccE44, .-_ccE44


==================== Asm code ====================
2018-03-16 16:07:32.930394388 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccE44_info:
	.quad	_ccE44
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:32.932025516 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$fMonadST1_entry
.type Control.Monad.ST.Lazy.Imp.$fMonadST1_entry, @object
Control.Monad.ST.Lazy.Imp.$fMonadST1_entry:
_ccE4c:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccE4g
_ccE4f:
	movq $res_scDJp_info,-72(%r12)
	movq %r14,-56(%r12)
	movq %rdi,-48(%r12)
	movq $stg_sel_1_upd_info,-40(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	movq $stg_sel_0_upd_info,-16(%r12)
	movq %rax,(%r12)
	movq %rsi,%rax
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	movq %rax,%rbx
	jmp stg_ap_pp_fast
_ccE4g:
	movq $80,904(%r13)
	movl $Control.Monad.ST.Lazy.Imp.$fMonadST1_closure,%ebx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$fMonadST1_entry, .-Control.Monad.ST.Lazy.Imp.$fMonadST1_entry


==================== Asm code ====================
2018-03-16 16:07:32.932795368 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fMonadST1_info
.type Control.Monad.ST.Lazy.Imp.$fMonadST1_info, @object
Control.Monad.ST.Lazy.Imp.$fMonadST1_info:
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadST1_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:32.93829992 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$w$c<*>_closure
.type Control.Monad.ST.Lazy.Imp.$w$c<*>_closure, @object
Control.Monad.ST.Lazy.Imp.$w$c<*>_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$w$c<*>_info


==================== Asm code ====================
2018-03-16 16:07:32.939112996 UTC

.section .text
.align 8
res4_scDJK_entry:
_ccE4S:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccE4T
_ccE4U:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccE4Q_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp stg_noDuplicate#
_ccE4T:
	jmp *-16(%r13)
	.size res4_scDJK_entry, .-res4_scDJK_entry


==================== Asm code ====================
2018-03-16 16:07:32.939804526 UTC

.section .data.rel.ro
.align 8
.align 1
res4_scDJK_info:
	.quad	res4_scDJK_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:32.940475444 UTC

.section .text
.align 8
_ccE4Q:
_ccE4Q:
	movq 16(%rbp),%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp stg_ap_p_fast
	.size _ccE4Q, .-_ccE4Q


==================== Asm code ====================
2018-03-16 16:07:32.941052691 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccE4Q_info:
	.quad	_ccE4Q
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:32.941863739 UTC

.section .text
.align 8
sat_scDJQ_entry:
_ccE52:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccE53
_ccE54:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccE56
_ccE55:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $stg_sel_0_upd_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp stg_ap_p_fast
_ccE56:
	movq $24,904(%r13)
_ccE53:
	jmp *-16(%r13)
	.size sat_scDJQ_entry, .-sat_scDJQ_entry


==================== Asm code ====================
2018-03-16 16:07:32.942562687 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scDJQ_info:
	.quad	sat_scDJQ_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:32.943330625 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$w$c<*>_entry
.type Control.Monad.ST.Lazy.Imp.$w$c<*>_entry, @object
Control.Monad.ST.Lazy.Imp.$w$c<*>_entry:
_ccE57:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccE58
_ccE59:
	movq $block_ccE4D_info,-16(%rbp)
	movq %r14,%rax
	movq %rdi,%r14
	movq %rax,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_p_fast
_ccE58:
	movl $Control.Monad.ST.Lazy.Imp.$w$c<*>_closure,%ebx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$w$c<*>_entry, .-Control.Monad.ST.Lazy.Imp.$w$c<*>_entry


==================== Asm code ====================
2018-03-16 16:07:32.944018731 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$w$c<*>_info
.type Control.Monad.ST.Lazy.Imp.$w$c<*>_info, @object
Control.Monad.ST.Lazy.Imp.$w$c<*>_info:
	.quad	Control.Monad.ST.Lazy.Imp.$w$c<*>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:32.944750914 UTC

.section .text
.align 8
_ccE4D:
_ccE4D:
	movq $block_ccE4H_info,(%rbp)
	testb $7,%bl
	jne _ccE4H
_ccE4I:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccE4D, .-_ccE4D


==================== Asm code ====================
2018-03-16 16:07:32.945914027 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccE4D_info:
	.quad	_ccE4D
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:32.946722973 UTC

.section .text
.align 8
_ccE4H:
_ccE4H:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccE5e
_ccE5d:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $res4_scDJK_info,-80(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq %rbx,-56(%r12)
	movq $stg_sel_1_upd_info,-48(%r12)
	leaq -80(%r12),%rbx
	movq %rbx,-32(%r12)
	movq $sat_scDJQ_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -48(%r12),%r14
	leaq -24(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccE5e:
	movq $88,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccE4H, .-_ccE4H


==================== Asm code ====================
2018-03-16 16:07:32.947473222 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccE4H_info:
	.quad	_ccE4H
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:32.950739384 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST4_closure
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST4_closure, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST4_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST4_info


==================== Asm code ====================
2018-03-16 16:07:32.951488331 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST4_entry
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST4_entry, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST4_entry:
_ccE5O:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccE5P
_ccE5Q:
	movq $block_ccE5L_info,-8(%rbp)
	addq $-8,%rbp
	jmp Control.Monad.ST.Lazy.Imp.$w$c<*>_entry
_ccE5P:
	movl $Control.Monad.ST.Lazy.Imp.$fApplicativeST4_closure,%ebx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$fApplicativeST4_entry, .-Control.Monad.ST.Lazy.Imp.$fApplicativeST4_entry


==================== Asm code ====================
2018-03-16 16:07:32.952179082 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST4_info
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST4_info, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST4_info:
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST4_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:32.952978958 UTC

.section .text
.align 8
_ccE5L:
_ccE5L:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccE5T
_ccE5S:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccE5T:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccE5L, .-_ccE5L


==================== Asm code ====================
2018-03-16 16:07:32.953707579 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccE5L_info:
	.quad	_ccE5L
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:32.959853136 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$w$cliftA2_closure
.type Control.Monad.ST.Lazy.Imp.$w$cliftA2_closure, @object
Control.Monad.ST.Lazy.Imp.$w$cliftA2_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$w$cliftA2_info


==================== Asm code ====================
2018-03-16 16:07:32.9606239 UTC

.section .text
.align 8
res1_scDK5_entry:
_ccE6d:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccE6e
_ccE6f:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccE6b_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp stg_noDuplicate#
_ccE6e:
	jmp *-16(%r13)
	.size res1_scDK5_entry, .-res1_scDK5_entry


==================== Asm code ====================
2018-03-16 16:07:32.961319166 UTC

.section .data.rel.ro
.align 8
.align 1
res1_scDK5_info:
	.quad	res1_scDK5_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:32.961999429 UTC

.section .text
.align 8
_ccE6b:
_ccE6b:
	movq 16(%rbp),%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp stg_ap_p_fast
	.size _ccE6b, .-_ccE6b


==================== Asm code ====================
2018-03-16 16:07:32.962610534 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccE6b_info:
	.quad	_ccE6b
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:32.963316037 UTC

.section .text
.align 8
res2_scDK7_entry:
_ccE6o:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccE6p
_ccE6q:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccE6l_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp stg_noDuplicate#
_ccE6p:
	jmp *-16(%r13)
	.size res2_scDK7_entry, .-res2_scDK7_entry


==================== Asm code ====================
2018-03-16 16:07:32.964017337 UTC

.section .data.rel.ro
.align 8
.align 1
res2_scDK7_info:
	.quad	res2_scDK7_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:32.96481848 UTC

.section .text
.align 8
_ccE6l:
_ccE6l:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccE6t
_ccE6s:
	movq $stg_sel_1_upd_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -16(%r12),%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp stg_ap_p_fast
_ccE6t:
	movq $24,904(%r13)
	jmp stg_gc_noregs
	.size _ccE6l, .-_ccE6l


==================== Asm code ====================
2018-03-16 16:07:32.965507951 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccE6l_info:
	.quad	_ccE6l
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:32.966334741 UTC

.section .text
.align 8
sat_scDKl_entry:
_ccE6B:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccE6C
_ccE6D:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccE6F
_ccE6E:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $stg_sel_0_upd_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $stg_sel_0_upd_info,-16(%r12)
	movq %rcx,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp stg_ap_pp_fast
_ccE6F:
	movq $48,904(%r13)
_ccE6C:
	jmp *-16(%r13)
	.size sat_scDKl_entry, .-sat_scDKl_entry


==================== Asm code ====================
2018-03-16 16:07:32.967105407 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scDKl_info:
	.quad	sat_scDKl_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:07:32.967877209 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$w$cliftA2_entry
.type Control.Monad.ST.Lazy.Imp.$w$cliftA2_entry, @object
Control.Monad.ST.Lazy.Imp.$w$cliftA2_entry:
_ccE6G:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ccE6K
_ccE6J:
	movq $res1_scDK5_info,-120(%r12)
	movq %rsi,-104(%r12)
	movq %r8,-96(%r12)
	movq $res2_scDK7_info,-88(%r12)
	movq %rdi,-72(%r12)
	leaq -120(%r12),%rax
	movq %rax,-64(%r12)
	movq $stg_sel_1_upd_info,-56(%r12)
	leaq -88(%r12),%rbx
	movq %rbx,-40(%r12)
	movq $sat_scDKl_info,-32(%r12)
	movq %r14,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -56(%r12),%r14
	leaq -32(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccE6K:
	movq $128,904(%r13)
	movl $Control.Monad.ST.Lazy.Imp.$w$cliftA2_closure,%ebx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$w$cliftA2_entry, .-Control.Monad.ST.Lazy.Imp.$w$cliftA2_entry


==================== Asm code ====================
2018-03-16 16:07:32.96864885 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$w$cliftA2_info
.type Control.Monad.ST.Lazy.Imp.$w$cliftA2_info, @object
Control.Monad.ST.Lazy.Imp.$w$cliftA2_info:
	.quad	Control.Monad.ST.Lazy.Imp.$w$cliftA2_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:07:32.971980396 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST3_closure
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST3_closure, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST3_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST3_info


==================== Asm code ====================
2018-03-16 16:07:32.972755499 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST3_entry
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST3_entry, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST3_entry:
_ccE7k:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccE7l
_ccE7m:
	movq $block_ccE7h_info,-8(%rbp)
	addq $-8,%rbp
	jmp Control.Monad.ST.Lazy.Imp.$w$cliftA2_entry
_ccE7l:
	movl $Control.Monad.ST.Lazy.Imp.$fApplicativeST3_closure,%ebx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$fApplicativeST3_entry, .-Control.Monad.ST.Lazy.Imp.$fApplicativeST3_entry


==================== Asm code ====================
2018-03-16 16:07:32.974460357 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST3_info
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST3_info, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST3_info:
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST3_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:07:32.97522534 UTC

.section .text
.align 8
_ccE7h:
_ccE7h:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccE7p
_ccE7o:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccE7p:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccE7h, .-_ccE7h


==================== Asm code ====================
2018-03-16 16:07:32.975871145 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccE7h_info:
	.quad	_ccE7h
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:32.979616336 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST2_closure
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST2_closure, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST2_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST2_info


==================== Asm code ====================
2018-03-16 16:07:32.980343219 UTC

.section .text
.align 8
s'_scDKA_entry:
_ccE7L:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccE7M
_ccE7N:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccE7H_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp stg_noDuplicate#
_ccE7M:
	jmp *-16(%r13)
	.size s'_scDKA_entry, .-s'_scDKA_entry


==================== Asm code ====================
2018-03-16 16:07:32.98103034 UTC

.section .data.rel.ro
.align 8
.align 1
s'_scDKA_info:
	.quad	s'_scDKA_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:32.981745234 UTC

.section .text
.align 8
_ccE7H:
_ccE7H:
	movq 16(%rbp),%rax
	movq $block_ccE7J_info,16(%rbp)
	movq %rax,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_p_fast
	.size _ccE7H, .-_ccE7H


==================== Asm code ====================
2018-03-16 16:07:32.982354081 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccE7H_info:
	.quad	_ccE7H
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:32.982993463 UTC

.section .text
.align 8
_ccE7J:
_ccE7J:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccE7J, .-_ccE7J


==================== Asm code ====================
2018-03-16 16:07:32.983611145 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccE7J_info:
	.quad	_ccE7J
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:32.98433227 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST2_entry
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST2_entry, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST2_entry:
_ccE7S:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccE7W
_ccE7V:
	movq $s'_scDKA_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	leaq -24(%r12),%r14
	movq %rsi,%rbx
	jmp stg_ap_p_fast
_ccE7W:
	movq $32,904(%r13)
	movl $Control.Monad.ST.Lazy.Imp.$fApplicativeST2_closure,%ebx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$fApplicativeST2_entry, .-Control.Monad.ST.Lazy.Imp.$fApplicativeST2_entry


==================== Asm code ====================
2018-03-16 16:07:32.98501048 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST2_info
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST2_info, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST2_info:
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST2_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:32.990215873 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$w$c<*_closure
.type Control.Monad.ST.Lazy.Imp.$w$c<*_closure, @object
Control.Monad.ST.Lazy.Imp.$w$c<*_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$w$c<*_info


==================== Asm code ====================
2018-03-16 16:07:32.990966212 UTC

.section .text
.align 8
s''_scDKQ_entry:
_ccE8F:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccE8G
_ccE8H:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccE8B_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp stg_noDuplicate#
_ccE8G:
	jmp *-16(%r13)
	.size s''_scDKQ_entry, .-s''_scDKQ_entry


==================== Asm code ====================
2018-03-16 16:07:32.99165358 UTC

.section .data.rel.ro
.align 8
.align 1
s''_scDKQ_info:
	.quad	s''_scDKQ_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:32.992316191 UTC

.section .text
.align 8
_ccE8B:
_ccE8B:
	movq 16(%rbp),%rax
	movq $block_ccE8D_info,16(%rbp)
	movq %rax,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_p_fast
	.size _ccE8B, .-_ccE8B


==================== Asm code ====================
2018-03-16 16:07:32.992935076 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccE8B_info:
	.quad	_ccE8B
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:32.993638123 UTC

.section .text
.align 8
_ccE8D:
_ccE8D:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccE8D, .-_ccE8D


==================== Asm code ====================
2018-03-16 16:07:32.99429553 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccE8D_info:
	.quad	_ccE8D
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:32.995044352 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$w$c<*_entry
.type Control.Monad.ST.Lazy.Imp.$w$c<*_entry, @object
Control.Monad.ST.Lazy.Imp.$w$c<*_entry:
_ccE8M:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccE8N
_ccE8O:
	movq $block_ccE8o_info,-16(%rbp)
	movq %r14,%rax
	movq %rdi,%r14
	movq %rax,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp stg_ap_p_fast
_ccE8N:
	movl $Control.Monad.ST.Lazy.Imp.$w$c<*_closure,%ebx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$w$c<*_entry, .-Control.Monad.ST.Lazy.Imp.$w$c<*_entry


==================== Asm code ====================
2018-03-16 16:07:32.995699558 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$w$c<*_info
.type Control.Monad.ST.Lazy.Imp.$w$c<*_info, @object
Control.Monad.ST.Lazy.Imp.$w$c<*_info:
	.quad	Control.Monad.ST.Lazy.Imp.$w$c<*_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:32.996406234 UTC

.section .text
.align 8
_ccE8o:
_ccE8o:
	movq $block_ccE8s_info,(%rbp)
	testb $7,%bl
	jne _ccE8s
_ccE8t:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccE8o, .-_ccE8o


==================== Asm code ====================
2018-03-16 16:07:32.99702982 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccE8o_info:
	.quad	_ccE8o
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:32.997791186 UTC

.section .text
.align 8
_ccE8s:
_ccE8s:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccE8T
_ccE8S:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $s''_scDKQ_info,-24(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%r14
	movq %rax,%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccE8T:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccE8s, .-_ccE8s


==================== Asm code ====================
2018-03-16 16:07:32.998506346 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccE8s_info:
	.quad	_ccE8s
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.001985819 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST1_closure
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST1_closure, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST1_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST1_info


==================== Asm code ====================
2018-03-16 16:07:33.002691569 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST1_entry
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST1_entry, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST1_entry:
_ccE9u:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccE9v
_ccE9w:
	movq $block_ccE9r_info,-8(%rbp)
	addq $-8,%rbp
	jmp Control.Monad.ST.Lazy.Imp.$w$c<*_entry
_ccE9v:
	movl $Control.Monad.ST.Lazy.Imp.$fApplicativeST1_closure,%ebx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$fApplicativeST1_entry, .-Control.Monad.ST.Lazy.Imp.$fApplicativeST1_entry


==================== Asm code ====================
2018-03-16 16:07:33.003381801 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST1_info
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST1_info, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST1_info:
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST1_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:33.004127318 UTC

.section .text
.align 8
_ccE9r:
_ccE9r:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccE9z
_ccE9y:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccE9z:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _ccE9r, .-_ccE9r


==================== Asm code ====================
2018-03-16 16:07:33.004781099 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccE9r_info:
	.quad	_ccE9r
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.00917929 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fFunctorST2_closure
.type Control.Monad.ST.Lazy.Imp.$fFunctorST2_closure, @object
Control.Monad.ST.Lazy.Imp.$fFunctorST2_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$fFunctorST2_info


==================== Asm code ====================
2018-03-16 16:07:33.009947489 UTC

.section .text
.align 8
res_scDL4_entry:
_ccE9T:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccE9U
_ccE9V:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccE9R_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp stg_noDuplicate#
_ccE9U:
	jmp *-16(%r13)
	.size res_scDL4_entry, .-res_scDL4_entry


==================== Asm code ====================
2018-03-16 16:07:33.010631979 UTC

.section .data.rel.ro
.align 8
.align 1
res_scDL4_info:
	.quad	res_scDL4_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:33.011317434 UTC

.section .text
.align 8
_ccE9R:
_ccE9R:
	movq 16(%rbp),%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp stg_ap_p_fast
	.size _ccE9R, .-_ccE9R


==================== Asm code ====================
2018-03-16 16:07:33.012565239 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccE9R_info:
	.quad	_ccE9R
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.013468661 UTC

.section .text
.align 8
sat_scDLa_entry:
_ccEa3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEa4
_ccEa5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccEa7
_ccEa6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $stg_sel_0_upd_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp stg_ap_p_fast
_ccEa7:
	movq $24,904(%r13)
_ccEa4:
	jmp *-16(%r13)
	.size sat_scDLa_entry, .-sat_scDLa_entry


==================== Asm code ====================
2018-03-16 16:07:33.014143027 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scDLa_info:
	.quad	sat_scDLa_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:33.015001381 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$fFunctorST2_entry
.type Control.Monad.ST.Lazy.Imp.$fFunctorST2_entry, @object
Control.Monad.ST.Lazy.Imp.$fFunctorST2_entry:
_ccEa9:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccEad
_ccEac:
	movq $res_scDL4_info,-104(%r12)
	movq %rsi,-88(%r12)
	movq %rdi,-80(%r12)
	movq $stg_sel_1_upd_info,-72(%r12)
	leaq -104(%r12),%rax
	movq %rax,-56(%r12)
	movq $sat_scDLa_info,-48(%r12)
	movq %r14,-32(%r12)
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccEad:
	movq $112,904(%r13)
	movl $Control.Monad.ST.Lazy.Imp.$fFunctorST2_closure,%ebx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$fFunctorST2_entry, .-Control.Monad.ST.Lazy.Imp.$fFunctorST2_entry


==================== Asm code ====================
2018-03-16 16:07:33.015746652 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fFunctorST2_info
.type Control.Monad.ST.Lazy.Imp.$fFunctorST2_info, @object
Control.Monad.ST.Lazy.Imp.$fFunctorST2_info:
	.quad	Control.Monad.ST.Lazy.Imp.$fFunctorST2_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:33.020069685 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fFunctorST1_closure
.type Control.Monad.ST.Lazy.Imp.$fFunctorST1_closure, @object
Control.Monad.ST.Lazy.Imp.$fFunctorST1_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$fFunctorST1_info


==================== Asm code ====================
2018-03-16 16:07:33.020818063 UTC

.section .text
.align 8
s'_scDLi_entry:
_ccEaK:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEaL
_ccEaM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_ccEaG_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp stg_noDuplicate#
_ccEaL:
	jmp *-16(%r13)
	.size s'_scDLi_entry, .-s'_scDLi_entry


==================== Asm code ====================
2018-03-16 16:07:33.021542853 UTC

.section .data.rel.ro
.align 8
.align 1
s'_scDLi_info:
	.quad	s'_scDLi_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:33.022194223 UTC

.section .text
.align 8
_ccEaG:
_ccEaG:
	movq 16(%rbp),%rax
	movq $block_ccEaI_info,16(%rbp)
	movq %rax,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_p_fast
	.size _ccEaG, .-_ccEaG


==================== Asm code ====================
2018-03-16 16:07:33.022787884 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEaG_info:
	.quad	_ccEaG
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.023421045 UTC

.section .text
.align 8
_ccEaI:
_ccEaI:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccEaI, .-_ccEaI


==================== Asm code ====================
2018-03-16 16:07:33.024012146 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEaI_info:
	.quad	_ccEaI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.024806416 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$fFunctorST1_entry
.type Control.Monad.ST.Lazy.Imp.$fFunctorST1_entry, @object
Control.Monad.ST.Lazy.Imp.$fFunctorST1_entry:
_ccEaS:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccEaW
_ccEaV:
	movq $s'_scDLi_info,-48(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	movq %r14,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccEaW:
	movq $56,904(%r13)
	movl $Control.Monad.ST.Lazy.Imp.$fFunctorST1_closure,%ebx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$fFunctorST1_entry, .-Control.Monad.ST.Lazy.Imp.$fFunctorST1_entry


==================== Asm code ====================
2018-03-16 16:07:33.025534036 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fFunctorST1_info
.type Control.Monad.ST.Lazy.Imp.$fFunctorST1_info, @object
Control.Monad.ST.Lazy.Imp.$fFunctorST1_info:
	.quad	Control.Monad.ST.Lazy.Imp.$fFunctorST1_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:33.027380124 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fFunctorST_closure
.type Control.Monad.ST.Lazy.Imp.$fFunctorST_closure, @object
Control.Monad.ST.Lazy.Imp.$fFunctorST_closure:
	.quad	GHC.Base.C:Functor_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$fFunctorST2_closure+3
	.quad	Control.Monad.ST.Lazy.Imp.$fFunctorST1_closure+3
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.029278714 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST_closure
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST_closure, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST_closure:
	.quad	GHC.Base.C:Applicative_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$fFunctorST_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST5_closure+2
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST4_closure+3
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST3_closure+4
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST2_closure+3
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST1_closure+3
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.031204605 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fMonadST_closure
.type Control.Monad.ST.Lazy.Imp.$fMonadST_closure, @object
Control.Monad.ST.Lazy.Imp.$fMonadST_closure:
	.quad	GHC.Base.C:Monad_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadST1_closure+3
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST2_closure+3
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST5_closure+2
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:33.033052914 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fMonadFailST_closure
.type Control.Monad.ST.Lazy.Imp.$fMonadFailST_closure, @object
Control.Monad.ST.Lazy.Imp.$fMonadFailST_closure:
	.quad	Control.Monad.Fail.C:MonadFail_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadST_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:33.036129565 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.runST_closure
.type Control.Monad.ST.Lazy.Imp.runST_closure, @object
Control.Monad.ST.Lazy.Imp.runST_closure:
	.quad	Control.Monad.ST.Lazy.Imp.runST_info


==================== Asm code ====================
2018-03-16 16:07:33.036999743 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.runST_entry
.type Control.Monad.ST.Lazy.Imp.runST_entry, @object
Control.Monad.ST.Lazy.Imp.runST_entry:
_ccEbs:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEbt
_ccEbu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccEbw
_ccEbv:
	movq $Control.Monad.ST.Lazy.Imp.S#_con_info,-8(%r12)
	movq $block_ccEbq_info,-8(%rbp)
	movq %r14,%rax
	leaq -7(%r12),%r14
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_ap_p_fast
_ccEbw:
	movq $16,904(%r13)
_ccEbt:
	movl $Control.Monad.ST.Lazy.Imp.runST_closure,%ebx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.runST_entry, .-Control.Monad.ST.Lazy.Imp.runST_entry


==================== Asm code ====================
2018-03-16 16:07:33.038199978 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.runST_info
.type Control.Monad.ST.Lazy.Imp.runST_info, @object
Control.Monad.ST.Lazy.Imp.runST_info:
	.quad	Control.Monad.ST.Lazy.Imp.runST_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:33.038884859 UTC

.section .text
.align 8
_ccEbq:
_ccEbq:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _ccEbq, .-_ccEbq


==================== Asm code ====================
2018-03-16 16:07:33.039487705 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEbq_info:
	.quad	_ccEbq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.044068379 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fMonadFixST1_closure
.type Control.Monad.ST.Lazy.Imp.$fMonadFixST1_closure, @object
Control.Monad.ST.Lazy.Imp.$fMonadFixST1_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadFixST1_info


==================== Asm code ====================
2018-03-16 16:07:33.044896705 UTC

.section .text
.align 8
ds_scDLu_entry:
_ccEbT:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEbX
_ccEbY:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccEc0
_ccEbZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq $stg_sel_1_upd_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_ccEbR_info,-24(%rbp)
	movq %rcx,%rsi
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $-24,%rbp
	jmp stg_ap_pp_fast
_ccEc0:
	movq $24,904(%r13)
_ccEbX:
	jmp *-16(%r13)
	.size ds_scDLu_entry, .-ds_scDLu_entry


==================== Asm code ====================
2018-03-16 16:07:33.045666615 UTC

.section .data.rel.ro
.align 8
.align 1
ds_scDLu_info:
	.quad	ds_scDLu_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:33.046420196 UTC

.section .text
.align 8
_ccEbR:
_ccEbR:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccEc3
_ccEc2:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq $(,,)_con_info,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -23(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccEc3:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccEbR, .-_ccEbR


==================== Asm code ====================
2018-03-16 16:07:33.047116877 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEbR_info:
	.quad	_ccEbR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.047989966 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$fMonadFixST1_entry
.type Control.Monad.ST.Lazy.Imp.$fMonadFixST1_entry, @object
Control.Monad.ST.Lazy.Imp.$fMonadFixST1_entry:
_ccEc7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEc8
_ccEc9:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccEcb
_ccEca:
	movq $ds_scDLu_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq $block_ccEc4_info,-8(%rbp)
	leaq -24(%r12),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccEc4
_ccEc5:
	movq (%rbx),%rax
	jmp *(%rax)
_ccEcb:
	movq $32,904(%r13)
_ccEc8:
	movl $Control.Monad.ST.Lazy.Imp.$fMonadFixST1_closure,%ebx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$fMonadFixST1_entry, .-Control.Monad.ST.Lazy.Imp.$fMonadFixST1_entry


==================== Asm code ====================
2018-03-16 16:07:33.049966586 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fMonadFixST1_info
.type Control.Monad.ST.Lazy.Imp.$fMonadFixST1_info, @object
Control.Monad.ST.Lazy.Imp.$fMonadFixST1_info:
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadFixST1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:33.050661657 UTC

.section .text
.align 8
_ccEc4:
_ccEc4:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccEc4, .-_ccEc4


==================== Asm code ====================
2018-03-16 16:07:33.051313589 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEc4_info:
	.quad	_ccEc4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.053607834 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.fixST_closure
.type Control.Monad.ST.Lazy.Imp.fixST_closure, @object
Control.Monad.ST.Lazy.Imp.fixST_closure:
	.quad	Control.Monad.ST.Lazy.Imp.fixST_info


==================== Asm code ====================
2018-03-16 16:07:33.054225419 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.fixST_entry
.type Control.Monad.ST.Lazy.Imp.fixST_entry, @object
Control.Monad.ST.Lazy.Imp.fixST_entry:
_ccEcD:
	jmp Control.Monad.ST.Lazy.Imp.$fMonadFixST1_entry
	.size Control.Monad.ST.Lazy.Imp.fixST_entry, .-Control.Monad.ST.Lazy.Imp.fixST_entry


==================== Asm code ====================
2018-03-16 16:07:33.054839634 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.fixST_info
.type Control.Monad.ST.Lazy.Imp.fixST_info, @object
Control.Monad.ST.Lazy.Imp.fixST_info:
	.quad	Control.Monad.ST.Lazy.Imp.fixST_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:33.056670343 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fMonadFixST_closure
.type Control.Monad.ST.Lazy.Imp.$fMonadFixST_closure, @object
Control.Monad.ST.Lazy.Imp.$fMonadFixST_closure:
	.quad	Control.Monad.Fix.C:MonadFix_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadST_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadFixST1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:33.06020763 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.strictToLazyST1_closure
.type Control.Monad.ST.Lazy.Imp.strictToLazyST1_closure, @object
Control.Monad.ST.Lazy.Imp.strictToLazyST1_closure:
	.quad	Control.Monad.ST.Lazy.Imp.strictToLazyST1_info


==================== Asm code ====================
2018-03-16 16:07:33.060991706 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.strictToLazyST1_entry
.type Control.Monad.ST.Lazy.Imp.strictToLazyST1_entry, @object
Control.Monad.ST.Lazy.Imp.strictToLazyST1_entry:
_ccEcS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEcZ
_ccEd0:
	movq $block_ccEcP_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccEcP
_ccEcQ:
	movq (%rbx),%rax
	jmp *(%rax)
_ccEcZ:
	movl $Control.Monad.ST.Lazy.Imp.strictToLazyST1_closure,%ebx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.strictToLazyST1_entry, .-Control.Monad.ST.Lazy.Imp.strictToLazyST1_entry


==================== Asm code ====================
2018-03-16 16:07:33.061749568 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.strictToLazyST1_info
.type Control.Monad.ST.Lazy.Imp.strictToLazyST1_info, @object
Control.Monad.ST.Lazy.Imp.strictToLazyST1_info:
	.quad	Control.Monad.ST.Lazy.Imp.strictToLazyST1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:33.062351905 UTC

.section .text
.align 8
_ccEcP:
_ccEcP:
	movq 8(%rbp),%rax
	movq $block_ccEcV_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	jmp stg_ap_v_fast
	.size _ccEcP, .-_ccEcP


==================== Asm code ====================
2018-03-16 16:07:33.062960556 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEcP_info:
	.quad	_ccEcP
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.06371607 UTC

.section .text
.align 8
_ccEcV:
_ccEcV:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccEd4
_ccEd3:
	movq $Control.Monad.ST.Lazy.Imp.S#_con_info,-32(%r12)
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccEd4:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccEcV, .-_ccEcV


==================== Asm code ====================
2018-03-16 16:07:33.064407538 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEcV_info:
	.quad	_ccEcV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.067287459 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.strictToLazyST_closure
.type Control.Monad.ST.Lazy.Imp.strictToLazyST_closure, @object
Control.Monad.ST.Lazy.Imp.strictToLazyST_closure:
	.quad	Control.Monad.ST.Lazy.Imp.strictToLazyST_info


==================== Asm code ====================
2018-03-16 16:07:33.068002853 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.strictToLazyST_entry
.type Control.Monad.ST.Lazy.Imp.strictToLazyST_entry, @object
Control.Monad.ST.Lazy.Imp.strictToLazyST_entry:
_ccEdo:
	jmp Control.Monad.ST.Lazy.Imp.strictToLazyST1_entry
	.size Control.Monad.ST.Lazy.Imp.strictToLazyST_entry, .-Control.Monad.ST.Lazy.Imp.strictToLazyST_entry


==================== Asm code ====================
2018-03-16 16:07:33.068625334 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.strictToLazyST_info
.type Control.Monad.ST.Lazy.Imp.strictToLazyST_info, @object
Control.Monad.ST.Lazy.Imp.strictToLazyST_info:
	.quad	Control.Monad.ST.Lazy.Imp.strictToLazyST_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:33.072822668 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unsafeIOToST1_closure
.type Control.Monad.ST.Lazy.Imp.unsafeIOToST1_closure, @object
Control.Monad.ST.Lazy.Imp.unsafeIOToST1_closure:
	.quad	Control.Monad.ST.Lazy.Imp.unsafeIOToST1_info


==================== Asm code ====================
2018-03-16 16:07:33.073722246 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.unsafeIOToST1_entry
.type Control.Monad.ST.Lazy.Imp.unsafeIOToST1_entry, @object
Control.Monad.ST.Lazy.Imp.unsafeIOToST1_entry:
_ccEdC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEdJ
_ccEdK:
	movq $block_ccEdz_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccEdz
_ccEdA:
	movq (%rbx),%rax
	jmp *(%rax)
_ccEdJ:
	movl $Control.Monad.ST.Lazy.Imp.unsafeIOToST1_closure,%ebx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.unsafeIOToST1_entry, .-Control.Monad.ST.Lazy.Imp.unsafeIOToST1_entry


==================== Asm code ====================
2018-03-16 16:07:33.074529665 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unsafeIOToST1_info
.type Control.Monad.ST.Lazy.Imp.unsafeIOToST1_info, @object
Control.Monad.ST.Lazy.Imp.unsafeIOToST1_info:
	.quad	Control.Monad.ST.Lazy.Imp.unsafeIOToST1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:33.075227102 UTC

.section .text
.align 8
_ccEdz:
_ccEdz:
	movq 8(%rbp),%rax
	movq $block_ccEdF_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	jmp stg_ap_v_fast
	.size _ccEdz, .-_ccEdz


==================== Asm code ====================
2018-03-16 16:07:33.075857267 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEdz_info:
	.quad	_ccEdz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.076650258 UTC

.section .text
.align 8
_ccEdF:
_ccEdF:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccEdO
_ccEdN:
	movq $Control.Monad.ST.Lazy.Imp.S#_con_info,-32(%r12)
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccEdO:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccEdF, .-_ccEdF


==================== Asm code ====================
2018-03-16 16:07:33.077411723 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEdF_info:
	.quad	_ccEdF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.079735631 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unsafeIOToST_closure
.type Control.Monad.ST.Lazy.Imp.unsafeIOToST_closure, @object
Control.Monad.ST.Lazy.Imp.unsafeIOToST_closure:
	.quad	Control.Monad.ST.Lazy.Imp.unsafeIOToST_info


==================== Asm code ====================
2018-03-16 16:07:33.080417042 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.unsafeIOToST_entry
.type Control.Monad.ST.Lazy.Imp.unsafeIOToST_entry, @object
Control.Monad.ST.Lazy.Imp.unsafeIOToST_entry:
_ccEe8:
	jmp Control.Monad.ST.Lazy.Imp.unsafeIOToST1_entry
	.size Control.Monad.ST.Lazy.Imp.unsafeIOToST_entry, .-Control.Monad.ST.Lazy.Imp.unsafeIOToST_entry


==================== Asm code ====================
2018-03-16 16:07:33.081077539 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unsafeIOToST_info
.type Control.Monad.ST.Lazy.Imp.unsafeIOToST_info, @object
Control.Monad.ST.Lazy.Imp.unsafeIOToST_info:
	.quad	Control.Monad.ST.Lazy.Imp.unsafeIOToST_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:33.084865655 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.lazyToStrictST1_closure
.type Control.Monad.ST.Lazy.Imp.lazyToStrictST1_closure, @object
Control.Monad.ST.Lazy.Imp.lazyToStrictST1_closure:
	.quad	Control.Monad.ST.Lazy.Imp.lazyToStrictST1_info


==================== Asm code ====================
2018-03-16 16:07:33.085735836 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.lazyToStrictST1_entry
.type Control.Monad.ST.Lazy.Imp.lazyToStrictST1_entry, @object
Control.Monad.ST.Lazy.Imp.lazyToStrictST1_entry:
_ccEem:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEeq
_ccEer:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccEet
_ccEes:
	movq $Control.Monad.ST.Lazy.Imp.S#_con_info,-8(%r12)
	movq $block_ccEek_info,-8(%rbp)
	movq %r14,%rax
	leaq -7(%r12),%r14
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_ap_p_fast
_ccEet:
	movq $16,904(%r13)
_ccEeq:
	movl $Control.Monad.ST.Lazy.Imp.lazyToStrictST1_closure,%ebx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.lazyToStrictST1_entry, .-Control.Monad.ST.Lazy.Imp.lazyToStrictST1_entry


==================== Asm code ====================
2018-03-16 16:07:33.087020509 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.lazyToStrictST1_info
.type Control.Monad.ST.Lazy.Imp.lazyToStrictST1_info, @object
Control.Monad.ST.Lazy.Imp.lazyToStrictST1_info:
	.quad	Control.Monad.ST.Lazy.Imp.lazyToStrictST1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:07:33.087799567 UTC

.section .text
.align 8
_ccEek:
_ccEek:
	movq $block_ccEep_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _ccEep
_ccEev:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccEek, .-_ccEek


==================== Asm code ====================
2018-03-16 16:07:33.088461989 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEek_info:
	.quad	_ccEek
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.089159584 UTC

.section .text
.align 8
_ccEep:
_ccEep:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccEep, .-_ccEep


==================== Asm code ====================
2018-03-16 16:07:33.089856316 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEep_info:
	.quad	_ccEep
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.092024238 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.lazyToStrictST_closure
.type Control.Monad.ST.Lazy.Imp.lazyToStrictST_closure, @object
Control.Monad.ST.Lazy.Imp.lazyToStrictST_closure:
	.quad	Control.Monad.ST.Lazy.Imp.lazyToStrictST_info


==================== Asm code ====================
2018-03-16 16:07:33.092680176 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.lazyToStrictST_entry
.type Control.Monad.ST.Lazy.Imp.lazyToStrictST_entry, @object
Control.Monad.ST.Lazy.Imp.lazyToStrictST_entry:
_ccEeS:
	jmp Control.Monad.ST.Lazy.Imp.lazyToStrictST1_entry
	.size Control.Monad.ST.Lazy.Imp.lazyToStrictST_entry, .-Control.Monad.ST.Lazy.Imp.lazyToStrictST_entry


==================== Asm code ====================
2018-03-16 16:07:33.093740249 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.lazyToStrictST_info
.type Control.Monad.ST.Lazy.Imp.lazyToStrictST_info, @object
Control.Monad.ST.Lazy.Imp.lazyToStrictST_info:
	.quad	Control.Monad.ST.Lazy.Imp.lazyToStrictST_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:07:33.095919299 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.stToIO_closure
.type Control.Monad.ST.Lazy.Imp.stToIO_closure, @object
Control.Monad.ST.Lazy.Imp.stToIO_closure:
	.quad	Control.Monad.ST.Lazy.Imp.stToIO_info


==================== Asm code ====================
2018-03-16 16:07:33.0966064 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.stToIO_entry
.type Control.Monad.ST.Lazy.Imp.stToIO_entry, @object
Control.Monad.ST.Lazy.Imp.stToIO_entry:
_ccEf3:
	jmp Control.Monad.ST.Lazy.Imp.lazyToStrictST1_entry
	.size Control.Monad.ST.Lazy.Imp.stToIO_entry, .-Control.Monad.ST.Lazy.Imp.stToIO_entry


==================== Asm code ====================
2018-03-16 16:07:33.09721031 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.stToIO_info
.type Control.Monad.ST.Lazy.Imp.stToIO_info, @object
Control.Monad.ST.Lazy.Imp.stToIO_info:
	.quad	Control.Monad.ST.Lazy.Imp.stToIO_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:07:33.102724082 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_closure
.type Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_closure, @object
Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_closure:
	.quad	Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_info


==================== Asm code ====================
2018-03-16 16:07:33.103520081 UTC

.section .text
.align 8
sat_scDMh_entry:
_ccEft:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEfx
_ccEfy:
	movq $block_ccEfo_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_noDuplicate#
_ccEfx:
	jmp *-8(%r13)
	.size sat_scDMh_entry, .-sat_scDMh_entry


==================== Asm code ====================
2018-03-16 16:07:33.104161328 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scDMh_info:
	.quad	sat_scDMh_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:07:33.104888559 UTC

.section .text
.align 8
_ccEfo:
_ccEfo:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccEfB
_ccEfA:
	movq $Control.Monad.ST.Lazy.Imp.S#_con_info,-8(%r12)
	movq 8(%rbp),%rax
	movq $block_ccEfr_info,8(%rbp)
	leaq -7(%r12),%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp stg_ap_p_fast
_ccEfB:
	movq $16,904(%r13)
	jmp stg_gc_noregs
	.size _ccEfo, .-_ccEfo


==================== Asm code ====================
2018-03-16 16:07:33.105969405 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEfo_info:
	.quad	_ccEfo
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.1066784 UTC

.section .text
.align 8
_ccEfr:
_ccEfr:
	movq $block_ccEfw_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _ccEfw
_ccEfD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccEfr, .-_ccEfr


==================== Asm code ====================
2018-03-16 16:07:33.107275956 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEfr_info:
	.quad	_ccEfr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.10794543 UTC

.section .text
.align 8
_ccEfw:
_ccEfw:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccEfw, .-_ccEfw


==================== Asm code ====================
2018-03-16 16:07:33.10855835 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEfw_info:
	.quad	_ccEfw
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.109338672 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_entry
.type Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_entry, @object
Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_entry:
_ccEfJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEfO
_ccEfP:
	movq $block_ccEfe_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccEfe
_ccEff:
	movq (%rbx),%rax
	jmp *(%rax)
_ccEfO:
	movl $Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_closure,%ebx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_entry, .-Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_entry


==================== Asm code ====================
2018-03-16 16:07:33.110037864 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_info
.type Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_info, @object
Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_info:
	.quad	Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:33.110790227 UTC

.section .text
.align 8
_ccEfe:
_ccEfe:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccEfS
_ccEfR:
	movq $sat_scDMh_info,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_ccEfK_info,8(%rbp)
	leaq -7(%r12),%r14
	addq $8,%rbp
	jmp GHC.ST.unsafeDupableInterleaveST_entry
_ccEfS:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccEfe, .-_ccEfe


==================== Asm code ====================
2018-03-16 16:07:33.111404492 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEfe_info:
	.quad	_ccEfe
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.112174071 UTC

.section .text
.align 8
_ccEfK:
_ccEfK:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccEfV
_ccEfU:
	movq $Control.Monad.ST.Lazy.Imp.S#_con_info,-32(%r12)
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccEfV:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _ccEfK, .-_ccEfK


==================== Asm code ====================
2018-03-16 16:07:33.112876567 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEfK_info:
	.quad	_ccEfK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.1152568 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_closure
.type Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_closure, @object
Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_closure:
	.quad	Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_info


==================== Asm code ====================
2018-03-16 16:07:33.115918105 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_entry
.type Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_entry, @object
Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_entry:
_ccEgw:
	jmp Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_entry
	.size Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_entry, .-Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_entry


==================== Asm code ====================
2018-03-16 16:07:33.116563331 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_info
.type Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_info, @object
Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_info:
	.quad	Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:33.118404966 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Monad.ST.Lazy.Imp.$trModule4_bytes
.type Control.Monad.ST.Lazy.Imp.$trModule4_bytes, @object
Control.Monad.ST.Lazy.Imp.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:07:33.120742616 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$trModule3_closure
.type Control.Monad.ST.Lazy.Imp.$trModule3_closure, @object
Control.Monad.ST.Lazy.Imp.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:07:33.122580062 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Monad.ST.Lazy.Imp.$trModule2_bytes
.type Control.Monad.ST.Lazy.Imp.$trModule2_bytes, @object
Control.Monad.ST.Lazy.Imp.$trModule2_bytes:
	.asciz "Control.Monad.ST.Lazy.Imp"


==================== Asm code ====================
2018-03-16 16:07:33.124339978 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$trModule1_closure
.type Control.Monad.ST.Lazy.Imp.$trModule1_closure, @object
Control.Monad.ST.Lazy.Imp.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:07:33.126156061 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$trModule_closure
.type Control.Monad.ST.Lazy.Imp.$trModule_closure, @object
Control.Monad.ST.Lazy.Imp.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$trModule3_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.128143535 UTC

.section .data
.align 8
.align 1
$krep_rcDJ5_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 16:07:33.130469223 UTC

.section .data
.align 8
.align 1
$krep1_rcDJ6_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:33.132307389 UTC

.section .data
.align 8
.align 1
$krep2_rcDJ7_closure:
	.quad	:_con_info
	.quad	$krep1_rcDJ6_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.13416354 UTC

.section .data
.align 8
.align 1
$krep3_rcDJ8_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcState#_closure
	.quad	$krep2_rcDJ7_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.135894658 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tcState2_bytes
.type Control.Monad.ST.Lazy.Imp.$tcState2_bytes, @object
Control.Monad.ST.Lazy.Imp.$tcState2_bytes:
	.asciz "State"


==================== Asm code ====================
2018-03-16 16:07:33.138242591 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tcState1_closure
.type Control.Monad.ST.Lazy.Imp.$tcState1_closure, @object
Control.Monad.ST.Lazy.Imp.$tcState1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$tcState2_bytes


==================== Asm code ====================
2018-03-16 16:07:33.140233682 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tcState_closure
.type Control.Monad.ST.Lazy.Imp.$tcState_closure, @object
Control.Monad.ST.Lazy.Imp.$tcState_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$trModule_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$tcState1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	220923881781706094
	.quad	-5815911220540769458
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.142113638 UTC

.section .data
.align 8
.align 1
$krep4_rcDJ9_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$tcState_closure+1
	.quad	$krep2_rcDJ7_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.14391509 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tc'S#1_closure
.type Control.Monad.ST.Lazy.Imp.$tc'S#1_closure, @object
Control.Monad.ST.Lazy.Imp.$tc'S#1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep3_rcDJ8_closure+1
	.quad	$krep4_rcDJ9_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.145745246 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tc'S#3_bytes
.type Control.Monad.ST.Lazy.Imp.$tc'S#3_bytes, @object
Control.Monad.ST.Lazy.Imp.$tc'S#3_bytes:
	.asciz "'S#"


==================== Asm code ====================
2018-03-16 16:07:33.147613316 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tc'S#2_closure
.type Control.Monad.ST.Lazy.Imp.$tc'S#2_closure, @object
Control.Monad.ST.Lazy.Imp.$tc'S#2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$tc'S#3_bytes


==================== Asm code ====================
2018-03-16 16:07:33.150469203 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tc'S#_closure
.type Control.Monad.ST.Lazy.Imp.$tc'S#_closure, @object
Control.Monad.ST.Lazy.Imp.$tc'S#_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$trModule_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$tc'S#2_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$tc'S#1_closure+4
	.quad	-5741965471434007530
	.quad	1928505377508739254
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.152352898 UTC

.section .data
.align 8
.align 1
$krep5_rcDJa_closure:
	.quad	:_con_info
	.quad	$krep4_rcDJ9_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.154210318 UTC

.section .data
.align 8
.align 1
$krep6_rcDJb_closure:
	.quad	:_con_info
	.quad	$krep_rcDJ5_closure+2
	.quad	$krep5_rcDJa_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.156067453 UTC

.section .data
.align 8
.align 1
$krep7_rcDJc_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Tuple.$tc(,)_closure
	.quad	$krep6_rcDJb_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.157957904 UTC

.section .data
.align 8
.align 1
$krep8_rcDJd_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep4_rcDJ9_closure+1
	.quad	$krep7_rcDJc_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.159661431 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tcST2_bytes
.type Control.Monad.ST.Lazy.Imp.$tcST2_bytes, @object
Control.Monad.ST.Lazy.Imp.$tcST2_bytes:
	.asciz "ST"


==================== Asm code ====================
2018-03-16 16:07:33.16142367 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tcST1_closure
.type Control.Monad.ST.Lazy.Imp.$tcST1_closure, @object
Control.Monad.ST.Lazy.Imp.$tcST1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$tcST2_bytes


==================== Asm code ====================
2018-03-16 16:07:33.163307626 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tcST_closure
.type Control.Monad.ST.Lazy.Imp.$tcST_closure, @object
Control.Monad.ST.Lazy.Imp.$tcST_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$trModule_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$tcST1_closure+1
	.quad	GHC.Types.krep$*->*->*_closure
	.quad	-8687758373550436851
	.quad	4154811637844139714
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.165153118 UTC

.section .data
.align 8
.align 1
$krep9_rcDJe_closure:
	.quad	:_con_info
	.quad	$krep_rcDJ5_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.167324602 UTC

.section .data
.align 8
.align 1
$krep10_rcDJf_closure:
	.quad	:_con_info
	.quad	$krep1_rcDJ6_closure+2
	.quad	$krep9_rcDJe_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.169129171 UTC

.section .data
.align 8
.align 1
$krep11_rcDJg_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$tcST_closure+1
	.quad	$krep10_rcDJf_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.170990857 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tc'ST1_closure
.type Control.Monad.ST.Lazy.Imp.$tc'ST1_closure, @object
Control.Monad.ST.Lazy.Imp.$tc'ST1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep8_rcDJd_closure+4
	.quad	$krep11_rcDJg_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.172871878 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tc'ST3_bytes
.type Control.Monad.ST.Lazy.Imp.$tc'ST3_bytes, @object
Control.Monad.ST.Lazy.Imp.$tc'ST3_bytes:
	.asciz "'ST"


==================== Asm code ====================
2018-03-16 16:07:33.174728876 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tc'ST2_closure
.type Control.Monad.ST.Lazy.Imp.$tc'ST2_closure, @object
Control.Monad.ST.Lazy.Imp.$tc'ST2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$tc'ST3_bytes


==================== Asm code ====================
2018-03-16 16:07:33.177838063 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tc'ST_closure
.type Control.Monad.ST.Lazy.Imp.$tc'ST_closure, @object
Control.Monad.ST.Lazy.Imp.$tc'ST_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$trModule_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$tc'ST2_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$tc'ST1_closure+4
	.quad	5656684040178075861
	.quad	6626797926801395533
	.quad	2
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.180433579 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.S#_closure
.type Control.Monad.ST.Lazy.Imp.S#_closure, @object
Control.Monad.ST.Lazy.Imp.S#_closure:
	.quad	Control.Monad.ST.Lazy.Imp.S#_info


==================== Asm code ====================
2018-03-16 16:07:33.181327112 UTC

.section .text
.align 8
Control.Monad.ST.Lazy.Imp.S#_entry:
_ccEhd:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccEhh
_ccEhg:
	movq $Control.Monad.ST.Lazy.Imp.S#_con_info,-8(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccEhh:
	movq $16,904(%r13)
	movl $Control.Monad.ST.Lazy.Imp.S#_closure,%ebx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.S#_entry, .-Control.Monad.ST.Lazy.Imp.S#_entry


==================== Asm code ====================
2018-03-16 16:07:33.181979423 UTC

.section .data.rel.ro
.align 8
.align 1
Control.Monad.ST.Lazy.Imp.S#_info:
	.quad	Control.Monad.ST.Lazy.Imp.S#_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:07:33.183949408 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
icE39_str:
	.asciz "base:Control.Monad.ST.Lazy.Imp.S#"


==================== Asm code ====================
2018-03-16 16:07:33.184602463 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.S#_con_entry
.type Control.Monad.ST.Lazy.Imp.S#_con_entry, @object
Control.Monad.ST.Lazy.Imp.S#_con_entry:
_ccEhn:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Control.Monad.ST.Lazy.Imp.S#_con_entry, .-Control.Monad.ST.Lazy.Imp.S#_con_entry


==================== Asm code ====================
2018-03-16 16:07:33.185302995 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.S#_con_info
.type Control.Monad.ST.Lazy.Imp.S#_con_info, @object
Control.Monad.ST.Lazy.Imp.S#_con_info:
	.quad	Control.Monad.ST.Lazy.Imp.S#_con_entry
	.quad	4294967296
	.quad	3
	.quad	icE39_str


==================== Asm code ====================
2018-03-16 16:07:33.187077977 UTC

.section .data.rel.ro
.align 8
.align 1
ScDMD_srt:
	.quad	GHC.Err.errorWithoutStackTrace_closure


==================== Asm code ====================
2018-03-16 16:07:33.629187102 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST5_closure
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST5_closure, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST5_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST5_info


==================== Asm code ====================
2018-03-16 16:07:33.630195649 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST5_entry
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST5_entry, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST5_entry:
_ccEkD:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccEkH
_ccEkG:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccEkH:
	movq $24,904(%r13)
	leaq Control.Monad.ST.Lazy.Imp.$fApplicativeST5_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$fApplicativeST5_entry, .-Control.Monad.ST.Lazy.Imp.$fApplicativeST5_entry


==================== Asm code ====================
2018-03-16 16:07:33.630948817 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST5_info
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST5_info, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST5_info:
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST5_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:33.633282893 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_closure
.type Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_closure, @object
Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:33.633973502 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_entry
.type Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_entry, @object
Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_entry:
_ccEkS:
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_entry, .-Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_entry


==================== Asm code ====================
2018-03-16 16:07:33.634653303 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_info
.type Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_info, @object
Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_info:
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	ScEkV_srt


==================== Asm code ====================
2018-03-16 16:07:33.636835552 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unST1_closure
.type Control.Monad.ST.Lazy.Imp.unST1_closure, @object
Control.Monad.ST.Lazy.Imp.unST1_closure:
	.quad	Control.Monad.ST.Lazy.Imp.unST1_info


==================== Asm code ====================
2018-03-16 16:07:33.637552254 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.unST1_entry
.type Control.Monad.ST.Lazy.Imp.unST1_entry, @object
Control.Monad.ST.Lazy.Imp.unST1_entry:
_ccEl4:
	movq %r14,%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size Control.Monad.ST.Lazy.Imp.unST1_entry, .-Control.Monad.ST.Lazy.Imp.unST1_entry


==================== Asm code ====================
2018-03-16 16:07:33.638245804 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unST1_info
.type Control.Monad.ST.Lazy.Imp.unST1_info, @object
Control.Monad.ST.Lazy.Imp.unST1_info:
	.quad	Control.Monad.ST.Lazy.Imp.unST1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:33.640464281 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unST_closure
.type Control.Monad.ST.Lazy.Imp.unST_closure, @object
Control.Monad.ST.Lazy.Imp.unST_closure:
	.quad	Control.Monad.ST.Lazy.Imp.unST_info


==================== Asm code ====================
2018-03-16 16:07:33.641192262 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.unST_entry
.type Control.Monad.ST.Lazy.Imp.unST_entry, @object
Control.Monad.ST.Lazy.Imp.unST_entry:
_ccElf:
	jmp Control.Monad.ST.Lazy.Imp.unST1_entry
	.size Control.Monad.ST.Lazy.Imp.unST_entry, .-Control.Monad.ST.Lazy.Imp.unST_entry


==================== Asm code ====================
2018-03-16 16:07:33.642051801 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unST_info
.type Control.Monad.ST.Lazy.Imp.unST_info, @object
Control.Monad.ST.Lazy.Imp.unST_info:
	.quad	Control.Monad.ST.Lazy.Imp.unST_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:33.645862289 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fMonadST1_closure
.type Control.Monad.ST.Lazy.Imp.$fMonadST1_closure, @object
Control.Monad.ST.Lazy.Imp.$fMonadST1_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadST1_info


==================== Asm code ====================
2018-03-16 16:07:33.646736335 UTC

.section .text
.align 8
res_scEhB_entry:
_ccElw:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccElx
_ccEly:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccElu_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *stg_noDuplicate#@gotpcrel(%rip)
_ccElx:
	jmp *-16(%r13)
	.size res_scEhB_entry, .-res_scEhB_entry


==================== Asm code ====================
2018-03-16 16:07:33.647463592 UTC

.section .data.rel.ro
.align 8
.align 1
res_scEhB_info:
	.quad	res_scEhB_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:33.648170917 UTC

.section .text
.align 8
_ccElu:
_ccElu:
	movq 16(%rbp),%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size _ccElu, .-_ccElu


==================== Asm code ====================
2018-03-16 16:07:33.648860488 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccElu_info:
	.quad	_ccElu
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.649767699 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$fMonadST1_entry
.type Control.Monad.ST.Lazy.Imp.$fMonadST1_entry, @object
Control.Monad.ST.Lazy.Imp.$fMonadST1_entry:
_ccElC:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _ccElG
_ccElF:
	leaq res_scEhB_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-56(%r12)
	movq %rdi,-48(%r12)
	movq stg_sel_1_upd_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	movq %rsi,%rax
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	movq %rax,%rbx
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_ccElG:
	movq $80,904(%r13)
	leaq Control.Monad.ST.Lazy.Imp.$fMonadST1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$fMonadST1_entry, .-Control.Monad.ST.Lazy.Imp.$fMonadST1_entry


==================== Asm code ====================
2018-03-16 16:07:33.650571784 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fMonadST1_info
.type Control.Monad.ST.Lazy.Imp.$fMonadST1_info, @object
Control.Monad.ST.Lazy.Imp.$fMonadST1_info:
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadST1_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:33.656080842 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$w$c<*>_closure
.type Control.Monad.ST.Lazy.Imp.$w$c<*>_closure, @object
Control.Monad.ST.Lazy.Imp.$w$c<*>_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$w$c<*>_info


==================== Asm code ====================
2018-03-16 16:07:33.656901673 UTC

.section .text
.align 8
res4_scEhW_entry:
_ccEmn:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEmo
_ccEmp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccEml_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *stg_noDuplicate#@gotpcrel(%rip)
_ccEmo:
	jmp *-16(%r13)
	.size res4_scEhW_entry, .-res4_scEhW_entry


==================== Asm code ====================
2018-03-16 16:07:33.658098333 UTC

.section .data.rel.ro
.align 8
.align 1
res4_scEhW_info:
	.quad	res4_scEhW_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:33.658765269 UTC

.section .text
.align 8
_ccEml:
_ccEml:
	movq 16(%rbp),%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size _ccEml, .-_ccEml


==================== Asm code ====================
2018-03-16 16:07:33.659410419 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEml_info:
	.quad	_ccEml
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.66034263 UTC

.section .text
.align 8
sat_scEi2_entry:
_ccEmx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEmy
_ccEmz:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccEmB
_ccEmA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_ccEmB:
	movq $24,904(%r13)
_ccEmy:
	jmp *-16(%r13)
	.size sat_scEi2_entry, .-sat_scEi2_entry


==================== Asm code ====================
2018-03-16 16:07:33.661110026 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scEi2_info:
	.quad	sat_scEi2_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:33.661937903 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$w$c<*>_entry
.type Control.Monad.ST.Lazy.Imp.$w$c<*>_entry, @object
Control.Monad.ST.Lazy.Imp.$w$c<*>_entry:
_ccEmC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEmD
_ccEmE:
	leaq block_ccEm8_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq %rdi,%r14
	movq %rax,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_ccEmD:
	leaq Control.Monad.ST.Lazy.Imp.$w$c<*>_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$w$c<*>_entry, .-Control.Monad.ST.Lazy.Imp.$w$c<*>_entry


==================== Asm code ====================
2018-03-16 16:07:33.66355614 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$w$c<*>_info
.type Control.Monad.ST.Lazy.Imp.$w$c<*>_info, @object
Control.Monad.ST.Lazy.Imp.$w$c<*>_info:
	.quad	Control.Monad.ST.Lazy.Imp.$w$c<*>_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:33.664272583 UTC

.section .text
.align 8
_ccEm8:
_ccEm8:
	leaq block_ccEmc_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _ccEmc
_ccEmd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccEm8, .-_ccEm8


==================== Asm code ====================
2018-03-16 16:07:33.664914253 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEm8_info:
	.quad	_ccEm8
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.665759378 UTC

.section .text
.align 8
_ccEmc:
_ccEmc:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _ccEmJ
_ccEmI:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq res4_scEhW_info(%rip),%rcx
	movq %rcx,-80(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-64(%r12)
	movq %rbx,-56(%r12)
	movq stg_sel_1_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	leaq -80(%r12),%rbx
	movq %rbx,-32(%r12)
	leaq sat_scEi2_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -48(%r12),%r14
	leaq -24(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccEmJ:
	movq $88,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccEmc, .-_ccEmc


==================== Asm code ====================
2018-03-16 16:07:33.666531184 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEmc_info:
	.quad	_ccEmc
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.669727529 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST4_closure
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST4_closure, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST4_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST4_info


==================== Asm code ====================
2018-03-16 16:07:33.670514476 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST4_entry
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST4_entry, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST4_entry:
_ccEns:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEnt
_ccEnu:
	leaq block_ccEnp_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp Control.Monad.ST.Lazy.Imp.$w$c<*>_entry
_ccEnt:
	leaq Control.Monad.ST.Lazy.Imp.$fApplicativeST4_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$fApplicativeST4_entry, .-Control.Monad.ST.Lazy.Imp.$fApplicativeST4_entry


==================== Asm code ====================
2018-03-16 16:07:33.671216335 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST4_info
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST4_info, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST4_info:
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST4_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:33.67195818 UTC

.section .text
.align 8
_ccEnp:
_ccEnp:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccEnx
_ccEnw:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccEnx:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccEnp, .-_ccEnp


==================== Asm code ====================
2018-03-16 16:07:33.672619008 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEnp_info:
	.quad	_ccEnp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.678631387 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$w$cliftA2_closure
.type Control.Monad.ST.Lazy.Imp.$w$cliftA2_closure, @object
Control.Monad.ST.Lazy.Imp.$w$cliftA2_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$w$cliftA2_info


==================== Asm code ====================
2018-03-16 16:07:33.679479583 UTC

.section .text
.align 8
res1_scEih_entry:
_ccEnT:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEnU
_ccEnV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccEnR_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *stg_noDuplicate#@gotpcrel(%rip)
_ccEnU:
	jmp *-16(%r13)
	.size res1_scEih_entry, .-res1_scEih_entry


==================== Asm code ====================
2018-03-16 16:07:33.680165997 UTC

.section .data.rel.ro
.align 8
.align 1
res1_scEih_info:
	.quad	res1_scEih_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:33.680876092 UTC

.section .text
.align 8
_ccEnR:
_ccEnR:
	movq 16(%rbp),%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size _ccEnR, .-_ccEnR


==================== Asm code ====================
2018-03-16 16:07:33.681557825 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEnR_info:
	.quad	_ccEnR
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.682329609 UTC

.section .text
.align 8
res2_scEij_entry:
_ccEo4:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEo5
_ccEo6:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccEo1_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *stg_noDuplicate#@gotpcrel(%rip)
_ccEo5:
	jmp *-16(%r13)
	.size res2_scEij_entry, .-res2_scEij_entry


==================== Asm code ====================
2018-03-16 16:07:33.683041719 UTC

.section .data.rel.ro
.align 8
.align 1
res2_scEij_info:
	.quad	res2_scEij_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:33.683824763 UTC

.section .text
.align 8
_ccEo1:
_ccEo1:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccEo9
_ccEo8:
	movq stg_sel_1_upd_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -16(%r12),%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_ccEo9:
	movq $24,904(%r13)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _ccEo1, .-_ccEo1


==================== Asm code ====================
2018-03-16 16:07:33.684544649 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEo1_info:
	.quad	_ccEo1
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.685432505 UTC

.section .text
.align 8
sat_scEix_entry:
_ccEoh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEoi
_ccEoj:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _ccEol
_ccEok:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rdx
	movq %rdx,-40(%r12)
	movq %rbx,-24(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,(%r12)
	leaq -40(%r12),%rsi
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_ccEol:
	movq $48,904(%r13)
_ccEoi:
	jmp *-16(%r13)
	.size sat_scEix_entry, .-sat_scEix_entry


==================== Asm code ====================
2018-03-16 16:07:33.686207715 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scEix_info:
	.quad	sat_scEix_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 16:07:33.687062384 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$w$cliftA2_entry
.type Control.Monad.ST.Lazy.Imp.$w$cliftA2_entry, @object
Control.Monad.ST.Lazy.Imp.$w$cliftA2_entry:
_ccEom:
	addq $128,%r12
	cmpq 856(%r13),%r12
	ja _ccEoq
_ccEop:
	leaq res1_scEih_info(%rip),%rax
	movq %rax,-120(%r12)
	movq %rsi,-104(%r12)
	movq %r8,-96(%r12)
	leaq res2_scEij_info(%rip),%rax
	movq %rax,-88(%r12)
	movq %rdi,-72(%r12)
	leaq -120(%r12),%rax
	movq %rax,-64(%r12)
	movq stg_sel_1_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-56(%r12)
	leaq -88(%r12),%rbx
	movq %rbx,-40(%r12)
	leaq sat_scEix_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %r14,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -56(%r12),%r14
	leaq -32(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccEoq:
	movq $128,904(%r13)
	leaq Control.Monad.ST.Lazy.Imp.$w$cliftA2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$w$cliftA2_entry, .-Control.Monad.ST.Lazy.Imp.$w$cliftA2_entry


==================== Asm code ====================
2018-03-16 16:07:33.687866613 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$w$cliftA2_info
.type Control.Monad.ST.Lazy.Imp.$w$cliftA2_info, @object
Control.Monad.ST.Lazy.Imp.$w$cliftA2_info:
	.quad	Control.Monad.ST.Lazy.Imp.$w$cliftA2_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:07:33.691215401 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST3_closure
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST3_closure, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST3_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST3_info


==================== Asm code ====================
2018-03-16 16:07:33.692013028 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST3_entry
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST3_entry, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST3_entry:
_ccEpc:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEpd
_ccEpe:
	leaq block_ccEp9_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp Control.Monad.ST.Lazy.Imp.$w$cliftA2_entry
_ccEpd:
	leaq Control.Monad.ST.Lazy.Imp.$fApplicativeST3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$fApplicativeST3_entry, .-Control.Monad.ST.Lazy.Imp.$fApplicativeST3_entry


==================== Asm code ====================
2018-03-16 16:07:33.692727913 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST3_info
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST3_info, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST3_info:
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST3_entry
	.quad	0
	.quad	14
	.quad	17179869208


==================== Asm code ====================
2018-03-16 16:07:33.69409566 UTC

.section .text
.align 8
_ccEp9:
_ccEp9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccEph
_ccEpg:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccEph:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccEp9, .-_ccEp9


==================== Asm code ====================
2018-03-16 16:07:33.694802551 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEp9_info:
	.quad	_ccEp9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.698665884 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST2_closure
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST2_closure, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST2_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST2_info


==================== Asm code ====================
2018-03-16 16:07:33.699441823 UTC

.section .text
.align 8
s'_scEiM_entry:
_ccEpF:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEpG
_ccEpH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccEpB_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *stg_noDuplicate#@gotpcrel(%rip)
_ccEpG:
	jmp *-16(%r13)
	.size s'_scEiM_entry, .-s'_scEiM_entry


==================== Asm code ====================
2018-03-16 16:07:33.700156978 UTC

.section .data.rel.ro
.align 8
.align 1
s'_scEiM_info:
	.quad	s'_scEiM_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:33.700818181 UTC

.section .text
.align 8
_ccEpB:
_ccEpB:
	movq 16(%rbp),%rax
	leaq block_ccEpD_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size _ccEpB, .-_ccEpB


==================== Asm code ====================
2018-03-16 16:07:33.701973781 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEpB_info:
	.quad	_ccEpB
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.702685197 UTC

.section .text
.align 8
_ccEpD:
_ccEpD:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccEpD, .-_ccEpD


==================== Asm code ====================
2018-03-16 16:07:33.703907796 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEpD_info:
	.quad	_ccEpD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.704709483 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST2_entry
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST2_entry, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST2_entry:
_ccEpM:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccEpQ
_ccEpP:
	leaq s'_scEiM_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	leaq -24(%r12),%r14
	movq %rsi,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_ccEpQ:
	movq $32,904(%r13)
	leaq Control.Monad.ST.Lazy.Imp.$fApplicativeST2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$fApplicativeST2_entry, .-Control.Monad.ST.Lazy.Imp.$fApplicativeST2_entry


==================== Asm code ====================
2018-03-16 16:07:33.70548514 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST2_info
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST2_info, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST2_info:
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST2_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:33.710513317 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$w$c<*_closure
.type Control.Monad.ST.Lazy.Imp.$w$c<*_closure, @object
Control.Monad.ST.Lazy.Imp.$w$c<*_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$w$c<*_info


==================== Asm code ====================
2018-03-16 16:07:33.711291995 UTC

.section .text
.align 8
s''_scEj2_entry:
_ccEqD:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEqE
_ccEqF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccEqz_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *stg_noDuplicate#@gotpcrel(%rip)
_ccEqE:
	jmp *-16(%r13)
	.size s''_scEj2_entry, .-s''_scEj2_entry


==================== Asm code ====================
2018-03-16 16:07:33.711999915 UTC

.section .data.rel.ro
.align 8
.align 1
s''_scEj2_info:
	.quad	s''_scEj2_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:33.712663702 UTC

.section .text
.align 8
_ccEqz:
_ccEqz:
	movq 16(%rbp),%rax
	leaq block_ccEqB_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size _ccEqz, .-_ccEqz


==================== Asm code ====================
2018-03-16 16:07:33.713353099 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEqz_info:
	.quad	_ccEqz
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.71406097 UTC

.section .text
.align 8
_ccEqB:
_ccEqB:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccEqB, .-_ccEqB


==================== Asm code ====================
2018-03-16 16:07:33.71470282 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEqB_info:
	.quad	_ccEqB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.715458011 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$w$c<*_entry
.type Control.Monad.ST.Lazy.Imp.$w$c<*_entry, @object
Control.Monad.ST.Lazy.Imp.$w$c<*_entry:
_ccEqK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEqL
_ccEqM:
	leaq block_ccEqm_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq %rdi,%r14
	movq %rax,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_ccEqL:
	leaq Control.Monad.ST.Lazy.Imp.$w$c<*_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$w$c<*_entry, .-Control.Monad.ST.Lazy.Imp.$w$c<*_entry


==================== Asm code ====================
2018-03-16 16:07:33.716159183 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$w$c<*_info
.type Control.Monad.ST.Lazy.Imp.$w$c<*_info, @object
Control.Monad.ST.Lazy.Imp.$w$c<*_info:
	.quad	Control.Monad.ST.Lazy.Imp.$w$c<*_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:33.716899364 UTC

.section .text
.align 8
_ccEqm:
_ccEqm:
	leaq block_ccEqq_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _ccEqq
_ccEqr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccEqm, .-_ccEqm


==================== Asm code ====================
2018-03-16 16:07:33.717562297 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEqm_info:
	.quad	_ccEqm
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.718365325 UTC

.section .text
.align 8
_ccEqq:
_ccEqq:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccEqR
_ccEqQ:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	leaq s''_scEj2_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%r14
	movq %rax,%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccEqR:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccEqq, .-_ccEqq


==================== Asm code ====================
2018-03-16 16:07:33.719058122 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEqq_info:
	.quad	_ccEqq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.722565768 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST1_closure
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST1_closure, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST1_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST1_info


==================== Asm code ====================
2018-03-16 16:07:33.723366868 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST1_entry
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST1_entry, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST1_entry:
_ccEry:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccErz
_ccErA:
	leaq block_ccErv_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp Control.Monad.ST.Lazy.Imp.$w$c<*_entry
_ccErz:
	leaq Control.Monad.ST.Lazy.Imp.$fApplicativeST1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$fApplicativeST1_entry, .-Control.Monad.ST.Lazy.Imp.$fApplicativeST1_entry


==================== Asm code ====================
2018-03-16 16:07:33.724104257 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST1_info
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST1_info, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST1_info:
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST1_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:33.724887844 UTC

.section .text
.align 8
_ccErv:
_ccErv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccErD
_ccErC:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccErD:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _ccErv, .-_ccErv


==================== Asm code ====================
2018-03-16 16:07:33.725641821 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccErv_info:
	.quad	_ccErv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.730117692 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fFunctorST2_closure
.type Control.Monad.ST.Lazy.Imp.$fFunctorST2_closure, @object
Control.Monad.ST.Lazy.Imp.$fFunctorST2_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$fFunctorST2_info


==================== Asm code ====================
2018-03-16 16:07:33.730913538 UTC

.section .text
.align 8
res_scEjg_entry:
_ccErZ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEs0
_ccEs1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccErX_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *stg_noDuplicate#@gotpcrel(%rip)
_ccEs0:
	jmp *-16(%r13)
	.size res_scEjg_entry, .-res_scEjg_entry


==================== Asm code ====================
2018-03-16 16:07:33.731651105 UTC

.section .data.rel.ro
.align 8
.align 1
res_scEjg_info:
	.quad	res_scEjg_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:33.732317433 UTC

.section .text
.align 8
_ccErX:
_ccErX:
	movq 16(%rbp),%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size _ccErX, .-_ccErX


==================== Asm code ====================
2018-03-16 16:07:33.732984421 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccErX_info:
	.quad	_ccErX
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.734277148 UTC

.section .text
.align 8
sat_scEjm_entry:
_ccEs9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEsa
_ccEsb:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccEsd
_ccEsc:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_ccEsd:
	movq $24,904(%r13)
_ccEsa:
	jmp *-16(%r13)
	.size sat_scEjm_entry, .-sat_scEjm_entry


==================== Asm code ====================
2018-03-16 16:07:33.735017613 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scEjm_info:
	.quad	sat_scEjm_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:33.735923133 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$fFunctorST2_entry
.type Control.Monad.ST.Lazy.Imp.$fFunctorST2_entry, @object
Control.Monad.ST.Lazy.Imp.$fFunctorST2_entry:
_ccEsf:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _ccEsj
_ccEsi:
	leaq res_scEjg_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %rsi,-88(%r12)
	movq %rdi,-80(%r12)
	movq stg_sel_1_upd_info@gotpcrel(%rip),%rax
	movq %rax,-72(%r12)
	leaq -104(%r12),%rax
	movq %rax,-56(%r12)
	leaq sat_scEjm_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %r14,-32(%r12)
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccEsj:
	movq $112,904(%r13)
	leaq Control.Monad.ST.Lazy.Imp.$fFunctorST2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$fFunctorST2_entry, .-Control.Monad.ST.Lazy.Imp.$fFunctorST2_entry


==================== Asm code ====================
2018-03-16 16:07:33.736736758 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fFunctorST2_info
.type Control.Monad.ST.Lazy.Imp.$fFunctorST2_info, @object
Control.Monad.ST.Lazy.Imp.$fFunctorST2_info:
	.quad	Control.Monad.ST.Lazy.Imp.$fFunctorST2_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:33.740708862 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fFunctorST1_closure
.type Control.Monad.ST.Lazy.Imp.$fFunctorST1_closure, @object
Control.Monad.ST.Lazy.Imp.$fFunctorST1_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$fFunctorST1_info


==================== Asm code ====================
2018-03-16 16:07:33.741546724 UTC

.section .text
.align 8
s'_scEju_entry:
_ccEsY:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEsZ
_ccEt0:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_ccEsU_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *stg_noDuplicate#@gotpcrel(%rip)
_ccEsZ:
	jmp *-16(%r13)
	.size s'_scEju_entry, .-s'_scEju_entry


==================== Asm code ====================
2018-03-16 16:07:33.742264327 UTC

.section .data.rel.ro
.align 8
.align 1
s'_scEju_info:
	.quad	s'_scEju_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:33.743021334 UTC

.section .text
.align 8
_ccEsU:
_ccEsU:
	movq 16(%rbp),%rax
	leaq block_ccEsW_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size _ccEsU, .-_ccEsU


==================== Asm code ====================
2018-03-16 16:07:33.743651 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEsU_info:
	.quad	_ccEsU
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.744961674 UTC

.section .text
.align 8
_ccEsW:
_ccEsW:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccEsW, .-_ccEsW


==================== Asm code ====================
2018-03-16 16:07:33.745963818 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEsW_info:
	.quad	_ccEsW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.746761448 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$fFunctorST1_entry
.type Control.Monad.ST.Lazy.Imp.$fFunctorST1_entry, @object
Control.Monad.ST.Lazy.Imp.$fFunctorST1_entry:
_ccEt6:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _ccEta
_ccEt9:
	leaq s'_scEju_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccEta:
	movq $56,904(%r13)
	leaq Control.Monad.ST.Lazy.Imp.$fFunctorST1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$fFunctorST1_entry, .-Control.Monad.ST.Lazy.Imp.$fFunctorST1_entry


==================== Asm code ====================
2018-03-16 16:07:33.74748036 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fFunctorST1_info
.type Control.Monad.ST.Lazy.Imp.$fFunctorST1_info, @object
Control.Monad.ST.Lazy.Imp.$fFunctorST1_info:
	.quad	Control.Monad.ST.Lazy.Imp.$fFunctorST1_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 16:07:33.749286578 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fFunctorST_closure
.type Control.Monad.ST.Lazy.Imp.$fFunctorST_closure, @object
Control.Monad.ST.Lazy.Imp.$fFunctorST_closure:
	.quad	GHC.Base.C:Functor_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$fFunctorST2_closure+3
	.quad	Control.Monad.ST.Lazy.Imp.$fFunctorST1_closure+3
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.751157834 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fApplicativeST_closure
.type Control.Monad.ST.Lazy.Imp.$fApplicativeST_closure, @object
Control.Monad.ST.Lazy.Imp.$fApplicativeST_closure:
	.quad	GHC.Base.C:Applicative_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$fFunctorST_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST5_closure+2
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST4_closure+3
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST3_closure+4
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST2_closure+3
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST1_closure+3
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.752994532 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fMonadST_closure
.type Control.Monad.ST.Lazy.Imp.$fMonadST_closure, @object
Control.Monad.ST.Lazy.Imp.$fMonadST_closure:
	.quad	GHC.Base.C:Monad_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadST1_closure+3
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST2_closure+3
	.quad	Control.Monad.ST.Lazy.Imp.$fApplicativeST5_closure+2
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:33.754924294 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fMonadFailST_closure
.type Control.Monad.ST.Lazy.Imp.$fMonadFailST_closure, @object
Control.Monad.ST.Lazy.Imp.$fMonadFailST_closure:
	.quad	Control.Monad.Fail.C:MonadFail_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadST_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadFailST_$cfail_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:33.757963769 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.runST_closure
.type Control.Monad.ST.Lazy.Imp.runST_closure, @object
Control.Monad.ST.Lazy.Imp.runST_closure:
	.quad	Control.Monad.ST.Lazy.Imp.runST_info


==================== Asm code ====================
2018-03-16 16:07:33.758846602 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.runST_entry
.type Control.Monad.ST.Lazy.Imp.runST_entry, @object
Control.Monad.ST.Lazy.Imp.runST_entry:
_ccEtL:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEtM
_ccEtN:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccEtP
_ccEtO:
	leaq Control.Monad.ST.Lazy.Imp.S#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq block_ccEtJ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rax
	leaq -7(%r12),%r14
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_ccEtP:
	movq $16,904(%r13)
_ccEtM:
	leaq Control.Monad.ST.Lazy.Imp.runST_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.runST_entry, .-Control.Monad.ST.Lazy.Imp.runST_entry


==================== Asm code ====================
2018-03-16 16:07:33.759581867 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.runST_info
.type Control.Monad.ST.Lazy.Imp.runST_info, @object
Control.Monad.ST.Lazy.Imp.runST_info:
	.quad	Control.Monad.ST.Lazy.Imp.runST_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 16:07:33.760253354 UTC

.section .text
.align 8
_ccEtJ:
_ccEtJ:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _ccEtJ, .-_ccEtJ


==================== Asm code ====================
2018-03-16 16:07:33.7608935 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEtJ_info:
	.quad	_ccEtJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.76547212 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fMonadFixST1_closure
.type Control.Monad.ST.Lazy.Imp.$fMonadFixST1_closure, @object
Control.Monad.ST.Lazy.Imp.$fMonadFixST1_closure:
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadFixST1_info


==================== Asm code ====================
2018-03-16 16:07:33.766322862 UTC

.section .text
.align 8
ds_scEjG_entry:
_ccEue:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEui
_ccEuj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ccEul
_ccEuk:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq stg_sel_1_upd_info@gotpcrel(%rip),%rdx
	movq %rdx,-16(%r12)
	movq %rbx,(%r12)
	leaq block_ccEuc_info(%rip),%rbx
	movq %rbx,-24(%rbp)
	movq %rcx,%rsi
	leaq -16(%r12),%r14
	movq %rax,%rbx
	addq $-24,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_ccEul:
	movq $24,904(%r13)
_ccEui:
	jmp *-16(%r13)
	.size ds_scEjG_entry, .-ds_scEjG_entry


==================== Asm code ====================
2018-03-16 16:07:33.767062577 UTC

.section .data.rel.ro
.align 8
.align 1
ds_scEjG_info:
	.quad	ds_scEjG_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 16:07:33.767829022 UTC

.section .text
.align 8
_ccEuc:
_ccEuc:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccEuo
_ccEun:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq (,,)_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -23(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccEuo:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccEuc, .-_ccEuc


==================== Asm code ====================
2018-03-16 16:07:33.768541058 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEuc_info:
	.quad	_ccEuc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.770216895 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.$fMonadFixST1_entry
.type Control.Monad.ST.Lazy.Imp.$fMonadFixST1_entry, @object
Control.Monad.ST.Lazy.Imp.$fMonadFixST1_entry:
_ccEus:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEut
_ccEuu:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ccEuw
_ccEuv:
	leaq ds_scEjG_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq block_ccEup_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -24(%r12),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _ccEup
_ccEuq:
	movq (%rbx),%rax
	jmp *(%rax)
_ccEuw:
	movq $32,904(%r13)
_ccEut:
	leaq Control.Monad.ST.Lazy.Imp.$fMonadFixST1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.$fMonadFixST1_entry, .-Control.Monad.ST.Lazy.Imp.$fMonadFixST1_entry


==================== Asm code ====================
2018-03-16 16:07:33.77097134 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fMonadFixST1_info
.type Control.Monad.ST.Lazy.Imp.$fMonadFixST1_info, @object
Control.Monad.ST.Lazy.Imp.$fMonadFixST1_info:
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadFixST1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:33.771680819 UTC

.section .text
.align 8
_ccEup:
_ccEup:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccEup, .-_ccEup


==================== Asm code ====================
2018-03-16 16:07:33.772338996 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEup_info:
	.quad	_ccEup
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.774723543 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.fixST_closure
.type Control.Monad.ST.Lazy.Imp.fixST_closure, @object
Control.Monad.ST.Lazy.Imp.fixST_closure:
	.quad	Control.Monad.ST.Lazy.Imp.fixST_info


==================== Asm code ====================
2018-03-16 16:07:33.775363228 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.fixST_entry
.type Control.Monad.ST.Lazy.Imp.fixST_entry, @object
Control.Monad.ST.Lazy.Imp.fixST_entry:
_ccEv4:
	jmp Control.Monad.ST.Lazy.Imp.$fMonadFixST1_entry
	.size Control.Monad.ST.Lazy.Imp.fixST_entry, .-Control.Monad.ST.Lazy.Imp.fixST_entry


==================== Asm code ====================
2018-03-16 16:07:33.775974843 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.fixST_info
.type Control.Monad.ST.Lazy.Imp.fixST_info, @object
Control.Monad.ST.Lazy.Imp.fixST_info:
	.quad	Control.Monad.ST.Lazy.Imp.fixST_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:33.777904227 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$fMonadFixST_closure
.type Control.Monad.ST.Lazy.Imp.$fMonadFixST_closure, @object
Control.Monad.ST.Lazy.Imp.$fMonadFixST_closure:
	.quad	Control.Monad.Fix.C:MonadFix_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadST_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$fMonadFixST1_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:33.782328172 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.strictToLazyST1_closure
.type Control.Monad.ST.Lazy.Imp.strictToLazyST1_closure, @object
Control.Monad.ST.Lazy.Imp.strictToLazyST1_closure:
	.quad	Control.Monad.ST.Lazy.Imp.strictToLazyST1_info


==================== Asm code ====================
2018-03-16 16:07:33.783144598 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.strictToLazyST1_entry
.type Control.Monad.ST.Lazy.Imp.strictToLazyST1_entry, @object
Control.Monad.ST.Lazy.Imp.strictToLazyST1_entry:
_ccEvj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEvq
_ccEvr:
	leaq block_ccEvg_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccEvg
_ccEvh:
	movq (%rbx),%rax
	jmp *(%rax)
_ccEvq:
	leaq Control.Monad.ST.Lazy.Imp.strictToLazyST1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.strictToLazyST1_entry, .-Control.Monad.ST.Lazy.Imp.strictToLazyST1_entry


==================== Asm code ====================
2018-03-16 16:07:33.783877667 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.strictToLazyST1_info
.type Control.Monad.ST.Lazy.Imp.strictToLazyST1_info, @object
Control.Monad.ST.Lazy.Imp.strictToLazyST1_info:
	.quad	Control.Monad.ST.Lazy.Imp.strictToLazyST1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:33.784590067 UTC

.section .text
.align 8
_ccEvg:
_ccEvg:
	movq 8(%rbp),%rax
	leaq block_ccEvm_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _ccEvg, .-_ccEvg


==================== Asm code ====================
2018-03-16 16:07:33.785259394 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEvg_info:
	.quad	_ccEvg
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.786066683 UTC

.section .text
.align 8
_ccEvm:
_ccEvm:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccEvv
_ccEvu:
	leaq Control.Monad.ST.Lazy.Imp.S#_con_info(%rip),%rax
	movq %rax,-32(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccEvv:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccEvm, .-_ccEvm


==================== Asm code ====================
2018-03-16 16:07:33.786787022 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEvm_info:
	.quad	_ccEvm
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.788985032 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.strictToLazyST_closure
.type Control.Monad.ST.Lazy.Imp.strictToLazyST_closure, @object
Control.Monad.ST.Lazy.Imp.strictToLazyST_closure:
	.quad	Control.Monad.ST.Lazy.Imp.strictToLazyST_info


==================== Asm code ====================
2018-03-16 16:07:33.78970244 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.strictToLazyST_entry
.type Control.Monad.ST.Lazy.Imp.strictToLazyST_entry, @object
Control.Monad.ST.Lazy.Imp.strictToLazyST_entry:
_ccEvT:
	jmp Control.Monad.ST.Lazy.Imp.strictToLazyST1_entry
	.size Control.Monad.ST.Lazy.Imp.strictToLazyST_entry, .-Control.Monad.ST.Lazy.Imp.strictToLazyST_entry


==================== Asm code ====================
2018-03-16 16:07:33.790293545 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.strictToLazyST_info
.type Control.Monad.ST.Lazy.Imp.strictToLazyST_info, @object
Control.Monad.ST.Lazy.Imp.strictToLazyST_info:
	.quad	Control.Monad.ST.Lazy.Imp.strictToLazyST_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:33.794226366 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unsafeIOToST1_closure
.type Control.Monad.ST.Lazy.Imp.unsafeIOToST1_closure, @object
Control.Monad.ST.Lazy.Imp.unsafeIOToST1_closure:
	.quad	Control.Monad.ST.Lazy.Imp.unsafeIOToST1_info


==================== Asm code ====================
2018-03-16 16:07:33.795042219 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.unsafeIOToST1_entry
.type Control.Monad.ST.Lazy.Imp.unsafeIOToST1_entry, @object
Control.Monad.ST.Lazy.Imp.unsafeIOToST1_entry:
_ccEw7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEwe
_ccEwf:
	leaq block_ccEw4_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccEw4
_ccEw5:
	movq (%rbx),%rax
	jmp *(%rax)
_ccEwe:
	leaq Control.Monad.ST.Lazy.Imp.unsafeIOToST1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.unsafeIOToST1_entry, .-Control.Monad.ST.Lazy.Imp.unsafeIOToST1_entry


==================== Asm code ====================
2018-03-16 16:07:33.795753284 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unsafeIOToST1_info
.type Control.Monad.ST.Lazy.Imp.unsafeIOToST1_info, @object
Control.Monad.ST.Lazy.Imp.unsafeIOToST1_info:
	.quad	Control.Monad.ST.Lazy.Imp.unsafeIOToST1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:33.796457736 UTC

.section .text
.align 8
_ccEw4:
_ccEw4:
	movq 8(%rbp),%rax
	leaq block_ccEwa_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	jmp *stg_ap_v_fast@gotpcrel(%rip)
	.size _ccEw4, .-_ccEw4


==================== Asm code ====================
2018-03-16 16:07:33.797108307 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEw4_info:
	.quad	_ccEw4
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.79790169 UTC

.section .text
.align 8
_ccEwa:
_ccEwa:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccEwj
_ccEwi:
	leaq Control.Monad.ST.Lazy.Imp.S#_con_info(%rip),%rax
	movq %rax,-32(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccEwj:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccEwa, .-_ccEwa


==================== Asm code ====================
2018-03-16 16:07:33.7985938 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEwa_info:
	.quad	_ccEwa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.800808676 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unsafeIOToST_closure
.type Control.Monad.ST.Lazy.Imp.unsafeIOToST_closure, @object
Control.Monad.ST.Lazy.Imp.unsafeIOToST_closure:
	.quad	Control.Monad.ST.Lazy.Imp.unsafeIOToST_info


==================== Asm code ====================
2018-03-16 16:07:33.801515867 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.unsafeIOToST_entry
.type Control.Monad.ST.Lazy.Imp.unsafeIOToST_entry, @object
Control.Monad.ST.Lazy.Imp.unsafeIOToST_entry:
_ccEwH:
	jmp Control.Monad.ST.Lazy.Imp.unsafeIOToST1_entry
	.size Control.Monad.ST.Lazy.Imp.unsafeIOToST_entry, .-Control.Monad.ST.Lazy.Imp.unsafeIOToST_entry


==================== Asm code ====================
2018-03-16 16:07:33.802082208 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unsafeIOToST_info
.type Control.Monad.ST.Lazy.Imp.unsafeIOToST_info, @object
Control.Monad.ST.Lazy.Imp.unsafeIOToST_info:
	.quad	Control.Monad.ST.Lazy.Imp.unsafeIOToST_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:33.805755339 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.lazyToStrictST1_closure
.type Control.Monad.ST.Lazy.Imp.lazyToStrictST1_closure, @object
Control.Monad.ST.Lazy.Imp.lazyToStrictST1_closure:
	.quad	Control.Monad.ST.Lazy.Imp.lazyToStrictST1_info


==================== Asm code ====================
2018-03-16 16:07:33.806626094 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.lazyToStrictST1_entry
.type Control.Monad.ST.Lazy.Imp.lazyToStrictST1_entry, @object
Control.Monad.ST.Lazy.Imp.lazyToStrictST1_entry:
_ccEwV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEwZ
_ccEx0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccEx2
_ccEx1:
	leaq Control.Monad.ST.Lazy.Imp.S#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq block_ccEwT_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rax
	leaq -7(%r12),%r14
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_ccEx2:
	movq $16,904(%r13)
_ccEwZ:
	leaq Control.Monad.ST.Lazy.Imp.lazyToStrictST1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.lazyToStrictST1_entry, .-Control.Monad.ST.Lazy.Imp.lazyToStrictST1_entry


==================== Asm code ====================
2018-03-16 16:07:33.807363028 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.lazyToStrictST1_info
.type Control.Monad.ST.Lazy.Imp.lazyToStrictST1_info, @object
Control.Monad.ST.Lazy.Imp.lazyToStrictST1_info:
	.quad	Control.Monad.ST.Lazy.Imp.lazyToStrictST1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:07:33.808118603 UTC

.section .text
.align 8
_ccEwT:
_ccEwT:
	leaq block_ccEwY_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _ccEwY
_ccEx4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccEwT, .-_ccEwT


==================== Asm code ====================
2018-03-16 16:07:33.808826173 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEwT_info:
	.quad	_ccEwT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.809539646 UTC

.section .text
.align 8
_ccEwY:
_ccEwY:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccEwY, .-_ccEwY


==================== Asm code ====================
2018-03-16 16:07:33.810156497 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEwY_info:
	.quad	_ccEwY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.812344758 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.lazyToStrictST_closure
.type Control.Monad.ST.Lazy.Imp.lazyToStrictST_closure, @object
Control.Monad.ST.Lazy.Imp.lazyToStrictST_closure:
	.quad	Control.Monad.ST.Lazy.Imp.lazyToStrictST_info


==================== Asm code ====================
2018-03-16 16:07:33.812987371 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.lazyToStrictST_entry
.type Control.Monad.ST.Lazy.Imp.lazyToStrictST_entry, @object
Control.Monad.ST.Lazy.Imp.lazyToStrictST_entry:
_ccExu:
	jmp Control.Monad.ST.Lazy.Imp.lazyToStrictST1_entry
	.size Control.Monad.ST.Lazy.Imp.lazyToStrictST_entry, .-Control.Monad.ST.Lazy.Imp.lazyToStrictST_entry


==================== Asm code ====================
2018-03-16 16:07:33.813668561 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.lazyToStrictST_info
.type Control.Monad.ST.Lazy.Imp.lazyToStrictST_info, @object
Control.Monad.ST.Lazy.Imp.lazyToStrictST_info:
	.quad	Control.Monad.ST.Lazy.Imp.lazyToStrictST_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:07:33.816426886 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.stToIO_closure
.type Control.Monad.ST.Lazy.Imp.stToIO_closure, @object
Control.Monad.ST.Lazy.Imp.stToIO_closure:
	.quad	Control.Monad.ST.Lazy.Imp.stToIO_info


==================== Asm code ====================
2018-03-16 16:07:33.817058102 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.stToIO_entry
.type Control.Monad.ST.Lazy.Imp.stToIO_entry, @object
Control.Monad.ST.Lazy.Imp.stToIO_entry:
_ccExF:
	jmp Control.Monad.ST.Lazy.Imp.lazyToStrictST1_entry
	.size Control.Monad.ST.Lazy.Imp.stToIO_entry, .-Control.Monad.ST.Lazy.Imp.stToIO_entry


==================== Asm code ====================
2018-03-16 16:07:33.8180643 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.stToIO_info
.type Control.Monad.ST.Lazy.Imp.stToIO_info, @object
Control.Monad.ST.Lazy.Imp.stToIO_info:
	.quad	Control.Monad.ST.Lazy.Imp.stToIO_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:07:33.82346081 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_closure
.type Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_closure, @object
Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_closure:
	.quad	Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_info


==================== Asm code ====================
2018-03-16 16:07:33.824238201 UTC

.section .text
.align 8
sat_scEkt_entry:
_ccEy5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEy9
_ccEya:
	leaq block_ccEy0_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_noDuplicate#@gotpcrel(%rip)
_ccEy9:
	jmp *-8(%r13)
	.size sat_scEkt_entry, .-sat_scEkt_entry


==================== Asm code ====================
2018-03-16 16:07:33.82492553 UTC

.section .data.rel.ro
.align 8
.align 1
sat_scEkt_info:
	.quad	sat_scEkt_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:07:33.825716061 UTC

.section .text
.align 8
_ccEy0:
_ccEy0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccEyd
_ccEyc:
	leaq Control.Monad.ST.Lazy.Imp.S#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	leaq block_ccEy3_info(%rip),%rbx
	movq %rbx,8(%rbp)
	leaq -7(%r12),%r14
	movq %rax,%rbx
	addq $8,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_ccEyd:
	movq $16,904(%r13)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _ccEy0, .-_ccEy0


==================== Asm code ====================
2018-03-16 16:07:33.826445071 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEy0_info:
	.quad	_ccEy0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.827213767 UTC

.section .text
.align 8
_ccEy3:
_ccEy3:
	leaq block_ccEy8_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _ccEy8
_ccEyf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _ccEy3, .-_ccEy3


==================== Asm code ====================
2018-03-16 16:07:33.827883012 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEy3_info:
	.quad	_ccEy3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.828532623 UTC

.section .text
.align 8
_ccEy8:
_ccEy8:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _ccEy8, .-_ccEy8


==================== Asm code ====================
2018-03-16 16:07:33.829187513 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEy8_info:
	.quad	_ccEy8
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.830432915 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_entry
.type Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_entry, @object
Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_entry:
_ccEyl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ccEyq
_ccEyr:
	leaq block_ccExQ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _ccExQ
_ccExR:
	movq (%rbx),%rax
	jmp *(%rax)
_ccEyq:
	leaq Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_entry, .-Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_entry


==================== Asm code ====================
2018-03-16 16:07:33.831165267 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_info
.type Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_info, @object
Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_info:
	.quad	Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:33.831934658 UTC

.section .text
.align 8
_ccExQ:
_ccExQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccEyu
_ccEyt:
	leaq sat_scEkt_info(%rip),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_ccEym_info(%rip),%rax
	movq %rax,8(%rbp)
	leaq -7(%r12),%r14
	addq $8,%rbp
	jmp *GHC.ST.unsafeDupableInterleaveST_entry@gotpcrel(%rip)
_ccEyu:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccExQ, .-_ccExQ


==================== Asm code ====================
2018-03-16 16:07:33.832660894 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccExQ_info:
	.quad	_ccExQ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.833490882 UTC

.section .text
.align 8
_ccEym:
_ccEym:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ccEyx
_ccEyw:
	leaq Control.Monad.ST.Lazy.Imp.S#_con_info(%rip),%rax
	movq %rax,-32(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ccEyx:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _ccEym, .-_ccEym


==================== Asm code ====================
2018-03-16 16:07:33.834175565 UTC

.section .data.rel.ro
.align 8
.align 1
block_ccEym_info:
	.quad	_ccEym
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:07:33.836628164 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_closure
.type Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_closure, @object
Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_closure:
	.quad	Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_info


==================== Asm code ====================
2018-03-16 16:07:33.837320405 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_entry
.type Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_entry, @object
Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_entry:
_ccEzh:
	jmp Control.Monad.ST.Lazy.Imp.unsafeInterleaveST1_entry
	.size Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_entry, .-Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_entry


==================== Asm code ====================
2018-03-16 16:07:33.83790893 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_info
.type Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_info, @object
Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_info:
	.quad	Control.Monad.ST.Lazy.Imp.unsafeInterleaveST_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:07:33.839714737 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Monad.ST.Lazy.Imp.$trModule4_bytes
.type Control.Monad.ST.Lazy.Imp.$trModule4_bytes, @object
Control.Monad.ST.Lazy.Imp.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:07:33.841616301 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$trModule3_closure
.type Control.Monad.ST.Lazy.Imp.$trModule3_closure, @object
Control.Monad.ST.Lazy.Imp.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:07:33.843370555 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Monad.ST.Lazy.Imp.$trModule2_bytes
.type Control.Monad.ST.Lazy.Imp.$trModule2_bytes, @object
Control.Monad.ST.Lazy.Imp.$trModule2_bytes:
	.asciz "Control.Monad.ST.Lazy.Imp"


==================== Asm code ====================
2018-03-16 16:07:33.845192998 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$trModule1_closure
.type Control.Monad.ST.Lazy.Imp.$trModule1_closure, @object
Control.Monad.ST.Lazy.Imp.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:07:33.847046947 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$trModule_closure
.type Control.Monad.ST.Lazy.Imp.$trModule_closure, @object
Control.Monad.ST.Lazy.Imp.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$trModule3_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.849792983 UTC

.section .data
.align 8
.align 1
$krep_rcDJ5_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 16:07:33.851665168 UTC

.section .data
.align 8
.align 1
$krep1_rcDJ6_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:07:33.853453675 UTC

.section .data
.align 8
.align 1
$krep2_rcDJ7_closure:
	.quad	:_con_info
	.quad	$krep1_rcDJ6_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.855601393 UTC

.section .data
.align 8
.align 1
$krep3_rcDJ8_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcState#_closure
	.quad	$krep2_rcDJ7_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.857404291 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tcState2_bytes
.type Control.Monad.ST.Lazy.Imp.$tcState2_bytes, @object
Control.Monad.ST.Lazy.Imp.$tcState2_bytes:
	.asciz "State"


==================== Asm code ====================
2018-03-16 16:07:33.859205788 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tcState1_closure
.type Control.Monad.ST.Lazy.Imp.$tcState1_closure, @object
Control.Monad.ST.Lazy.Imp.$tcState1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$tcState2_bytes


==================== Asm code ====================
2018-03-16 16:07:33.86113452 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tcState_closure
.type Control.Monad.ST.Lazy.Imp.$tcState_closure, @object
Control.Monad.ST.Lazy.Imp.$tcState_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$trModule_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$tcState1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	220923881781706094
	.quad	-5815911220540769458
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.863026452 UTC

.section .data
.align 8
.align 1
$krep4_rcDJ9_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$tcState_closure+1
	.quad	$krep2_rcDJ7_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.864857846 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tc'S#1_closure
.type Control.Monad.ST.Lazy.Imp.$tc'S#1_closure, @object
Control.Monad.ST.Lazy.Imp.$tc'S#1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep3_rcDJ8_closure+1
	.quad	$krep4_rcDJ9_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.867290754 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tc'S#3_bytes
.type Control.Monad.ST.Lazy.Imp.$tc'S#3_bytes, @object
Control.Monad.ST.Lazy.Imp.$tc'S#3_bytes:
	.asciz "'S#"


==================== Asm code ====================
2018-03-16 16:07:33.869119015 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tc'S#2_closure
.type Control.Monad.ST.Lazy.Imp.$tc'S#2_closure, @object
Control.Monad.ST.Lazy.Imp.$tc'S#2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$tc'S#3_bytes


==================== Asm code ====================
2018-03-16 16:07:33.871129825 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tc'S#_closure
.type Control.Monad.ST.Lazy.Imp.$tc'S#_closure, @object
Control.Monad.ST.Lazy.Imp.$tc'S#_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$trModule_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$tc'S#2_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$tc'S#1_closure+4
	.quad	-5741965471434007530
	.quad	1928505377508739254
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.872919614 UTC

.section .data
.align 8
.align 1
$krep5_rcDJa_closure:
	.quad	:_con_info
	.quad	$krep4_rcDJ9_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.874768361 UTC

.section .data
.align 8
.align 1
$krep6_rcDJb_closure:
	.quad	:_con_info
	.quad	$krep_rcDJ5_closure+2
	.quad	$krep5_rcDJa_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.876671247 UTC

.section .data
.align 8
.align 1
$krep7_rcDJc_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Tuple.$tc(,)_closure
	.quad	$krep6_rcDJb_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.879160184 UTC

.section .data
.align 8
.align 1
$krep8_rcDJd_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep4_rcDJ9_closure+1
	.quad	$krep7_rcDJc_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.880952917 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tcST2_bytes
.type Control.Monad.ST.Lazy.Imp.$tcST2_bytes, @object
Control.Monad.ST.Lazy.Imp.$tcST2_bytes:
	.asciz "ST"


==================== Asm code ====================
2018-03-16 16:07:33.882799232 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tcST1_closure
.type Control.Monad.ST.Lazy.Imp.$tcST1_closure, @object
Control.Monad.ST.Lazy.Imp.$tcST1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$tcST2_bytes


==================== Asm code ====================
2018-03-16 16:07:33.884723111 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tcST_closure
.type Control.Monad.ST.Lazy.Imp.$tcST_closure, @object
Control.Monad.ST.Lazy.Imp.$tcST_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$trModule_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$tcST1_closure+1
	.quad	GHC.Types.krep$*->*->*_closure
	.quad	-8687758373550436851
	.quad	4154811637844139714
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.887279097 UTC

.section .data
.align 8
.align 1
$krep9_rcDJe_closure:
	.quad	:_con_info
	.quad	$krep_rcDJ5_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.889136155 UTC

.section .data
.align 8
.align 1
$krep10_rcDJf_closure:
	.quad	:_con_info
	.quad	$krep1_rcDJ6_closure+2
	.quad	$krep9_rcDJe_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.891029981 UTC

.section .data
.align 8
.align 1
$krep11_rcDJg_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$tcST_closure+1
	.quad	$krep10_rcDJf_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.892949912 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tc'ST1_closure
.type Control.Monad.ST.Lazy.Imp.$tc'ST1_closure, @object
Control.Monad.ST.Lazy.Imp.$tc'ST1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep8_rcDJd_closure+4
	.quad	$krep11_rcDJg_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.894766305 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tc'ST3_bytes
.type Control.Monad.ST.Lazy.Imp.$tc'ST3_bytes, @object
Control.Monad.ST.Lazy.Imp.$tc'ST3_bytes:
	.asciz "'ST"


==================== Asm code ====================
2018-03-16 16:07:33.89656767 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tc'ST2_closure
.type Control.Monad.ST.Lazy.Imp.$tc'ST2_closure, @object
Control.Monad.ST.Lazy.Imp.$tc'ST2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$tc'ST3_bytes


==================== Asm code ====================
2018-03-16 16:07:33.898528807 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.$tc'ST_closure
.type Control.Monad.ST.Lazy.Imp.$tc'ST_closure, @object
Control.Monad.ST.Lazy.Imp.$tc'ST_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Control.Monad.ST.Lazy.Imp.$trModule_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$tc'ST2_closure+1
	.quad	Control.Monad.ST.Lazy.Imp.$tc'ST1_closure+4
	.quad	5656684040178075861
	.quad	6626797926801395533
	.quad	2
	.quad	3


==================== Asm code ====================
2018-03-16 16:07:33.901119647 UTC

.section .data
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.S#_closure
.type Control.Monad.ST.Lazy.Imp.S#_closure, @object
Control.Monad.ST.Lazy.Imp.S#_closure:
	.quad	Control.Monad.ST.Lazy.Imp.S#_info


==================== Asm code ====================
2018-03-16 16:07:33.902551311 UTC

.section .text
.align 8
Control.Monad.ST.Lazy.Imp.S#_entry:
_ccEzY:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ccEA2
_ccEA1:
	leaq Control.Monad.ST.Lazy.Imp.S#_con_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_ccEA2:
	movq $16,904(%r13)
	leaq Control.Monad.ST.Lazy.Imp.S#_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Monad.ST.Lazy.Imp.S#_entry, .-Control.Monad.ST.Lazy.Imp.S#_entry


==================== Asm code ====================
2018-03-16 16:07:33.903266412 UTC

.section .data.rel.ro
.align 8
.align 1
Control.Monad.ST.Lazy.Imp.S#_info:
	.quad	Control.Monad.ST.Lazy.Imp.S#_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:07:33.905364025 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
icEAa_str:
	.asciz "base:Control.Monad.ST.Lazy.Imp.S#"


==================== Asm code ====================
2018-03-16 16:07:33.905997632 UTC

.section .text
.align 8
.globl Control.Monad.ST.Lazy.Imp.S#_con_entry
.type Control.Monad.ST.Lazy.Imp.S#_con_entry, @object
Control.Monad.ST.Lazy.Imp.S#_con_entry:
_ccEA9:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Control.Monad.ST.Lazy.Imp.S#_con_entry, .-Control.Monad.ST.Lazy.Imp.S#_con_entry


==================== Asm code ====================
2018-03-16 16:07:33.907115055 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Monad.ST.Lazy.Imp.S#_con_info
.type Control.Monad.ST.Lazy.Imp.S#_con_info, @object
Control.Monad.ST.Lazy.Imp.S#_con_info:
	.quad	Control.Monad.ST.Lazy.Imp.S#_con_entry
	.quad	4294967296
	.quad	3
	.quad	icEAa_str


==================== Asm code ====================
2018-03-16 16:07:33.908965471 UTC

.section .data.rel.ro
.align 8
.align 1
ScEkV_srt:
	.quad	GHC.Err.errorWithoutStackTrace_closure

