
==================== Raw Cmm ====================
2018-03-16 15:56:30.197225276 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:56:30.199419367 UTC

[section ""data" . Control.Monad.Fail.$p1MonadFail_closure" {
     Control.Monad.Fail.$p1MonadFail_closure:
         const Control.Monad.Fail.$p1MonadFail_info;
 },
 Control.Monad.Fail.$p1MonadFail_entry() //  [R2]
         { []
         }
     {offset
       c1J26: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c1J27; else goto c1J28;
       c1J27: // global
           R2 = R2;
           R1 = Control.Monad.Fail.$p1MonadFail_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1J28: // global
           I64[Sp - 8] = block_c1J23_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u1J2c; else goto c1J24;
       u1J2c: // global
           call _c1J23(R1) args: 0, res: 0, upd: 0;
       c1J24: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Monad.Fail.$p1MonadFail_info" {
     Control.Monad.Fail.$p1MonadFail_info:
         const Control.Monad.Fail.$p1MonadFail_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c1J23() //  [R1]
         { []
         }
     {offset
       c1J23: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c1J23_info" {
     block_c1J23_info:
         const _c1J23;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.20579774 UTC

[section ""data" . Control.Monad.Fail.fail_closure" {
     Control.Monad.Fail.fail_closure:
         const Control.Monad.Fail.fail_info;
 },
 Control.Monad.Fail.fail_entry() //  [R2]
         { []
         }
     {offset
       c1J2v: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c1J2w; else goto c1J2x;
       c1J2w: // global
           R2 = R2;
           R1 = Control.Monad.Fail.fail_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1J2x: // global
           I64[Sp - 8] = block_c1J2s_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u1J2B; else goto c1J2t;
       u1J2B: // global
           call _c1J2s(R1) args: 0, res: 0, upd: 0;
       c1J2t: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Monad.Fail.fail_info" {
     Control.Monad.Fail.fail_info:
         const Control.Monad.Fail.fail_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c1J2s() //  [R1]
         { []
         }
     {offset
       c1J2s: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c1J2s_info" {
     block_c1J2s_info:
         const _c1J2s;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.211254124 UTC

[section ""data" . Control.Monad.Fail.$fMonadFailMaybe_$cfail_closure" {
     Control.Monad.Fail.$fMonadFailMaybe_$cfail_closure:
         const Control.Monad.Fail.$fMonadFailMaybe_$cfail_info;
 },
 Control.Monad.Fail.$fMonadFailMaybe_$cfail_entry() //  []
         { []
         }
     {offset
       c1J2P: // global
           R1 = GHC.Base.Nothing_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Monad.Fail.$fMonadFailMaybe_$cfail_info" {
     Control.Monad.Fail.$fMonadFailMaybe_$cfail_info:
         const Control.Monad.Fail.$fMonadFailMaybe_$cfail_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.214621108 UTC

[section ""data" . Control.Monad.Fail.$fMonadFailMaybe_closure" {
     Control.Monad.Fail.$fMonadFailMaybe_closure:
         const Control.Monad.Fail.C:MonadFail_con_info;
         const GHC.Base.$fMonadMaybe_closure;
         const Control.Monad.Fail.$fMonadFailMaybe_$cfail_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.21676375 UTC

[section ""data" . Control.Monad.Fail.$fMonadFail[]_$cfail_closure" {
     Control.Monad.Fail.$fMonadFail[]_$cfail_closure:
         const Control.Monad.Fail.$fMonadFail[]_$cfail_info;
 },
 Control.Monad.Fail.$fMonadFail[]_$cfail_entry() //  []
         { []
         }
     {offset
       c1J32: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Monad.Fail.$fMonadFail[]_$cfail_info" {
     Control.Monad.Fail.$fMonadFail[]_$cfail_info:
         const Control.Monad.Fail.$fMonadFail[]_$cfail_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.220006106 UTC

[section ""data" . Control.Monad.Fail.$fMonadFail[]_closure" {
     Control.Monad.Fail.$fMonadFail[]_closure:
         const Control.Monad.Fail.C:MonadFail_con_info;
         const GHC.Base.$fMonad[]_closure;
         const Control.Monad.Fail.$fMonadFail[]_$cfail_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.221825474 UTC

[section ""data" . Control.Monad.Fail.$fMonadFailIO_closure" {
     Control.Monad.Fail.$fMonadFailIO_closure:
         const Control.Monad.Fail.C:MonadFail_con_info;
         const GHC.Base.$fMonadIO_closure;
         const GHC.IO.failIO_closure;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.223593105 UTC

[section ""cstring" . Control.Monad.Fail.$trModule4_bytes" {
     Control.Monad.Fail.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.225499226 UTC

[section ""data" . Control.Monad.Fail.$trModule3_closure" {
     Control.Monad.Fail.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.Fail.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.228115848 UTC

[section ""cstring" . Control.Monad.Fail.$trModule2_bytes" {
     Control.Monad.Fail.$trModule2_bytes:
         I8[] [67,111,110,116,114,111,108,46,77,111,110,97,100,46,70,97,105,108]
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.229949701 UTC

[section ""data" . Control.Monad.Fail.$trModule1_closure" {
     Control.Monad.Fail.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.Fail.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.231752109 UTC

[section ""data" . Control.Monad.Fail.$trModule_closure" {
     Control.Monad.Fail.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Control.Monad.Fail.$trModule3_closure+1;
         const Control.Monad.Fail.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.233549209 UTC

[section ""data" . $krep_r1J03_closure" {
     $krep_r1J03_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.235438147 UTC

[section ""data" . Control.Monad.Fail.$tcMonadFail1_closure" {
     Control.Monad.Fail.$tcMonadFail1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const $krep_r1J03_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.237168551 UTC

[section ""cstring" . Control.Monad.Fail.$tcMonadFail3_bytes" {
     Control.Monad.Fail.$tcMonadFail3_bytes:
         I8[] [77,111,110,97,100,70,97,105,108]
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.238901446 UTC

[section ""data" . Control.Monad.Fail.$tcMonadFail2_closure" {
     Control.Monad.Fail.$tcMonadFail2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.Fail.$tcMonadFail3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.240695881 UTC

[section ""data" . Control.Monad.Fail.$tcMonadFail_closure" {
     Control.Monad.Fail.$tcMonadFail_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Monad.Fail.$trModule_closure+1;
         const Control.Monad.Fail.$tcMonadFail2_closure+1;
         const Control.Monad.Fail.$tcMonadFail1_closure+4;
         const 13075553528933503976;
         const 10446785369700436050;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.243148094 UTC

[section ""data" . Control.Monad.Fail.C:MonadFail_closure" {
     Control.Monad.Fail.C:MonadFail_closure:
         const Control.Monad.Fail.C:MonadFail_info;
 },
 Control.Monad.Fail.C:MonadFail_entry() //  [R2, R3]
         { []
         }
     {offset
       c1J3r: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c1J3v; else goto c1J3u;
       c1J3v: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Monad.Fail.C:MonadFail_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c1J3u: // global
           I64[Hp - 16] = Control.Monad.Fail.C:MonadFail_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Monad.Fail.C:MonadFail_info" {
     Control.Monad.Fail.C:MonadFail_info:
         const Control.Monad.Fail.C:MonadFail_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.246844887 UTC

[section ""cstring" . i1J1Y_str" {
     i1J1Y_str:
         I8[] [98,97,115,101,58,67,111,110,116,114,111,108,46,77,111,110,97,100,46,70,97,105,108,46,67,58,77,111,110,97,100,70,97,105,108]
 },
 Control.Monad.Fail.C:MonadFail_con_entry() //  [R1]
         { []
         }
     {offset
       c1J3B: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Monad.Fail.C:MonadFail_con_info" {
     Control.Monad.Fail.C:MonadFail_con_info:
         const Control.Monad.Fail.C:MonadFail_con_entry;
         const 2;
         const 4;
         const i1J1Y_str;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.249998821 UTC

[section ""relreadonly" . S1J16_srt" { S1J16_srt:
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.293579858 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:56:30.295532633 UTC

[section ""data" . Control.Monad.Fail.$p1MonadFail_closure" {
     Control.Monad.Fail.$p1MonadFail_closure:
         const Control.Monad.Fail.$p1MonadFail_info;
 },
 Control.Monad.Fail.$p1MonadFail_entry() //  [R2]
         { []
         }
     {offset
       c1J3Z: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c1J40; else goto c1J41;
       c1J40: // global
           R2 = R2;
           R1 = Control.Monad.Fail.$p1MonadFail_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1J41: // global
           I64[Sp - 8] = block_c1J3W_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u1J45; else goto c1J3X;
       u1J45: // global
           call _c1J3W(R1) args: 0, res: 0, upd: 0;
       c1J3X: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Monad.Fail.$p1MonadFail_info" {
     Control.Monad.Fail.$p1MonadFail_info:
         const Control.Monad.Fail.$p1MonadFail_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c1J3W() //  [R1]
         { []
         }
     {offset
       c1J3W: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c1J3W_info" {
     block_c1J3W_info:
         const _c1J3W;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.301425853 UTC

[section ""data" . Control.Monad.Fail.fail_closure" {
     Control.Monad.Fail.fail_closure:
         const Control.Monad.Fail.fail_info;
 },
 Control.Monad.Fail.fail_entry() //  [R2]
         { []
         }
     {offset
       c1J4p: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c1J4q; else goto c1J4r;
       c1J4q: // global
           R2 = R2;
           R1 = Control.Monad.Fail.fail_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c1J4r: // global
           I64[Sp - 8] = block_c1J4m_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u1J4v; else goto c1J4n;
       u1J4v: // global
           call _c1J4m(R1) args: 0, res: 0, upd: 0;
       c1J4n: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Monad.Fail.fail_info" {
     Control.Monad.Fail.fail_info:
         const Control.Monad.Fail.fail_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c1J4m() //  [R1]
         { []
         }
     {offset
       c1J4m: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c1J4m_info" {
     block_c1J4m_info:
         const _c1J4m;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.308018521 UTC

[section ""data" . Control.Monad.Fail.$fMonadFailMaybe_$cfail_closure" {
     Control.Monad.Fail.$fMonadFailMaybe_$cfail_closure:
         const Control.Monad.Fail.$fMonadFailMaybe_$cfail_info;
 },
 Control.Monad.Fail.$fMonadFailMaybe_$cfail_entry() //  []
         { []
         }
     {offset
       c1J4K: // global
           R1 = GHC.Base.Nothing_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Monad.Fail.$fMonadFailMaybe_$cfail_info" {
     Control.Monad.Fail.$fMonadFailMaybe_$cfail_info:
         const Control.Monad.Fail.$fMonadFailMaybe_$cfail_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.311844369 UTC

[section ""data" . Control.Monad.Fail.$fMonadFailMaybe_closure" {
     Control.Monad.Fail.$fMonadFailMaybe_closure:
         const Control.Monad.Fail.C:MonadFail_con_info;
         const GHC.Base.$fMonadMaybe_closure;
         const Control.Monad.Fail.$fMonadFailMaybe_$cfail_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.314327951 UTC

[section ""data" . Control.Monad.Fail.$fMonadFail[]_$cfail_closure" {
     Control.Monad.Fail.$fMonadFail[]_$cfail_closure:
         const Control.Monad.Fail.$fMonadFail[]_$cfail_info;
 },
 Control.Monad.Fail.$fMonadFail[]_$cfail_entry() //  []
         { []
         }
     {offset
       c1J4Y: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Monad.Fail.$fMonadFail[]_$cfail_info" {
     Control.Monad.Fail.$fMonadFail[]_$cfail_info:
         const Control.Monad.Fail.$fMonadFail[]_$cfail_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.317904317 UTC

[section ""data" . Control.Monad.Fail.$fMonadFail[]_closure" {
     Control.Monad.Fail.$fMonadFail[]_closure:
         const Control.Monad.Fail.C:MonadFail_con_info;
         const GHC.Base.$fMonad[]_closure;
         const Control.Monad.Fail.$fMonadFail[]_$cfail_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.319699232 UTC

[section ""data" . Control.Monad.Fail.$fMonadFailIO_closure" {
     Control.Monad.Fail.$fMonadFailIO_closure:
         const Control.Monad.Fail.C:MonadFail_con_info;
         const GHC.Base.$fMonadIO_closure;
         const GHC.IO.failIO_closure;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.321710745 UTC

[section ""cstring" . Control.Monad.Fail.$trModule4_bytes" {
     Control.Monad.Fail.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.323457951 UTC

[section ""data" . Control.Monad.Fail.$trModule3_closure" {
     Control.Monad.Fail.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.Fail.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.325213876 UTC

[section ""cstring" . Control.Monad.Fail.$trModule2_bytes" {
     Control.Monad.Fail.$trModule2_bytes:
         I8[] [67,111,110,116,114,111,108,46,77,111,110,97,100,46,70,97,105,108]
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.327051321 UTC

[section ""data" . Control.Monad.Fail.$trModule1_closure" {
     Control.Monad.Fail.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.Fail.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.328830341 UTC

[section ""data" . Control.Monad.Fail.$trModule_closure" {
     Control.Monad.Fail.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Control.Monad.Fail.$trModule3_closure+1;
         const Control.Monad.Fail.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.330673766 UTC

[section ""data" . $krep_r1J03_closure" {
     $krep_r1J03_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.332521375 UTC

[section ""data" . Control.Monad.Fail.$tcMonadFail1_closure" {
     Control.Monad.Fail.$tcMonadFail1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const $krep_r1J03_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.335098051 UTC

[section ""cstring" . Control.Monad.Fail.$tcMonadFail3_bytes" {
     Control.Monad.Fail.$tcMonadFail3_bytes:
         I8[] [77,111,110,97,100,70,97,105,108]
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.337516553 UTC

[section ""data" . Control.Monad.Fail.$tcMonadFail2_closure" {
     Control.Monad.Fail.$tcMonadFail2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Monad.Fail.$tcMonadFail3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.339421171 UTC

[section ""data" . Control.Monad.Fail.$tcMonadFail_closure" {
     Control.Monad.Fail.$tcMonadFail_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Monad.Fail.$trModule_closure+1;
         const Control.Monad.Fail.$tcMonadFail2_closure+1;
         const Control.Monad.Fail.$tcMonadFail1_closure+4;
         const 13075553528933503976;
         const 10446785369700436050;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.342124009 UTC

[section ""data" . Control.Monad.Fail.C:MonadFail_closure" {
     Control.Monad.Fail.C:MonadFail_closure:
         const Control.Monad.Fail.C:MonadFail_info;
 },
 Control.Monad.Fail.C:MonadFail_entry() //  [R2, R3]
         { []
         }
     {offset
       c1J5o: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c1J5s; else goto c1J5r;
       c1J5s: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Monad.Fail.C:MonadFail_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c1J5r: // global
           I64[Hp - 16] = Control.Monad.Fail.C:MonadFail_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Monad.Fail.C:MonadFail_info" {
     Control.Monad.Fail.C:MonadFail_info:
         const Control.Monad.Fail.C:MonadFail_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.345945039 UTC

[section ""cstring" . i1J5A_str" {
     i1J5A_str:
         I8[] [98,97,115,101,58,67,111,110,116,114,111,108,46,77,111,110,97,100,46,70,97,105,108,46,67,58,77,111,110,97,100,70,97,105,108]
 },
 Control.Monad.Fail.C:MonadFail_con_entry() //  [R1]
         { []
         }
     {offset
       c1J5z: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Monad.Fail.C:MonadFail_con_info" {
     Control.Monad.Fail.C:MonadFail_con_info:
         const Control.Monad.Fail.C:MonadFail_con_entry;
         const 2;
         const 4;
         const i1J5A_str;
 }]


==================== Raw Cmm ====================
2018-03-16 15:56:30.34922687 UTC

[section ""relreadonly" . S1J5G_srt" { S1J5G_srt:
 }]

