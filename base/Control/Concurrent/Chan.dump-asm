
==================== Asm code ====================
2018-03-16 16:09:10.771581774 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$WChItem_closure
.type Control.Concurrent.Chan.$WChItem_closure, @object
Control.Concurrent.Chan.$WChItem_closure:
	.quad	Control.Concurrent.Chan.$WChItem_info


==================== Asm code ====================
2018-03-16 16:09:10.772610164 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.$WChItem_entry
.type Control.Concurrent.Chan.$WChItem_entry, @object
Control.Concurrent.Chan.$WChItem_entry:
_cdVkc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVkg
_cdVkh:
	movq $block_cdVk9_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cdVk9
_cdVka:
	movq (%rbx),%rax
	jmp *(%rax)
_cdVkg:
	movl $Control.Concurrent.Chan.$WChItem_closure,%ebx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.$WChItem_entry, .-Control.Concurrent.Chan.$WChItem_entry


==================== Asm code ====================
2018-03-16 16:09:10.773418467 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.$WChItem_info
.type Control.Concurrent.Chan.$WChItem_info, @object
Control.Concurrent.Chan.$WChItem_info:
	.quad	Control.Concurrent.Chan.$WChItem_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:09:10.774268244 UTC

.section .text
.align 8
_cdVk9:
_cdVk9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdVkk
_cdVkj:
	movq 7(%rbx),%rax
	movq $Control.Concurrent.Chan.ChItem_con_info,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdVkk:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdVk9, .-_cdVk9


==================== Asm code ====================
2018-03-16 16:09:10.774969748 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVk9_info:
	.quad	_cdVk9
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.779006128 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$WChan_closure
.type Control.Concurrent.Chan.$WChan_closure, @object
Control.Concurrent.Chan.$WChan_closure:
	.quad	Control.Concurrent.Chan.$WChan_info


==================== Asm code ====================
2018-03-16 16:09:10.77990318 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.$WChan_entry
.type Control.Concurrent.Chan.$WChan_entry, @object
Control.Concurrent.Chan.$WChan_entry:
_cdVkE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVkN
_cdVkO:
	movq $block_cdVkB_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cdVkB
_cdVkC:
	movq (%rbx),%rax
	jmp *(%rax)
_cdVkN:
	movl $Control.Concurrent.Chan.$WChan_closure,%ebx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.$WChan_entry, .-Control.Concurrent.Chan.$WChan_entry


==================== Asm code ====================
2018-03-16 16:09:10.780612344 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.$WChan_info
.type Control.Concurrent.Chan.$WChan_info, @object
Control.Concurrent.Chan.$WChan_info:
	.quad	Control.Concurrent.Chan.$WChan_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:09:10.781372573 UTC

.section .text
.align 8
_cdVkB:
_cdVkB:
	movq $block_cdVkH_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cdVkH
_cdVkI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdVkB, .-_cdVkB


==================== Asm code ====================
2018-03-16 16:09:10.782015964 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVkB_info:
	.quad	_cdVkB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.783779916 UTC

.section .text
.align 8
_cdVkH:
_cdVkH:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdVkS
_cdVkR:
	movq 7(%rbx),%rax
	movq $Control.Concurrent.Chan.Chan_con_info,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdVkS:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdVkH, .-_cdVkH


==================== Asm code ====================
2018-03-16 16:09:10.784534661 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVkH_info:
	.quad	_cdVkH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.790362011 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$fEqChan_$c==_closure
.type Control.Concurrent.Chan.$fEqChan_$c==_closure, @object
Control.Concurrent.Chan.$fEqChan_$c==_closure:
	.quad	Control.Concurrent.Chan.$fEqChan_$c==_info


==================== Asm code ====================
2018-03-16 16:09:10.791617371 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.$fEqChan_$c==_entry
.type Control.Concurrent.Chan.$fEqChan_$c==_entry, @object
Control.Concurrent.Chan.$fEqChan_$c==_entry:
_cdVlh:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVll
_cdVlm:
	movq $block_cdVle_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cdVle
_cdVlf:
	movq (%rbx),%rax
	jmp *(%rax)
_cdVll:
	movl $Control.Concurrent.Chan.$fEqChan_$c==_closure,%ebx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.$fEqChan_$c==_entry, .-Control.Concurrent.Chan.$fEqChan_$c==_entry


==================== Asm code ====================
2018-03-16 16:09:10.792585121 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.$fEqChan_$c==_info
.type Control.Concurrent.Chan.$fEqChan_$c==_info, @object
Control.Concurrent.Chan.$fEqChan_$c==_info:
	.quad	Control.Concurrent.Chan.$fEqChan_$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:09:10.793757063 UTC

.section .text
.align 8
_cdVle:
_cdVle:
	movq $block_cdVlk_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cdVlk
_cdVlo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdVle, .-_cdVle


==================== Asm code ====================
2018-03-16 16:09:10.794739 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVle_info:
	.quad	_cdVle
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.795857062 UTC

.section .text
.align 8
_cdVlk:
_cdVlk:
	movq 16(%rbp),%rax
	cmpq 7(%rbx),%rax
	je _cdVlE
_cdVly:
	movl $GHC.Types.False_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdVlE:
	movq 8(%rbp),%rax
	cmpq 15(%rbx),%rax
	sete %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdVlk, .-_cdVlk


==================== Asm code ====================
2018-03-16 16:09:10.796829242 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVlk_info:
	.quad	_cdVlk
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.802625635 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$fEqChan_$c/=_closure
.type Control.Concurrent.Chan.$fEqChan_$c/=_closure, @object
Control.Concurrent.Chan.$fEqChan_$c/=_closure:
	.quad	Control.Concurrent.Chan.$fEqChan_$c/=_info


==================== Asm code ====================
2018-03-16 16:09:10.803845333 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.$fEqChan_$c/=_entry
.type Control.Concurrent.Chan.$fEqChan_$c/=_entry, @object
Control.Concurrent.Chan.$fEqChan_$c/=_entry:
_cdVmb:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVmf
_cdVmg:
	movq $block_cdVm8_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cdVm8
_cdVm9:
	movq (%rbx),%rax
	jmp *(%rax)
_cdVmf:
	movl $Control.Concurrent.Chan.$fEqChan_$c/=_closure,%ebx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.$fEqChan_$c/=_entry, .-Control.Concurrent.Chan.$fEqChan_$c/=_entry


==================== Asm code ====================
2018-03-16 16:09:10.804822697 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.$fEqChan_$c/=_info
.type Control.Concurrent.Chan.$fEqChan_$c/=_info, @object
Control.Concurrent.Chan.$fEqChan_$c/=_info:
	.quad	Control.Concurrent.Chan.$fEqChan_$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:09:10.806011324 UTC

.section .text
.align 8
_cdVm8:
_cdVm8:
	movq $block_cdVme_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cdVme
_cdVmi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdVm8, .-_cdVm8


==================== Asm code ====================
2018-03-16 16:09:10.806962669 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVm8_info:
	.quad	_cdVm8
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.808127168 UTC

.section .text
.align 8
_cdVme:
_cdVme:
	movq 16(%rbp),%rax
	cmpq 7(%rbx),%rax
	jne _cdVmH
_cdVmy:
	movq 8(%rbp),%rax
	cmpq 15(%rbx),%rax
	jne _cdVmH
_cdVmN:
	movl $GHC.Types.False_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdVmH:
	movl $GHC.Types.True_closure+2,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdVme, .-_cdVme


==================== Asm code ====================
2018-03-16 16:09:10.809076428 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVme_info:
	.quad	_cdVme
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.81169252 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$fEqChan_closure
.type Control.Concurrent.Chan.$fEqChan_closure, @object
Control.Concurrent.Chan.$fEqChan_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	Control.Concurrent.Chan.$fEqChan_$c==_closure+2
	.quad	Control.Concurrent.Chan.$fEqChan_$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:10.818818036 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.newChan1_closure
.type Control.Concurrent.Chan.newChan1_closure, @object
Control.Concurrent.Chan.newChan1_closure:
	.quad	Control.Concurrent.Chan.newChan1_info


==================== Asm code ====================
2018-03-16 16:09:10.820017055 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.newChan1_entry
.type Control.Concurrent.Chan.newChan1_entry, @object
Control.Concurrent.Chan.newChan1_entry:
_cdVnr:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVns
_cdVnt:
	movq $block_cdVnf_info,-8(%rbp)
	addq $-8,%rbp
	jmp stg_newMVar#
_cdVns:
	movl $Control.Concurrent.Chan.newChan1_closure,%ebx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.newChan1_entry, .-Control.Concurrent.Chan.newChan1_entry


==================== Asm code ====================
2018-03-16 16:09:10.820979649 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.newChan1_info
.type Control.Concurrent.Chan.newChan1_info, @object
Control.Concurrent.Chan.newChan1_info:
	.quad	Control.Concurrent.Chan.newChan1_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:09:10.822531605 UTC

.section .text
.align 8
_cdVnf:
_cdVnf:
	movq $block_cdVnh_info,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp stg_newMVar#
	.size _cdVnf, .-_cdVnf


==================== Asm code ====================
2018-03-16 16:09:10.823337166 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVnf_info:
	.quad	_cdVnf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.824507439 UTC

.section .text
.align 8
_cdVnh:
_cdVnh:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cdVnx
_cdVnw:
	movq $GHC.MVar.MVar_con_info,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_cdVnk_info,-8(%rbp)
	leaq -7(%r12),%rax
	movq %rax,%r14
	movq %rbx,%rcx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp stg_putMVar#
_cdVnx:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdVnh, .-_cdVnh


==================== Asm code ====================
2018-03-16 16:09:10.825487061 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVnh_info:
	.quad	_cdVnh
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.826430244 UTC

.section .text
.align 8
_cdVnk:
_cdVnk:
	movq $block_cdVnm_info,(%rbp)
	jmp stg_newMVar#
	.size _cdVnk, .-_cdVnk


==================== Asm code ====================
2018-03-16 16:09:10.827264216 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVnk_info:
	.quad	_cdVnk
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.82823702 UTC

.section .text
.align 8
_cdVnm:
_cdVnm:
	movq $block_cdVno_info,(%rbp)
	movq 16(%rbp),%r14
	movq %rbx,%rax
	movq %rax,16(%rbp)
	jmp stg_putMVar#
	.size _cdVnm, .-_cdVnm


==================== Asm code ====================
2018-03-16 16:09:10.829199837 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVnm_info:
	.quad	_cdVnm
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.830376368 UTC

.section .text
.align 8
_cdVno:
_cdVno:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdVnC
_cdVnB:
	movq $Control.Concurrent.Chan.Chan_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdVnC:
	movq $24,904(%r13)
	jmp stg_gc_noregs
	.size _cdVno, .-_cdVno


==================== Asm code ====================
2018-03-16 16:09:10.8313489 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVno_info:
	.quad	_cdVno
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.834496981 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.newChan_closure
.type Control.Concurrent.Chan.newChan_closure, @object
Control.Concurrent.Chan.newChan_closure:
	.quad	Control.Concurrent.Chan.newChan_info


==================== Asm code ====================
2018-03-16 16:09:10.835501942 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.newChan_entry
.type Control.Concurrent.Chan.newChan_entry, @object
Control.Concurrent.Chan.newChan_entry:
_cdVo5:
	jmp Control.Concurrent.Chan.newChan1_entry
	.size Control.Concurrent.Chan.newChan_entry, .-Control.Concurrent.Chan.newChan_entry


==================== Asm code ====================
2018-03-16 16:09:10.836409254 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.newChan_info
.type Control.Concurrent.Chan.newChan_info, @object
Control.Concurrent.Chan.newChan_info:
	.quad	Control.Concurrent.Chan.newChan_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:09:10.852316904 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$wwriteChan_closure
.type Control.Concurrent.Chan.$wwriteChan_closure, @object
Control.Concurrent.Chan.$wwriteChan_closure:
	.quad	Control.Concurrent.Chan.$wwriteChan_info


==================== Asm code ====================
2018-03-16 16:09:10.85373272 UTC

.section .text
.align 8
sat_sdV2e_entry:
_cdVox:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVoF
_cdVoG:
	movq $block_cdVos_info,-32(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-32,%rbp
	jmp stg_takeMVar#
_cdVoF:
	jmp *-8(%r13)
	.size sat_sdV2e_entry, .-sat_sdV2e_entry


==================== Asm code ====================
2018-03-16 16:09:10.854536612 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sdV2e_info:
	.quad	sat_sdV2e_entry
	.quad	3
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:09:10.855633296 UTC

.section .text
.align 8
_cdVos:
_cdVos:
	movq $block_cdVou_info,(%rbp)
	testb $7,%bl
	jne _cdVou
_cdVov:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdVos, .-_cdVos


==================== Asm code ====================
2018-03-16 16:09:10.856732658 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVos_info:
	.quad	_cdVos
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.858180932 UTC

.section .text
.align 8
_cdVou:
_cdVou:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdVoK
_cdVoJ:
	movq 7(%rbx),%rax
	movq $Control.Concurrent.Chan.ChItem_con_info,-16(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,(%r12)
	movq $block_cdVoB_info,(%rbp)
	leaq -15(%r12),%r14
	movq %rax,%rbx
	jmp stg_putMVar#
_cdVoK:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdVou, .-_cdVou


==================== Asm code ====================
2018-03-16 16:09:10.859218096 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVou_info:
	.quad	_cdVou
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.860332187 UTC

.section .text
.align 8
_cdVoB:
_cdVoB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cdVoN
_cdVoM:
	movq $GHC.MVar.MVar_con_info,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	movq $block_cdVoE_info,24(%rbp)
	leaq -7(%r12),%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp stg_putMVar#
_cdVoN:
	movq $16,904(%r13)
	jmp stg_gc_noregs
	.size _cdVoB, .-_cdVoB


==================== Asm code ====================
2018-03-16 16:09:10.861473361 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVoB_info:
	.quad	_cdVoB
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.862527572 UTC

.section .text
.align 8
_cdVoE:
_cdVoE:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdVoE, .-_cdVoE


==================== Asm code ====================
2018-03-16 16:09:10.863482878 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVoE_info:
	.quad	_cdVoE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.864555012 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.$wwriteChan_entry
.type Control.Concurrent.Chan.$wwriteChan_entry, @object
Control.Concurrent.Chan.$wwriteChan_entry:
_cdVoU:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVoV
_cdVoW:
	movq $block_cdVog_info,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp stg_newMVar#
_cdVoV:
	movl $Control.Concurrent.Chan.$wwriteChan_closure,%ebx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.$wwriteChan_entry, .-Control.Concurrent.Chan.$wwriteChan_entry


==================== Asm code ====================
2018-03-16 16:09:10.865570638 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.$wwriteChan_info
.type Control.Concurrent.Chan.$wwriteChan_info, @object
Control.Concurrent.Chan.$wwriteChan_info:
	.quad	Control.Concurrent.Chan.$wwriteChan_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:09:10.866272267 UTC

.section .text
.align 8
_cdVog:
_cdVog:
	movq $block_cdVoi_info,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp stg_getMaskingState#
	.size _cdVog, .-_cdVog


==================== Asm code ====================
2018-03-16 16:09:10.866870433 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVog_info:
	.quad	_cdVog
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.867702609 UTC

.section .text
.align 8
_cdVoi:
_cdVoi:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cdVp0
_cdVoZ:
	movq 16(%rbp),%rax
	testq %rbx,%rbx
	je _cdVoT
_cdVoS:
	addq $-32,%r12
	movq $block_cdVp1_info,(%rbp)
	movq %rax,%rbx
	jmp stg_takeMVar#
_cdVp0:
	movq $32,904(%r13)
	jmp stg_gc_unbx_r1
_cdVoT:
	movq $sat_sdV2e_info,-24(%r12)
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $32,%rbp
	jmp stg_maskAsyncExceptions#
	.size _cdVoi, .-_cdVoi


==================== Asm code ====================
2018-03-16 16:09:10.868452931 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVoi_info:
	.quad	_cdVoi
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.869285595 UTC

.section .text
.align 8
_cdVp1:
_cdVp1:
	movq $block_cdVp3_info,(%rbp)
	testb $7,%bl
	jne _cdVp3
_cdVp4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdVp1, .-_cdVp1


==================== Asm code ====================
2018-03-16 16:09:10.869938652 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVp1_info:
	.quad	_cdVp1
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.870710968 UTC

.section .text
.align 8
_cdVp3:
_cdVp3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdVpg
_cdVpf:
	movq 7(%rbx),%rax
	movq $Control.Concurrent.Chan.ChItem_con_info,-16(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	movq $block_cdVp9_info,(%rbp)
	leaq -15(%r12),%r14
	movq %rax,%rbx
	jmp stg_putMVar#
_cdVpg:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdVp3, .-_cdVp3


==================== Asm code ====================
2018-03-16 16:09:10.871423859 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVp3_info:
	.quad	_cdVp3
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.872246853 UTC

.section .text
.align 8
_cdVp9:
_cdVp9:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cdVpj
_cdVpi:
	movq $GHC.MVar.MVar_con_info,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_cdVpc_info,24(%rbp)
	leaq -7(%r12),%r14
	movq 16(%rbp),%rbx
	addq $24,%rbp
	jmp stg_putMVar#
_cdVpj:
	movq $16,904(%r13)
	jmp stg_gc_noregs
	.size _cdVp9, .-_cdVp9


==================== Asm code ====================
2018-03-16 16:09:10.8729529 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVp9_info:
	.quad	_cdVp9
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.873676815 UTC

.section .text
.align 8
_cdVpc:
_cdVpc:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdVpc, .-_cdVpc


==================== Asm code ====================
2018-03-16 16:09:10.874301342 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVpc_info:
	.quad	_cdVpc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.877550524 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.writeChan1_closure
.type Control.Concurrent.Chan.writeChan1_closure, @object
Control.Concurrent.Chan.writeChan1_closure:
	.quad	Control.Concurrent.Chan.writeChan1_info


==================== Asm code ====================
2018-03-16 16:09:10.878425246 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.writeChan1_entry
.type Control.Concurrent.Chan.writeChan1_entry, @object
Control.Concurrent.Chan.writeChan1_entry:
_cdVqj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVqk
_cdVql:
	movq $block_cdVqg_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cdVqg
_cdVqh:
	movq (%rbx),%rax
	jmp *(%rax)
_cdVqk:
	movl $Control.Concurrent.Chan.writeChan1_closure,%ebx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.writeChan1_entry, .-Control.Concurrent.Chan.writeChan1_entry


==================== Asm code ====================
2018-03-16 16:09:10.879163381 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.writeChan1_info
.type Control.Concurrent.Chan.writeChan1_info, @object
Control.Concurrent.Chan.writeChan1_info:
	.quad	Control.Concurrent.Chan.writeChan1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:09:10.879910695 UTC

.section .text
.align 8
_cdVqg:
_cdVqg:
	movq 8(%rbp),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp Control.Concurrent.Chan.$wwriteChan_entry
	.size _cdVqg, .-_cdVqg


==================== Asm code ====================
2018-03-16 16:09:10.880542308 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVqg_info:
	.quad	_cdVqg
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.883000261 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.writeChan_closure
.type Control.Concurrent.Chan.writeChan_closure, @object
Control.Concurrent.Chan.writeChan_closure:
	.quad	Control.Concurrent.Chan.writeChan_info


==================== Asm code ====================
2018-03-16 16:09:10.883721604 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.writeChan_entry
.type Control.Concurrent.Chan.writeChan_entry, @object
Control.Concurrent.Chan.writeChan_entry:
_cdVqD:
	jmp Control.Concurrent.Chan.writeChan1_entry
	.size Control.Concurrent.Chan.writeChan_entry, .-Control.Concurrent.Chan.writeChan_entry


==================== Asm code ====================
2018-03-16 16:09:10.884304405 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.writeChan_info
.type Control.Concurrent.Chan.writeChan_info, @object
Control.Concurrent.Chan.writeChan_info:
	.quad	Control.Concurrent.Chan.writeChan_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:09:10.889748508 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.writeList2Chan1_closure
.type Control.Concurrent.Chan.writeList2Chan1_closure, @object
Control.Concurrent.Chan.writeList2Chan1_closure:
	.quad	Control.Concurrent.Chan.writeList2Chan1_info


==================== Asm code ====================
2018-03-16 16:09:10.890713966 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.writeList2Chan1_entry
.type Control.Concurrent.Chan.writeList2Chan1_entry, @object
Control.Concurrent.Chan.writeList2Chan1_entry:
_cdVqQ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVqR
_cdVqS:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _cdVqU
_cdVqR:
	movl $Control.Concurrent.Chan.writeList2Chan1_closure,%ebx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.writeList2Chan1_entry, .-Control.Concurrent.Chan.writeList2Chan1_entry


==================== Asm code ====================
2018-03-16 16:09:10.892382742 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.writeList2Chan1_info
.type Control.Concurrent.Chan.writeList2Chan1_info, @object
Control.Concurrent.Chan.writeList2Chan1_info:
	.quad	Control.Concurrent.Chan.writeList2Chan1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:09:10.893564434 UTC

.section .text
.align 8
_cdVqU:
_cdVqU:
	movq $block_cdVqW_info,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cdVqW
_cdVqY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdVqU, .-_cdVqU


==================== Asm code ====================
2018-03-16 16:09:10.89457779 UTC

.section .text
.align 8
_cdVqW:
_cdVqW:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cdVr4
_cdVr9:
	movq $block_cdVr7_info,-8(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cdVr7
_cdVra:
	movq (%rbx),%rax
	jmp *(%rax)
_cdVr4:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdVqW, .-_cdVqW


==================== Asm code ====================
2018-03-16 16:09:10.895326108 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVqW_info:
	.quad	_cdVqW
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.896114258 UTC

.section .text
.align 8
_cdVr7:
_cdVr7:
	movq $block_cdVre_info,(%rbp)
	movq 24(%rbp),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Control.Concurrent.Chan.$wwriteChan_entry
	.size _cdVr7, .-_cdVr7


==================== Asm code ====================
2018-03-16 16:09:10.896733342 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVr7_info:
	.quad	_cdVr7
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.897769097 UTC

.section .text
.align 8
_cdVre:
_cdVre:
	movq 8(%rbp),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp _cdVqU
	.size _cdVre, .-_cdVre


==================== Asm code ====================
2018-03-16 16:09:10.898918412 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVre_info:
	.quad	_cdVre
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.903259679 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.writeList2Chan_closure
.type Control.Concurrent.Chan.writeList2Chan_closure, @object
Control.Concurrent.Chan.writeList2Chan_closure:
	.quad	Control.Concurrent.Chan.writeList2Chan_info


==================== Asm code ====================
2018-03-16 16:09:10.904507222 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.writeList2Chan_entry
.type Control.Concurrent.Chan.writeList2Chan_entry, @object
Control.Concurrent.Chan.writeList2Chan_entry:
_cdVrP:
	jmp Control.Concurrent.Chan.writeList2Chan1_entry
	.size Control.Concurrent.Chan.writeList2Chan_entry, .-Control.Concurrent.Chan.writeList2Chan_entry


==================== Asm code ====================
2018-03-16 16:09:10.906146419 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.writeList2Chan_info
.type Control.Concurrent.Chan.writeList2Chan_info, @object
Control.Concurrent.Chan.writeList2Chan_info:
	.quad	Control.Concurrent.Chan.writeList2Chan_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:09:10.917085425 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$wreadChan_closure
.type Control.Concurrent.Chan.$wreadChan_closure, @object
Control.Concurrent.Chan.$wreadChan_closure:
	.quad	Control.Concurrent.Chan.$wreadChan_info


==================== Asm code ====================
2018-03-16 16:09:10.918039178 UTC

.section .text
.align 8
sat_sdV30_entry:
_cdVsg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVsh
_cdVsi:
	movq $block_cdVse_info,-16(%rbp)
	movq %r14,%rax
	movq 14(%rbx),%r14
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_putMVar#
_cdVsh:
	jmp *-8(%r13)
	.size sat_sdV30_entry, .-sat_sdV30_entry


==================== Asm code ====================
2018-03-16 16:09:10.918707838 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sdV30_info:
	.quad	sat_sdV30_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:09:10.919417696 UTC

.section .text
.align 8
_cdVse:
_cdVse:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp stg_raiseIO#
	.size _cdVse, .-_cdVse


==================== Asm code ====================
2018-03-16 16:09:10.920018664 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVse_info:
	.quad	_cdVse
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.92081985 UTC

.section .text
.align 8
sat_sdV2W_entry:
_cdVss:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVsE
_cdVsF:
	movq $block_cdVsp_info,-8(%rbp)
	movq 7(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cdVsp
_cdVsq:
	movq (%rbx),%rax
	jmp *(%rax)
_cdVsE:
	jmp *-8(%r13)
	.size sat_sdV2W_entry, .-sat_sdV2W_entry


==================== Asm code ====================
2018-03-16 16:09:10.921748242 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sdV2W_info:
	.quad	sat_sdV2W_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:09:10.922525872 UTC

.section .text
.align 8
_cdVsp:
_cdVsp:
	movq $block_cdVsv_info,(%rbp)
	movq 7(%rbx),%rbx
	jmp stg_readMVar#
	.size _cdVsp, .-_cdVsp


==================== Asm code ====================
2018-03-16 16:09:10.923129231 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVsp_info:
	.quad	_cdVsp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.923938408 UTC

.section .text
.align 8
_cdVsv:
_cdVsv:
	movq $block_cdVsx_info,(%rbp)
	testb $7,%bl
	jne _cdVsx
_cdVsy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdVsv, .-_cdVsv


==================== Asm code ====================
2018-03-16 16:09:10.924560939 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVsv_info:
	.quad	_cdVsv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.925450866 UTC

.section .text
.align 8
_cdVsx:
_cdVsx:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cdVsK
_cdVsJ:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq $GHC.MVar.MVar_con_info,-32(%r12)
	movq %rbx,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdVsK:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdVsx, .-_cdVsx


==================== Asm code ====================
2018-03-16 16:09:10.926154392 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVsx_info:
	.quad	_cdVsx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.92693002 UTC

.section .text
.align 8
io1_sdV2G_entry:
_cdVsS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVsW
_cdVsX:
	movq $block_cdVs7_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_takeMVar#
_cdVsW:
	jmp *-8(%r13)
	.size io1_sdV2G_entry, .-io1_sdV2G_entry


==================== Asm code ====================
2018-03-16 16:09:10.927616068 UTC

.section .data.rel.ro
.align 8
.align 1
io1_sdV2G_info:
	.quad	io1_sdV2G_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:09:10.9284454 UTC

.section .text
.align 8
_cdVs7:
_cdVs7:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cdVt0
_cdVsZ:
	movq $sat_sdV30_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq $sat_sdV2W_info,-8(%r12)
	movq %rbx,(%r12)
	movq $block_cdVsN_info,(%rbp)
	leaq -30(%r12),%r14
	leaq -7(%r12),%rbx
	jmp stg_catch#
_cdVt0:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdVs7, .-_cdVs7


==================== Asm code ====================
2018-03-16 16:09:10.929075707 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVs7_info:
	.quad	_cdVs7
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.929841276 UTC

.section .text
.align 8
_cdVsN:
_cdVsN:
	movq $block_cdVsP_info,(%rbp)
	testb $7,%bl
	jne _cdVsP
_cdVsQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdVsN, .-_cdVsN


==================== Asm code ====================
2018-03-16 16:09:10.930469047 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVsN_info:
	.quad	_cdVsN
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.931166927 UTC

.section .text
.align 8
_cdVsP:
_cdVsP:
	movq $block_cdVsV_info,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cdVsP, .-_cdVsP


==================== Asm code ====================
2018-03-16 16:09:10.931777494 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVsP_info:
	.quad	_cdVsP
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.932479945 UTC

.section .text
.align 8
_cdVsV:
_cdVsV:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdVsV, .-_cdVsV


==================== Asm code ====================
2018-03-16 16:09:10.933089052 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVsV_info:
	.quad	_cdVsV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.933912699 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.$wreadChan_entry
.type Control.Concurrent.Chan.$wreadChan_entry, @object
Control.Concurrent.Chan.$wreadChan_entry:
_cdVta:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVtb
_cdVtc:
	movq $block_cdVs0_info,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp stg_getMaskingState#
_cdVtb:
	movl $Control.Concurrent.Chan.$wreadChan_closure,%ebx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.$wreadChan_entry, .-Control.Concurrent.Chan.$wreadChan_entry


==================== Asm code ====================
2018-03-16 16:09:10.934636521 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.$wreadChan_info
.type Control.Concurrent.Chan.$wreadChan_info, @object
Control.Concurrent.Chan.$wreadChan_info:
	.quad	Control.Concurrent.Chan.$wreadChan_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:09:10.935464455 UTC

.section .text
.align 8
_cdVs0:
_cdVs0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cdVtf
_cdVte:
	movq $io1_sdV2G_info,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rax
	testq %rbx,%rbx
	je _cdVt9
_cdVt8:
	movq %rax,%rbx
	addq $16,%rbp
	jmp io1_sdV2G_entry
_cdVtf:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
_cdVt9:
	movq %rax,%rbx
	addq $16,%rbp
	jmp stg_maskAsyncExceptions#
	.size _cdVs0, .-_cdVs0


==================== Asm code ====================
2018-03-16 16:09:10.93618726 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVs0_info:
	.quad	_cdVs0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.93990115 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.readChan1_closure
.type Control.Concurrent.Chan.readChan1_closure, @object
Control.Concurrent.Chan.readChan1_closure:
	.quad	Control.Concurrent.Chan.readChan1_info


==================== Asm code ====================
2018-03-16 16:09:10.940794279 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.readChan1_entry
.type Control.Concurrent.Chan.readChan1_entry, @object
Control.Concurrent.Chan.readChan1_entry:
_cdVud:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVue
_cdVuf:
	movq $block_cdVua_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cdVua
_cdVub:
	movq (%rbx),%rax
	jmp *(%rax)
_cdVue:
	movl $Control.Concurrent.Chan.readChan1_closure,%ebx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.readChan1_entry, .-Control.Concurrent.Chan.readChan1_entry


==================== Asm code ====================
2018-03-16 16:09:10.94158868 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.readChan1_info
.type Control.Concurrent.Chan.readChan1_info, @object
Control.Concurrent.Chan.readChan1_info:
	.quad	Control.Concurrent.Chan.readChan1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:09:10.942238944 UTC

.section .text
.align 8
_cdVua:
_cdVua:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp Control.Concurrent.Chan.$wreadChan_entry
	.size _cdVua, .-_cdVua


==================== Asm code ====================
2018-03-16 16:09:10.942778233 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVua_info:
	.quad	_cdVua
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.945078623 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.readChan_closure
.type Control.Concurrent.Chan.readChan_closure, @object
Control.Concurrent.Chan.readChan_closure:
	.quad	Control.Concurrent.Chan.readChan_info


==================== Asm code ====================
2018-03-16 16:09:10.945797743 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.readChan_entry
.type Control.Concurrent.Chan.readChan_entry, @object
Control.Concurrent.Chan.readChan_entry:
_cdVux:
	jmp Control.Concurrent.Chan.readChan1_entry
	.size Control.Concurrent.Chan.readChan_entry, .-Control.Concurrent.Chan.readChan_entry


==================== Asm code ====================
2018-03-16 16:09:10.946397118 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.readChan_info
.type Control.Concurrent.Chan.readChan_info, @object
Control.Concurrent.Chan.readChan_info:
	.quad	Control.Concurrent.Chan.readChan_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:09:10.95131503 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.getChanContents1_closure
.type Control.Concurrent.Chan.getChanContents1_closure, @object
Control.Concurrent.Chan.getChanContents1_closure:
	.quad	Control.Concurrent.Chan.getChanContents1_info


==================== Asm code ====================
2018-03-16 16:09:10.952193524 UTC

.section .text
.align 8
sat_sdV3s_entry:
_cdVuS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVv0
_cdVv1:
	movq $block_cdVuN_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp stg_noDuplicate#
_cdVv0:
	jmp *-8(%r13)
	.size sat_sdV3s_entry, .-sat_sdV3s_entry


==================== Asm code ====================
2018-03-16 16:09:10.952827869 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sdV3s_info:
	.quad	sat_sdV3s_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:09:10.953622147 UTC

.section .text
.align 8
_cdVuN:
_cdVuN:
	movq 8(%rbp),%rax
	movq $block_cdVuP_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cdVuP
_cdVuQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdVuN, .-_cdVuN


==================== Asm code ====================
2018-03-16 16:09:10.954311539 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVuN_info:
	.quad	_cdVuN
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.955017942 UTC

.section .text
.align 8
_cdVuP:
_cdVuP:
	movq $block_cdVuV_info,-8(%rbp)
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp Control.Concurrent.Chan.$wreadChan_entry
	.size _cdVuP, .-_cdVuP


==================== Asm code ====================
2018-03-16 16:09:10.95568039 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVuP_info:
	.quad	_cdVuP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.956346171 UTC

.section .text
.align 8
_cdVuV:
_cdVuV:
	movq $block_cdVuX_info,(%rbp)
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp Control.Concurrent.Chan.getChanContents1_entry
	.size _cdVuV, .-_cdVuV


==================== Asm code ====================
2018-03-16 16:09:10.957011779 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVuV_info:
	.quad	_cdVuV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.958511826 UTC

.section .text
.align 8
_cdVuX:
_cdVuX:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdVv7
_cdVv6:
	movq $:_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdVv7:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cdVuX, .-_cdVuX


==================== Asm code ====================
2018-03-16 16:09:10.959215826 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVuX_info:
	.quad	_cdVuX
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.960021064 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.getChanContents1_entry
.type Control.Concurrent.Chan.getChanContents1_entry, @object
Control.Concurrent.Chan.getChanContents1_entry:
_cdVv9:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cdVvd
_cdVvc:
	movq $sat_sdV3s_info,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%r14
	jmp GHC.IO.Unsafe.unsafeDupableInterleaveIO_entry
_cdVvd:
	movq $16,904(%r13)
	movl $Control.Concurrent.Chan.getChanContents1_closure,%ebx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.getChanContents1_entry, .-Control.Concurrent.Chan.getChanContents1_entry


==================== Asm code ====================
2018-03-16 16:09:10.960683275 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.getChanContents1_info
.type Control.Concurrent.Chan.getChanContents1_info, @object
Control.Concurrent.Chan.getChanContents1_info:
	.quad	Control.Concurrent.Chan.getChanContents1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:09:10.963092301 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.getChanContents_closure
.type Control.Concurrent.Chan.getChanContents_closure, @object
Control.Concurrent.Chan.getChanContents_closure:
	.quad	Control.Concurrent.Chan.getChanContents_info


==================== Asm code ====================
2018-03-16 16:09:10.963789474 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.getChanContents_entry
.type Control.Concurrent.Chan.getChanContents_entry, @object
Control.Concurrent.Chan.getChanContents_entry:
_cdVvG:
	jmp Control.Concurrent.Chan.getChanContents1_entry
	.size Control.Concurrent.Chan.getChanContents_entry, .-Control.Concurrent.Chan.getChanContents_entry


==================== Asm code ====================
2018-03-16 16:09:10.964429063 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.getChanContents_info
.type Control.Concurrent.Chan.getChanContents_info, @object
Control.Concurrent.Chan.getChanContents_info:
	.quad	Control.Concurrent.Chan.getChanContents_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:09:10.968683963 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.dupChan1_closure
.type Control.Concurrent.Chan.dupChan1_closure, @object
Control.Concurrent.Chan.dupChan1_closure:
	.quad	Control.Concurrent.Chan.dupChan1_info


==================== Asm code ====================
2018-03-16 16:09:10.969641792 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.dupChan1_entry
.type Control.Concurrent.Chan.dupChan1_entry, @object
Control.Concurrent.Chan.dupChan1_entry:
_cdVvU:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVw4
_cdVw5:
	movq $block_cdVvR_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cdVvR
_cdVvS:
	movq (%rbx),%rax
	jmp *(%rax)
_cdVw4:
	movl $Control.Concurrent.Chan.dupChan1_closure,%ebx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.dupChan1_entry, .-Control.Concurrent.Chan.dupChan1_entry


==================== Asm code ====================
2018-03-16 16:09:10.970315599 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.dupChan1_info
.type Control.Concurrent.Chan.dupChan1_info, @object
Control.Concurrent.Chan.dupChan1_info:
	.quad	Control.Concurrent.Chan.dupChan1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:09:10.971057019 UTC

.section .text
.align 8
_cdVvR:
_cdVvR:
	movq $block_cdVvX_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp stg_readMVar#
	.size _cdVvR, .-_cdVvR


==================== Asm code ====================
2018-03-16 16:09:10.971691051 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVvR_info:
	.quad	_cdVvR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.972336423 UTC

.section .text
.align 8
_cdVvX:
_cdVvX:
	movq $block_cdVvZ_info,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp stg_newMVar#
	.size _cdVvX, .-_cdVvX


==================== Asm code ====================
2018-03-16 16:09:10.972971872 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVvX_info:
	.quad	_cdVvX
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.973881343 UTC

.section .text
.align 8
_cdVvZ:
_cdVvZ:
	movq $block_cdVw1_info,(%rbp)
	movq 8(%rbp),%r14
	movq %rbx,%rax
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cdVvZ, .-_cdVvZ


==================== Asm code ====================
2018-03-16 16:09:10.974810974 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVvZ_info:
	.quad	_cdVvZ
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.976895326 UTC

.section .text
.align 8
_cdVw1:
_cdVw1:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdVwb
_cdVwa:
	movq $Control.Concurrent.Chan.Chan_con_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdVwb:
	movq $24,904(%r13)
	jmp stg_gc_noregs
	.size _cdVw1, .-_cdVw1


==================== Asm code ====================
2018-03-16 16:09:10.978025106 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVw1_info:
	.quad	_cdVw1
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:10.981491612 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.dupChan_closure
.type Control.Concurrent.Chan.dupChan_closure, @object
Control.Concurrent.Chan.dupChan_closure:
	.quad	Control.Concurrent.Chan.dupChan_info


==================== Asm code ====================
2018-03-16 16:09:10.982424652 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.dupChan_entry
.type Control.Concurrent.Chan.dupChan_entry, @object
Control.Concurrent.Chan.dupChan_entry:
_cdVwC:
	jmp Control.Concurrent.Chan.dupChan1_entry
	.size Control.Concurrent.Chan.dupChan_entry, .-Control.Concurrent.Chan.dupChan_entry


==================== Asm code ====================
2018-03-16 16:09:10.98330233 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.dupChan_info
.type Control.Concurrent.Chan.dupChan_info, @object
Control.Concurrent.Chan.dupChan_info:
	.quad	Control.Concurrent.Chan.dupChan_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:09:10.985966593 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Concurrent.Chan.$trModule4_bytes
.type Control.Concurrent.Chan.$trModule4_bytes, @object
Control.Concurrent.Chan.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:09:10.988465086 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$trModule3_closure
.type Control.Concurrent.Chan.$trModule3_closure, @object
Control.Concurrent.Chan.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Concurrent.Chan.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:09:10.990898513 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Concurrent.Chan.$trModule2_bytes
.type Control.Concurrent.Chan.$trModule2_bytes, @object
Control.Concurrent.Chan.$trModule2_bytes:
	.asciz "Control.Concurrent.Chan"


==================== Asm code ====================
2018-03-16 16:09:10.993766329 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$trModule1_closure
.type Control.Concurrent.Chan.$trModule1_closure, @object
Control.Concurrent.Chan.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Concurrent.Chan.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:09:10.996591971 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$trModule_closure
.type Control.Concurrent.Chan.$trModule_closure, @object
Control.Concurrent.Chan.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	Control.Concurrent.Chan.$trModule3_closure+1
	.quad	Control.Concurrent.Chan.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:10.99942055 UTC

.section .data
.align 8
.align 1
$krep_rdV0R_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:09:11.001948567 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Concurrent.Chan.$tcChItem2_bytes
.type Control.Concurrent.Chan.$tcChItem2_bytes, @object
Control.Concurrent.Chan.$tcChItem2_bytes:
	.asciz "ChItem"


==================== Asm code ====================
2018-03-16 16:09:11.00473724 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$tcChItem1_closure
.type Control.Concurrent.Chan.$tcChItem1_closure, @object
Control.Concurrent.Chan.$tcChItem1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Concurrent.Chan.$tcChItem2_bytes


==================== Asm code ====================
2018-03-16 16:09:11.007059679 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$tcChItem_closure
.type Control.Concurrent.Chan.$tcChItem_closure, @object
Control.Concurrent.Chan.$tcChItem_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Control.Concurrent.Chan.$trModule_closure+1
	.quad	Control.Concurrent.Chan.$tcChItem1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	6476193138296826625
	.quad	-4187728655318869706
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.008996144 UTC

.section .data
.align 8
.align 1
$krep1_rdV0S_closure:
	.quad	:_con_info
	.quad	$krep_rdV0R_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.01117595 UTC

.section .data
.align 8
.align 1
$krep2_rdV0T_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	Control.Concurrent.Chan.$tcChItem_closure+1
	.quad	$krep1_rdV0S_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.013077009 UTC

.section .data
.align 8
.align 1
$krep3_rdV0U_closure:
	.quad	:_con_info
	.quad	$krep2_rdV0T_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.015568449 UTC

.section .data
.align 8
.align 1
$krep4_rdV0V_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.MVar.$tcMVar_closure
	.quad	$krep3_rdV0U_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.017406139 UTC

.section .data
.align 8
.align 1
$krep5_rdV0W_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep4_rdV0V_closure+1
	.quad	$krep2_rdV0T_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.019119423 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$tc'ChItem1_closure
.type Control.Concurrent.Chan.$tc'ChItem1_closure, @object
Control.Concurrent.Chan.$tc'ChItem1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rdV0R_closure+2
	.quad	$krep5_rdV0W_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.020800502 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Concurrent.Chan.$tc'ChItem3_bytes
.type Control.Concurrent.Chan.$tc'ChItem3_bytes, @object
Control.Concurrent.Chan.$tc'ChItem3_bytes:
	.asciz "'ChItem"


==================== Asm code ====================
2018-03-16 16:09:11.022492313 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$tc'ChItem2_closure
.type Control.Concurrent.Chan.$tc'ChItem2_closure, @object
Control.Concurrent.Chan.$tc'ChItem2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Concurrent.Chan.$tc'ChItem3_bytes


==================== Asm code ====================
2018-03-16 16:09:11.024414046 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$tc'ChItem_closure
.type Control.Concurrent.Chan.$tc'ChItem_closure, @object
Control.Concurrent.Chan.$tc'ChItem_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Control.Concurrent.Chan.$trModule_closure+1
	.quad	Control.Concurrent.Chan.$tc'ChItem2_closure+1
	.quad	Control.Concurrent.Chan.$tc'ChItem1_closure+4
	.quad	-7756722891889887769
	.quad	-3993398973029236138
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.026438 UTC

.section .data
.align 8
.align 1
$krep6_rdV0X_closure:
	.quad	:_con_info
	.quad	$krep4_rdV0V_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.028319014 UTC

.section .data
.align 8
.align 1
$krep7_rdV0Y_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.MVar.$tcMVar_closure
	.quad	$krep6_rdV0X_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.030634343 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Concurrent.Chan.$tcChan2_bytes
.type Control.Concurrent.Chan.$tcChan2_bytes, @object
Control.Concurrent.Chan.$tcChan2_bytes:
	.asciz "Chan"


==================== Asm code ====================
2018-03-16 16:09:11.032453797 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$tcChan1_closure
.type Control.Concurrent.Chan.$tcChan1_closure, @object
Control.Concurrent.Chan.$tcChan1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Concurrent.Chan.$tcChan2_bytes


==================== Asm code ====================
2018-03-16 16:09:11.034365495 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$tcChan_closure
.type Control.Concurrent.Chan.$tcChan_closure, @object
Control.Concurrent.Chan.$tcChan_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Control.Concurrent.Chan.$trModule_closure+1
	.quad	Control.Concurrent.Chan.$tcChan1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	8939098401262630739
	.quad	-5600099150000977117
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.036572683 UTC

.section .data
.align 8
.align 1
$krep8_rdV0Z_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	Control.Concurrent.Chan.$tcChan_closure+1
	.quad	$krep1_rdV0S_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.039048408 UTC

.section .data
.align 8
.align 1
$krep9_rdV10_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep7_rdV0Y_closure+1
	.quad	$krep8_rdV0Z_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.041889282 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$tc'Chan1_closure
.type Control.Concurrent.Chan.$tc'Chan1_closure, @object
Control.Concurrent.Chan.$tc'Chan1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep7_rdV0Y_closure+1
	.quad	$krep9_rdV10_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.044405649 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Concurrent.Chan.$tc'Chan3_bytes
.type Control.Concurrent.Chan.$tc'Chan3_bytes, @object
Control.Concurrent.Chan.$tc'Chan3_bytes:
	.asciz "'Chan"


==================== Asm code ====================
2018-03-16 16:09:11.046331111 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$tc'Chan2_closure
.type Control.Concurrent.Chan.$tc'Chan2_closure, @object
Control.Concurrent.Chan.$tc'Chan2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Concurrent.Chan.$tc'Chan3_bytes


==================== Asm code ====================
2018-03-16 16:09:11.048239249 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$tc'Chan_closure
.type Control.Concurrent.Chan.$tc'Chan_closure, @object
Control.Concurrent.Chan.$tc'Chan_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Control.Concurrent.Chan.$trModule_closure+1
	.quad	Control.Concurrent.Chan.$tc'Chan2_closure+1
	.quad	Control.Concurrent.Chan.$tc'Chan1_closure+4
	.quad	735828590425899369
	.quad	-5356344790794991547
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.051224261 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.ChItem_closure
.type Control.Concurrent.Chan.ChItem_closure, @object
Control.Concurrent.Chan.ChItem_closure:
	.quad	Control.Concurrent.Chan.ChItem_info


==================== Asm code ====================
2018-03-16 16:09:11.052122613 UTC

.section .text
.align 8
Control.Concurrent.Chan.ChItem_entry:
_cdVxh:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdVxl
_cdVxk:
	movq $Control.Concurrent.Chan.ChItem_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cdVxl:
	movq $24,904(%r13)
	movl $Control.Concurrent.Chan.ChItem_closure,%ebx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.ChItem_entry, .-Control.Concurrent.Chan.ChItem_entry


==================== Asm code ====================
2018-03-16 16:09:11.05278024 UTC

.section .data.rel.ro
.align 8
.align 1
Control.Concurrent.Chan.ChItem_info:
	.quad	Control.Concurrent.Chan.ChItem_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:09:11.055358895 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.Chan_closure
.type Control.Concurrent.Chan.Chan_closure, @object
Control.Concurrent.Chan.Chan_closure:
	.quad	Control.Concurrent.Chan.Chan_info


==================== Asm code ====================
2018-03-16 16:09:11.056190546 UTC

.section .text
.align 8
Control.Concurrent.Chan.Chan_entry:
_cdVxw:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdVxA
_cdVxz:
	movq $Control.Concurrent.Chan.Chan_con_info,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cdVxA:
	movq $24,904(%r13)
	movl $Control.Concurrent.Chan.Chan_closure,%ebx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.Chan_entry, .-Control.Concurrent.Chan.Chan_entry


==================== Asm code ====================
2018-03-16 16:09:11.056895245 UTC

.section .data.rel.ro
.align 8
.align 1
Control.Concurrent.Chan.Chan_info:
	.quad	Control.Concurrent.Chan.Chan_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:09:11.059529295 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
idVk2_str:
	.asciz "base:Control.Concurrent.Chan.ChItem"


==================== Asm code ====================
2018-03-16 16:09:11.060417906 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.ChItem_con_entry
.type Control.Concurrent.Chan.ChItem_con_entry, @object
Control.Concurrent.Chan.ChItem_con_entry:
_cdVxG:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Control.Concurrent.Chan.ChItem_con_entry, .-Control.Concurrent.Chan.ChItem_con_entry


==================== Asm code ====================
2018-03-16 16:09:11.061269424 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.ChItem_con_info
.type Control.Concurrent.Chan.ChItem_con_info, @object
Control.Concurrent.Chan.ChItem_con_info:
	.quad	Control.Concurrent.Chan.ChItem_con_entry
	.quad	2
	.quad	4
	.quad	idVk2_str


==================== Asm code ====================
2018-03-16 16:09:11.063526723 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
idVk4_str:
	.asciz "base:Control.Concurrent.Chan.Chan"


==================== Asm code ====================
2018-03-16 16:09:11.064276364 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.Chan_con_entry
.type Control.Concurrent.Chan.Chan_con_entry, @object
Control.Concurrent.Chan.Chan_con_entry:
_cdVxM:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Control.Concurrent.Chan.Chan_con_entry, .-Control.Concurrent.Chan.Chan_con_entry


==================== Asm code ====================
2018-03-16 16:09:11.064932493 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.Chan_con_info
.type Control.Concurrent.Chan.Chan_con_info, @object
Control.Concurrent.Chan.Chan_con_info:
	.quad	Control.Concurrent.Chan.Chan_con_entry
	.quad	2
	.quad	4
	.quad	idVk4_str


==================== Asm code ====================
2018-03-16 16:09:11.067389994 UTC

.section .data.rel.ro
.align 8
.align 1
SdVbR_srt:


==================== Asm code ====================
2018-03-16 16:09:11.598270875 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$WChItem_closure
.type Control.Concurrent.Chan.$WChItem_closure, @object
Control.Concurrent.Chan.$WChItem_closure:
	.quad	Control.Concurrent.Chan.$WChItem_info


==================== Asm code ====================
2018-03-16 16:09:11.599169645 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.$WChItem_entry
.type Control.Concurrent.Chan.$WChItem_entry, @object
Control.Concurrent.Chan.$WChItem_entry:
_cdVAE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVAI
_cdVAJ:
	leaq block_cdVAB_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cdVAB
_cdVAC:
	movq (%rbx),%rax
	jmp *(%rax)
_cdVAI:
	leaq Control.Concurrent.Chan.$WChItem_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.$WChItem_entry, .-Control.Concurrent.Chan.$WChItem_entry


==================== Asm code ====================
2018-03-16 16:09:11.599905159 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.$WChItem_info
.type Control.Concurrent.Chan.$WChItem_info, @object
Control.Concurrent.Chan.$WChItem_info:
	.quad	Control.Concurrent.Chan.$WChItem_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:09:11.600736436 UTC

.section .text
.align 8
_cdVAB:
_cdVAB:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdVAM
_cdVAL:
	movq 7(%rbx),%rax
	leaq Control.Concurrent.Chan.ChItem_con_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdVAM:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cdVAB, .-_cdVAB


==================== Asm code ====================
2018-03-16 16:09:11.601577666 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVAB_info:
	.quad	_cdVAB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.605670726 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$WChan_closure
.type Control.Concurrent.Chan.$WChan_closure, @object
Control.Concurrent.Chan.$WChan_closure:
	.quad	Control.Concurrent.Chan.$WChan_info


==================== Asm code ====================
2018-03-16 16:09:11.606630368 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.$WChan_entry
.type Control.Concurrent.Chan.$WChan_entry, @object
Control.Concurrent.Chan.$WChan_entry:
_cdVB8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVBh
_cdVBi:
	leaq block_cdVB5_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cdVB5
_cdVB6:
	movq (%rbx),%rax
	jmp *(%rax)
_cdVBh:
	leaq Control.Concurrent.Chan.$WChan_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.$WChan_entry, .-Control.Concurrent.Chan.$WChan_entry


==================== Asm code ====================
2018-03-16 16:09:11.607383853 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.$WChan_info
.type Control.Concurrent.Chan.$WChan_info, @object
Control.Concurrent.Chan.$WChan_info:
	.quad	Control.Concurrent.Chan.$WChan_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:09:11.608174561 UTC

.section .text
.align 8
_cdVB5:
_cdVB5:
	leaq block_cdVBb_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cdVBb
_cdVBc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdVB5, .-_cdVB5


==================== Asm code ====================
2018-03-16 16:09:11.608888435 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVB5_info:
	.quad	_cdVB5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.609812693 UTC

.section .text
.align 8
_cdVBb:
_cdVBb:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdVBm
_cdVBl:
	movq 7(%rbx),%rax
	leaq Control.Concurrent.Chan.Chan_con_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdVBm:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cdVBb, .-_cdVBb


==================== Asm code ====================
2018-03-16 16:09:11.610587253 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVBb_info:
	.quad	_cdVBb
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.61605971 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$fEqChan_$c==_closure
.type Control.Concurrent.Chan.$fEqChan_$c==_closure, @object
Control.Concurrent.Chan.$fEqChan_$c==_closure:
	.quad	Control.Concurrent.Chan.$fEqChan_$c==_info


==================== Asm code ====================
2018-03-16 16:09:11.617069454 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.$fEqChan_$c==_entry
.type Control.Concurrent.Chan.$fEqChan_$c==_entry, @object
Control.Concurrent.Chan.$fEqChan_$c==_entry:
_cdVBO:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVBS
_cdVBT:
	leaq block_cdVBL_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cdVBL
_cdVBM:
	movq (%rbx),%rax
	jmp *(%rax)
_cdVBS:
	leaq Control.Concurrent.Chan.$fEqChan_$c==_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.$fEqChan_$c==_entry, .-Control.Concurrent.Chan.$fEqChan_$c==_entry


==================== Asm code ====================
2018-03-16 16:09:11.61791569 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.$fEqChan_$c==_info
.type Control.Concurrent.Chan.$fEqChan_$c==_info, @object
Control.Concurrent.Chan.$fEqChan_$c==_info:
	.quad	Control.Concurrent.Chan.$fEqChan_$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:09:11.619085183 UTC

.section .text
.align 8
_cdVBL:
_cdVBL:
	leaq block_cdVBR_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cdVBR
_cdVBV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdVBL, .-_cdVBL


==================== Asm code ====================
2018-03-16 16:09:11.620150345 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVBL_info:
	.quad	_cdVBL
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.621011126 UTC

.section .text
.align 8
_cdVBR:
_cdVBR:
	movq 16(%rbp),%rax
	cmpq 7(%rbx),%rax
	je _cdVCb
_cdVC5:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdVCb:
	movq 8(%rbp),%rax
	cmpq 15(%rbx),%rax
	sete %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdVBR, .-_cdVBR


==================== Asm code ====================
2018-03-16 16:09:11.621833509 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVBR_info:
	.quad	_cdVBR
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.626108516 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$fEqChan_$c/=_closure
.type Control.Concurrent.Chan.$fEqChan_$c/=_closure, @object
Control.Concurrent.Chan.$fEqChan_$c/=_closure:
	.quad	Control.Concurrent.Chan.$fEqChan_$c/=_info


==================== Asm code ====================
2018-03-16 16:09:11.627069155 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.$fEqChan_$c/=_entry
.type Control.Concurrent.Chan.$fEqChan_$c/=_entry, @object
Control.Concurrent.Chan.$fEqChan_$c/=_entry:
_cdVCM:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVCQ
_cdVCR:
	leaq block_cdVCJ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cdVCJ
_cdVCK:
	movq (%rbx),%rax
	jmp *(%rax)
_cdVCQ:
	leaq Control.Concurrent.Chan.$fEqChan_$c/=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.$fEqChan_$c/=_entry, .-Control.Concurrent.Chan.$fEqChan_$c/=_entry


==================== Asm code ====================
2018-03-16 16:09:11.627801285 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.$fEqChan_$c/=_info
.type Control.Concurrent.Chan.$fEqChan_$c/=_info, @object
Control.Concurrent.Chan.$fEqChan_$c/=_info:
	.quad	Control.Concurrent.Chan.$fEqChan_$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:09:11.628573358 UTC

.section .text
.align 8
_cdVCJ:
_cdVCJ:
	leaq block_cdVCP_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cdVCP
_cdVCT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdVCJ, .-_cdVCJ


==================== Asm code ====================
2018-03-16 16:09:11.629952222 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVCJ_info:
	.quad	_cdVCJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.630886489 UTC

.section .text
.align 8
_cdVCP:
_cdVCP:
	movq 16(%rbp),%rax
	cmpq 7(%rbx),%rax
	jne _cdVDi
_cdVD9:
	movq 8(%rbp),%rax
	cmpq 15(%rbx),%rax
	jne _cdVDi
_cdVDo:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdVDi:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdVCP, .-_cdVCP


==================== Asm code ====================
2018-03-16 16:09:11.632980097 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVCP_info:
	.quad	_cdVCP
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.635865032 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$fEqChan_closure
.type Control.Concurrent.Chan.$fEqChan_closure, @object
Control.Concurrent.Chan.$fEqChan_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	Control.Concurrent.Chan.$fEqChan_$c==_closure+2
	.quad	Control.Concurrent.Chan.$fEqChan_$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.64333889 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.newChan1_closure
.type Control.Concurrent.Chan.newChan1_closure, @object
Control.Concurrent.Chan.newChan1_closure:
	.quad	Control.Concurrent.Chan.newChan1_info


==================== Asm code ====================
2018-03-16 16:09:11.644576929 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.newChan1_entry
.type Control.Concurrent.Chan.newChan1_entry, @object
Control.Concurrent.Chan.newChan1_entry:
_cdVE6:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVE7
_cdVE8:
	leaq block_cdVDU_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *stg_newMVar#@gotpcrel(%rip)
_cdVE7:
	leaq Control.Concurrent.Chan.newChan1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.newChan1_entry, .-Control.Concurrent.Chan.newChan1_entry


==================== Asm code ====================
2018-03-16 16:09:11.64556448 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.newChan1_info
.type Control.Concurrent.Chan.newChan1_info, @object
Control.Concurrent.Chan.newChan1_info:
	.quad	Control.Concurrent.Chan.newChan1_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:09:11.646250251 UTC

.section .text
.align 8
_cdVDU:
_cdVDU:
	leaq block_cdVDW_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *stg_newMVar#@gotpcrel(%rip)
	.size _cdVDU, .-_cdVDU


==================== Asm code ====================
2018-03-16 16:09:11.64689593 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVDU_info:
	.quad	_cdVDU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.647785293 UTC

.section .text
.align 8
_cdVDW:
_cdVDW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cdVEc
_cdVEb:
	movq GHC.MVar.MVar_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_cdVDZ_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -7(%r12),%rax
	movq %rax,%r14
	movq %rbx,%rcx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
_cdVEc:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cdVDW, .-_cdVDW


==================== Asm code ====================
2018-03-16 16:09:11.648867844 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVDW_info:
	.quad	_cdVDW
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.649966116 UTC

.section .text
.align 8
_cdVDZ:
_cdVDZ:
	leaq block_cdVE1_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_newMVar#@gotpcrel(%rip)
	.size _cdVDZ, .-_cdVDZ


==================== Asm code ====================
2018-03-16 16:09:11.650940794 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVDZ_info:
	.quad	_cdVDZ
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.652029948 UTC

.section .text
.align 8
_cdVE1:
_cdVE1:
	leaq block_cdVE3_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq %rbx,%rax
	movq %rax,16(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cdVE1, .-_cdVE1


==================== Asm code ====================
2018-03-16 16:09:11.653037885 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVE1_info:
	.quad	_cdVE1
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.654342046 UTC

.section .text
.align 8
_cdVE3:
_cdVE3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdVEh
_cdVEg:
	leaq Control.Concurrent.Chan.Chan_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdVEh:
	movq $24,904(%r13)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cdVE3, .-_cdVE3


==================== Asm code ====================
2018-03-16 16:09:11.655520016 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVE3_info:
	.quad	_cdVE3
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.659114506 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.newChan_closure
.type Control.Concurrent.Chan.newChan_closure, @object
Control.Concurrent.Chan.newChan_closure:
	.quad	Control.Concurrent.Chan.newChan_info


==================== Asm code ====================
2018-03-16 16:09:11.6601936 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.newChan_entry
.type Control.Concurrent.Chan.newChan_entry, @object
Control.Concurrent.Chan.newChan_entry:
_cdVER:
	jmp Control.Concurrent.Chan.newChan1_entry
	.size Control.Concurrent.Chan.newChan_entry, .-Control.Concurrent.Chan.newChan_entry


==================== Asm code ====================
2018-03-16 16:09:11.661049209 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.newChan_info
.type Control.Concurrent.Chan.newChan_info, @object
Control.Concurrent.Chan.newChan_info:
	.quad	Control.Concurrent.Chan.newChan_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:09:11.675734964 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$wwriteChan_closure
.type Control.Concurrent.Chan.$wwriteChan_closure, @object
Control.Concurrent.Chan.$wwriteChan_closure:
	.quad	Control.Concurrent.Chan.$wwriteChan_info


==================== Asm code ====================
2018-03-16 16:09:11.677083161 UTC

.section .text
.align 8
sat_sdVz5_entry:
_cdVFj:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVFr
_cdVFs:
	leaq block_cdVFe_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rcx
	movq 23(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rax,-24(%rbp)
	movq %rcx,-16(%rbp)
	movq %rdx,-8(%rbp)
	addq $-32,%rbp
	jmp *stg_takeMVar#@gotpcrel(%rip)
_cdVFr:
	jmp *-8(%r13)
	.size sat_sdVz5_entry, .-sat_sdVz5_entry


==================== Asm code ====================
2018-03-16 16:09:11.678262143 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sdVz5_info:
	.quad	sat_sdVz5_entry
	.quad	3
	.quad	8
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:09:11.679347634 UTC

.section .text
.align 8
_cdVFe:
_cdVFe:
	leaq block_cdVFg_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cdVFg
_cdVFh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdVFe, .-_cdVFe


==================== Asm code ====================
2018-03-16 16:09:11.680268668 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVFe_info:
	.quad	_cdVFe
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.682209963 UTC

.section .text
.align 8
_cdVFg:
_cdVFg:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdVFw
_cdVFv:
	movq 7(%rbx),%rax
	leaq Control.Concurrent.Chan.ChItem_con_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,(%r12)
	leaq block_cdVFn_info(%rip),%rbx
	movq %rbx,(%rbp)
	leaq -15(%r12),%r14
	movq %rax,%rbx
	jmp *stg_putMVar#@gotpcrel(%rip)
_cdVFw:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cdVFg, .-_cdVFg


==================== Asm code ====================
2018-03-16 16:09:11.683360551 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVFg_info:
	.quad	_cdVFg
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.684622127 UTC

.section .text
.align 8
_cdVFn:
_cdVFn:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cdVFz
_cdVFy:
	movq GHC.MVar.MVar_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	leaq block_cdVFq_info(%rip),%rax
	movq %rax,24(%rbp)
	leaq -7(%r12),%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
_cdVFz:
	movq $16,904(%r13)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cdVFn, .-_cdVFn


==================== Asm code ====================
2018-03-16 16:09:11.685867167 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVFn_info:
	.quad	_cdVFn
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.687089786 UTC

.section .text
.align 8
_cdVFq:
_cdVFq:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdVFq, .-_cdVFq


==================== Asm code ====================
2018-03-16 16:09:11.688045895 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVFq_info:
	.quad	_cdVFq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.689336136 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.$wwriteChan_entry
.type Control.Concurrent.Chan.$wwriteChan_entry, @object
Control.Concurrent.Chan.$wwriteChan_entry:
_cdVFG:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVFH
_cdVFI:
	leaq block_cdVF2_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp *stg_newMVar#@gotpcrel(%rip)
_cdVFH:
	leaq Control.Concurrent.Chan.$wwriteChan_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.$wwriteChan_entry, .-Control.Concurrent.Chan.$wwriteChan_entry


==================== Asm code ====================
2018-03-16 16:09:11.690460526 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.$wwriteChan_info
.type Control.Concurrent.Chan.$wwriteChan_info, @object
Control.Concurrent.Chan.$wwriteChan_info:
	.quad	Control.Concurrent.Chan.$wwriteChan_entry
	.quad	0
	.quad	14
	.quad	17179869207


==================== Asm code ====================
2018-03-16 16:09:11.691596567 UTC

.section .text
.align 8
_cdVF2:
_cdVF2:
	leaq block_cdVF4_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
	.size _cdVF2, .-_cdVF2


==================== Asm code ====================
2018-03-16 16:09:11.692682879 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVF2_info:
	.quad	_cdVF2
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.694169004 UTC

.section .text
.align 8
_cdVF4:
_cdVF4:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _cdVFM
_cdVFL:
	movq 16(%rbp),%rax
	testq %rbx,%rbx
	je _cdVFF
_cdVFE:
	addq $-32,%r12
	leaq block_cdVFN_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_takeMVar#@gotpcrel(%rip)
_cdVFM:
	movq $32,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_cdVFF:
	leaq sat_sdVz5_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $32,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
	.size _cdVF4, .-_cdVF4


==================== Asm code ====================
2018-03-16 16:09:11.695439114 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVF4_info:
	.quad	_cdVF4
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.698128375 UTC

.section .text
.align 8
_cdVFN:
_cdVFN:
	leaq block_cdVFP_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cdVFP
_cdVFQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdVFN, .-_cdVFN


==================== Asm code ====================
2018-03-16 16:09:11.699065458 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVFN_info:
	.quad	_cdVFN
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.700303011 UTC

.section .text
.align 8
_cdVFP:
_cdVFP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdVG2
_cdVG1:
	movq 7(%rbx),%rax
	leaq Control.Concurrent.Chan.ChItem_con_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	leaq block_cdVFV_info(%rip),%rbx
	movq %rbx,(%rbp)
	leaq -15(%r12),%r14
	movq %rax,%rbx
	jmp *stg_putMVar#@gotpcrel(%rip)
_cdVG2:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cdVFP, .-_cdVFP


==================== Asm code ====================
2018-03-16 16:09:11.70146147 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVFP_info:
	.quad	_cdVFP
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.702604502 UTC

.section .text
.align 8
_cdVFV:
_cdVFV:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cdVG5
_cdVG4:
	movq GHC.MVar.MVar_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_cdVFY_info(%rip),%rax
	movq %rax,24(%rbp)
	leaq -7(%r12),%r14
	movq 16(%rbp),%rbx
	addq $24,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
_cdVG5:
	movq $16,904(%r13)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cdVFV, .-_cdVFV


==================== Asm code ====================
2018-03-16 16:09:11.703654101 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVFV_info:
	.quad	_cdVFV
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.704629439 UTC

.section .text
.align 8
_cdVFY:
_cdVFY:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdVFY, .-_cdVFY


==================== Asm code ====================
2018-03-16 16:09:11.705619726 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVFY_info:
	.quad	_cdVFY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.710370317 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.writeChan1_closure
.type Control.Concurrent.Chan.writeChan1_closure, @object
Control.Concurrent.Chan.writeChan1_closure:
	.quad	Control.Concurrent.Chan.writeChan1_info


==================== Asm code ====================
2018-03-16 16:09:11.711655454 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.writeChan1_entry
.type Control.Concurrent.Chan.writeChan1_entry, @object
Control.Concurrent.Chan.writeChan1_entry:
_cdVHm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVHn
_cdVHo:
	leaq block_cdVHj_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cdVHj
_cdVHk:
	movq (%rbx),%rax
	jmp *(%rax)
_cdVHn:
	leaq Control.Concurrent.Chan.writeChan1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.writeChan1_entry, .-Control.Concurrent.Chan.writeChan1_entry


==================== Asm code ====================
2018-03-16 16:09:11.712707636 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.writeChan1_info
.type Control.Concurrent.Chan.writeChan1_info, @object
Control.Concurrent.Chan.writeChan1_info:
	.quad	Control.Concurrent.Chan.writeChan1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:09:11.713752209 UTC

.section .text
.align 8
_cdVHj:
_cdVHj:
	movq 8(%rbp),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $16,%rbp
	jmp Control.Concurrent.Chan.$wwriteChan_entry
	.size _cdVHj, .-_cdVHj


==================== Asm code ====================
2018-03-16 16:09:11.714670511 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVHj_info:
	.quad	_cdVHj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.718693678 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.writeChan_closure
.type Control.Concurrent.Chan.writeChan_closure, @object
Control.Concurrent.Chan.writeChan_closure:
	.quad	Control.Concurrent.Chan.writeChan_info


==================== Asm code ====================
2018-03-16 16:09:11.719688674 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.writeChan_entry
.type Control.Concurrent.Chan.writeChan_entry, @object
Control.Concurrent.Chan.writeChan_entry:
_cdVHH:
	jmp Control.Concurrent.Chan.writeChan1_entry
	.size Control.Concurrent.Chan.writeChan_entry, .-Control.Concurrent.Chan.writeChan_entry


==================== Asm code ====================
2018-03-16 16:09:11.72054683 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.writeChan_info
.type Control.Concurrent.Chan.writeChan_info, @object
Control.Concurrent.Chan.writeChan_info:
	.quad	Control.Concurrent.Chan.writeChan_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:09:11.725403569 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.writeList2Chan1_closure
.type Control.Concurrent.Chan.writeList2Chan1_closure, @object
Control.Concurrent.Chan.writeList2Chan1_closure:
	.quad	Control.Concurrent.Chan.writeList2Chan1_info


==================== Asm code ====================
2018-03-16 16:09:11.726302109 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.writeList2Chan1_entry
.type Control.Concurrent.Chan.writeList2Chan1_entry, @object
Control.Concurrent.Chan.writeList2Chan1_entry:
_cdVHU:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVHV
_cdVHW:
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	jmp _cdVHY
_cdVHV:
	leaq Control.Concurrent.Chan.writeList2Chan1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.writeList2Chan1_entry, .-Control.Concurrent.Chan.writeList2Chan1_entry


==================== Asm code ====================
2018-03-16 16:09:11.727026216 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.writeList2Chan1_info
.type Control.Concurrent.Chan.writeList2Chan1_info, @object
Control.Concurrent.Chan.writeList2Chan1_info:
	.quad	Control.Concurrent.Chan.writeList2Chan1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:09:11.72777765 UTC

.section .text
.align 8
_cdVHY:
_cdVHY:
	leaq block_cdVI0_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cdVI0
_cdVI2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdVHY, .-_cdVHY


==================== Asm code ====================
2018-03-16 16:09:11.728684454 UTC

.section .text
.align 8
_cdVI0:
_cdVI0:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _cdVI8
_cdVId:
	leaq block_cdVIb_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _cdVIb
_cdVIe:
	movq (%rbx),%rax
	jmp *(%rax)
_cdVI8:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdVI0, .-_cdVI0


==================== Asm code ====================
2018-03-16 16:09:11.729536137 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVI0_info:
	.quad	_cdVI0
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.73049334 UTC

.section .text
.align 8
_cdVIb:
_cdVIb:
	leaq block_cdVIi_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rdi
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	jmp Control.Concurrent.Chan.$wwriteChan_entry
	.size _cdVIb, .-_cdVIb


==================== Asm code ====================
2018-03-16 16:09:11.731368064 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVIb_info:
	.quad	_cdVIb
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.732377315 UTC

.section .text
.align 8
_cdVIi:
_cdVIi:
	movq 8(%rbp),%rax
	movq %rax,24(%rbp)
	addq $16,%rbp
	jmp _cdVHY
	.size _cdVIi, .-_cdVIi


==================== Asm code ====================
2018-03-16 16:09:11.733368722 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVIi_info:
	.quad	_cdVIi
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.736904626 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.writeList2Chan_closure
.type Control.Concurrent.Chan.writeList2Chan_closure, @object
Control.Concurrent.Chan.writeList2Chan_closure:
	.quad	Control.Concurrent.Chan.writeList2Chan_info


==================== Asm code ====================
2018-03-16 16:09:11.738070147 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.writeList2Chan_entry
.type Control.Concurrent.Chan.writeList2Chan_entry, @object
Control.Concurrent.Chan.writeList2Chan_entry:
_cdVIX:
	jmp Control.Concurrent.Chan.writeList2Chan1_entry
	.size Control.Concurrent.Chan.writeList2Chan_entry, .-Control.Concurrent.Chan.writeList2Chan_entry


==================== Asm code ====================
2018-03-16 16:09:11.738961512 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.writeList2Chan_info
.type Control.Concurrent.Chan.writeList2Chan_info, @object
Control.Concurrent.Chan.writeList2Chan_info:
	.quad	Control.Concurrent.Chan.writeList2Chan_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:09:11.755119148 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$wreadChan_closure
.type Control.Concurrent.Chan.$wreadChan_closure, @object
Control.Concurrent.Chan.$wreadChan_closure:
	.quad	Control.Concurrent.Chan.$wreadChan_info


==================== Asm code ====================
2018-03-16 16:09:11.756554363 UTC

.section .text
.align 8
sat_sdVzR_entry:
_cdVJo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVJp
_cdVJq:
	leaq block_cdVJm_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq 14(%rbx),%r14
	movq 6(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
_cdVJp:
	jmp *-8(%r13)
	.size sat_sdVzR_entry, .-sat_sdVzR_entry


==================== Asm code ====================
2018-03-16 16:09:11.757708938 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sdVzR_info:
	.quad	sat_sdVzR_entry
	.quad	2
	.quad	11
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:09:11.759869911 UTC

.section .text
.align 8
_cdVJm:
_cdVJm:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	jmp *stg_raiseIO#@gotpcrel(%rip)
	.size _cdVJm, .-_cdVJm


==================== Asm code ====================
2018-03-16 16:09:11.760884973 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVJm_info:
	.quad	_cdVJm
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.762873531 UTC

.section .text
.align 8
sat_sdVzN_entry:
_cdVJA:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVJM
_cdVJN:
	leaq block_cdVJx_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cdVJx
_cdVJy:
	movq (%rbx),%rax
	jmp *(%rax)
_cdVJM:
	jmp *-8(%r13)
	.size sat_sdVzN_entry, .-sat_sdVzN_entry


==================== Asm code ====================
2018-03-16 16:09:11.76389724 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sdVzN_info:
	.quad	sat_sdVzN_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:09:11.764827447 UTC

.section .text
.align 8
_cdVJx:
_cdVJx:
	leaq block_cdVJD_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	jmp *stg_readMVar#@gotpcrel(%rip)
	.size _cdVJx, .-_cdVJx


==================== Asm code ====================
2018-03-16 16:09:11.765787532 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVJx_info:
	.quad	_cdVJx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.766810885 UTC

.section .text
.align 8
_cdVJD:
_cdVJD:
	leaq block_cdVJF_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cdVJF
_cdVJG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdVJD, .-_cdVJD


==================== Asm code ====================
2018-03-16 16:09:11.767725452 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVJD_info:
	.quad	_cdVJD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.76887914 UTC

.section .text
.align 8
_cdVJF:
_cdVJF:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cdVJS
_cdVJR:
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq GHC.MVar.MVar_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdVJS:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cdVJF, .-_cdVJF


==================== Asm code ====================
2018-03-16 16:09:11.769954344 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVJF_info:
	.quad	_cdVJF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.771018911 UTC

.section .text
.align 8
io1_sdVzx_entry:
_cdVK0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVK4
_cdVK5:
	leaq block_cdVJf_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_takeMVar#@gotpcrel(%rip)
_cdVK4:
	jmp *-8(%r13)
	.size io1_sdVzx_entry, .-io1_sdVzx_entry


==================== Asm code ====================
2018-03-16 16:09:11.772039105 UTC

.section .data.rel.ro
.align 8
.align 1
io1_sdVzx_info:
	.quad	io1_sdVzx_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:09:11.77316716 UTC

.section .text
.align 8
_cdVJf:
_cdVJf:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _cdVK8
_cdVK7:
	leaq sat_sdVzR_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	leaq sat_sdVzN_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq block_cdVJV_info(%rip),%rax
	movq %rax,(%rbp)
	leaq -30(%r12),%r14
	leaq -7(%r12),%rbx
	jmp *stg_catch#@gotpcrel(%rip)
_cdVK8:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cdVJf, .-_cdVJf


==================== Asm code ====================
2018-03-16 16:09:11.774279732 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVJf_info:
	.quad	_cdVJf
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.77535064 UTC

.section .text
.align 8
_cdVJV:
_cdVJV:
	leaq block_cdVJX_info(%rip),%rax
	movq %rax,(%rbp)
	testb $7,%bl
	jne _cdVJX
_cdVJY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdVJV, .-_cdVJV


==================== Asm code ====================
2018-03-16 16:09:11.77626079 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVJV_info:
	.quad	_cdVJV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.77733462 UTC

.section .text
.align 8
_cdVJX:
_cdVJX:
	leaq block_cdVK3_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cdVJX, .-_cdVJX


==================== Asm code ====================
2018-03-16 16:09:11.778292409 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVJX_info:
	.quad	_cdVJX
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.779270791 UTC

.section .text
.align 8
_cdVK3:
_cdVK3:
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cdVK3, .-_cdVK3


==================== Asm code ====================
2018-03-16 16:09:11.78014871 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVK3_info:
	.quad	_cdVK3
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.781356364 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.$wreadChan_entry
.type Control.Concurrent.Chan.$wreadChan_entry, @object
Control.Concurrent.Chan.$wreadChan_entry:
_cdVKi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVKj
_cdVKk:
	leaq block_cdVJ8_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_getMaskingState#@gotpcrel(%rip)
_cdVKj:
	leaq Control.Concurrent.Chan.$wreadChan_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.$wreadChan_entry, .-Control.Concurrent.Chan.$wreadChan_entry


==================== Asm code ====================
2018-03-16 16:09:11.782081329 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.$wreadChan_info
.type Control.Concurrent.Chan.$wreadChan_info, @object
Control.Concurrent.Chan.$wreadChan_info:
	.quad	Control.Concurrent.Chan.$wreadChan_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 16:09:11.782944865 UTC

.section .text
.align 8
_cdVJ8:
_cdVJ8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cdVKn
_cdVKm:
	leaq io1_sdVzx_info(%rip),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rax
	testq %rbx,%rbx
	je _cdVKh
_cdVKg:
	movq %rax,%rbx
	addq $16,%rbp
	jmp io1_sdVzx_entry
_cdVKn:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_cdVKh:
	movq %rax,%rbx
	addq $16,%rbp
	jmp *stg_maskAsyncExceptions#@gotpcrel(%rip)
	.size _cdVJ8, .-_cdVJ8


==================== Asm code ====================
2018-03-16 16:09:11.783664956 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVJ8_info:
	.quad	_cdVJ8
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.786856731 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.readChan1_closure
.type Control.Concurrent.Chan.readChan1_closure, @object
Control.Concurrent.Chan.readChan1_closure:
	.quad	Control.Concurrent.Chan.readChan1_info


==================== Asm code ====================
2018-03-16 16:09:11.787755218 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.readChan1_entry
.type Control.Concurrent.Chan.readChan1_entry, @object
Control.Concurrent.Chan.readChan1_entry:
_cdVLz:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVLA
_cdVLB:
	leaq block_cdVLw_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cdVLw
_cdVLx:
	movq (%rbx),%rax
	jmp *(%rax)
_cdVLA:
	leaq Control.Concurrent.Chan.readChan1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.readChan1_entry, .-Control.Concurrent.Chan.readChan1_entry


==================== Asm code ====================
2018-03-16 16:09:11.78847831 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.readChan1_info
.type Control.Concurrent.Chan.readChan1_info, @object
Control.Concurrent.Chan.readChan1_info:
	.quad	Control.Concurrent.Chan.readChan1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:09:11.789205025 UTC

.section .text
.align 8
_cdVLw:
_cdVLw:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp Control.Concurrent.Chan.$wreadChan_entry
	.size _cdVLw, .-_cdVLw


==================== Asm code ====================
2018-03-16 16:09:11.789880729 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVLw_info:
	.quad	_cdVLw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.792232472 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.readChan_closure
.type Control.Concurrent.Chan.readChan_closure, @object
Control.Concurrent.Chan.readChan_closure:
	.quad	Control.Concurrent.Chan.readChan_info


==================== Asm code ====================
2018-03-16 16:09:11.792896082 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.readChan_entry
.type Control.Concurrent.Chan.readChan_entry, @object
Control.Concurrent.Chan.readChan_entry:
_cdVLU:
	jmp Control.Concurrent.Chan.readChan1_entry
	.size Control.Concurrent.Chan.readChan_entry, .-Control.Concurrent.Chan.readChan_entry


==================== Asm code ====================
2018-03-16 16:09:11.793839104 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.readChan_info
.type Control.Concurrent.Chan.readChan_info, @object
Control.Concurrent.Chan.readChan_info:
	.quad	Control.Concurrent.Chan.readChan_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:09:11.80229669 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.getChanContents1_closure
.type Control.Concurrent.Chan.getChanContents1_closure, @object
Control.Concurrent.Chan.getChanContents1_closure:
	.quad	Control.Concurrent.Chan.getChanContents1_info


==================== Asm code ====================
2018-03-16 16:09:11.803578078 UTC

.section .text
.align 8
sat_sdVAj_entry:
_cdVMf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVMn
_cdVMo:
	leaq block_cdVMa_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_noDuplicate#@gotpcrel(%rip)
_cdVMn:
	jmp *-8(%r13)
	.size sat_sdVAj_entry, .-sat_sdVAj_entry


==================== Asm code ====================
2018-03-16 16:09:11.804591432 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sdVAj_info:
	.quad	sat_sdVAj_entry
	.quad	1
	.quad	9
	.quad	4294967299


==================== Asm code ====================
2018-03-16 16:09:11.805601946 UTC

.section .text
.align 8
_cdVMa:
_cdVMa:
	movq 8(%rbp),%rax
	leaq block_cdVMc_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _cdVMc
_cdVMd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cdVMa, .-_cdVMa


==================== Asm code ====================
2018-03-16 16:09:11.806256772 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVMa_info:
	.quad	_cdVMa
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.807537422 UTC

.section .text
.align 8
_cdVMc:
_cdVMc:
	leaq block_cdVMi_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp Control.Concurrent.Chan.$wreadChan_entry
	.size _cdVMc, .-_cdVMc


==================== Asm code ====================
2018-03-16 16:09:11.808203133 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVMc_info:
	.quad	_cdVMc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.80885702 UTC

.section .text
.align 8
_cdVMi:
_cdVMi:
	leaq block_cdVMk_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp Control.Concurrent.Chan.getChanContents1_entry
	.size _cdVMi, .-_cdVMi


==================== Asm code ====================
2018-03-16 16:09:11.809487298 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVMi_info:
	.quad	_cdVMi
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.81024718 UTC

.section .text
.align 8
_cdVMk:
_cdVMk:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdVMu
_cdVMt:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdVMu:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cdVMk, .-_cdVMk


==================== Asm code ====================
2018-03-16 16:09:11.810892732 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVMk_info:
	.quad	_cdVMk
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.811627036 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.getChanContents1_entry
.type Control.Concurrent.Chan.getChanContents1_entry, @object
Control.Concurrent.Chan.getChanContents1_entry:
_cdVMw:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cdVMA
_cdVMz:
	leaq sat_sdVAj_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%r14
	jmp *GHC.IO.Unsafe.unsafeDupableInterleaveIO_entry@gotpcrel(%rip)
_cdVMA:
	movq $16,904(%r13)
	leaq Control.Concurrent.Chan.getChanContents1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.getChanContents1_entry, .-Control.Concurrent.Chan.getChanContents1_entry


==================== Asm code ====================
2018-03-16 16:09:11.812312675 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.getChanContents1_info
.type Control.Concurrent.Chan.getChanContents1_info, @object
Control.Concurrent.Chan.getChanContents1_info:
	.quad	Control.Concurrent.Chan.getChanContents1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:09:11.814741903 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.getChanContents_closure
.type Control.Concurrent.Chan.getChanContents_closure, @object
Control.Concurrent.Chan.getChanContents_closure:
	.quad	Control.Concurrent.Chan.getChanContents_info


==================== Asm code ====================
2018-03-16 16:09:11.815392536 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.getChanContents_entry
.type Control.Concurrent.Chan.getChanContents_entry, @object
Control.Concurrent.Chan.getChanContents_entry:
_cdVN9:
	jmp Control.Concurrent.Chan.getChanContents1_entry
	.size Control.Concurrent.Chan.getChanContents_entry, .-Control.Concurrent.Chan.getChanContents_entry


==================== Asm code ====================
2018-03-16 16:09:11.815962039 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.getChanContents_info
.type Control.Concurrent.Chan.getChanContents_info, @object
Control.Concurrent.Chan.getChanContents_info:
	.quad	Control.Concurrent.Chan.getChanContents_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:09:11.820231003 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.dupChan1_closure
.type Control.Concurrent.Chan.dupChan1_closure, @object
Control.Concurrent.Chan.dupChan1_closure:
	.quad	Control.Concurrent.Chan.dupChan1_info


==================== Asm code ====================
2018-03-16 16:09:11.821127812 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.dupChan1_entry
.type Control.Concurrent.Chan.dupChan1_entry, @object
Control.Concurrent.Chan.dupChan1_entry:
_cdVNn:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cdVNx
_cdVNy:
	leaq block_cdVNk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cdVNk
_cdVNl:
	movq (%rbx),%rax
	jmp *(%rax)
_cdVNx:
	leaq Control.Concurrent.Chan.dupChan1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.dupChan1_entry, .-Control.Concurrent.Chan.dupChan1_entry


==================== Asm code ====================
2018-03-16 16:09:11.82201659 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.dupChan1_info
.type Control.Concurrent.Chan.dupChan1_info, @object
Control.Concurrent.Chan.dupChan1_info:
	.quad	Control.Concurrent.Chan.dupChan1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:09:11.822740418 UTC

.section .text
.align 8
_cdVNk:
_cdVNk:
	leaq block_cdVNq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *stg_readMVar#@gotpcrel(%rip)
	.size _cdVNk, .-_cdVNk


==================== Asm code ====================
2018-03-16 16:09:11.823409354 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVNk_info:
	.quad	_cdVNk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.824149911 UTC

.section .text
.align 8
_cdVNq:
_cdVNq:
	leaq block_cdVNs_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *stg_newMVar#@gotpcrel(%rip)
	.size _cdVNq, .-_cdVNq


==================== Asm code ====================
2018-03-16 16:09:11.824770319 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVNq_info:
	.quad	_cdVNq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.825503572 UTC

.section .text
.align 8
_cdVNs:
_cdVNs:
	leaq block_cdVNu_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq %rbx,%rax
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cdVNs, .-_cdVNs


==================== Asm code ====================
2018-03-16 16:09:11.826128682 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVNs_info:
	.quad	_cdVNs
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.826909361 UTC

.section .text
.align 8
_cdVNu:
_cdVNu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdVNE
_cdVND:
	leaq Control.Concurrent.Chan.Chan_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cdVNE:
	movq $24,904(%r13)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cdVNu, .-_cdVNu


==================== Asm code ====================
2018-03-16 16:09:11.827624722 UTC

.section .data.rel.ro
.align 8
.align 1
block_cdVNu_info:
	.quad	_cdVNu
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 16:09:11.830003461 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.dupChan_closure
.type Control.Concurrent.Chan.dupChan_closure, @object
Control.Concurrent.Chan.dupChan_closure:
	.quad	Control.Concurrent.Chan.dupChan_info


==================== Asm code ====================
2018-03-16 16:09:11.830657811 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.dupChan_entry
.type Control.Concurrent.Chan.dupChan_entry, @object
Control.Concurrent.Chan.dupChan_entry:
_cdVOa:
	jmp Control.Concurrent.Chan.dupChan1_entry
	.size Control.Concurrent.Chan.dupChan_entry, .-Control.Concurrent.Chan.dupChan_entry


==================== Asm code ====================
2018-03-16 16:09:11.831298695 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.dupChan_info
.type Control.Concurrent.Chan.dupChan_info, @object
Control.Concurrent.Chan.dupChan_info:
	.quad	Control.Concurrent.Chan.dupChan_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 16:09:11.833047939 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Concurrent.Chan.$trModule4_bytes
.type Control.Concurrent.Chan.$trModule4_bytes, @object
Control.Concurrent.Chan.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 16:09:11.834855286 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$trModule3_closure
.type Control.Concurrent.Chan.$trModule3_closure, @object
Control.Concurrent.Chan.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Concurrent.Chan.$trModule4_bytes


==================== Asm code ====================
2018-03-16 16:09:11.836654227 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Concurrent.Chan.$trModule2_bytes
.type Control.Concurrent.Chan.$trModule2_bytes, @object
Control.Concurrent.Chan.$trModule2_bytes:
	.asciz "Control.Concurrent.Chan"


==================== Asm code ====================
2018-03-16 16:09:11.838975228 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$trModule1_closure
.type Control.Concurrent.Chan.$trModule1_closure, @object
Control.Concurrent.Chan.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Concurrent.Chan.$trModule2_bytes


==================== Asm code ====================
2018-03-16 16:09:11.841439973 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$trModule_closure
.type Control.Concurrent.Chan.$trModule_closure, @object
Control.Concurrent.Chan.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	Control.Concurrent.Chan.$trModule3_closure+1
	.quad	Control.Concurrent.Chan.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.843176837 UTC

.section .data
.align 8
.align 1
$krep_rdV0R_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 16:09:11.844867152 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Concurrent.Chan.$tcChItem2_bytes
.type Control.Concurrent.Chan.$tcChItem2_bytes, @object
Control.Concurrent.Chan.$tcChItem2_bytes:
	.asciz "ChItem"


==================== Asm code ====================
2018-03-16 16:09:11.846590137 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$tcChItem1_closure
.type Control.Concurrent.Chan.$tcChItem1_closure, @object
Control.Concurrent.Chan.$tcChItem1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Concurrent.Chan.$tcChItem2_bytes


==================== Asm code ====================
2018-03-16 16:09:11.848420783 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$tcChItem_closure
.type Control.Concurrent.Chan.$tcChItem_closure, @object
Control.Concurrent.Chan.$tcChItem_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Control.Concurrent.Chan.$trModule_closure+1
	.quad	Control.Concurrent.Chan.$tcChItem1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	6476193138296826625
	.quad	-4187728655318869706
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.850386545 UTC

.section .data
.align 8
.align 1
$krep1_rdV0S_closure:
	.quad	:_con_info
	.quad	$krep_rdV0R_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.852242829 UTC

.section .data
.align 8
.align 1
$krep2_rdV0T_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	Control.Concurrent.Chan.$tcChItem_closure+1
	.quad	$krep1_rdV0S_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.854148653 UTC

.section .data
.align 8
.align 1
$krep3_rdV0U_closure:
	.quad	:_con_info
	.quad	$krep2_rdV0T_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.855995017 UTC

.section .data
.align 8
.align 1
$krep4_rdV0V_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.MVar.$tcMVar_closure
	.quad	$krep3_rdV0U_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.858252279 UTC

.section .data
.align 8
.align 1
$krep5_rdV0W_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep4_rdV0V_closure+1
	.quad	$krep2_rdV0T_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.8600434 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$tc'ChItem1_closure
.type Control.Concurrent.Chan.$tc'ChItem1_closure, @object
Control.Concurrent.Chan.$tc'ChItem1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep_rdV0R_closure+2
	.quad	$krep5_rdV0W_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.861833106 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Concurrent.Chan.$tc'ChItem3_bytes
.type Control.Concurrent.Chan.$tc'ChItem3_bytes, @object
Control.Concurrent.Chan.$tc'ChItem3_bytes:
	.asciz "'ChItem"


==================== Asm code ====================
2018-03-16 16:09:11.863594165 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$tc'ChItem2_closure
.type Control.Concurrent.Chan.$tc'ChItem2_closure, @object
Control.Concurrent.Chan.$tc'ChItem2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Concurrent.Chan.$tc'ChItem3_bytes


==================== Asm code ====================
2018-03-16 16:09:11.865537852 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$tc'ChItem_closure
.type Control.Concurrent.Chan.$tc'ChItem_closure, @object
Control.Concurrent.Chan.$tc'ChItem_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Control.Concurrent.Chan.$trModule_closure+1
	.quad	Control.Concurrent.Chan.$tc'ChItem2_closure+1
	.quad	Control.Concurrent.Chan.$tc'ChItem1_closure+4
	.quad	-7756722891889887769
	.quad	-3993398973029236138
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.868005167 UTC

.section .data
.align 8
.align 1
$krep6_rdV0X_closure:
	.quad	:_con_info
	.quad	$krep4_rdV0V_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.869862521 UTC

.section .data
.align 8
.align 1
$krep7_rdV0Y_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.MVar.$tcMVar_closure
	.quad	$krep6_rdV0X_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.871543235 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Concurrent.Chan.$tcChan2_bytes
.type Control.Concurrent.Chan.$tcChan2_bytes, @object
Control.Concurrent.Chan.$tcChan2_bytes:
	.asciz "Chan"


==================== Asm code ====================
2018-03-16 16:09:11.873925115 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$tcChan1_closure
.type Control.Concurrent.Chan.$tcChan1_closure, @object
Control.Concurrent.Chan.$tcChan1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Concurrent.Chan.$tcChan2_bytes


==================== Asm code ====================
2018-03-16 16:09:11.875840451 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$tcChan_closure
.type Control.Concurrent.Chan.$tcChan_closure, @object
Control.Concurrent.Chan.$tcChan_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Control.Concurrent.Chan.$trModule_closure+1
	.quad	Control.Concurrent.Chan.$tcChan1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	8939098401262630739
	.quad	-5600099150000977117
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.877746924 UTC

.section .data
.align 8
.align 1
$krep8_rdV0Z_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	Control.Concurrent.Chan.$tcChan_closure+1
	.quad	$krep1_rdV0S_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.879587808 UTC

.section .data
.align 8
.align 1
$krep9_rdV10_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep7_rdV0Y_closure+1
	.quad	$krep8_rdV0Z_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.881469867 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$tc'Chan1_closure
.type Control.Concurrent.Chan.$tc'Chan1_closure, @object
Control.Concurrent.Chan.$tc'Chan1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep7_rdV0Y_closure+1
	.quad	$krep9_rdV10_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.883305844 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl Control.Concurrent.Chan.$tc'Chan3_bytes
.type Control.Concurrent.Chan.$tc'Chan3_bytes, @object
Control.Concurrent.Chan.$tc'Chan3_bytes:
	.asciz "'Chan"


==================== Asm code ====================
2018-03-16 16:09:11.885139487 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$tc'Chan2_closure
.type Control.Concurrent.Chan.$tc'Chan2_closure, @object
Control.Concurrent.Chan.$tc'Chan2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	Control.Concurrent.Chan.$tc'Chan3_bytes


==================== Asm code ====================
2018-03-16 16:09:11.887730766 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.$tc'Chan_closure
.type Control.Concurrent.Chan.$tc'Chan_closure, @object
Control.Concurrent.Chan.$tc'Chan_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	Control.Concurrent.Chan.$trModule_closure+1
	.quad	Control.Concurrent.Chan.$tc'Chan2_closure+1
	.quad	Control.Concurrent.Chan.$tc'Chan1_closure+4
	.quad	735828590425899369
	.quad	-5356344790794991547
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 16:09:11.89051116 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.ChItem_closure
.type Control.Concurrent.Chan.ChItem_closure, @object
Control.Concurrent.Chan.ChItem_closure:
	.quad	Control.Concurrent.Chan.ChItem_info


==================== Asm code ====================
2018-03-16 16:09:11.891340244 UTC

.section .text
.align 8
Control.Concurrent.Chan.ChItem_entry:
_cdVOP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdVOT
_cdVOS:
	leaq Control.Concurrent.Chan.ChItem_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cdVOT:
	movq $24,904(%r13)
	leaq Control.Concurrent.Chan.ChItem_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.ChItem_entry, .-Control.Concurrent.Chan.ChItem_entry


==================== Asm code ====================
2018-03-16 16:09:11.89200921 UTC

.section .data.rel.ro
.align 8
.align 1
Control.Concurrent.Chan.ChItem_info:
	.quad	Control.Concurrent.Chan.ChItem_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:09:11.894523129 UTC

.section .data
.align 8
.align 1
.globl Control.Concurrent.Chan.Chan_closure
.type Control.Concurrent.Chan.Chan_closure, @object
Control.Concurrent.Chan.Chan_closure:
	.quad	Control.Concurrent.Chan.Chan_info


==================== Asm code ====================
2018-03-16 16:09:11.895371105 UTC

.section .text
.align 8
Control.Concurrent.Chan.Chan_entry:
_cdVP5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cdVP9
_cdVP8:
	leaq Control.Concurrent.Chan.Chan_con_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -15(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cdVP9:
	movq $24,904(%r13)
	leaq Control.Concurrent.Chan.Chan_closure(%rip),%rbx
	jmp *-8(%r13)
	.size Control.Concurrent.Chan.Chan_entry, .-Control.Concurrent.Chan.Chan_entry


==================== Asm code ====================
2018-03-16 16:09:11.896093046 UTC

.section .data.rel.ro
.align 8
.align 1
Control.Concurrent.Chan.Chan_info:
	.quad	Control.Concurrent.Chan.Chan_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 16:09:11.898824255 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
idVPh_str:
	.asciz "base:Control.Concurrent.Chan.ChItem"


==================== Asm code ====================
2018-03-16 16:09:11.899463497 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.ChItem_con_entry
.type Control.Concurrent.Chan.ChItem_con_entry, @object
Control.Concurrent.Chan.ChItem_con_entry:
_cdVPg:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Control.Concurrent.Chan.ChItem_con_entry, .-Control.Concurrent.Chan.ChItem_con_entry


==================== Asm code ====================
2018-03-16 16:09:11.900106655 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.ChItem_con_info
.type Control.Concurrent.Chan.ChItem_con_info, @object
Control.Concurrent.Chan.ChItem_con_info:
	.quad	Control.Concurrent.Chan.ChItem_con_entry
	.quad	2
	.quad	4
	.quad	idVPh_str


==================== Asm code ====================
2018-03-16 16:09:11.902117162 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
idVPo_str:
	.asciz "base:Control.Concurrent.Chan.Chan"


==================== Asm code ====================
2018-03-16 16:09:11.902768178 UTC

.section .text
.align 8
.globl Control.Concurrent.Chan.Chan_con_entry
.type Control.Concurrent.Chan.Chan_con_entry, @object
Control.Concurrent.Chan.Chan_con_entry:
_cdVPn:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size Control.Concurrent.Chan.Chan_con_entry, .-Control.Concurrent.Chan.Chan_con_entry


==================== Asm code ====================
2018-03-16 16:09:11.903379537 UTC

.section .data.rel.ro
.align 8
.align 1
.globl Control.Concurrent.Chan.Chan_con_info
.type Control.Concurrent.Chan.Chan_con_info, @object
Control.Concurrent.Chan.Chan_con_info:
	.quad	Control.Concurrent.Chan.Chan_con_entry
	.quad	2
	.quad	4
	.quad	idVPo_str


==================== Asm code ====================
2018-03-16 16:09:11.905157446 UTC

.section .data.rel.ro
.align 8
.align 1
SdVPu_srt:

