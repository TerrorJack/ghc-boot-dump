
==================== Tidy Core ====================
2018-03-16 16:09:09.153990144 UTC

Result size of Tidy Core
  = {terms: 561, types: 1,206, coercions: 15, joins: 0/1}

-- RHS size: {terms: 6, types: 28, coercions: 0, joins: 0/0}
Control.Concurrent.QSem.$WQSem [InlPrag=INLINE[2]]
  :: MVar (Int, [MVar ()], [MVar ()]) -> QSem
[GblId[DataConWrapper],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (dt_adTr3 [Occ=Once!]
                    :: MVar (Int, [MVar ()], [MVar ()])) ->
                 case dt_adTr3 of { GHC.MVar.MVar dt_adTr4 [Occ=Once] ->
                 Control.Concurrent.QSem.QSem dt_adTr4
                 }}]
Control.Concurrent.QSem.$WQSem
  = \ (dt_adTr3 [Occ=Once!] :: MVar (Int, [MVar ()], [MVar ()])) ->
      case dt_adTr3 of { GHC.MVar.MVar dt_adTr4 [Occ=Once] ->
      Control.Concurrent.QSem.QSem dt_adTr4
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Control.Concurrent.QSem.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Control.Concurrent.QSem.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Control.Concurrent.QSem.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Control.Concurrent.QSem.$trModule3
  = GHC.Types.TrNameS Control.Concurrent.QSem.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Control.Concurrent.QSem.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
Control.Concurrent.QSem.$trModule2 = "Control.Concurrent.QSem"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Control.Concurrent.QSem.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Control.Concurrent.QSem.$trModule1
  = GHC.Types.TrNameS Control.Concurrent.QSem.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Control.Concurrent.QSem.$trModule :: GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Control.Concurrent.QSem.$trModule
  = GHC.Types.Module
      Control.Concurrent.QSem.$trModule3
      Control.Concurrent.QSem.$trModule1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_rdTOF :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep_rdTOF
  = GHC.Types.KindRepTyConApp
      GHC.Tuple.$tc() (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep1_rdTOG :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep1_rdTOG
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcInt (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep2_rdTOH :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep2_rdTOH
  = GHC.Types.:
      @ GHC.Types.KindRep $krep_rdTOF (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep3_rdTOI :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep3_rdTOI
  = GHC.Types.KindRepTyConApp GHC.MVar.$tcMVar $krep2_rdTOH

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep4_rdTOJ :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep4_rdTOJ
  = GHC.Types.:
      @ GHC.Types.KindRep $krep3_rdTOI (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep5_rdTOK :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep5_rdTOK
  = GHC.Types.KindRepTyConApp GHC.Types.$tc[] $krep4_rdTOJ

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep6_rdTOL :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep6_rdTOL
  = GHC.Types.:
      @ GHC.Types.KindRep $krep5_rdTOK (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep7_rdTOM :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep7_rdTOM
  = GHC.Types.: @ GHC.Types.KindRep $krep5_rdTOK $krep6_rdTOL

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep8_rdTON :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep8_rdTON
  = GHC.Types.: @ GHC.Types.KindRep $krep1_rdTOG $krep7_rdTOM

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep9_rdTOO :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep9_rdTOO
  = GHC.Types.KindRepTyConApp GHC.Tuple.$tc(,,) $krep8_rdTON

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep10_rdTOP :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep10_rdTOP
  = GHC.Types.:
      @ GHC.Types.KindRep $krep9_rdTOO (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep11_rdTOQ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep11_rdTOQ
  = GHC.Types.KindRepTyConApp GHC.MVar.$tcMVar $krep10_rdTOP

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Control.Concurrent.QSem.$tcQSem2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Control.Concurrent.QSem.$tcQSem2 = "QSem"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Control.Concurrent.QSem.$tcQSem1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Control.Concurrent.QSem.$tcQSem1
  = GHC.Types.TrNameS Control.Concurrent.QSem.$tcQSem2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Control.Concurrent.QSem.$tcQSem :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Control.Concurrent.QSem.$tcQSem
  = GHC.Types.TyCon
      9564161763912145234##
      3945938196429110556##
      Control.Concurrent.QSem.$trModule
      Control.Concurrent.QSem.$tcQSem1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep12_rdTOR :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep12_rdTOR
  = GHC.Types.KindRepTyConApp
      Control.Concurrent.QSem.$tcQSem (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Control.Concurrent.QSem.$tc'QSem1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
Control.Concurrent.QSem.$tc'QSem1
  = GHC.Types.KindRepFun $krep11_rdTOQ $krep12_rdTOR

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Control.Concurrent.QSem.$tc'QSem3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
Control.Concurrent.QSem.$tc'QSem3 = "'QSem"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Control.Concurrent.QSem.$tc'QSem2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Control.Concurrent.QSem.$tc'QSem2
  = GHC.Types.TrNameS Control.Concurrent.QSem.$tc'QSem3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
Control.Concurrent.QSem.$tc'QSem :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
Control.Concurrent.QSem.$tc'QSem
  = GHC.Types.TyCon
      16012040391974534726##
      6627878139257558952##
      Control.Concurrent.QSem.$trModule
      Control.Concurrent.QSem.$tc'QSem2
      0#
      Control.Concurrent.QSem.$tc'QSem1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_rdTOS :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl_rdTOS = "newQSem: Initial quantity must be non-negative"#

-- RHS size: {terms: 5, types: 3, coercions: 0, joins: 0/0}
Control.Concurrent.QSem.newQSem2
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, QSem #)
[GblId, Arity=1, Str=<B,U>x, Unf=OtherCon []]
Control.Concurrent.QSem.newQSem2
  = \ (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      GHC.IO.failIO1 @ QSem (GHC.CString.unpackCString# lvl_rdTOS) eta_B1

-- RHS size: {terms: 30, types: 73, coercions: 0, joins: 0/0}
Control.Concurrent.QSem.newQSem1
  :: Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, QSem #)
[GblId,
 Arity=2,
 Str=<S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (initial_adTqj [Occ=Once!] :: Int)
                 (eta_B1 [Occ=Once*] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case initial_adTqj of wild_alN7 { GHC.Types.I# x_alN9 [Occ=Once] ->
                 case GHC.Prim.<# x_alN9 0# of {
                   __DEFAULT ->
                     case GHC.Prim.newMVar#
                            @ GHC.Prim.RealWorld @ (Int, [MVar ()], [MVar ()]) eta_B1
                     of
                     { (# ipv_ia50l [Occ=Once], ipv1_ia50m #) ->
                     case GHC.Prim.putMVar#
                            @ GHC.Prim.RealWorld
                            @ (Int, [MVar ()], [MVar ()])
                            ipv1_ia50m
                            (wild_alN7, GHC.Types.[] @ (MVar ()), GHC.Types.[] @ (MVar ()))
                            ipv_ia50l
                     of s2#_ia50o
                     { __DEFAULT ->
                     (# s2#_ia50o, Control.Concurrent.QSem.QSem ipv1_ia50m #)
                     }
                     };
                   1# -> Control.Concurrent.QSem.newQSem2 eta_B1
                 }
                 }}]
Control.Concurrent.QSem.newQSem1
  = \ (initial_adTqj :: Int)
      (eta_B1 :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case initial_adTqj of wild_alN7 { GHC.Types.I# x_alN9 ->
      case GHC.Prim.<# x_alN9 0# of {
        __DEFAULT ->
          case GHC.Prim.newMVar#
                 @ GHC.Prim.RealWorld @ (Int, [MVar ()], [MVar ()]) eta_B1
          of
          { (# ipv_ia50l, ipv1_ia50m #) ->
          case GHC.Prim.putMVar#
                 @ GHC.Prim.RealWorld
                 @ (Int, [MVar ()], [MVar ()])
                 ipv1_ia50m
                 (wild_alN7, GHC.Types.[] @ (MVar ()), GHC.Types.[] @ (MVar ()))
                 ipv_ia50l
          of s2#_ia50o
          { __DEFAULT ->
          (# s2#_ia50o, Control.Concurrent.QSem.QSem ipv1_ia50m #)
          }
          };
        1# -> Control.Concurrent.QSem.newQSem2 eta_B1
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
newQSem :: Int -> IO QSem
[GblId,
 Arity=2,
 Str=<S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Control.Concurrent.QSem.newQSem1
               `cast` (<Int>_R ->_R Sym (GHC.Types.N:IO[0] <QSem>_R)
                       :: (Int
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, QSem #) :: *)
                          ~R# (Int -> IO QSem :: *))}]
newQSem
  = Control.Concurrent.QSem.newQSem1
    `cast` (<Int>_R ->_R Sym (GHC.Types.N:IO[0] <QSem>_R)
            :: (Int
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, QSem #) :: *)
               ~R# (Int -> IO QSem :: *))

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl1_rdTOT :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl1_rdTOT = GHC.Types.I# 0#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl2_rdTOU :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl2_rdTOU = GHC.Types.I# 1#

-- RHS size: {terms: 4, types: 11, coercions: 0, joins: 0/0}
lvl3_rdTOV :: (Int, [MVar ()], [MVar ()])
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl3_rdTOV
  = (lvl2_rdTOU, GHC.Types.[] @ (MVar ()), GHC.Types.[] @ (MVar ()))

Rec {
-- RHS size: {terms: 43, types: 84, coercions: 0, joins: 0/0}
Control.Concurrent.QSem.signalQSem2 [Occ=LoopBreaker]
  :: [MVar ()]
     -> [MVar ()]
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           (Int, [MVar ()], [MVar ()]) #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U><S,U>,
 Unf=OtherCon []]
Control.Concurrent.QSem.signalQSem2
  = \ (ds_ddTva :: [MVar ()])
      (ds1_ddTvb :: [MVar ()])
      (eta_X1c :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case ds_ddTva of {
        [] ->
          case ds1_ddTvb of wild1_Xn {
            [] -> (# eta_X1c, lvl3_rdTOV #);
            : ipv_sdTwp ipv1_sdTwq ->
              Control.Concurrent.QSem.signalQSem2
                (GHC.List.reverse1 @ (MVar ()) wild1_Xn (GHC.Types.[] @ (MVar ())))
                (GHC.Types.[] @ (MVar ()))
                eta_X1c
          };
        : b_adTqG bs_adTqH ->
          case b_adTqG of { GHC.MVar.MVar mvar#_iax3a ->
          case GHC.Prim.tryPutMVar#
                 @ GHC.Prim.RealWorld @ () mvar#_iax3a GHC.Tuple.() eta_X1c
          of
          { (# ipv_iax3e, ipv1_iax3f #) ->
          case ipv1_iax3f of {
            __DEFAULT -> (# ipv_iax3e, (lvl1_rdTOT, bs_adTqH, ds1_ddTvb) #);
            0# ->
              Control.Concurrent.QSem.signalQSem2 bs_adTqH ds1_ddTvb ipv_iax3e
          }
          }
          }
      }
end Rec }

-- RHS size: {terms: 103, types: 267, coercions: 0, joins: 0/0}
Control.Concurrent.QSem.$wsignalQSem [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.MVar# GHC.Prim.RealWorld (Int, [MVar ()], [MVar ()])
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 319 60}]
Control.Concurrent.QSem.$wsignalQSem
  = \ (ww_sdTIs
         :: GHC.Prim.MVar# GHC.Prim.RealWorld (Int, [MVar ()], [MVar ()]))
      (w_sdTIp :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case GHC.Prim.getMaskingState# w_sdTIp of
      { (# ipv_idSaA, ipv1_idSaB #) ->
      case ipv1_idSaB of {
        __DEFAULT ->
          GHC.Prim.maskUninterruptible#
            @ ()
            (\ (s_i7IAv [OS=OneShot] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
               case GHC.Prim.takeMVar#
                      @ GHC.Prim.RealWorld @ (Int, [MVar ()], [MVar ()]) ww_sdTIs s_i7IAv
               of
               { (# ipv2_i7IAy, ipv3_i7IAz #) ->
               case ipv3_i7IAz of { (i_adTqB, a1_adTqC, a2_adTqD) ->
               case i_adTqB of { GHC.Types.I# x_a22G ->
               case x_a22G of wild2_X1N {
                 __DEFAULT ->
                   case GHC.Prim.putMVar#
                          @ GHC.Prim.RealWorld
                          @ (Int, [MVar ()], [MVar ()])
                          ww_sdTIs
                          (GHC.Types.I# (GHC.Prim.+# wild2_X1N 1#), a1_adTqC, a2_adTqD)
                          ipv2_i7IAy
                   of s2#_i9DsB
                   { __DEFAULT ->
                   (# s2#_i9DsB, GHC.Tuple.() #)
                   };
                 0# ->
                   case Control.Concurrent.QSem.signalQSem2
                          a1_adTqC a2_adTqD ipv2_i7IAy
                   of
                   { (# ipv4_X7IBx, ipv5_X7IBz #) ->
                   case GHC.Prim.putMVar#
                          @ GHC.Prim.RealWorld
                          @ (Int, [MVar ()], [MVar ()])
                          ww_sdTIs
                          ipv5_X7IBz
                          ipv4_X7IBx
                   of s2#_i9DsB
                   { __DEFAULT ->
                   (# s2#_i9DsB, GHC.Tuple.() #)
                   }
                   }
               }
               }
               }
               })
            ipv_idSaA;
        1# ->
          case GHC.Prim.takeMVar#
                 @ GHC.Prim.RealWorld
                 @ (Int, [MVar ()], [MVar ()])
                 ww_sdTIs
                 ipv_idSaA
          of
          { (# ipv2_i7IAy, ipv3_i7IAz #) ->
          case ipv3_i7IAz of { (i_adTqB, a1_adTqC, a2_adTqD) ->
          case i_adTqB of { GHC.Types.I# x_a22G ->
          case x_a22G of wild2_X1N {
            __DEFAULT ->
              case GHC.Prim.putMVar#
                     @ GHC.Prim.RealWorld
                     @ (Int, [MVar ()], [MVar ()])
                     ww_sdTIs
                     (GHC.Types.I# (GHC.Prim.+# wild2_X1N 1#), a1_adTqC, a2_adTqD)
                     ipv2_i7IAy
              of s2#_i9DsB
              { __DEFAULT ->
              (# s2#_i9DsB, GHC.Tuple.() #)
              };
            0# ->
              case Control.Concurrent.QSem.signalQSem2
                     a1_adTqC a2_adTqD ipv2_i7IAy
              of
              { (# ipv4_X7IBx, ipv5_X7IBz #) ->
              case GHC.Prim.putMVar#
                     @ GHC.Prim.RealWorld
                     @ (Int, [MVar ()], [MVar ()])
                     ww_sdTIs
                     ipv5_X7IBz
                     ipv4_X7IBx
              of s2#_i9DsB
              { __DEFAULT ->
              (# s2#_i9DsB, GHC.Tuple.() #)
              }
              }
          }
          }
          }
          }
      }
      }

-- RHS size: {terms: 8, types: 14, coercions: 0, joins: 0/0}
Control.Concurrent.QSem.signalQSem1 [InlPrag=NOUSERINLINE[0]]
  :: QSem
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_sdTIo [Occ=Once!] :: QSem)
                 (w1_sdTIp [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w_sdTIo of { QSem ww1_sdTIs [Occ=Once] ->
                 Control.Concurrent.QSem.$wsignalQSem ww1_sdTIs w1_sdTIp
                 }}]
Control.Concurrent.QSem.signalQSem1
  = \ (w_sdTIo :: QSem)
      (w1_sdTIp :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case w_sdTIo of { QSem ww1_sdTIs ->
      Control.Concurrent.QSem.$wsignalQSem ww1_sdTIs w1_sdTIp
      }

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
signalQSem :: QSem -> IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Control.Concurrent.QSem.signalQSem1
               `cast` (<QSem>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (QSem
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #) :: *)
                          ~R# (QSem -> IO () :: *))}]
signalQSem
  = Control.Concurrent.QSem.signalQSem1
    `cast` (<QSem>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (QSem
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #) :: *)
               ~R# (QSem -> IO () :: *))

-- RHS size: {terms: 158, types: 347, coercions: 0, joins: 0/0}
Control.Concurrent.QSem.$wlvl [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.MVar# GHC.Prim.RealWorld ()
     -> GHC.Prim.MVar# GHC.Prim.RealWorld (Int, [MVar ()], [MVar ()])
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> SomeException
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U><L,U>,
 Unf=OtherCon []]
Control.Concurrent.QSem.$wlvl
  = \ (ww_sdTIC :: GHC.Prim.MVar# GHC.Prim.RealWorld ())
      (w_sdTIx
         :: GHC.Prim.MVar# GHC.Prim.RealWorld (Int, [MVar ()], [MVar ()]))
      (w1_sdTIy :: GHC.Prim.State# GHC.Prim.RealWorld)
      (w2_sdTIz :: SomeException) ->
      case GHC.Prim.getMaskingState# w1_sdTIy of
      { (# ipv_idSaA, ipv1_idSaB #) ->
      case ipv1_idSaB of {
        __DEFAULT ->
          case GHC.Prim.maskUninterruptible#
                 @ ()
                 (\ (s_X7IBU [OS=OneShot] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                    case GHC.Prim.takeMVar#
                           @ GHC.Prim.RealWorld @ (Int, [MVar ()], [MVar ()]) w_sdTIx s_X7IBU
                    of
                    { (# ipv2_X7IC1, ipv3_X7IC3 #) ->
                    case ipv3_X7IC3 of wild_X1R { (i_adTqo, b1_adTqp, b2_adTqq) ->
                    case GHC.Prim.tryTakeMVar#
                           @ GHC.Prim.RealWorld @ () ww_sdTIC ipv2_X7IC1
                    of
                    { (# ipv4_idSbu, ipv5_idSbv, ipv6_idSbw #) ->
                    case ipv5_idSbv of {
                      __DEFAULT ->
                        case i_adTqo of { GHC.Types.I# x_a22G ->
                        case x_a22G of wild2_X1Y {
                          __DEFAULT ->
                            case GHC.Prim.putMVar#
                                   @ GHC.Prim.RealWorld
                                   @ (Int, [MVar ()], [MVar ()])
                                   w_sdTIx
                                   (GHC.Types.I# (GHC.Prim.+# wild2_X1Y 1#), b1_adTqp, b2_adTqq)
                                   ipv4_idSbu
                            of s2#_i9DsB
                            { __DEFAULT ->
                            (# s2#_i9DsB, GHC.Tuple.() #)
                            };
                          0# ->
                            case Control.Concurrent.QSem.signalQSem2
                                   b1_adTqp b2_adTqq ipv4_idSbu
                            of
                            { (# ipv7_X7ICj, ipv8_X7ICl #) ->
                            case GHC.Prim.putMVar#
                                   @ GHC.Prim.RealWorld
                                   @ (Int, [MVar ()], [MVar ()])
                                   w_sdTIx
                                   ipv8_X7ICl
                                   ipv7_X7ICj
                            of s2#_i9DsB
                            { __DEFAULT ->
                            (# s2#_i9DsB, GHC.Tuple.() #)
                            }
                            }
                        }
                        };
                      0# ->
                        case GHC.Prim.putMVar#
                               @ GHC.Prim.RealWorld @ () ww_sdTIC GHC.Tuple.() ipv4_idSbu
                        of s2#_i9DsB
                        { __DEFAULT ->
                        case GHC.Prim.putMVar#
                               @ GHC.Prim.RealWorld
                               @ (Int, [MVar ()], [MVar ()])
                               w_sdTIx
                               wild_X1R
                               s2#_i9DsB
                        of s2#1_X9Duv
                        { __DEFAULT ->
                        (# s2#1_X9Duv, GHC.Tuple.() #)
                        }
                        }
                    }
                    }
                    }
                    })
                 ipv_idSaA
          of
          { (# ipv2_idSbg, ipv3_idSbh #) ->
          GHC.Prim.raiseIO# @ SomeException @ () w2_sdTIz ipv2_idSbg
          };
        1# ->
          case GHC.Prim.takeMVar#
                 @ GHC.Prim.RealWorld
                 @ (Int, [MVar ()], [MVar ()])
                 w_sdTIx
                 ipv_idSaA
          of
          { (# ipv2_X7IC1, ipv3_X7IC3 #) ->
          case ipv3_X7IC3 of wild_X1R { (i_adTqo, b1_adTqp, b2_adTqq) ->
          case GHC.Prim.tryTakeMVar#
                 @ GHC.Prim.RealWorld @ () ww_sdTIC ipv2_X7IC1
          of
          { (# ipv4_idSbu, ipv5_idSbv, ipv6_idSbw #) ->
          case ipv5_idSbv of {
            __DEFAULT ->
              case i_adTqo of { GHC.Types.I# x_a22G ->
              case x_a22G of wild2_X1Y {
                __DEFAULT ->
                  case GHC.Prim.putMVar#
                         @ GHC.Prim.RealWorld
                         @ (Int, [MVar ()], [MVar ()])
                         w_sdTIx
                         (GHC.Types.I# (GHC.Prim.+# wild2_X1Y 1#), b1_adTqp, b2_adTqq)
                         ipv4_idSbu
                  of s2#_i9DsB
                  { __DEFAULT ->
                  GHC.Prim.raiseIO# @ SomeException @ () w2_sdTIz s2#_i9DsB
                  };
                0# ->
                  case Control.Concurrent.QSem.signalQSem2
                         b1_adTqp b2_adTqq ipv4_idSbu
                  of
                  { (# ipv7_X7ICj, ipv8_X7ICl #) ->
                  case GHC.Prim.putMVar#
                         @ GHC.Prim.RealWorld
                         @ (Int, [MVar ()], [MVar ()])
                         w_sdTIx
                         ipv8_X7ICl
                         ipv7_X7ICj
                  of s2#_i9DsB
                  { __DEFAULT ->
                  GHC.Prim.raiseIO# @ SomeException @ () w2_sdTIz s2#_i9DsB
                  }
                  }
              }
              };
            0# ->
              case GHC.Prim.putMVar#
                     @ GHC.Prim.RealWorld @ () ww_sdTIC GHC.Tuple.() ipv4_idSbu
              of s2#_i9DsB
              { __DEFAULT ->
              case GHC.Prim.putMVar#
                     @ GHC.Prim.RealWorld
                     @ (Int, [MVar ()], [MVar ()])
                     w_sdTIx
                     wild_X1R
                     s2#_i9DsB
              of s2#1_X9Duv
              { __DEFAULT ->
              GHC.Prim.raiseIO# @ SomeException @ () w2_sdTIz s2#1_X9Duv
              }
              }
          }
          }
          }
          }
      }
      }

-- RHS size: {terms: 76, types: 161, coercions: 0, joins: 0/1}
Control.Concurrent.QSem.$wwaitQSem [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.MVar# GHC.Prim.RealWorld (Int, [MVar ()], [MVar ()])
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 256 0}]
Control.Concurrent.QSem.$wwaitQSem
  = \ (ww_sdTIK
         :: GHC.Prim.MVar# GHC.Prim.RealWorld (Int, [MVar ()], [MVar ()]))
      (w_sdTIH :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case GHC.Prim.getMaskingState# w_sdTIH of
      { (# ipv_idSaT, ipv1_idSaU #) ->
      let {
        io_sdTzH [Dmd=<C(S),C(U(U,U))>]
          :: GHC.Prim.State# GHC.Prim.RealWorld
             -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
        [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
        io_sdTzH
          = \ (s_i7IAv :: GHC.Prim.State# GHC.Prim.RealWorld) ->
              case GHC.Prim.takeMVar#
                     @ GHC.Prim.RealWorld @ (Int, [MVar ()], [MVar ()]) ww_sdTIK s_i7IAv
              of
              { (# ipv2_i7IAy, ipv3_i7IAz #) ->
              case ipv3_i7IAz of { (i_adTqt, b1_adTqu, b2_adTqv) ->
              case i_adTqt of wild1_a22E { GHC.Types.I# x_a22G ->
              case x_a22G of wild2_X1K {
                __DEFAULT ->
                  case GHC.Prim.putMVar#
                         @ GHC.Prim.RealWorld
                         @ (Int, [MVar ()], [MVar ()])
                         ww_sdTIK
                         (GHC.Types.I# (GHC.Prim.-# wild2_X1K 1#), b1_adTqu, b2_adTqv)
                         ipv2_i7IAy
                  of s2#_i9DsB
                  { __DEFAULT ->
                  (# s2#_i9DsB, GHC.Tuple.() #)
                  };
                0# ->
                  case GHC.Prim.newMVar# @ GHC.Prim.RealWorld @ () ipv2_i7IAy of
                  { (# ipv4_iaIyp, ipv5_iaIyq #) ->
                  case GHC.Prim.putMVar#
                         @ GHC.Prim.RealWorld
                         @ (Int, [MVar ()], [MVar ()])
                         ww_sdTIK
                         (wild1_a22E, b1_adTqu,
                          GHC.Types.: @ (MVar ()) (GHC.MVar.MVar @ () ipv5_iaIyq) b2_adTqv)
                         ipv4_iaIyp
                  of s2#_i9DsB
                  { __DEFAULT ->
                  GHC.Prim.catch#
                    @ ()
                    @ SomeException
                    (\ (eta_i9Dsl [OS=OneShot]
                          :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       GHC.Prim.takeMVar# @ GHC.Prim.RealWorld @ () ipv5_iaIyq eta_i9Dsl)
                    (\ (e1_idSbc [OS=OneShot] :: SomeException)
                       (s1_idSbd [OS=OneShot] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       Control.Concurrent.QSem.$wlvl
                         ipv5_iaIyq ww_sdTIK s1_idSbd e1_idSbc)
                    s2#_i9DsB
                  }
                  }
              }
              }
              }
              } } in
      case ipv1_idSaU of {
        __DEFAULT -> io_sdTzH ipv_idSaT;
        0# -> GHC.Prim.maskAsyncExceptions# @ () io_sdTzH ipv_idSaT
      }
      }

-- RHS size: {terms: 8, types: 14, coercions: 0, joins: 0/0}
Control.Concurrent.QSem.waitQSem1 [InlPrag=NOUSERINLINE[0]]
  :: QSem
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_sdTIG [Occ=Once!] :: QSem)
                 (w1_sdTIH [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w_sdTIG of { QSem ww1_sdTIK [Occ=Once] ->
                 Control.Concurrent.QSem.$wwaitQSem ww1_sdTIK w1_sdTIH
                 }}]
Control.Concurrent.QSem.waitQSem1
  = \ (w_sdTIG :: QSem)
      (w1_sdTIH :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case w_sdTIG of { QSem ww1_sdTIK ->
      Control.Concurrent.QSem.$wwaitQSem ww1_sdTIK w1_sdTIH
      }

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
waitQSem :: QSem -> IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Control.Concurrent.QSem.waitQSem1
               `cast` (<QSem>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (QSem
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #) :: *)
                          ~R# (QSem -> IO () :: *))}]
waitQSem
  = Control.Concurrent.QSem.waitQSem1
    `cast` (<QSem>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (QSem
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #) :: *)
               ~R# (QSem -> IO () :: *))


