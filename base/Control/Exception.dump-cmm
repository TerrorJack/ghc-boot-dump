
==================== Output Cmm ====================
2018-03-16 16:04:59.212220521 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:04:59.213575829 UTC

[section ""data" . Control.Exception.$fFunctorHandler_$cfmap_closure" {
     Control.Exception.$fFunctorHandler_$cfmap_closure:
         const Control.Exception.$fFunctorHandler_$cfmap_info;
 },
 sat_s9TV5_entry() //  [R1, R2]
         { info_tbl: [(c9TVV,
                       label: sat_s9TV5_info
                       rep:HeapRep 2 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TVV: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9TVW; else goto c9TVX;
       c9TVW: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TVX: // global
           I64[Sp - 16] = block_c9TVS_info;
           R2 = R2;
           _s9TUU::P64 = P64[R1 + 6];
           R1 = P64[R1 + 14];
           P64[Sp - 8] = _s9TUU::P64;
           Sp = Sp - 16;
           call stg_ap_pv_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TVS() //  [R1]
         { info_tbl: [(c9TVS,
                       label: block_c9TVS_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TVS: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9TW0; else goto c9TVZ;
       c9TW0: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9TVZ: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = R1;
           R1 = Hp - 24;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 Control.Exception.$fFunctorHandler_$cfmap_entry() //  [R2, R3]
         { info_tbl: [(c9TW1,
                       label: Control.Exception.$fFunctorHandler_$cfmap_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TW1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9TW3; else goto c9TW4;
       c9TW3: // global
           R3 = R3;
           R2 = R2;
           R1 = Control.Exception.$fFunctorHandler_$cfmap_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9TW4: // global
           I64[Sp - 16] = block_c9TVI_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9TW8; else goto c9TVJ;
       u9TW8: // global
           call _c9TVI(R1) args: 0, res: 0, upd: 0;
       c9TVJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TVI() //  [R1]
         { info_tbl: [(c9TVI,
                       label: block_c9TVI_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TVI: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9TW7; else goto c9TW6;
       c9TW7: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9TW6: // global
           _s9TUX::P64 = P64[R1 + 7];
           _s9TUY::P64 = P64[R1 + 15];
           I64[Hp - 40] = sat_s9TV5_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s9TUY::P64;
           I64[Hp - 16] = Control.Exception.Handler_con_info;
           P64[Hp - 8] = _s9TUX::P64;
           P64[Hp] = Hp - 38;
           R1 = Hp - 15;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.21574309 UTC

[section ""data" . Control.Exception.$fFunctorHandler_$c<$_closure" {
     Control.Exception.$fFunctorHandler_$c<$_closure:
         const Control.Exception.$fFunctorHandler_$c<$_info;
 },
 sat_s9TVg_entry() //  [R1, R2]
         { info_tbl: [(c9TWp,
                       label: sat_s9TVg_info
                       rep:HeapRep 2 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TWp: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9TWq; else goto c9TWr;
       c9TWq: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TWr: // global
           I64[Sp - 16] = block_c9TWn_info;
           R2 = R2;
           _s9TV6::P64 = P64[R1 + 6];
           R1 = P64[R1 + 14];
           P64[Sp - 8] = _s9TV6::P64;
           Sp = Sp - 16;
           call stg_ap_pv_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TWn() //  []
         { info_tbl: [(c9TWn,
                       label: block_c9TWn_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TWn: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 Control.Exception.$fFunctorHandler_$c<$_entry() //  [R2, R3]
         { info_tbl: [(c9TWt,
                       label: Control.Exception.$fFunctorHandler_$c<$_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TWt: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9TWv; else goto c9TWw;
       c9TWv: // global
           R3 = R3;
           R2 = R2;
           R1 = Control.Exception.$fFunctorHandler_$c<$_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9TWw: // global
           I64[Sp - 16] = block_c9TWd_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9TWA; else goto c9TWe;
       u9TWA: // global
           call _c9TWd(R1) args: 0, res: 0, upd: 0;
       c9TWe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TWd() //  [R1]
         { info_tbl: [(c9TWd,
                       label: block_c9TWd_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TWd: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9TWz; else goto c9TWy;
       c9TWz: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9TWy: // global
           _s9TV9::P64 = P64[R1 + 7];
           _s9TVa::P64 = P64[R1 + 15];
           I64[Hp - 40] = sat_s9TVg_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s9TVa::P64;
           I64[Hp - 16] = Control.Exception.Handler_con_info;
           P64[Hp - 8] = _s9TV9::P64;
           P64[Hp] = Hp - 38;
           R1 = Hp - 15;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.217276537 UTC

[section ""data" . Control.Exception.$fFunctorHandler_closure" {
     Control.Exception.$fFunctorHandler_closure:
         const GHC.Base.C:Functor_con_info;
         const Control.Exception.$fFunctorHandler_$cfmap_closure+2;
         const Control.Exception.$fFunctorHandler_$c<$_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.217990087 UTC

[section ""data" . Control.Exception.catches2_closure" {
     Control.Exception.catches2_closure:
         const Control.Exception.catches2_info;
         const 0;
 },
 Control.Exception.catches2_entry() //  [R2]
         { info_tbl: [(c9TWF,
                       label: Control.Exception.catches2_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TWF: // global
           R3 = R2;
           R2 = GHC.Exception.$fExceptionSomeException_closure;
           call GHC.Exception.throw_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.21950861 UTC

[section ""data" . Control.Exception.catches1_closure" {
     Control.Exception.catches1_closure:
         const Control.Exception.catches1_info;
         const 0;
 },
 sat_s9TVx_entry() //  [R1, R2]
         { info_tbl: [(c9TWW,
                       label: sat_s9TVx_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TWW: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c9TWX; else goto c9TWY;
       c9TWX: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TWY: // global
           P64[Sp - 16] = R2;
           P64[Sp - 8] = P64[R1 + 7];
           Sp = Sp - 16;
           call _c9TX4() args: 0, res: 0, upd: 0;
     }
 },
 _c9TX4() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TX4: // global
           I64[Sp - 8] = block_c9TX6_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9TXF; else goto c9TX8;
       u9TXF: // global
           call _c9TX6(R1) args: 0, res: 0, upd: 0;
       c9TX8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TX6() //  [R1]
         { info_tbl: [(c9TX6,
                       label: block_c9TX6_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TX6: // global
           if (R1 & 7 == 1) goto c9TXe; else goto c9TXj;
       c9TXe: // global
           R2 = P64[Sp + 8];
           Sp = Sp + 24;
           call Control.Exception.catches2_entry(R2) args: 8, res: 0, upd: 8;
       c9TXj: // global
           I64[Sp] = block_c9TXh_info;
           _s9TVr::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp + 16] = _s9TVr::P64;
           if (R1 & 7 != 0) goto u9TXG; else goto c9TXk;
       u9TXG: // global
           call _c9TXh(R1) args: 0, res: 0, upd: 0;
       c9TXk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TXh() //  [R1]
         { info_tbl: [(c9TXh,
                       label: block_c9TXh_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TXh: // global
           I64[Sp - 8] = block_c9TXo_info;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_p_info;
           P64[Sp - 16] = P64[Sp + 8];
           P64[Sp] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Exception.fromException_entry(R2) args: 24, res: 8, upd: 8;
     }
 },
 _c9TXo() //  [R1]
         { info_tbl: [(c9TXo,
                       label: block_c9TXo_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TXo: // global
           if (R1 & 7 == 1) goto c9TXv; else goto c9TXz;
       c9TXv: // global
           P64[Sp + 24] = P64[Sp + 24];
           Sp = Sp + 16;
           call _c9TX4() args: 0, res: 0, upd: 0;
       c9TXz: // global
           R2 = P64[R1 + 6];
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 Control.Exception.catches1_entry() //  [R2, R3]
         { info_tbl: [(c9TXI,
                       label: Control.Exception.catches1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TXI: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9TXM; else goto c9TXL;
       c9TXM: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = Control.Exception.catches1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9TXL: // global
           I64[Hp - 8] = sat_s9TVx_info;
           P64[Hp] = R3;
           _s9TVi::P64 = R2;
           R2 = Hp - 7;
           R1 = _s9TVi::P64;
           call stg_catch#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.221478751 UTC

[section ""data" . Control.Exception.catches_closure" {
     Control.Exception.catches_closure:
         const Control.Exception.catches_info;
         const 0;
 },
 Control.Exception.catches_entry() //  [R2, R3]
         { info_tbl: [(c9TXR,
                       label: Control.Exception.catches_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TXR: // global
           R3 = R3;
           R2 = R2;
           call Control.Exception.catches1_entry(R3,
                                                 R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.222178069 UTC

[section ""cstring" . Control.Exception.$trModule4_bytes" {
     Control.Exception.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.222718596 UTC

[section ""data" . Control.Exception.$trModule3_closure" {
     Control.Exception.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Exception.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.223253419 UTC

[section ""cstring" . Control.Exception.$trModule2_bytes" {
     Control.Exception.$trModule2_bytes:
         I8[] [67,111,110,116,114,111,108,46,69,120,99,101,112,116,105,111,110]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.22378137 UTC

[section ""data" . Control.Exception.$trModule1_closure" {
     Control.Exception.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Exception.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.224324779 UTC

[section ""data" . Control.Exception.$trModule_closure" {
     Control.Exception.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Control.Exception.$trModule3_closure+1;
         const Control.Exception.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.224900436 UTC

[section ""data" . $krep_r9TUJ_closure" {
     $krep_r9TUJ_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.225459966 UTC

[section ""data" . $krep1_r9TUK_closure" {
     $krep1_r9TUK_closure:
         const :_con_info;
         const $krep_r9TUJ_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.226035313 UTC

[section ""data" . $krep2_r9TUL_closure" {
     $krep2_r9TUL_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Exception.$tcException_closure;
         const $krep1_r9TUK_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.22659339 UTC

[section ""data" . $krep3_r9TUM_closure" {
     $krep3_r9TUM_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.227171566 UTC

[section ""data" . $krep4_r9TUN_closure" {
     $krep4_r9TUN_closure:
         const :_con_info;
         const $krep3_r9TUM_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.227724022 UTC

[section ""data" . $krep5_r9TUO_closure" {
     $krep5_r9TUO_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep4_r9TUN_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.228336852 UTC

[section ""data" . $krep6_r9TUP_closure" {
     $krep6_r9TUP_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r9TUJ_closure+2;
         const $krep5_r9TUO_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.228925813 UTC

[section ""cstring" . Control.Exception.$tcHandler2_bytes" {
     Control.Exception.$tcHandler2_bytes:
         I8[] [72,97,110,100,108,101,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.229527505 UTC

[section ""data" . Control.Exception.$tcHandler1_closure" {
     Control.Exception.$tcHandler1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Exception.$tcHandler2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.230085042 UTC

[section ""data" . Control.Exception.$tcHandler_closure" {
     Control.Exception.$tcHandler_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Exception.$trModule_closure+1;
         const Control.Exception.$tcHandler1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 6426835558342087658;
         const 14166740461602238008;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.230697783 UTC

[section ""data" . $krep7_r9TUQ_closure" {
     $krep7_r9TUQ_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Control.Exception.$tcHandler_closure+1;
         const $krep4_r9TUN_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.231251029 UTC

[section ""data" . $krep8_r9TUR_closure" {
     $krep8_r9TUR_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep6_r9TUP_closure+4;
         const $krep7_r9TUQ_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.231789731 UTC

[section ""data" . Control.Exception.$tc'Handler1_closure" {
     Control.Exception.$tc'Handler1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r9TUL_closure+1;
         const $krep8_r9TUR_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.232357879 UTC

[section ""cstring" . Control.Exception.$tc'Handler3_bytes" {
     Control.Exception.$tc'Handler3_bytes:
         I8[] [39,72,97,110,100,108,101,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.232891672 UTC

[section ""data" . Control.Exception.$tc'Handler2_closure" {
     Control.Exception.$tc'Handler2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Exception.$tc'Handler3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.233589477 UTC

[section ""data" . Control.Exception.$tc'Handler_closure" {
     Control.Exception.$tc'Handler_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Exception.$trModule_closure+1;
         const Control.Exception.$tc'Handler2_closure+1;
         const Control.Exception.$tc'Handler1_closure+4;
         const 23626058257872273;
         const 1528997583294198943;
         const 2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.234370481 UTC

[section ""data" . lvl_r9TUS_closure" {
     lvl_r9TUS_closure:
         const lvl_r9TUS_info;
 },
 lvl_r9TUS_entry() //  []
         { info_tbl: [(c9TXY,
                       label: lvl_r9TUS_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TXY: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.235423168 UTC

[section ""data" . Control.Exception.allowInterrupt1_closure" {
     Control.Exception.allowInterrupt1_closure:
         const Control.Exception.allowInterrupt1_info;
 },
 Control.Exception.allowInterrupt1_entry() //  []
         { info_tbl: [(c9TYc,
                       label: Control.Exception.allowInterrupt1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TYc: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9TYd; else goto c9TYe;
       c9TYd: // global
           R1 = Control.Exception.allowInterrupt1_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9TYe: // global
           I64[Sp - 8] = block_c9TY5_info;
           Sp = Sp - 8;
           call stg_getMaskingState#() args: 8, res: 8, upd: 8;
     }
 },
 _c9TY5() //  [R1]
         { info_tbl: [(c9TY5,
                       label: block_c9TY5_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TY5: // global
           if (R1 == 0) goto c9TYb; else goto u9TYg;
       u9TYg: // global
           if (R1 == 1) goto c9TYb; else goto c9TY9;
       c9TYb: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9TY9: // global
           R1 = lvl_r9TUS_closure+1;
           Sp = Sp + 8;
           call stg_unmaskAsyncExceptions#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.236496695 UTC

[section ""data" . Control.Exception.allowInterrupt_closure" {
     Control.Exception.allowInterrupt_closure:
         const Control.Exception.allowInterrupt_info;
 },
 Control.Exception.allowInterrupt_entry() //  []
         { info_tbl: [(c9TYl,
                       label: Control.Exception.allowInterrupt_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TYl: // global
           call Control.Exception.allowInterrupt1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.23741506 UTC

[section ""data" . Control.Exception.Handler_closure" {
     Control.Exception.Handler_closure:
         const Control.Exception.Handler_info;
 },
 Control.Exception.Handler_entry() //  [R2, R3]
         { info_tbl: [(c9TYt,
                       label: Control.Exception.Handler_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TYt: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9TYx; else goto c9TYw;
       c9TYx: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Exception.Handler_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9TYw: // global
           I64[Hp - 16] = Control.Exception.Handler_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.238329514 UTC

[Control.Exception.Handler_con_entry() //  [R1]
         { info_tbl: [(c9TYy,
                       label: Control.Exception.Handler_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,67,111,110,116,114,111,108,46,69,120,99,101,112,116,105,111,110,46,72,97,110,100,108,101,114]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TYy: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.23904204 UTC

[section ""relreadonly" . S9TWI_srt" {
     S9TWI_srt:
         const GHC.Exception.$fExceptionSomeException_closure;
         const Control.Exception.catches2_closure;
         const Control.Exception.catches1_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.239604949 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:04:59.240729212 UTC

[section ""data" . Control.Exception.$fFunctorHandler_$cfmap_closure" {
     Control.Exception.$fFunctorHandler_$cfmap_closure:
         const Control.Exception.$fFunctorHandler_$cfmap_info;
 },
 sat_s9TV5_entry() //  [R1, R2]
         { info_tbl: [(c9TYQ,
                       label: sat_s9TV5_info
                       rep:HeapRep 2 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TYQ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9TYR; else goto c9TYS;
       c9TYR: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TYS: // global
           I64[Sp - 16] = block_c9TYN_info;
           R2 = R2;
           _s9TUU::P64 = P64[R1 + 6];
           R1 = P64[R1 + 14];
           P64[Sp - 8] = _s9TUU::P64;
           Sp = Sp - 16;
           call stg_ap_pv_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TYN() //  [R1]
         { info_tbl: [(c9TYN,
                       label: block_c9TYN_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TYN: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9TYV; else goto c9TYU;
       c9TYV: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9TYU: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = R1;
           R1 = Hp - 24;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 Control.Exception.$fFunctorHandler_$cfmap_entry() //  [R2, R3]
         { info_tbl: [(c9TYW,
                       label: Control.Exception.$fFunctorHandler_$cfmap_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TYW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9TYY; else goto c9TYZ;
       c9TYY: // global
           R3 = R3;
           R2 = R2;
           R1 = Control.Exception.$fFunctorHandler_$cfmap_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9TYZ: // global
           I64[Sp - 16] = block_c9TYD_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9TZ3; else goto c9TYE;
       u9TZ3: // global
           call _c9TYD(R1) args: 0, res: 0, upd: 0;
       c9TYE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TYD() //  [R1]
         { info_tbl: [(c9TYD,
                       label: block_c9TYD_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TYD: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9TZ2; else goto c9TZ1;
       c9TZ2: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9TZ1: // global
           _s9TUX::P64 = P64[R1 + 7];
           _s9TUY::P64 = P64[R1 + 15];
           I64[Hp - 40] = sat_s9TV5_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s9TUY::P64;
           I64[Hp - 16] = Control.Exception.Handler_con_info;
           P64[Hp - 8] = _s9TUX::P64;
           P64[Hp] = Hp - 38;
           R1 = Hp - 15;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.244391561 UTC

[section ""data" . Control.Exception.$fFunctorHandler_$c<$_closure" {
     Control.Exception.$fFunctorHandler_$c<$_closure:
         const Control.Exception.$fFunctorHandler_$c<$_info;
 },
 sat_s9TVg_entry() //  [R1, R2]
         { info_tbl: [(c9TZk,
                       label: sat_s9TVg_info
                       rep:HeapRep 2 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TZk: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9TZl; else goto c9TZm;
       c9TZl: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TZm: // global
           I64[Sp - 16] = block_c9TZi_info;
           R2 = R2;
           _s9TV6::P64 = P64[R1 + 6];
           R1 = P64[R1 + 14];
           P64[Sp - 8] = _s9TV6::P64;
           Sp = Sp - 16;
           call stg_ap_pv_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TZi() //  []
         { info_tbl: [(c9TZi,
                       label: block_c9TZi_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TZi: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 Control.Exception.$fFunctorHandler_$c<$_entry() //  [R2, R3]
         { info_tbl: [(c9TZo,
                       label: Control.Exception.$fFunctorHandler_$c<$_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TZo: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9TZq; else goto c9TZr;
       c9TZq: // global
           R3 = R3;
           R2 = R2;
           R1 = Control.Exception.$fFunctorHandler_$c<$_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9TZr: // global
           I64[Sp - 16] = block_c9TZ8_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9TZv; else goto c9TZ9;
       u9TZv: // global
           call _c9TZ8(R1) args: 0, res: 0, upd: 0;
       c9TZ9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9TZ8() //  [R1]
         { info_tbl: [(c9TZ8,
                       label: block_c9TZ8_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TZ8: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9TZu; else goto c9TZt;
       c9TZu: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9TZt: // global
           _s9TV9::P64 = P64[R1 + 7];
           _s9TVa::P64 = P64[R1 + 15];
           I64[Hp - 40] = sat_s9TVg_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s9TVa::P64;
           I64[Hp - 16] = Control.Exception.Handler_con_info;
           P64[Hp - 8] = _s9TV9::P64;
           P64[Hp] = Hp - 38;
           R1 = Hp - 15;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.245875172 UTC

[section ""data" . Control.Exception.$fFunctorHandler_closure" {
     Control.Exception.$fFunctorHandler_closure:
         const GHC.Base.C:Functor_con_info;
         const Control.Exception.$fFunctorHandler_$cfmap_closure+2;
         const Control.Exception.$fFunctorHandler_$c<$_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.246544401 UTC

[section ""data" . Control.Exception.catches2_closure" {
     Control.Exception.catches2_closure:
         const Control.Exception.catches2_info;
         const 0;
 },
 Control.Exception.catches2_entry() //  [R2]
         { info_tbl: [(c9TZA,
                       label: Control.Exception.catches2_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TZA: // global
           R3 = R2;
           R2 = GHC.Exception.$fExceptionSomeException_closure;
           call GHC.Exception.throw_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.247988589 UTC

[section ""data" . Control.Exception.catches1_closure" {
     Control.Exception.catches1_closure:
         const Control.Exception.catches1_info;
         const 0;
 },
 sat_s9TVx_entry() //  [R1, R2]
         { info_tbl: [(c9TZQ,
                       label: sat_s9TVx_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TZQ: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c9TZR; else goto c9TZS;
       c9TZR: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9TZS: // global
           P64[Sp - 16] = R2;
           P64[Sp - 8] = P64[R1 + 7];
           Sp = Sp - 16;
           call _c9TZY() args: 0, res: 0, upd: 0;
     }
 },
 _c9TZY() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9TZY: // global
           I64[Sp - 8] = block_c9U00_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9U0z; else goto c9U02;
       u9U0z: // global
           call _c9U00(R1) args: 0, res: 0, upd: 0;
       c9U02: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9U00() //  [R1]
         { info_tbl: [(c9U00,
                       label: block_c9U00_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U00: // global
           if (R1 & 7 == 1) goto c9U08; else goto c9U0d;
       c9U08: // global
           R2 = P64[Sp + 8];
           Sp = Sp + 24;
           call Control.Exception.catches2_entry(R2) args: 8, res: 0, upd: 8;
       c9U0d: // global
           I64[Sp] = block_c9U0b_info;
           _s9TVr::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp + 16] = _s9TVr::P64;
           if (R1 & 7 != 0) goto u9U0A; else goto c9U0e;
       u9U0A: // global
           call _c9U0b(R1) args: 0, res: 0, upd: 0;
       c9U0e: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9U0b() //  [R1]
         { info_tbl: [(c9U0b,
                       label: block_c9U0b_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U0b: // global
           I64[Sp - 8] = block_c9U0i_info;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_p_info;
           P64[Sp - 16] = P64[Sp + 8];
           P64[Sp] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Exception.fromException_entry(R2) args: 24, res: 8, upd: 8;
     }
 },
 _c9U0i() //  [R1]
         { info_tbl: [(c9U0i,
                       label: block_c9U0i_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U0i: // global
           if (R1 & 7 == 1) goto c9U0p; else goto c9U0t;
       c9U0p: // global
           P64[Sp + 24] = P64[Sp + 24];
           Sp = Sp + 16;
           call _c9TZY() args: 0, res: 0, upd: 0;
       c9U0t: // global
           R2 = P64[R1 + 6];
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 Control.Exception.catches1_entry() //  [R2, R3]
         { info_tbl: [(c9U0C,
                       label: Control.Exception.catches1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U0C: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9U0G; else goto c9U0F;
       c9U0G: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = Control.Exception.catches1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9U0F: // global
           I64[Hp - 8] = sat_s9TVx_info;
           P64[Hp] = R3;
           _s9TVi::P64 = R2;
           R2 = Hp - 7;
           R1 = _s9TVi::P64;
           call stg_catch#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.250172418 UTC

[section ""data" . Control.Exception.catches_closure" {
     Control.Exception.catches_closure:
         const Control.Exception.catches_info;
         const 0;
 },
 Control.Exception.catches_entry() //  [R2, R3]
         { info_tbl: [(c9U0L,
                       label: Control.Exception.catches_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U0L: // global
           R3 = R3;
           R2 = R2;
           call Control.Exception.catches1_entry(R3,
                                                 R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.250844197 UTC

[section ""cstring" . Control.Exception.$trModule4_bytes" {
     Control.Exception.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.251368934 UTC

[section ""data" . Control.Exception.$trModule3_closure" {
     Control.Exception.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Exception.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.251912394 UTC

[section ""cstring" . Control.Exception.$trModule2_bytes" {
     Control.Exception.$trModule2_bytes:
         I8[] [67,111,110,116,114,111,108,46,69,120,99,101,112,116,105,111,110]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.252441998 UTC

[section ""data" . Control.Exception.$trModule1_closure" {
     Control.Exception.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Exception.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.25300661 UTC

[section ""data" . Control.Exception.$trModule_closure" {
     Control.Exception.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Control.Exception.$trModule3_closure+1;
         const Control.Exception.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.253553 UTC

[section ""data" . $krep_r9TUJ_closure" {
     $krep_r9TUJ_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.254100229 UTC

[section ""data" . $krep1_r9TUK_closure" {
     $krep1_r9TUK_closure:
         const :_con_info;
         const $krep_r9TUJ_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.254644582 UTC

[section ""data" . $krep2_r9TUL_closure" {
     $krep2_r9TUL_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Exception.$tcException_closure;
         const $krep1_r9TUK_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.255187722 UTC

[section ""data" . $krep3_r9TUM_closure" {
     $krep3_r9TUM_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.255763379 UTC

[section ""data" . $krep4_r9TUN_closure" {
     $krep4_r9TUN_closure:
         const :_con_info;
         const $krep3_r9TUM_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.256349662 UTC

[section ""data" . $krep5_r9TUO_closure" {
     $krep5_r9TUO_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep4_r9TUN_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.256941318 UTC

[section ""data" . $krep6_r9TUP_closure" {
     $krep6_r9TUP_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r9TUJ_closure+2;
         const $krep5_r9TUO_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.257512188 UTC

[section ""cstring" . Control.Exception.$tcHandler2_bytes" {
     Control.Exception.$tcHandler2_bytes:
         I8[] [72,97,110,100,108,101,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.25804412 UTC

[section ""data" . Control.Exception.$tcHandler1_closure" {
     Control.Exception.$tcHandler1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Exception.$tcHandler2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.258575515 UTC

[section ""data" . Control.Exception.$tcHandler_closure" {
     Control.Exception.$tcHandler_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Exception.$trModule_closure+1;
         const Control.Exception.$tcHandler1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 6426835558342087658;
         const 14166740461602238008;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.259151559 UTC

[section ""data" . $krep7_r9TUQ_closure" {
     $krep7_r9TUQ_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Control.Exception.$tcHandler_closure+1;
         const $krep4_r9TUN_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.259679585 UTC

[section ""data" . $krep8_r9TUR_closure" {
     $krep8_r9TUR_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep6_r9TUP_closure+4;
         const $krep7_r9TUQ_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.260230163 UTC

[section ""data" . Control.Exception.$tc'Handler1_closure" {
     Control.Exception.$tc'Handler1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r9TUL_closure+1;
         const $krep8_r9TUR_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.260791427 UTC

[section ""cstring" . Control.Exception.$tc'Handler3_bytes" {
     Control.Exception.$tc'Handler3_bytes:
         I8[] [39,72,97,110,100,108,101,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.261419084 UTC

[section ""data" . Control.Exception.$tc'Handler2_closure" {
     Control.Exception.$tc'Handler2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Exception.$tc'Handler3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.261970971 UTC

[section ""data" . Control.Exception.$tc'Handler_closure" {
     Control.Exception.$tc'Handler_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Exception.$trModule_closure+1;
         const Control.Exception.$tc'Handler2_closure+1;
         const Control.Exception.$tc'Handler1_closure+4;
         const 23626058257872273;
         const 1528997583294198943;
         const 2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.262711329 UTC

[section ""data" . lvl_r9TUS_closure" {
     lvl_r9TUS_closure:
         const lvl_r9TUS_info;
 },
 lvl_r9TUS_entry() //  []
         { info_tbl: [(c9U0S,
                       label: lvl_r9TUS_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U0S: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.263703936 UTC

[section ""data" . Control.Exception.allowInterrupt1_closure" {
     Control.Exception.allowInterrupt1_closure:
         const Control.Exception.allowInterrupt1_info;
 },
 Control.Exception.allowInterrupt1_entry() //  []
         { info_tbl: [(c9U16,
                       label: Control.Exception.allowInterrupt1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U16: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9U17; else goto c9U18;
       c9U17: // global
           R1 = Control.Exception.allowInterrupt1_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9U18: // global
           I64[Sp - 8] = block_c9U0Z_info;
           Sp = Sp - 8;
           call stg_getMaskingState#() args: 8, res: 8, upd: 8;
     }
 },
 _c9U0Z() //  [R1]
         { info_tbl: [(c9U0Z,
                       label: block_c9U0Z_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U0Z: // global
           if (R1 == 0) goto c9U15; else goto u9U1a;
       u9U1a: // global
           if (R1 == 1) goto c9U15; else goto c9U13;
       c9U15: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9U13: // global
           R1 = lvl_r9TUS_closure+1;
           Sp = Sp + 8;
           call stg_unmaskAsyncExceptions#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.264734281 UTC

[section ""data" . Control.Exception.allowInterrupt_closure" {
     Control.Exception.allowInterrupt_closure:
         const Control.Exception.allowInterrupt_info;
 },
 Control.Exception.allowInterrupt_entry() //  []
         { info_tbl: [(c9U1f,
                       label: Control.Exception.allowInterrupt_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U1f: // global
           call Control.Exception.allowInterrupt1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.26563891 UTC

[section ""data" . Control.Exception.Handler_closure" {
     Control.Exception.Handler_closure:
         const Control.Exception.Handler_info;
 },
 Control.Exception.Handler_entry() //  [R2, R3]
         { info_tbl: [(c9U1n,
                       label: Control.Exception.Handler_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U1n: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9U1r; else goto c9U1q;
       c9U1r: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Exception.Handler_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9U1q: // global
           I64[Hp - 16] = Control.Exception.Handler_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.266479911 UTC

[Control.Exception.Handler_con_entry() //  [R1]
         { info_tbl: [(c9U1s,
                       label: Control.Exception.Handler_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,67,111,110,116,114,111,108,46,69,120,99,101,112,116,105,111,110,46,72,97,110,100,108,101,114]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U1s: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.267193072 UTC

[section ""relreadonly" . S9TWI_srt" {
     S9TWI_srt:
         const GHC.Exception.$fExceptionSomeException_closure;
         const Control.Exception.catches2_closure;
         const Control.Exception.catches1_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.267982298 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:04:59.269733249 UTC

[section ""data" . Control.Exception.$fFunctorHandler_$cfmap_closure" {
     Control.Exception.$fFunctorHandler_$cfmap_closure:
         const Control.Exception.$fFunctorHandler_$cfmap_info;
 },
 sat_s9TV5_entry() //  [R1, R2]
         { info_tbl: [(c9U1L,
                       label: sat_s9TV5_info
                       rep:HeapRep 2 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U1L: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9U1M; else goto c9U1N;
       c9U1M: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9U1N: // global
           I64[Sp - 16] = block_c9U1I_info;
           R2 = R2;
           _s9TUU::P64 = P64[R1 + 6];
           R1 = P64[R1 + 14];
           P64[Sp - 8] = _s9TUU::P64;
           Sp = Sp - 16;
           call stg_ap_pv_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9U1I() //  [R1]
         { info_tbl: [(c9U1I,
                       label: block_c9U1I_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U1I: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9U1Q; else goto c9U1P;
       c9U1Q: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9U1P: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = R1;
           R1 = Hp - 24;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 Control.Exception.$fFunctorHandler_$cfmap_entry() //  [R2, R3]
         { info_tbl: [(c9U1R,
                       label: Control.Exception.$fFunctorHandler_$cfmap_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U1R: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9U1T; else goto c9U1U;
       c9U1T: // global
           R3 = R3;
           R2 = R2;
           R1 = Control.Exception.$fFunctorHandler_$cfmap_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9U1U: // global
           I64[Sp - 16] = block_c9U1y_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9U1Y; else goto c9U1z;
       u9U1Y: // global
           call _c9U1y(R1) args: 0, res: 0, upd: 0;
       c9U1z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9U1y() //  [R1]
         { info_tbl: [(c9U1y,
                       label: block_c9U1y_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U1y: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9U1X; else goto c9U1W;
       c9U1X: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9U1W: // global
           _s9TUX::P64 = P64[R1 + 7];
           _s9TUY::P64 = P64[R1 + 15];
           I64[Hp - 40] = sat_s9TV5_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s9TUY::P64;
           I64[Hp - 16] = Control.Exception.Handler_con_info;
           P64[Hp - 8] = _s9TUX::P64;
           P64[Hp] = Hp - 38;
           R1 = Hp - 15;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.281012862 UTC

[section ""data" . Control.Exception.$fFunctorHandler_$c<$_closure" {
     Control.Exception.$fFunctorHandler_$c<$_closure:
         const Control.Exception.$fFunctorHandler_$c<$_info;
 },
 sat_s9TVg_entry() //  [R1, R2]
         { info_tbl: [(c9U2A,
                       label: sat_s9TVg_info
                       rep:HeapRep 2 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U2A: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9U2B; else goto c9U2C;
       c9U2B: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9U2C: // global
           I64[Sp - 16] = block_c9U2y_info;
           R2 = R2;
           _s9TV6::P64 = P64[R1 + 6];
           R1 = P64[R1 + 14];
           P64[Sp - 8] = _s9TV6::P64;
           Sp = Sp - 16;
           call stg_ap_pv_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9U2y() //  []
         { info_tbl: [(c9U2y,
                       label: block_c9U2y_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U2y: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 Control.Exception.$fFunctorHandler_$c<$_entry() //  [R2, R3]
         { info_tbl: [(c9U2E,
                       label: Control.Exception.$fFunctorHandler_$c<$_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U2E: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9U2G; else goto c9U2H;
       c9U2G: // global
           R3 = R3;
           R2 = R2;
           R1 = Control.Exception.$fFunctorHandler_$c<$_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9U2H: // global
           I64[Sp - 16] = block_c9U2o_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9U2L; else goto c9U2p;
       u9U2L: // global
           call _c9U2o(R1) args: 0, res: 0, upd: 0;
       c9U2p: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9U2o() //  [R1]
         { info_tbl: [(c9U2o,
                       label: block_c9U2o_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U2o: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9U2K; else goto c9U2J;
       c9U2K: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9U2J: // global
           _s9TV9::P64 = P64[R1 + 7];
           _s9TVa::P64 = P64[R1 + 15];
           I64[Hp - 40] = sat_s9TVg_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s9TVa::P64;
           I64[Hp - 16] = Control.Exception.Handler_con_info;
           P64[Hp - 8] = _s9TV9::P64;
           P64[Hp] = Hp - 38;
           R1 = Hp - 15;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.289841833 UTC

[section ""data" . Control.Exception.$fFunctorHandler_closure" {
     Control.Exception.$fFunctorHandler_closure:
         const GHC.Base.C:Functor_con_info;
         const Control.Exception.$fFunctorHandler_$cfmap_closure+2;
         const Control.Exception.$fFunctorHandler_$c<$_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.291704976 UTC

[section ""data" . Control.Exception.catches2_closure" {
     Control.Exception.catches2_closure:
         const Control.Exception.catches2_info;
         const 0;
 },
 Control.Exception.catches2_entry() //  [R2]
         { info_tbl: [(c9U3b,
                       label: Control.Exception.catches2_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U3b: // global
           R3 = R2;
           R2 = GHC.Exception.$fExceptionSomeException_closure;
           call GHC.Exception.throw_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.295737274 UTC

[section ""data" . Control.Exception.catches1_closure" {
     Control.Exception.catches1_closure:
         const Control.Exception.catches1_info;
         const 0;
 },
 sat_s9TVx_entry() //  [R1, R2]
         { info_tbl: [(c9U3v,
                       label: sat_s9TVx_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U3v: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c9U3w; else goto c9U3x;
       c9U3w: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9U3x: // global
           P64[Sp - 16] = R2;
           P64[Sp - 8] = P64[R1 + 7];
           Sp = Sp - 16;
           call _c9U3D() args: 0, res: 0, upd: 0;
     }
 },
 _c9U3D() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U3D: // global
           I64[Sp - 8] = block_c9U3F_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9U4e; else goto c9U3H;
       u9U4e: // global
           call _c9U3F(R1) args: 0, res: 0, upd: 0;
       c9U3H: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9U3F() //  [R1]
         { info_tbl: [(c9U3F,
                       label: block_c9U3F_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U3F: // global
           if (R1 & 7 == 1) goto c9U3N; else goto c9U3S;
       c9U3N: // global
           R2 = P64[Sp + 8];
           Sp = Sp + 24;
           call Control.Exception.catches2_entry(R2) args: 8, res: 0, upd: 8;
       c9U3S: // global
           I64[Sp] = block_c9U3Q_info;
           _s9TVr::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp + 16] = _s9TVr::P64;
           if (R1 & 7 != 0) goto u9U4f; else goto c9U3T;
       u9U4f: // global
           call _c9U3Q(R1) args: 0, res: 0, upd: 0;
       c9U3T: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9U3Q() //  [R1]
         { info_tbl: [(c9U3Q,
                       label: block_c9U3Q_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U3Q: // global
           I64[Sp - 8] = block_c9U3X_info;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_p_info;
           P64[Sp - 16] = P64[Sp + 8];
           P64[Sp] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Exception.fromException_entry(R2) args: 24, res: 8, upd: 8;
     }
 },
 _c9U3X() //  [R1]
         { info_tbl: [(c9U3X,
                       label: block_c9U3X_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U3X: // global
           if (R1 & 7 == 1) goto c9U44; else goto c9U48;
       c9U44: // global
           P64[Sp + 24] = P64[Sp + 24];
           Sp = Sp + 16;
           call _c9U3D() args: 0, res: 0, upd: 0;
       c9U48: // global
           R2 = P64[R1 + 6];
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 Control.Exception.catches1_entry() //  [R2, R3]
         { info_tbl: [(c9U4h,
                       label: Control.Exception.catches1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U4h: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9U4l; else goto c9U4k;
       c9U4l: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = Control.Exception.catches1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9U4k: // global
           I64[Hp - 8] = sat_s9TVx_info;
           P64[Hp] = R3;
           _s9TVi::P64 = R2;
           R2 = Hp - 7;
           R1 = _s9TVi::P64;
           call stg_catch#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.308030522 UTC

[section ""data" . Control.Exception.catches_closure" {
     Control.Exception.catches_closure:
         const Control.Exception.catches_info;
         const 0;
 },
 Control.Exception.catches_entry() //  [R2, R3]
         { info_tbl: [(c9U4T,
                       label: Control.Exception.catches_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U4T: // global
           R3 = R3;
           R2 = R2;
           call Control.Exception.catches1_entry(R3,
                                                 R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.311565058 UTC

[section ""cstring" . Control.Exception.$trModule4_bytes" {
     Control.Exception.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.31376669 UTC

[section ""data" . Control.Exception.$trModule3_closure" {
     Control.Exception.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Exception.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.315380477 UTC

[section ""cstring" . Control.Exception.$trModule2_bytes" {
     Control.Exception.$trModule2_bytes:
         I8[] [67,111,110,116,114,111,108,46,69,120,99,101,112,116,105,111,110]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.316962883 UTC

[section ""data" . Control.Exception.$trModule1_closure" {
     Control.Exception.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Exception.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.318589734 UTC

[section ""data" . Control.Exception.$trModule_closure" {
     Control.Exception.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Control.Exception.$trModule3_closure+1;
         const Control.Exception.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.32025037 UTC

[section ""data" . $krep_r9TUJ_closure" {
     $krep_r9TUJ_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.322162862 UTC

[section ""data" . $krep1_r9TUK_closure" {
     $krep1_r9TUK_closure:
         const :_con_info;
         const $krep_r9TUJ_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.323854389 UTC

[section ""data" . $krep2_r9TUL_closure" {
     $krep2_r9TUL_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Exception.$tcException_closure;
         const $krep1_r9TUK_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.325614395 UTC

[section ""data" . $krep3_r9TUM_closure" {
     $krep3_r9TUM_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.32717753 UTC

[section ""data" . $krep4_r9TUN_closure" {
     $krep4_r9TUN_closure:
         const :_con_info;
         const $krep3_r9TUM_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.328803366 UTC

[section ""data" . $krep5_r9TUO_closure" {
     $krep5_r9TUO_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep4_r9TUN_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.330520989 UTC

[section ""data" . $krep6_r9TUP_closure" {
     $krep6_r9TUP_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r9TUJ_closure+2;
         const $krep5_r9TUO_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.3321286 UTC

[section ""cstring" . Control.Exception.$tcHandler2_bytes" {
     Control.Exception.$tcHandler2_bytes:
         I8[] [72,97,110,100,108,101,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.334126078 UTC

[section ""data" . Control.Exception.$tcHandler1_closure" {
     Control.Exception.$tcHandler1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Exception.$tcHandler2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.335807836 UTC

[section ""data" . Control.Exception.$tcHandler_closure" {
     Control.Exception.$tcHandler_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Exception.$trModule_closure+1;
         const Control.Exception.$tcHandler1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 6426835558342087658;
         const 14166740461602238008;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.338183201 UTC

[section ""data" . $krep7_r9TUQ_closure" {
     $krep7_r9TUQ_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Control.Exception.$tcHandler_closure+1;
         const $krep4_r9TUN_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.339838881 UTC

[section ""data" . $krep8_r9TUR_closure" {
     $krep8_r9TUR_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep6_r9TUP_closure+4;
         const $krep7_r9TUQ_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.341555951 UTC

[section ""data" . Control.Exception.$tc'Handler1_closure" {
     Control.Exception.$tc'Handler1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r9TUL_closure+1;
         const $krep8_r9TUR_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.343191931 UTC

[section ""cstring" . Control.Exception.$tc'Handler3_bytes" {
     Control.Exception.$tc'Handler3_bytes:
         I8[] [39,72,97,110,100,108,101,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.344759275 UTC

[section ""data" . Control.Exception.$tc'Handler2_closure" {
     Control.Exception.$tc'Handler2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Exception.$tc'Handler3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.346439696 UTC

[section ""data" . Control.Exception.$tc'Handler_closure" {
     Control.Exception.$tc'Handler_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Exception.$trModule_closure+1;
         const Control.Exception.$tc'Handler2_closure+1;
         const Control.Exception.$tc'Handler1_closure+4;
         const 23626058257872273;
         const 1528997583294198943;
         const 2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.348359501 UTC

[section ""data" . lvl_r9TUS_closure" {
     lvl_r9TUS_closure:
         const lvl_r9TUS_info;
 },
 lvl_r9TUS_entry() //  []
         { info_tbl: [(c9U5p,
                       label: lvl_r9TUS_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U5p: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.352283785 UTC

[section ""data" . Control.Exception.allowInterrupt1_closure" {
     Control.Exception.allowInterrupt1_closure:
         const Control.Exception.allowInterrupt1_info;
 },
 Control.Exception.allowInterrupt1_entry() //  []
         { info_tbl: [(c9U5I,
                       label: Control.Exception.allowInterrupt1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U5I: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9U5J; else goto c9U5K;
       c9U5J: // global
           R1 = Control.Exception.allowInterrupt1_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9U5K: // global
           I64[Sp - 8] = block_c9U5B_info;
           Sp = Sp - 8;
           call stg_getMaskingState#() args: 8, res: 8, upd: 8;
     }
 },
 _c9U5B() //  [R1]
         { info_tbl: [(c9U5B,
                       label: block_c9U5B_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U5B: // global
           if (R1 == 0) goto c9U5H; else goto u9U5M;
       u9U5M: // global
           if (R1 == 1) goto c9U5H; else goto c9U5F;
       c9U5H: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9U5F: // global
           R1 = lvl_r9TUS_closure+1;
           Sp = Sp + 8;
           call stg_unmaskAsyncExceptions#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.357664254 UTC

[section ""data" . Control.Exception.allowInterrupt_closure" {
     Control.Exception.allowInterrupt_closure:
         const Control.Exception.allowInterrupt_info;
 },
 Control.Exception.allowInterrupt_entry() //  []
         { info_tbl: [(c9U60,
                       label: Control.Exception.allowInterrupt_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U60: // global
           call Control.Exception.allowInterrupt1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.360859135 UTC

[section ""data" . Control.Exception.Handler_closure" {
     Control.Exception.Handler_closure:
         const Control.Exception.Handler_info;
 },
 Control.Exception.Handler_entry() //  [R2, R3]
         { info_tbl: [(c9U6c,
                       label: Control.Exception.Handler_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U6c: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9U6g; else goto c9U6f;
       c9U6g: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Exception.Handler_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9U6f: // global
           I64[Hp - 16] = Control.Exception.Handler_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.364405626 UTC

[Control.Exception.Handler_con_entry() //  [R1]
         { info_tbl: [(c9U6m,
                       label: Control.Exception.Handler_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,67,111,110,116,114,111,108,46,69,120,99,101,112,116,105,111,110,46,72,97,110,100,108,101,114]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U6m: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.367998166 UTC

[section ""relreadonly" . S9TWI_srt" {
     S9TWI_srt:
         const GHC.Exception.$fExceptionSomeException_closure;
         const Control.Exception.catches2_closure;
         const Control.Exception.catches1_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.493092777 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:04:59.494845484 UTC

[section ""data" . Control.Exception.$fFunctorHandler_$cfmap_closure" {
     Control.Exception.$fFunctorHandler_$cfmap_closure:
         const Control.Exception.$fFunctorHandler_$cfmap_info;
 },
 sat_s9U6E_entry() //  [R1, R2]
         { info_tbl: [(c9U7u,
                       label: sat_s9U6E_info
                       rep:HeapRep 2 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U7u: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9U7v; else goto c9U7w;
       c9U7v: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9U7w: // global
           I64[Sp - 16] = block_c9U7r_info;
           R2 = R2;
           _s9U6t::P64 = P64[R1 + 6];
           R1 = P64[R1 + 14];
           P64[Sp - 8] = _s9U6t::P64;
           Sp = Sp - 16;
           call stg_ap_pv_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9U7r() //  [R1]
         { info_tbl: [(c9U7r,
                       label: block_c9U7r_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U7r: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9U7z; else goto c9U7y;
       c9U7z: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9U7y: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = R1;
           R1 = Hp - 24;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 Control.Exception.$fFunctorHandler_$cfmap_entry() //  [R2, R3]
         { info_tbl: [(c9U7A,
                       label: Control.Exception.$fFunctorHandler_$cfmap_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U7A: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9U7C; else goto c9U7D;
       c9U7C: // global
           R3 = R3;
           R2 = R2;
           R1 = Control.Exception.$fFunctorHandler_$cfmap_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9U7D: // global
           I64[Sp - 16] = block_c9U7h_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9U7H; else goto c9U7i;
       u9U7H: // global
           call _c9U7h(R1) args: 0, res: 0, upd: 0;
       c9U7i: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9U7h() //  [R1]
         { info_tbl: [(c9U7h,
                       label: block_c9U7h_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U7h: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9U7G; else goto c9U7F;
       c9U7G: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9U7F: // global
           _s9U6w::P64 = P64[R1 + 7];
           _s9U6x::P64 = P64[R1 + 15];
           I64[Hp - 40] = sat_s9U6E_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s9U6x::P64;
           I64[Hp - 16] = Control.Exception.Handler_con_info;
           P64[Hp - 8] = _s9U6w::P64;
           P64[Hp] = Hp - 38;
           R1 = Hp - 15;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.504710498 UTC

[section ""data" . Control.Exception.$fFunctorHandler_$c<$_closure" {
     Control.Exception.$fFunctorHandler_$c<$_closure:
         const Control.Exception.$fFunctorHandler_$c<$_info;
 },
 sat_s9U6P_entry() //  [R1, R2]
         { info_tbl: [(c9U8o,
                       label: sat_s9U6P_info
                       rep:HeapRep 2 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U8o: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9U8p; else goto c9U8q;
       c9U8p: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9U8q: // global
           I64[Sp - 16] = block_c9U8m_info;
           R2 = R2;
           _s9U6F::P64 = P64[R1 + 6];
           R1 = P64[R1 + 14];
           P64[Sp - 8] = _s9U6F::P64;
           Sp = Sp - 16;
           call stg_ap_pv_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9U8m() //  []
         { info_tbl: [(c9U8m,
                       label: block_c9U8m_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U8m: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 Control.Exception.$fFunctorHandler_$c<$_entry() //  [R2, R3]
         { info_tbl: [(c9U8s,
                       label: Control.Exception.$fFunctorHandler_$c<$_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U8s: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9U8u; else goto c9U8v;
       c9U8u: // global
           R3 = R3;
           R2 = R2;
           R1 = Control.Exception.$fFunctorHandler_$c<$_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9U8v: // global
           I64[Sp - 16] = block_c9U8c_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9U8z; else goto c9U8d;
       u9U8z: // global
           call _c9U8c(R1) args: 0, res: 0, upd: 0;
       c9U8d: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9U8c() //  [R1]
         { info_tbl: [(c9U8c,
                       label: block_c9U8c_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U8c: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9U8y; else goto c9U8x;
       c9U8y: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9U8x: // global
           _s9U6I::P64 = P64[R1 + 7];
           _s9U6J::P64 = P64[R1 + 15];
           I64[Hp - 40] = sat_s9U6P_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s9U6J::P64;
           I64[Hp - 16] = Control.Exception.Handler_con_info;
           P64[Hp - 8] = _s9U6I::P64;
           P64[Hp] = Hp - 38;
           R1 = Hp - 15;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.513904766 UTC

[section ""data" . Control.Exception.$fFunctorHandler_closure" {
     Control.Exception.$fFunctorHandler_closure:
         const GHC.Base.C:Functor_con_info;
         const Control.Exception.$fFunctorHandler_$cfmap_closure+2;
         const Control.Exception.$fFunctorHandler_$c<$_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.515816916 UTC

[section ""data" . Control.Exception.catches2_closure" {
     Control.Exception.catches2_closure:
         const Control.Exception.catches2_info;
         const 0;
 },
 Control.Exception.catches2_entry() //  [R2]
         { info_tbl: [(c9U93,
                       label: Control.Exception.catches2_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U93: // global
           R3 = R2;
           R2 = GHC.Exception.$fExceptionSomeException_closure;
           call GHC.Exception.throw_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.52013992 UTC

[section ""data" . Control.Exception.catches1_closure" {
     Control.Exception.catches1_closure:
         const Control.Exception.catches1_info;
         const 0;
 },
 sat_s9U76_entry() //  [R1, R2]
         { info_tbl: [(c9U9o,
                       label: sat_s9U76_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U9o: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c9U9p; else goto c9U9q;
       c9U9p: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9U9q: // global
           P64[Sp - 16] = R2;
           P64[Sp - 8] = P64[R1 + 7];
           Sp = Sp - 16;
           call _c9U9w() args: 0, res: 0, upd: 0;
     }
 },
 _c9U9w() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U9w: // global
           I64[Sp - 8] = block_c9U9y_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9Ua7; else goto c9U9A;
       u9Ua7: // global
           call _c9U9y(R1) args: 0, res: 0, upd: 0;
       c9U9A: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9U9y() //  [R1]
         { info_tbl: [(c9U9y,
                       label: block_c9U9y_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U9y: // global
           if (R1 & 7 == 1) goto c9U9G; else goto c9U9L;
       c9U9G: // global
           R2 = P64[Sp + 8];
           Sp = Sp + 24;
           call Control.Exception.catches2_entry(R2) args: 8, res: 0, upd: 8;
       c9U9L: // global
           I64[Sp] = block_c9U9J_info;
           _s9U70::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp + 16] = _s9U70::P64;
           if (R1 & 7 != 0) goto u9Ua8; else goto c9U9M;
       u9Ua8: // global
           call _c9U9J(R1) args: 0, res: 0, upd: 0;
       c9U9M: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9U9J() //  [R1]
         { info_tbl: [(c9U9J,
                       label: block_c9U9J_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U9J: // global
           I64[Sp - 8] = block_c9U9Q_info;
           R2 = P64[R1 + 7];
           I64[Sp - 24] = stg_ap_p_info;
           P64[Sp - 16] = P64[Sp + 8];
           P64[Sp] = P64[R1 + 15];
           Sp = Sp - 24;
           call GHC.Exception.fromException_entry(R2) args: 24, res: 8, upd: 8;
     }
 },
 _c9U9Q() //  [R1]
         { info_tbl: [(c9U9Q,
                       label: block_c9U9Q_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9U9Q: // global
           if (R1 & 7 == 1) goto c9U9X; else goto c9Ua1;
       c9U9X: // global
           P64[Sp + 24] = P64[Sp + 24];
           Sp = Sp + 16;
           call _c9U9w() args: 0, res: 0, upd: 0;
       c9Ua1: // global
           R2 = P64[R1 + 6];
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 Control.Exception.catches1_entry() //  [R2, R3]
         { info_tbl: [(c9Uaa,
                       label: Control.Exception.catches1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Uaa: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9Uae; else goto c9Uad;
       c9Uae: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = Control.Exception.catches1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9Uad: // global
           I64[Hp - 8] = sat_s9U76_info;
           P64[Hp] = R3;
           _s9U6R::P64 = R2;
           R2 = Hp - 7;
           R1 = _s9U6R::P64;
           call stg_catch#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.532965456 UTC

[section ""data" . Control.Exception.catches_closure" {
     Control.Exception.catches_closure:
         const Control.Exception.catches_info;
         const 0;
 },
 Control.Exception.catches_entry() //  [R2, R3]
         { info_tbl: [(c9UaR,
                       label: Control.Exception.catches_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9UaR: // global
           R3 = R3;
           R2 = R2;
           call Control.Exception.catches1_entry(R3,
                                                 R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.536372026 UTC

[section ""cstring" . Control.Exception.$trModule4_bytes" {
     Control.Exception.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.538061522 UTC

[section ""data" . Control.Exception.$trModule3_closure" {
     Control.Exception.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Exception.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.539662871 UTC

[section ""cstring" . Control.Exception.$trModule2_bytes" {
     Control.Exception.$trModule2_bytes:
         I8[] [67,111,110,116,114,111,108,46,69,120,99,101,112,116,105,111,110]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.541324134 UTC

[section ""data" . Control.Exception.$trModule1_closure" {
     Control.Exception.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Exception.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.54304212 UTC

[section ""data" . Control.Exception.$trModule_closure" {
     Control.Exception.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Control.Exception.$trModule3_closure+1;
         const Control.Exception.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.544706035 UTC

[section ""data" . $krep_r9TUJ_closure" {
     $krep_r9TUJ_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.546307396 UTC

[section ""data" . $krep1_r9TUK_closure" {
     $krep1_r9TUK_closure:
         const :_con_info;
         const $krep_r9TUJ_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.5481166 UTC

[section ""data" . $krep2_r9TUL_closure" {
     $krep2_r9TUL_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Exception.$tcException_closure;
         const $krep1_r9TUK_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.550313135 UTC

[section ""data" . $krep3_r9TUM_closure" {
     $krep3_r9TUM_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.551930357 UTC

[section ""data" . $krep4_r9TUN_closure" {
     $krep4_r9TUN_closure:
         const :_con_info;
         const $krep3_r9TUM_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.553877314 UTC

[section ""data" . $krep5_r9TUO_closure" {
     $krep5_r9TUO_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep4_r9TUN_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.555513677 UTC

[section ""data" . $krep6_r9TUP_closure" {
     $krep6_r9TUP_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r9TUJ_closure+2;
         const $krep5_r9TUO_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.557130289 UTC

[section ""cstring" . Control.Exception.$tcHandler2_bytes" {
     Control.Exception.$tcHandler2_bytes:
         I8[] [72,97,110,100,108,101,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.558793436 UTC

[section ""data" . Control.Exception.$tcHandler1_closure" {
     Control.Exception.$tcHandler1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Exception.$tcHandler2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.560404547 UTC

[section ""data" . Control.Exception.$tcHandler_closure" {
     Control.Exception.$tcHandler_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Exception.$trModule_closure+1;
         const Control.Exception.$tcHandler1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 6426835558342087658;
         const 14166740461602238008;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.562204927 UTC

[section ""data" . $krep7_r9TUQ_closure" {
     $krep7_r9TUQ_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Control.Exception.$tcHandler_closure+1;
         const $krep4_r9TUN_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.563879451 UTC

[section ""data" . $krep8_r9TUR_closure" {
     $krep8_r9TUR_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep6_r9TUP_closure+4;
         const $krep7_r9TUQ_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.566330532 UTC

[section ""data" . Control.Exception.$tc'Handler1_closure" {
     Control.Exception.$tc'Handler1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r9TUL_closure+1;
         const $krep8_r9TUR_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.567993965 UTC

[section ""cstring" . Control.Exception.$tc'Handler3_bytes" {
     Control.Exception.$tc'Handler3_bytes:
         I8[] [39,72,97,110,100,108,101,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.569630541 UTC

[section ""data" . Control.Exception.$tc'Handler2_closure" {
     Control.Exception.$tc'Handler2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Exception.$tc'Handler3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.571271847 UTC

[section ""data" . Control.Exception.$tc'Handler_closure" {
     Control.Exception.$tc'Handler_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Exception.$trModule_closure+1;
         const Control.Exception.$tc'Handler2_closure+1;
         const Control.Exception.$tc'Handler1_closure+4;
         const 23626058257872273;
         const 1528997583294198943;
         const 2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.573196446 UTC

[section ""data" . lvl_r9TUS_closure" {
     lvl_r9TUS_closure:
         const lvl_r9TUS_info;
 },
 lvl_r9TUS_entry() //  []
         { info_tbl: [(c9Ubn,
                       label: lvl_r9TUS_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Ubn: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.577723989 UTC

[section ""data" . Control.Exception.allowInterrupt1_closure" {
     Control.Exception.allowInterrupt1_closure:
         const Control.Exception.allowInterrupt1_info;
 },
 Control.Exception.allowInterrupt1_entry() //  []
         { info_tbl: [(c9UbH,
                       label: Control.Exception.allowInterrupt1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9UbH: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9UbI; else goto c9UbJ;
       c9UbI: // global
           R1 = Control.Exception.allowInterrupt1_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9UbJ: // global
           I64[Sp - 8] = block_c9UbA_info;
           Sp = Sp - 8;
           call stg_getMaskingState#() args: 8, res: 8, upd: 8;
     }
 },
 _c9UbA() //  [R1]
         { info_tbl: [(c9UbA,
                       label: block_c9UbA_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9UbA: // global
           if (R1 == 0) goto c9UbG; else goto u9UbL;
       u9UbL: // global
           if (R1 == 1) goto c9UbG; else goto c9UbE;
       c9UbG: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9UbE: // global
           R1 = lvl_r9TUS_closure+1;
           Sp = Sp + 8;
           call stg_unmaskAsyncExceptions#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.583288529 UTC

[section ""data" . Control.Exception.allowInterrupt_closure" {
     Control.Exception.allowInterrupt_closure:
         const Control.Exception.allowInterrupt_info;
 },
 Control.Exception.allowInterrupt_entry() //  []
         { info_tbl: [(c9Uc1,
                       label: Control.Exception.allowInterrupt_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Uc1: // global
           call Control.Exception.allowInterrupt1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.586554263 UTC

[section ""data" . Control.Exception.Handler_closure" {
     Control.Exception.Handler_closure:
         const Control.Exception.Handler_info;
 },
 Control.Exception.Handler_entry() //  [R2, R3]
         { info_tbl: [(c9Ucd,
                       label: Control.Exception.Handler_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Ucd: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9Uch; else goto c9Ucg;
       c9Uch: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Exception.Handler_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9Ucg: // global
           I64[Hp - 16] = Control.Exception.Handler_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.590380725 UTC

[Control.Exception.Handler_con_entry() //  [R1]
         { info_tbl: [(c9Uco,
                       label: Control.Exception.Handler_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,67,111,110,116,114,111,108,46,69,120,99,101,112,116,105,111,110,46,72,97,110,100,108,101,114]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9Uco: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:59.593491949 UTC

[section ""relreadonly" . S9U96_srt" {
     S9U96_srt:
         const GHC.Exception.$fExceptionSomeException_closure;
         const Control.Exception.catches2_closure;
         const Control.Exception.catches1_closure;
 }]

