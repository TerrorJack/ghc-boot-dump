
==================== Raw Cmm ====================
2018-03-16 16:06:40.453555228 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:06:40.455314345 UTC

[section ""data" . Control.Arrow.$p1ArrowLoop_closure" {
     Control.Arrow.$p1ArrowLoop_closure:
         const Control.Arrow.$p1ArrowLoop_info;
 },
 Control.Arrow.$p1ArrowLoop_entry() //  [R2]
         { []
         }
     {offset
       cbP36: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbP37; else goto cbP38;
       cbP37: // global
           R2 = R2;
           R1 = Control.Arrow.$p1ArrowLoop_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbP38: // global
           I64[Sp - 8] = block_cbP33_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubP3c; else goto cbP34;
       ubP3c: // global
           call _cbP33(R1) args: 0, res: 0, upd: 0;
       cbP34: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$p1ArrowLoop_info" {
     Control.Arrow.$p1ArrowLoop_info:
         const Control.Arrow.$p1ArrowLoop_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbP33() //  [R1]
         { []
         }
     {offset
       cbP33: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbP33_info" {
     block_cbP33_info:
         const _cbP33;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.461587944 UTC

[section ""data" . Control.Arrow.loop_closure" {
     Control.Arrow.loop_closure:
         const Control.Arrow.loop_info;
 },
 Control.Arrow.loop_entry() //  [R2]
         { []
         }
     {offset
       cbP3v: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbP3w; else goto cbP3x;
       cbP3w: // global
           R2 = R2;
           R1 = Control.Arrow.loop_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbP3x: // global
           I64[Sp - 8] = block_cbP3s_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubP3B; else goto cbP3t;
       ubP3B: // global
           call _cbP3s(R1) args: 0, res: 0, upd: 0;
       cbP3t: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.loop_info" {
     Control.Arrow.loop_info:
         const Control.Arrow.loop_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbP3s() //  [R1]
         { []
         }
     {offset
       cbP3s: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbP3s_info" {
     block_cbP3s_info:
         const _cbP3s;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.466639074 UTC

[section ""data" . Control.Arrow.$p1ArrowApply_closure" {
     Control.Arrow.$p1ArrowApply_closure:
         const Control.Arrow.$p1ArrowApply_info;
 },
 Control.Arrow.$p1ArrowApply_entry() //  [R2]
         { []
         }
     {offset
       cbP3S: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbP3T; else goto cbP3U;
       cbP3T: // global
           R2 = R2;
           R1 = Control.Arrow.$p1ArrowApply_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbP3U: // global
           I64[Sp - 8] = block_cbP3P_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubP3Y; else goto cbP3Q;
       ubP3Y: // global
           call _cbP3P(R1) args: 0, res: 0, upd: 0;
       cbP3Q: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$p1ArrowApply_info" {
     Control.Arrow.$p1ArrowApply_info:
         const Control.Arrow.$p1ArrowApply_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbP3P() //  [R1]
         { []
         }
     {offset
       cbP3P: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbP3P_info" {
     block_cbP3P_info:
         const _cbP3P;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.474498362 UTC

[section ""data" . Control.Arrow.app_closure" {
     Control.Arrow.app_closure:
         const Control.Arrow.app_info;
 },
 Control.Arrow.app_entry() //  [R2]
         { []
         }
     {offset
       cbP4h: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbP4i; else goto cbP4j;
       cbP4i: // global
           R2 = R2;
           R1 = Control.Arrow.app_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbP4j: // global
           I64[Sp - 8] = block_cbP4e_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubP4n; else goto cbP4f;
       ubP4n: // global
           call _cbP4e(R1) args: 0, res: 0, upd: 0;
       cbP4f: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.app_info" {
     Control.Arrow.app_info:
         const Control.Arrow.app_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbP4e() //  [R1]
         { []
         }
     {offset
       cbP4e: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbP4e_info" {
     block_cbP4e_info:
         const _cbP4e;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.480526288 UTC

[section ""data" . Control.Arrow.$p1ArrowChoice_closure" {
     Control.Arrow.$p1ArrowChoice_closure:
         const Control.Arrow.$p1ArrowChoice_info;
 },
 Control.Arrow.$p1ArrowChoice_entry() //  [R2]
         { []
         }
     {offset
       cbP4E: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbP4F; else goto cbP4G;
       cbP4F: // global
           R2 = R2;
           R1 = Control.Arrow.$p1ArrowChoice_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbP4G: // global
           I64[Sp - 8] = block_cbP4B_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubP4K; else goto cbP4C;
       ubP4K: // global
           call _cbP4B(R1) args: 0, res: 0, upd: 0;
       cbP4C: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$p1ArrowChoice_info" {
     Control.Arrow.$p1ArrowChoice_info:
         const Control.Arrow.$p1ArrowChoice_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbP4B() //  [R1]
         { []
         }
     {offset
       cbP4B: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbP4B_info" {
     block_cbP4B_info:
         const _cbP4B;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.487072296 UTC

[section ""data" . Control.Arrow.left_closure" {
     Control.Arrow.left_closure:
         const Control.Arrow.left_info;
 },
 Control.Arrow.left_entry() //  [R2]
         { []
         }
     {offset
       cbP53: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbP54; else goto cbP55;
       cbP54: // global
           R2 = R2;
           R1 = Control.Arrow.left_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbP55: // global
           I64[Sp - 8] = block_cbP50_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubP59; else goto cbP51;
       ubP59: // global
           call _cbP50(R1) args: 0, res: 0, upd: 0;
       cbP51: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.left_info" {
     Control.Arrow.left_info:
         const Control.Arrow.left_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbP50() //  [R1]
         { []
         }
     {offset
       cbP50: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbP50_info" {
     block_cbP50_info:
         const _cbP50;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.493695161 UTC

[section ""data" . Control.Arrow.right_closure" {
     Control.Arrow.right_closure:
         const Control.Arrow.right_info;
 },
 Control.Arrow.right_entry() //  [R2]
         { []
         }
     {offset
       cbP5q: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbP5r; else goto cbP5s;
       cbP5r: // global
           R2 = R2;
           R1 = Control.Arrow.right_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbP5s: // global
           I64[Sp - 8] = block_cbP5n_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubP5w; else goto cbP5o;
       ubP5w: // global
           call _cbP5n(R1) args: 0, res: 0, upd: 0;
       cbP5o: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.right_info" {
     Control.Arrow.right_info:
         const Control.Arrow.right_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbP5n() //  [R1]
         { []
         }
     {offset
       cbP5n: // global
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbP5n_info" {
     block_cbP5n_info:
         const _cbP5n;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.499866397 UTC

[section ""data" . Control.Arrow.+++_closure" {
     Control.Arrow.+++_closure:
         const Control.Arrow.+++_info;
 },
 Control.Arrow.+++_entry() //  [R2]
         { []
         }
     {offset
       cbP5N: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbP5O; else goto cbP5P;
       cbP5O: // global
           R2 = R2;
           R1 = Control.Arrow.+++_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbP5P: // global
           I64[Sp - 8] = block_cbP5K_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubP5T; else goto cbP5L;
       ubP5T: // global
           call _cbP5K(R1) args: 0, res: 0, upd: 0;
       cbP5L: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.+++_info" {
     Control.Arrow.+++_info:
         const Control.Arrow.+++_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbP5K() //  [R1]
         { []
         }
     {offset
       cbP5K: // global
           R1 = P64[R1 + 31];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbP5K_info" {
     block_cbP5K_info:
         const _cbP5K;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.506483614 UTC

[section ""data" . Control.Arrow.|||_closure" {
     Control.Arrow.|||_closure:
         const Control.Arrow.|||_info;
 },
 Control.Arrow.|||_entry() //  [R2]
         { []
         }
     {offset
       cbP6a: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbP6b; else goto cbP6c;
       cbP6b: // global
           R2 = R2;
           R1 = Control.Arrow.|||_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbP6c: // global
           I64[Sp - 8] = block_cbP67_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubP6g; else goto cbP68;
       ubP6g: // global
           call _cbP67(R1) args: 0, res: 0, upd: 0;
       cbP68: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.|||_info" {
     Control.Arrow.|||_info:
         const Control.Arrow.|||_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbP67() //  [R1]
         { []
         }
     {offset
       cbP67: // global
           R1 = P64[R1 + 39];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbP67_info" {
     block_cbP67_info:
         const _cbP67;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.51250268 UTC

[section ""data" . Control.Arrow.$p1ArrowPlus_closure" {
     Control.Arrow.$p1ArrowPlus_closure:
         const Control.Arrow.$p1ArrowPlus_info;
 },
 Control.Arrow.$p1ArrowPlus_entry() //  [R2]
         { []
         }
     {offset
       cbP6x: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbP6y; else goto cbP6z;
       cbP6y: // global
           R2 = R2;
           R1 = Control.Arrow.$p1ArrowPlus_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbP6z: // global
           I64[Sp - 8] = block_cbP6u_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubP6D; else goto cbP6v;
       ubP6D: // global
           call _cbP6u(R1) args: 0, res: 0, upd: 0;
       cbP6v: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$p1ArrowPlus_info" {
     Control.Arrow.$p1ArrowPlus_info:
         const Control.Arrow.$p1ArrowPlus_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbP6u() //  [R1]
         { []
         }
     {offset
       cbP6u: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbP6u_info" {
     block_cbP6u_info:
         const _cbP6u;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.518089275 UTC

[section ""data" . Control.Arrow.<+>_closure" {
     Control.Arrow.<+>_closure:
         const Control.Arrow.<+>_info;
 },
 Control.Arrow.<+>_entry() //  [R2]
         { []
         }
     {offset
       cbP6W: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbP6X; else goto cbP6Y;
       cbP6X: // global
           R2 = R2;
           R1 = Control.Arrow.<+>_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbP6Y: // global
           I64[Sp - 8] = block_cbP6T_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubP72; else goto cbP6U;
       ubP72: // global
           call _cbP6T(R1) args: 0, res: 0, upd: 0;
       cbP6U: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.<+>_info" {
     Control.Arrow.<+>_info:
         const Control.Arrow.<+>_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbP6T() //  [R1]
         { []
         }
     {offset
       cbP6T: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbP6T_info" {
     block_cbP6T_info:
         const _cbP6T;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.523352748 UTC

[section ""data" . Control.Arrow.$p1ArrowZero_closure" {
     Control.Arrow.$p1ArrowZero_closure:
         const Control.Arrow.$p1ArrowZero_info;
 },
 Control.Arrow.$p1ArrowZero_entry() //  [R2]
         { []
         }
     {offset
       cbP7j: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbP7k; else goto cbP7l;
       cbP7k: // global
           R2 = R2;
           R1 = Control.Arrow.$p1ArrowZero_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbP7l: // global
           I64[Sp - 8] = block_cbP7g_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubP7p; else goto cbP7h;
       ubP7p: // global
           call _cbP7g(R1) args: 0, res: 0, upd: 0;
       cbP7h: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$p1ArrowZero_info" {
     Control.Arrow.$p1ArrowZero_info:
         const Control.Arrow.$p1ArrowZero_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbP7g() //  [R1]
         { []
         }
     {offset
       cbP7g: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbP7g_info" {
     block_cbP7g_info:
         const _cbP7g;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.528554229 UTC

[section ""data" . Control.Arrow.zeroArrow_closure" {
     Control.Arrow.zeroArrow_closure:
         const Control.Arrow.zeroArrow_info;
 },
 Control.Arrow.zeroArrow_entry() //  [R2]
         { []
         }
     {offset
       cbP7I: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbP7J; else goto cbP7K;
       cbP7J: // global
           R2 = R2;
           R1 = Control.Arrow.zeroArrow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbP7K: // global
           I64[Sp - 8] = block_cbP7F_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubP7O; else goto cbP7G;
       ubP7O: // global
           call _cbP7F(R1) args: 0, res: 0, upd: 0;
       cbP7G: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.zeroArrow_info" {
     Control.Arrow.zeroArrow_info:
         const Control.Arrow.zeroArrow_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbP7F() //  [R1]
         { []
         }
     {offset
       cbP7F: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbP7F_info" {
     block_cbP7F_info:
         const _cbP7F;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.534460136 UTC

[section ""data" . Control.Arrow.$p1Arrow_closure" {
     Control.Arrow.$p1Arrow_closure:
         const Control.Arrow.$p1Arrow_info;
 },
 Control.Arrow.$p1Arrow_entry() //  [R2]
         { []
         }
     {offset
       cbP85: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbP86; else goto cbP87;
       cbP86: // global
           R2 = R2;
           R1 = Control.Arrow.$p1Arrow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbP87: // global
           I64[Sp - 8] = block_cbP82_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubP8b; else goto cbP83;
       ubP8b: // global
           call _cbP82(R1) args: 0, res: 0, upd: 0;
       cbP83: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$p1Arrow_info" {
     Control.Arrow.$p1Arrow_info:
         const Control.Arrow.$p1Arrow_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbP82() //  [R1]
         { []
         }
     {offset
       cbP82: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbP82_info" {
     block_cbP82_info:
         const _cbP82;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.540225524 UTC

[section ""data" . Control.Arrow.arr_closure" {
     Control.Arrow.arr_closure:
         const Control.Arrow.arr_info;
 },
 Control.Arrow.arr_entry() //  [R2]
         { []
         }
     {offset
       cbP8u: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbP8v; else goto cbP8w;
       cbP8v: // global
           R2 = R2;
           R1 = Control.Arrow.arr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbP8w: // global
           I64[Sp - 8] = block_cbP8r_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubP8A; else goto cbP8s;
       ubP8A: // global
           call _cbP8r(R1) args: 0, res: 0, upd: 0;
       cbP8s: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.arr_info" {
     Control.Arrow.arr_info:
         const Control.Arrow.arr_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbP8r() //  [R1]
         { []
         }
     {offset
       cbP8r: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbP8r_info" {
     block_cbP8r_info:
         const _cbP8r;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.545599681 UTC

[section ""data" . Control.Arrow.first_closure" {
     Control.Arrow.first_closure:
         const Control.Arrow.first_info;
 },
 Control.Arrow.first_entry() //  [R2]
         { []
         }
     {offset
       cbP8R: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbP8S; else goto cbP8T;
       cbP8S: // global
           R2 = R2;
           R1 = Control.Arrow.first_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbP8T: // global
           I64[Sp - 8] = block_cbP8O_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubP8X; else goto cbP8P;
       ubP8X: // global
           call _cbP8O(R1) args: 0, res: 0, upd: 0;
       cbP8P: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.first_info" {
     Control.Arrow.first_info:
         const Control.Arrow.first_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbP8O() //  [R1]
         { []
         }
     {offset
       cbP8O: // global
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbP8O_info" {
     block_cbP8O_info:
         const _cbP8O;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.550663438 UTC

[section ""data" . Control.Arrow.second_closure" {
     Control.Arrow.second_closure:
         const Control.Arrow.second_info;
 },
 Control.Arrow.second_entry() //  [R2]
         { []
         }
     {offset
       cbP9e: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbP9f; else goto cbP9g;
       cbP9f: // global
           R2 = R2;
           R1 = Control.Arrow.second_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbP9g: // global
           I64[Sp - 8] = block_cbP9b_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubP9k; else goto cbP9c;
       ubP9k: // global
           call _cbP9b(R1) args: 0, res: 0, upd: 0;
       cbP9c: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.second_info" {
     Control.Arrow.second_info:
         const Control.Arrow.second_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbP9b() //  [R1]
         { []
         }
     {offset
       cbP9b: // global
           R1 = P64[R1 + 31];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbP9b_info" {
     block_cbP9b_info:
         const _cbP9b;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.556608527 UTC

[section ""data" . Control.Arrow.***_closure" {
     Control.Arrow.***_closure:
         const Control.Arrow.***_info;
 },
 Control.Arrow.***_entry() //  [R2]
         { []
         }
     {offset
       cbP9B: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbP9C; else goto cbP9D;
       cbP9C: // global
           R2 = R2;
           R1 = Control.Arrow.***_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbP9D: // global
           I64[Sp - 8] = block_cbP9y_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubP9H; else goto cbP9z;
       ubP9H: // global
           call _cbP9y(R1) args: 0, res: 0, upd: 0;
       cbP9z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.***_info" {
     Control.Arrow.***_info:
         const Control.Arrow.***_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbP9y() //  [R1]
         { []
         }
     {offset
       cbP9y: // global
           R1 = P64[R1 + 39];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbP9y_info" {
     block_cbP9y_info:
         const _cbP9y;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.562371118 UTC

[section ""data" . Control.Arrow.&&&_closure" {
     Control.Arrow.&&&_closure:
         const Control.Arrow.&&&_info;
 },
 Control.Arrow.&&&_entry() //  [R2]
         { []
         }
     {offset
       cbP9Y: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbP9Z; else goto cbPa0;
       cbP9Z: // global
           R2 = R2;
           R1 = Control.Arrow.&&&_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPa0: // global
           I64[Sp - 8] = block_cbP9V_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubPa4; else goto cbP9W;
       ubPa4: // global
           call _cbP9V(R1) args: 0, res: 0, upd: 0;
       cbP9W: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.&&&_info" {
     Control.Arrow.&&&_info:
         const Control.Arrow.&&&_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbP9V() //  [R1]
         { []
         }
     {offset
       cbP9V: // global
           R1 = P64[R1 + 47];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbP9V_info" {
     block_cbP9V_info:
         const _cbP9V;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.569012183 UTC

[section ""data" . Control.Arrow.$c***_closure" {
     Control.Arrow.$c***_closure:
         const Control.Arrow.$c***_info;
 },
 sat_sbNEx_entry() //  [R1]
         { []
         }
     {offset
       cbPan: // global
           _sbNEx::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbPao; else goto cbPap;
       cbPap: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPar; else goto cbPaq;
       cbPar: // global
           HpAlloc = 24;
           goto cbPao;
       cbPao: // global
           R1 = _sbNEx::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPaq: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNEx::P64;
           _sbNEm::P64 = P64[_sbNEx::P64 + 16];
           _sbNEn::P64 = P64[_sbNEx::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sbNEn::P64;
           R2 = Hp - 16;
           R1 = _sbNEm::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNEx_info" {
     sat_sbNEx_info:
         const sat_sbNEx_entry;
         const 2;
         const 18;
 },
 sat_sbNEs_entry() //  [R1]
         { []
         }
     {offset
       cbPax: // global
           _sbNEs::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbPay; else goto cbPaz;
       cbPaz: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPaB; else goto cbPaA;
       cbPaB: // global
           HpAlloc = 24;
           goto cbPay;
       cbPay: // global
           R1 = _sbNEs::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPaA: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNEs::P64;
           _sbNEl::P64 = P64[_sbNEs::P64 + 16];
           _sbNEn::P64 = P64[_sbNEs::P64 + 24];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _sbNEn::P64;
           R2 = Hp - 16;
           R1 = _sbNEl::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNEs_info" {
     sat_sbNEs_info:
         const sat_sbNEs_entry;
         const 2;
         const 18;
 },
 Control.Arrow.$c***_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPaD: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cbPaH; else goto cbPaG;
       cbPaH: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$c***_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPaG: // global
           I64[Hp - 80] = sat_sbNEx_info;
           P64[Hp - 64] = R3;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = sat_sbNEs_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 80;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$c***_info" {
     Control.Arrow.$c***_info:
         const Control.Arrow.$c***_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.577695657 UTC

[section ""data" . Control.Arrow.$fArrow(->)_$carr_closure" {
     Control.Arrow.$fArrow(->)_$carr_closure:
         const Control.Arrow.$fArrow(->)_$carr_info;
 },
 Control.Arrow.$fArrow(->)_$carr_entry() //  [R2]
         { []
         }
     {offset
       cbPb1: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrow(->)_$carr_info" {
     Control.Arrow.$fArrow(->)_$carr_info:
         const Control.Arrow.$fArrow(->)_$carr_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.581315921 UTC

[section ""data" . Control.Arrow.$fCategoryTYPEKleisli1_closure" {
     Control.Arrow.$fCategoryTYPEKleisli1_closure:
         const Control.Arrow.$fCategoryTYPEKleisli1_info;
 },
 Control.Arrow.$fCategoryTYPEKleisli1_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       cbPbd: // global
           _sbNEC::P64 = R5;
           _sbNEB::P64 = R4;
           _sbNEA::P64 = R3;
           _sbNEz::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbPbe; else goto cbPbf;
       cbPbf: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbPbh; else goto cbPbg;
       cbPbh: // global
           HpAlloc = 32;
           goto cbPbe;
       cbPbe: // global
           R5 = _sbNEC::P64;
           R4 = _sbNEB::P64;
           R3 = _sbNEA::P64;
           R2 = _sbNEz::P64;
           R1 = Control.Arrow.$fCategoryTYPEKleisli1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPbg: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sbNEB::P64;
           P64[Hp] = _sbNEC::P64;
           R2 = _sbNEz::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sbNEA::P64;
           Sp = Sp - 24;
           call GHC.Base.>>=_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fCategoryTYPEKleisli1_info" {
     Control.Arrow.$fCategoryTYPEKleisli1_info:
         const Control.Arrow.$fCategoryTYPEKleisli1_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.586042622 UTC

[section ""data" . Control.Arrow.$fCategoryTYPEKleisli_closure" {
     Control.Arrow.$fCategoryTYPEKleisli_closure:
         const Control.Arrow.$fCategoryTYPEKleisli_info;
 },
 sat_sbNEG_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cbPbx: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Control.Arrow.$fCategoryTYPEKleisli1_entry(R5,
                                                           R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNEG_info" {
     sat_sbNEG_info:
         const sat_sbNEG_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sbNEF_entry() //  [R1]
         { []
         }
     {offset
       cbPbE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPbF; else goto cbPbG;
       cbPbF: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPbG: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNEF_info" {
     sat_sbNEF_info:
         const sat_sbNEF_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fCategoryTYPEKleisli_entry() //  [R2]
         { []
         }
     {offset
       cbPbI: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbPbM; else goto cbPbL;
       cbPbM: // global
           HpAlloc = 64;
           R2 = R2;
           R1 = Control.Arrow.$fCategoryTYPEKleisli_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPbL: // global
           I64[Hp - 56] = sat_sbNEG_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = sat_sbNEF_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = Control.Category.C:Category_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 53;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fCategoryTYPEKleisli_info" {
     Control.Arrow.$fCategoryTYPEKleisli_info:
         const Control.Arrow.$fCategoryTYPEKleisli_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.593962926 UTC

[section ""data" . Control.Arrow.$fArrowKleisli4_closure" {
     Control.Arrow.$fArrowKleisli4_closure:
         const Control.Arrow.$fArrowKleisli4_info;
 },
 sat_sbNEV_entry() //  [R1, R2]
         { []
         }
     {offset
       cbPcc: // global
           _sbNET::P64 = R2;
           _sbNEV::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbPcd; else goto cbPce;
       cbPce: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPcg; else goto cbPcf;
       cbPcg: // global
           HpAlloc = 24;
           goto cbPcd;
       cbPcd: // global
           R2 = _sbNET::P64;
           R1 = _sbNEV::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPcf: // global
           _sbNEH::P64 = P64[_sbNEV::P64 + 7];
           _sbNEK::P64 = P64[_sbNEV::P64 + 15];
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = _sbNEK::P64;
           P64[Hp] = _sbNET::P64;
           R2 = _sbNEH::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 15;
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNEV_info" {
     sat_sbNEV_info:
         const sat_sbNEV_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_sbNES_entry() //  [R1]
         { []
         }
     {offset
       cbPcm: // global
           _sbNES::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbPcn; else goto cbPco;
       cbPco: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPcq; else goto cbPcp;
       cbPcq: // global
           HpAlloc = 24;
           goto cbPcn;
       cbPcn: // global
           R1 = _sbNES::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPcp: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNES::P64;
           _sbNEI::P64 = P64[_sbNES::P64 + 16];
           _sbNEJ::P64 = P64[_sbNES::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sbNEJ::P64;
           R2 = Hp - 16;
           R1 = _sbNEI::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNES_info" {
     sat_sbNES_info:
         const sat_sbNES_entry;
         const 2;
         const 18;
 },
 Control.Arrow.$fArrowKleisli4_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPcr: // global
           _sbNEJ::P64 = R4;
           _sbNEI::P64 = R3;
           _sbNEH::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbPcs; else goto cbPct;
       cbPct: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cbPcv; else goto cbPcu;
       cbPcv: // global
           HpAlloc = 80;
           goto cbPcs;
       cbPcs: // global
           R4 = _sbNEJ::P64;
           R3 = _sbNEI::P64;
           R2 = _sbNEH::P64;
           R1 = Control.Arrow.$fArrowKleisli4_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPcu: // global
           I64[Hp - 72] = stg_sel_0_upd_info;
           P64[Hp - 56] = _sbNEJ::P64;
           I64[Hp - 48] = sat_sbNEV_info;
           P64[Hp - 40] = _sbNEH::P64;
           P64[Hp - 32] = Hp - 72;
           I64[Hp - 24] = sat_sbNES_info;
           P64[Hp - 8] = _sbNEI::P64;
           P64[Hp] = _sbNEJ::P64;
           R2 = _sbNEH::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 47;
           Sp = Sp - 24;
           call GHC.Base.>>=_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowKleisli4_info" {
     Control.Arrow.$fArrowKleisli4_info:
         const Control.Arrow.$fArrowKleisli4_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.6030164 UTC

[section ""data" . Control.Arrow.$fArrowKleisli3_closure" {
     Control.Arrow.$fArrowKleisli3_closure:
         const Control.Arrow.$fArrowKleisli3_info;
 },
 sat_sbNFa_entry() //  [R1, R2]
         { []
         }
     {offset
       cbPcY: // global
           _sbNF8::P64 = R2;
           _sbNFa::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbPcZ; else goto cbPd0;
       cbPd0: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPd2; else goto cbPd1;
       cbPd2: // global
           HpAlloc = 24;
           goto cbPcZ;
       cbPcZ: // global
           R2 = _sbNF8::P64;
           R1 = _sbNFa::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPd1: // global
           _sbNEW::P64 = P64[_sbNFa::P64 + 7];
           _sbNEZ::P64 = P64[_sbNFa::P64 + 15];
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = _sbNF8::P64;
           P64[Hp] = _sbNEZ::P64;
           R2 = _sbNEW::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 15;
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNFa_info" {
     sat_sbNFa_info:
         const sat_sbNFa_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_sbNF7_entry() //  [R1]
         { []
         }
     {offset
       cbPd8: // global
           _sbNF7::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbPd9; else goto cbPda;
       cbPda: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPdc; else goto cbPdb;
       cbPdc: // global
           HpAlloc = 24;
           goto cbPd9;
       cbPd9: // global
           R1 = _sbNF7::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPdb: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNF7::P64;
           _sbNEX::P64 = P64[_sbNF7::P64 + 16];
           _sbNEY::P64 = P64[_sbNF7::P64 + 24];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _sbNEY::P64;
           R2 = Hp - 16;
           R1 = _sbNEX::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNF7_info" {
     sat_sbNF7_info:
         const sat_sbNF7_entry;
         const 2;
         const 18;
 },
 Control.Arrow.$fArrowKleisli3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPdd: // global
           _sbNEY::P64 = R4;
           _sbNEX::P64 = R3;
           _sbNEW::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbPde; else goto cbPdf;
       cbPdf: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cbPdh; else goto cbPdg;
       cbPdh: // global
           HpAlloc = 80;
           goto cbPde;
       cbPde: // global
           R4 = _sbNEY::P64;
           R3 = _sbNEX::P64;
           R2 = _sbNEW::P64;
           R1 = Control.Arrow.$fArrowKleisli3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPdg: // global
           I64[Hp - 72] = stg_sel_1_upd_info;
           P64[Hp - 56] = _sbNEY::P64;
           I64[Hp - 48] = sat_sbNFa_info;
           P64[Hp - 40] = _sbNEW::P64;
           P64[Hp - 32] = Hp - 72;
           I64[Hp - 24] = sat_sbNF7_info;
           P64[Hp - 8] = _sbNEX::P64;
           P64[Hp] = _sbNEY::P64;
           R2 = _sbNEW::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 47;
           Sp = Sp - 24;
           call GHC.Base.>>=_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowKleisli3_info" {
     Control.Arrow.$fArrowKleisli3_info:
         const Control.Arrow.$fArrowKleisli3_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.612765034 UTC

[section ""data" . Control.Arrow.$fArrowKleisli5_closure" {
     Control.Arrow.$fArrowKleisli5_closure:
         const Control.Arrow.$fArrowKleisli5_info;
 },
 Control.Arrow.$fArrowKleisli5_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPdE: // global
           _sbNFd::P64 = R4;
           _sbNFc::P64 = R3;
           _sbNFb::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cbPdF; else goto cbPdG;
       cbPdG: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbPdI; else goto cbPdH;
       cbPdI: // global
           HpAlloc = 32;
           goto cbPdF;
       cbPdF: // global
           R4 = _sbNFd::P64;
           R3 = _sbNFc::P64;
           R2 = _sbNFb::P64;
           R1 = Control.Arrow.$fArrowKleisli5_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPdH: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sbNFc::P64;
           P64[Hp] = _sbNFd::P64;
           R2 = _sbNFb::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowKleisli5_info" {
     Control.Arrow.$fArrowKleisli5_info:
         const Control.Arrow.$fArrowKleisli5_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.61698725 UTC

[section ""data" . Control.Arrow.$fArrowPlusKleisli1_closure" {
     Control.Arrow.$fArrowPlusKleisli1_closure:
         const Control.Arrow.$fArrowPlusKleisli1_info;
 },
 Control.Arrow.$fArrowPlusKleisli1_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       cbPdV: // global
           _sbNFi::P64 = R5;
           _sbNFh::P64 = R4;
           _sbNFg::P64 = R3;
           _sbNFf::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbPdW; else goto cbPdX;
       cbPdX: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbPdZ; else goto cbPdY;
       cbPdZ: // global
           HpAlloc = 64;
           goto cbPdW;
       cbPdW: // global
           R5 = _sbNFi::P64;
           R4 = _sbNFh::P64;
           R3 = _sbNFg::P64;
           R2 = _sbNFf::P64;
           R1 = Control.Arrow.$fArrowPlusKleisli1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPdY: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = _sbNFh::P64;
           P64[Hp - 32] = _sbNFi::P64;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sbNFg::P64;
           P64[Hp] = _sbNFi::P64;
           R2 = _sbNFf::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 56;
           Sp = Sp - 24;
           call GHC.Base.mplus_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowPlusKleisli1_info" {
     Control.Arrow.$fArrowPlusKleisli1_info:
         const Control.Arrow.$fArrowPlusKleisli1_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.621525521 UTC

[section ""data" . Control.Arrow.$fAlternativeArrowMonad_$capp_closure" {
     Control.Arrow.$fAlternativeArrowMonad_$capp_closure:
         const Control.Arrow.$fAlternativeArrowMonad_$capp_info;
 },
 Control.Arrow.$fAlternativeArrowMonad_$capp_entry() //  [R2]
         { []
         }
     {offset
       cbPee: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbPef; else goto cbPeg;
       cbPef: // global
           R2 = R2;
           R1 = Control.Arrow.$fAlternativeArrowMonad_$capp_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPeg: // global
           I64[Sp - 8] = block_cbPeb_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubPek; else goto cbPec;
       ubPek: // global
           call _cbPeb(R1) args: 0, res: 0, upd: 0;
       cbPec: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fAlternativeArrowMonad_$capp_info" {
     Control.Arrow.$fAlternativeArrowMonad_$capp_info:
         const Control.Arrow.$fAlternativeArrowMonad_$capp_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbPeb() //  [R1]
         { []
         }
     {offset
       cbPeb: // global
           R2 = P64[R1 + 15];
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPeb_info" {
     block_cbPeb_info:
         const _cbPeb;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.6272383 UTC

[section ""data" . Control.Arrow.$fApplicativeArrowMonad5_closure" {
     Control.Arrow.$fApplicativeArrowMonad5_closure:
         const Control.Arrow.$fApplicativeArrowMonad5_info;
 },
 sat_sbNFt_entry() //  [R1]
         { []
         }
     {offset
       cbPeC: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPeD; else goto cbPeE;
       cbPeD: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPeE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNFt_info" {
     sat_sbNFt_info:
         const sat_sbNFt_entry;
         const 2;
         const 18;
 },
 Control.Arrow.$fApplicativeArrowMonad5_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPeH: // global
           _sbNFr::P64 = R4;
           _sbNFq::P64 = R3;
           _sbNFp::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbPeI; else goto cbPeJ;
       cbPeJ: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbPeL; else goto cbPeK;
       cbPeL: // global
           HpAlloc = 32;
           goto cbPeI;
       cbPeI: // global
           R4 = _sbNFr::P64;
           R3 = _sbNFq::P64;
           R2 = _sbNFp::P64;
           R1 = Control.Arrow.$fApplicativeArrowMonad5_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPeK: // global
           I64[Hp - 24] = sat_sbNFt_info;
           P64[Hp - 8] = _sbNFp::P64;
           P64[Hp] = _sbNFq::P64;
           I64[Sp - 24] = block_cbPeF_info;
           R2 = _sbNFp::P64;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sbNFr::P64;
           Sp = Sp - 24;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fApplicativeArrowMonad5_info" {
     Control.Arrow.$fApplicativeArrowMonad5_info:
         const Control.Arrow.$fApplicativeArrowMonad5_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbPeF() //  [R1]
         { []
         }
     {offset
       cbPeF: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPeF_info" {
     block_cbPeF_info:
         const _cbPeF;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.635474396 UTC

[section ""data" . Control.Arrow.$fFunctorArrowMonad1_closure" {
     Control.Arrow.$fFunctorArrowMonad1_closure:
         const Control.Arrow.$fFunctorArrowMonad1_info;
 },
 sat_sbNFz_entry() //  [R1]
         { []
         }
     {offset
       cbPfg: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNFz_info" {
     sat_sbNFz_info:
         const sat_sbNFz_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbNFA_entry() //  [R1]
         { []
         }
     {offset
       cbPfj: // global
           _sbNFA::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cbPfk; else goto cbPfl;
       cbPfl: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbPfn; else goto cbPfm;
       cbPfn: // global
           HpAlloc = 16;
           goto cbPfk;
       cbPfk: // global
           R1 = _sbNFA::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPfm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNFA::P64;
           _sbNFu::P64 = P64[_sbNFA::P64 + 16];
           _sbNFv::P64 = P64[_sbNFA::P64 + 24];
           I64[Hp - 8] = sat_sbNFz_info;
           P64[Hp] = _sbNFv::P64;
           R2 = _sbNFu::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 7;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNFA_info" {
     sat_sbNFA_info:
         const sat_sbNFA_entry;
         const 2;
         const 18;
 },
 Control.Arrow.$fFunctorArrowMonad1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPfq: // global
           _sbNFw::P64 = R4;
           _sbNFv::P64 = R3;
           _sbNFu::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbPfr; else goto cbPfs;
       cbPfs: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbPfu; else goto cbPft;
       cbPfu: // global
           HpAlloc = 32;
           goto cbPfr;
       cbPfr: // global
           R4 = _sbNFw::P64;
           R3 = _sbNFv::P64;
           R2 = _sbNFu::P64;
           R1 = Control.Arrow.$fFunctorArrowMonad1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPft: // global
           I64[Hp - 24] = sat_sbNFA_info;
           P64[Hp - 8] = _sbNFu::P64;
           P64[Hp] = _sbNFv::P64;
           I64[Sp - 24] = block_cbPfo_info;
           R2 = _sbNFu::P64;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sbNFw::P64;
           Sp = Sp - 24;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fFunctorArrowMonad1_info" {
     Control.Arrow.$fFunctorArrowMonad1_info:
         const Control.Arrow.$fFunctorArrowMonad1_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbPfo() //  [R1]
         { []
         }
     {offset
       cbPfo: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPfo_info" {
     block_cbPfo_info:
         const _cbPfo;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.644431582 UTC

[section ""data" . Control.Arrow.$fFunctorArrowMonad_closure" {
     Control.Arrow.$fFunctorArrowMonad_closure:
         const Control.Arrow.$fFunctorArrowMonad_info;
 },
 sat_sbNFD_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbPfY: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fFunctorArrowMonad1_entry(R4,
                                                         R3,
                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNFD_info" {
     sat_sbNFD_info:
         const sat_sbNFD_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbNFC_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbPg6: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fApplicativeArrowMonad5_entry(R4,
                                                             R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNFC_info" {
     sat_sbNFC_info:
         const sat_sbNFC_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 Control.Arrow.$fFunctorArrowMonad_entry() //  [R2]
         { []
         }
     {offset
       cbPga: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cbPge; else goto cbPgd;
       cbPge: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = Control.Arrow.$fFunctorArrowMonad_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPgd: // global
           I64[Hp - 48] = sat_sbNFD_info;
           P64[Hp - 40] = R2;
           I64[Hp - 32] = sat_sbNFC_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = GHC.Base.C:Functor_con_info;
           P64[Hp - 8] = Hp - 30;
           P64[Hp] = Hp - 46;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fFunctorArrowMonad_info" {
     Control.Arrow.$fFunctorArrowMonad_info:
         const Control.Arrow.$fFunctorArrowMonad_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.652977205 UTC

[section ""data" . Control.Arrow.$fAlternativeArrowMonad2_closure" {
     Control.Arrow.$fAlternativeArrowMonad2_closure:
         const Control.Arrow.$fAlternativeArrowMonad2_info;
 },
 sat_sbNFJ_entry() //  [R1]
         { []
         }
     {offset
       cbPgA: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cbPgB; else goto cbPgC;
       cbPgB: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPgC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Control.Arrow.&&&_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNFJ_info" {
     sat_sbNFJ_info:
         const sat_sbNFJ_entry;
         const 3;
         const 15;
 },
 sat_sbNFI_entry() //  [R1]
         { []
         }
     {offset
       cbPgH: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPgI; else goto cbPgJ;
       cbPgI: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPgJ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Control.Arrow.$fAlternativeArrowMonad_$capp_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNFI_info" {
     sat_sbNFI_info:
         const sat_sbNFI_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fAlternativeArrowMonad2_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPgM: // global
           _sbNFG::P64 = R4;
           _sbNFF::P64 = R3;
           _sbNFE::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbPgN; else goto cbPgO;
       cbPgO: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbPgQ; else goto cbPgP;
       cbPgQ: // global
           HpAlloc = 64;
           goto cbPgN;
       cbPgN: // global
           R4 = _sbNFG::P64;
           R3 = _sbNFF::P64;
           R2 = _sbNFE::P64;
           R1 = Control.Arrow.$fAlternativeArrowMonad2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPgP: // global
           I64[Hp - 56] = sat_sbNFJ_info;
           P64[Hp - 40] = _sbNFE::P64;
           P64[Hp - 32] = _sbNFF::P64;
           P64[Hp - 24] = _sbNFG::P64;
           I64[Hp - 16] = sat_sbNFI_info;
           P64[Hp] = _sbNFE::P64;
           I64[Sp - 24] = block_cbPgK_info;
           R2 = _sbNFE::P64;
           P64[Sp - 16] = Hp - 56;
           P64[Sp - 8] = Hp - 16;
           Sp = Sp - 24;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fAlternativeArrowMonad2_info" {
     Control.Arrow.$fAlternativeArrowMonad2_info:
         const Control.Arrow.$fAlternativeArrowMonad2_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbPgK() //  [R1]
         { []
         }
     {offset
       cbPgK: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           _cbPgw::P64 = P64[Sp + 8];
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = _cbPgw::P64;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPgK_info" {
     block_cbPgK_info:
         const _cbPgK;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.662005784 UTC

[section ""data" . Control.Arrow.$fApplicativeArrowMonad6_closure" {
     Control.Arrow.$fApplicativeArrowMonad6_closure:
         const Control.Arrow.$fApplicativeArrowMonad6_info;
 },
 sat_sbNFN_entry() //  [R1]
         { []
         }
     {offset
       cbPho: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNFN_info" {
     sat_sbNFN_info:
         const sat_sbNFN_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Control.Arrow.$fApplicativeArrowMonad6_entry() //  [R2, R3]
         { []
         }
     {offset
       cbPhr: // global
           _sbNFL::P64 = R3;
           _sbNFK::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cbPhs; else goto cbPht;
       cbPht: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbPhv; else goto cbPhu;
       cbPhv: // global
           HpAlloc = 16;
           goto cbPhs;
       cbPhs: // global
           R3 = _sbNFL::P64;
           R2 = _sbNFK::P64;
           R1 = Control.Arrow.$fApplicativeArrowMonad6_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPhu: // global
           I64[Hp - 8] = sat_sbNFN_info;
           P64[Hp] = _sbNFL::P64;
           R2 = _sbNFK::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 7;
           Sp = Sp - 16;
           call Control.Arrow.arr_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fApplicativeArrowMonad6_info" {
     Control.Arrow.$fApplicativeArrowMonad6_info:
         const Control.Arrow.$fApplicativeArrowMonad6_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.667620154 UTC

[section ""data" . Control.Arrow.$fApplicativeArrowMonad4_closure" {
     Control.Arrow.$fApplicativeArrowMonad4_closure:
         const Control.Arrow.$fApplicativeArrowMonad4_info;
 },
 sat_sbNFR_entry() //  [R1]
         { []
         }
     {offset
       cbPhN: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPhO; else goto cbPhP;
       cbPhO: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPhP: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fApplicativeArrowMonad5_entry(R4,
                                                             R3,
                                                             R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNFR_info" {
     sat_sbNFR_info:
         const sat_sbNFR_entry;
         const 3;
         const 15;
 },
 Control.Arrow.$fApplicativeArrowMonad4_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPhQ: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto cbPhU; else goto cbPhT;
       cbPhU: // global
           HpAlloc = 40;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fApplicativeArrowMonad4_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPhT: // global
           I64[Hp - 32] = sat_sbNFR_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R3 = Hp - 32;
           R2 = R2;
           R1 = Control.Arrow.$fAlternativeArrowMonad2_closure+3;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fApplicativeArrowMonad4_info" {
     Control.Arrow.$fApplicativeArrowMonad4_info:
         const Control.Arrow.$fApplicativeArrowMonad4_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.673315446 UTC

[section ""data" . Control.Arrow.$fApplicativeArrowMonad3_closure" {
     Control.Arrow.$fApplicativeArrowMonad3_closure:
         const Control.Arrow.$fApplicativeArrowMonad3_info;
 },
 Control.Arrow.$fApplicativeArrowMonad3_entry() //  [R3]
         { []
         }
     {offset
       cbPi7: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fApplicativeArrowMonad3_info" {
     Control.Arrow.$fApplicativeArrowMonad3_info:
         const Control.Arrow.$fApplicativeArrowMonad3_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.678036663 UTC

[section ""data" . Control.Arrow.$fApplicativeArrowMonad2_closure" {
     Control.Arrow.$fApplicativeArrowMonad2_closure:
         const Control.Arrow.$fApplicativeArrowMonad2_info;
 },
 sat_sbNFY_entry() //  [R1]
         { []
         }
     {offset
       cbPiq: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPir; else goto cbPis;
       cbPir: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPis: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Control.Arrow.$fApplicativeArrowMonad3_closure+2;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNFY_info" {
     sat_sbNFY_info:
         const sat_sbNFY_entry;
         const 1;
         const 16;
 },
 sat_sbNFZ_entry() //  [R1]
         { []
         }
     {offset
       cbPiv: // global
           _sbNFZ::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbPiw; else goto cbPix;
       cbPix: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPiz; else goto cbPiy;
       cbPiz: // global
           HpAlloc = 24;
           goto cbPiw;
       cbPiw: // global
           R1 = _sbNFZ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPiy: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNFZ::P64;
           _sbNFU::P64 = P64[_sbNFZ::P64 + 16];
           _sbNFV::P64 = P64[_sbNFZ::P64 + 24];
           I64[Hp - 16] = sat_sbNFY_info;
           P64[Hp] = _sbNFU::P64;
           I64[Sp - 40] = block_cbPit_info;
           R2 = _sbNFU::P64;
           P64[Sp - 32] = Hp - 16;
           P64[Sp - 24] = _sbNFV::P64;
           Sp = Sp - 40;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNFZ_info" {
     sat_sbNFZ_info:
         const sat_sbNFZ_entry;
         const 2;
         const 18;
 },
 _cbPit() //  [R1]
         { []
         }
     {offset
       cbPit: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbPit_info" {
     block_cbPit_info:
         const _cbPit;
         const 2;
         const 30;
 },
 Control.Arrow.$fApplicativeArrowMonad2_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPiD: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbPiH; else goto cbPiG;
       cbPiH: // global
           HpAlloc = 32;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fApplicativeArrowMonad2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPiG: // global
           I64[Hp - 24] = sat_sbNFZ_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R4 = R4;
           R3 = Hp - 24;
           R2 = R2;
           call Control.Arrow.$fAlternativeArrowMonad2_entry(R4,
                                                             R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fApplicativeArrowMonad2_info" {
     Control.Arrow.$fApplicativeArrowMonad2_info:
         const Control.Arrow.$fApplicativeArrowMonad2_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.688597761 UTC

[section ""data" . Control.Arrow.$fApplicativeArrowMonad1_closure" {
     Control.Arrow.$fApplicativeArrowMonad1_closure:
         const Control.Arrow.$fApplicativeArrowMonad1_info;
 },
 sat_sbNG3_entry() //  [R1]
         { []
         }
     {offset
       cbPja: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPjb; else goto cbPjc;
       cbPjb: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPjc: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = GHC.Base.const_closure+2;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNG3_info" {
     sat_sbNG3_info:
         const sat_sbNG3_entry;
         const 1;
         const 16;
 },
 sat_sbNG4_entry() //  [R1]
         { []
         }
     {offset
       cbPjf: // global
           _sbNG4::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbPjg; else goto cbPjh;
       cbPjh: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPjj; else goto cbPji;
       cbPjj: // global
           HpAlloc = 24;
           goto cbPjg;
       cbPjg: // global
           R1 = _sbNG4::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPji: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNG4::P64;
           _sbNG0::P64 = P64[_sbNG4::P64 + 16];
           _sbNG1::P64 = P64[_sbNG4::P64 + 24];
           I64[Hp - 16] = sat_sbNG3_info;
           P64[Hp] = _sbNG0::P64;
           I64[Sp - 40] = block_cbPjd_info;
           R2 = _sbNG0::P64;
           P64[Sp - 32] = Hp - 16;
           P64[Sp - 24] = _sbNG1::P64;
           Sp = Sp - 40;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNG4_info" {
     sat_sbNG4_info:
         const sat_sbNG4_entry;
         const 2;
         const 18;
 },
 _cbPjd() //  [R1]
         { []
         }
     {offset
       cbPjd: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbPjd_info" {
     block_cbPjd_info:
         const _cbPjd;
         const 2;
         const 30;
 },
 Control.Arrow.$fApplicativeArrowMonad1_entry() //  [R2, R3]
         { []
         }
     {offset
       cbPjn: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbPjr; else goto cbPjq;
       cbPjr: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fApplicativeArrowMonad1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPjq: // global
           I64[Hp - 24] = sat_sbNG4_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R3 = Hp - 24;
           R2 = R2;
           R1 = Control.Arrow.$fAlternativeArrowMonad2_closure+3;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fApplicativeArrowMonad1_info" {
     Control.Arrow.$fApplicativeArrowMonad1_info:
         const Control.Arrow.$fApplicativeArrowMonad1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.698817586 UTC

[section ""data" . Control.Arrow.$fApplicativeArrowMonad_closure" {
     Control.Arrow.$fApplicativeArrowMonad_closure:
         const Control.Arrow.$fApplicativeArrowMonad_info;
 },
 sat_sbNGb_entry() //  [R1, R2]
         { []
         }
     {offset
       cbPjR: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Control.Arrow.$fApplicativeArrowMonad1_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNGb_info" {
     sat_sbNGb_info:
         const sat_sbNGb_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbNGa_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbPjZ: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fApplicativeArrowMonad2_entry(R4,
                                                             R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNGa_info" {
     sat_sbNGa_info:
         const sat_sbNGa_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbNG9_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbPk7: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fApplicativeArrowMonad4_entry(R4,
                                                             R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNG9_info" {
     sat_sbNG9_info:
         const sat_sbNG9_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbNG8_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbPkf: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fAlternativeArrowMonad2_entry(R4,
                                                             R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNG8_info" {
     sat_sbNG8_info:
         const sat_sbNG8_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbNG7_entry() //  [R1, R2]
         { []
         }
     {offset
       cbPkn: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Control.Arrow.$fApplicativeArrowMonad6_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNG7_info" {
     sat_sbNG7_info:
         const sat_sbNG7_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbNG6_entry() //  [R1]
         { []
         }
     {offset
       cbPku: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPkv; else goto cbPkw;
       cbPkv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPkw: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fFunctorArrowMonad_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNG6_info" {
     sat_sbNG6_info:
         const sat_sbNG6_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fApplicativeArrowMonad_entry() //  [R2]
         { []
         }
     {offset
       cbPky: // global
           Hp = Hp + 160;
           if (Hp > HpLim) (likely: False) goto cbPkC; else goto cbPkB;
       cbPkC: // global
           HpAlloc = 160;
           R2 = R2;
           R1 = Control.Arrow.$fApplicativeArrowMonad_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPkB: // global
           I64[Hp - 152] = sat_sbNGb_info;
           P64[Hp - 144] = R2;
           I64[Hp - 136] = sat_sbNGa_info;
           P64[Hp - 128] = R2;
           I64[Hp - 120] = sat_sbNG9_info;
           P64[Hp - 112] = R2;
           I64[Hp - 104] = sat_sbNG8_info;
           P64[Hp - 96] = R2;
           I64[Hp - 88] = sat_sbNG7_info;
           P64[Hp - 80] = R2;
           I64[Hp - 72] = sat_sbNG6_info;
           P64[Hp - 56] = R2;
           I64[Hp - 48] = GHC.Base.C:Applicative_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 87;
           P64[Hp - 24] = Hp - 102;
           P64[Hp - 16] = Hp - 118;
           P64[Hp - 8] = Hp - 134;
           P64[Hp] = Hp - 151;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fApplicativeArrowMonad_info" {
     Control.Arrow.$fApplicativeArrowMonad_info:
         const Control.Arrow.$fApplicativeArrowMonad_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.714560835 UTC

[section ""data" . Control.Arrow.$fMonadArrowMonad_$c>>=_closure" {
     Control.Arrow.$fMonadArrowMonad_$c>>=_closure:
         const Control.Arrow.$fMonadArrowMonad_$c>>=_info;
 },
 sat_sbNGk_entry() //  [R1, R2]
         { []
         }
     {offset
       cbPly: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cbPlC; else goto cbPlB;
       cbPlC: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPlB: // global
           _sbNGe::P64 = P64[R1 + 7];
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = _sbNGe::P64;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = GHC.Tuple.()_closure+1;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNGk_info" {
     sat_sbNGk_info:
         const sat_sbNGk_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbNGl_entry() //  [R1]
         { []
         }
     {offset
       cbPlD: // global
           _sbNGl::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cbPlE; else goto cbPlF;
       cbPlF: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbPlH; else goto cbPlG;
       cbPlH: // global
           HpAlloc = 16;
           goto cbPlE;
       cbPlE: // global
           R1 = _sbNGl::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPlG: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNGl::P64;
           _sbNGe::P64 = P64[_sbNGl::P64 + 16];
           _sbNGf::P64 = P64[_sbNGl::P64 + 24];
           I64[Hp - 8] = sat_sbNGk_info;
           P64[Hp] = _sbNGe::P64;
           R2 = _sbNGf::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 7;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNGl_info" {
     sat_sbNGl_info:
         const sat_sbNGl_entry;
         const 2;
         const 18;
 },
 sat_sbNGm_entry() //  [R1]
         { []
         }
     {offset
       cbPlI: // global
           _sbNGm::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbPlJ; else goto cbPlK;
       cbPlK: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbPlM; else goto cbPlL;
       cbPlM: // global
           HpAlloc = 32;
           goto cbPlJ;
       cbPlJ: // global
           R1 = _sbNGm::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPlL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNGm::P64;
           _sbNGd::P64 = P64[_sbNGm::P64 + 16];
           _sbNGe::P64 = P64[_sbNGm::P64 + 24];
           _sbNGf::P64 = P64[_sbNGm::P64 + 32];
           _sbNGg::P64 = P64[_sbNGm::P64 + 40];
           I64[Hp - 24] = sat_sbNGl_info;
           P64[Hp - 8] = _sbNGe::P64;
           P64[Hp] = _sbNGf::P64;
           R2 = _sbNGg::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Hp - 24;
           P64[Sp - 24] = _sbNGd::P64;
           Sp = Sp - 40;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNGm_info" {
     sat_sbNGm_info:
         const sat_sbNGm_entry;
         const 4;
         const 15;
 },
 sat_sbNGh_entry() //  [R1]
         { []
         }
     {offset
       cbPlR: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPlS; else goto cbPlT;
       cbPlS: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPlT: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.app_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNGh_info" {
     sat_sbNGh_info:
         const sat_sbNGh_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fMonadArrowMonad_$c>>=_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPlU: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cbPlV; else goto cbPlW;
       cbPlV: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fMonadArrowMonad_$c>>=_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPlW: // global
           I64[Sp - 32] = block_cbPlb_info;
           _sbNGc::P64 = R2;
           R2 = R2;
           P64[Sp - 24] = _sbNGc::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call Control.Arrow.$p1ArrowApply_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fMonadArrowMonad_$c>>=_info" {
     Control.Arrow.$fMonadArrowMonad_$c>>=_info:
         const Control.Arrow.$fMonadArrowMonad_$c>>=_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbPlb() //  [R1]
         { []
         }
     {offset
       cbPlb: // global
           I64[Sp - 8] = block_cbPlf_info;
           R2 = R1;
           P64[Sp] = R1;
           Sp = Sp - 8;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPlb_info" {
     block_cbPlb_info:
         const _cbPlb;
         const 3;
         const 30;
 },
 _cbPlf() //  [R1]
         { []
         }
     {offset
       cbPlf: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cbPm0; else goto cbPlZ;
       cbPm0: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbPlZ: // global
           I64[Hp - 64] = sat_sbNGm_info;
           P64[Hp - 48] = P64[Sp + 24];
           P64[Hp - 40] = P64[Sp + 32];
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = R1;
           I64[Hp - 16] = sat_sbNGh_info;
           P64[Hp] = P64[Sp + 16];
           R2 = R1;
           I64[Sp + 16] = stg_ap_pp_info;
           P64[Sp + 24] = Hp - 16;
           P64[Sp + 32] = Hp - 64;
           Sp = Sp + 16;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPlf_info" {
     block_cbPlf_info:
         const _cbPlf;
         const 4;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.729896986 UTC

[section ""data" . Control.Arrow.$fMonadArrowMonad_$cp1Monad_closure" {
     Control.Arrow.$fMonadArrowMonad_$cp1Monad_closure:
         const Control.Arrow.$fMonadArrowMonad_$cp1Monad_info;
 },
 sat_sbNGo_entry() //  [R1]
         { []
         }
     {offset
       cbPmJ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPmK; else goto cbPmL;
       cbPmK: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPmL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$p1ArrowApply_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNGo_info" {
     sat_sbNGo_info:
         const sat_sbNGo_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fMonadArrowMonad_$cp1Monad_entry() //  [R2]
         { []
         }
     {offset
       cbPmM: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPmQ; else goto cbPmP;
       cbPmQ: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Control.Arrow.$fMonadArrowMonad_$cp1Monad_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPmP: // global
           I64[Hp - 16] = sat_sbNGo_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           call Control.Arrow.$fApplicativeArrowMonad_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fMonadArrowMonad_$cp1Monad_info" {
     Control.Arrow.$fMonadArrowMonad_$cp1Monad_info:
         const Control.Arrow.$fMonadArrowMonad_$cp1Monad_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.73570567 UTC

[section ""data" . Control.Arrow.$fMonadArrowMonad1_closure" {
     Control.Arrow.$fMonadArrowMonad1_closure:
         const Control.Arrow.$fMonadArrowMonad1_info;
 },
 sat_sbNGt_entry() //  [R1]
         { []
         }
     {offset
       cbPn8: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNGt_info" {
     sat_sbNGt_info:
         const sat_sbNGt_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Control.Arrow.$fMonadArrowMonad1_entry() //  [R2, R3]
         { []
         }
     {offset
       cbPnd: // global
           _sbNGq::P64 = R3;
           _sbNGp::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cbPne; else goto cbPnf;
       cbPnf: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbPnh; else goto cbPng;
       cbPnh: // global
           HpAlloc = 16;
           goto cbPne;
       cbPne: // global
           R3 = _sbNGq::P64;
           R2 = _sbNGp::P64;
           R1 = Control.Arrow.$fMonadArrowMonad1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPng: // global
           I64[Hp - 8] = sat_sbNGt_info;
           P64[Hp] = _sbNGq::P64;
           I64[Sp - 16] = block_cbPnb_info;
           R2 = _sbNGp::P64;
           P64[Sp - 8] = Hp - 7;
           Sp = Sp - 16;
           call Control.Arrow.$p1ArrowApply_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fMonadArrowMonad1_info" {
     Control.Arrow.$fMonadArrowMonad1_info:
         const Control.Arrow.$fMonadArrowMonad1_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _cbPnb() //  [R1]
         { []
         }
     {offset
       cbPnb: // global
           R2 = R1;
           I64[Sp] = stg_ap_p_info;
           call Control.Arrow.arr_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPnb_info" {
     block_cbPnb_info:
         const _cbPnb;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.74298252 UTC

[section ""data" . Control.Arrow.$fMonadArrowMonad_$c>>_closure" {
     Control.Arrow.$fMonadArrowMonad_$c>>_closure:
         const Control.Arrow.$fMonadArrowMonad_$c>>_info;
 },
 sat_sbNGy_entry() //  [R1]
         { []
         }
     {offset
       cbPnG: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNGy_info" {
     sat_sbNGy_info:
         const sat_sbNGy_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Control.Arrow.$fMonadArrowMonad_$c>>_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPnJ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbPnN; else goto cbPnM;
       cbPnN: // global
           HpAlloc = 16;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fMonadArrowMonad_$c>>_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPnM: // global
           I64[Hp - 8] = sat_sbNGy_info;
           P64[Hp] = R4;
           R4 = Hp - 7;
           R3 = R3;
           R2 = R2;
           call Control.Arrow.$fMonadArrowMonad_$c>>=_entry(R4,
                                                            R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fMonadArrowMonad_$c>>_info" {
     Control.Arrow.$fMonadArrowMonad_$c>>_info:
         const Control.Arrow.$fMonadArrowMonad_$c>>_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.747958381 UTC

[section ""data" . lvl_rbNC6_closure" {
     lvl_rbNC6_closure:
         const lvl_rbNC6_info;
         const 0;
 },
 lvl_rbNC6_entry() //  [R2]
         { []
         }
     {offset
       cbPnZ: // global
           R2 = R2;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl_rbNC6_info" {
     lvl_rbNC6_info:
         const lvl_rbNC6_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const SbNZ8_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.752788605 UTC

[section ""data" . Control.Arrow.$fMonadArrowMonad_closure" {
     Control.Arrow.$fMonadArrowMonad_closure:
         const Control.Arrow.$fMonadArrowMonad_info;
         const 0;
 },
 sat_sbNGE_entry() //  [R1, R2]
         { []
         }
     {offset
       cbPof: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Control.Arrow.$fMonadArrowMonad1_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNGE_info" {
     sat_sbNGE_info:
         const sat_sbNGE_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbNGD_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbPon: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fMonadArrowMonad_$c>>_entry(R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNGD_info" {
     sat_sbNGD_info:
         const sat_sbNGD_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbNGC_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbPov: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fMonadArrowMonad_$c>>=_entry(R4,
                                                            R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNGC_info" {
     sat_sbNGC_info:
         const sat_sbNGC_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbNGB_entry() //  [R1]
         { []
         }
     {offset
       cbPoC: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPoD; else goto cbPoE;
       cbPoD: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPoE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fMonadArrowMonad_$cp1Monad_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNGB_info" {
     sat_sbNGB_info:
         const sat_sbNGB_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fMonadArrowMonad_entry() //  [R2]
         { []
         }
     {offset
       cbPoG: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto cbPoK; else goto cbPoJ;
       cbPoK: // global
           HpAlloc = 120;
           R2 = R2;
           R1 = Control.Arrow.$fMonadArrowMonad_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPoJ: // global
           I64[Hp - 112] = sat_sbNGE_info;
           P64[Hp - 104] = R2;
           I64[Hp - 96] = sat_sbNGD_info;
           P64[Hp - 88] = R2;
           I64[Hp - 80] = sat_sbNGC_info;
           P64[Hp - 72] = R2;
           I64[Hp - 64] = sat_sbNGB_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = GHC.Base.C:Monad_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 78;
           P64[Hp - 16] = Hp - 94;
           P64[Hp - 8] = Hp - 111;
           P64[Hp] = lvl_rbNC6_closure+1;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fMonadArrowMonad_info" {
     Control.Arrow.$fMonadArrowMonad_info:
         const Control.Arrow.$fMonadArrowMonad_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const SbNZ8_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.76465178 UTC

[section ""data" . Control.Arrow.$fAlternativeArrowMonad3_closure" {
     Control.Arrow.$fAlternativeArrowMonad3_closure:
         const Control.Arrow.$fAlternativeArrowMonad3_info;
 },
 Control.Arrow.$fAlternativeArrowMonad3_entry() //  [R2]
         { []
         }
     {offset
       cbPpd: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbPpe; else goto cbPpf;
       cbPpe: // global
           R2 = R2;
           R1 = Control.Arrow.$fAlternativeArrowMonad3_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPpf: // global
           I64[Sp - 8] = block_cbPpb_info;
           R2 = R2;
           Sp = Sp - 8;
           call Control.Arrow.$p1ArrowPlus_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fAlternativeArrowMonad3_info" {
     Control.Arrow.$fAlternativeArrowMonad3_info:
         const Control.Arrow.$fAlternativeArrowMonad3_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbPpb() //  [R1]
         { []
         }
     {offset
       cbPpb: // global
           R2 = R1;
           Sp = Sp + 8;
           call Control.Arrow.zeroArrow_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPpb_info" {
     block_cbPpb_info:
         const _cbPpb;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.770507217 UTC

[section ""data" . Control.Arrow.$fAlternativeArrowMonad_$cp1Alternative_closure" {
     Control.Arrow.$fAlternativeArrowMonad_$cp1Alternative_closure:
         const Control.Arrow.$fAlternativeArrowMonad_$cp1Alternative_info;
 },
 sat_sbNGJ_entry() //  [R1]
         { []
         }
     {offset
       cbPpB: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cbPpC; else goto cbPpD;
       cbPpC: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPpD: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_cbPpz_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Control.Arrow.$p1ArrowPlus_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNGJ_info" {
     sat_sbNGJ_info:
         const sat_sbNGJ_entry;
         const 1;
         const 16;
 },
 _cbPpz() //  [R1]
         { []
         }
     {offset
       cbPpz: // global
           R2 = R1;
           Sp = Sp + 8;
           call Control.Arrow.$p1ArrowZero_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbPpz_info" {
     block_cbPpz_info:
         const _cbPpz;
         const 0;
         const 30;
 },
 Control.Arrow.$fAlternativeArrowMonad_$cp1Alternative_entry() //  [R2]
         { []
         }
     {offset
       cbPpH: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPpL; else goto cbPpK;
       cbPpL: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Control.Arrow.$fAlternativeArrowMonad_$cp1Alternative_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPpK: // global
           I64[Hp - 16] = sat_sbNGJ_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           call Control.Arrow.$fApplicativeArrowMonad_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fAlternativeArrowMonad_$cp1Alternative_info" {
     Control.Arrow.$fAlternativeArrowMonad_$cp1Alternative_info:
         const Control.Arrow.$fAlternativeArrowMonad_$cp1Alternative_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.778027245 UTC

[section ""data" . Control.Arrow.$fAlternativeArrowMonad1_closure" {
     Control.Arrow.$fAlternativeArrowMonad1_closure:
         const Control.Arrow.$fAlternativeArrowMonad1_info;
 },
 Control.Arrow.$fAlternativeArrowMonad1_entry() //  []
         { []
         }
     {offset
       cbPq1: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fAlternativeArrowMonad1_info" {
     Control.Arrow.$fAlternativeArrowMonad1_info:
         const Control.Arrow.$fAlternativeArrowMonad1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.785632843 UTC

[section ""data" . Control.Arrow.$fAlternativeArrowMonad_$csome_closure" {
     Control.Arrow.$fAlternativeArrowMonad_$csome_closure:
         const Control.Arrow.$fAlternativeArrowMonad_$csome_info;
 },
 sat_sbNGV_entry() //  [R1]
         { []
         }
     {offset
       cbPqB: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPqC; else goto cbPqD;
       cbPqC: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPqD: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Control.Arrow.$fAlternativeArrowMonad1_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNGV_info" {
     sat_sbNGV_info:
         const sat_sbNGV_entry;
         const 1;
         const 16;
 },
 sat_sbNGW_entry() //  [R1]
         { []
         }
     {offset
       cbPqE: // global
           _sbNGW::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbPqF; else goto cbPqG;
       cbPqG: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPqI; else goto cbPqH;
       cbPqI: // global
           HpAlloc = 24;
           goto cbPqF;
       cbPqF: // global
           R1 = _sbNGW::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPqH: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNGW::P64;
           _sbNGL::P64 = P64[_sbNGW::P64 + 16];
           _sbNGN::P64 = P64[_sbNGW::P64 + 24];
           _sbNGP::P64 = P64[_sbNGW::P64 + 32];
           I64[Hp - 16] = sat_sbNGV_info;
           P64[Hp] = _sbNGP::P64;
           R2 = _sbNGL::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _sbNGN::P64;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 40;
           call Control.Arrow.<+>_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNGW_info" {
     sat_sbNGW_info:
         const sat_sbNGW_entry;
         const 3;
         const 15;
 },
 sat_sbNGT_entry() //  [R1]
         { []
         }
     {offset
       cbPqR: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPqS; else goto cbPqT;
       cbPqS: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPqT: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = GHC.Types.:_closure+2;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNGT_info" {
     sat_sbNGT_info:
         const sat_sbNGT_entry;
         const 1;
         const 16;
 },
 sat_sbNGU_entry() //  [R1]
         { []
         }
     {offset
       cbPqW: // global
           _sbNGU::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbPqX; else goto cbPqY;
       cbPqY: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPr0; else goto cbPqZ;
       cbPr0: // global
           HpAlloc = 24;
           goto cbPqX;
       cbPqX: // global
           R1 = _sbNGU::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPqZ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNGU::P64;
           _sbNGM::P64 = P64[_sbNGU::P64 + 16];
           _sbNGP::P64 = P64[_sbNGU::P64 + 24];
           I64[Hp - 16] = sat_sbNGT_info;
           P64[Hp] = _sbNGP::P64;
           I64[Sp - 40] = block_cbPqU_info;
           R2 = _sbNGP::P64;
           P64[Sp - 32] = Hp - 16;
           P64[Sp - 24] = _sbNGM::P64;
           Sp = Sp - 40;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNGU_info" {
     sat_sbNGU_info:
         const sat_sbNGU_entry;
         const 2;
         const 18;
 },
 _cbPqU() //  [R1]
         { []
         }
     {offset
       cbPqU: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbPqU_info" {
     block_cbPqU_info:
         const _cbPqU;
         const 2;
         const 30;
 },
 sat_sbNGX_entry() //  [R1]
         { []
         }
     {offset
       cbPr4: // global
           _sbNGX::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbPr5; else goto cbPr6;
       cbPr6: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cbPr8; else goto cbPr7;
       cbPr8: // global
           HpAlloc = 72;
           goto cbPr5;
       cbPr5: // global
           R1 = _sbNGX::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPr7: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNGX::P64;
           _sbNGL::P64 = P64[_sbNGX::P64 + 16];
           _sbNGM::P64 = P64[_sbNGX::P64 + 24];
           _sbNGN::P64 = P64[_sbNGX::P64 + 32];
           _sbNGP::P64 = P64[_sbNGX::P64 + 40];
           I64[Hp - 64] = sat_sbNGW_info;
           P64[Hp - 48] = _sbNGL::P64;
           P64[Hp - 40] = _sbNGN::P64;
           P64[Hp - 32] = _sbNGP::P64;
           I64[Hp - 24] = sat_sbNGU_info;
           P64[Hp - 8] = _sbNGM::P64;
           P64[Hp] = _sbNGP::P64;
           R2 = _sbNGP::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Hp - 24;
           P64[Sp - 24] = Hp - 64;
           Sp = Sp - 40;
           call Control.Arrow.&&&_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNGX_info" {
     sat_sbNGX_info:
         const sat_sbNGX_entry;
         const 4;
         const 15;
 },
 sat_sbNGR_entry() //  [R1]
         { []
         }
     {offset
       cbPrd: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPre; else goto cbPrf;
       cbPre: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPrf: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Control.Arrow.$fAlternativeArrowMonad_$capp_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNGR_info" {
     sat_sbNGR_info:
         const sat_sbNGR_entry;
         const 1;
         const 16;
 },
 some_v_sbNGN_entry() //  [R1]
         { []
         }
     {offset
       cbPrg: // global
           if ((Sp + -48) < SpLim) (likely: False) goto cbPri; else goto cbPrj;
       cbPri: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPrj: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 48] = block_cbPqh_info;
           _sbNGL::P64 = P64[R1 + 16];
           R2 = _sbNGL::P64;
           P64[Sp - 40] = _sbNGL::P64;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = R1;
           Sp = Sp - 48;
           call Control.Arrow.$p1ArrowPlus_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . some_v_sbNGN_info" {
     some_v_sbNGN_info:
         const some_v_sbNGN_entry;
         const 2;
         const 18;
 },
 _cbPqh() //  [R1]
         { []
         }
     {offset
       cbPqh: // global
           I64[Sp] = block_cbPql_info;
           R2 = R1;
           call Control.Arrow.$p1ArrowZero_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_cbPqh_info" {
     block_cbPqh_info:
         const _cbPqh;
         const 3;
         const 30;
 },
 _cbPql() //  [R1]
         { []
         }
     {offset
       cbPql: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cbPrn; else goto cbPrm;
       cbPrn: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       cbPrm: // global
           I64[Hp - 64] = sat_sbNGX_info;
           P64[Hp - 48] = P64[Sp + 8];
           P64[Hp - 40] = P64[Sp + 16];
           P64[Hp - 32] = P64[Sp + 24];
           P64[Hp - 24] = R1;
           I64[Hp - 16] = sat_sbNGR_info;
           P64[Hp] = R1;
           I64[Sp + 8] = block_cbPrh_info;
           R2 = R1;
           P64[Sp + 16] = Hp - 16;
           P64[Sp + 24] = Hp - 64;
           Sp = Sp + 8;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_cbPql_info" {
     block_cbPql_info:
         const _cbPql;
         const 3;
         const 30;
 },
 _cbPrh() //  [R1]
         { []
         }
     {offset
       cbPrh: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbPrh_info" {
     block_cbPrh_info:
         const _cbPrh;
         const 2;
         const 30;
 },
 Control.Arrow.$fAlternativeArrowMonad_$csome_entry() //  [R2, R3]
         { []
         }
     {offset
       cbPrs: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbPrw; else goto cbPrv;
       cbPrw: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fAlternativeArrowMonad_$csome_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPrv: // global
           I64[Hp - 24] = some_v_sbNGN_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fAlternativeArrowMonad_$csome_info" {
     Control.Arrow.$fAlternativeArrowMonad_$csome_info:
         const Control.Arrow.$fAlternativeArrowMonad_$csome_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.812784327 UTC

[section ""data" . Control.Arrow.$fAlternativeArrowMonad_$cmany_closure" {
     Control.Arrow.$fAlternativeArrowMonad_$cmany_closure:
         const Control.Arrow.$fAlternativeArrowMonad_$cmany_info;
 },
 $dApplicative_sbNH1_entry() //  [R1]
         { []
         }
     {offset
       cbPsB: // global
           R2 = P64[R1 + 16];
           call Control.Arrow.$p1ArrowPlus_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . $dApplicative_sbNH1_info" {
     $dApplicative_sbNH1_info:
         const $dApplicative_sbNH1_entry;
         const 1;
         const 16;
 },
 $dApplicative1_sbNH2_entry() //  [R1]
         { []
         }
     {offset
       cbPsI: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPsJ; else goto cbPsK;
       cbPsJ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPsK: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$p1ArrowZero_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . $dApplicative1_sbNH2_info" {
     $dApplicative1_sbNH2_info:
         const $dApplicative1_sbNH2_entry;
         const 1;
         const 16;
 },
 sat_sbNH7_entry() //  [R1]
         { []
         }
     {offset
       cbPsP: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPsQ; else goto cbPsR;
       cbPsQ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPsR: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Control.Arrow.$fAlternativeArrowMonad1_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNH7_info" {
     sat_sbNH7_info:
         const sat_sbNH7_entry;
         const 1;
         const 16;
 },
 sat_sbNH4_entry() //  [R1]
         { []
         }
     {offset
       cbPt4: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPt5; else goto cbPt6;
       cbPt5: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPt6: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = GHC.Types.:_closure+2;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNH4_info" {
     sat_sbNH4_info:
         const sat_sbNH4_entry;
         const 1;
         const 16;
 },
 sat_sbNH5_entry() //  [R1]
         { []
         }
     {offset
       cbPt9: // global
           _sbNH5::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbPta; else goto cbPtb;
       cbPtb: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPtd; else goto cbPtc;
       cbPtd: // global
           HpAlloc = 24;
           goto cbPta;
       cbPta: // global
           R1 = _sbNH5::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPtc: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNH5::P64;
           _sbNGZ::P64 = P64[_sbNH5::P64 + 16];
           _sbNH2::P64 = P64[_sbNH5::P64 + 24];
           I64[Hp - 16] = sat_sbNH4_info;
           P64[Hp] = _sbNH2::P64;
           I64[Sp - 40] = block_cbPt7_info;
           R2 = _sbNH2::P64;
           P64[Sp - 32] = Hp - 16;
           P64[Sp - 24] = _sbNGZ::P64;
           Sp = Sp - 40;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNH5_info" {
     sat_sbNH5_info:
         const sat_sbNH5_entry;
         const 2;
         const 18;
 },
 _cbPt7() //  [R1]
         { []
         }
     {offset
       cbPt7: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbPt7_info" {
     block_cbPt7_info:
         const _cbPt7;
         const 2;
         const 30;
 },
 sat_sbNH6_entry() //  [R1]
         { []
         }
     {offset
       cbPth: // global
           _sbNH6::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbPti; else goto cbPtj;
       cbPtj: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbPtl; else goto cbPtk;
       cbPtl: // global
           HpAlloc = 32;
           goto cbPti;
       cbPti: // global
           R1 = _sbNH6::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPtk: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNH6::P64;
           _sbNGZ::P64 = P64[_sbNH6::P64 + 16];
           _sbNH0::P64 = P64[_sbNH6::P64 + 24];
           _sbNH2::P64 = P64[_sbNH6::P64 + 32];
           I64[Hp - 24] = sat_sbNH5_info;
           P64[Hp - 8] = _sbNGZ::P64;
           P64[Hp] = _sbNH2::P64;
           R4 = _sbNH0::P64;
           R3 = Hp - 24;
           R2 = _sbNH2::P64;
           Sp = Sp - 16;
           call Control.Arrow.$fAlternativeArrowMonad2_entry(R4,
                                                             R3,
                                                             R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNH6_info" {
     sat_sbNH6_info:
         const sat_sbNH6_entry;
         const 3;
         const 15;
 },
 many_v_sbNH0_entry() //  [R1]
         { []
         }
     {offset
       cbPtm: // global
           _sbNH0::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbPtn; else goto cbPto;
       cbPto: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cbPtq; else goto cbPtp;
       cbPtq: // global
           HpAlloc = 112;
           goto cbPtn;
       cbPtn: // global
           R1 = _sbNH0::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPtp: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNH0::P64;
           _sbNGY::P64 = P64[_sbNH0::P64 + 16];
           _sbNGZ::P64 = P64[_sbNH0::P64 + 24];
           I64[Hp - 104] = $dApplicative_sbNH1_info;
           P64[Hp - 88] = _sbNGY::P64;
           I64[Hp - 80] = $dApplicative1_sbNH2_info;
           P64[Hp - 64] = Hp - 104;
           I64[Hp - 56] = sat_sbNH7_info;
           _cbPsE::P64 = Hp - 80;
           P64[Hp - 40] = _cbPsE::P64;
           I64[Hp - 32] = sat_sbNH6_info;
           P64[Hp - 16] = _sbNGZ::P64;
           P64[Hp - 8] = _sbNH0::P64;
           P64[Hp] = _cbPsE::P64;
           R2 = _sbNGY::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Hp - 32;
           P64[Sp - 24] = Hp - 56;
           Sp = Sp - 40;
           call Control.Arrow.<+>_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . many_v_sbNH0_info" {
     many_v_sbNH0_info:
         const many_v_sbNH0_entry;
         const 2;
         const 18;
 },
 Control.Arrow.$fAlternativeArrowMonad_$cmany_entry() //  [R2, R3]
         { []
         }
     {offset
       cbPtr: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbPtv; else goto cbPtu;
       cbPtv: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fAlternativeArrowMonad_$cmany_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPtu: // global
           I64[Hp - 24] = many_v_sbNH0_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fAlternativeArrowMonad_$cmany_info" {
     Control.Arrow.$fAlternativeArrowMonad_$cmany_info:
         const Control.Arrow.$fAlternativeArrowMonad_$cmany_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.832009919 UTC

[section ""data" . Control.Arrow.$fAlternativeArrowMonad_closure" {
     Control.Arrow.$fAlternativeArrowMonad_closure:
         const Control.Arrow.$fAlternativeArrowMonad_info;
 },
 sat_sbNHf_entry() //  [R1, R2]
         { []
         }
     {offset
       cbPuh: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Control.Arrow.$fAlternativeArrowMonad_$cmany_entry(R3,
                                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNHf_info" {
     sat_sbNHf_info:
         const sat_sbNHf_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbNHe_entry() //  [R1, R2]
         { []
         }
     {offset
       cbPup: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Control.Arrow.$fAlternativeArrowMonad_$csome_entry(R3,
                                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNHe_info" {
     sat_sbNHe_info:
         const sat_sbNHe_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbNHd_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbPux: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cbPuy; else goto cbPuz;
       cbPuy: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPuz: // global
           _sbNHb::P64 = R2;
           R2 = P64[R1 + 6];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _sbNHb::P64;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call Control.Arrow.<+>_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNHd_info" {
     sat_sbNHd_info:
         const sat_sbNHd_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbNHa_entry() //  [R1]
         { []
         }
     {offset
       cbPuE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPuF; else goto cbPuG;
       cbPuF: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPuG: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fAlternativeArrowMonad3_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNHa_info" {
     sat_sbNHa_info:
         const sat_sbNHa_entry;
         const 1;
         const 16;
 },
 sat_sbNH9_entry() //  [R1]
         { []
         }
     {offset
       cbPuL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPuM; else goto cbPuN;
       cbPuM: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPuN: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fAlternativeArrowMonad_$cp1Alternative_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNH9_info" {
     sat_sbNH9_info:
         const sat_sbNH9_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fAlternativeArrowMonad_entry() //  [R2]
         { []
         }
     {offset
       cbPuP: // global
           Hp = Hp + 144;
           if (Hp > HpLim) (likely: False) goto cbPuT; else goto cbPuS;
       cbPuT: // global
           HpAlloc = 144;
           R2 = R2;
           R1 = Control.Arrow.$fAlternativeArrowMonad_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPuS: // global
           I64[Hp - 136] = sat_sbNHf_info;
           P64[Hp - 128] = R2;
           I64[Hp - 120] = sat_sbNHe_info;
           P64[Hp - 112] = R2;
           I64[Hp - 104] = sat_sbNHd_info;
           P64[Hp - 96] = R2;
           I64[Hp - 88] = sat_sbNHa_info;
           P64[Hp - 72] = R2;
           I64[Hp - 64] = sat_sbNH9_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = GHC.Base.C:Alternative_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           P64[Hp - 16] = Hp - 102;
           P64[Hp - 8] = Hp - 119;
           P64[Hp] = Hp - 135;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fAlternativeArrowMonad_info" {
     Control.Arrow.$fAlternativeArrowMonad_info:
         const Control.Arrow.$fAlternativeArrowMonad_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.846268853 UTC

[section ""data" . Control.Arrow.$fMonadPlusArrowMonad_closure" {
     Control.Arrow.$fMonadPlusArrowMonad_closure:
         const Control.Arrow.$fMonadPlusArrowMonad_info;
         const 0;
 },
 sat_sbNHn_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbPvv: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cbPvw; else goto cbPvx;
       cbPvw: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPvx: // global
           _sbNHl::P64 = R2;
           R2 = P64[R1 + 6];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _sbNHl::P64;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call Control.Arrow.<+>_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNHn_info" {
     sat_sbNHn_info:
         const sat_sbNHn_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbNHk_entry() //  [R1]
         { []
         }
     {offset
       cbPvC: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPvD; else goto cbPvE;
       cbPvD: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPvE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fAlternativeArrowMonad3_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNHk_info" {
     sat_sbNHk_info:
         const sat_sbNHk_entry;
         const 1;
         const 16;
 },
 sat_sbNHj_entry() //  [R1]
         { []
         }
     {offset
       cbPvJ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPvK; else goto cbPvL;
       cbPvK: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPvL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fMonadArrowMonad_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNHj_info" {
     sat_sbNHj_info:
         const sat_sbNHj_entry;
         const 1;
         const 4294967312;
         const SbNZ8_srt+8;
 },
 sat_sbNHi_entry() //  [R1]
         { []
         }
     {offset
       cbPvQ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPvR; else goto cbPvS;
       cbPvR: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPvS: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fAlternativeArrowMonad_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNHi_info" {
     sat_sbNHi_info:
         const sat_sbNHi_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fMonadPlusArrowMonad_entry() //  [R2, R3]
         { []
         }
     {offset
       cbPvU: // global
           Hp = Hp + 128;
           if (Hp > HpLim) (likely: False) goto cbPvY; else goto cbPvX;
       cbPvY: // global
           HpAlloc = 128;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fMonadPlusArrowMonad_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPvX: // global
           I64[Hp - 120] = sat_sbNHn_info;
           P64[Hp - 112] = R3;
           I64[Hp - 104] = sat_sbNHk_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = sat_sbNHj_info;
           P64[Hp - 64] = R2;
           I64[Hp - 56] = sat_sbNHi_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = GHC.Base.C:MonadPlus_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 104;
           P64[Hp] = Hp - 118;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fMonadPlusArrowMonad_info" {
     Control.Arrow.$fMonadPlusArrowMonad_info:
         const Control.Arrow.$fMonadPlusArrowMonad_entry;
         const 0;
         const 21474836494;
         const 8589934607;
         const SbNZ8_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.858005511 UTC

[section ""data" . Control.Arrow.$fArrowLoop(->)_$cloop_closure" {
     Control.Arrow.$fArrowLoop(->)_$cloop_closure:
         const Control.Arrow.$fArrowLoop(->)_$cloop_info;
 },
 ds_sbNHq_entry() //  [R1]
         { []
         }
     {offset
       cbPwy: // global
           _sbNHq::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbPwz; else goto cbPwA;
       cbPwA: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cbPwC; else goto cbPwB;
       cbPwC: // global
           HpAlloc = 48;
           goto cbPwz;
       cbPwz: // global
           R1 = _sbNHq::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPwB: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNHq::P64;
           _sbNHo::P64 = P64[_sbNHq::P64 + 16];
           _sbNHp::P64 = P64[_sbNHq::P64 + 24];
           I64[Hp - 40] = stg_sel_1_upd_info;
           P64[Hp - 24] = _sbNHq::P64;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = _sbNHp::P64;
           P64[Hp] = Hp - 40;
           R2 = Hp - 15;
           R1 = _sbNHo::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_sbNHq_info" {
     ds_sbNHq_info:
         const ds_sbNHq_entry;
         const 2;
         const 18;
 },
 Control.Arrow.$fArrowLoop(->)_$cloop_entry() //  [R2, R3]
         { []
         }
     {offset
       cbPwG: // global
           _sbNHp::P64 = R3;
           _sbNHo::P64 = R2;
           if ((Sp + -8) < SpLim) (likely: False) goto cbPwH; else goto cbPwI;
       cbPwI: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbPwK; else goto cbPwJ;
       cbPwK: // global
           HpAlloc = 32;
           goto cbPwH;
       cbPwH: // global
           R3 = _sbNHp::P64;
           R2 = _sbNHo::P64;
           R1 = Control.Arrow.$fArrowLoop(->)_$cloop_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPwJ: // global
           I64[Hp - 24] = ds_sbNHq_info;
           P64[Hp - 8] = _sbNHo::P64;
           P64[Hp] = _sbNHp::P64;
           I64[Sp - 8] = block_cbPwD_info;
           R1 = Hp - 24;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubPwO; else goto cbPwE;
       ubPwO: // global
           call _cbPwD(R1) args: 0, res: 0, upd: 0;
       cbPwE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowLoop(->)_$cloop_info" {
     Control.Arrow.$fArrowLoop(->)_$cloop_info:
         const Control.Arrow.$fArrowLoop(->)_$cloop_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _cbPwD() //  [R1]
         { []
         }
     {offset
       cbPwD: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPwD_info" {
     block_cbPwD_info:
         const _cbPwD;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.869438389 UTC

[section ""data" . Control.Arrow.$fArrowLoopKleisli1_closure" {
     Control.Arrow.$fArrowLoopKleisli1_closure:
         const Control.Arrow.$fArrowLoopKleisli1_info;
 },
 sat_sbNHN_entry() //  [R1, R2]
         { []
         }
     {offset
       cbPxh: // global
           _sbNHI::P64 = R2;
           _sbNHN::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbPxi; else goto cbPxj;
       cbPxj: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPxl; else goto cbPxk;
       cbPxl: // global
           HpAlloc = 24;
           goto cbPxi;
       cbPxi: // global
           R2 = _sbNHI::P64;
           R1 = _sbNHN::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPxk: // global
           _sbNHC::P64 = P64[_sbNHN::P64 + 7];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _sbNHI::P64;
           R2 = _sbNHC::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 16;
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNHN_info" {
     sat_sbNHN_info:
         const sat_sbNHN_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbNHE_entry() //  [R1]
         { []
         }
     {offset
       cbPxz: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPxA; else goto cbPxB;
       cbPxA: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPxB: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Tuple.snd_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNHE_info" {
     sat_sbNHE_info:
         const sat_sbNHE_entry;
         const 1;
         const 16;
 },
 sat_sbNHG_entry() //  [R1, R2]
         { []
         }
     {offset
       cbPxD: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cbPxH; else goto cbPxG;
       cbPxH: // global
           HpAlloc = 48;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPxG: // global
           _sbNHA::P64 = P64[R1 + 7];
           _sbNHB::P64 = P64[R1 + 15];
           I64[Hp - 40] = sat_sbNHE_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = _sbNHB::P64;
           P64[Hp] = Hp - 40;
           R2 = Hp - 15;
           R1 = _sbNHA::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNHG_info" {
     sat_sbNHG_info:
         const sat_sbNHG_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_sbNHH_entry() //  [R1]
         { []
         }
     {offset
       cbPxI: // global
           _sbNHH::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cbPxJ; else goto cbPxK;
       cbPxK: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPxM; else goto cbPxL;
       cbPxM: // global
           HpAlloc = 24;
           goto cbPxJ;
       cbPxJ: // global
           R1 = _sbNHH::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPxL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNHH::P64;
           _sbNHz::P64 = P64[_sbNHH::P64 + 16];
           _sbNHA::P64 = P64[_sbNHH::P64 + 24];
           _sbNHB::P64 = P64[_sbNHH::P64 + 32];
           I64[Hp - 16] = sat_sbNHG_info;
           P64[Hp - 8] = _sbNHA::P64;
           P64[Hp] = _sbNHB::P64;
           R2 = _sbNHz::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 15;
           Sp = Sp - 32;
           call Control.Monad.Fix.mfix_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNHH_info" {
     sat_sbNHH_info:
         const sat_sbNHH_entry;
         const 3;
         const 15;
 },
 Control.Arrow.$fArrowLoopKleisli1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPxN: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPxO; else goto cbPxP;
       cbPxO: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fArrowLoopKleisli1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPxP: // global
           I64[Sp - 32] = block_cbPx7_info;
           _sbNHz::P64 = R2;
           R2 = R2;
           P64[Sp - 24] = _sbNHz::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call Control.Monad.Fix.$p1MonadFix_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowLoopKleisli1_info" {
     Control.Arrow.$fArrowLoopKleisli1_info:
         const Control.Arrow.$fArrowLoopKleisli1_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbPx7() //  [R1]
         { []
         }
     {offset
       cbPx7: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cbPxS; else goto cbPxR;
       cbPxS: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbPxR: // global
           I64[Hp - 48] = sat_sbNHN_info;
           P64[Hp - 40] = R1;
           I64[Hp - 32] = sat_sbNHH_info;
           P64[Hp - 16] = P64[Sp + 8];
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = P64[Sp + 24];
           R2 = R1;
           I64[Sp + 8] = stg_ap_pp_info;
           P64[Sp + 16] = Hp - 32;
           P64[Sp + 24] = Hp - 47;
           Sp = Sp + 8;
           call GHC.Base.>>=_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPx7_info" {
     block_cbPx7_info:
         const _cbPx7;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.883112372 UTC

[section ""data" . lvl1_rbNC7_closure" {
     lvl1_rbNC7_closure:
         const lvl1_rbNC7_info;
 },
 lvl1_rbNC7_entry() //  [R2]
         { []
         }
     {offset
       cbPyz: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbPyA; else goto cbPyB;
       cbPyA: // global
           R2 = R2;
           R1 = lvl1_rbNC7_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPyB: // global
           I64[Sp - 8] = block_cbPys_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubPyI; else goto cbPyt;
       ubPyI: // global
           call _cbPys(R1) args: 0, res: 0, upd: 0;
       cbPyt: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . lvl1_rbNC7_info" {
     lvl1_rbNC7_info:
         const lvl1_rbNC7_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbPys() //  [R1]
         { []
         }
     {offset
       cbPys: // global
           if (R1 & 7 == 1) goto cbPyw; else goto cbPyx;
       cbPyw: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       cbPyx: // global
           R1 = P64[R1 + 6];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPys_info" {
     block_cbPys_info:
         const _cbPys;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.891086774 UTC

[section ""data" . Control.Arrow.$dm|||_closure" {
     Control.Arrow.$dm|||_closure:
         const Control.Arrow.$dm|||_info;
 },
 sat_sbNHY_entry() //  [R1]
         { []
         }
     {offset
       cbPz6: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cbPz7; else goto cbPz8;
       cbPz7: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPz8: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Control.Arrow.+++_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNHY_info" {
     sat_sbNHY_info:
         const sat_sbNHY_entry;
         const 3;
         const 15;
 },
 sat_sbNHX_entry() //  [R1]
         { []
         }
     {offset
       cbPzd: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPze; else goto cbPzf;
       cbPze: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPzf: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = lvl1_rbNC7_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNHX_info" {
     sat_sbNHX_info:
         const sat_sbNHX_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$dm|||_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPzg: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPzi; else goto cbPzj;
       cbPzi: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$dm|||_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPzj: // global
           I64[Sp - 32] = block_cbPyY_info;
           _sbNHS::P64 = R2;
           R2 = R2;
           P64[Sp - 24] = _sbNHS::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call Control.Arrow.$p1ArrowChoice_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$dm|||_info" {
     Control.Arrow.$dm|||_info:
         const Control.Arrow.$dm|||_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbPyY() //  [R1]
         { []
         }
     {offset
       cbPyY: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbPzm; else goto cbPzl;
       cbPzm: // global
           HpAlloc = 64;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbPzl: // global
           I64[Hp - 56] = sat_sbNHY_info;
           P64[Hp - 40] = P64[Sp + 8];
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = P64[Sp + 24];
           I64[Hp - 16] = sat_sbNHX_info;
           P64[Hp] = R1;
           I64[Sp + 8] = block_cbPzh_info;
           R2 = R1;
           P64[Sp + 16] = Hp - 16;
           P64[Sp + 24] = Hp - 56;
           Sp = Sp + 8;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPyY_info" {
     block_cbPyY_info:
         const _cbPyY;
         const 3;
         const 30;
 },
 _cbPzh() //  [R1]
         { []
         }
     {offset
       cbPzh: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPzh_info" {
     block_cbPzh_info:
         const _cbPzh;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.902615969 UTC

[section ""data" . mirror_rbNC8_closure" {
     mirror_rbNC8_closure:
         const mirror_rbNC8_info;
 },
 mirror_rbNC8_entry() //  [R2]
         { []
         }
     {offset
       cbPA2: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbPA3; else goto cbPA4;
       cbPA3: // global
           R2 = R2;
           R1 = mirror_rbNC8_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPA4: // global
           I64[Sp - 8] = block_cbPzV_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubPAh; else goto cbPzW;
       ubPAh: // global
           call _cbPzV(R1) args: 0, res: 0, upd: 0;
       cbPzW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . mirror_rbNC8_info" {
     mirror_rbNC8_info:
         const mirror_rbNC8_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbPzV() //  [R1]
         { []
         }
     {offset
       cbPzV: // global
           if (R1 & 7 == 1) goto cbPzZ; else goto cbPA0;
       cbPzZ: // global
           Hp = Hp + 16;
           _sbNI0::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cbPAg; else goto cbPA9;
       cbPA9: // global
           _sbNI1::P64 = P64[_sbNI0::P64 + 7];
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = _sbNI1::P64;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cbPA0: // global
           Hp = Hp + 16;
           _sbNI0::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cbPAg; else goto cbPAf;
       cbPAg: // global
           HpAlloc = 16;
           R1 = _sbNI0::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbPAf: // global
           _sbNI2::P64 = P64[_sbNI0::P64 + 6];
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = _sbNI2::P64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPzV_info" {
     block_cbPzV_info:
         const _cbPzV;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.912125229 UTC

[section ""data" . Control.Arrow.$dm+++_closure" {
     Control.Arrow.$dm+++_closure:
         const Control.Arrow.$dm+++_info;
 },
 sat_sbNIb_entry() //  [R1]
         { []
         }
     {offset
       cbPAT: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPAU; else goto cbPAV;
       cbPAU: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPAV: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Control.Arrow.left_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNIb_info" {
     sat_sbNIb_info:
         const sat_sbNIb_entry;
         const 2;
         const 18;
 },
 sat_sbNIa_entry() //  [R1]
         { []
         }
     {offset
       cbPB0: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPB1; else goto cbPB2;
       cbPB1: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPB2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = mirror_rbNC8_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNIa_info" {
     sat_sbNIa_info:
         const sat_sbNIa_entry;
         const 1;
         const 16;
 },
 sat_sbNIc_entry() //  [R1]
         { []
         }
     {offset
       cbPB3: // global
           _sbNIc::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbPB4; else goto cbPB5;
       cbPB5: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cbPB7; else goto cbPB6;
       cbPB7: // global
           HpAlloc = 56;
           goto cbPB4;
       cbPB4: // global
           R1 = _sbNIc::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPB6: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNIc::P64;
           _sbNI3::P64 = P64[_sbNIc::P64 + 16];
           _sbNI4::P64 = P64[_sbNIc::P64 + 24];
           _sbNI6::P64 = P64[_sbNIc::P64 + 32];
           _sbNI7::P64 = P64[_sbNIc::P64 + 40];
           I64[Hp - 48] = sat_sbNIb_info;
           P64[Hp - 32] = _sbNI3::P64;
           P64[Hp - 24] = _sbNI4::P64;
           I64[Hp - 16] = sat_sbNIa_info;
           P64[Hp] = _sbNI6::P64;
           R2 = _sbNI7::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Hp - 16;
           P64[Sp - 24] = Hp - 48;
           Sp = Sp - 40;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNIc_info" {
     sat_sbNIc_info:
         const sat_sbNIc_entry;
         const 4;
         const 15;
 },
 sat_sbNI9_entry() //  [R1]
         { []
         }
     {offset
       cbPBc: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPBd; else goto cbPBe;
       cbPBd: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPBe: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Control.Arrow.left_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNI9_info" {
     sat_sbNI9_info:
         const sat_sbNI9_entry;
         const 2;
         const 18;
 },
 sat_sbNId_entry() //  [R1]
         { []
         }
     {offset
       cbPBf: // global
           _sbNId::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbPBg; else goto cbPBh;
       cbPBh: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cbPBj; else goto cbPBi;
       cbPBj: // global
           HpAlloc = 80;
           goto cbPBg;
       cbPBg: // global
           R1 = _sbNId::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPBi: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNId::P64;
           _sbNI3::P64 = P64[_sbNId::P64 + 16];
           _sbNI4::P64 = P64[_sbNId::P64 + 24];
           _sbNI5::P64 = P64[_sbNId::P64 + 32];
           _sbNI6::P64 = P64[_sbNId::P64 + 40];
           _sbNI7::P64 = P64[_sbNId::P64 + 48];
           I64[Hp - 72] = sat_sbNIc_info;
           P64[Hp - 56] = _sbNI3::P64;
           P64[Hp - 48] = _sbNI4::P64;
           P64[Hp - 40] = _sbNI6::P64;
           P64[Hp - 32] = _sbNI7::P64;
           I64[Hp - 24] = sat_sbNI9_info;
           P64[Hp - 8] = _sbNI3::P64;
           P64[Hp] = _sbNI5::P64;
           R2 = _sbNI7::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Hp - 24;
           P64[Sp - 24] = Hp - 72;
           Sp = Sp - 40;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNId_info" {
     sat_sbNId_info:
         const sat_sbNId_entry;
         const 5;
         const 15;
 },
 sat_sbNI8_entry() //  [R1]
         { []
         }
     {offset
       cbPBo: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPBp; else goto cbPBq;
       cbPBp: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPBq: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = mirror_rbNC8_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNI8_info" {
     sat_sbNI8_info:
         const sat_sbNI8_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$dm+++_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPBr: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cbPBs; else goto cbPBt;
       cbPBs: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$dm+++_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPBt: // global
           I64[Sp - 32] = block_cbPAz_info;
           _sbNI3::P64 = R2;
           R2 = R2;
           P64[Sp - 24] = _sbNI3::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call Control.Arrow.$p1ArrowChoice_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$dm+++_info" {
     Control.Arrow.$dm+++_info:
         const Control.Arrow.$dm+++_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbPAz() //  [R1]
         { []
         }
     {offset
       cbPAz: // global
           I64[Sp - 8] = block_cbPAD_info;
           R2 = R1;
           P64[Sp] = R1;
           Sp = Sp - 8;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPAz_info" {
     block_cbPAz_info:
         const _cbPAz;
         const 3;
         const 30;
 },
 _cbPAD() //  [R1]
         { []
         }
     {offset
       cbPAD: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cbPBx; else goto cbPBw;
       cbPBx: // global
           HpAlloc = 80;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbPBw: // global
           I64[Hp - 72] = sat_sbNId_info;
           P64[Hp - 56] = P64[Sp + 16];
           P64[Hp - 48] = P64[Sp + 24];
           P64[Hp - 40] = P64[Sp + 32];
           _sbNI6::P64 = P64[Sp + 8];
           P64[Hp - 32] = _sbNI6::P64;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = sat_sbNI8_info;
           P64[Hp] = _sbNI6::P64;
           R2 = R1;
           I64[Sp + 16] = stg_ap_pp_info;
           P64[Sp + 24] = Hp - 16;
           P64[Sp + 32] = Hp - 72;
           Sp = Sp + 16;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPAD_info" {
     block_cbPAD_info:
         const _cbPAD;
         const 4;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.932753558 UTC

[section ""data" . Control.Arrow.$dmright_closure" {
     Control.Arrow.$dmright_closure:
         const Control.Arrow.$dmright_info;
 },
 sat_sbNIh_entry() //  [R1]
         { []
         }
     {offset
       cbPCs: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cbPCw; else goto cbPCx;
       cbPCw: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPCx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_cbPCq_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Control.Arrow.$p1ArrowChoice_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNIh_info" {
     sat_sbNIh_info:
         const sat_sbNIh_entry;
         const 1;
         const 16;
 },
 _cbPCq() //  [R1]
         { []
         }
     {offset
       cbPCq: // global
           I64[Sp] = block_cbPCv_info;
           R2 = R1;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_cbPCq_info" {
     block_cbPCq_info:
         const _cbPCq;
         const 0;
         const 30;
 },
 _cbPCv() //  [R1]
         { []
         }
     {offset
       cbPCv: // global
           R2 = R1;
           Sp = Sp + 8;
           call Control.Category.id_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbPCv_info" {
     block_cbPCv_info:
         const _cbPCv;
         const 0;
         const 30;
 },
 Control.Arrow.$dmright_entry() //  [R2]
         { []
         }
     {offset
       cbPCD: // global
           _sbNIe::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cbPCE; else goto cbPCF;
       cbPCF: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPCH; else goto cbPCG;
       cbPCH: // global
           HpAlloc = 24;
           goto cbPCE;
       cbPCE: // global
           R2 = _sbNIe::P64;
           R1 = Control.Arrow.$dmright_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPCG: // global
           I64[Hp - 16] = sat_sbNIh_info;
           P64[Hp] = _sbNIe::P64;
           R2 = _sbNIe::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 16;
           Sp = Sp - 16;
           call Control.Arrow.+++_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$dmright_info" {
     Control.Arrow.$dmright_info:
         const Control.Arrow.$dmright_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.941930498 UTC

[section ""data" . Control.Arrow.$dmleft_closure" {
     Control.Arrow.$dmleft_closure:
         const Control.Arrow.$dmleft_info;
 },
 sat_sbNIm_entry() //  [R1]
         { []
         }
     {offset
       cbPD8: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cbPDc; else goto cbPDd;
       cbPDc: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPDd: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_cbPD6_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Control.Arrow.$p1ArrowChoice_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNIm_info" {
     sat_sbNIm_info:
         const sat_sbNIm_entry;
         const 1;
         const 16;
 },
 _cbPD6() //  [R1]
         { []
         }
     {offset
       cbPD6: // global
           I64[Sp] = block_cbPDb_info;
           R2 = R1;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_cbPD6_info" {
     block_cbPD6_info:
         const _cbPD6;
         const 0;
         const 30;
 },
 _cbPDb() //  [R1]
         { []
         }
     {offset
       cbPDb: // global
           R2 = R1;
           Sp = Sp + 8;
           call Control.Category.id_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbPDb_info" {
     block_cbPDb_info:
         const _cbPDb;
         const 0;
         const 30;
 },
 Control.Arrow.$dmleft_entry() //  [R2, R3]
         { []
         }
     {offset
       cbPDj: // global
           _sbNIj::P64 = R3;
           _sbNIi::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbPDk; else goto cbPDl;
       cbPDl: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPDn; else goto cbPDm;
       cbPDn: // global
           HpAlloc = 24;
           goto cbPDk;
       cbPDk: // global
           R3 = _sbNIj::P64;
           R2 = _sbNIi::P64;
           R1 = Control.Arrow.$dmleft_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPDm: // global
           I64[Hp - 16] = sat_sbNIm_info;
           P64[Hp] = _sbNIi::P64;
           R2 = _sbNIi::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _sbNIj::P64;
           P64[Sp - 8] = Hp - 16;
           Sp = Sp - 24;
           call Control.Arrow.+++_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$dmleft_info" {
     Control.Arrow.$dmleft_info:
         const Control.Arrow.$dmleft_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.950378894 UTC

[section ""data" . lvl2_rbNC9_closure" {
     lvl2_rbNC9_closure:
         const lvl2_rbNC9_info;
 },
 lvl2_rbNC9_entry() //  [R2]
         { []
         }
     {offset
       cbPDJ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPDN; else goto cbPDM;
       cbPDN: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = lvl2_rbNC9_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPDM: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R2;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl2_rbNC9_info" {
     lvl2_rbNC9_info:
         const lvl2_rbNC9_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.95523729 UTC

[section ""data" . Control.Arrow.$dm&&&_closure" {
     Control.Arrow.$dm&&&_closure:
         const Control.Arrow.$dm&&&_info;
 },
 sat_sbNIt_entry() //  [R1]
         { []
         }
     {offset
       cbPE1: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPE2; else goto cbPE3;
       cbPE2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPE3: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = lvl2_rbNC9_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNIt_info" {
     sat_sbNIt_info:
         const sat_sbNIt_entry;
         const 1;
         const 16;
 },
 sat_sbNIs_entry() //  [R1]
         { []
         }
     {offset
       cbPE8: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cbPE9; else goto cbPEa;
       cbPE9: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPEa: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Control.Arrow.***_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNIs_info" {
     sat_sbNIs_info:
         const sat_sbNIs_entry;
         const 3;
         const 15;
 },
 Control.Arrow.$dm&&&_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPEd: // global
           _sbNIq::P64 = R4;
           _sbNIp::P64 = R3;
           _sbNIo::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbPEe; else goto cbPEf;
       cbPEf: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbPEh; else goto cbPEg;
       cbPEh: // global
           HpAlloc = 64;
           goto cbPEe;
       cbPEe: // global
           R4 = _sbNIq::P64;
           R3 = _sbNIp::P64;
           R2 = _sbNIo::P64;
           R1 = Control.Arrow.$dm&&&_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPEg: // global
           I64[Hp - 56] = sat_sbNIt_info;
           P64[Hp - 40] = _sbNIo::P64;
           I64[Hp - 32] = sat_sbNIs_info;
           P64[Hp - 16] = _sbNIo::P64;
           P64[Hp - 8] = _sbNIp::P64;
           P64[Hp] = _sbNIq::P64;
           I64[Sp - 24] = block_cbPEb_info;
           R2 = _sbNIo::P64;
           P64[Sp - 16] = Hp - 56;
           P64[Sp - 8] = Hp - 32;
           Sp = Sp - 24;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$dm&&&_info" {
     Control.Arrow.$dm&&&_info:
         const Control.Arrow.$dm&&&_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbPEb() //  [R1]
         { []
         }
     {offset
       cbPEb: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           _cbPDX::P64 = P64[Sp + 8];
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = _cbPDX::P64;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPEb_info" {
     block_cbPEb_info:
         const _cbPEb;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.964324895 UTC

[section ""data" . swap_rbNCa_closure" {
     swap_rbNCa_closure:
         const swap_rbNCa_info;
 },
 swap_rbNCa_entry() //  [R2]
         { []
         }
     {offset
       cbPEN: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cbPER; else goto cbPEQ;
       cbPER: // global
           HpAlloc = 72;
           R2 = R2;
           R1 = swap_rbNCa_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPEQ: // global
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = stg_sel_1_upd_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 64;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . swap_rbNCa_info" {
     swap_rbNCa_info:
         const swap_rbNCa_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.972431499 UTC

[section ""data" . Control.Arrow.$dm***_closure" {
     Control.Arrow.$dm***_closure:
         const Control.Arrow.$dm***_info;
 },
 sat_sbNIK_entry() //  [R1]
         { []
         }
     {offset
       cbPFj: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPFk; else goto cbPFl;
       cbPFk: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPFl: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Control.Arrow.first_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNIK_info" {
     sat_sbNIK_info:
         const sat_sbNIK_entry;
         const 2;
         const 18;
 },
 sat_sbNIJ_entry() //  [R1]
         { []
         }
     {offset
       cbPFq: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPFr; else goto cbPFs;
       cbPFr: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPFs: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = swap_rbNCa_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNIJ_info" {
     sat_sbNIJ_info:
         const sat_sbNIJ_entry;
         const 1;
         const 16;
 },
 sat_sbNIL_entry() //  [R1]
         { []
         }
     {offset
       cbPFt: // global
           _sbNIL::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbPFu; else goto cbPFv;
       cbPFv: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cbPFx; else goto cbPFw;
       cbPFx: // global
           HpAlloc = 56;
           goto cbPFu;
       cbPFu: // global
           R1 = _sbNIL::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPFw: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNIL::P64;
           _sbNID::P64 = P64[_sbNIL::P64 + 16];
           _sbNIE::P64 = P64[_sbNIL::P64 + 24];
           _sbNIG::P64 = P64[_sbNIL::P64 + 32];
           I64[Hp - 48] = sat_sbNIK_info;
           P64[Hp - 32] = _sbNID::P64;
           P64[Hp - 24] = _sbNIE::P64;
           I64[Hp - 16] = sat_sbNIJ_info;
           P64[Hp] = _sbNID::P64;
           R2 = _sbNIG::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Hp - 16;
           P64[Sp - 24] = Hp - 48;
           Sp = Sp - 40;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNIL_info" {
     sat_sbNIL_info:
         const sat_sbNIL_entry;
         const 3;
         const 15;
 },
 sat_sbNII_entry() //  [R1]
         { []
         }
     {offset
       cbPFC: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPFD; else goto cbPFE;
       cbPFD: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPFE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Control.Arrow.first_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNII_info" {
     sat_sbNII_info:
         const sat_sbNII_entry;
         const 2;
         const 18;
 },
 sat_sbNIM_entry() //  [R1]
         { []
         }
     {offset
       cbPFF: // global
           _sbNIM::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbPFG; else goto cbPFH;
       cbPFH: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cbPFJ; else goto cbPFI;
       cbPFJ: // global
           HpAlloc = 72;
           goto cbPFG;
       cbPFG: // global
           R1 = _sbNIM::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPFI: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNIM::P64;
           _sbNID::P64 = P64[_sbNIM::P64 + 16];
           _sbNIE::P64 = P64[_sbNIM::P64 + 24];
           _sbNIF::P64 = P64[_sbNIM::P64 + 32];
           _sbNIG::P64 = P64[_sbNIM::P64 + 40];
           I64[Hp - 64] = sat_sbNIL_info;
           P64[Hp - 48] = _sbNID::P64;
           P64[Hp - 40] = _sbNIE::P64;
           P64[Hp - 32] = _sbNIG::P64;
           I64[Hp - 24] = sat_sbNII_info;
           P64[Hp - 8] = _sbNID::P64;
           P64[Hp] = _sbNIF::P64;
           R2 = _sbNIG::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Hp - 24;
           P64[Sp - 24] = Hp - 64;
           Sp = Sp - 40;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNIM_info" {
     sat_sbNIM_info:
         const sat_sbNIM_entry;
         const 4;
         const 15;
 },
 sat_sbNIH_entry() //  [R1]
         { []
         }
     {offset
       cbPFO: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPFP; else goto cbPFQ;
       cbPFP: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPFQ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = swap_rbNCa_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNIH_info" {
     sat_sbNIH_info:
         const sat_sbNIH_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$dm***_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPFR: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPFS; else goto cbPFT;
       cbPFS: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$dm***_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPFT: // global
           I64[Sp - 32] = block_cbPF3_info;
           _sbNID::P64 = R2;
           R2 = R2;
           P64[Sp - 24] = _sbNID::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$dm***_info" {
     Control.Arrow.$dm***_info:
         const Control.Arrow.$dm***_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbPF3() //  [R1]
         { []
         }
     {offset
       cbPF3: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cbPFW; else goto cbPFV;
       cbPFW: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbPFV: // global
           I64[Hp - 64] = sat_sbNIM_info;
           _sbNID::P64 = P64[Sp + 8];
           P64[Hp - 48] = _sbNID::P64;
           P64[Hp - 40] = P64[Sp + 16];
           P64[Hp - 32] = P64[Sp + 24];
           P64[Hp - 24] = R1;
           I64[Hp - 16] = sat_sbNIH_info;
           P64[Hp] = _sbNID::P64;
           R2 = R1;
           I64[Sp + 8] = stg_ap_pp_info;
           P64[Sp + 16] = Hp - 16;
           P64[Sp + 24] = Hp - 64;
           Sp = Sp + 8;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPF3_info" {
     block_cbPF3_info:
         const _cbPF3;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:40.99204415 UTC

[section ""data" . Control.Arrow.$fArrowKleisli2_closure" {
     Control.Arrow.$fArrowKleisli2_closure:
         const Control.Arrow.$fArrowKleisli2_info;
 },
 sat_sbNJg_entry() //  [R1, R2]
         { []
         }
     {offset
       cbPGP: // global
           _sbNJ6::P64 = R2;
           _sbNJg::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbPGQ; else goto cbPGR;
       cbPGR: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cbPGT; else goto cbPGS;
       cbPGT: // global
           HpAlloc = 72;
           goto cbPGQ;
       cbPGQ: // global
           R2 = _sbNJ6::P64;
           R1 = _sbNJg::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPGS: // global
           _sbNIN::P64 = P64[_sbNJg::P64 + 7];
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = _sbNJ6::P64;
           I64[Hp - 40] = stg_sel_1_upd_info;
           P64[Hp - 24] = _sbNJ6::P64;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 64;
           R2 = _sbNIN::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 15;
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNJg_info" {
     sat_sbNJg_info:
         const sat_sbNJg_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbNJ4_entry() //  [R1, R2]
         { []
         }
     {offset
       cbPH3: // global
           R4 = R2;
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           call Control.Arrow.$fArrowKleisli3_entry(R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNJ4_info" {
     sat_sbNJ4_info:
         const sat_sbNJ4_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_sbNJ2_entry() //  [R1, R2]
         { []
         }
     {offset
       cbPHi: // global
           _sbNIS::P64 = R2;
           _sbNJ2::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbPHj; else goto cbPHk;
       cbPHk: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cbPHm; else goto cbPHl;
       cbPHm: // global
           HpAlloc = 72;
           goto cbPHj;
       cbPHj: // global
           R2 = _sbNIS::P64;
           R1 = _sbNJ2::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPHl: // global
           _sbNIN::P64 = P64[_sbNJ2::P64 + 7];
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = _sbNIS::P64;
           I64[Hp - 40] = stg_sel_1_upd_info;
           P64[Hp - 24] = _sbNIS::P64;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 64;
           R2 = _sbNIN::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 15;
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNJ2_info" {
     sat_sbNJ2_info:
         const sat_sbNJ2_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbNIR_entry() //  [R1]
         { []
         }
     {offset
       cbPHr: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPHs; else goto cbPHt;
       cbPHs: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPHt: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fArrowKleisli3_entry(R4,
                                                    R3,
                                                    R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNIR_info" {
     sat_sbNIR_info:
         const sat_sbNIR_entry;
         const 3;
         const 15;
 },
 sat_sbNJ3_entry() //  [R1]
         { []
         }
     {offset
       cbPHu: // global
           _sbNJ3::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbPHv; else goto cbPHw;
       cbPHw: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cbPHy; else goto cbPHx;
       cbPHy: // global
           HpAlloc = 56;
           goto cbPHv;
       cbPHv: // global
           R1 = _sbNJ3::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPHx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNJ3::P64;
           _sbNIN::P64 = P64[_sbNJ3::P64 + 16];
           _sbNIO::P64 = P64[_sbNJ3::P64 + 24];
           _sbNIQ::P64 = P64[_sbNJ3::P64 + 32];
           I64[Hp - 48] = sat_sbNJ2_info;
           P64[Hp - 40] = _sbNIN::P64;
           I64[Hp - 32] = sat_sbNIR_info;
           P64[Hp - 16] = _sbNIN::P64;
           P64[Hp - 8] = _sbNIO::P64;
           P64[Hp] = _sbNIQ::P64;
           R2 = _sbNIN::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Hp - 32;
           P64[Sp - 24] = Hp - 47;
           Sp = Sp - 40;
           call GHC.Base.>>=_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNJ3_info" {
     sat_sbNJ3_info:
         const sat_sbNJ3_entry;
         const 3;
         const 15;
 },
 sat_sbNJ5_entry() //  [R1]
         { []
         }
     {offset
       cbPHz: // global
           _sbNJ5::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbPHA; else goto cbPHB;
       cbPHB: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbPHD; else goto cbPHC;
       cbPHD: // global
           HpAlloc = 64;
           goto cbPHA;
       cbPHA: // global
           R1 = _sbNJ5::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPHC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNJ5::P64;
           _sbNIN::P64 = P64[_sbNJ5::P64 + 16];
           _sbNIO::P64 = P64[_sbNJ5::P64 + 24];
           _sbNIP::P64 = P64[_sbNJ5::P64 + 32];
           _sbNIQ::P64 = P64[_sbNJ5::P64 + 40];
           I64[Hp - 56] = sat_sbNJ4_info;
           P64[Hp - 48] = _sbNIN::P64;
           P64[Hp - 40] = _sbNIP::P64;
           I64[Hp - 32] = sat_sbNJ3_info;
           P64[Hp - 16] = _sbNIN::P64;
           P64[Hp - 8] = _sbNIO::P64;
           P64[Hp] = _sbNIQ::P64;
           R2 = _sbNIN::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Hp - 32;
           P64[Sp - 24] = Hp - 55;
           Sp = Sp - 40;
           call GHC.Base.>>=_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNJ5_info" {
     sat_sbNJ5_info:
         const sat_sbNJ5_entry;
         const 4;
         const 15;
 },
 Control.Arrow.$fArrowKleisli2_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       cbPHE: // global
           _sbNIQ::P64 = R5;
           _sbNIP::P64 = R4;
           _sbNIO::P64 = R3;
           _sbNIN::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbPHF; else goto cbPHG;
       cbPHG: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbPHI; else goto cbPHH;
       cbPHI: // global
           HpAlloc = 64;
           goto cbPHF;
       cbPHF: // global
           R5 = _sbNIQ::P64;
           R4 = _sbNIP::P64;
           R3 = _sbNIO::P64;
           R2 = _sbNIN::P64;
           R1 = Control.Arrow.$fArrowKleisli2_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPHH: // global
           I64[Hp - 56] = sat_sbNJg_info;
           P64[Hp - 48] = _sbNIN::P64;
           I64[Hp - 40] = sat_sbNJ5_info;
           P64[Hp - 24] = _sbNIN::P64;
           P64[Hp - 16] = _sbNIO::P64;
           P64[Hp - 8] = _sbNIP::P64;
           P64[Hp] = _sbNIQ::P64;
           R2 = _sbNIN::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 40;
           P64[Sp - 8] = Hp - 55;
           Sp = Sp - 24;
           call GHC.Base.>>=_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowKleisli2_info" {
     Control.Arrow.$fArrowKleisli2_info:
         const Control.Arrow.$fArrowKleisli2_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.008226733 UTC

[section ""data" . Control.Arrow.$fArrowKleisli1_closure" {
     Control.Arrow.$fArrowKleisli1_closure:
         const Control.Arrow.$fArrowKleisli1_info;
 },
 sat_sbNJn_entry() //  [R1, R2]
         { []
         }
     {offset
       cbPIw: // global
           R5 = R2;
           R4 = P64[R1 + 23];
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           call Control.Arrow.$fArrowKleisli2_entry(R5,
                                                    R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNJn_info" {
     sat_sbNJn_info:
         const sat_sbNJn_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 sat_sbNJm_entry() //  [R1]
         { []
         }
     {offset
       cbPIE: // global
           _sbNJm::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cbPIF; else goto cbPIG;
       cbPIG: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPII; else goto cbPIH;
       cbPII: // global
           HpAlloc = 24;
           goto cbPIF;
       cbPIF: // global
           R1 = _sbNJm::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPIH: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNJm::P64;
           _sbNJh::P64 = P64[_sbNJm::P64 + 16];
           _sbNJk::P64 = P64[_sbNJm::P64 + 24];
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = _sbNJk::P64;
           P64[Hp] = _sbNJk::P64;
           R2 = _sbNJh::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 15;
           Sp = Sp - 32;
           call GHC.Base.return_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNJm_info" {
     sat_sbNJm_info:
         const sat_sbNJm_entry;
         const 2;
         const 18;
 },
 Control.Arrow.$fArrowKleisli1_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       cbPIJ: // global
           _sbNJk::P64 = R5;
           _sbNJj::P64 = R4;
           _sbNJi::P64 = R3;
           _sbNJh::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbPIK; else goto cbPIL;
       cbPIL: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbPIN; else goto cbPIM;
       cbPIN: // global
           HpAlloc = 64;
           goto cbPIK;
       cbPIK: // global
           R5 = _sbNJk::P64;
           R4 = _sbNJj::P64;
           R3 = _sbNJi::P64;
           R2 = _sbNJh::P64;
           R1 = Control.Arrow.$fArrowKleisli1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPIM: // global
           I64[Hp - 56] = sat_sbNJn_info;
           P64[Hp - 48] = _sbNJh::P64;
           P64[Hp - 40] = _sbNJi::P64;
           P64[Hp - 32] = _sbNJj::P64;
           I64[Hp - 24] = sat_sbNJm_info;
           P64[Hp - 8] = _sbNJh::P64;
           P64[Hp] = _sbNJk::P64;
           R2 = _sbNJh::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 55;
           Sp = Sp - 24;
           call GHC.Base.>>=_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowKleisli1_info" {
     Control.Arrow.$fArrowKleisli1_info:
         const Control.Arrow.$fArrowKleisli1_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.019201615 UTC

[section ""data" . Control.Arrow.$fArrowKleisli_closure" {
     Control.Arrow.$fArrowKleisli_closure:
         const Control.Arrow.$fArrowKleisli_info;
 },
 sat_sbNJu_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cbPJc: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Control.Arrow.$fArrowKleisli1_entry(R5,
                                                    R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNJu_info" {
     sat_sbNJu_info:
         const sat_sbNJu_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sbNJt_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cbPJk: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Control.Arrow.$fArrowKleisli2_entry(R5,
                                                    R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNJt_info" {
     sat_sbNJt_info:
         const sat_sbNJt_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sbNJs_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbPJs: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fArrowKleisli4_entry(R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNJs_info" {
     sat_sbNJs_info:
         const sat_sbNJs_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbNJr_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbPJA: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fArrowKleisli3_entry(R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNJr_info" {
     sat_sbNJr_info:
         const sat_sbNJr_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbNJq_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbPJI: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fArrowKleisli5_entry(R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNJq_info" {
     sat_sbNJq_info:
         const sat_sbNJq_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbNJp_entry() //  [R1]
         { []
         }
     {offset
       cbPJP: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPJQ; else goto cbPJR;
       cbPJQ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPJR: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fCategoryTYPEKleisli_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNJp_info" {
     sat_sbNJp_info:
         const sat_sbNJp_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fArrowKleisli_entry() //  [R2]
         { []
         }
     {offset
       cbPJT: // global
           Hp = Hp + 160;
           if (Hp > HpLim) (likely: False) goto cbPJX; else goto cbPJW;
       cbPJX: // global
           HpAlloc = 160;
           R2 = R2;
           R1 = Control.Arrow.$fArrowKleisli_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPJW: // global
           I64[Hp - 152] = sat_sbNJu_info;
           P64[Hp - 144] = R2;
           I64[Hp - 136] = sat_sbNJt_info;
           P64[Hp - 128] = R2;
           I64[Hp - 120] = sat_sbNJs_info;
           P64[Hp - 112] = R2;
           I64[Hp - 104] = sat_sbNJr_info;
           P64[Hp - 96] = R2;
           I64[Hp - 88] = sat_sbNJq_info;
           P64[Hp - 80] = R2;
           I64[Hp - 72] = sat_sbNJp_info;
           P64[Hp - 56] = R2;
           I64[Hp - 48] = Control.Arrow.C:Arrow_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 86;
           P64[Hp - 24] = Hp - 102;
           P64[Hp - 16] = Hp - 118;
           P64[Hp - 8] = Hp - 133;
           P64[Hp] = Hp - 149;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowKleisli_info" {
     Control.Arrow.$fArrowKleisli_info:
         const Control.Arrow.$fArrowKleisli_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.032239915 UTC

[section ""data" . Control.Arrow.$fArrowLoopKleisli_$cp1ArrowLoop_closure" {
     Control.Arrow.$fArrowLoopKleisli_$cp1ArrowLoop_closure:
         const Control.Arrow.$fArrowLoopKleisli_$cp1ArrowLoop_info;
 },
 sat_sbNJw_entry() //  [R1]
         { []
         }
     {offset
       cbPKA: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPKB; else goto cbPKC;
       cbPKB: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPKC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Monad.Fix.$p1MonadFix_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNJw_info" {
     sat_sbNJw_info:
         const sat_sbNJw_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fArrowLoopKleisli_$cp1ArrowLoop_entry() //  [R2]
         { []
         }
     {offset
       cbPKD: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPKH; else goto cbPKG;
       cbPKH: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Control.Arrow.$fArrowLoopKleisli_$cp1ArrowLoop_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPKG: // global
           I64[Hp - 16] = sat_sbNJw_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           call Control.Arrow.$fArrowKleisli_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowLoopKleisli_$cp1ArrowLoop_info" {
     Control.Arrow.$fArrowLoopKleisli_$cp1ArrowLoop_info:
         const Control.Arrow.$fArrowLoopKleisli_$cp1ArrowLoop_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.038336355 UTC

[section ""data" . Control.Arrow.$fArrowLoopKleisli_closure" {
     Control.Arrow.$fArrowLoopKleisli_closure:
         const Control.Arrow.$fArrowLoopKleisli_info;
 },
 sat_sbNJz_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbPKZ: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fArrowLoopKleisli1_entry(R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNJz_info" {
     sat_sbNJz_info:
         const sat_sbNJz_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbNJy_entry() //  [R1]
         { []
         }
     {offset
       cbPL6: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPL7; else goto cbPL8;
       cbPL7: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPL8: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fArrowLoopKleisli_$cp1ArrowLoop_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNJy_info" {
     sat_sbNJy_info:
         const sat_sbNJy_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fArrowLoopKleisli_entry() //  [R2]
         { []
         }
     {offset
       cbPLa: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbPLe; else goto cbPLd;
       cbPLe: // global
           HpAlloc = 64;
           R2 = R2;
           R1 = Control.Arrow.$fArrowLoopKleisli_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPLd: // global
           I64[Hp - 56] = sat_sbNJz_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = sat_sbNJy_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = Control.Arrow.C:ArrowLoop_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 54;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowLoopKleisli_info" {
     Control.Arrow.$fArrowLoopKleisli_info:
         const Control.Arrow.$fArrowLoopKleisli_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.04575212 UTC

[section ""data" . lvl3_rbNCb_closure" {
     lvl3_rbNCb_closure:
         const lvl3_rbNCb_info;
 },
 lvl3_rbNCb_entry() //  [R2]
         { []
         }
     {offset
       cbPLA: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbPLB; else goto cbPLC;
       cbPLB: // global
           R2 = R2;
           R1 = lvl3_rbNCb_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPLC: // global
           I64[Sp - 8] = block_cbPLx_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubPLG; else goto cbPLy;
       ubPLG: // global
           call _cbPLx(R1) args: 0, res: 0, upd: 0;
       cbPLy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . lvl3_rbNCb_info" {
     lvl3_rbNCb_info:
         const lvl3_rbNCb_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbPLx() //  [R1]
         { []
         }
     {offset
       cbPLx: // global
           R2 = P64[R1 + 15];
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPLx_info" {
     block_cbPLx_info:
         const _cbPLx;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.051691744 UTC

[section ""data" . Control.Arrow.$fArrowApplyKleisli_closure" {
     Control.Arrow.$fArrowApplyKleisli_closure:
         const Control.Arrow.$fArrowApplyKleisli_info;
 },
 sat_sbNJF_entry() //  [R1]
         { []
         }
     {offset
       cbPLY: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPLZ; else goto cbPM0;
       cbPLZ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPM0: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fArrowKleisli_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNJF_info" {
     sat_sbNJF_info:
         const sat_sbNJF_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fArrowApplyKleisli_entry() //  [R2]
         { []
         }
     {offset
       cbPM2: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cbPM6; else goto cbPM5;
       cbPM6: // global
           HpAlloc = 48;
           R2 = R2;
           R1 = Control.Arrow.$fArrowApplyKleisli_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPM5: // global
           I64[Hp - 40] = sat_sbNJF_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = Control.Arrow.C:ArrowApply_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = lvl3_rbNCb_closure+1;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowApplyKleisli_info" {
     Control.Arrow.$fArrowApplyKleisli_info:
         const Control.Arrow.$fArrowApplyKleisli_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.059389801 UTC

[section ""data" . Control.Arrow.$fArrowChoiceKleisli1_closure" {
     Control.Arrow.$fArrowChoiceKleisli1_closure:
         const Control.Arrow.$fArrowChoiceKleisli1_info;
 },
 sat_sbNJP_entry() //  [R1, R2]
         { []
         }
     {offset
       cbPMw: // global
           _sbNJN::P64 = R2;
           _sbNJP::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbPMx; else goto cbPMy;
       cbPMy: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbPMA; else goto cbPMz;
       cbPMA: // global
           HpAlloc = 16;
           goto cbPMx;
       cbPMx: // global
           R2 = _sbNJN::P64;
           R1 = _sbNJP::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPMz: // global
           _sbNJG::P64 = P64[_sbNJP::P64 + 7];
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = _sbNJN::P64;
           R2 = _sbNJG::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 7;
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNJP_info" {
     sat_sbNJP_info:
         const sat_sbNJP_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbNJU_entry() //  [R1, R2]
         { []
         }
     {offset
       cbPMJ: // global
           _sbNJS::P64 = R2;
           _sbNJU::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbPMK; else goto cbPML;
       cbPML: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbPMN; else goto cbPMM;
       cbPMN: // global
           HpAlloc = 16;
           goto cbPMK;
       cbPMK: // global
           R2 = _sbNJS::P64;
           R1 = _sbNJU::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPMM: // global
           _sbNJG::P64 = P64[_sbNJU::P64 + 7];
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = _sbNJS::P64;
           R2 = _sbNJG::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 6;
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNJU_info" {
     sat_sbNJU_info:
         const sat_sbNJU_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Control.Arrow.$fArrowChoiceKleisli1_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       cbPMS: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPMT; else goto cbPMU;
       cbPMT: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fArrowChoiceKleisli1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPMU: // global
           I64[Sp - 32] = block_cbPMl_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto ubPN3; else goto cbPMm;
       ubPN3: // global
           call _cbPMl(R1) args: 0, res: 0, upd: 0;
       cbPMm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowChoiceKleisli1_info" {
     Control.Arrow.$fArrowChoiceKleisli1_info:
         const Control.Arrow.$fArrowChoiceKleisli1_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _cbPMl() //  [R1]
         { []
         }
     {offset
       cbPMl: // global
           _sbNJG::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto cbPMP; else goto cbPMQ;
       cbPMP: // global
           Hp = Hp + 48;
           _sbNJK::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cbPN0; else goto cbPMW;
       cbPMW: // global
           _sbNJL::P64 = P64[_sbNJK::P64 + 7];
           I64[Hp - 40] = sat_sbNJP_info;
           P64[Hp - 32] = _sbNJG::P64;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = _sbNJL::P64;
           R2 = _sbNJG::P64;
           I64[Sp + 8] = stg_ap_pp_info;
           P64[Sp + 16] = Hp - 24;
           P64[Sp + 24] = Hp - 39;
           Sp = Sp + 8;
           call GHC.Base.>>=_entry(R2) args: 32, res: 0, upd: 8;
       cbPMQ: // global
           Hp = Hp + 48;
           _sbNJK::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cbPN0; else goto cbPMZ;
       cbPN0: // global
           HpAlloc = 48;
           R1 = _sbNJK::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbPMZ: // global
           _sbNJQ::P64 = P64[_sbNJK::P64 + 6];
           I64[Hp - 40] = sat_sbNJU_info;
           P64[Hp - 32] = _sbNJG::P64;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 24];
           P64[Hp] = _sbNJQ::P64;
           R2 = _sbNJG::P64;
           I64[Sp + 8] = stg_ap_pp_info;
           P64[Sp + 16] = Hp - 24;
           P64[Sp + 24] = Hp - 39;
           Sp = Sp + 8;
           call GHC.Base.>>=_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPMl_info" {
     block_cbPMl_info:
         const _cbPMl;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.069973318 UTC

[section ""data" . Control.Arrow.$fArrowChoiceKleisli3_closure" {
     Control.Arrow.$fArrowChoiceKleisli3_closure:
         const Control.Arrow.$fArrowChoiceKleisli3_info;
 },
 sat_sbNJZ_entry() //  [R1, R2]
         { []
         }
     {offset
       cbPNE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPNF; else goto cbPNG;
       cbPNF: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPNG: // global
           _sbNJY::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = _sbNJY::P64;
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNJZ_info" {
     sat_sbNJZ_info:
         const sat_sbNJZ_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Control.Arrow.$fArrowChoiceKleisli3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPNH: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbPNL; else goto cbPNK;
       cbPNL: // global
           HpAlloc = 16;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fArrowChoiceKleisli3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPNK: // global
           I64[Hp - 8] = sat_sbNJZ_info;
           P64[Hp] = R2;
           R5 = R4;
           R4 = Hp - 7;
           R3 = R3;
           R2 = R2;
           call Control.Arrow.$fArrowChoiceKleisli1_entry(R5,
                                                          R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowChoiceKleisli3_info" {
     Control.Arrow.$fArrowChoiceKleisli3_info:
         const Control.Arrow.$fArrowChoiceKleisli3_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.075939322 UTC

[section ""data" . Control.Arrow.$fArrowChoiceKleisli2_closure" {
     Control.Arrow.$fArrowChoiceKleisli2_closure:
         const Control.Arrow.$fArrowChoiceKleisli2_info;
 },
 sat_sbNK4_entry() //  [R1, R2]
         { []
         }
     {offset
       cbPO3: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPO4; else goto cbPO5;
       cbPO4: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPO5: // global
           _sbNK3::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = _sbNK3::P64;
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNK4_info" {
     sat_sbNK4_info:
         const sat_sbNK4_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Control.Arrow.$fArrowChoiceKleisli2_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPO6: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbPOa; else goto cbPO9;
       cbPOa: // global
           HpAlloc = 16;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fArrowChoiceKleisli2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPO9: // global
           I64[Hp - 8] = sat_sbNK4_info;
           P64[Hp] = R2;
           R5 = R4;
           R4 = R3;
           R3 = Hp - 7;
           R2 = R2;
           call Control.Arrow.$fArrowChoiceKleisli1_entry(R5,
                                                          R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowChoiceKleisli2_info" {
     Control.Arrow.$fArrowChoiceKleisli2_info:
         const Control.Arrow.$fArrowChoiceKleisli2_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.082244883 UTC

[section ""data" . lvl4_rbNCc_closure" {
     lvl4_rbNCc_closure:
         const lvl4_rbNCc_info;
 },
 lvl4_rbNCc_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPOn: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Data.Either.either_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl4_rbNCc_info" {
     lvl4_rbNCc_info:
         const lvl4_rbNCc_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.087154409 UTC

[section ""data" . Control.Arrow.$fArrowChoiceKleisli_closure" {
     Control.Arrow.$fArrowChoiceKleisli_closure:
         const Control.Arrow.$fArrowChoiceKleisli_info;
 },
 sat_sbNKc_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cbPOD: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Control.Arrow.$fArrowChoiceKleisli1_entry(R5,
                                                          R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNKc_info" {
     sat_sbNKc_info:
         const sat_sbNKc_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sbNKb_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbPOL: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fArrowChoiceKleisli2_entry(R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNKb_info" {
     sat_sbNKb_info:
         const sat_sbNKb_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbNKa_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbPOT: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fArrowChoiceKleisli3_entry(R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNKa_info" {
     sat_sbNKa_info:
         const sat_sbNKa_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbNK9_entry() //  [R1]
         { []
         }
     {offset
       cbPP0: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPP1; else goto cbPP2;
       cbPP1: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPP2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fArrowKleisli_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNK9_info" {
     sat_sbNK9_info:
         const sat_sbNK9_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fArrowChoiceKleisli_entry() //  [R2]
         { []
         }
     {offset
       cbPP4: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto cbPP8; else goto cbPP7;
       cbPP8: // global
           HpAlloc = 120;
           R2 = R2;
           R1 = Control.Arrow.$fArrowChoiceKleisli_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPP7: // global
           I64[Hp - 112] = sat_sbNKc_info;
           P64[Hp - 104] = R2;
           I64[Hp - 96] = sat_sbNKb_info;
           P64[Hp - 88] = R2;
           I64[Hp - 80] = sat_sbNKa_info;
           P64[Hp - 72] = R2;
           I64[Hp - 64] = sat_sbNK9_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = Control.Arrow.C:ArrowChoice_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 78;
           P64[Hp - 16] = Hp - 94;
           P64[Hp - 8] = Hp - 109;
           P64[Hp] = lvl4_rbNCc_closure+3;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowChoiceKleisli_info" {
     Control.Arrow.$fArrowChoiceKleisli_info:
         const Control.Arrow.$fArrowChoiceKleisli_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.098358312 UTC

[section ""data" . Control.Arrow.$fArrowZeroKleisli_$cp1ArrowZero_closure" {
     Control.Arrow.$fArrowZeroKleisli_$cp1ArrowZero_closure:
         const Control.Arrow.$fArrowZeroKleisli_$cp1ArrowZero_info;
 },
 sat_sbNKe_entry() //  [R1]
         { []
         }
     {offset
       cbPPD: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPPE; else goto cbPPF;
       cbPPE: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPPF: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.$p2MonadPlus_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNKe_info" {
     sat_sbNKe_info:
         const sat_sbNKe_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fArrowZeroKleisli_$cp1ArrowZero_entry() //  [R2]
         { []
         }
     {offset
       cbPPG: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPPK; else goto cbPPJ;
       cbPPK: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Control.Arrow.$fArrowZeroKleisli_$cp1ArrowZero_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPPJ: // global
           I64[Hp - 16] = sat_sbNKe_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           call Control.Arrow.$fArrowKleisli_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowZeroKleisli_$cp1ArrowZero_info" {
     Control.Arrow.$fArrowZeroKleisli_$cp1ArrowZero_info:
         const Control.Arrow.$fArrowZeroKleisli_$cp1ArrowZero_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.104678682 UTC

[section ""data" . Control.Arrow.$fArrowZeroKleisli_closure" {
     Control.Arrow.$fArrowZeroKleisli_closure:
         const Control.Arrow.$fArrowZeroKleisli_info;
 },
 lvl5_sbNKg_entry() //  [R1]
         { []
         }
     {offset
       cbPQ1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPQ2; else goto cbPQ3;
       cbPQ2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPQ3: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.mzero_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl5_sbNKg_info" {
     lvl5_sbNKg_info:
         const lvl5_sbNKg_entry;
         const 1;
         const 16;
 },
 sat_sbNKj_entry() //  [R1]
         { []
         }
     {offset
       cbPQ9: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNKj_info" {
     sat_sbNKj_info:
         const sat_sbNKj_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbNKh_entry() //  [R1]
         { []
         }
     {offset
       cbPQg: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPQh; else goto cbPQi;
       cbPQh: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPQi: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fArrowZeroKleisli_$cp1ArrowZero_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNKh_info" {
     sat_sbNKh_info:
         const sat_sbNKh_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fArrowZeroKleisli_entry() //  [R2]
         { []
         }
     {offset
       cbPQk: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cbPQo; else goto cbPQn;
       cbPQo: // global
           HpAlloc = 88;
           R2 = R2;
           R1 = Control.Arrow.$fArrowZeroKleisli_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPQn: // global
           I64[Hp - 80] = lvl5_sbNKg_info;
           P64[Hp - 64] = R2;
           I64[Hp - 56] = sat_sbNKj_info;
           P64[Hp - 48] = Hp - 80;
           I64[Hp - 40] = sat_sbNKh_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = Control.Arrow.C:ArrowZero_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 55;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowZeroKleisli_info" {
     Control.Arrow.$fArrowZeroKleisli_info:
         const Control.Arrow.$fArrowZeroKleisli_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.113846314 UTC

[section ""data" . Control.Arrow.$fArrowPlusKleisli_closure" {
     Control.Arrow.$fArrowPlusKleisli_closure:
         const Control.Arrow.$fArrowPlusKleisli_info;
 },
 sat_sbNKm_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cbPQR: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Control.Arrow.$fArrowPlusKleisli1_entry(R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNKm_info" {
     sat_sbNKm_info:
         const sat_sbNKm_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sbNKl_entry() //  [R1]
         { []
         }
     {offset
       cbPQY: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPQZ; else goto cbPR0;
       cbPQZ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPR0: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fArrowZeroKleisli_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNKl_info" {
     sat_sbNKl_info:
         const sat_sbNKl_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fArrowPlusKleisli_entry() //  [R2]
         { []
         }
     {offset
       cbPR2: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbPR6; else goto cbPR5;
       cbPR6: // global
           HpAlloc = 64;
           R2 = R2;
           R1 = Control.Arrow.$fArrowPlusKleisli_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPR5: // global
           I64[Hp - 56] = sat_sbNKm_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = sat_sbNKl_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = Control.Arrow.C:ArrowPlus_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 53;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowPlusKleisli_info" {
     Control.Arrow.$fArrowPlusKleisli_info:
         const Control.Arrow.$fArrowPlusKleisli_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.121548245 UTC

[section ""data" . Control.Arrow.$dmsecond_closure" {
     Control.Arrow.$dmsecond_closure:
         const Control.Arrow.$dmsecond_info;
 },
 sat_sbNKp_entry() //  [R1]
         { []
         }
     {offset
       cbPRv: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cbPRw; else goto cbPRx;
       cbPRw: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPRx: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_cbPRt_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNKp_info" {
     sat_sbNKp_info:
         const sat_sbNKp_entry;
         const 1;
         const 16;
 },
 _cbPRt() //  [R1]
         { []
         }
     {offset
       cbPRt: // global
           R2 = R1;
           Sp = Sp + 8;
           call Control.Category.id_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbPRt_info" {
     block_cbPRt_info:
         const _cbPRt;
         const 0;
         const 30;
 },
 Control.Arrow.$dmsecond_entry() //  [R2]
         { []
         }
     {offset
       cbPRB: // global
           _sbNKn::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cbPRC; else goto cbPRD;
       cbPRD: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPRF; else goto cbPRE;
       cbPRF: // global
           HpAlloc = 24;
           goto cbPRC;
       cbPRC: // global
           R2 = _sbNKn::P64;
           R1 = Control.Arrow.$dmsecond_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPRE: // global
           I64[Hp - 16] = sat_sbNKp_info;
           P64[Hp] = _sbNKn::P64;
           R2 = _sbNKn::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 16;
           Sp = Sp - 16;
           call Control.Arrow.***_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$dmsecond_info" {
     Control.Arrow.$dmsecond_info:
         const Control.Arrow.$dmsecond_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.129970937 UTC

[section ""data" . Control.Arrow.$dmfirst_closure" {
     Control.Arrow.$dmfirst_closure:
         const Control.Arrow.$dmfirst_info;
 },
 sat_sbNKt_entry() //  [R1]
         { []
         }
     {offset
       cbPS3: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cbPS4; else goto cbPS5;
       cbPS4: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPS5: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_cbPS1_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNKt_info" {
     sat_sbNKt_info:
         const sat_sbNKt_entry;
         const 1;
         const 16;
 },
 _cbPS1() //  [R1]
         { []
         }
     {offset
       cbPS1: // global
           R2 = R1;
           Sp = Sp + 8;
           call Control.Category.id_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbPS1_info" {
     block_cbPS1_info:
         const _cbPS1;
         const 0;
         const 30;
 },
 Control.Arrow.$dmfirst_entry() //  [R2, R3]
         { []
         }
     {offset
       cbPS9: // global
           _sbNKr::P64 = R3;
           _sbNKq::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbPSa; else goto cbPSb;
       cbPSb: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPSd; else goto cbPSc;
       cbPSd: // global
           HpAlloc = 24;
           goto cbPSa;
       cbPSa: // global
           R3 = _sbNKr::P64;
           R2 = _sbNKq::P64;
           R1 = Control.Arrow.$dmfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPSc: // global
           I64[Hp - 16] = sat_sbNKt_info;
           P64[Hp] = _sbNKq::P64;
           R2 = _sbNKq::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _sbNKr::P64;
           P64[Sp - 8] = Hp - 16;
           Sp = Sp - 24;
           call Control.Arrow.***_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$dmfirst_info" {
     Control.Arrow.$dmfirst_info:
         const Control.Arrow.$dmfirst_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.137881708 UTC

[section ""data" . Control.Arrow.$cfirst_closure" {
     Control.Arrow.$cfirst_closure:
         const Control.Arrow.$cfirst_info;
 },
 sat_sbNKA_entry() //  [R1]
         { []
         }
     {offset
       cbPSB: // global
           _sbNKA::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbPSC; else goto cbPSD;
       cbPSD: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPSF; else goto cbPSE;
       cbPSF: // global
           HpAlloc = 24;
           goto cbPSC;
       cbPSC: // global
           R1 = _sbNKA::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPSE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNKA::P64;
           _sbNKu::P64 = P64[_sbNKA::P64 + 16];
           _sbNKv::P64 = P64[_sbNKA::P64 + 24];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _sbNKv::P64;
           R2 = Hp - 16;
           R1 = _sbNKu::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNKA_info" {
     sat_sbNKA_info:
         const sat_sbNKA_entry;
         const 2;
         const 18;
 },
 Control.Arrow.$cfirst_entry() //  [R2, R3]
         { []
         }
     {offset
       cbPSH: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cbPSL; else goto cbPSK;
       cbPSL: // global
           HpAlloc = 80;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPSK: // global
           I64[Hp - 72] = stg_sel_1_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = sat_sbNKA_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 72;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$cfirst_info" {
     Control.Arrow.$cfirst_info:
         const Control.Arrow.$cfirst_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.144473648 UTC

[section ""data" . Control.Arrow.$csecond_closure" {
     Control.Arrow.$csecond_closure:
         const Control.Arrow.$csecond_info;
 },
 sat_sbNKP_entry() //  [R1]
         { []
         }
     {offset
       cbPT6: // global
           _sbNKP::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbPT7; else goto cbPT8;
       cbPT8: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbPTa; else goto cbPT9;
       cbPTa: // global
           HpAlloc = 24;
           goto cbPT7;
       cbPT7: // global
           R1 = _sbNKP::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPT9: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNKP::P64;
           _sbNKF::P64 = P64[_sbNKP::P64 + 16];
           _sbNKG::P64 = P64[_sbNKP::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sbNKG::P64;
           R2 = Hp - 16;
           R1 = _sbNKF::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNKP_info" {
     sat_sbNKP_info:
         const sat_sbNKP_entry;
         const 2;
         const 18;
 },
 Control.Arrow.$csecond_entry() //  [R2, R3]
         { []
         }
     {offset
       cbPTd: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cbPTh; else goto cbPTg;
       cbPTh: // global
           HpAlloc = 80;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPTg: // global
           I64[Hp - 72] = sat_sbNKP_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 72;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$csecond_info" {
     Control.Arrow.$csecond_info:
         const Control.Arrow.$csecond_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.151011426 UTC

[section ""data" . Control.Arrow.$c&&&_closure" {
     Control.Arrow.$c&&&_closure:
         const Control.Arrow.$c&&&_info;
 },
 Control.Arrow.$c&&&_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPTA: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cbPTE; else goto cbPTD;
       cbPTE: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$c&&&_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPTD: // global
           I64[Hp - 80] = stg_ap_2_upd_info;
           P64[Hp - 64] = R3;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 80;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$c&&&_info" {
     Control.Arrow.$c&&&_info:
         const Control.Arrow.$c&&&_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.154916906 UTC

[section ""data" . Control.Arrow.$fArrow(->)_closure" {
     Control.Arrow.$fArrow(->)_closure:
         const Control.Arrow.C:Arrow_con_info;
         const Control.Category.$fCategoryTYPE(->)_closure;
         const Control.Arrow.$fArrow(->)_$carr_closure+1;
         const Control.Arrow.$cfirst_closure+2;
         const Control.Arrow.$csecond_closure+2;
         const Control.Arrow.$c***_closure+3;
         const Control.Arrow.$c&&&_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.156814339 UTC

[section ""data" . Control.Arrow.$fArrowLoop(->)_closure" {
     Control.Arrow.$fArrowLoop(->)_closure:
         const Control.Arrow.C:ArrowLoop_con_info;
         const Control.Arrow.$fArrow(->)_closure+1;
         const Control.Arrow.$fArrowLoop(->)_$cloop_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.158670701 UTC

[section ""data" . Control.Arrow.$fArrowApply(->)_closure" {
     Control.Arrow.$fArrowApply(->)_closure:
         const Control.Arrow.C:ArrowApply_con_info;
         const Control.Arrow.$fArrow(->)_closure+1;
         const Control.Arrow.$fAlternativeArrowMonad_$capp_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.162437089 UTC

[section ""data" . Control.Arrow.$c+++_closure" {
     Control.Arrow.$c+++_closure:
         const Control.Arrow.$c+++_info;
 },
 Control.Arrow.$c+++_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPU0: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cbPU1; else goto cbPU2;
       cbPU1: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$c+++_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPU2: // global
           I64[Sp - 24] = block_cbPTT_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto ubPUh; else goto cbPTU;
       ubPUh: // global
           call _cbPTT(R1) args: 0, res: 0, upd: 0;
       cbPTU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$c+++_info" {
     Control.Arrow.$c+++_info:
         const Control.Arrow.$c+++_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbPTT() //  [R1]
         { []
         }
     {offset
       cbPTT: // global
           if (R1 & 7 == 1) goto cbPTX; else goto cbPTY;
       cbPTX: // global
           Hp = Hp + 48;
           _sbNKY::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cbPUg; else goto cbPU8;
       cbPU8: // global
           _sbNKZ::P64 = P64[_sbNKY::P64 + 7];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sbNKZ::P64;
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cbPTY: // global
           Hp = Hp + 48;
           _sbNKY::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cbPUg; else goto cbPUf;
       cbPUg: // global
           HpAlloc = 48;
           R1 = _sbNKY::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbPUf: // global
           _sbNL1::P64 = P64[_sbNKY::P64 + 6];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 16];
           P64[Hp - 16] = _sbNL1::P64;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPTT_info" {
     block_cbPTT_info:
         const _cbPTT;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.17035528 UTC

[section ""data" . Control.Arrow.$cright_closure" {
     Control.Arrow.$cright_closure:
         const Control.Arrow.$cright_info;
 },
 Control.Arrow.$cright_entry() //  [R2, R3]
         { []
         }
     {offset
       cbPUK: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPUL; else goto cbPUM;
       cbPUL: // global
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$cright_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPUM: // global
           I64[Sp - 16] = block_cbPUD_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto ubPUX; else goto cbPUE;
       ubPUX: // global
           call _cbPUD(R1) args: 0, res: 0, upd: 0;
       cbPUE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$cright_info" {
     Control.Arrow.$cright_info:
         const Control.Arrow.$cright_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _cbPUD() //  [R1]
         { []
         }
     {offset
       cbPUD: // global
           if (R1 & 7 == 1) goto cbPUH; else goto cbPUI;
       cbPUH: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       cbPUI: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cbPUW; else goto cbPUV;
       cbPUW: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbPUV: // global
           _sbNL7::P64 = P64[R1 + 6];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sbNL7::P64;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPUD_info" {
     block_cbPUD_info:
         const _cbPUD;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.176915229 UTC

[section ""data" . Control.Arrow.$cleft_closure" {
     Control.Arrow.$cleft_closure:
         const Control.Arrow.$cleft_info;
 },
 Control.Arrow.$cleft_entry() //  [R2, R3]
         { []
         }
     {offset
       cbPVp: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPVq; else goto cbPVr;
       cbPVq: // global
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$cleft_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPVr: // global
           I64[Sp - 16] = block_cbPVi_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto ubPVC; else goto cbPVj;
       ubPVC: // global
           call _cbPVi(R1) args: 0, res: 0, upd: 0;
       cbPVj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$cleft_info" {
     Control.Arrow.$cleft_info:
         const Control.Arrow.$cleft_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _cbPVi() //  [R1]
         { []
         }
     {offset
       cbPVi: // global
           if (R1 & 7 == 1) goto cbPVm; else goto cbPVn;
       cbPVm: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cbPVy; else goto cbPVx;
       cbPVy: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbPVx: // global
           _sbNLc::P64 = P64[R1 + 7];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sbNLc::P64;
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cbPVn: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPVi_info" {
     block_cbPVi_info:
         const _cbPVi;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.182728367 UTC

[section ""data" . Control.Arrow.$fArrowChoice(->)_closure" {
     Control.Arrow.$fArrowChoice(->)_closure:
         const Control.Arrow.C:ArrowChoice_con_info;
         const Control.Arrow.$fArrow(->)_closure+1;
         const Control.Arrow.$cleft_closure+2;
         const Control.Arrow.$cright_closure+2;
         const Control.Arrow.$c+++_closure+3;
         const Data.Either.either_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.185025101 UTC

[section ""data" . Control.Arrow.runKleisli1_closure" {
     Control.Arrow.runKleisli1_closure:
         const Control.Arrow.runKleisli1_info;
 },
 Control.Arrow.runKleisli1_entry() //  [R2]
         { []
         }
     {offset
       cbPVY: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.runKleisli1_info" {
     Control.Arrow.runKleisli1_info:
         const Control.Arrow.runKleisli1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.188590217 UTC

[section ""data" . Control.Arrow.runKleisli_closure" {
     Control.Arrow.runKleisli_closure:
         const Control.Arrow.runKleisli_info;
 },
 Control.Arrow.runKleisli_entry() //  [R2]
         { []
         }
     {offset
       cbPW9: // global
           R2 = R2;
           call Control.Arrow.runKleisli1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.runKleisli_info" {
     Control.Arrow.runKleisli_info:
         const Control.Arrow.runKleisli_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.192175506 UTC

[section ""data" . Control.Arrow.returnA_closure" {
     Control.Arrow.returnA_closure:
         const Control.Arrow.returnA_info;
 },
 Control.Arrow.returnA_entry() //  [R2]
         { []
         }
     {offset
       cbPWk: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPWl; else goto cbPWm;
       cbPWl: // global
           R2 = R2;
           R1 = Control.Arrow.returnA_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPWm: // global
           R2 = R2;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = GHC.Base.id_closure+1;
           Sp = Sp - 16;
           call Control.Arrow.arr_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.returnA_info" {
     Control.Arrow.returnA_info:
         const Control.Arrow.returnA_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.196991136 UTC

[section ""data" . Control.Arrow.^>>_closure" {
     Control.Arrow.^>>_closure:
         const Control.Arrow.^>>_info;
 },
 sat_sbNLl_entry() //  [R1]
         { []
         }
     {offset
       cbPWA: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPWB; else goto cbPWC;
       cbPWB: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPWC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNLl_info" {
     sat_sbNLl_info:
         const sat_sbNLl_entry;
         const 2;
         const 18;
 },
 Control.Arrow.^>>_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPWF: // global
           _sbNLj::P64 = R4;
           _sbNLi::P64 = R3;
           _sbNLh::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbPWG; else goto cbPWH;
       cbPWH: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbPWJ; else goto cbPWI;
       cbPWJ: // global
           HpAlloc = 32;
           goto cbPWG;
       cbPWG: // global
           R4 = _sbNLj::P64;
           R3 = _sbNLi::P64;
           R2 = _sbNLh::P64;
           R1 = Control.Arrow.^>>_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPWI: // global
           I64[Hp - 24] = sat_sbNLl_info;
           P64[Hp - 8] = _sbNLh::P64;
           P64[Hp] = _sbNLi::P64;
           I64[Sp - 24] = block_cbPWD_info;
           R2 = _sbNLh::P64;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sbNLj::P64;
           Sp = Sp - 24;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.^>>_info" {
     Control.Arrow.^>>_info:
         const Control.Arrow.^>>_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbPWD() //  [R1]
         { []
         }
     {offset
       cbPWD: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           _cbPWw::P64 = P64[Sp + 8];
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = _cbPWw::P64;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPWD_info" {
     block_cbPWD_info:
         const _cbPWD;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.20610642 UTC

[section ""data" . Control.Arrow.>>^_closure" {
     Control.Arrow.>>^_closure:
         const Control.Arrow.>>^_info;
 },
 sat_sbNLq_entry() //  [R1]
         { []
         }
     {offset
       cbPXa: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPXb; else goto cbPXc;
       cbPXb: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPXc: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNLq_info" {
     sat_sbNLq_info:
         const sat_sbNLq_entry;
         const 2;
         const 18;
 },
 Control.Arrow.>>^_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPXf: // global
           _sbNLo::P64 = R4;
           _sbNLn::P64 = R3;
           _sbNLm::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbPXg; else goto cbPXh;
       cbPXh: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbPXj; else goto cbPXi;
       cbPXj: // global
           HpAlloc = 32;
           goto cbPXg;
       cbPXg: // global
           R4 = _sbNLo::P64;
           R3 = _sbNLn::P64;
           R2 = _sbNLm::P64;
           R1 = Control.Arrow.>>^_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPXi: // global
           I64[Hp - 24] = sat_sbNLq_info;
           P64[Hp - 8] = _sbNLm::P64;
           P64[Hp] = _sbNLo::P64;
           I64[Sp - 24] = block_cbPXd_info;
           R2 = _sbNLm::P64;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sbNLn::P64;
           Sp = Sp - 24;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.>>^_info" {
     Control.Arrow.>>^_info:
         const Control.Arrow.>>^_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbPXd() //  [R1]
         { []
         }
     {offset
       cbPXd: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPXd_info" {
     block_cbPXd_info:
         const _cbPXd;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.214168419 UTC

[section ""data" . Control.Arrow.<<^_closure" {
     Control.Arrow.<<^_closure:
         const Control.Arrow.<<^_info;
 },
 sat_sbNLv_entry() //  [R1]
         { []
         }
     {offset
       cbPXJ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPXK; else goto cbPXL;
       cbPXK: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPXL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNLv_info" {
     sat_sbNLv_info:
         const sat_sbNLv_entry;
         const 2;
         const 18;
 },
 Control.Arrow.<<^_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPXO: // global
           _sbNLt::P64 = R4;
           _sbNLs::P64 = R3;
           _sbNLr::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbPXP; else goto cbPXQ;
       cbPXQ: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbPXS; else goto cbPXR;
       cbPXS: // global
           HpAlloc = 32;
           goto cbPXP;
       cbPXP: // global
           R4 = _sbNLt::P64;
           R3 = _sbNLs::P64;
           R2 = _sbNLr::P64;
           R1 = Control.Arrow.<<^_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPXR: // global
           I64[Hp - 24] = sat_sbNLv_info;
           P64[Hp - 8] = _sbNLr::P64;
           P64[Hp] = _sbNLt::P64;
           I64[Sp - 24] = block_cbPXM_info;
           R2 = _sbNLr::P64;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sbNLs::P64;
           Sp = Sp - 24;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.<<^_info" {
     Control.Arrow.<<^_info:
         const Control.Arrow.<<^_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbPXM() //  [R1]
         { []
         }
     {offset
       cbPXM: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           _cbPXF::P64 = P64[Sp + 8];
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = _cbPXF::P64;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPXM_info" {
     block_cbPXM_info:
         const _cbPXM;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.223157363 UTC

[section ""data" . Control.Arrow.^<<_closure" {
     Control.Arrow.^<<_closure:
         const Control.Arrow.^<<_info;
 },
 sat_sbNLA_entry() //  [R1]
         { []
         }
     {offset
       cbPYj: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPYk; else goto cbPYl;
       cbPYk: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPYl: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNLA_info" {
     sat_sbNLA_info:
         const sat_sbNLA_entry;
         const 2;
         const 18;
 },
 Control.Arrow.^<<_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbPYo: // global
           _sbNLy::P64 = R4;
           _sbNLx::P64 = R3;
           _sbNLw::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbPYp; else goto cbPYq;
       cbPYq: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbPYs; else goto cbPYr;
       cbPYs: // global
           HpAlloc = 32;
           goto cbPYp;
       cbPYp: // global
           R4 = _sbNLy::P64;
           R3 = _sbNLx::P64;
           R2 = _sbNLw::P64;
           R1 = Control.Arrow.^<<_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbPYr: // global
           I64[Hp - 24] = sat_sbNLA_info;
           P64[Hp - 8] = _sbNLw::P64;
           P64[Hp] = _sbNLx::P64;
           I64[Sp - 24] = block_cbPYm_info;
           R2 = _sbNLw::P64;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sbNLy::P64;
           Sp = Sp - 24;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.^<<_info" {
     Control.Arrow.^<<_info:
         const Control.Arrow.^<<_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbPYm() //  [R1]
         { []
         }
     {offset
       cbPYm: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPYm_info" {
     block_cbPYm_info:
         const _cbPYm;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.2387637 UTC

[section ""data" . Control.Arrow.leftApp_closure" {
     Control.Arrow.leftApp_closure:
         const Control.Arrow.leftApp_info;
 },
 lvl5_sbNLG_entry() //  [R1]
         { []
         }
     {offset
       cbPZ4: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbPZ5; else goto cbPZ6;
       cbPZ5: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPZ6: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.Either.Left_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl5_sbNLG_info" {
     lvl5_sbNLG_info:
         const lvl5_sbNLG_entry;
         const 1;
         const 16;
 },
 sat_sbNLM_entry() //  [R1, R2]
         { []
         }
     {offset
       cbPZB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbPZC; else goto cbPZD;
       cbPZC: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbPZD: // global
           I64[Sp - 16] = block_cbPZy_info;
           _sbNLJ::P64 = P64[R1 + 7];
           R1 = R2;
           P64[Sp - 8] = _sbNLJ::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto ubPZH; else goto cbPZz;
       ubPZH: // global
           call _cbPZy() args: 0, res: 0, upd: 0;
       cbPZz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNLM_info" {
     sat_sbNLM_info:
         const sat_sbNLM_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _cbPZy() //  []
         { []
         }
     {offset
       cbPZy: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPZy_info" {
     block_cbPZy_info:
         const _cbPZy;
         const 1;
         const 30;
 },
 sat_sbNLN_entry() //  [R1]
         { []
         }
     {offset
       cbPZI: // global
           _sbNLN::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cbPZJ; else goto cbPZK;
       cbPZK: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbPZM; else goto cbPZL;
       cbPZM: // global
           HpAlloc = 16;
           goto cbPZJ;
       cbPZJ: // global
           R1 = _sbNLN::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPZL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNLN::P64;
           _sbNLD::P64 = P64[_sbNLN::P64 + 16];
           _sbNLJ::P64 = P64[_sbNLN::P64 + 24];
           I64[Hp - 8] = sat_sbNLM_info;
           P64[Hp] = _sbNLJ::P64;
           R2 = _sbNLD::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 7;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNLN_info" {
     sat_sbNLN_info:
         const sat_sbNLN_entry;
         const 2;
         const 18;
 },
 sat_sbNLO_entry() //  [R1]
         { []
         }
     {offset
       cbPZN: // global
           _sbNLO::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbPZO; else goto cbPZP;
       cbPZP: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbPZR; else goto cbPZQ;
       cbPZR: // global
           HpAlloc = 32;
           goto cbPZO;
       cbPZO: // global
           R1 = _sbNLO::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPZQ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNLO::P64;
           _sbNLC::P64 = P64[_sbNLO::P64 + 16];
           _sbNLD::P64 = P64[_sbNLO::P64 + 24];
           _sbNLE::P64 = P64[_sbNLO::P64 + 32];
           _sbNLJ::P64 = P64[_sbNLO::P64 + 40];
           I64[Hp - 24] = sat_sbNLN_info;
           P64[Hp - 8] = _sbNLD::P64;
           P64[Hp] = _sbNLJ::P64;
           R2 = _sbNLE::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _sbNLC::P64;
           P64[Sp - 24] = Hp - 24;
           Sp = Sp - 40;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNLO_info" {
     sat_sbNLO_info:
         const sat_sbNLO_entry;
         const 4;
         const 15;
 },
 sat_sbNLP_entry() //  [R1]
         { []
         }
     {offset
       cbPZS: // global
           _sbNLP::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbPZT; else goto cbPZU;
       cbPZU: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cbPZW; else goto cbPZV;
       cbPZW: // global
           HpAlloc = 48;
           goto cbPZT;
       cbPZT: // global
           R1 = _sbNLP::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbPZV: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNLP::P64;
           _sbNLC::P64 = P64[_sbNLP::P64 + 16];
           _sbNLD::P64 = P64[_sbNLP::P64 + 24];
           _sbNLE::P64 = P64[_sbNLP::P64 + 32];
           _sbNLG::P64 = P64[_sbNLP::P64 + 40];
           _sbNLJ::P64 = P64[_sbNLP::P64 + 48];
           I64[Hp - 40] = sat_sbNLO_info;
           P64[Hp - 24] = _sbNLC::P64;
           P64[Hp - 16] = _sbNLD::P64;
           P64[Hp - 8] = _sbNLE::P64;
           P64[Hp] = _sbNLJ::P64;
           R2 = _sbNLE::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _sbNLG::P64;
           P64[Sp - 24] = Hp - 40;
           Sp = Sp - 40;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNLP_info" {
     sat_sbNLP_info:
         const sat_sbNLP_entry;
         const 5;
         const 15;
 },
 sat_sbNLT_entry() //  [R1]
         { []
         }
     {offset
       cbQ0f: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQ0g; else goto cbQ0h;
       cbQ0g: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQ0h: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_cbQ0c_info;
           _sbNLQ::P64 = P64[R1 + 16];
           R1 = P64[R1 + 24];
           P64[Sp - 24] = _sbNLQ::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto ubQ0l; else goto cbQ0d;
       ubQ0l: // global
           call _cbQ0c() args: 0, res: 0, upd: 0;
       cbQ0d: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNLT_info" {
     sat_sbNLT_info:
         const sat_sbNLT_entry;
         const 2;
         const 18;
 },
 _cbQ0c() //  []
         { []
         }
     {offset
       cbQ0c: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbQ0c_info" {
     block_cbQ0c_info:
         const _cbQ0c;
         const 1;
         const 30;
 },
 sat_sbNLU_entry() //  [R1, R2]
         { []
         }
     {offset
       cbQ0n: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cbQ0r; else goto cbQ0q;
       cbQ0r: // global
           HpAlloc = 48;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQ0q: // global
           _sbNLQ::P64 = P64[R1 + 7];
           I64[Hp - 40] = sat_sbNLT_info;
           P64[Hp - 24] = _sbNLQ::P64;
           P64[Hp - 16] = R2;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNLU_info" {
     sat_sbNLU_info:
         const sat_sbNLU_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbNLV_entry() //  [R1]
         { []
         }
     {offset
       cbQ0s: // global
           _sbNLV::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cbQ0t; else goto cbQ0u;
       cbQ0u: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbQ0w; else goto cbQ0v;
       cbQ0w: // global
           HpAlloc = 16;
           goto cbQ0t;
       cbQ0t: // global
           R1 = _sbNLV::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQ0v: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNLV::P64;
           _sbNLD::P64 = P64[_sbNLV::P64 + 16];
           _sbNLQ::P64 = P64[_sbNLV::P64 + 24];
           I64[Hp - 8] = sat_sbNLU_info;
           P64[Hp] = _sbNLQ::P64;
           R2 = _sbNLD::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 7;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNLV_info" {
     sat_sbNLV_info:
         const sat_sbNLV_entry;
         const 2;
         const 18;
 },
 sat_sbNLW_entry() //  [R1, R2]
         { []
         }
     {offset
       cbQ0B: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cbQ0C; else goto cbQ0D;
       cbQ0C: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQ0D: // global
           I64[Sp - 40] = block_cbPZc_info;
           _sbNLC::P64 = P64[R1 + 7];
           _sbNLD::P64 = P64[R1 + 15];
           _sbNLE::P64 = P64[R1 + 23];
           _sbNLG::P64 = P64[R1 + 31];
           R1 = R2;
           P64[Sp - 32] = _sbNLC::P64;
           P64[Sp - 24] = _sbNLD::P64;
           P64[Sp - 16] = _sbNLE::P64;
           P64[Sp - 8] = _sbNLG::P64;
           Sp = Sp - 40;
           if (R1 & 7 != 0) goto ubQ0M; else goto cbPZd;
       ubQ0M: // global
           call _cbPZc(R1) args: 0, res: 0, upd: 0;
       cbPZd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbNLW_info" {
     sat_sbNLW_info:
         const sat_sbNLW_entry;
         const 4;
         const 8;
         const 4294967301;
 },
 _cbPZc() //  [R1]
         { []
         }
     {offset
       cbPZc: // global
           _sbNLD::P64 = P64[Sp + 16];
           if (R1 & 7 == 1) goto cbQ0y; else goto cbQ0z;
       cbQ0y: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cbQ0H; else goto cbQ0G;
       cbQ0H: // global
           HpAlloc = 80;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbQ0G: // global
           _sbNLJ::P64 = P64[R1 + 7];
           I64[Hp - 72] = sat_sbNLP_info;
           P64[Hp - 56] = P64[Sp + 8];
           P64[Hp - 48] = _sbNLD::P64;
           P64[Hp - 40] = P64[Sp + 24];
           P64[Hp - 32] = P64[Sp + 32];
           P64[Hp - 24] = _sbNLJ::P64;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 72;
           P64[Hp] = GHC.Tuple.()_closure+1;
           R1 = Hp - 15;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cbQ0z: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cbQ0L; else goto cbQ0K;
       cbQ0L: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbQ0K: // global
           _sbNLQ::P64 = P64[R1 + 6];
           I64[Hp - 48] = sat_sbNLV_info;
           P64[Hp - 32] = _sbNLD::P64;
           P64[Hp - 24] = _sbNLQ::P64;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = GHC.Tuple.()_closure+1;
           R1 = Hp - 15;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPZc_info" {
     block_cbPZc_info:
         const _cbPZc;
         const 4;
         const 30;
 },
 sat_sbNLX_entry() //  [R1]
         { []
         }
     {offset
       cbQ0N: // global
           _sbNLX::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cbQ0O; else goto cbQ0P;
       cbQ0P: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbQ0R; else goto cbQ0Q;
       cbQ0R: // global
           HpAlloc = 64;
           goto cbQ0O;
       cbQ0O: // global
           R1 = _sbNLX::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQ0Q: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbNLX::P64;
           _sbNLC::P64 = P64[_sbNLX::P64 + 16];
           _sbNLD::P64 = P64[_sbNLX::P64 + 24];
           _sbNLE::P64 = P64[_sbNLX::P64 + 32];
           I64[Hp - 56] = lvl5_sbNLG_info;
           P64[Hp - 40] = _sbNLD::P64;
           I64[Hp - 32] = sat_sbNLW_info;
           P64[Hp - 24] = _sbNLC::P64;
           P64[Hp - 16] = _sbNLD::P64;
           P64[Hp - 8] = _sbNLE::P64;
           P64[Hp] = Hp - 56;
           R2 = _sbNLD::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 31;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNLX_info" {
     sat_sbNLX_info:
         const sat_sbNLX_entry;
         const 3;
         const 15;
 },
 sat_sbNLF_entry() //  [R1]
         { []
         }
     {offset
       cbQ0W: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbQ0X; else goto cbQ0Y;
       cbQ0X: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQ0Y: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.app_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbNLF_info" {
     sat_sbNLF_info:
         const sat_sbNLF_entry;
         const 1;
         const 16;
 },
 Control.Arrow.leftApp_entry() //  [R2, R3]
         { []
         }
     {offset
       cbQ0Z: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQ10; else goto cbQ11;
       cbQ10: // global
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.leftApp_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQ11: // global
           I64[Sp - 24] = block_cbPYO_info;
           _sbNLB::P64 = R2;
           R2 = R2;
           P64[Sp - 16] = _sbNLB::P64;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call Control.Arrow.$p1ArrowApply_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.leftApp_info" {
     Control.Arrow.leftApp_info:
         const Control.Arrow.leftApp_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _cbPYO() //  [R1]
         { []
         }
     {offset
       cbPYO: // global
           I64[Sp - 8] = block_cbPYS_info;
           R2 = R1;
           P64[Sp] = R1;
           Sp = Sp - 8;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPYO_info" {
     block_cbPYO_info:
         const _cbPYO;
         const 2;
         const 30;
 },
 _cbPYS() //  [R1]
         { []
         }
     {offset
       cbPYS: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbQ15; else goto cbQ14;
       cbQ15: // global
           HpAlloc = 64;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbQ14: // global
           I64[Hp - 56] = sat_sbNLX_info;
           P64[Hp - 40] = P64[Sp + 24];
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = R1;
           I64[Hp - 16] = sat_sbNLF_info;
           P64[Hp] = P64[Sp + 16];
           R2 = R1;
           I64[Sp + 8] = stg_ap_pp_info;
           P64[Sp + 16] = Hp - 16;
           P64[Sp + 24] = Hp - 56;
           Sp = Sp + 8;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbPYS_info" {
     block_cbPYS_info:
         const _cbPYS;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.273818776 UTC

[section ""cstring" . Control.Arrow.$trModule4_bytes" {
     Control.Arrow.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.275718761 UTC

[section ""data" . Control.Arrow.$trModule3_closure" {
     Control.Arrow.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.277636054 UTC

[section ""cstring" . Control.Arrow.$trModule2_bytes" {
     Control.Arrow.$trModule2_bytes:
         I8[] [67,111,110,116,114,111,108,46,65,114,114,111,119]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.279428169 UTC

[section ""data" . Control.Arrow.$trModule1_closure" {
     Control.Arrow.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.282554992 UTC

[section ""data" . Control.Arrow.$trModule_closure" {
     Control.Arrow.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Control.Arrow.$trModule3_closure+1;
         const Control.Arrow.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.284805415 UTC

[section ""data" . $krep_rbNCd_closure" {
     $krep_rbNCd_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Tuple.$tc()_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.286942396 UTC

[section ""data" . $krep1_rbNCe_closure" {
     $krep1_rbNCe_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.289869358 UTC

[section ""data" . Control.Arrow.$tcKleisli1_closure" {
     Control.Arrow.$tcKleisli1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const GHC.Types.krep$*->*->*_closure;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.291848159 UTC

[section ""data" . Control.Arrow.$tcArrow1_closure" {
     Control.Arrow.$tcArrow1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*->*->*_closure;
         const $krep1_rbNCe_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.294416108 UTC

[section ""data" . Control.Arrow.$tcArrowMonad1_closure" {
     Control.Arrow.$tcArrowMonad1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*->*->*_closure;
         const GHC.Types.krep$*Arr*_closure;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.296507736 UTC

[section ""data" . $krep2_rbNCf_closure" {
     $krep2_rbNCf_closure:
         const GHC.Types.KindRepVar_con_info;
         const 2;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.298535702 UTC

[section ""data" . $krep3_rbNCg_closure" {
     $krep3_rbNCg_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.300512208 UTC

[section ""data" . $krep4_rbNCh_closure" {
     $krep4_rbNCh_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.302648666 UTC

[section ""data" . $krep5_rbNCi_closure" {
     $krep5_rbNCi_closure:
         const GHC.Types.KindRepApp_con_info;
         const $krep4_rbNCh_closure+2;
         const $krep2_rbNCf_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.304755064 UTC

[section ""data" . $krep6_rbNCj_closure" {
     $krep6_rbNCj_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_rbNCg_closure+2;
         const $krep5_rbNCi_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.306877235 UTC

[section ""data" . $krep7_rbNCk_closure" {
     $krep7_rbNCk_closure:
         const GHC.Types.KindRepApp_con_info;
         const $krep4_rbNCh_closure+2;
         const $krep_rbNCd_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.309013721 UTC

[section ""data" . $krep8_rbNCl_closure" {
     $krep8_rbNCl_closure:
         const GHC.Types.KindRepApp_con_info;
         const $krep7_rbNCk_closure+3;
         const $krep3_rbNCg_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.311218784 UTC

[section ""cstring" . Control.Arrow.$tcArrow3_bytes" {
     Control.Arrow.$tcArrow3_bytes:
         I8[] [65,114,114,111,119]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.313177486 UTC

[section ""data" . Control.Arrow.$tcArrow2_closure" {
     Control.Arrow.$tcArrow2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$tcArrow3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.315472481 UTC

[section ""data" . Control.Arrow.$tcArrow_closure" {
     Control.Arrow.$tcArrow_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Arrow.$trModule_closure+1;
         const Control.Arrow.$tcArrow2_closure+1;
         const Control.Arrow.$tcArrow1_closure+4;
         const 12964584583212294992;
         const 10211991410748124746;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.318075674 UTC

[section ""cstring" . Control.Arrow.$tcKleisli3_bytes" {
     Control.Arrow.$tcKleisli3_bytes:
         I8[] [75,108,101,105,115,108,105]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.320648651 UTC

[section ""data" . Control.Arrow.$tcKleisli2_closure" {
     Control.Arrow.$tcKleisli2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$tcKleisli3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.322614895 UTC

[section ""data" . Control.Arrow.$tcKleisli_closure" {
     Control.Arrow.$tcKleisli_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Arrow.$trModule_closure+1;
         const Control.Arrow.$tcKleisli2_closure+1;
         const Control.Arrow.$tcKleisli1_closure+4;
         const 2023158159015915132;
         const 6143719008973118504;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.324520347 UTC

[section ""data" . $krep9_rbNCm_closure" {
     $krep9_rbNCm_closure:
         const :_con_info;
         const $krep2_rbNCf_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.326406257 UTC

[section ""data" . $krep10_rbNCn_closure" {
     $krep10_rbNCn_closure:
         const :_con_info;
         const $krep3_rbNCg_closure+2;
         const $krep9_rbNCm_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.328290437 UTC

[section ""data" . $krep11_rbNCo_closure" {
     $krep11_rbNCo_closure:
         const :_con_info;
         const $krep4_rbNCh_closure+2;
         const $krep10_rbNCn_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.33023377 UTC

[section ""data" . $krep12_rbNCp_closure" {
     $krep12_rbNCp_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Control.Arrow.$tcKleisli_closure+1;
         const $krep11_rbNCo_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.332059029 UTC

[section ""data" . Control.Arrow.$tc'Kleisli1_closure" {
     Control.Arrow.$tc'Kleisli1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep6_rbNCj_closure+4;
         const $krep12_rbNCp_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.333873175 UTC

[section ""cstring" . Control.Arrow.$tc'Kleisli3_bytes" {
     Control.Arrow.$tc'Kleisli3_bytes:
         I8[] [39,75,108,101,105,115,108,105]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.335520817 UTC

[section ""data" . Control.Arrow.$tc'Kleisli2_closure" {
     Control.Arrow.$tc'Kleisli2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$tc'Kleisli3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.338023287 UTC

[section ""data" . Control.Arrow.$tc'Kleisli_closure" {
     Control.Arrow.$tc'Kleisli_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Arrow.$trModule_closure+1;
         const Control.Arrow.$tc'Kleisli2_closure+1;
         const Control.Arrow.$tc'Kleisli1_closure+4;
         const 793719726112502834;
         const 14919550952510816382;
         const 3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.33991447 UTC

[section ""cstring" . Control.Arrow.$tcArrowZero2_bytes" {
     Control.Arrow.$tcArrowZero2_bytes:
         I8[] [65,114,114,111,119,90,101,114,111]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.341812544 UTC

[section ""data" . Control.Arrow.$tcArrowZero1_closure" {
     Control.Arrow.$tcArrowZero1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$tcArrowZero2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.343721689 UTC

[section ""data" . Control.Arrow.$tcArrowZero_closure" {
     Control.Arrow.$tcArrowZero_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Arrow.$trModule_closure+1;
         const Control.Arrow.$tcArrowZero1_closure+1;
         const Control.Arrow.$tcArrow1_closure+4;
         const 337582314637215801;
         const 485553589222180171;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.345689597 UTC

[section ""cstring" . Control.Arrow.$tcArrowPlus2_bytes" {
     Control.Arrow.$tcArrowPlus2_bytes:
         I8[] [65,114,114,111,119,80,108,117,115]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.348376218 UTC

[section ""data" . Control.Arrow.$tcArrowPlus1_closure" {
     Control.Arrow.$tcArrowPlus1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$tcArrowPlus2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.35108534 UTC

[section ""data" . Control.Arrow.$tcArrowPlus_closure" {
     Control.Arrow.$tcArrowPlus_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Arrow.$trModule_closure+1;
         const Control.Arrow.$tcArrowPlus1_closure+1;
         const Control.Arrow.$tcArrow1_closure+4;
         const 9089885184909062397;
         const 13092571182525076608;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.352902949 UTC

[section ""cstring" . Control.Arrow.$tcArrowChoice2_bytes" {
     Control.Arrow.$tcArrowChoice2_bytes:
         I8[] [65,114,114,111,119,67,104,111,105,99,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.354707083 UTC

[section ""data" . Control.Arrow.$tcArrowChoice1_closure" {
     Control.Arrow.$tcArrowChoice1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$tcArrowChoice2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.35647549 UTC

[section ""data" . Control.Arrow.$tcArrowChoice_closure" {
     Control.Arrow.$tcArrowChoice_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Arrow.$trModule_closure+1;
         const Control.Arrow.$tcArrowChoice1_closure+1;
         const Control.Arrow.$tcArrow1_closure+4;
         const 9045385674203608923;
         const 4474606397073518393;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.358288436 UTC

[section ""cstring" . Control.Arrow.$tcArrowApply2_bytes" {
     Control.Arrow.$tcArrowApply2_bytes:
         I8[] [65,114,114,111,119,65,112,112,108,121]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.359980938 UTC

[section ""data" . Control.Arrow.$tcArrowApply1_closure" {
     Control.Arrow.$tcArrowApply1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$tcArrowApply2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.361815881 UTC

[section ""data" . Control.Arrow.$tcArrowApply_closure" {
     Control.Arrow.$tcArrowApply_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Arrow.$trModule_closure+1;
         const Control.Arrow.$tcArrowApply1_closure+1;
         const Control.Arrow.$tcArrow1_closure+4;
         const 4969046276209689969;
         const 2697302259091605677;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.363706988 UTC

[section ""cstring" . Control.Arrow.$tcArrowMonad3_bytes" {
     Control.Arrow.$tcArrowMonad3_bytes:
         I8[] [65,114,114,111,119,77,111,110,97,100]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.365477334 UTC

[section ""data" . Control.Arrow.$tcArrowMonad2_closure" {
     Control.Arrow.$tcArrowMonad2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$tcArrowMonad3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.367392337 UTC

[section ""data" . Control.Arrow.$tcArrowMonad_closure" {
     Control.Arrow.$tcArrowMonad_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Arrow.$trModule_closure+1;
         const Control.Arrow.$tcArrowMonad2_closure+1;
         const Control.Arrow.$tcArrowMonad1_closure+4;
         const 2648525758856951758;
         const 13692351200590237690;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.369268287 UTC

[section ""data" . $krep13_rbNCq_closure" {
     $krep13_rbNCq_closure:
         const :_con_info;
         const $krep3_rbNCg_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.371000247 UTC

[section ""data" . $krep14_rbNCr_closure" {
     $krep14_rbNCr_closure:
         const :_con_info;
         const $krep4_rbNCh_closure+2;
         const $krep13_rbNCq_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.37270569 UTC

[section ""data" . $krep15_rbNCs_closure" {
     $krep15_rbNCs_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Control.Arrow.$tcArrowMonad_closure+1;
         const $krep14_rbNCr_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.3753802 UTC

[section ""data" . Control.Arrow.$tc'ArrowMonad1_closure" {
     Control.Arrow.$tc'ArrowMonad1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep8_rbNCl_closure+3;
         const $krep15_rbNCs_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.37714954 UTC

[section ""cstring" . Control.Arrow.$tc'ArrowMonad3_bytes" {
     Control.Arrow.$tc'ArrowMonad3_bytes:
         I8[] [39,65,114,114,111,119,77,111,110,97,100]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.378855794 UTC

[section ""data" . Control.Arrow.$tc'ArrowMonad2_closure" {
     Control.Arrow.$tc'ArrowMonad2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$tc'ArrowMonad3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.380520577 UTC

[section ""data" . Control.Arrow.$tc'ArrowMonad_closure" {
     Control.Arrow.$tc'ArrowMonad_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Arrow.$trModule_closure+1;
         const Control.Arrow.$tc'ArrowMonad2_closure+1;
         const Control.Arrow.$tc'ArrowMonad1_closure+4;
         const 8781545391513276915;
         const 783725375361948493;
         const 2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.382314813 UTC

[section ""cstring" . Control.Arrow.$tcArrowLoop2_bytes" {
     Control.Arrow.$tcArrowLoop2_bytes:
         I8[] [65,114,114,111,119,76,111,111,112]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.383978079 UTC

[section ""data" . Control.Arrow.$tcArrowLoop1_closure" {
     Control.Arrow.$tcArrowLoop1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$tcArrowLoop2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.38576599 UTC

[section ""data" . Control.Arrow.$tcArrowLoop_closure" {
     Control.Arrow.$tcArrowLoop_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Arrow.$trModule_closure+1;
         const Control.Arrow.$tcArrowLoop1_closure+1;
         const Control.Arrow.$tcArrow1_closure+4;
         const 15298492960828880948;
         const 13953070859738786616;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.388216672 UTC

[section ""data" . Control.Arrow.C:ArrowLoop_closure" {
     Control.Arrow.C:ArrowLoop_closure:
         const Control.Arrow.C:ArrowLoop_info;
 },
 Control.Arrow.C:ArrowLoop_entry() //  [R2, R3]
         { []
         }
     {offset
       cbQ3v: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQ3z; else goto cbQ3y;
       cbQ3z: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.C:ArrowLoop_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQ3y: // global
           I64[Hp - 16] = Control.Arrow.C:ArrowLoop_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:ArrowLoop_info" {
     Control.Arrow.C:ArrowLoop_info:
         const Control.Arrow.C:ArrowLoop_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.392455388 UTC

[section ""data" . Control.Arrow.C:ArrowApply_closure" {
     Control.Arrow.C:ArrowApply_closure:
         const Control.Arrow.C:ArrowApply_info;
 },
 Control.Arrow.C:ArrowApply_entry() //  [R2, R3]
         { []
         }
     {offset
       cbQ3K: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQ3O; else goto cbQ3N;
       cbQ3O: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.C:ArrowApply_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQ3N: // global
           I64[Hp - 16] = Control.Arrow.C:ArrowApply_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:ArrowApply_info" {
     Control.Arrow.C:ArrowApply_info:
         const Control.Arrow.C:ArrowApply_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.396435926 UTC

[section ""data" . Control.Arrow.C:ArrowChoice_closure" {
     Control.Arrow.C:ArrowChoice_closure:
         const Control.Arrow.C:ArrowChoice_info;
 },
 Control.Arrow.C:ArrowChoice_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       cbQ3Z: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cbQ43; else goto cbQ42;
       cbQ43: // global
           HpAlloc = 48;
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.C:ArrowChoice_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQ42: // global
           I64[Hp - 40] = Control.Arrow.C:ArrowChoice_con_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           P64[Hp - 16] = R4;
           P64[Hp - 8] = R5;
           P64[Hp] = R6;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:ArrowChoice_info" {
     Control.Arrow.C:ArrowChoice_info:
         const Control.Arrow.C:ArrowChoice_entry;
         const 0;
         const 14;
         const 21474836505;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.400391649 UTC

[section ""data" . Control.Arrow.C:ArrowPlus_closure" {
     Control.Arrow.C:ArrowPlus_closure:
         const Control.Arrow.C:ArrowPlus_info;
 },
 Control.Arrow.C:ArrowPlus_entry() //  [R2, R3]
         { []
         }
     {offset
       cbQ4e: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQ4i; else goto cbQ4h;
       cbQ4i: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.C:ArrowPlus_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQ4h: // global
           I64[Hp - 16] = Control.Arrow.C:ArrowPlus_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:ArrowPlus_info" {
     Control.Arrow.C:ArrowPlus_info:
         const Control.Arrow.C:ArrowPlus_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.40444113 UTC

[section ""data" . Control.Arrow.C:ArrowZero_closure" {
     Control.Arrow.C:ArrowZero_closure:
         const Control.Arrow.C:ArrowZero_info;
 },
 Control.Arrow.C:ArrowZero_entry() //  [R2, R3]
         { []
         }
     {offset
       cbQ4t: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQ4x; else goto cbQ4w;
       cbQ4x: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.C:ArrowZero_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQ4w: // global
           I64[Hp - 16] = Control.Arrow.C:ArrowZero_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:ArrowZero_info" {
     Control.Arrow.C:ArrowZero_info:
         const Control.Arrow.C:ArrowZero_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.409224105 UTC

[section ""data" . Control.Arrow.C:Arrow_closure" {
     Control.Arrow.C:Arrow_closure:
         const Control.Arrow.C:Arrow_info;
 },
 Control.Arrow.C:Arrow_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       cbQ4I: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cbQ4M; else goto cbQ4L;
       cbQ4M: // global
           HpAlloc = 56;
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.C:Arrow_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 16, res: 0, upd: 8;
       cbQ4L: // global
           I64[Hp - 48] = Control.Arrow.C:Arrow_con_info;
           P64[Hp - 40] = R2;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           P64[Hp - 16] = R5;
           P64[Hp - 8] = R6;
           P64[Hp] = P64[Sp];
           R1 = Hp - 47;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:Arrow_info" {
     Control.Arrow.C:Arrow_info:
         const Control.Arrow.C:Arrow_entry;
         const 0;
         const 14;
         const 25769803802;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.412940007 UTC

[section ""cstring" . ibP2O_str" {
     ibP2O_str:
         I8[] [98,97,115,101,58,67,111,110,116,114,111,108,46,65,114,114,111,119,46,67,58,65,114,114,111,119,76,111,111,112]
 },
 Control.Arrow.C:ArrowLoop_con_entry() //  [R1]
         { []
         }
     {offset
       cbQ4T: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:ArrowLoop_con_info" {
     Control.Arrow.C:ArrowLoop_con_info:
         const Control.Arrow.C:ArrowLoop_con_entry;
         const 2;
         const 4;
         const ibP2O_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.416313928 UTC

[section ""cstring" . ibP2Q_str" {
     ibP2Q_str:
         I8[] [98,97,115,101,58,67,111,110,116,114,111,108,46,65,114,114,111,119,46,67,58,65,114,114,111,119,65,112,112,108,121]
 },
 Control.Arrow.C:ArrowApply_con_entry() //  [R1]
         { []
         }
     {offset
       cbQ4Z: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:ArrowApply_con_info" {
     Control.Arrow.C:ArrowApply_con_info:
         const Control.Arrow.C:ArrowApply_con_entry;
         const 2;
         const 4;
         const ibP2Q_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.420081108 UTC

[section ""cstring" . ibP2S_str" {
     ibP2S_str:
         I8[] [98,97,115,101,58,67,111,110,116,114,111,108,46,65,114,114,111,119,46,67,58,65,114,114,111,119,67,104,111,105,99,101]
 },
 Control.Arrow.C:ArrowChoice_con_entry() //  [R1]
         { []
         }
     {offset
       cbQ55: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:ArrowChoice_con_info" {
     Control.Arrow.C:ArrowChoice_con_info:
         const Control.Arrow.C:ArrowChoice_con_entry;
         const 5;
         const 1;
         const ibP2S_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.423459042 UTC

[section ""cstring" . ibP2U_str" {
     ibP2U_str:
         I8[] [98,97,115,101,58,67,111,110,116,114,111,108,46,65,114,114,111,119,46,67,58,65,114,114,111,119,80,108,117,115]
 },
 Control.Arrow.C:ArrowPlus_con_entry() //  [R1]
         { []
         }
     {offset
       cbQ5b: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:ArrowPlus_con_info" {
     Control.Arrow.C:ArrowPlus_con_info:
         const Control.Arrow.C:ArrowPlus_con_entry;
         const 2;
         const 4;
         const ibP2U_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.426844963 UTC

[section ""cstring" . ibP2W_str" {
     ibP2W_str:
         I8[] [98,97,115,101,58,67,111,110,116,114,111,108,46,65,114,114,111,119,46,67,58,65,114,114,111,119,90,101,114,111]
 },
 Control.Arrow.C:ArrowZero_con_entry() //  [R1]
         { []
         }
     {offset
       cbQ5h: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:ArrowZero_con_info" {
     Control.Arrow.C:ArrowZero_con_info:
         const Control.Arrow.C:ArrowZero_con_entry;
         const 2;
         const 4;
         const ibP2W_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.429988741 UTC

[section ""cstring" . ibP2Y_str" {
     ibP2Y_str:
         I8[] [98,97,115,101,58,67,111,110,116,114,111,108,46,65,114,114,111,119,46,67,58,65,114,114,111,119]
 },
 Control.Arrow.C:Arrow_con_entry() //  [R1]
         { []
         }
     {offset
       cbQ5n: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:Arrow_con_info" {
     Control.Arrow.C:Arrow_con_info:
         const Control.Arrow.C:Arrow_con_entry;
         const 6;
         const 1;
         const ibP2Y_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:41.432971216 UTC

[section ""relreadonly" . SbNZ8_srt" {
     SbNZ8_srt:
         const GHC.Err.errorWithoutStackTrace_closure;
         const Control.Arrow.$fMonadArrowMonad_closure;
         const lvl_rbNC6_closure;
         const Control.Arrow.$fMonadPlusArrowMonad_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.786277834 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:06:43.788510795 UTC

[section ""data" . Control.Arrow.$p1ArrowLoop_closure" {
     Control.Arrow.$p1ArrowLoop_closure:
         const Control.Arrow.$p1ArrowLoop_info;
 },
 Control.Arrow.$p1ArrowLoop_entry() //  [R2]
         { []
         }
     {offset
       cbQf5: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQf6; else goto cbQf7;
       cbQf6: // global
           R2 = R2;
           R1 = Control.Arrow.$p1ArrowLoop_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQf7: // global
           I64[Sp - 8] = block_cbQf2_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQfb; else goto cbQf3;
       ubQfb: // global
           call _cbQf2(R1) args: 0, res: 0, upd: 0;
       cbQf3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$p1ArrowLoop_info" {
     Control.Arrow.$p1ArrowLoop_info:
         const Control.Arrow.$p1ArrowLoop_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQf2() //  [R1]
         { []
         }
     {offset
       cbQf2: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQf2_info" {
     block_cbQf2_info:
         const _cbQf2;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.794961411 UTC

[section ""data" . Control.Arrow.loop_closure" {
     Control.Arrow.loop_closure:
         const Control.Arrow.loop_info;
 },
 Control.Arrow.loop_entry() //  [R2]
         { []
         }
     {offset
       cbQfv: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQfw; else goto cbQfx;
       cbQfw: // global
           R2 = R2;
           R1 = Control.Arrow.loop_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQfx: // global
           I64[Sp - 8] = block_cbQfs_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQfB; else goto cbQft;
       ubQfB: // global
           call _cbQfs(R1) args: 0, res: 0, upd: 0;
       cbQft: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.loop_info" {
     Control.Arrow.loop_info:
         const Control.Arrow.loop_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQfs() //  [R1]
         { []
         }
     {offset
       cbQfs: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQfs_info" {
     block_cbQfs_info:
         const _cbQfs;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.802837462 UTC

[section ""data" . Control.Arrow.$p1ArrowApply_closure" {
     Control.Arrow.$p1ArrowApply_closure:
         const Control.Arrow.$p1ArrowApply_info;
 },
 Control.Arrow.$p1ArrowApply_entry() //  [R2]
         { []
         }
     {offset
       cbQfT: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQfU; else goto cbQfV;
       cbQfU: // global
           R2 = R2;
           R1 = Control.Arrow.$p1ArrowApply_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQfV: // global
           I64[Sp - 8] = block_cbQfQ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQfZ; else goto cbQfR;
       ubQfZ: // global
           call _cbQfQ(R1) args: 0, res: 0, upd: 0;
       cbQfR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$p1ArrowApply_info" {
     Control.Arrow.$p1ArrowApply_info:
         const Control.Arrow.$p1ArrowApply_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQfQ() //  [R1]
         { []
         }
     {offset
       cbQfQ: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQfQ_info" {
     block_cbQfQ_info:
         const _cbQfQ;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.808456692 UTC

[section ""data" . Control.Arrow.app_closure" {
     Control.Arrow.app_closure:
         const Control.Arrow.app_info;
 },
 Control.Arrow.app_entry() //  [R2]
         { []
         }
     {offset
       cbQgj: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQgk; else goto cbQgl;
       cbQgk: // global
           R2 = R2;
           R1 = Control.Arrow.app_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQgl: // global
           I64[Sp - 8] = block_cbQgg_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQgp; else goto cbQgh;
       ubQgp: // global
           call _cbQgg(R1) args: 0, res: 0, upd: 0;
       cbQgh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.app_info" {
     Control.Arrow.app_info:
         const Control.Arrow.app_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQgg() //  [R1]
         { []
         }
     {offset
       cbQgg: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQgg_info" {
     block_cbQgg_info:
         const _cbQgg;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.813787136 UTC

[section ""data" . Control.Arrow.$p1ArrowChoice_closure" {
     Control.Arrow.$p1ArrowChoice_closure:
         const Control.Arrow.$p1ArrowChoice_info;
 },
 Control.Arrow.$p1ArrowChoice_entry() //  [R2]
         { []
         }
     {offset
       cbQgH: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQgI; else goto cbQgJ;
       cbQgI: // global
           R2 = R2;
           R1 = Control.Arrow.$p1ArrowChoice_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQgJ: // global
           I64[Sp - 8] = block_cbQgE_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQgN; else goto cbQgF;
       ubQgN: // global
           call _cbQgE(R1) args: 0, res: 0, upd: 0;
       cbQgF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$p1ArrowChoice_info" {
     Control.Arrow.$p1ArrowChoice_info:
         const Control.Arrow.$p1ArrowChoice_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQgE() //  [R1]
         { []
         }
     {offset
       cbQgE: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQgE_info" {
     block_cbQgE_info:
         const _cbQgE;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.819051976 UTC

[section ""data" . Control.Arrow.left_closure" {
     Control.Arrow.left_closure:
         const Control.Arrow.left_info;
 },
 Control.Arrow.left_entry() //  [R2]
         { []
         }
     {offset
       cbQh7: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQh8; else goto cbQh9;
       cbQh8: // global
           R2 = R2;
           R1 = Control.Arrow.left_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQh9: // global
           I64[Sp - 8] = block_cbQh4_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQhd; else goto cbQh5;
       ubQhd: // global
           call _cbQh4(R1) args: 0, res: 0, upd: 0;
       cbQh5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.left_info" {
     Control.Arrow.left_info:
         const Control.Arrow.left_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQh4() //  [R1]
         { []
         }
     {offset
       cbQh4: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQh4_info" {
     block_cbQh4_info:
         const _cbQh4;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.824592933 UTC

[section ""data" . Control.Arrow.right_closure" {
     Control.Arrow.right_closure:
         const Control.Arrow.right_info;
 },
 Control.Arrow.right_entry() //  [R2]
         { []
         }
     {offset
       cbQhv: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQhw; else goto cbQhx;
       cbQhw: // global
           R2 = R2;
           R1 = Control.Arrow.right_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQhx: // global
           I64[Sp - 8] = block_cbQhs_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQhB; else goto cbQht;
       ubQhB: // global
           call _cbQhs(R1) args: 0, res: 0, upd: 0;
       cbQht: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.right_info" {
     Control.Arrow.right_info:
         const Control.Arrow.right_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQhs() //  [R1]
         { []
         }
     {offset
       cbQhs: // global
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQhs_info" {
     block_cbQhs_info:
         const _cbQhs;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.83003694 UTC

[section ""data" . Control.Arrow.+++_closure" {
     Control.Arrow.+++_closure:
         const Control.Arrow.+++_info;
 },
 Control.Arrow.+++_entry() //  [R2]
         { []
         }
     {offset
       cbQhT: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQhU; else goto cbQhV;
       cbQhU: // global
           R2 = R2;
           R1 = Control.Arrow.+++_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQhV: // global
           I64[Sp - 8] = block_cbQhQ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQhZ; else goto cbQhR;
       ubQhZ: // global
           call _cbQhQ(R1) args: 0, res: 0, upd: 0;
       cbQhR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.+++_info" {
     Control.Arrow.+++_info:
         const Control.Arrow.+++_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQhQ() //  [R1]
         { []
         }
     {offset
       cbQhQ: // global
           R1 = P64[R1 + 31];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQhQ_info" {
     block_cbQhQ_info:
         const _cbQhQ;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.836699644 UTC

[section ""data" . Control.Arrow.|||_closure" {
     Control.Arrow.|||_closure:
         const Control.Arrow.|||_info;
 },
 Control.Arrow.|||_entry() //  [R2]
         { []
         }
     {offset
       cbQih: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQii; else goto cbQij;
       cbQii: // global
           R2 = R2;
           R1 = Control.Arrow.|||_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQij: // global
           I64[Sp - 8] = block_cbQie_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQin; else goto cbQif;
       ubQin: // global
           call _cbQie(R1) args: 0, res: 0, upd: 0;
       cbQif: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.|||_info" {
     Control.Arrow.|||_info:
         const Control.Arrow.|||_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQie() //  [R1]
         { []
         }
     {offset
       cbQie: // global
           R1 = P64[R1 + 39];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQie_info" {
     block_cbQie_info:
         const _cbQie;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.842162245 UTC

[section ""data" . Control.Arrow.$p1ArrowPlus_closure" {
     Control.Arrow.$p1ArrowPlus_closure:
         const Control.Arrow.$p1ArrowPlus_info;
 },
 Control.Arrow.$p1ArrowPlus_entry() //  [R2]
         { []
         }
     {offset
       cbQiF: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQiG; else goto cbQiH;
       cbQiG: // global
           R2 = R2;
           R1 = Control.Arrow.$p1ArrowPlus_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQiH: // global
           I64[Sp - 8] = block_cbQiC_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQiL; else goto cbQiD;
       ubQiL: // global
           call _cbQiC(R1) args: 0, res: 0, upd: 0;
       cbQiD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$p1ArrowPlus_info" {
     Control.Arrow.$p1ArrowPlus_info:
         const Control.Arrow.$p1ArrowPlus_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQiC() //  [R1]
         { []
         }
     {offset
       cbQiC: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQiC_info" {
     block_cbQiC_info:
         const _cbQiC;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.847578171 UTC

[section ""data" . Control.Arrow.<+>_closure" {
     Control.Arrow.<+>_closure:
         const Control.Arrow.<+>_info;
 },
 Control.Arrow.<+>_entry() //  [R2]
         { []
         }
     {offset
       cbQj5: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQj6; else goto cbQj7;
       cbQj6: // global
           R2 = R2;
           R1 = Control.Arrow.<+>_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQj7: // global
           I64[Sp - 8] = block_cbQj2_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQjb; else goto cbQj3;
       ubQjb: // global
           call _cbQj2(R1) args: 0, res: 0, upd: 0;
       cbQj3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.<+>_info" {
     Control.Arrow.<+>_info:
         const Control.Arrow.<+>_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQj2() //  [R1]
         { []
         }
     {offset
       cbQj2: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQj2_info" {
     block_cbQj2_info:
         const _cbQj2;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.853471785 UTC

[section ""data" . Control.Arrow.$p1ArrowZero_closure" {
     Control.Arrow.$p1ArrowZero_closure:
         const Control.Arrow.$p1ArrowZero_info;
 },
 Control.Arrow.$p1ArrowZero_entry() //  [R2]
         { []
         }
     {offset
       cbQjt: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQju; else goto cbQjv;
       cbQju: // global
           R2 = R2;
           R1 = Control.Arrow.$p1ArrowZero_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQjv: // global
           I64[Sp - 8] = block_cbQjq_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQjz; else goto cbQjr;
       ubQjz: // global
           call _cbQjq(R1) args: 0, res: 0, upd: 0;
       cbQjr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$p1ArrowZero_info" {
     Control.Arrow.$p1ArrowZero_info:
         const Control.Arrow.$p1ArrowZero_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQjq() //  [R1]
         { []
         }
     {offset
       cbQjq: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQjq_info" {
     block_cbQjq_info:
         const _cbQjq;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.859020243 UTC

[section ""data" . Control.Arrow.zeroArrow_closure" {
     Control.Arrow.zeroArrow_closure:
         const Control.Arrow.zeroArrow_info;
 },
 Control.Arrow.zeroArrow_entry() //  [R2]
         { []
         }
     {offset
       cbQjT: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQjU; else goto cbQjV;
       cbQjU: // global
           R2 = R2;
           R1 = Control.Arrow.zeroArrow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQjV: // global
           I64[Sp - 8] = block_cbQjQ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQjZ; else goto cbQjR;
       ubQjZ: // global
           call _cbQjQ(R1) args: 0, res: 0, upd: 0;
       cbQjR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.zeroArrow_info" {
     Control.Arrow.zeroArrow_info:
         const Control.Arrow.zeroArrow_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQjQ() //  [R1]
         { []
         }
     {offset
       cbQjQ: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQjQ_info" {
     block_cbQjQ_info:
         const _cbQjQ;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.864545723 UTC

[section ""data" . Control.Arrow.$p1Arrow_closure" {
     Control.Arrow.$p1Arrow_closure:
         const Control.Arrow.$p1Arrow_info;
 },
 Control.Arrow.$p1Arrow_entry() //  [R2]
         { []
         }
     {offset
       cbQkh: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQki; else goto cbQkj;
       cbQki: // global
           R2 = R2;
           R1 = Control.Arrow.$p1Arrow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQkj: // global
           I64[Sp - 8] = block_cbQke_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQkn; else goto cbQkf;
       ubQkn: // global
           call _cbQke(R1) args: 0, res: 0, upd: 0;
       cbQkf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$p1Arrow_info" {
     Control.Arrow.$p1Arrow_info:
         const Control.Arrow.$p1Arrow_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQke() //  [R1]
         { []
         }
     {offset
       cbQke: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQke_info" {
     block_cbQke_info:
         const _cbQke;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.871307805 UTC

[section ""data" . Control.Arrow.arr_closure" {
     Control.Arrow.arr_closure:
         const Control.Arrow.arr_info;
 },
 Control.Arrow.arr_entry() //  [R2]
         { []
         }
     {offset
       cbQkH: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQkI; else goto cbQkJ;
       cbQkI: // global
           R2 = R2;
           R1 = Control.Arrow.arr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQkJ: // global
           I64[Sp - 8] = block_cbQkE_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQkN; else goto cbQkF;
       ubQkN: // global
           call _cbQkE(R1) args: 0, res: 0, upd: 0;
       cbQkF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.arr_info" {
     Control.Arrow.arr_info:
         const Control.Arrow.arr_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQkE() //  [R1]
         { []
         }
     {offset
       cbQkE: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQkE_info" {
     block_cbQkE_info:
         const _cbQkE;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.876771001 UTC

[section ""data" . Control.Arrow.first_closure" {
     Control.Arrow.first_closure:
         const Control.Arrow.first_info;
 },
 Control.Arrow.first_entry() //  [R2]
         { []
         }
     {offset
       cbQl5: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQl6; else goto cbQl7;
       cbQl6: // global
           R2 = R2;
           R1 = Control.Arrow.first_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQl7: // global
           I64[Sp - 8] = block_cbQl2_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQlb; else goto cbQl3;
       ubQlb: // global
           call _cbQl2(R1) args: 0, res: 0, upd: 0;
       cbQl3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.first_info" {
     Control.Arrow.first_info:
         const Control.Arrow.first_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQl2() //  [R1]
         { []
         }
     {offset
       cbQl2: // global
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQl2_info" {
     block_cbQl2_info:
         const _cbQl2;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.882781913 UTC

[section ""data" . Control.Arrow.second_closure" {
     Control.Arrow.second_closure:
         const Control.Arrow.second_info;
 },
 Control.Arrow.second_entry() //  [R2]
         { []
         }
     {offset
       cbQlt: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQlu; else goto cbQlv;
       cbQlu: // global
           R2 = R2;
           R1 = Control.Arrow.second_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQlv: // global
           I64[Sp - 8] = block_cbQlq_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQlz; else goto cbQlr;
       ubQlz: // global
           call _cbQlq(R1) args: 0, res: 0, upd: 0;
       cbQlr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.second_info" {
     Control.Arrow.second_info:
         const Control.Arrow.second_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQlq() //  [R1]
         { []
         }
     {offset
       cbQlq: // global
           R1 = P64[R1 + 31];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQlq_info" {
     block_cbQlq_info:
         const _cbQlq;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.888233955 UTC

[section ""data" . Control.Arrow.***_closure" {
     Control.Arrow.***_closure:
         const Control.Arrow.***_info;
 },
 Control.Arrow.***_entry() //  [R2]
         { []
         }
     {offset
       cbQlR: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQlS; else goto cbQlT;
       cbQlS: // global
           R2 = R2;
           R1 = Control.Arrow.***_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQlT: // global
           I64[Sp - 8] = block_cbQlO_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQlX; else goto cbQlP;
       ubQlX: // global
           call _cbQlO(R1) args: 0, res: 0, upd: 0;
       cbQlP: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.***_info" {
     Control.Arrow.***_info:
         const Control.Arrow.***_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQlO() //  [R1]
         { []
         }
     {offset
       cbQlO: // global
           R1 = P64[R1 + 39];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQlO_info" {
     block_cbQlO_info:
         const _cbQlO;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.893594679 UTC

[section ""data" . Control.Arrow.&&&_closure" {
     Control.Arrow.&&&_closure:
         const Control.Arrow.&&&_info;
 },
 Control.Arrow.&&&_entry() //  [R2]
         { []
         }
     {offset
       cbQmf: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQmg; else goto cbQmh;
       cbQmg: // global
           R2 = R2;
           R1 = Control.Arrow.&&&_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQmh: // global
           I64[Sp - 8] = block_cbQmc_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQml; else goto cbQmd;
       ubQml: // global
           call _cbQmc(R1) args: 0, res: 0, upd: 0;
       cbQmd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.&&&_info" {
     Control.Arrow.&&&_info:
         const Control.Arrow.&&&_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQmc() //  [R1]
         { []
         }
     {offset
       cbQmc: // global
           R1 = P64[R1 + 47];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQmc_info" {
     block_cbQmc_info:
         const _cbQmc;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.899994281 UTC

[section ""data" . Control.Arrow.$c***_closure" {
     Control.Arrow.$c***_closure:
         const Control.Arrow.$c***_info;
 },
 sat_sbQ7x_entry() //  [R1]
         { []
         }
     {offset
       cbQmF: // global
           _sbQ7x::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbQmG; else goto cbQmH;
       cbQmH: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQmJ; else goto cbQmI;
       cbQmJ: // global
           HpAlloc = 24;
           goto cbQmG;
       cbQmG: // global
           R1 = _sbQ7x::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQmI: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQ7x::P64;
           _sbQ7m::P64 = P64[_sbQ7x::P64 + 16];
           _sbQ7n::P64 = P64[_sbQ7x::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sbQ7n::P64;
           R2 = Hp - 16;
           R1 = _sbQ7m::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ7x_info" {
     sat_sbQ7x_info:
         const sat_sbQ7x_entry;
         const 2;
         const 18;
 },
 sat_sbQ7s_entry() //  [R1]
         { []
         }
     {offset
       cbQmP: // global
           _sbQ7s::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbQmQ; else goto cbQmR;
       cbQmR: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQmT; else goto cbQmS;
       cbQmT: // global
           HpAlloc = 24;
           goto cbQmQ;
       cbQmQ: // global
           R1 = _sbQ7s::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQmS: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQ7s::P64;
           _sbQ7l::P64 = P64[_sbQ7s::P64 + 16];
           _sbQ7n::P64 = P64[_sbQ7s::P64 + 24];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _sbQ7n::P64;
           R2 = Hp - 16;
           R1 = _sbQ7l::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ7s_info" {
     sat_sbQ7s_info:
         const sat_sbQ7s_entry;
         const 2;
         const 18;
 },
 Control.Arrow.$c***_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbQmV: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cbQmZ; else goto cbQmY;
       cbQmZ: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$c***_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQmY: // global
           I64[Hp - 80] = sat_sbQ7x_info;
           P64[Hp - 64] = R3;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = sat_sbQ7s_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 80;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$c***_info" {
     Control.Arrow.$c***_info:
         const Control.Arrow.$c***_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.908656591 UTC

[section ""data" . Control.Arrow.$fArrow(->)_$carr_closure" {
     Control.Arrow.$fArrow(->)_$carr_closure:
         const Control.Arrow.$fArrow(->)_$carr_info;
 },
 Control.Arrow.$fArrow(->)_$carr_entry() //  [R2]
         { []
         }
     {offset
       cbQnq: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrow(->)_$carr_info" {
     Control.Arrow.$fArrow(->)_$carr_info:
         const Control.Arrow.$fArrow(->)_$carr_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.912774895 UTC

[section ""data" . Control.Arrow.$fCategoryTYPEKleisli1_closure" {
     Control.Arrow.$fCategoryTYPEKleisli1_closure:
         const Control.Arrow.$fCategoryTYPEKleisli1_info;
 },
 Control.Arrow.$fCategoryTYPEKleisli1_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       cbQnC: // global
           _sbQ7C::P64 = R5;
           _sbQ7B::P64 = R4;
           _sbQ7A::P64 = R3;
           _sbQ7z::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbQnD; else goto cbQnE;
       cbQnE: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbQnG; else goto cbQnF;
       cbQnG: // global
           HpAlloc = 32;
           goto cbQnD;
       cbQnD: // global
           R5 = _sbQ7C::P64;
           R4 = _sbQ7B::P64;
           R3 = _sbQ7A::P64;
           R2 = _sbQ7z::P64;
           R1 = Control.Arrow.$fCategoryTYPEKleisli1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQnF: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sbQ7B::P64;
           P64[Hp] = _sbQ7C::P64;
           R2 = _sbQ7z::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sbQ7A::P64;
           Sp = Sp - 24;
           call GHC.Base.>>=_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fCategoryTYPEKleisli1_info" {
     Control.Arrow.$fCategoryTYPEKleisli1_info:
         const Control.Arrow.$fCategoryTYPEKleisli1_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.917826633 UTC

[section ""data" . Control.Arrow.$fCategoryTYPEKleisli_closure" {
     Control.Arrow.$fCategoryTYPEKleisli_closure:
         const Control.Arrow.$fCategoryTYPEKleisli_info;
 },
 sat_sbQ7G_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cbQnY: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Control.Arrow.$fCategoryTYPEKleisli1_entry(R5,
                                                           R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQ7G_info" {
     sat_sbQ7G_info:
         const sat_sbQ7G_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sbQ7F_entry() //  [R1]
         { []
         }
     {offset
       cbQo5: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbQo6; else goto cbQo7;
       cbQo6: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQo7: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ7F_info" {
     sat_sbQ7F_info:
         const sat_sbQ7F_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fCategoryTYPEKleisli_entry() //  [R2]
         { []
         }
     {offset
       cbQo9: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbQod; else goto cbQoc;
       cbQod: // global
           HpAlloc = 64;
           R2 = R2;
           R1 = Control.Arrow.$fCategoryTYPEKleisli_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQoc: // global
           I64[Hp - 56] = sat_sbQ7G_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = sat_sbQ7F_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = Control.Category.C:Category_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 53;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fCategoryTYPEKleisli_info" {
     Control.Arrow.$fCategoryTYPEKleisli_info:
         const Control.Arrow.$fCategoryTYPEKleisli_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.926541339 UTC

[section ""data" . Control.Arrow.$fArrowKleisli4_closure" {
     Control.Arrow.$fArrowKleisli4_closure:
         const Control.Arrow.$fArrowKleisli4_info;
 },
 sat_sbQ7V_entry() //  [R1, R2]
         { []
         }
     {offset
       cbQoH: // global
           _sbQ7T::P64 = R2;
           _sbQ7V::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbQoI; else goto cbQoJ;
       cbQoJ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQoL; else goto cbQoK;
       cbQoL: // global
           HpAlloc = 24;
           goto cbQoI;
       cbQoI: // global
           R2 = _sbQ7T::P64;
           R1 = _sbQ7V::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQoK: // global
           _sbQ7H::P64 = P64[_sbQ7V::P64 + 7];
           _sbQ7K::P64 = P64[_sbQ7V::P64 + 15];
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = _sbQ7K::P64;
           P64[Hp] = _sbQ7T::P64;
           R2 = _sbQ7H::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 15;
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQ7V_info" {
     sat_sbQ7V_info:
         const sat_sbQ7V_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_sbQ7S_entry() //  [R1]
         { []
         }
     {offset
       cbQoR: // global
           _sbQ7S::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbQoS; else goto cbQoT;
       cbQoT: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQoV; else goto cbQoU;
       cbQoV: // global
           HpAlloc = 24;
           goto cbQoS;
       cbQoS: // global
           R1 = _sbQ7S::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQoU: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQ7S::P64;
           _sbQ7I::P64 = P64[_sbQ7S::P64 + 16];
           _sbQ7J::P64 = P64[_sbQ7S::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sbQ7J::P64;
           R2 = Hp - 16;
           R1 = _sbQ7I::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ7S_info" {
     sat_sbQ7S_info:
         const sat_sbQ7S_entry;
         const 2;
         const 18;
 },
 Control.Arrow.$fArrowKleisli4_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbQoW: // global
           _sbQ7J::P64 = R4;
           _sbQ7I::P64 = R3;
           _sbQ7H::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbQoX; else goto cbQoY;
       cbQoY: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cbQp0; else goto cbQoZ;
       cbQp0: // global
           HpAlloc = 80;
           goto cbQoX;
       cbQoX: // global
           R4 = _sbQ7J::P64;
           R3 = _sbQ7I::P64;
           R2 = _sbQ7H::P64;
           R1 = Control.Arrow.$fArrowKleisli4_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQoZ: // global
           I64[Hp - 72] = stg_sel_0_upd_info;
           P64[Hp - 56] = _sbQ7J::P64;
           I64[Hp - 48] = sat_sbQ7V_info;
           P64[Hp - 40] = _sbQ7H::P64;
           P64[Hp - 32] = Hp - 72;
           I64[Hp - 24] = sat_sbQ7S_info;
           P64[Hp - 8] = _sbQ7I::P64;
           P64[Hp] = _sbQ7J::P64;
           R2 = _sbQ7H::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 47;
           Sp = Sp - 24;
           call GHC.Base.>>=_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowKleisli4_info" {
     Control.Arrow.$fArrowKleisli4_info:
         const Control.Arrow.$fArrowKleisli4_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.936091181 UTC

[section ""data" . Control.Arrow.$fArrowKleisli3_closure" {
     Control.Arrow.$fArrowKleisli3_closure:
         const Control.Arrow.$fArrowKleisli3_info;
 },
 sat_sbQ8a_entry() //  [R1, R2]
         { []
         }
     {offset
       cbQpB: // global
           _sbQ88::P64 = R2;
           _sbQ8a::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbQpC; else goto cbQpD;
       cbQpD: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQpF; else goto cbQpE;
       cbQpF: // global
           HpAlloc = 24;
           goto cbQpC;
       cbQpC: // global
           R2 = _sbQ88::P64;
           R1 = _sbQ8a::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQpE: // global
           _sbQ7W::P64 = P64[_sbQ8a::P64 + 7];
           _sbQ7Z::P64 = P64[_sbQ8a::P64 + 15];
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = _sbQ88::P64;
           P64[Hp] = _sbQ7Z::P64;
           R2 = _sbQ7W::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 15;
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQ8a_info" {
     sat_sbQ8a_info:
         const sat_sbQ8a_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_sbQ87_entry() //  [R1]
         { []
         }
     {offset
       cbQpL: // global
           _sbQ87::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbQpM; else goto cbQpN;
       cbQpN: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQpP; else goto cbQpO;
       cbQpP: // global
           HpAlloc = 24;
           goto cbQpM;
       cbQpM: // global
           R1 = _sbQ87::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQpO: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQ87::P64;
           _sbQ7X::P64 = P64[_sbQ87::P64 + 16];
           _sbQ7Y::P64 = P64[_sbQ87::P64 + 24];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _sbQ7Y::P64;
           R2 = Hp - 16;
           R1 = _sbQ7X::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ87_info" {
     sat_sbQ87_info:
         const sat_sbQ87_entry;
         const 2;
         const 18;
 },
 Control.Arrow.$fArrowKleisli3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbQpQ: // global
           _sbQ7Y::P64 = R4;
           _sbQ7X::P64 = R3;
           _sbQ7W::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbQpR; else goto cbQpS;
       cbQpS: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cbQpU; else goto cbQpT;
       cbQpU: // global
           HpAlloc = 80;
           goto cbQpR;
       cbQpR: // global
           R4 = _sbQ7Y::P64;
           R3 = _sbQ7X::P64;
           R2 = _sbQ7W::P64;
           R1 = Control.Arrow.$fArrowKleisli3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQpT: // global
           I64[Hp - 72] = stg_sel_1_upd_info;
           P64[Hp - 56] = _sbQ7Y::P64;
           I64[Hp - 48] = sat_sbQ8a_info;
           P64[Hp - 40] = _sbQ7W::P64;
           P64[Hp - 32] = Hp - 72;
           I64[Hp - 24] = sat_sbQ87_info;
           P64[Hp - 8] = _sbQ7X::P64;
           P64[Hp] = _sbQ7Y::P64;
           R2 = _sbQ7W::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 47;
           Sp = Sp - 24;
           call GHC.Base.>>=_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowKleisli3_info" {
     Control.Arrow.$fArrowKleisli3_info:
         const Control.Arrow.$fArrowKleisli3_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.944296482 UTC

[section ""data" . Control.Arrow.$fArrowKleisli5_closure" {
     Control.Arrow.$fArrowKleisli5_closure:
         const Control.Arrow.$fArrowKleisli5_info;
 },
 Control.Arrow.$fArrowKleisli5_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbQqp: // global
           _sbQ8d::P64 = R4;
           _sbQ8c::P64 = R3;
           _sbQ8b::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cbQqq; else goto cbQqr;
       cbQqr: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbQqt; else goto cbQqs;
       cbQqt: // global
           HpAlloc = 32;
           goto cbQqq;
       cbQqq: // global
           R4 = _sbQ8d::P64;
           R3 = _sbQ8c::P64;
           R2 = _sbQ8b::P64;
           R1 = Control.Arrow.$fArrowKleisli5_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQqs: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sbQ8c::P64;
           P64[Hp] = _sbQ8d::P64;
           R2 = _sbQ8b::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 24;
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowKleisli5_info" {
     Control.Arrow.$fArrowKleisli5_info:
         const Control.Arrow.$fArrowKleisli5_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.949278272 UTC

[section ""data" . Control.Arrow.$fArrowPlusKleisli1_closure" {
     Control.Arrow.$fArrowPlusKleisli1_closure:
         const Control.Arrow.$fArrowPlusKleisli1_info;
 },
 Control.Arrow.$fArrowPlusKleisli1_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       cbQqI: // global
           _sbQ8i::P64 = R5;
           _sbQ8h::P64 = R4;
           _sbQ8g::P64 = R3;
           _sbQ8f::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbQqJ; else goto cbQqK;
       cbQqK: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbQqM; else goto cbQqL;
       cbQqM: // global
           HpAlloc = 64;
           goto cbQqJ;
       cbQqJ: // global
           R5 = _sbQ8i::P64;
           R4 = _sbQ8h::P64;
           R3 = _sbQ8g::P64;
           R2 = _sbQ8f::P64;
           R1 = Control.Arrow.$fArrowPlusKleisli1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQqL: // global
           I64[Hp - 56] = stg_ap_2_upd_info;
           P64[Hp - 40] = _sbQ8h::P64;
           P64[Hp - 32] = _sbQ8i::P64;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = _sbQ8g::P64;
           P64[Hp] = _sbQ8i::P64;
           R2 = _sbQ8f::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 56;
           Sp = Sp - 24;
           call GHC.Base.mplus_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowPlusKleisli1_info" {
     Control.Arrow.$fArrowPlusKleisli1_info:
         const Control.Arrow.$fArrowPlusKleisli1_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.953753904 UTC

[section ""data" . Control.Arrow.$fAlternativeArrowMonad_$capp_closure" {
     Control.Arrow.$fAlternativeArrowMonad_$capp_closure:
         const Control.Arrow.$fAlternativeArrowMonad_$capp_info;
 },
 Control.Arrow.$fAlternativeArrowMonad_$capp_entry() //  [R2]
         { []
         }
     {offset
       cbQr4: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQr5; else goto cbQr6;
       cbQr5: // global
           R2 = R2;
           R1 = Control.Arrow.$fAlternativeArrowMonad_$capp_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQr6: // global
           I64[Sp - 8] = block_cbQr1_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQra; else goto cbQr2;
       ubQra: // global
           call _cbQr1(R1) args: 0, res: 0, upd: 0;
       cbQr2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fAlternativeArrowMonad_$capp_info" {
     Control.Arrow.$fAlternativeArrowMonad_$capp_info:
         const Control.Arrow.$fAlternativeArrowMonad_$capp_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQr1() //  [R1]
         { []
         }
     {offset
       cbQr1: // global
           R2 = P64[R1 + 15];
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQr1_info" {
     block_cbQr1_info:
         const _cbQr1;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.959700503 UTC

[section ""data" . Control.Arrow.$fApplicativeArrowMonad5_closure" {
     Control.Arrow.$fApplicativeArrowMonad5_closure:
         const Control.Arrow.$fApplicativeArrowMonad5_info;
 },
 sat_sbQ8t_entry() //  [R1]
         { []
         }
     {offset
       cbQrt: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQru; else goto cbQrv;
       cbQru: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQrv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ8t_info" {
     sat_sbQ8t_info:
         const sat_sbQ8t_entry;
         const 2;
         const 18;
 },
 Control.Arrow.$fApplicativeArrowMonad5_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbQry: // global
           _sbQ8r::P64 = R4;
           _sbQ8q::P64 = R3;
           _sbQ8p::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbQrz; else goto cbQrA;
       cbQrA: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbQrC; else goto cbQrB;
       cbQrC: // global
           HpAlloc = 32;
           goto cbQrz;
       cbQrz: // global
           R4 = _sbQ8r::P64;
           R3 = _sbQ8q::P64;
           R2 = _sbQ8p::P64;
           R1 = Control.Arrow.$fApplicativeArrowMonad5_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQrB: // global
           I64[Hp - 24] = sat_sbQ8t_info;
           P64[Hp - 8] = _sbQ8p::P64;
           P64[Hp] = _sbQ8q::P64;
           I64[Sp - 24] = block_cbQrw_info;
           R2 = _sbQ8p::P64;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sbQ8r::P64;
           Sp = Sp - 24;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fApplicativeArrowMonad5_info" {
     Control.Arrow.$fApplicativeArrowMonad5_info:
         const Control.Arrow.$fApplicativeArrowMonad5_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbQrw() //  [R1]
         { []
         }
     {offset
       cbQrw: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQrw_info" {
     block_cbQrw_info:
         const _cbQrw;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.968423982 UTC

[section ""data" . Control.Arrow.$fFunctorArrowMonad1_closure" {
     Control.Arrow.$fFunctorArrowMonad1_closure:
         const Control.Arrow.$fFunctorArrowMonad1_info;
 },
 sat_sbQ8z_entry() //  [R1]
         { []
         }
     {offset
       cbQsc: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQ8z_info" {
     sat_sbQ8z_info:
         const sat_sbQ8z_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbQ8A_entry() //  [R1]
         { []
         }
     {offset
       cbQsf: // global
           _sbQ8A::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cbQsg; else goto cbQsh;
       cbQsh: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbQsj; else goto cbQsi;
       cbQsj: // global
           HpAlloc = 16;
           goto cbQsg;
       cbQsg: // global
           R1 = _sbQ8A::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQsi: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQ8A::P64;
           _sbQ8u::P64 = P64[_sbQ8A::P64 + 16];
           _sbQ8v::P64 = P64[_sbQ8A::P64 + 24];
           I64[Hp - 8] = sat_sbQ8z_info;
           P64[Hp] = _sbQ8v::P64;
           R2 = _sbQ8u::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 7;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ8A_info" {
     sat_sbQ8A_info:
         const sat_sbQ8A_entry;
         const 2;
         const 18;
 },
 Control.Arrow.$fFunctorArrowMonad1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbQsm: // global
           _sbQ8w::P64 = R4;
           _sbQ8v::P64 = R3;
           _sbQ8u::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbQsn; else goto cbQso;
       cbQso: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbQsq; else goto cbQsp;
       cbQsq: // global
           HpAlloc = 32;
           goto cbQsn;
       cbQsn: // global
           R4 = _sbQ8w::P64;
           R3 = _sbQ8v::P64;
           R2 = _sbQ8u::P64;
           R1 = Control.Arrow.$fFunctorArrowMonad1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQsp: // global
           I64[Hp - 24] = sat_sbQ8A_info;
           P64[Hp - 8] = _sbQ8u::P64;
           P64[Hp] = _sbQ8v::P64;
           I64[Sp - 24] = block_cbQsk_info;
           R2 = _sbQ8u::P64;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sbQ8w::P64;
           Sp = Sp - 24;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fFunctorArrowMonad1_info" {
     Control.Arrow.$fFunctorArrowMonad1_info:
         const Control.Arrow.$fFunctorArrowMonad1_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbQsk() //  [R1]
         { []
         }
     {offset
       cbQsk: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQsk_info" {
     block_cbQsk_info:
         const _cbQsk;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.977829394 UTC

[section ""data" . Control.Arrow.$fFunctorArrowMonad_closure" {
     Control.Arrow.$fFunctorArrowMonad_closure:
         const Control.Arrow.$fFunctorArrowMonad_info;
 },
 sat_sbQ8D_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbQt0: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fFunctorArrowMonad1_entry(R4,
                                                         R3,
                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQ8D_info" {
     sat_sbQ8D_info:
         const sat_sbQ8D_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbQ8C_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbQt8: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fApplicativeArrowMonad5_entry(R4,
                                                             R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQ8C_info" {
     sat_sbQ8C_info:
         const sat_sbQ8C_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 Control.Arrow.$fFunctorArrowMonad_entry() //  [R2]
         { []
         }
     {offset
       cbQtc: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cbQtg; else goto cbQtf;
       cbQtg: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = Control.Arrow.$fFunctorArrowMonad_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQtf: // global
           I64[Hp - 48] = sat_sbQ8D_info;
           P64[Hp - 40] = R2;
           I64[Hp - 32] = sat_sbQ8C_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = GHC.Base.C:Functor_con_info;
           P64[Hp - 8] = Hp - 30;
           P64[Hp] = Hp - 46;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fFunctorArrowMonad_info" {
     Control.Arrow.$fFunctorArrowMonad_info:
         const Control.Arrow.$fFunctorArrowMonad_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.986818221 UTC

[section ""data" . Control.Arrow.$fAlternativeArrowMonad2_closure" {
     Control.Arrow.$fAlternativeArrowMonad2_closure:
         const Control.Arrow.$fAlternativeArrowMonad2_info;
 },
 sat_sbQ8J_entry() //  [R1]
         { []
         }
     {offset
       cbQtF: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cbQtG; else goto cbQtH;
       cbQtG: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQtH: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Control.Arrow.&&&_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ8J_info" {
     sat_sbQ8J_info:
         const sat_sbQ8J_entry;
         const 3;
         const 15;
 },
 sat_sbQ8I_entry() //  [R1]
         { []
         }
     {offset
       cbQtM: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQtN; else goto cbQtO;
       cbQtN: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQtO: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Control.Arrow.$fAlternativeArrowMonad_$capp_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ8I_info" {
     sat_sbQ8I_info:
         const sat_sbQ8I_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fAlternativeArrowMonad2_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbQtR: // global
           _sbQ8G::P64 = R4;
           _sbQ8F::P64 = R3;
           _sbQ8E::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbQtS; else goto cbQtT;
       cbQtT: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbQtV; else goto cbQtU;
       cbQtV: // global
           HpAlloc = 64;
           goto cbQtS;
       cbQtS: // global
           R4 = _sbQ8G::P64;
           R3 = _sbQ8F::P64;
           R2 = _sbQ8E::P64;
           R1 = Control.Arrow.$fAlternativeArrowMonad2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQtU: // global
           I64[Hp - 56] = sat_sbQ8J_info;
           P64[Hp - 40] = _sbQ8E::P64;
           P64[Hp - 32] = _sbQ8F::P64;
           P64[Hp - 24] = _sbQ8G::P64;
           I64[Hp - 16] = sat_sbQ8I_info;
           P64[Hp] = _sbQ8E::P64;
           I64[Sp - 24] = block_cbQtP_info;
           R2 = _sbQ8E::P64;
           P64[Sp - 16] = Hp - 56;
           P64[Sp - 8] = Hp - 16;
           Sp = Sp - 24;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fAlternativeArrowMonad2_info" {
     Control.Arrow.$fAlternativeArrowMonad2_info:
         const Control.Arrow.$fAlternativeArrowMonad2_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbQtP() //  [R1]
         { []
         }
     {offset
       cbQtP: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           _cbQtB::P64 = P64[Sp + 8];
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = _cbQtB::P64;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQtP_info" {
     block_cbQtP_info:
         const _cbQtP;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:43.996354102 UTC

[section ""data" . Control.Arrow.$fApplicativeArrowMonad6_closure" {
     Control.Arrow.$fApplicativeArrowMonad6_closure:
         const Control.Arrow.$fApplicativeArrowMonad6_info;
 },
 sat_sbQ8N_entry() //  [R1]
         { []
         }
     {offset
       cbQuC: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQ8N_info" {
     sat_sbQ8N_info:
         const sat_sbQ8N_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Control.Arrow.$fApplicativeArrowMonad6_entry() //  [R2, R3]
         { []
         }
     {offset
       cbQuF: // global
           _sbQ8L::P64 = R3;
           _sbQ8K::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cbQuG; else goto cbQuH;
       cbQuH: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbQuJ; else goto cbQuI;
       cbQuJ: // global
           HpAlloc = 16;
           goto cbQuG;
       cbQuG: // global
           R3 = _sbQ8L::P64;
           R2 = _sbQ8K::P64;
           R1 = Control.Arrow.$fApplicativeArrowMonad6_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQuI: // global
           I64[Hp - 8] = sat_sbQ8N_info;
           P64[Hp] = _sbQ8L::P64;
           R2 = _sbQ8K::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 7;
           Sp = Sp - 16;
           call Control.Arrow.arr_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fApplicativeArrowMonad6_info" {
     Control.Arrow.$fApplicativeArrowMonad6_info:
         const Control.Arrow.$fApplicativeArrowMonad6_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.002007982 UTC

[section ""data" . Control.Arrow.$fApplicativeArrowMonad4_closure" {
     Control.Arrow.$fApplicativeArrowMonad4_closure:
         const Control.Arrow.$fApplicativeArrowMonad4_info;
 },
 sat_sbQ8R_entry() //  [R1]
         { []
         }
     {offset
       cbQv3: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbQv4; else goto cbQv5;
       cbQv4: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQv5: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fApplicativeArrowMonad5_entry(R4,
                                                             R3,
                                                             R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ8R_info" {
     sat_sbQ8R_info:
         const sat_sbQ8R_entry;
         const 3;
         const 15;
 },
 Control.Arrow.$fApplicativeArrowMonad4_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbQv6: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto cbQva; else goto cbQv9;
       cbQva: // global
           HpAlloc = 40;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fApplicativeArrowMonad4_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQv9: // global
           I64[Hp - 32] = sat_sbQ8R_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R3 = Hp - 32;
           R2 = R2;
           R1 = Control.Arrow.$fAlternativeArrowMonad2_closure+3;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fApplicativeArrowMonad4_info" {
     Control.Arrow.$fApplicativeArrowMonad4_info:
         const Control.Arrow.$fApplicativeArrowMonad4_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.007026323 UTC

[section ""data" . Control.Arrow.$fApplicativeArrowMonad3_closure" {
     Control.Arrow.$fApplicativeArrowMonad3_closure:
         const Control.Arrow.$fApplicativeArrowMonad3_info;
 },
 Control.Arrow.$fApplicativeArrowMonad3_entry() //  [R3]
         { []
         }
     {offset
       cbQvp: // global
           R1 = R3;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fApplicativeArrowMonad3_info" {
     Control.Arrow.$fApplicativeArrowMonad3_info:
         const Control.Arrow.$fApplicativeArrowMonad3_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.011830788 UTC

[section ""data" . Control.Arrow.$fApplicativeArrowMonad2_closure" {
     Control.Arrow.$fApplicativeArrowMonad2_closure:
         const Control.Arrow.$fApplicativeArrowMonad2_info;
 },
 sat_sbQ8Y_entry() //  [R1]
         { []
         }
     {offset
       cbQvI: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQvJ; else goto cbQvK;
       cbQvJ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQvK: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Control.Arrow.$fApplicativeArrowMonad3_closure+2;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ8Y_info" {
     sat_sbQ8Y_info:
         const sat_sbQ8Y_entry;
         const 1;
         const 16;
 },
 sat_sbQ8Z_entry() //  [R1]
         { []
         }
     {offset
       cbQvN: // global
           _sbQ8Z::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbQvO; else goto cbQvP;
       cbQvP: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQvR; else goto cbQvQ;
       cbQvR: // global
           HpAlloc = 24;
           goto cbQvO;
       cbQvO: // global
           R1 = _sbQ8Z::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQvQ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQ8Z::P64;
           _sbQ8U::P64 = P64[_sbQ8Z::P64 + 16];
           _sbQ8V::P64 = P64[_sbQ8Z::P64 + 24];
           I64[Hp - 16] = sat_sbQ8Y_info;
           P64[Hp] = _sbQ8U::P64;
           I64[Sp - 40] = block_cbQvL_info;
           R2 = _sbQ8U::P64;
           P64[Sp - 32] = Hp - 16;
           P64[Sp - 24] = _sbQ8V::P64;
           Sp = Sp - 40;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ8Z_info" {
     sat_sbQ8Z_info:
         const sat_sbQ8Z_entry;
         const 2;
         const 18;
 },
 _cbQvL() //  [R1]
         { []
         }
     {offset
       cbQvL: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbQvL_info" {
     block_cbQvL_info:
         const _cbQvL;
         const 2;
         const 30;
 },
 Control.Arrow.$fApplicativeArrowMonad2_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbQvV: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbQvZ; else goto cbQvY;
       cbQvZ: // global
           HpAlloc = 32;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fApplicativeArrowMonad2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQvY: // global
           I64[Hp - 24] = sat_sbQ8Z_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R4 = R4;
           R3 = Hp - 24;
           R2 = R2;
           call Control.Arrow.$fAlternativeArrowMonad2_entry(R4,
                                                             R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fApplicativeArrowMonad2_info" {
     Control.Arrow.$fApplicativeArrowMonad2_info:
         const Control.Arrow.$fApplicativeArrowMonad2_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.023563432 UTC

[section ""data" . Control.Arrow.$fApplicativeArrowMonad1_closure" {
     Control.Arrow.$fApplicativeArrowMonad1_closure:
         const Control.Arrow.$fApplicativeArrowMonad1_info;
 },
 sat_sbQ93_entry() //  [R1]
         { []
         }
     {offset
       cbQwA: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQwB; else goto cbQwC;
       cbQwB: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQwC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = GHC.Base.const_closure+2;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ93_info" {
     sat_sbQ93_info:
         const sat_sbQ93_entry;
         const 1;
         const 16;
 },
 sat_sbQ94_entry() //  [R1]
         { []
         }
     {offset
       cbQwF: // global
           _sbQ94::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbQwG; else goto cbQwH;
       cbQwH: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQwJ; else goto cbQwI;
       cbQwJ: // global
           HpAlloc = 24;
           goto cbQwG;
       cbQwG: // global
           R1 = _sbQ94::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQwI: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQ94::P64;
           _sbQ90::P64 = P64[_sbQ94::P64 + 16];
           _sbQ91::P64 = P64[_sbQ94::P64 + 24];
           I64[Hp - 16] = sat_sbQ93_info;
           P64[Hp] = _sbQ90::P64;
           I64[Sp - 40] = block_cbQwD_info;
           R2 = _sbQ90::P64;
           P64[Sp - 32] = Hp - 16;
           P64[Sp - 24] = _sbQ91::P64;
           Sp = Sp - 40;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ94_info" {
     sat_sbQ94_info:
         const sat_sbQ94_entry;
         const 2;
         const 18;
 },
 _cbQwD() //  [R1]
         { []
         }
     {offset
       cbQwD: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbQwD_info" {
     block_cbQwD_info:
         const _cbQwD;
         const 2;
         const 30;
 },
 Control.Arrow.$fApplicativeArrowMonad1_entry() //  [R2, R3]
         { []
         }
     {offset
       cbQwN: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbQwR; else goto cbQwQ;
       cbQwR: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fApplicativeArrowMonad1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQwQ: // global
           I64[Hp - 24] = sat_sbQ94_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R3 = Hp - 24;
           R2 = R2;
           R1 = Control.Arrow.$fAlternativeArrowMonad2_closure+3;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fApplicativeArrowMonad1_info" {
     Control.Arrow.$fApplicativeArrowMonad1_info:
         const Control.Arrow.$fApplicativeArrowMonad1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.036032842 UTC

[section ""data" . Control.Arrow.$fApplicativeArrowMonad_closure" {
     Control.Arrow.$fApplicativeArrowMonad_closure:
         const Control.Arrow.$fApplicativeArrowMonad_info;
 },
 sat_sbQ9b_entry() //  [R1, R2]
         { []
         }
     {offset
       cbQxq: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Control.Arrow.$fApplicativeArrowMonad1_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQ9b_info" {
     sat_sbQ9b_info:
         const sat_sbQ9b_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbQ9a_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbQxy: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fApplicativeArrowMonad2_entry(R4,
                                                             R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQ9a_info" {
     sat_sbQ9a_info:
         const sat_sbQ9a_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbQ99_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbQxG: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fApplicativeArrowMonad4_entry(R4,
                                                             R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQ99_info" {
     sat_sbQ99_info:
         const sat_sbQ99_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbQ98_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbQxO: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fAlternativeArrowMonad2_entry(R4,
                                                             R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQ98_info" {
     sat_sbQ98_info:
         const sat_sbQ98_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbQ97_entry() //  [R1, R2]
         { []
         }
     {offset
       cbQxW: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Control.Arrow.$fApplicativeArrowMonad6_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQ97_info" {
     sat_sbQ97_info:
         const sat_sbQ97_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbQ96_entry() //  [R1]
         { []
         }
     {offset
       cbQy3: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbQy4; else goto cbQy5;
       cbQy4: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQy5: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fFunctorArrowMonad_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ96_info" {
     sat_sbQ96_info:
         const sat_sbQ96_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fApplicativeArrowMonad_entry() //  [R2]
         { []
         }
     {offset
       cbQy7: // global
           Hp = Hp + 160;
           if (Hp > HpLim) (likely: False) goto cbQyb; else goto cbQya;
       cbQyb: // global
           HpAlloc = 160;
           R2 = R2;
           R1 = Control.Arrow.$fApplicativeArrowMonad_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQya: // global
           I64[Hp - 152] = sat_sbQ9b_info;
           P64[Hp - 144] = R2;
           I64[Hp - 136] = sat_sbQ9a_info;
           P64[Hp - 128] = R2;
           I64[Hp - 120] = sat_sbQ99_info;
           P64[Hp - 112] = R2;
           I64[Hp - 104] = sat_sbQ98_info;
           P64[Hp - 96] = R2;
           I64[Hp - 88] = sat_sbQ97_info;
           P64[Hp - 80] = R2;
           I64[Hp - 72] = sat_sbQ96_info;
           P64[Hp - 56] = R2;
           I64[Hp - 48] = GHC.Base.C:Applicative_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 87;
           P64[Hp - 24] = Hp - 102;
           P64[Hp - 16] = Hp - 118;
           P64[Hp - 8] = Hp - 134;
           P64[Hp] = Hp - 151;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fApplicativeArrowMonad_info" {
     Control.Arrow.$fApplicativeArrowMonad_info:
         const Control.Arrow.$fApplicativeArrowMonad_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.053523932 UTC

[section ""data" . Control.Arrow.$fMonadArrowMonad_$c>>=_closure" {
     Control.Arrow.$fMonadArrowMonad_$c>>=_closure:
         const Control.Arrow.$fMonadArrowMonad_$c>>=_info;
 },
 sat_sbQ9k_entry() //  [R1, R2]
         { []
         }
     {offset
       cbQzf: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cbQzj; else goto cbQzi;
       cbQzj: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQzi: // global
           _sbQ9e::P64 = P64[R1 + 7];
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = _sbQ9e::P64;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = GHC.Tuple.()_closure+1;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQ9k_info" {
     sat_sbQ9k_info:
         const sat_sbQ9k_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbQ9l_entry() //  [R1]
         { []
         }
     {offset
       cbQzk: // global
           _sbQ9l::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cbQzl; else goto cbQzm;
       cbQzm: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbQzo; else goto cbQzn;
       cbQzo: // global
           HpAlloc = 16;
           goto cbQzl;
       cbQzl: // global
           R1 = _sbQ9l::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQzn: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQ9l::P64;
           _sbQ9e::P64 = P64[_sbQ9l::P64 + 16];
           _sbQ9f::P64 = P64[_sbQ9l::P64 + 24];
           I64[Hp - 8] = sat_sbQ9k_info;
           P64[Hp] = _sbQ9e::P64;
           R2 = _sbQ9f::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 7;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ9l_info" {
     sat_sbQ9l_info:
         const sat_sbQ9l_entry;
         const 2;
         const 18;
 },
 sat_sbQ9m_entry() //  [R1]
         { []
         }
     {offset
       cbQzp: // global
           _sbQ9m::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbQzq; else goto cbQzr;
       cbQzr: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbQzt; else goto cbQzs;
       cbQzt: // global
           HpAlloc = 32;
           goto cbQzq;
       cbQzq: // global
           R1 = _sbQ9m::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQzs: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQ9m::P64;
           _sbQ9d::P64 = P64[_sbQ9m::P64 + 16];
           _sbQ9e::P64 = P64[_sbQ9m::P64 + 24];
           _sbQ9f::P64 = P64[_sbQ9m::P64 + 32];
           _sbQ9g::P64 = P64[_sbQ9m::P64 + 40];
           I64[Hp - 24] = sat_sbQ9l_info;
           P64[Hp - 8] = _sbQ9e::P64;
           P64[Hp] = _sbQ9f::P64;
           R2 = _sbQ9g::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Hp - 24;
           P64[Sp - 24] = _sbQ9d::P64;
           Sp = Sp - 40;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ9m_info" {
     sat_sbQ9m_info:
         const sat_sbQ9m_entry;
         const 4;
         const 15;
 },
 sat_sbQ9h_entry() //  [R1]
         { []
         }
     {offset
       cbQzy: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbQzz; else goto cbQzA;
       cbQzz: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQzA: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.app_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ9h_info" {
     sat_sbQ9h_info:
         const sat_sbQ9h_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fMonadArrowMonad_$c>>=_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbQzB: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cbQzC; else goto cbQzD;
       cbQzC: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fMonadArrowMonad_$c>>=_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQzD: // global
           I64[Sp - 32] = block_cbQyS_info;
           _sbQ9c::P64 = R2;
           R2 = R2;
           P64[Sp - 24] = _sbQ9c::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call Control.Arrow.$p1ArrowApply_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fMonadArrowMonad_$c>>=_info" {
     Control.Arrow.$fMonadArrowMonad_$c>>=_info:
         const Control.Arrow.$fMonadArrowMonad_$c>>=_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbQyS() //  [R1]
         { []
         }
     {offset
       cbQyS: // global
           I64[Sp - 8] = block_cbQyW_info;
           R2 = R1;
           P64[Sp] = R1;
           Sp = Sp - 8;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQyS_info" {
     block_cbQyS_info:
         const _cbQyS;
         const 3;
         const 30;
 },
 _cbQyW() //  [R1]
         { []
         }
     {offset
       cbQyW: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cbQzH; else goto cbQzG;
       cbQzH: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbQzG: // global
           I64[Hp - 64] = sat_sbQ9m_info;
           P64[Hp - 48] = P64[Sp + 24];
           P64[Hp - 40] = P64[Sp + 32];
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = R1;
           I64[Hp - 16] = sat_sbQ9h_info;
           P64[Hp] = P64[Sp + 16];
           R2 = R1;
           I64[Sp + 16] = stg_ap_pp_info;
           P64[Sp + 24] = Hp - 16;
           P64[Sp + 32] = Hp - 64;
           Sp = Sp + 16;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQyW_info" {
     block_cbQyW_info:
         const _cbQyW;
         const 4;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.068860912 UTC

[section ""data" . Control.Arrow.$fMonadArrowMonad_$cp1Monad_closure" {
     Control.Arrow.$fMonadArrowMonad_$cp1Monad_closure:
         const Control.Arrow.$fMonadArrowMonad_$cp1Monad_info;
 },
 sat_sbQ9o_entry() //  [R1]
         { []
         }
     {offset
       cbQAG: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbQAH; else goto cbQAI;
       cbQAH: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQAI: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$p1ArrowApply_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ9o_info" {
     sat_sbQ9o_info:
         const sat_sbQ9o_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fMonadArrowMonad_$cp1Monad_entry() //  [R2]
         { []
         }
     {offset
       cbQAJ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQAN; else goto cbQAM;
       cbQAN: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Control.Arrow.$fMonadArrowMonad_$cp1Monad_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQAM: // global
           I64[Hp - 16] = sat_sbQ9o_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           call Control.Arrow.$fApplicativeArrowMonad_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fMonadArrowMonad_$cp1Monad_info" {
     Control.Arrow.$fMonadArrowMonad_$cp1Monad_info:
         const Control.Arrow.$fMonadArrowMonad_$cp1Monad_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.074959876 UTC

[section ""data" . Control.Arrow.$fMonadArrowMonad1_closure" {
     Control.Arrow.$fMonadArrowMonad1_closure:
         const Control.Arrow.$fMonadArrowMonad1_info;
 },
 sat_sbQ9t_entry() //  [R1]
         { []
         }
     {offset
       cbQB7: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQ9t_info" {
     sat_sbQ9t_info:
         const sat_sbQ9t_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Control.Arrow.$fMonadArrowMonad1_entry() //  [R2, R3]
         { []
         }
     {offset
       cbQBc: // global
           _sbQ9q::P64 = R3;
           _sbQ9p::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cbQBd; else goto cbQBe;
       cbQBe: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbQBg; else goto cbQBf;
       cbQBg: // global
           HpAlloc = 16;
           goto cbQBd;
       cbQBd: // global
           R3 = _sbQ9q::P64;
           R2 = _sbQ9p::P64;
           R1 = Control.Arrow.$fMonadArrowMonad1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQBf: // global
           I64[Hp - 8] = sat_sbQ9t_info;
           P64[Hp] = _sbQ9q::P64;
           I64[Sp - 16] = block_cbQBa_info;
           R2 = _sbQ9p::P64;
           P64[Sp - 8] = Hp - 7;
           Sp = Sp - 16;
           call Control.Arrow.$p1ArrowApply_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fMonadArrowMonad1_info" {
     Control.Arrow.$fMonadArrowMonad1_info:
         const Control.Arrow.$fMonadArrowMonad1_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _cbQBa() //  [R1]
         { []
         }
     {offset
       cbQBa: // global
           R2 = R1;
           I64[Sp] = stg_ap_p_info;
           call Control.Arrow.arr_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQBa_info" {
     block_cbQBa_info:
         const _cbQBa;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.081948617 UTC

[section ""data" . Control.Arrow.$fMonadArrowMonad_$c>>_closure" {
     Control.Arrow.$fMonadArrowMonad_$c>>_closure:
         const Control.Arrow.$fMonadArrowMonad_$c>>_info;
 },
 sat_sbQ9y_entry() //  [R1]
         { []
         }
     {offset
       cbQBI: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQ9y_info" {
     sat_sbQ9y_info:
         const sat_sbQ9y_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Control.Arrow.$fMonadArrowMonad_$c>>_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbQBL: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbQBP; else goto cbQBO;
       cbQBP: // global
           HpAlloc = 16;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fMonadArrowMonad_$c>>_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQBO: // global
           I64[Hp - 8] = sat_sbQ9y_info;
           P64[Hp] = R4;
           R4 = Hp - 7;
           R3 = R3;
           R2 = R2;
           call Control.Arrow.$fMonadArrowMonad_$c>>=_entry(R4,
                                                            R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fMonadArrowMonad_$c>>_info" {
     Control.Arrow.$fMonadArrowMonad_$c>>_info:
         const Control.Arrow.$fMonadArrowMonad_$c>>_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.087356109 UTC

[section ""data" . lvl_rbNC6_closure" {
     lvl_rbNC6_closure:
         const lvl_rbNC6_info;
         const 0;
 },
 lvl_rbNC6_entry() //  [R2]
         { []
         }
     {offset
       cbQC2: // global
           R2 = R2;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl_rbNC6_info" {
     lvl_rbNC6_info:
         const lvl_rbNC6_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const SbQC5_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.09210818 UTC

[section ""data" . Control.Arrow.$fMonadArrowMonad_closure" {
     Control.Arrow.$fMonadArrowMonad_closure:
         const Control.Arrow.$fMonadArrowMonad_info;
         const 0;
 },
 sat_sbQ9E_entry() //  [R1, R2]
         { []
         }
     {offset
       cbQCj: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Control.Arrow.$fMonadArrowMonad1_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQ9E_info" {
     sat_sbQ9E_info:
         const sat_sbQ9E_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbQ9D_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbQCr: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fMonadArrowMonad_$c>>_entry(R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQ9D_info" {
     sat_sbQ9D_info:
         const sat_sbQ9D_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbQ9C_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbQCz: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fMonadArrowMonad_$c>>=_entry(R4,
                                                            R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQ9C_info" {
     sat_sbQ9C_info:
         const sat_sbQ9C_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbQ9B_entry() //  [R1]
         { []
         }
     {offset
       cbQCG: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbQCH; else goto cbQCI;
       cbQCH: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQCI: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fMonadArrowMonad_$cp1Monad_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ9B_info" {
     sat_sbQ9B_info:
         const sat_sbQ9B_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fMonadArrowMonad_entry() //  [R2]
         { []
         }
     {offset
       cbQCK: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto cbQCO; else goto cbQCN;
       cbQCO: // global
           HpAlloc = 120;
           R2 = R2;
           R1 = Control.Arrow.$fMonadArrowMonad_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQCN: // global
           I64[Hp - 112] = sat_sbQ9E_info;
           P64[Hp - 104] = R2;
           I64[Hp - 96] = sat_sbQ9D_info;
           P64[Hp - 88] = R2;
           I64[Hp - 80] = sat_sbQ9C_info;
           P64[Hp - 72] = R2;
           I64[Hp - 64] = sat_sbQ9B_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = GHC.Base.C:Monad_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 78;
           P64[Hp - 16] = Hp - 94;
           P64[Hp - 8] = Hp - 111;
           P64[Hp] = lvl_rbNC6_closure+1;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fMonadArrowMonad_info" {
     Control.Arrow.$fMonadArrowMonad_info:
         const Control.Arrow.$fMonadArrowMonad_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const SbQC5_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.102299233 UTC

[section ""data" . Control.Arrow.$fAlternativeArrowMonad3_closure" {
     Control.Arrow.$fAlternativeArrowMonad3_closure:
         const Control.Arrow.$fAlternativeArrowMonad3_info;
 },
 Control.Arrow.$fAlternativeArrowMonad3_entry() //  [R2]
         { []
         }
     {offset
       cbQDo: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQDp; else goto cbQDq;
       cbQDp: // global
           R2 = R2;
           R1 = Control.Arrow.$fAlternativeArrowMonad3_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQDq: // global
           I64[Sp - 8] = block_cbQDm_info;
           R2 = R2;
           Sp = Sp - 8;
           call Control.Arrow.$p1ArrowPlus_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fAlternativeArrowMonad3_info" {
     Control.Arrow.$fAlternativeArrowMonad3_info:
         const Control.Arrow.$fAlternativeArrowMonad3_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQDm() //  [R1]
         { []
         }
     {offset
       cbQDm: // global
           R2 = R1;
           Sp = Sp + 8;
           call Control.Arrow.zeroArrow_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQDm_info" {
     block_cbQDm_info:
         const _cbQDm;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.108357716 UTC

[section ""data" . Control.Arrow.$fAlternativeArrowMonad_$cp1Alternative_closure" {
     Control.Arrow.$fAlternativeArrowMonad_$cp1Alternative_closure:
         const Control.Arrow.$fAlternativeArrowMonad_$cp1Alternative_info;
 },
 sat_sbQ9J_entry() //  [R1]
         { []
         }
     {offset
       cbQDN: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cbQDO; else goto cbQDP;
       cbQDO: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQDP: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_cbQDL_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Control.Arrow.$p1ArrowPlus_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ9J_info" {
     sat_sbQ9J_info:
         const sat_sbQ9J_entry;
         const 1;
         const 16;
 },
 _cbQDL() //  [R1]
         { []
         }
     {offset
       cbQDL: // global
           R2 = R1;
           Sp = Sp + 8;
           call Control.Arrow.$p1ArrowZero_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbQDL_info" {
     block_cbQDL_info:
         const _cbQDL;
         const 0;
         const 30;
 },
 Control.Arrow.$fAlternativeArrowMonad_$cp1Alternative_entry() //  [R2]
         { []
         }
     {offset
       cbQDT: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQDX; else goto cbQDW;
       cbQDX: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Control.Arrow.$fAlternativeArrowMonad_$cp1Alternative_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQDW: // global
           I64[Hp - 16] = sat_sbQ9J_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           call Control.Arrow.$fApplicativeArrowMonad_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fAlternativeArrowMonad_$cp1Alternative_info" {
     Control.Arrow.$fAlternativeArrowMonad_$cp1Alternative_info:
         const Control.Arrow.$fAlternativeArrowMonad_$cp1Alternative_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.114719223 UTC

[section ""data" . Control.Arrow.$fAlternativeArrowMonad1_closure" {
     Control.Arrow.$fAlternativeArrowMonad1_closure:
         const Control.Arrow.$fAlternativeArrowMonad1_info;
 },
 Control.Arrow.$fAlternativeArrowMonad1_entry() //  []
         { []
         }
     {offset
       cbQEg: // global
           R1 = []_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fAlternativeArrowMonad1_info" {
     Control.Arrow.$fAlternativeArrowMonad1_info:
         const Control.Arrow.$fAlternativeArrowMonad1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.122714211 UTC

[section ""data" . Control.Arrow.$fAlternativeArrowMonad_$csome_closure" {
     Control.Arrow.$fAlternativeArrowMonad_$csome_closure:
         const Control.Arrow.$fAlternativeArrowMonad_$csome_info;
 },
 sat_sbQ9V_entry() //  [R1]
         { []
         }
     {offset
       cbQER: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQES; else goto cbQET;
       cbQES: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQET: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Control.Arrow.$fAlternativeArrowMonad1_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ9V_info" {
     sat_sbQ9V_info:
         const sat_sbQ9V_entry;
         const 1;
         const 16;
 },
 sat_sbQ9W_entry() //  [R1]
         { []
         }
     {offset
       cbQEU: // global
           _sbQ9W::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbQEV; else goto cbQEW;
       cbQEW: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQEY; else goto cbQEX;
       cbQEY: // global
           HpAlloc = 24;
           goto cbQEV;
       cbQEV: // global
           R1 = _sbQ9W::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQEX: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQ9W::P64;
           _sbQ9L::P64 = P64[_sbQ9W::P64 + 16];
           _sbQ9N::P64 = P64[_sbQ9W::P64 + 24];
           _sbQ9P::P64 = P64[_sbQ9W::P64 + 32];
           I64[Hp - 16] = sat_sbQ9V_info;
           P64[Hp] = _sbQ9P::P64;
           R2 = _sbQ9L::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _sbQ9N::P64;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 40;
           call Control.Arrow.<+>_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ9W_info" {
     sat_sbQ9W_info:
         const sat_sbQ9W_entry;
         const 3;
         const 15;
 },
 sat_sbQ9T_entry() //  [R1]
         { []
         }
     {offset
       cbQF7: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQF8; else goto cbQF9;
       cbQF8: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQF9: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = GHC.Types.:_closure+2;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ9T_info" {
     sat_sbQ9T_info:
         const sat_sbQ9T_entry;
         const 1;
         const 16;
 },
 sat_sbQ9U_entry() //  [R1]
         { []
         }
     {offset
       cbQFc: // global
           _sbQ9U::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbQFd; else goto cbQFe;
       cbQFe: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQFg; else goto cbQFf;
       cbQFg: // global
           HpAlloc = 24;
           goto cbQFd;
       cbQFd: // global
           R1 = _sbQ9U::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQFf: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQ9U::P64;
           _sbQ9M::P64 = P64[_sbQ9U::P64 + 16];
           _sbQ9P::P64 = P64[_sbQ9U::P64 + 24];
           I64[Hp - 16] = sat_sbQ9T_info;
           P64[Hp] = _sbQ9P::P64;
           I64[Sp - 40] = block_cbQFa_info;
           R2 = _sbQ9P::P64;
           P64[Sp - 32] = Hp - 16;
           P64[Sp - 24] = _sbQ9M::P64;
           Sp = Sp - 40;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ9U_info" {
     sat_sbQ9U_info:
         const sat_sbQ9U_entry;
         const 2;
         const 18;
 },
 _cbQFa() //  [R1]
         { []
         }
     {offset
       cbQFa: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbQFa_info" {
     block_cbQFa_info:
         const _cbQFa;
         const 2;
         const 30;
 },
 sat_sbQ9X_entry() //  [R1]
         { []
         }
     {offset
       cbQFk: // global
           _sbQ9X::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbQFl; else goto cbQFm;
       cbQFm: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cbQFo; else goto cbQFn;
       cbQFo: // global
           HpAlloc = 72;
           goto cbQFl;
       cbQFl: // global
           R1 = _sbQ9X::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQFn: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQ9X::P64;
           _sbQ9L::P64 = P64[_sbQ9X::P64 + 16];
           _sbQ9M::P64 = P64[_sbQ9X::P64 + 24];
           _sbQ9N::P64 = P64[_sbQ9X::P64 + 32];
           _sbQ9P::P64 = P64[_sbQ9X::P64 + 40];
           I64[Hp - 64] = sat_sbQ9W_info;
           P64[Hp - 48] = _sbQ9L::P64;
           P64[Hp - 40] = _sbQ9N::P64;
           P64[Hp - 32] = _sbQ9P::P64;
           I64[Hp - 24] = sat_sbQ9U_info;
           P64[Hp - 8] = _sbQ9M::P64;
           P64[Hp] = _sbQ9P::P64;
           R2 = _sbQ9P::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Hp - 24;
           P64[Sp - 24] = Hp - 64;
           Sp = Sp - 40;
           call Control.Arrow.&&&_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ9X_info" {
     sat_sbQ9X_info:
         const sat_sbQ9X_entry;
         const 4;
         const 15;
 },
 sat_sbQ9R_entry() //  [R1]
         { []
         }
     {offset
       cbQFt: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQFu; else goto cbQFv;
       cbQFu: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQFv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Control.Arrow.$fAlternativeArrowMonad_$capp_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQ9R_info" {
     sat_sbQ9R_info:
         const sat_sbQ9R_entry;
         const 1;
         const 16;
 },
 some_v_sbQ9N_entry() //  [R1]
         { []
         }
     {offset
       cbQFw: // global
           if ((Sp + -48) < SpLim) (likely: False) goto cbQFy; else goto cbQFz;
       cbQFy: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQFz: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 48] = block_cbQEx_info;
           _sbQ9L::P64 = P64[R1 + 16];
           R2 = _sbQ9L::P64;
           P64[Sp - 40] = _sbQ9L::P64;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = R1;
           Sp = Sp - 48;
           call Control.Arrow.$p1ArrowPlus_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . some_v_sbQ9N_info" {
     some_v_sbQ9N_info:
         const some_v_sbQ9N_entry;
         const 2;
         const 18;
 },
 _cbQEx() //  [R1]
         { []
         }
     {offset
       cbQEx: // global
           I64[Sp] = block_cbQEB_info;
           R2 = R1;
           call Control.Arrow.$p1ArrowZero_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_cbQEx_info" {
     block_cbQEx_info:
         const _cbQEx;
         const 3;
         const 30;
 },
 _cbQEB() //  [R1]
         { []
         }
     {offset
       cbQEB: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cbQFD; else goto cbQFC;
       cbQFD: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       cbQFC: // global
           I64[Hp - 64] = sat_sbQ9X_info;
           P64[Hp - 48] = P64[Sp + 8];
           P64[Hp - 40] = P64[Sp + 16];
           P64[Hp - 32] = P64[Sp + 24];
           P64[Hp - 24] = R1;
           I64[Hp - 16] = sat_sbQ9R_info;
           P64[Hp] = R1;
           I64[Sp + 8] = block_cbQFx_info;
           R2 = R1;
           P64[Sp + 16] = Hp - 16;
           P64[Sp + 24] = Hp - 64;
           Sp = Sp + 8;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_cbQEB_info" {
     block_cbQEB_info:
         const _cbQEB;
         const 3;
         const 30;
 },
 _cbQFx() //  [R1]
         { []
         }
     {offset
       cbQFx: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbQFx_info" {
     block_cbQFx_info:
         const _cbQFx;
         const 2;
         const 30;
 },
 Control.Arrow.$fAlternativeArrowMonad_$csome_entry() //  [R2, R3]
         { []
         }
     {offset
       cbQFI: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbQFM; else goto cbQFL;
       cbQFM: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fAlternativeArrowMonad_$csome_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQFL: // global
           I64[Hp - 24] = some_v_sbQ9N_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fAlternativeArrowMonad_$csome_info" {
     Control.Arrow.$fAlternativeArrowMonad_$csome_info:
         const Control.Arrow.$fAlternativeArrowMonad_$csome_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.149575072 UTC

[section ""data" . Control.Arrow.$fAlternativeArrowMonad_$cmany_closure" {
     Control.Arrow.$fAlternativeArrowMonad_$cmany_closure:
         const Control.Arrow.$fAlternativeArrowMonad_$cmany_info;
 },
 $dApplicative_sbQa1_entry() //  [R1]
         { []
         }
     {offset
       cbQHk: // global
           R2 = P64[R1 + 16];
           call Control.Arrow.$p1ArrowPlus_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . $dApplicative_sbQa1_info" {
     $dApplicative_sbQa1_info:
         const $dApplicative_sbQa1_entry;
         const 1;
         const 16;
 },
 $dApplicative1_sbQa2_entry() //  [R1]
         { []
         }
     {offset
       cbQHr: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbQHs; else goto cbQHt;
       cbQHs: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQHt: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$p1ArrowZero_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . $dApplicative1_sbQa2_info" {
     $dApplicative1_sbQa2_info:
         const $dApplicative1_sbQa2_entry;
         const 1;
         const 16;
 },
 sat_sbQa7_entry() //  [R1]
         { []
         }
     {offset
       cbQHy: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQHz; else goto cbQHA;
       cbQHz: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQHA: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Control.Arrow.$fAlternativeArrowMonad1_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQa7_info" {
     sat_sbQa7_info:
         const sat_sbQa7_entry;
         const 1;
         const 16;
 },
 sat_sbQa4_entry() //  [R1]
         { []
         }
     {offset
       cbQHN: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQHO; else goto cbQHP;
       cbQHO: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQHP: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = GHC.Types.:_closure+2;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQa4_info" {
     sat_sbQa4_info:
         const sat_sbQa4_entry;
         const 1;
         const 16;
 },
 sat_sbQa5_entry() //  [R1]
         { []
         }
     {offset
       cbQHS: // global
           _sbQa5::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbQHT; else goto cbQHU;
       cbQHU: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQHW; else goto cbQHV;
       cbQHW: // global
           HpAlloc = 24;
           goto cbQHT;
       cbQHT: // global
           R1 = _sbQa5::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQHV: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQa5::P64;
           _sbQ9Z::P64 = P64[_sbQa5::P64 + 16];
           _sbQa2::P64 = P64[_sbQa5::P64 + 24];
           I64[Hp - 16] = sat_sbQa4_info;
           P64[Hp] = _sbQa2::P64;
           I64[Sp - 40] = block_cbQHQ_info;
           R2 = _sbQa2::P64;
           P64[Sp - 32] = Hp - 16;
           P64[Sp - 24] = _sbQ9Z::P64;
           Sp = Sp - 40;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQa5_info" {
     sat_sbQa5_info:
         const sat_sbQa5_entry;
         const 2;
         const 18;
 },
 _cbQHQ() //  [R1]
         { []
         }
     {offset
       cbQHQ: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbQHQ_info" {
     block_cbQHQ_info:
         const _cbQHQ;
         const 2;
         const 30;
 },
 sat_sbQa6_entry() //  [R1]
         { []
         }
     {offset
       cbQI0: // global
           _sbQa6::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbQI1; else goto cbQI2;
       cbQI2: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbQI4; else goto cbQI3;
       cbQI4: // global
           HpAlloc = 32;
           goto cbQI1;
       cbQI1: // global
           R1 = _sbQa6::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQI3: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQa6::P64;
           _sbQ9Z::P64 = P64[_sbQa6::P64 + 16];
           _sbQa0::P64 = P64[_sbQa6::P64 + 24];
           _sbQa2::P64 = P64[_sbQa6::P64 + 32];
           I64[Hp - 24] = sat_sbQa5_info;
           P64[Hp - 8] = _sbQ9Z::P64;
           P64[Hp] = _sbQa2::P64;
           R4 = _sbQa0::P64;
           R3 = Hp - 24;
           R2 = _sbQa2::P64;
           Sp = Sp - 16;
           call Control.Arrow.$fAlternativeArrowMonad2_entry(R4,
                                                             R3,
                                                             R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQa6_info" {
     sat_sbQa6_info:
         const sat_sbQa6_entry;
         const 3;
         const 15;
 },
 many_v_sbQa0_entry() //  [R1]
         { []
         }
     {offset
       cbQI5: // global
           _sbQa0::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbQI6; else goto cbQI7;
       cbQI7: // global
           Hp = Hp + 112;
           if (Hp > HpLim) (likely: False) goto cbQI9; else goto cbQI8;
       cbQI9: // global
           HpAlloc = 112;
           goto cbQI6;
       cbQI6: // global
           R1 = _sbQa0::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQI8: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQa0::P64;
           _sbQ9Y::P64 = P64[_sbQa0::P64 + 16];
           _sbQ9Z::P64 = P64[_sbQa0::P64 + 24];
           I64[Hp - 104] = $dApplicative_sbQa1_info;
           P64[Hp - 88] = _sbQ9Y::P64;
           I64[Hp - 80] = $dApplicative1_sbQa2_info;
           P64[Hp - 64] = Hp - 104;
           I64[Hp - 56] = sat_sbQa7_info;
           _cbQHn::P64 = Hp - 80;
           P64[Hp - 40] = _cbQHn::P64;
           I64[Hp - 32] = sat_sbQa6_info;
           P64[Hp - 16] = _sbQ9Z::P64;
           P64[Hp - 8] = _sbQa0::P64;
           P64[Hp] = _cbQHn::P64;
           R2 = _sbQ9Y::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Hp - 32;
           P64[Sp - 24] = Hp - 56;
           Sp = Sp - 40;
           call Control.Arrow.<+>_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . many_v_sbQa0_info" {
     many_v_sbQa0_info:
         const many_v_sbQa0_entry;
         const 2;
         const 18;
 },
 Control.Arrow.$fAlternativeArrowMonad_$cmany_entry() //  [R2, R3]
         { []
         }
     {offset
       cbQIa: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbQIe; else goto cbQId;
       cbQIe: // global
           HpAlloc = 32;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fAlternativeArrowMonad_$cmany_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQId: // global
           I64[Hp - 24] = many_v_sbQa0_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 24;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fAlternativeArrowMonad_$cmany_info" {
     Control.Arrow.$fAlternativeArrowMonad_$cmany_info:
         const Control.Arrow.$fAlternativeArrowMonad_$cmany_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.168593348 UTC

[section ""data" . Control.Arrow.$fAlternativeArrowMonad_closure" {
     Control.Arrow.$fAlternativeArrowMonad_closure:
         const Control.Arrow.$fAlternativeArrowMonad_info;
 },
 sat_sbQaf_entry() //  [R1, R2]
         { []
         }
     {offset
       cbQJl: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Control.Arrow.$fAlternativeArrowMonad_$cmany_entry(R3,
                                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQaf_info" {
     sat_sbQaf_info:
         const sat_sbQaf_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbQae_entry() //  [R1, R2]
         { []
         }
     {offset
       cbQJt: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call Control.Arrow.$fAlternativeArrowMonad_$csome_entry(R3,
                                                                   R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQae_info" {
     sat_sbQae_info:
         const sat_sbQae_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbQad_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbQJB: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cbQJC; else goto cbQJD;
       cbQJC: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQJD: // global
           _sbQab::P64 = R2;
           R2 = P64[R1 + 6];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _sbQab::P64;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call Control.Arrow.<+>_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQad_info" {
     sat_sbQad_info:
         const sat_sbQad_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbQaa_entry() //  [R1]
         { []
         }
     {offset
       cbQJI: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbQJJ; else goto cbQJK;
       cbQJJ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQJK: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fAlternativeArrowMonad3_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQaa_info" {
     sat_sbQaa_info:
         const sat_sbQaa_entry;
         const 1;
         const 16;
 },
 sat_sbQa9_entry() //  [R1]
         { []
         }
     {offset
       cbQJP: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbQJQ; else goto cbQJR;
       cbQJQ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQJR: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fAlternativeArrowMonad_$cp1Alternative_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQa9_info" {
     sat_sbQa9_info:
         const sat_sbQa9_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fAlternativeArrowMonad_entry() //  [R2]
         { []
         }
     {offset
       cbQJT: // global
           Hp = Hp + 144;
           if (Hp > HpLim) (likely: False) goto cbQJX; else goto cbQJW;
       cbQJX: // global
           HpAlloc = 144;
           R2 = R2;
           R1 = Control.Arrow.$fAlternativeArrowMonad_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQJW: // global
           I64[Hp - 136] = sat_sbQaf_info;
           P64[Hp - 128] = R2;
           I64[Hp - 120] = sat_sbQae_info;
           P64[Hp - 112] = R2;
           I64[Hp - 104] = sat_sbQad_info;
           P64[Hp - 96] = R2;
           I64[Hp - 88] = sat_sbQaa_info;
           P64[Hp - 72] = R2;
           I64[Hp - 64] = sat_sbQa9_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = GHC.Base.C:Alternative_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 88;
           P64[Hp - 16] = Hp - 102;
           P64[Hp - 8] = Hp - 119;
           P64[Hp] = Hp - 135;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fAlternativeArrowMonad_info" {
     Control.Arrow.$fAlternativeArrowMonad_info:
         const Control.Arrow.$fAlternativeArrowMonad_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.182437499 UTC

[section ""data" . Control.Arrow.$fMonadPlusArrowMonad_closure" {
     Control.Arrow.$fMonadPlusArrowMonad_closure:
         const Control.Arrow.$fMonadPlusArrowMonad_info;
         const 0;
 },
 sat_sbQan_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbQKI: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cbQKJ; else goto cbQKK;
       cbQKJ: // global
           R3 = R3;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQKK: // global
           _sbQal::P64 = R2;
           R2 = P64[R1 + 6];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _sbQal::P64;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call Control.Arrow.<+>_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQan_info" {
     sat_sbQan_info:
         const sat_sbQan_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbQak_entry() //  [R1]
         { []
         }
     {offset
       cbQKP: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbQKQ; else goto cbQKR;
       cbQKQ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQKR: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fAlternativeArrowMonad3_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQak_info" {
     sat_sbQak_info:
         const sat_sbQak_entry;
         const 1;
         const 16;
 },
 sat_sbQaj_entry() //  [R1]
         { []
         }
     {offset
       cbQKW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbQKX; else goto cbQKY;
       cbQKX: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQKY: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fMonadArrowMonad_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQaj_info" {
     sat_sbQaj_info:
         const sat_sbQaj_entry;
         const 1;
         const 4294967312;
         const SbQC5_srt+8;
 },
 sat_sbQai_entry() //  [R1]
         { []
         }
     {offset
       cbQL3: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbQL4; else goto cbQL5;
       cbQL4: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQL5: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fAlternativeArrowMonad_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQai_info" {
     sat_sbQai_info:
         const sat_sbQai_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fMonadPlusArrowMonad_entry() //  [R2, R3]
         { []
         }
     {offset
       cbQL7: // global
           Hp = Hp + 128;
           if (Hp > HpLim) (likely: False) goto cbQLb; else goto cbQLa;
       cbQLb: // global
           HpAlloc = 128;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fMonadPlusArrowMonad_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQLa: // global
           I64[Hp - 120] = sat_sbQan_info;
           P64[Hp - 112] = R3;
           I64[Hp - 104] = sat_sbQak_info;
           P64[Hp - 88] = R3;
           I64[Hp - 80] = sat_sbQaj_info;
           P64[Hp - 64] = R2;
           I64[Hp - 56] = sat_sbQai_info;
           P64[Hp - 40] = R3;
           I64[Hp - 32] = GHC.Base.C:MonadPlus_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Hp - 80;
           P64[Hp - 8] = Hp - 104;
           P64[Hp] = Hp - 118;
           R1 = Hp - 31;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fMonadPlusArrowMonad_info" {
     Control.Arrow.$fMonadPlusArrowMonad_info:
         const Control.Arrow.$fMonadPlusArrowMonad_entry;
         const 0;
         const 21474836494;
         const 8589934607;
         const SbQC5_srt+8;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.194930034 UTC

[section ""data" . Control.Arrow.$fArrowLoop(->)_$cloop_closure" {
     Control.Arrow.$fArrowLoop(->)_$cloop_closure:
         const Control.Arrow.$fArrowLoop(->)_$cloop_info;
 },
 ds_sbQaq_entry() //  [R1]
         { []
         }
     {offset
       cbQLU: // global
           _sbQaq::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbQLV; else goto cbQLW;
       cbQLW: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cbQLY; else goto cbQLX;
       cbQLY: // global
           HpAlloc = 48;
           goto cbQLV;
       cbQLV: // global
           R1 = _sbQaq::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQLX: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQaq::P64;
           _sbQao::P64 = P64[_sbQaq::P64 + 16];
           _sbQap::P64 = P64[_sbQaq::P64 + 24];
           I64[Hp - 40] = stg_sel_1_upd_info;
           P64[Hp - 24] = _sbQaq::P64;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = _sbQap::P64;
           P64[Hp] = Hp - 40;
           R2 = Hp - 15;
           R1 = _sbQao::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . ds_sbQaq_info" {
     ds_sbQaq_info:
         const ds_sbQaq_entry;
         const 2;
         const 18;
 },
 Control.Arrow.$fArrowLoop(->)_$cloop_entry() //  [R2, R3]
         { []
         }
     {offset
       cbQM2: // global
           _sbQap::P64 = R3;
           _sbQao::P64 = R2;
           if ((Sp + -8) < SpLim) (likely: False) goto cbQM3; else goto cbQM4;
       cbQM4: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbQM6; else goto cbQM5;
       cbQM6: // global
           HpAlloc = 32;
           goto cbQM3;
       cbQM3: // global
           R3 = _sbQap::P64;
           R2 = _sbQao::P64;
           R1 = Control.Arrow.$fArrowLoop(->)_$cloop_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQM5: // global
           I64[Hp - 24] = ds_sbQaq_info;
           P64[Hp - 8] = _sbQao::P64;
           P64[Hp] = _sbQap::P64;
           I64[Sp - 8] = block_cbQLZ_info;
           R1 = Hp - 24;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQMa; else goto cbQM0;
       ubQMa: // global
           call _cbQLZ(R1) args: 0, res: 0, upd: 0;
       cbQM0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowLoop(->)_$cloop_info" {
     Control.Arrow.$fArrowLoop(->)_$cloop_info:
         const Control.Arrow.$fArrowLoop(->)_$cloop_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _cbQLZ() //  [R1]
         { []
         }
     {offset
       cbQLZ: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQLZ_info" {
     block_cbQLZ_info:
         const _cbQLZ;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.2048004 UTC

[section ""data" . Control.Arrow.$fArrowLoopKleisli1_closure" {
     Control.Arrow.$fArrowLoopKleisli1_closure:
         const Control.Arrow.$fArrowLoopKleisli1_info;
 },
 sat_sbQaN_entry() //  [R1, R2]
         { []
         }
     {offset
       cbQMI: // global
           _sbQaI::P64 = R2;
           _sbQaN::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbQMJ; else goto cbQMK;
       cbQMK: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQMM; else goto cbQML;
       cbQMM: // global
           HpAlloc = 24;
           goto cbQMJ;
       cbQMJ: // global
           R2 = _sbQaI::P64;
           R1 = _sbQaN::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQML: // global
           _sbQaC::P64 = P64[_sbQaN::P64 + 7];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _sbQaI::P64;
           R2 = _sbQaC::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 16;
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQaN_info" {
     sat_sbQaN_info:
         const sat_sbQaN_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbQaE_entry() //  [R1]
         { []
         }
     {offset
       cbQN0: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbQN1; else goto cbQN2;
       cbQN1: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQN2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Data.Tuple.snd_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQaE_info" {
     sat_sbQaE_info:
         const sat_sbQaE_entry;
         const 1;
         const 16;
 },
 sat_sbQaG_entry() //  [R1, R2]
         { []
         }
     {offset
       cbQN4: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cbQN8; else goto cbQN7;
       cbQN8: // global
           HpAlloc = 48;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQN7: // global
           _sbQaA::P64 = P64[R1 + 7];
           _sbQaB::P64 = P64[R1 + 15];
           I64[Hp - 40] = sat_sbQaE_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = _sbQaB::P64;
           P64[Hp] = Hp - 40;
           R2 = Hp - 15;
           R1 = _sbQaA::P64;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQaG_info" {
     sat_sbQaG_info:
         const sat_sbQaG_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_sbQaH_entry() //  [R1]
         { []
         }
     {offset
       cbQN9: // global
           _sbQaH::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cbQNa; else goto cbQNb;
       cbQNb: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQNd; else goto cbQNc;
       cbQNd: // global
           HpAlloc = 24;
           goto cbQNa;
       cbQNa: // global
           R1 = _sbQaH::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQNc: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQaH::P64;
           _sbQaz::P64 = P64[_sbQaH::P64 + 16];
           _sbQaA::P64 = P64[_sbQaH::P64 + 24];
           _sbQaB::P64 = P64[_sbQaH::P64 + 32];
           I64[Hp - 16] = sat_sbQaG_info;
           P64[Hp - 8] = _sbQaA::P64;
           P64[Hp] = _sbQaB::P64;
           R2 = _sbQaz::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 15;
           Sp = Sp - 32;
           call Control.Monad.Fix.mfix_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQaH_info" {
     sat_sbQaH_info:
         const sat_sbQaH_entry;
         const 3;
         const 15;
 },
 Control.Arrow.$fArrowLoopKleisli1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbQNe: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQNf; else goto cbQNg;
       cbQNf: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fArrowLoopKleisli1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQNg: // global
           I64[Sp - 32] = block_cbQMy_info;
           _sbQaz::P64 = R2;
           R2 = R2;
           P64[Sp - 24] = _sbQaz::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call Control.Monad.Fix.$p1MonadFix_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowLoopKleisli1_info" {
     Control.Arrow.$fArrowLoopKleisli1_info:
         const Control.Arrow.$fArrowLoopKleisli1_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbQMy() //  [R1]
         { []
         }
     {offset
       cbQMy: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cbQNj; else goto cbQNi;
       cbQNj: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbQNi: // global
           I64[Hp - 48] = sat_sbQaN_info;
           P64[Hp - 40] = R1;
           I64[Hp - 32] = sat_sbQaH_info;
           P64[Hp - 16] = P64[Sp + 8];
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = P64[Sp + 24];
           R2 = R1;
           I64[Sp + 8] = stg_ap_pp_info;
           P64[Sp + 16] = Hp - 32;
           P64[Sp + 24] = Hp - 47;
           Sp = Sp + 8;
           call GHC.Base.>>=_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQMy_info" {
     block_cbQMy_info:
         const _cbQMy;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.217960325 UTC

[section ""data" . lvl1_rbNC7_closure" {
     lvl1_rbNC7_closure:
         const lvl1_rbNC7_info;
 },
 lvl1_rbNC7_entry() //  [R2]
         { []
         }
     {offset
       cbQOc: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQOd; else goto cbQOe;
       cbQOd: // global
           R2 = R2;
           R1 = lvl1_rbNC7_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQOe: // global
           I64[Sp - 8] = block_cbQO5_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQOl; else goto cbQO6;
       ubQOl: // global
           call _cbQO5(R1) args: 0, res: 0, upd: 0;
       cbQO6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . lvl1_rbNC7_info" {
     lvl1_rbNC7_info:
         const lvl1_rbNC7_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQO5() //  [R1]
         { []
         }
     {offset
       cbQO5: // global
           if (R1 & 7 == 1) goto cbQO9; else goto cbQOa;
       cbQO9: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
       cbQOa: // global
           R1 = P64[R1 + 6];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQO5_info" {
     block_cbQO5_info:
         const _cbQO5;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.225098752 UTC

[section ""data" . Control.Arrow.$dm|||_closure" {
     Control.Arrow.$dm|||_closure:
         const Control.Arrow.$dm|||_info;
 },
 sat_sbQaY_entry() //  [R1]
         { []
         }
     {offset
       cbQOK: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cbQOL; else goto cbQOM;
       cbQOL: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQOM: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Control.Arrow.+++_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQaY_info" {
     sat_sbQaY_info:
         const sat_sbQaY_entry;
         const 3;
         const 15;
 },
 sat_sbQaX_entry() //  [R1]
         { []
         }
     {offset
       cbQOR: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQOS; else goto cbQOT;
       cbQOS: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQOT: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = lvl1_rbNC7_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQaX_info" {
     sat_sbQaX_info:
         const sat_sbQaX_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$dm|||_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbQOU: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQOW; else goto cbQOX;
       cbQOW: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$dm|||_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQOX: // global
           I64[Sp - 32] = block_cbQOC_info;
           _sbQaS::P64 = R2;
           R2 = R2;
           P64[Sp - 24] = _sbQaS::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call Control.Arrow.$p1ArrowChoice_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$dm|||_info" {
     Control.Arrow.$dm|||_info:
         const Control.Arrow.$dm|||_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbQOC() //  [R1]
         { []
         }
     {offset
       cbQOC: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbQP0; else goto cbQOZ;
       cbQP0: // global
           HpAlloc = 64;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbQOZ: // global
           I64[Hp - 56] = sat_sbQaY_info;
           P64[Hp - 40] = P64[Sp + 8];
           P64[Hp - 32] = P64[Sp + 16];
           P64[Hp - 24] = P64[Sp + 24];
           I64[Hp - 16] = sat_sbQaX_info;
           P64[Hp] = R1;
           I64[Sp + 8] = block_cbQOV_info;
           R2 = R1;
           P64[Sp + 16] = Hp - 16;
           P64[Sp + 24] = Hp - 56;
           Sp = Sp + 8;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQOC_info" {
     block_cbQOC_info:
         const _cbQOC;
         const 3;
         const 30;
 },
 _cbQOV() //  [R1]
         { []
         }
     {offset
       cbQOV: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQOV_info" {
     block_cbQOV_info:
         const _cbQOV;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.236940652 UTC

[section ""data" . mirror_rbNC8_closure" {
     mirror_rbNC8_closure:
         const mirror_rbNC8_info;
 },
 mirror_rbNC8_entry() //  [R2]
         { []
         }
     {offset
       cbQPQ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbQPR; else goto cbQPS;
       cbQPR: // global
           R2 = R2;
           R1 = mirror_rbNC8_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQPS: // global
           I64[Sp - 8] = block_cbQPJ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubQQ5; else goto cbQPK;
       ubQQ5: // global
           call _cbQPJ(R1) args: 0, res: 0, upd: 0;
       cbQPK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . mirror_rbNC8_info" {
     mirror_rbNC8_info:
         const mirror_rbNC8_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbQPJ() //  [R1]
         { []
         }
     {offset
       cbQPJ: // global
           if (R1 & 7 == 1) goto cbQPN; else goto cbQPO;
       cbQPN: // global
           Hp = Hp + 16;
           _sbQb0::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cbQQ4; else goto cbQPX;
       cbQPX: // global
           _sbQb1::P64 = P64[_sbQb0::P64 + 7];
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = _sbQb1::P64;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cbQPO: // global
           Hp = Hp + 16;
           _sbQb0::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cbQQ4; else goto cbQQ3;
       cbQQ4: // global
           HpAlloc = 16;
           R1 = _sbQb0::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbQQ3: // global
           _sbQb2::P64 = P64[_sbQb0::P64 + 6];
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = _sbQb2::P64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQPJ_info" {
     block_cbQPJ_info:
         const _cbQPJ;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.245826093 UTC

[section ""data" . Control.Arrow.$dm+++_closure" {
     Control.Arrow.$dm+++_closure:
         const Control.Arrow.$dm+++_info;
 },
 sat_sbQbb_entry() //  [R1]
         { []
         }
     {offset
       cbQQK: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQQL; else goto cbQQM;
       cbQQL: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQQM: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Control.Arrow.left_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQbb_info" {
     sat_sbQbb_info:
         const sat_sbQbb_entry;
         const 2;
         const 18;
 },
 sat_sbQba_entry() //  [R1]
         { []
         }
     {offset
       cbQQR: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQQS; else goto cbQQT;
       cbQQS: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQQT: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = mirror_rbNC8_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQba_info" {
     sat_sbQba_info:
         const sat_sbQba_entry;
         const 1;
         const 16;
 },
 sat_sbQbc_entry() //  [R1]
         { []
         }
     {offset
       cbQQU: // global
           _sbQbc::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbQQV; else goto cbQQW;
       cbQQW: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cbQQY; else goto cbQQX;
       cbQQY: // global
           HpAlloc = 56;
           goto cbQQV;
       cbQQV: // global
           R1 = _sbQbc::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQQX: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQbc::P64;
           _sbQb3::P64 = P64[_sbQbc::P64 + 16];
           _sbQb4::P64 = P64[_sbQbc::P64 + 24];
           _sbQb6::P64 = P64[_sbQbc::P64 + 32];
           _sbQb7::P64 = P64[_sbQbc::P64 + 40];
           I64[Hp - 48] = sat_sbQbb_info;
           P64[Hp - 32] = _sbQb3::P64;
           P64[Hp - 24] = _sbQb4::P64;
           I64[Hp - 16] = sat_sbQba_info;
           P64[Hp] = _sbQb6::P64;
           R2 = _sbQb7::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Hp - 16;
           P64[Sp - 24] = Hp - 48;
           Sp = Sp - 40;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQbc_info" {
     sat_sbQbc_info:
         const sat_sbQbc_entry;
         const 4;
         const 15;
 },
 sat_sbQb9_entry() //  [R1]
         { []
         }
     {offset
       cbQR3: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQR4; else goto cbQR5;
       cbQR4: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQR5: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Control.Arrow.left_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQb9_info" {
     sat_sbQb9_info:
         const sat_sbQb9_entry;
         const 2;
         const 18;
 },
 sat_sbQbd_entry() //  [R1]
         { []
         }
     {offset
       cbQR6: // global
           _sbQbd::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbQR7; else goto cbQR8;
       cbQR8: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cbQRa; else goto cbQR9;
       cbQRa: // global
           HpAlloc = 80;
           goto cbQR7;
       cbQR7: // global
           R1 = _sbQbd::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQR9: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQbd::P64;
           _sbQb3::P64 = P64[_sbQbd::P64 + 16];
           _sbQb4::P64 = P64[_sbQbd::P64 + 24];
           _sbQb5::P64 = P64[_sbQbd::P64 + 32];
           _sbQb6::P64 = P64[_sbQbd::P64 + 40];
           _sbQb7::P64 = P64[_sbQbd::P64 + 48];
           I64[Hp - 72] = sat_sbQbc_info;
           P64[Hp - 56] = _sbQb3::P64;
           P64[Hp - 48] = _sbQb4::P64;
           P64[Hp - 40] = _sbQb6::P64;
           P64[Hp - 32] = _sbQb7::P64;
           I64[Hp - 24] = sat_sbQb9_info;
           P64[Hp - 8] = _sbQb3::P64;
           P64[Hp] = _sbQb5::P64;
           R2 = _sbQb7::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Hp - 24;
           P64[Sp - 24] = Hp - 72;
           Sp = Sp - 40;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQbd_info" {
     sat_sbQbd_info:
         const sat_sbQbd_entry;
         const 5;
         const 15;
 },
 sat_sbQb8_entry() //  [R1]
         { []
         }
     {offset
       cbQRf: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQRg; else goto cbQRh;
       cbQRg: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQRh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = mirror_rbNC8_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQb8_info" {
     sat_sbQb8_info:
         const sat_sbQb8_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$dm+++_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbQRi: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cbQRj; else goto cbQRk;
       cbQRj: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$dm+++_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQRk: // global
           I64[Sp - 32] = block_cbQQq_info;
           _sbQb3::P64 = R2;
           R2 = R2;
           P64[Sp - 24] = _sbQb3::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call Control.Arrow.$p1ArrowChoice_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$dm+++_info" {
     Control.Arrow.$dm+++_info:
         const Control.Arrow.$dm+++_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbQQq() //  [R1]
         { []
         }
     {offset
       cbQQq: // global
           I64[Sp - 8] = block_cbQQu_info;
           R2 = R1;
           P64[Sp] = R1;
           Sp = Sp - 8;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQQq_info" {
     block_cbQQq_info:
         const _cbQQq;
         const 3;
         const 30;
 },
 _cbQQu() //  [R1]
         { []
         }
     {offset
       cbQQu: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cbQRo; else goto cbQRn;
       cbQRo: // global
           HpAlloc = 80;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbQRn: // global
           I64[Hp - 72] = sat_sbQbd_info;
           P64[Hp - 56] = P64[Sp + 16];
           P64[Hp - 48] = P64[Sp + 24];
           P64[Hp - 40] = P64[Sp + 32];
           _sbQb6::P64 = P64[Sp + 8];
           P64[Hp - 32] = _sbQb6::P64;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = sat_sbQb8_info;
           P64[Hp] = _sbQb6::P64;
           R2 = R1;
           I64[Sp + 16] = stg_ap_pp_info;
           P64[Sp + 24] = Hp - 16;
           P64[Sp + 32] = Hp - 72;
           Sp = Sp + 16;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQQu_info" {
     block_cbQQu_info:
         const _cbQQu;
         const 4;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.264531908 UTC

[section ""data" . Control.Arrow.$dmright_closure" {
     Control.Arrow.$dmright_closure:
         const Control.Arrow.$dmright_info;
 },
 sat_sbQbh_entry() //  [R1]
         { []
         }
     {offset
       cbQSG: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cbQSK; else goto cbQSL;
       cbQSK: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQSL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_cbQSE_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Control.Arrow.$p1ArrowChoice_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQbh_info" {
     sat_sbQbh_info:
         const sat_sbQbh_entry;
         const 1;
         const 16;
 },
 _cbQSE() //  [R1]
         { []
         }
     {offset
       cbQSE: // global
           I64[Sp] = block_cbQSJ_info;
           R2 = R1;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_cbQSE_info" {
     block_cbQSE_info:
         const _cbQSE;
         const 0;
         const 30;
 },
 _cbQSJ() //  [R1]
         { []
         }
     {offset
       cbQSJ: // global
           R2 = R1;
           Sp = Sp + 8;
           call Control.Category.id_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbQSJ_info" {
     block_cbQSJ_info:
         const _cbQSJ;
         const 0;
         const 30;
 },
 Control.Arrow.$dmright_entry() //  [R2]
         { []
         }
     {offset
       cbQSR: // global
           _sbQbe::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cbQSS; else goto cbQST;
       cbQST: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQSV; else goto cbQSU;
       cbQSV: // global
           HpAlloc = 24;
           goto cbQSS;
       cbQSS: // global
           R2 = _sbQbe::P64;
           R1 = Control.Arrow.$dmright_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQSU: // global
           I64[Hp - 16] = sat_sbQbh_info;
           P64[Hp] = _sbQbe::P64;
           R2 = _sbQbe::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 16;
           Sp = Sp - 16;
           call Control.Arrow.+++_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$dmright_info" {
     Control.Arrow.$dmright_info:
         const Control.Arrow.$dmright_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.274188461 UTC

[section ""data" . Control.Arrow.$dmleft_closure" {
     Control.Arrow.$dmleft_closure:
         const Control.Arrow.$dmleft_info;
 },
 sat_sbQbm_entry() //  [R1]
         { []
         }
     {offset
       cbQTr: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cbQTv; else goto cbQTw;
       cbQTv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQTw: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_cbQTp_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Control.Arrow.$p1ArrowChoice_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQbm_info" {
     sat_sbQbm_info:
         const sat_sbQbm_entry;
         const 1;
         const 16;
 },
 _cbQTp() //  [R1]
         { []
         }
     {offset
       cbQTp: // global
           I64[Sp] = block_cbQTu_info;
           R2 = R1;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . block_cbQTp_info" {
     block_cbQTp_info:
         const _cbQTp;
         const 0;
         const 30;
 },
 _cbQTu() //  [R1]
         { []
         }
     {offset
       cbQTu: // global
           R2 = R1;
           Sp = Sp + 8;
           call Control.Category.id_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbQTu_info" {
     block_cbQTu_info:
         const _cbQTu;
         const 0;
         const 30;
 },
 Control.Arrow.$dmleft_entry() //  [R2, R3]
         { []
         }
     {offset
       cbQTC: // global
           _sbQbj::P64 = R3;
           _sbQbi::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbQTD; else goto cbQTE;
       cbQTE: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQTG; else goto cbQTF;
       cbQTG: // global
           HpAlloc = 24;
           goto cbQTD;
       cbQTD: // global
           R3 = _sbQbj::P64;
           R2 = _sbQbi::P64;
           R1 = Control.Arrow.$dmleft_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQTF: // global
           I64[Hp - 16] = sat_sbQbm_info;
           P64[Hp] = _sbQbi::P64;
           R2 = _sbQbi::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _sbQbj::P64;
           P64[Sp - 8] = Hp - 16;
           Sp = Sp - 24;
           call Control.Arrow.+++_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$dmleft_info" {
     Control.Arrow.$dmleft_info:
         const Control.Arrow.$dmleft_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.282257386 UTC

[section ""data" . lvl2_rbNC9_closure" {
     lvl2_rbNC9_closure:
         const lvl2_rbNC9_info;
 },
 lvl2_rbNC9_entry() //  [R2]
         { []
         }
     {offset
       cbQU7: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQUb; else goto cbQUa;
       cbQUb: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = lvl2_rbNC9_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQUa: // global
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R2;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl2_rbNC9_info" {
     lvl2_rbNC9_info:
         const lvl2_rbNC9_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.286996889 UTC

[section ""data" . Control.Arrow.$dm&&&_closure" {
     Control.Arrow.$dm&&&_closure:
         const Control.Arrow.$dm&&&_info;
 },
 sat_sbQbt_entry() //  [R1]
         { []
         }
     {offset
       cbQUq: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQUr; else goto cbQUs;
       cbQUr: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQUs: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = lvl2_rbNC9_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQbt_info" {
     sat_sbQbt_info:
         const sat_sbQbt_entry;
         const 1;
         const 16;
 },
 sat_sbQbs_entry() //  [R1]
         { []
         }
     {offset
       cbQUx: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cbQUy; else goto cbQUz;
       cbQUy: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQUz: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = P64[R1 + 24];
           P64[Sp - 24] = P64[R1 + 32];
           Sp = Sp - 40;
           call Control.Arrow.***_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQbs_info" {
     sat_sbQbs_info:
         const sat_sbQbs_entry;
         const 3;
         const 15;
 },
 Control.Arrow.$dm&&&_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbQUC: // global
           _sbQbq::P64 = R4;
           _sbQbp::P64 = R3;
           _sbQbo::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbQUD; else goto cbQUE;
       cbQUE: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbQUG; else goto cbQUF;
       cbQUG: // global
           HpAlloc = 64;
           goto cbQUD;
       cbQUD: // global
           R4 = _sbQbq::P64;
           R3 = _sbQbp::P64;
           R2 = _sbQbo::P64;
           R1 = Control.Arrow.$dm&&&_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQUF: // global
           I64[Hp - 56] = sat_sbQbt_info;
           P64[Hp - 40] = _sbQbo::P64;
           I64[Hp - 32] = sat_sbQbs_info;
           P64[Hp - 16] = _sbQbo::P64;
           P64[Hp - 8] = _sbQbp::P64;
           P64[Hp] = _sbQbq::P64;
           I64[Sp - 24] = block_cbQUA_info;
           R2 = _sbQbo::P64;
           P64[Sp - 16] = Hp - 56;
           P64[Sp - 8] = Hp - 32;
           Sp = Sp - 24;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$dm&&&_info" {
     Control.Arrow.$dm&&&_info:
         const Control.Arrow.$dm&&&_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbQUA() //  [R1]
         { []
         }
     {offset
       cbQUA: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           _cbQUm::P64 = P64[Sp + 8];
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = _cbQUm::P64;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQUA_info" {
     block_cbQUA_info:
         const _cbQUA;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.296274227 UTC

[section ""data" . swap_rbNCa_closure" {
     swap_rbNCa_closure:
         const swap_rbNCa_info;
 },
 swap_rbNCa_entry() //  [R2]
         { []
         }
     {offset
       cbQVl: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cbQVp; else goto cbQVo;
       cbQVp: // global
           HpAlloc = 72;
           R2 = R2;
           R1 = swap_rbNCa_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQVo: // global
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = stg_sel_1_upd_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 64;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . swap_rbNCa_info" {
     swap_rbNCa_info:
         const swap_rbNCa_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.303194212 UTC

[section ""data" . Control.Arrow.$dm***_closure" {
     Control.Arrow.$dm***_closure:
         const Control.Arrow.$dm***_info;
 },
 sat_sbQbK_entry() //  [R1]
         { []
         }
     {offset
       cbQVU: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQVV; else goto cbQVW;
       cbQVV: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQVW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Control.Arrow.first_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQbK_info" {
     sat_sbQbK_info:
         const sat_sbQbK_entry;
         const 2;
         const 18;
 },
 sat_sbQbJ_entry() //  [R1]
         { []
         }
     {offset
       cbQW1: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQW2; else goto cbQW3;
       cbQW2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQW3: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = swap_rbNCa_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQbJ_info" {
     sat_sbQbJ_info:
         const sat_sbQbJ_entry;
         const 1;
         const 16;
 },
 sat_sbQbL_entry() //  [R1]
         { []
         }
     {offset
       cbQW4: // global
           _sbQbL::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbQW5; else goto cbQW6;
       cbQW6: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cbQW8; else goto cbQW7;
       cbQW8: // global
           HpAlloc = 56;
           goto cbQW5;
       cbQW5: // global
           R1 = _sbQbL::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQW7: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQbL::P64;
           _sbQbD::P64 = P64[_sbQbL::P64 + 16];
           _sbQbE::P64 = P64[_sbQbL::P64 + 24];
           _sbQbG::P64 = P64[_sbQbL::P64 + 32];
           I64[Hp - 48] = sat_sbQbK_info;
           P64[Hp - 32] = _sbQbD::P64;
           P64[Hp - 24] = _sbQbE::P64;
           I64[Hp - 16] = sat_sbQbJ_info;
           P64[Hp] = _sbQbD::P64;
           R2 = _sbQbG::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Hp - 16;
           P64[Sp - 24] = Hp - 48;
           Sp = Sp - 40;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQbL_info" {
     sat_sbQbL_info:
         const sat_sbQbL_entry;
         const 3;
         const 15;
 },
 sat_sbQbI_entry() //  [R1]
         { []
         }
     {offset
       cbQWd: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQWe; else goto cbQWf;
       cbQWe: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQWf: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Control.Arrow.first_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQbI_info" {
     sat_sbQbI_info:
         const sat_sbQbI_entry;
         const 2;
         const 18;
 },
 sat_sbQbM_entry() //  [R1]
         { []
         }
     {offset
       cbQWg: // global
           _sbQbM::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbQWh; else goto cbQWi;
       cbQWi: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cbQWk; else goto cbQWj;
       cbQWk: // global
           HpAlloc = 72;
           goto cbQWh;
       cbQWh: // global
           R1 = _sbQbM::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQWj: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQbM::P64;
           _sbQbD::P64 = P64[_sbQbM::P64 + 16];
           _sbQbE::P64 = P64[_sbQbM::P64 + 24];
           _sbQbF::P64 = P64[_sbQbM::P64 + 32];
           _sbQbG::P64 = P64[_sbQbM::P64 + 40];
           I64[Hp - 64] = sat_sbQbL_info;
           P64[Hp - 48] = _sbQbD::P64;
           P64[Hp - 40] = _sbQbE::P64;
           P64[Hp - 32] = _sbQbG::P64;
           I64[Hp - 24] = sat_sbQbI_info;
           P64[Hp - 8] = _sbQbD::P64;
           P64[Hp] = _sbQbF::P64;
           R2 = _sbQbG::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Hp - 24;
           P64[Sp - 24] = Hp - 64;
           Sp = Sp - 40;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQbM_info" {
     sat_sbQbM_info:
         const sat_sbQbM_entry;
         const 4;
         const 15;
 },
 sat_sbQbH_entry() //  [R1]
         { []
         }
     {offset
       cbQWp: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQWq; else goto cbQWr;
       cbQWq: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQWr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = swap_rbNCa_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQbH_info" {
     sat_sbQbH_info:
         const sat_sbQbH_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$dm***_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbQWs: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbQWt; else goto cbQWu;
       cbQWt: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$dm***_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQWu: // global
           I64[Sp - 32] = block_cbQVE_info;
           _sbQbD::P64 = R2;
           R2 = R2;
           P64[Sp - 24] = _sbQbD::P64;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$dm***_info" {
     Control.Arrow.$dm***_info:
         const Control.Arrow.$dm***_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbQVE() //  [R1]
         { []
         }
     {offset
       cbQVE: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cbQWx; else goto cbQWw;
       cbQWx: // global
           HpAlloc = 72;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbQWw: // global
           I64[Hp - 64] = sat_sbQbM_info;
           _sbQbD::P64 = P64[Sp + 8];
           P64[Hp - 48] = _sbQbD::P64;
           P64[Hp - 40] = P64[Sp + 16];
           P64[Hp - 32] = P64[Sp + 24];
           P64[Hp - 24] = R1;
           I64[Hp - 16] = sat_sbQbH_info;
           P64[Hp] = _sbQbD::P64;
           R2 = R1;
           I64[Sp + 8] = stg_ap_pp_info;
           P64[Sp + 16] = Hp - 16;
           P64[Sp + 24] = Hp - 64;
           Sp = Sp + 8;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbQVE_info" {
     block_cbQVE_info:
         const _cbQVE;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.323731749 UTC

[section ""data" . Control.Arrow.$fArrowKleisli2_closure" {
     Control.Arrow.$fArrowKleisli2_closure:
         const Control.Arrow.$fArrowKleisli2_info;
 },
 sat_sbQcg_entry() //  [R1, R2]
         { []
         }
     {offset
       cbQXM: // global
           _sbQc6::P64 = R2;
           _sbQcg::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbQXN; else goto cbQXO;
       cbQXO: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cbQXQ; else goto cbQXP;
       cbQXQ: // global
           HpAlloc = 72;
           goto cbQXN;
       cbQXN: // global
           R2 = _sbQc6::P64;
           R1 = _sbQcg::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQXP: // global
           _sbQbN::P64 = P64[_sbQcg::P64 + 7];
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = _sbQc6::P64;
           I64[Hp - 40] = stg_sel_1_upd_info;
           P64[Hp - 24] = _sbQc6::P64;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 64;
           R2 = _sbQbN::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 15;
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQcg_info" {
     sat_sbQcg_info:
         const sat_sbQcg_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbQc4_entry() //  [R1, R2]
         { []
         }
     {offset
       cbQY0: // global
           R4 = R2;
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           call Control.Arrow.$fArrowKleisli3_entry(R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQc4_info" {
     sat_sbQc4_info:
         const sat_sbQc4_entry;
         const 2;
         const 11;
         const 4294967301;
 },
 sat_sbQc2_entry() //  [R1, R2]
         { []
         }
     {offset
       cbQYf: // global
           _sbQbS::P64 = R2;
           _sbQc2::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbQYg; else goto cbQYh;
       cbQYh: // global
           Hp = Hp + 72;
           if (Hp > HpLim) (likely: False) goto cbQYj; else goto cbQYi;
       cbQYj: // global
           HpAlloc = 72;
           goto cbQYg;
       cbQYg: // global
           R2 = _sbQbS::P64;
           R1 = _sbQc2::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbQYi: // global
           _sbQbN::P64 = P64[_sbQc2::P64 + 7];
           I64[Hp - 64] = stg_sel_0_upd_info;
           P64[Hp - 48] = _sbQbS::P64;
           I64[Hp - 40] = stg_sel_1_upd_info;
           P64[Hp - 24] = _sbQbS::P64;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 64;
           R2 = _sbQbN::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 15;
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQc2_info" {
     sat_sbQc2_info:
         const sat_sbQc2_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbQbR_entry() //  [R1]
         { []
         }
     {offset
       cbQYo: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbQYp; else goto cbQYq;
       cbQYp: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQYq: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R4 = P64[R1 + 32];
           R3 = P64[R1 + 24];
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fArrowKleisli3_entry(R4,
                                                    R3,
                                                    R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQbR_info" {
     sat_sbQbR_info:
         const sat_sbQbR_entry;
         const 3;
         const 15;
 },
 sat_sbQc3_entry() //  [R1]
         { []
         }
     {offset
       cbQYr: // global
           _sbQc3::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbQYs; else goto cbQYt;
       cbQYt: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cbQYv; else goto cbQYu;
       cbQYv: // global
           HpAlloc = 56;
           goto cbQYs;
       cbQYs: // global
           R1 = _sbQc3::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQYu: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQc3::P64;
           _sbQbN::P64 = P64[_sbQc3::P64 + 16];
           _sbQbO::P64 = P64[_sbQc3::P64 + 24];
           _sbQbQ::P64 = P64[_sbQc3::P64 + 32];
           I64[Hp - 48] = sat_sbQc2_info;
           P64[Hp - 40] = _sbQbN::P64;
           I64[Hp - 32] = sat_sbQbR_info;
           P64[Hp - 16] = _sbQbN::P64;
           P64[Hp - 8] = _sbQbO::P64;
           P64[Hp] = _sbQbQ::P64;
           R2 = _sbQbN::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Hp - 32;
           P64[Sp - 24] = Hp - 47;
           Sp = Sp - 40;
           call GHC.Base.>>=_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQc3_info" {
     sat_sbQc3_info:
         const sat_sbQc3_entry;
         const 3;
         const 15;
 },
 sat_sbQc5_entry() //  [R1]
         { []
         }
     {offset
       cbQYw: // global
           _sbQc5::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbQYx; else goto cbQYy;
       cbQYy: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbQYA; else goto cbQYz;
       cbQYA: // global
           HpAlloc = 64;
           goto cbQYx;
       cbQYx: // global
           R1 = _sbQc5::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQYz: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQc5::P64;
           _sbQbN::P64 = P64[_sbQc5::P64 + 16];
           _sbQbO::P64 = P64[_sbQc5::P64 + 24];
           _sbQbP::P64 = P64[_sbQc5::P64 + 32];
           _sbQbQ::P64 = P64[_sbQc5::P64 + 40];
           I64[Hp - 56] = sat_sbQc4_info;
           P64[Hp - 48] = _sbQbN::P64;
           P64[Hp - 40] = _sbQbP::P64;
           I64[Hp - 32] = sat_sbQc3_info;
           P64[Hp - 16] = _sbQbN::P64;
           P64[Hp - 8] = _sbQbO::P64;
           P64[Hp] = _sbQbQ::P64;
           R2 = _sbQbN::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = Hp - 32;
           P64[Sp - 24] = Hp - 55;
           Sp = Sp - 40;
           call GHC.Base.>>=_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQc5_info" {
     sat_sbQc5_info:
         const sat_sbQc5_entry;
         const 4;
         const 15;
 },
 Control.Arrow.$fArrowKleisli2_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       cbQYB: // global
           _sbQbQ::P64 = R5;
           _sbQbP::P64 = R4;
           _sbQbO::P64 = R3;
           _sbQbN::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbQYC; else goto cbQYD;
       cbQYD: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbQYF; else goto cbQYE;
       cbQYF: // global
           HpAlloc = 64;
           goto cbQYC;
       cbQYC: // global
           R5 = _sbQbQ::P64;
           R4 = _sbQbP::P64;
           R3 = _sbQbO::P64;
           R2 = _sbQbN::P64;
           R1 = Control.Arrow.$fArrowKleisli2_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbQYE: // global
           I64[Hp - 56] = sat_sbQcg_info;
           P64[Hp - 48] = _sbQbN::P64;
           I64[Hp - 40] = sat_sbQc5_info;
           P64[Hp - 24] = _sbQbN::P64;
           P64[Hp - 16] = _sbQbO::P64;
           P64[Hp - 8] = _sbQbP::P64;
           P64[Hp] = _sbQbQ::P64;
           R2 = _sbQbN::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 40;
           P64[Sp - 8] = Hp - 55;
           Sp = Sp - 24;
           call GHC.Base.>>=_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowKleisli2_info" {
     Control.Arrow.$fArrowKleisli2_info:
         const Control.Arrow.$fArrowKleisli2_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.342499975 UTC

[section ""data" . Control.Arrow.$fArrowKleisli1_closure" {
     Control.Arrow.$fArrowKleisli1_closure:
         const Control.Arrow.$fArrowKleisli1_info;
 },
 sat_sbQcn_entry() //  [R1, R2]
         { []
         }
     {offset
       cbQZN: // global
           R5 = R2;
           R4 = P64[R1 + 23];
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           call Control.Arrow.$fArrowKleisli2_entry(R5,
                                                    R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQcn_info" {
     sat_sbQcn_info:
         const sat_sbQcn_entry;
         const 3;
         const 8;
         const 4294967301;
 },
 sat_sbQcm_entry() //  [R1]
         { []
         }
     {offset
       cbQZV: // global
           _sbQcm::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cbQZW; else goto cbQZX;
       cbQZX: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbQZZ; else goto cbQZY;
       cbQZZ: // global
           HpAlloc = 24;
           goto cbQZW;
       cbQZW: // global
           R1 = _sbQcm::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbQZY: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQcm::P64;
           _sbQch::P64 = P64[_sbQcm::P64 + 16];
           _sbQck::P64 = P64[_sbQcm::P64 + 24];
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = _sbQck::P64;
           P64[Hp] = _sbQck::P64;
           R2 = _sbQch::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 15;
           Sp = Sp - 32;
           call GHC.Base.return_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQcm_info" {
     sat_sbQcm_info:
         const sat_sbQcm_entry;
         const 2;
         const 18;
 },
 Control.Arrow.$fArrowKleisli1_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       cbR00: // global
           _sbQck::P64 = R5;
           _sbQcj::P64 = R4;
           _sbQci::P64 = R3;
           _sbQch::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbR01; else goto cbR02;
       cbR02: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbR04; else goto cbR03;
       cbR04: // global
           HpAlloc = 64;
           goto cbR01;
       cbR01: // global
           R5 = _sbQck::P64;
           R4 = _sbQcj::P64;
           R3 = _sbQci::P64;
           R2 = _sbQch::P64;
           R1 = Control.Arrow.$fArrowKleisli1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbR03: // global
           I64[Hp - 56] = sat_sbQcn_info;
           P64[Hp - 48] = _sbQch::P64;
           P64[Hp - 40] = _sbQci::P64;
           P64[Hp - 32] = _sbQcj::P64;
           I64[Hp - 24] = sat_sbQcm_info;
           P64[Hp - 8] = _sbQch::P64;
           P64[Hp] = _sbQck::P64;
           R2 = _sbQch::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = Hp - 55;
           Sp = Sp - 24;
           call GHC.Base.>>=_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowKleisli1_info" {
     Control.Arrow.$fArrowKleisli1_info:
         const Control.Arrow.$fArrowKleisli1_entry;
         const 0;
         const 14;
         const 17179869208;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.3524528 UTC

[section ""data" . Control.Arrow.$fArrowKleisli_closure" {
     Control.Arrow.$fArrowKleisli_closure:
         const Control.Arrow.$fArrowKleisli_info;
 },
 sat_sbQcu_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cbR0z: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Control.Arrow.$fArrowKleisli1_entry(R5,
                                                    R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQcu_info" {
     sat_sbQcu_info:
         const sat_sbQcu_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sbQct_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cbR0H: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Control.Arrow.$fArrowKleisli2_entry(R5,
                                                    R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQct_info" {
     sat_sbQct_info:
         const sat_sbQct_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sbQcs_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbR0P: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fArrowKleisli4_entry(R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQcs_info" {
     sat_sbQcs_info:
         const sat_sbQcs_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbQcr_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbR0X: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fArrowKleisli3_entry(R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQcr_info" {
     sat_sbQcr_info:
         const sat_sbQcr_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbQcq_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbR15: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fArrowKleisli5_entry(R4,
                                                    R3,
                                                    R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQcq_info" {
     sat_sbQcq_info:
         const sat_sbQcq_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbQcp_entry() //  [R1]
         { []
         }
     {offset
       cbR1c: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbR1d; else goto cbR1e;
       cbR1d: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbR1e: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fCategoryTYPEKleisli_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQcp_info" {
     sat_sbQcp_info:
         const sat_sbQcp_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fArrowKleisli_entry() //  [R2]
         { []
         }
     {offset
       cbR1g: // global
           Hp = Hp + 160;
           if (Hp > HpLim) (likely: False) goto cbR1k; else goto cbR1j;
       cbR1k: // global
           HpAlloc = 160;
           R2 = R2;
           R1 = Control.Arrow.$fArrowKleisli_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbR1j: // global
           I64[Hp - 152] = sat_sbQcu_info;
           P64[Hp - 144] = R2;
           I64[Hp - 136] = sat_sbQct_info;
           P64[Hp - 128] = R2;
           I64[Hp - 120] = sat_sbQcs_info;
           P64[Hp - 112] = R2;
           I64[Hp - 104] = sat_sbQcr_info;
           P64[Hp - 96] = R2;
           I64[Hp - 88] = sat_sbQcq_info;
           P64[Hp - 80] = R2;
           I64[Hp - 72] = sat_sbQcp_info;
           P64[Hp - 56] = R2;
           I64[Hp - 48] = Control.Arrow.C:Arrow_con_info;
           P64[Hp - 40] = Hp - 72;
           P64[Hp - 32] = Hp - 86;
           P64[Hp - 24] = Hp - 102;
           P64[Hp - 16] = Hp - 118;
           P64[Hp - 8] = Hp - 133;
           P64[Hp] = Hp - 149;
           R1 = Hp - 47;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowKleisli_info" {
     Control.Arrow.$fArrowKleisli_info:
         const Control.Arrow.$fArrowKleisli_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.365709388 UTC

[section ""data" . Control.Arrow.$fArrowLoopKleisli_$cp1ArrowLoop_closure" {
     Control.Arrow.$fArrowLoopKleisli_$cp1ArrowLoop_closure:
         const Control.Arrow.$fArrowLoopKleisli_$cp1ArrowLoop_info;
 },
 sat_sbQcw_entry() //  [R1]
         { []
         }
     {offset
       cbR25: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbR26; else goto cbR27;
       cbR26: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbR27: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Monad.Fix.$p1MonadFix_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQcw_info" {
     sat_sbQcw_info:
         const sat_sbQcw_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fArrowLoopKleisli_$cp1ArrowLoop_entry() //  [R2]
         { []
         }
     {offset
       cbR28: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbR2c; else goto cbR2b;
       cbR2c: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Control.Arrow.$fArrowLoopKleisli_$cp1ArrowLoop_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbR2b: // global
           I64[Hp - 16] = sat_sbQcw_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           call Control.Arrow.$fArrowKleisli_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowLoopKleisli_$cp1ArrowLoop_info" {
     Control.Arrow.$fArrowLoopKleisli_$cp1ArrowLoop_info:
         const Control.Arrow.$fArrowLoopKleisli_$cp1ArrowLoop_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.371700113 UTC

[section ""data" . Control.Arrow.$fArrowLoopKleisli_closure" {
     Control.Arrow.$fArrowLoopKleisli_closure:
         const Control.Arrow.$fArrowLoopKleisli_info;
 },
 sat_sbQcz_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbR2w: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fArrowLoopKleisli1_entry(R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQcz_info" {
     sat_sbQcz_info:
         const sat_sbQcz_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbQcy_entry() //  [R1]
         { []
         }
     {offset
       cbR2D: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbR2E; else goto cbR2F;
       cbR2E: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbR2F: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fArrowLoopKleisli_$cp1ArrowLoop_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQcy_info" {
     sat_sbQcy_info:
         const sat_sbQcy_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fArrowLoopKleisli_entry() //  [R2]
         { []
         }
     {offset
       cbR2H: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbR2L; else goto cbR2K;
       cbR2L: // global
           HpAlloc = 64;
           R2 = R2;
           R1 = Control.Arrow.$fArrowLoopKleisli_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbR2K: // global
           I64[Hp - 56] = sat_sbQcz_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = sat_sbQcy_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = Control.Arrow.C:ArrowLoop_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 54;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowLoopKleisli_info" {
     Control.Arrow.$fArrowLoopKleisli_info:
         const Control.Arrow.$fArrowLoopKleisli_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.379087221 UTC

[section ""data" . lvl3_rbNCb_closure" {
     lvl3_rbNCb_closure:
         const lvl3_rbNCb_info;
 },
 lvl3_rbNCb_entry() //  [R2]
         { []
         }
     {offset
       cbR3b: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cbR3c; else goto cbR3d;
       cbR3c: // global
           R2 = R2;
           R1 = lvl3_rbNCb_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbR3d: // global
           I64[Sp - 8] = block_cbR38_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ubR3h; else goto cbR39;
       ubR3h: // global
           call _cbR38(R1) args: 0, res: 0, upd: 0;
       cbR39: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . lvl3_rbNCb_info" {
     lvl3_rbNCb_info:
         const lvl3_rbNCb_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cbR38() //  [R1]
         { []
         }
     {offset
       cbR38: // global
           R2 = P64[R1 + 15];
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbR38_info" {
     block_cbR38_info:
         const _cbR38;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.384579106 UTC

[section ""data" . Control.Arrow.$fArrowApplyKleisli_closure" {
     Control.Arrow.$fArrowApplyKleisli_closure:
         const Control.Arrow.$fArrowApplyKleisli_info;
 },
 sat_sbQcF_entry() //  [R1]
         { []
         }
     {offset
       cbR3A: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbR3B; else goto cbR3C;
       cbR3B: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbR3C: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fArrowKleisli_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQcF_info" {
     sat_sbQcF_info:
         const sat_sbQcF_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fArrowApplyKleisli_entry() //  [R2]
         { []
         }
     {offset
       cbR3E: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cbR3I; else goto cbR3H;
       cbR3I: // global
           HpAlloc = 48;
           R2 = R2;
           R1 = Control.Arrow.$fArrowApplyKleisli_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbR3H: // global
           I64[Hp - 40] = sat_sbQcF_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = Control.Arrow.C:ArrowApply_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = lvl3_rbNCb_closure+1;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowApplyKleisli_info" {
     Control.Arrow.$fArrowApplyKleisli_info:
         const Control.Arrow.$fArrowApplyKleisli_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.392715556 UTC

[section ""data" . Control.Arrow.$fArrowChoiceKleisli1_closure" {
     Control.Arrow.$fArrowChoiceKleisli1_closure:
         const Control.Arrow.$fArrowChoiceKleisli1_info;
 },
 sat_sbQcP_entry() //  [R1, R2]
         { []
         }
     {offset
       cbR4c: // global
           _sbQcN::P64 = R2;
           _sbQcP::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbR4d; else goto cbR4e;
       cbR4e: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbR4g; else goto cbR4f;
       cbR4g: // global
           HpAlloc = 16;
           goto cbR4d;
       cbR4d: // global
           R2 = _sbQcN::P64;
           R1 = _sbQcP::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbR4f: // global
           _sbQcG::P64 = P64[_sbQcP::P64 + 7];
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = _sbQcN::P64;
           R2 = _sbQcG::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 7;
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQcP_info" {
     sat_sbQcP_info:
         const sat_sbQcP_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbQcU_entry() //  [R1, R2]
         { []
         }
     {offset
       cbR4p: // global
           _sbQcS::P64 = R2;
           _sbQcU::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbR4q; else goto cbR4r;
       cbR4r: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbR4t; else goto cbR4s;
       cbR4t: // global
           HpAlloc = 16;
           goto cbR4q;
       cbR4q: // global
           R2 = _sbQcS::P64;
           R1 = _sbQcU::P64;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbR4s: // global
           _sbQcG::P64 = P64[_sbQcU::P64 + 7];
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = _sbQcS::P64;
           R2 = _sbQcG::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 6;
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQcU_info" {
     sat_sbQcU_info:
         const sat_sbQcU_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Control.Arrow.$fArrowChoiceKleisli1_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       cbR4y: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbR4z; else goto cbR4A;
       cbR4z: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fArrowChoiceKleisli1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbR4A: // global
           I64[Sp - 32] = block_cbR41_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto ubR4J; else goto cbR42;
       ubR4J: // global
           call _cbR41(R1) args: 0, res: 0, upd: 0;
       cbR42: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowChoiceKleisli1_info" {
     Control.Arrow.$fArrowChoiceKleisli1_info:
         const Control.Arrow.$fArrowChoiceKleisli1_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _cbR41() //  [R1]
         { []
         }
     {offset
       cbR41: // global
           _sbQcG::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto cbR4v; else goto cbR4w;
       cbR4v: // global
           Hp = Hp + 48;
           _sbQcK::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cbR4G; else goto cbR4C;
       cbR4C: // global
           _sbQcL::P64 = P64[_sbQcK::P64 + 7];
           I64[Hp - 40] = sat_sbQcP_info;
           P64[Hp - 32] = _sbQcG::P64;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = _sbQcL::P64;
           R2 = _sbQcG::P64;
           I64[Sp + 8] = stg_ap_pp_info;
           P64[Sp + 16] = Hp - 24;
           P64[Sp + 24] = Hp - 39;
           Sp = Sp + 8;
           call GHC.Base.>>=_entry(R2) args: 32, res: 0, upd: 8;
       cbR4w: // global
           Hp = Hp + 48;
           _sbQcK::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cbR4G; else goto cbR4F;
       cbR4G: // global
           HpAlloc = 48;
           R1 = _sbQcK::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbR4F: // global
           _sbQcQ::P64 = P64[_sbQcK::P64 + 6];
           I64[Hp - 40] = sat_sbQcU_info;
           P64[Hp - 32] = _sbQcG::P64;
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 24];
           P64[Hp] = _sbQcQ::P64;
           R2 = _sbQcG::P64;
           I64[Sp + 8] = stg_ap_pp_info;
           P64[Sp + 16] = Hp - 24;
           P64[Sp + 24] = Hp - 39;
           Sp = Sp + 8;
           call GHC.Base.>>=_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbR41_info" {
     block_cbR41_info:
         const _cbR41;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.403772846 UTC

[section ""data" . Control.Arrow.$fArrowChoiceKleisli3_closure" {
     Control.Arrow.$fArrowChoiceKleisli3_closure:
         const Control.Arrow.$fArrowChoiceKleisli3_info;
 },
 sat_sbQcZ_entry() //  [R1, R2]
         { []
         }
     {offset
       cbR5v: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbR5w; else goto cbR5x;
       cbR5w: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbR5x: // global
           _sbQcY::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = _sbQcY::P64;
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQcZ_info" {
     sat_sbQcZ_info:
         const sat_sbQcZ_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Control.Arrow.$fArrowChoiceKleisli3_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbR5y: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbR5C; else goto cbR5B;
       cbR5C: // global
           HpAlloc = 16;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fArrowChoiceKleisli3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbR5B: // global
           I64[Hp - 8] = sat_sbQcZ_info;
           P64[Hp] = R2;
           R5 = R4;
           R4 = Hp - 7;
           R3 = R3;
           R2 = R2;
           call Control.Arrow.$fArrowChoiceKleisli1_entry(R5,
                                                          R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowChoiceKleisli3_info" {
     Control.Arrow.$fArrowChoiceKleisli3_info:
         const Control.Arrow.$fArrowChoiceKleisli3_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.409920828 UTC

[section ""data" . Control.Arrow.$fArrowChoiceKleisli2_closure" {
     Control.Arrow.$fArrowChoiceKleisli2_closure:
         const Control.Arrow.$fArrowChoiceKleisli2_info;
 },
 sat_sbQd4_entry() //  [R1, R2]
         { []
         }
     {offset
       cbR5W: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbR5X; else goto cbR5Y;
       cbR5X: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbR5Y: // global
           _sbQd3::P64 = R2;
           R2 = P64[R1 + 7];
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = _sbQd3::P64;
           Sp = Sp - 16;
           call GHC.Base.return_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQd4_info" {
     sat_sbQd4_info:
         const sat_sbQd4_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 Control.Arrow.$fArrowChoiceKleisli2_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbR5Z: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbR63; else goto cbR62;
       cbR63: // global
           HpAlloc = 16;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$fArrowChoiceKleisli2_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbR62: // global
           I64[Hp - 8] = sat_sbQd4_info;
           P64[Hp] = R2;
           R5 = R4;
           R4 = R3;
           R3 = Hp - 7;
           R2 = R2;
           call Control.Arrow.$fArrowChoiceKleisli1_entry(R5,
                                                          R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowChoiceKleisli2_info" {
     Control.Arrow.$fArrowChoiceKleisli2_info:
         const Control.Arrow.$fArrowChoiceKleisli2_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.415271891 UTC

[section ""data" . lvl4_rbNCc_closure" {
     lvl4_rbNCc_closure:
         const lvl4_rbNCc_info;
 },
 lvl4_rbNCc_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbR6i: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call Data.Either.either_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl4_rbNCc_info" {
     lvl4_rbNCc_info:
         const lvl4_rbNCc_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.420431971 UTC

[section ""data" . Control.Arrow.$fArrowChoiceKleisli_closure" {
     Control.Arrow.$fArrowChoiceKleisli_closure:
         const Control.Arrow.$fArrowChoiceKleisli_info;
 },
 sat_sbQdc_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cbR6y: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Control.Arrow.$fArrowChoiceKleisli1_entry(R5,
                                                          R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQdc_info" {
     sat_sbQdc_info:
         const sat_sbQdc_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sbQdb_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbR6G: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fArrowChoiceKleisli2_entry(R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQdb_info" {
     sat_sbQdb_info:
         const sat_sbQdb_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbQda_entry() //  [R1, R2, R3]
         { []
         }
     {offset
       cbR6O: // global
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 6];
           call Control.Arrow.$fArrowChoiceKleisli3_entry(R4,
                                                          R3,
                                                          R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQda_info" {
     sat_sbQda_info:
         const sat_sbQda_entry;
         const 1;
         const 9;
         const 8589934607;
 },
 sat_sbQd9_entry() //  [R1]
         { []
         }
     {offset
       cbR6V: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbR6W; else goto cbR6X;
       cbR6W: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbR6X: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fArrowKleisli_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQd9_info" {
     sat_sbQd9_info:
         const sat_sbQd9_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fArrowChoiceKleisli_entry() //  [R2]
         { []
         }
     {offset
       cbR6Z: // global
           Hp = Hp + 120;
           if (Hp > HpLim) (likely: False) goto cbR73; else goto cbR72;
       cbR73: // global
           HpAlloc = 120;
           R2 = R2;
           R1 = Control.Arrow.$fArrowChoiceKleisli_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbR72: // global
           I64[Hp - 112] = sat_sbQdc_info;
           P64[Hp - 104] = R2;
           I64[Hp - 96] = sat_sbQdb_info;
           P64[Hp - 88] = R2;
           I64[Hp - 80] = sat_sbQda_info;
           P64[Hp - 72] = R2;
           I64[Hp - 64] = sat_sbQd9_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = Control.Arrow.C:ArrowChoice_con_info;
           P64[Hp - 32] = Hp - 64;
           P64[Hp - 24] = Hp - 78;
           P64[Hp - 16] = Hp - 94;
           P64[Hp - 8] = Hp - 109;
           P64[Hp] = lvl4_rbNCc_closure+3;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowChoiceKleisli_info" {
     Control.Arrow.$fArrowChoiceKleisli_info:
         const Control.Arrow.$fArrowChoiceKleisli_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.431550057 UTC

[section ""data" . Control.Arrow.$fArrowZeroKleisli_$cp1ArrowZero_closure" {
     Control.Arrow.$fArrowZeroKleisli_$cp1ArrowZero_closure:
         const Control.Arrow.$fArrowZeroKleisli_$cp1ArrowZero_info;
 },
 sat_sbQde_entry() //  [R1]
         { []
         }
     {offset
       cbR7F: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbR7G; else goto cbR7H;
       cbR7G: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbR7H: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.$p2MonadPlus_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQde_info" {
     sat_sbQde_info:
         const sat_sbQde_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fArrowZeroKleisli_$cp1ArrowZero_entry() //  [R2]
         { []
         }
     {offset
       cbR7I: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbR7M; else goto cbR7L;
       cbR7M: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = Control.Arrow.$fArrowZeroKleisli_$cp1ArrowZero_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbR7L: // global
           I64[Hp - 16] = sat_sbQde_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           call Control.Arrow.$fArrowKleisli_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowZeroKleisli_$cp1ArrowZero_info" {
     Control.Arrow.$fArrowZeroKleisli_$cp1ArrowZero_info:
         const Control.Arrow.$fArrowZeroKleisli_$cp1ArrowZero_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.43807289 UTC

[section ""data" . Control.Arrow.$fArrowZeroKleisli_closure" {
     Control.Arrow.$fArrowZeroKleisli_closure:
         const Control.Arrow.$fArrowZeroKleisli_info;
 },
 lvl5_sbQdg_entry() //  [R1]
         { []
         }
     {offset
       cbR85: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbR86; else goto cbR87;
       cbR86: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbR87: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Base.mzero_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl5_sbQdg_info" {
     lvl5_sbQdg_info:
         const lvl5_sbQdg_entry;
         const 1;
         const 16;
 },
 sat_sbQdj_entry() //  [R1]
         { []
         }
     {offset
       cbR8d: // global
           R1 = P64[R1 + 7];
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQdj_info" {
     sat_sbQdj_info:
         const sat_sbQdj_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbQdh_entry() //  [R1]
         { []
         }
     {offset
       cbR8k: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbR8l; else goto cbR8m;
       cbR8l: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbR8m: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fArrowZeroKleisli_$cp1ArrowZero_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQdh_info" {
     sat_sbQdh_info:
         const sat_sbQdh_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fArrowZeroKleisli_entry() //  [R2]
         { []
         }
     {offset
       cbR8o: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cbR8s; else goto cbR8r;
       cbR8s: // global
           HpAlloc = 88;
           R2 = R2;
           R1 = Control.Arrow.$fArrowZeroKleisli_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbR8r: // global
           I64[Hp - 80] = lvl5_sbQdg_info;
           P64[Hp - 64] = R2;
           I64[Hp - 56] = sat_sbQdj_info;
           P64[Hp - 48] = Hp - 80;
           I64[Hp - 40] = sat_sbQdh_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = Control.Arrow.C:ArrowZero_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 55;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowZeroKleisli_info" {
     Control.Arrow.$fArrowZeroKleisli_info:
         const Control.Arrow.$fArrowZeroKleisli_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.447852508 UTC

[section ""data" . Control.Arrow.$fArrowPlusKleisli_closure" {
     Control.Arrow.$fArrowPlusKleisli_closure:
         const Control.Arrow.$fArrowPlusKleisli_info;
 },
 sat_sbQdm_entry() //  [R1, R2, R3, R4]
         { []
         }
     {offset
       cbR91: // global
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = P64[R1 + 5];
           call Control.Arrow.$fArrowPlusKleisli1_entry(R5,
                                                        R4,
                                                        R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQdm_info" {
     sat_sbQdm_info:
         const sat_sbQdm_entry;
         const 1;
         const 9;
         const 12884901911;
 },
 sat_sbQdl_entry() //  [R1]
         { []
         }
     {offset
       cbR98: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbR99; else goto cbR9a;
       cbR99: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbR9a: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.$fArrowZeroKleisli_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQdl_info" {
     sat_sbQdl_info:
         const sat_sbQdl_entry;
         const 1;
         const 16;
 },
 Control.Arrow.$fArrowPlusKleisli_entry() //  [R2]
         { []
         }
     {offset
       cbR9c: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbR9g; else goto cbR9f;
       cbR9g: // global
           HpAlloc = 64;
           R2 = R2;
           R1 = Control.Arrow.$fArrowPlusKleisli_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbR9f: // global
           I64[Hp - 56] = sat_sbQdm_info;
           P64[Hp - 48] = R2;
           I64[Hp - 40] = sat_sbQdl_info;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = Control.Arrow.C:ArrowPlus_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 53;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$fArrowPlusKleisli_info" {
     Control.Arrow.$fArrowPlusKleisli_info:
         const Control.Arrow.$fArrowPlusKleisli_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.455739863 UTC

[section ""data" . Control.Arrow.$dmsecond_closure" {
     Control.Arrow.$dmsecond_closure:
         const Control.Arrow.$dmsecond_info;
 },
 sat_sbQdp_entry() //  [R1]
         { []
         }
     {offset
       cbR9J: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cbR9K; else goto cbR9L;
       cbR9K: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbR9L: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_cbR9H_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQdp_info" {
     sat_sbQdp_info:
         const sat_sbQdp_entry;
         const 1;
         const 16;
 },
 _cbR9H() //  [R1]
         { []
         }
     {offset
       cbR9H: // global
           R2 = R1;
           Sp = Sp + 8;
           call Control.Category.id_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbR9H_info" {
     block_cbR9H_info:
         const _cbR9H;
         const 0;
         const 30;
 },
 Control.Arrow.$dmsecond_entry() //  [R2]
         { []
         }
     {offset
       cbR9P: // global
           _sbQdn::P64 = R2;
           if ((Sp + -16) < SpLim) (likely: False) goto cbR9Q; else goto cbR9R;
       cbR9R: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbR9T; else goto cbR9S;
       cbR9T: // global
           HpAlloc = 24;
           goto cbR9Q;
       cbR9Q: // global
           R2 = _sbQdn::P64;
           R1 = Control.Arrow.$dmsecond_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbR9S: // global
           I64[Hp - 16] = sat_sbQdp_info;
           P64[Hp] = _sbQdn::P64;
           R2 = _sbQdn::P64;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = Hp - 16;
           Sp = Sp - 16;
           call Control.Arrow.***_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$dmsecond_info" {
     Control.Arrow.$dmsecond_info:
         const Control.Arrow.$dmsecond_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.463561675 UTC

[section ""data" . Control.Arrow.$dmfirst_closure" {
     Control.Arrow.$dmfirst_closure:
         const Control.Arrow.$dmfirst_info;
 },
 sat_sbQdt_entry() //  [R1]
         { []
         }
     {offset
       cbRal: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cbRam; else goto cbRan;
       cbRam: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbRan: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_cbRaj_info;
           R2 = P64[R1 + 16];
           Sp = Sp - 24;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQdt_info" {
     sat_sbQdt_info:
         const sat_sbQdt_entry;
         const 1;
         const 16;
 },
 _cbRaj() //  [R1]
         { []
         }
     {offset
       cbRaj: // global
           R2 = R1;
           Sp = Sp + 8;
           call Control.Category.id_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbRaj_info" {
     block_cbRaj_info:
         const _cbRaj;
         const 0;
         const 30;
 },
 Control.Arrow.$dmfirst_entry() //  [R2, R3]
         { []
         }
     {offset
       cbRar: // global
           _sbQdr::P64 = R3;
           _sbQdq::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbRas; else goto cbRat;
       cbRat: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbRav; else goto cbRau;
       cbRav: // global
           HpAlloc = 24;
           goto cbRas;
       cbRas: // global
           R3 = _sbQdr::P64;
           R2 = _sbQdq::P64;
           R1 = Control.Arrow.$dmfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbRau: // global
           I64[Hp - 16] = sat_sbQdt_info;
           P64[Hp] = _sbQdq::P64;
           R2 = _sbQdq::P64;
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = _sbQdr::P64;
           P64[Sp - 8] = Hp - 16;
           Sp = Sp - 24;
           call Control.Arrow.***_entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$dmfirst_info" {
     Control.Arrow.$dmfirst_info:
         const Control.Arrow.$dmfirst_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.472345567 UTC

[section ""data" . Control.Arrow.$cfirst_closure" {
     Control.Arrow.$cfirst_closure:
         const Control.Arrow.$cfirst_info;
 },
 sat_sbQdA_entry() //  [R1]
         { []
         }
     {offset
       cbRaX: // global
           _sbQdA::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbRaY; else goto cbRaZ;
       cbRaZ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbRb1; else goto cbRb0;
       cbRb1: // global
           HpAlloc = 24;
           goto cbRaY;
       cbRaY: // global
           R1 = _sbQdA::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbRb0: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQdA::P64;
           _sbQdu::P64 = P64[_sbQdA::P64 + 16];
           _sbQdv::P64 = P64[_sbQdA::P64 + 24];
           I64[Hp - 16] = stg_sel_0_upd_info;
           P64[Hp] = _sbQdv::P64;
           R2 = Hp - 16;
           R1 = _sbQdu::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQdA_info" {
     sat_sbQdA_info:
         const sat_sbQdA_entry;
         const 2;
         const 18;
 },
 Control.Arrow.$cfirst_entry() //  [R2, R3]
         { []
         }
     {offset
       cbRb3: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cbRb7; else goto cbRb6;
       cbRb7: // global
           HpAlloc = 80;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$cfirst_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbRb6: // global
           I64[Hp - 72] = stg_sel_1_upd_info;
           P64[Hp - 56] = R3;
           I64[Hp - 48] = sat_sbQdA_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 72;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$cfirst_info" {
     Control.Arrow.$cfirst_info:
         const Control.Arrow.$cfirst_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.478923752 UTC

[section ""data" . Control.Arrow.$csecond_closure" {
     Control.Arrow.$csecond_closure:
         const Control.Arrow.$csecond_info;
 },
 sat_sbQdP_entry() //  [R1]
         { []
         }
     {offset
       cbRbx: // global
           _sbQdP::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto cbRby; else goto cbRbz;
       cbRbz: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbRbB; else goto cbRbA;
       cbRbB: // global
           HpAlloc = 24;
           goto cbRby;
       cbRby: // global
           R1 = _sbQdP::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbRbA: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQdP::P64;
           _sbQdF::P64 = P64[_sbQdP::P64 + 16];
           _sbQdG::P64 = P64[_sbQdP::P64 + 24];
           I64[Hp - 16] = stg_sel_1_upd_info;
           P64[Hp] = _sbQdG::P64;
           R2 = Hp - 16;
           R1 = _sbQdF::P64;
           Sp = Sp - 16;
           call stg_ap_p_fast(R2, R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQdP_info" {
     sat_sbQdP_info:
         const sat_sbQdP_entry;
         const 2;
         const 18;
 },
 Control.Arrow.$csecond_entry() //  [R2, R3]
         { []
         }
     {offset
       cbRbE: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cbRbI; else goto cbRbH;
       cbRbI: // global
           HpAlloc = 80;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$csecond_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbRbH: // global
           I64[Hp - 72] = sat_sbQdP_info;
           P64[Hp - 56] = R2;
           P64[Hp - 48] = R3;
           I64[Hp - 40] = stg_sel_0_upd_info;
           P64[Hp - 24] = R3;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 40;
           P64[Hp] = Hp - 72;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$csecond_info" {
     Control.Arrow.$csecond_info:
         const Control.Arrow.$csecond_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.485223604 UTC

[section ""data" . Control.Arrow.$c&&&_closure" {
     Control.Arrow.$c&&&_closure:
         const Control.Arrow.$c&&&_info;
 },
 Control.Arrow.$c&&&_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbRc6: // global
           Hp = Hp + 88;
           if (Hp > HpLim) (likely: False) goto cbRca; else goto cbRc9;
       cbRca: // global
           HpAlloc = 88;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$c&&&_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbRc9: // global
           I64[Hp - 80] = stg_ap_2_upd_info;
           P64[Hp - 64] = R3;
           P64[Hp - 56] = R4;
           I64[Hp - 48] = stg_ap_2_upd_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = Hp - 80;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$c&&&_info" {
     Control.Arrow.$c&&&_info:
         const Control.Arrow.$c&&&_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.488948252 UTC

[section ""data" . Control.Arrow.$fArrow(->)_closure" {
     Control.Arrow.$fArrow(->)_closure:
         const Control.Arrow.C:Arrow_con_info;
         const Control.Category.$fCategoryTYPE(->)_closure;
         const Control.Arrow.$fArrow(->)_$carr_closure+1;
         const Control.Arrow.$cfirst_closure+2;
         const Control.Arrow.$csecond_closure+2;
         const Control.Arrow.$c***_closure+3;
         const Control.Arrow.$c&&&_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.490796518 UTC

[section ""data" . Control.Arrow.$fArrowLoop(->)_closure" {
     Control.Arrow.$fArrowLoop(->)_closure:
         const Control.Arrow.C:ArrowLoop_con_info;
         const Control.Arrow.$fArrow(->)_closure+1;
         const Control.Arrow.$fArrowLoop(->)_$cloop_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.492470313 UTC

[section ""data" . Control.Arrow.$fArrowApply(->)_closure" {
     Control.Arrow.$fArrowApply(->)_closure:
         const Control.Arrow.C:ArrowApply_con_info;
         const Control.Arrow.$fArrow(->)_closure+1;
         const Control.Arrow.$fAlternativeArrowMonad_$capp_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.495764764 UTC

[section ""data" . Control.Arrow.$c+++_closure" {
     Control.Arrow.$c+++_closure:
         const Control.Arrow.$c+++_info;
 },
 Control.Arrow.$c+++_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbRcz: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cbRcA; else goto cbRcB;
       cbRcA: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$c+++_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbRcB: // global
           I64[Sp - 24] = block_cbRcs_info;
           R1 = R4;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto ubRcQ; else goto cbRct;
       ubRcQ: // global
           call _cbRcs(R1) args: 0, res: 0, upd: 0;
       cbRct: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$c+++_info" {
     Control.Arrow.$c+++_info:
         const Control.Arrow.$c+++_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbRcs() //  [R1]
         { []
         }
     {offset
       cbRcs: // global
           if (R1 & 7 == 1) goto cbRcw; else goto cbRcx;
       cbRcw: // global
           Hp = Hp + 48;
           _sbQdY::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cbRcP; else goto cbRcH;
       cbRcH: // global
           _sbQdZ::P64 = P64[_sbQdY::P64 + 7];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sbQdZ::P64;
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cbRcx: // global
           Hp = Hp + 48;
           _sbQdY::P64 = R1;
           if (Hp > HpLim) (likely: False) goto cbRcP; else goto cbRcO;
       cbRcP: // global
           HpAlloc = 48;
           R1 = _sbQdY::P64;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbRcO: // global
           _sbQe1::P64 = P64[_sbQdY::P64 + 6];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 16];
           P64[Hp - 16] = _sbQe1::P64;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbRcs_info" {
     block_cbRcs_info:
         const _cbRcs;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.503131991 UTC

[section ""data" . Control.Arrow.$cright_closure" {
     Control.Arrow.$cright_closure:
         const Control.Arrow.$cright_info;
 },
 Control.Arrow.$cright_entry() //  [R2, R3]
         { []
         }
     {offset
       cbRdo: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbRdp; else goto cbRdq;
       cbRdp: // global
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$cright_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbRdq: // global
           I64[Sp - 16] = block_cbRdh_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto ubRdB; else goto cbRdi;
       ubRdB: // global
           call _cbRdh(R1) args: 0, res: 0, upd: 0;
       cbRdi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$cright_info" {
     Control.Arrow.$cright_info:
         const Control.Arrow.$cright_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _cbRdh() //  [R1]
         { []
         }
     {offset
       cbRdh: // global
           if (R1 & 7 == 1) goto cbRdl; else goto cbRdm;
       cbRdl: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       cbRdm: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cbRdA; else goto cbRdz;
       cbRdA: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbRdz: // global
           _sbQe7::P64 = P64[R1 + 6];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sbQe7::P64;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbRdh_info" {
     block_cbRdh_info:
         const _cbRdh;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.510510504 UTC

[section ""data" . Control.Arrow.$cleft_closure" {
     Control.Arrow.$cleft_closure:
         const Control.Arrow.$cleft_info;
 },
 Control.Arrow.$cleft_entry() //  [R2, R3]
         { []
         }
     {offset
       cbRe6: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbRe7; else goto cbRe8;
       cbRe7: // global
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.$cleft_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbRe8: // global
           I64[Sp - 16] = block_cbRdZ_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto ubRej; else goto cbRe0;
       ubRej: // global
           call _cbRdZ(R1) args: 0, res: 0, upd: 0;
       cbRe0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.$cleft_info" {
     Control.Arrow.$cleft_info:
         const Control.Arrow.$cleft_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _cbRdZ() //  [R1]
         { []
         }
     {offset
       cbRdZ: // global
           if (R1 & 7 == 1) goto cbRe3; else goto cbRe4;
       cbRe3: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cbRef; else goto cbRee;
       cbRef: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbRee: // global
           _sbQec::P64 = P64[R1 + 7];
           I64[Hp - 40] = stg_ap_2_upd_info;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = _sbQec::P64;
           I64[Hp - 8] = Data.Either.Left_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cbRe4: // global
           R1 = R1 & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbRdZ_info" {
     block_cbRdZ_info:
         const _cbRdZ;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.515905855 UTC

[section ""data" . Control.Arrow.$fArrowChoice(->)_closure" {
     Control.Arrow.$fArrowChoice(->)_closure:
         const Control.Arrow.C:ArrowChoice_con_info;
         const Control.Arrow.$fArrow(->)_closure+1;
         const Control.Arrow.$cleft_closure+2;
         const Control.Arrow.$cright_closure+2;
         const Control.Arrow.$c+++_closure+3;
         const Data.Either.either_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.5180252 UTC

[section ""data" . Control.Arrow.runKleisli1_closure" {
     Control.Arrow.runKleisli1_closure:
         const Control.Arrow.runKleisli1_info;
 },
 Control.Arrow.runKleisli1_entry() //  [R2]
         { []
         }
     {offset
       cbReI: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.runKleisli1_info" {
     Control.Arrow.runKleisli1_info:
         const Control.Arrow.runKleisli1_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.521705109 UTC

[section ""data" . Control.Arrow.runKleisli_closure" {
     Control.Arrow.runKleisli_closure:
         const Control.Arrow.runKleisli_info;
 },
 Control.Arrow.runKleisli_entry() //  [R2]
         { []
         }
     {offset
       cbReT: // global
           R2 = R2;
           call Control.Arrow.runKleisli1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.runKleisli_info" {
     Control.Arrow.runKleisli_info:
         const Control.Arrow.runKleisli_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.525176735 UTC

[section ""data" . Control.Arrow.returnA_closure" {
     Control.Arrow.returnA_closure:
         const Control.Arrow.returnA_info;
 },
 Control.Arrow.returnA_entry() //  [R2]
         { []
         }
     {offset
       cbRf4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbRf5; else goto cbRf6;
       cbRf5: // global
           R2 = R2;
           R1 = Control.Arrow.returnA_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbRf6: // global
           R2 = R2;
           I64[Sp - 16] = stg_ap_p_info;
           P64[Sp - 8] = GHC.Base.id_closure+1;
           Sp = Sp - 16;
           call Control.Arrow.arr_entry(R2) args: 24, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.returnA_info" {
     Control.Arrow.returnA_info:
         const Control.Arrow.returnA_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.529931893 UTC

[section ""data" . Control.Arrow.^>>_closure" {
     Control.Arrow.^>>_closure:
         const Control.Arrow.^>>_info;
 },
 sat_sbQel_entry() //  [R1]
         { []
         }
     {offset
       cbRfn: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbRfo; else goto cbRfp;
       cbRfo: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbRfp: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQel_info" {
     sat_sbQel_info:
         const sat_sbQel_entry;
         const 2;
         const 18;
 },
 Control.Arrow.^>>_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbRfs: // global
           _sbQej::P64 = R4;
           _sbQei::P64 = R3;
           _sbQeh::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbRft; else goto cbRfu;
       cbRfu: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbRfw; else goto cbRfv;
       cbRfw: // global
           HpAlloc = 32;
           goto cbRft;
       cbRft: // global
           R4 = _sbQej::P64;
           R3 = _sbQei::P64;
           R2 = _sbQeh::P64;
           R1 = Control.Arrow.^>>_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbRfv: // global
           I64[Hp - 24] = sat_sbQel_info;
           P64[Hp - 8] = _sbQeh::P64;
           P64[Hp] = _sbQei::P64;
           I64[Sp - 24] = block_cbRfq_info;
           R2 = _sbQeh::P64;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sbQej::P64;
           Sp = Sp - 24;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.^>>_info" {
     Control.Arrow.^>>_info:
         const Control.Arrow.^>>_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbRfq() //  [R1]
         { []
         }
     {offset
       cbRfq: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           _cbRfj::P64 = P64[Sp + 8];
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = _cbRfj::P64;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbRfq_info" {
     block_cbRfq_info:
         const _cbRfq;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.538019083 UTC

[section ""data" . Control.Arrow.>>^_closure" {
     Control.Arrow.>>^_closure:
         const Control.Arrow.>>^_info;
 },
 sat_sbQeq_entry() //  [R1]
         { []
         }
     {offset
       cbRg2: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbRg3; else goto cbRg4;
       cbRg3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbRg4: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQeq_info" {
     sat_sbQeq_info:
         const sat_sbQeq_entry;
         const 2;
         const 18;
 },
 Control.Arrow.>>^_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbRg7: // global
           _sbQeo::P64 = R4;
           _sbQen::P64 = R3;
           _sbQem::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbRg8; else goto cbRg9;
       cbRg9: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbRgb; else goto cbRga;
       cbRgb: // global
           HpAlloc = 32;
           goto cbRg8;
       cbRg8: // global
           R4 = _sbQeo::P64;
           R3 = _sbQen::P64;
           R2 = _sbQem::P64;
           R1 = Control.Arrow.>>^_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbRga: // global
           I64[Hp - 24] = sat_sbQeq_info;
           P64[Hp - 8] = _sbQem::P64;
           P64[Hp] = _sbQeo::P64;
           I64[Sp - 24] = block_cbRg5_info;
           R2 = _sbQem::P64;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sbQen::P64;
           Sp = Sp - 24;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.>>^_info" {
     Control.Arrow.>>^_info:
         const Control.Arrow.>>^_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbRg5() //  [R1]
         { []
         }
     {offset
       cbRg5: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbRg5_info" {
     block_cbRg5_info:
         const _cbRg5;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.547193024 UTC

[section ""data" . Control.Arrow.<<^_closure" {
     Control.Arrow.<<^_closure:
         const Control.Arrow.<<^_info;
 },
 sat_sbQev_entry() //  [R1]
         { []
         }
     {offset
       cbRgG: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbRgH; else goto cbRgI;
       cbRgH: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbRgI: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQev_info" {
     sat_sbQev_info:
         const sat_sbQev_entry;
         const 2;
         const 18;
 },
 Control.Arrow.<<^_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbRgL: // global
           _sbQet::P64 = R4;
           _sbQes::P64 = R3;
           _sbQer::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbRgM; else goto cbRgN;
       cbRgN: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbRgP; else goto cbRgO;
       cbRgP: // global
           HpAlloc = 32;
           goto cbRgM;
       cbRgM: // global
           R4 = _sbQet::P64;
           R3 = _sbQes::P64;
           R2 = _sbQer::P64;
           R1 = Control.Arrow.<<^_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbRgO: // global
           I64[Hp - 24] = sat_sbQev_info;
           P64[Hp - 8] = _sbQer::P64;
           P64[Hp] = _sbQet::P64;
           I64[Sp - 24] = block_cbRgJ_info;
           R2 = _sbQer::P64;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sbQes::P64;
           Sp = Sp - 24;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.<<^_info" {
     Control.Arrow.<<^_info:
         const Control.Arrow.<<^_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbRgJ() //  [R1]
         { []
         }
     {offset
       cbRgJ: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           _cbRgC::P64 = P64[Sp + 8];
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = _cbRgC::P64;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbRgJ_info" {
     block_cbRgJ_info:
         const _cbRgJ;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.555596111 UTC

[section ""data" . Control.Arrow.^<<_closure" {
     Control.Arrow.^<<_closure:
         const Control.Arrow.^<<_info;
 },
 sat_sbQeA_entry() //  [R1]
         { []
         }
     {offset
       cbRhl: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbRhm; else goto cbRhn;
       cbRhm: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbRhn: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = P64[R1 + 24];
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQeA_info" {
     sat_sbQeA_info:
         const sat_sbQeA_entry;
         const 2;
         const 18;
 },
 Control.Arrow.^<<_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cbRhq: // global
           _sbQey::P64 = R4;
           _sbQex::P64 = R3;
           _sbQew::P64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto cbRhr; else goto cbRhs;
       cbRhs: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbRhu; else goto cbRht;
       cbRhu: // global
           HpAlloc = 32;
           goto cbRhr;
       cbRhr: // global
           R4 = _sbQey::P64;
           R3 = _sbQex::P64;
           R2 = _sbQew::P64;
           R1 = Control.Arrow.^<<_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbRht: // global
           I64[Hp - 24] = sat_sbQeA_info;
           P64[Hp - 8] = _sbQew::P64;
           P64[Hp] = _sbQex::P64;
           I64[Sp - 24] = block_cbRho_info;
           R2 = _sbQew::P64;
           P64[Sp - 16] = Hp - 24;
           P64[Sp - 8] = _sbQey::P64;
           Sp = Sp - 24;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.^<<_info" {
     Control.Arrow.^<<_info:
         const Control.Arrow.^<<_entry;
         const 0;
         const 14;
         const 12884901911;
 },
 _cbRho() //  [R1]
         { []
         }
     {offset
       cbRho: // global
           R2 = R1;
           I64[Sp] = stg_ap_pp_info;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbRho_info" {
     block_cbRho_info:
         const _cbRho;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.569954006 UTC

[section ""data" . Control.Arrow.leftApp_closure" {
     Control.Arrow.leftApp_closure:
         const Control.Arrow.leftApp_info;
 },
 lvl5_sbQeG_entry() //  [R1]
         { []
         }
     {offset
       cbRib: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbRic; else goto cbRid;
       cbRic: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbRid: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Data.Either.Left_closure+1;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl5_sbQeG_info" {
     lvl5_sbQeG_info:
         const lvl5_sbQeG_entry;
         const 1;
         const 16;
 },
 sat_sbQeM_entry() //  [R1, R2]
         { []
         }
     {offset
       cbRiI: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbRiJ; else goto cbRiK;
       cbRiJ: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbRiK: // global
           I64[Sp - 16] = block_cbRiF_info;
           _sbQeJ::P64 = P64[R1 + 7];
           R1 = R2;
           P64[Sp - 8] = _sbQeJ::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto ubRiO; else goto cbRiG;
       ubRiO: // global
           call _cbRiF() args: 0, res: 0, upd: 0;
       cbRiG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQeM_info" {
     sat_sbQeM_info:
         const sat_sbQeM_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 _cbRiF() //  []
         { []
         }
     {offset
       cbRiF: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbRiF_info" {
     block_cbRiF_info:
         const _cbRiF;
         const 1;
         const 30;
 },
 sat_sbQeN_entry() //  [R1]
         { []
         }
     {offset
       cbRiP: // global
           _sbQeN::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cbRiQ; else goto cbRiR;
       cbRiR: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbRiT; else goto cbRiS;
       cbRiT: // global
           HpAlloc = 16;
           goto cbRiQ;
       cbRiQ: // global
           R1 = _sbQeN::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbRiS: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQeN::P64;
           _sbQeD::P64 = P64[_sbQeN::P64 + 16];
           _sbQeJ::P64 = P64[_sbQeN::P64 + 24];
           I64[Hp - 8] = sat_sbQeM_info;
           P64[Hp] = _sbQeJ::P64;
           R2 = _sbQeD::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 7;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQeN_info" {
     sat_sbQeN_info:
         const sat_sbQeN_entry;
         const 2;
         const 18;
 },
 sat_sbQeO_entry() //  [R1]
         { []
         }
     {offset
       cbRiU: // global
           _sbQeO::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbRiV; else goto cbRiW;
       cbRiW: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cbRiY; else goto cbRiX;
       cbRiY: // global
           HpAlloc = 32;
           goto cbRiV;
       cbRiV: // global
           R1 = _sbQeO::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbRiX: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQeO::P64;
           _sbQeC::P64 = P64[_sbQeO::P64 + 16];
           _sbQeD::P64 = P64[_sbQeO::P64 + 24];
           _sbQeE::P64 = P64[_sbQeO::P64 + 32];
           _sbQeJ::P64 = P64[_sbQeO::P64 + 40];
           I64[Hp - 24] = sat_sbQeN_info;
           P64[Hp - 8] = _sbQeD::P64;
           P64[Hp] = _sbQeJ::P64;
           R2 = _sbQeE::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _sbQeC::P64;
           P64[Sp - 24] = Hp - 24;
           Sp = Sp - 40;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQeO_info" {
     sat_sbQeO_info:
         const sat_sbQeO_entry;
         const 4;
         const 15;
 },
 sat_sbQeP_entry() //  [R1]
         { []
         }
     {offset
       cbRiZ: // global
           _sbQeP::P64 = R1;
           if ((Sp + -40) < SpLim) (likely: False) goto cbRj0; else goto cbRj1;
       cbRj1: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cbRj3; else goto cbRj2;
       cbRj3: // global
           HpAlloc = 48;
           goto cbRj0;
       cbRj0: // global
           R1 = _sbQeP::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbRj2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQeP::P64;
           _sbQeC::P64 = P64[_sbQeP::P64 + 16];
           _sbQeD::P64 = P64[_sbQeP::P64 + 24];
           _sbQeE::P64 = P64[_sbQeP::P64 + 32];
           _sbQeG::P64 = P64[_sbQeP::P64 + 40];
           _sbQeJ::P64 = P64[_sbQeP::P64 + 48];
           I64[Hp - 40] = sat_sbQeO_info;
           P64[Hp - 24] = _sbQeC::P64;
           P64[Hp - 16] = _sbQeD::P64;
           P64[Hp - 8] = _sbQeE::P64;
           P64[Hp] = _sbQeJ::P64;
           R2 = _sbQeE::P64;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = _sbQeG::P64;
           P64[Sp - 24] = Hp - 40;
           Sp = Sp - 40;
           call Control.Category.._entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQeP_info" {
     sat_sbQeP_info:
         const sat_sbQeP_entry;
         const 5;
         const 15;
 },
 sat_sbQeT_entry() //  [R1]
         { []
         }
     {offset
       cbRjm: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbRjn; else goto cbRjo;
       cbRjn: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbRjo: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_cbRjj_info;
           _sbQeQ::P64 = P64[R1 + 16];
           R1 = P64[R1 + 24];
           P64[Sp - 24] = _sbQeQ::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto ubRjs; else goto cbRjk;
       ubRjs: // global
           call _cbRjj() args: 0, res: 0, upd: 0;
       cbRjk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQeT_info" {
     sat_sbQeT_info:
         const sat_sbQeT_entry;
         const 2;
         const 18;
 },
 _cbRjj() //  []
         { []
         }
     {offset
       cbRjj: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_0_fast(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_cbRjj_info" {
     block_cbRjj_info:
         const _cbRjj;
         const 1;
         const 30;
 },
 sat_sbQeU_entry() //  [R1, R2]
         { []
         }
     {offset
       cbRju: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cbRjy; else goto cbRjx;
       cbRjy: // global
           HpAlloc = 48;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbRjx: // global
           _sbQeQ::P64 = P64[R1 + 7];
           I64[Hp - 40] = sat_sbQeT_info;
           P64[Hp - 24] = _sbQeQ::P64;
           P64[Hp - 16] = R2;
           I64[Hp - 8] = Data.Either.Right_con_info;
           P64[Hp] = Hp - 40;
           R1 = Hp - 6;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQeU_info" {
     sat_sbQeU_info:
         const sat_sbQeU_entry;
         const 1;
         const 9;
         const 4294967301;
 },
 sat_sbQeV_entry() //  [R1]
         { []
         }
     {offset
       cbRjz: // global
           _sbQeV::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cbRjA; else goto cbRjB;
       cbRjB: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cbRjD; else goto cbRjC;
       cbRjD: // global
           HpAlloc = 16;
           goto cbRjA;
       cbRjA: // global
           R1 = _sbQeV::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbRjC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQeV::P64;
           _sbQeD::P64 = P64[_sbQeV::P64 + 16];
           _sbQeQ::P64 = P64[_sbQeV::P64 + 24];
           I64[Hp - 8] = sat_sbQeU_info;
           P64[Hp] = _sbQeQ::P64;
           R2 = _sbQeD::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 7;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQeV_info" {
     sat_sbQeV_info:
         const sat_sbQeV_entry;
         const 2;
         const 18;
 },
 sat_sbQeW_entry() //  [R1, R2]
         { []
         }
     {offset
       cbRjI: // global
           if ((Sp + -40) < SpLim) (likely: False) goto cbRjJ; else goto cbRjK;
       cbRjJ: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cbRjK: // global
           I64[Sp - 40] = block_cbRij_info;
           _sbQeC::P64 = P64[R1 + 7];
           _sbQeD::P64 = P64[R1 + 15];
           _sbQeE::P64 = P64[R1 + 23];
           _sbQeG::P64 = P64[R1 + 31];
           R1 = R2;
           P64[Sp - 32] = _sbQeC::P64;
           P64[Sp - 24] = _sbQeD::P64;
           P64[Sp - 16] = _sbQeE::P64;
           P64[Sp - 8] = _sbQeG::P64;
           Sp = Sp - 40;
           if (R1 & 7 != 0) goto ubRjT; else goto cbRik;
       ubRjT: // global
           call _cbRij(R1) args: 0, res: 0, upd: 0;
       cbRik: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_sbQeW_info" {
     sat_sbQeW_info:
         const sat_sbQeW_entry;
         const 4;
         const 8;
         const 4294967301;
 },
 _cbRij() //  [R1]
         { []
         }
     {offset
       cbRij: // global
           _sbQeD::P64 = P64[Sp + 16];
           if (R1 & 7 == 1) goto cbRjF; else goto cbRjG;
       cbRjF: // global
           Hp = Hp + 80;
           if (Hp > HpLim) (likely: False) goto cbRjO; else goto cbRjN;
       cbRjO: // global
           HpAlloc = 80;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbRjN: // global
           _sbQeJ::P64 = P64[R1 + 7];
           I64[Hp - 72] = sat_sbQeP_info;
           P64[Hp - 56] = P64[Sp + 8];
           P64[Hp - 48] = _sbQeD::P64;
           P64[Hp - 40] = P64[Sp + 24];
           P64[Hp - 32] = P64[Sp + 32];
           P64[Hp - 24] = _sbQeJ::P64;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 72;
           P64[Hp] = GHC.Tuple.()_closure+1;
           R1 = Hp - 15;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       cbRjG: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cbRjS; else goto cbRjR;
       cbRjS: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbRjR: // global
           _sbQeQ::P64 = P64[R1 + 6];
           I64[Hp - 48] = sat_sbQeV_info;
           P64[Hp - 32] = _sbQeD::P64;
           P64[Hp - 24] = _sbQeQ::P64;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 48;
           P64[Hp] = GHC.Tuple.()_closure+1;
           R1 = Hp - 15;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbRij_info" {
     block_cbRij_info:
         const _cbRij;
         const 4;
         const 30;
 },
 sat_sbQeX_entry() //  [R1]
         { []
         }
     {offset
       cbRjU: // global
           _sbQeX::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto cbRjV; else goto cbRjW;
       cbRjW: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbRjY; else goto cbRjX;
       cbRjY: // global
           HpAlloc = 64;
           goto cbRjV;
       cbRjV: // global
           R1 = _sbQeX::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbRjX: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _sbQeX::P64;
           _sbQeC::P64 = P64[_sbQeX::P64 + 16];
           _sbQeD::P64 = P64[_sbQeX::P64 + 24];
           _sbQeE::P64 = P64[_sbQeX::P64 + 32];
           I64[Hp - 56] = lvl5_sbQeG_info;
           P64[Hp - 40] = _sbQeD::P64;
           I64[Hp - 32] = sat_sbQeW_info;
           P64[Hp - 24] = _sbQeC::P64;
           P64[Hp - 16] = _sbQeD::P64;
           P64[Hp - 8] = _sbQeE::P64;
           P64[Hp] = Hp - 56;
           R2 = _sbQeD::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 31;
           Sp = Sp - 32;
           call Control.Arrow.arr_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQeX_info" {
     sat_sbQeX_info:
         const sat_sbQeX_entry;
         const 3;
         const 15;
 },
 sat_sbQeF_entry() //  [R1]
         { []
         }
     {offset
       cbRk3: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cbRk4; else goto cbRk5;
       cbRk4: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       cbRk5: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call Control.Arrow.app_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_sbQeF_info" {
     sat_sbQeF_info:
         const sat_sbQeF_entry;
         const 1;
         const 16;
 },
 Control.Arrow.leftApp_entry() //  [R2, R3]
         { []
         }
     {offset
       cbRk6: // global
           if ((Sp + -32) < SpLim) (likely: False) goto cbRk7; else goto cbRk8;
       cbRk7: // global
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.leftApp_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbRk8: // global
           I64[Sp - 24] = block_cbRhV_info;
           _sbQeB::P64 = R2;
           R2 = R2;
           P64[Sp - 16] = _sbQeB::P64;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call Control.Arrow.$p1ArrowApply_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.leftApp_info" {
     Control.Arrow.leftApp_info:
         const Control.Arrow.leftApp_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _cbRhV() //  [R1]
         { []
         }
     {offset
       cbRhV: // global
           I64[Sp - 8] = block_cbRhZ_info;
           R2 = R1;
           P64[Sp] = R1;
           Sp = Sp - 8;
           call Control.Arrow.$p1Arrow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cbRhV_info" {
     block_cbRhV_info:
         const _cbRhV;
         const 2;
         const 30;
 },
 _cbRhZ() //  [R1]
         { []
         }
     {offset
       cbRhZ: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto cbRkc; else goto cbRkb;
       cbRkc: // global
           HpAlloc = 64;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cbRkb: // global
           I64[Hp - 56] = sat_sbQeX_info;
           P64[Hp - 40] = P64[Sp + 24];
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = R1;
           I64[Hp - 16] = sat_sbQeF_info;
           P64[Hp] = P64[Sp + 16];
           R2 = R1;
           I64[Sp + 8] = stg_ap_pp_info;
           P64[Sp + 16] = Hp - 16;
           P64[Sp + 24] = Hp - 56;
           Sp = Sp + 8;
           call Control.Category.._entry(R2) args: 32, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cbRhZ_info" {
     block_cbRhZ_info:
         const _cbRhZ;
         const 3;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.60318692 UTC

[section ""cstring" . Control.Arrow.$trModule4_bytes" {
     Control.Arrow.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.604854041 UTC

[section ""data" . Control.Arrow.$trModule3_closure" {
     Control.Arrow.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.606565026 UTC

[section ""cstring" . Control.Arrow.$trModule2_bytes" {
     Control.Arrow.$trModule2_bytes:
         I8[] [67,111,110,116,114,111,108,46,65,114,114,111,119]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.608261281 UTC

[section ""data" . Control.Arrow.$trModule1_closure" {
     Control.Arrow.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.610069585 UTC

[section ""data" . Control.Arrow.$trModule_closure" {
     Control.Arrow.$trModule_closure:
         const GHC.Types.Module_con_info;
         const Control.Arrow.$trModule3_closure+1;
         const Control.Arrow.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.611935562 UTC

[section ""data" . $krep_rbNCd_closure" {
     $krep_rbNCd_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Tuple.$tc()_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.613775709 UTC

[section ""data" . $krep1_rbNCe_closure" {
     $krep1_rbNCe_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.615456409 UTC

[section ""data" . Control.Arrow.$tcKleisli1_closure" {
     Control.Arrow.$tcKleisli1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const GHC.Types.krep$*->*->*_closure;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.617702012 UTC

[section ""data" . Control.Arrow.$tcArrow1_closure" {
     Control.Arrow.$tcArrow1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*->*->*_closure;
         const $krep1_rbNCe_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.619500007 UTC

[section ""data" . Control.Arrow.$tcArrowMonad1_closure" {
     Control.Arrow.$tcArrowMonad1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*->*->*_closure;
         const GHC.Types.krep$*Arr*_closure;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.621185511 UTC

[section ""data" . $krep2_rbNCf_closure" {
     $krep2_rbNCf_closure:
         const GHC.Types.KindRepVar_con_info;
         const 2;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.622908986 UTC

[section ""data" . $krep3_rbNCg_closure" {
     $krep3_rbNCg_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.624606916 UTC

[section ""data" . $krep4_rbNCh_closure" {
     $krep4_rbNCh_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.626327895 UTC

[section ""data" . $krep5_rbNCi_closure" {
     $krep5_rbNCi_closure:
         const GHC.Types.KindRepApp_con_info;
         const $krep4_rbNCh_closure+2;
         const $krep2_rbNCf_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.627932949 UTC

[section ""data" . $krep6_rbNCj_closure" {
     $krep6_rbNCj_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_rbNCg_closure+2;
         const $krep5_rbNCi_closure+3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.630438481 UTC

[section ""data" . $krep7_rbNCk_closure" {
     $krep7_rbNCk_closure:
         const GHC.Types.KindRepApp_con_info;
         const $krep4_rbNCh_closure+2;
         const $krep_rbNCd_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.632171991 UTC

[section ""data" . $krep8_rbNCl_closure" {
     $krep8_rbNCl_closure:
         const GHC.Types.KindRepApp_con_info;
         const $krep7_rbNCk_closure+3;
         const $krep3_rbNCg_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.633923523 UTC

[section ""cstring" . Control.Arrow.$tcArrow3_bytes" {
     Control.Arrow.$tcArrow3_bytes:
         I8[] [65,114,114,111,119]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.635657525 UTC

[section ""data" . Control.Arrow.$tcArrow2_closure" {
     Control.Arrow.$tcArrow2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$tcArrow3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.637410063 UTC

[section ""data" . Control.Arrow.$tcArrow_closure" {
     Control.Arrow.$tcArrow_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Arrow.$trModule_closure+1;
         const Control.Arrow.$tcArrow2_closure+1;
         const Control.Arrow.$tcArrow1_closure+4;
         const 12964584583212294992;
         const 10211991410748124746;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.639176683 UTC

[section ""cstring" . Control.Arrow.$tcKleisli3_bytes" {
     Control.Arrow.$tcKleisli3_bytes:
         I8[] [75,108,101,105,115,108,105]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.640865236 UTC

[section ""data" . Control.Arrow.$tcKleisli2_closure" {
     Control.Arrow.$tcKleisli2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$tcKleisli3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.644158614 UTC

[section ""data" . Control.Arrow.$tcKleisli_closure" {
     Control.Arrow.$tcKleisli_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Arrow.$trModule_closure+1;
         const Control.Arrow.$tcKleisli2_closure+1;
         const Control.Arrow.$tcKleisli1_closure+4;
         const 2023158159015915132;
         const 6143719008973118504;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.646155677 UTC

[section ""data" . $krep9_rbNCm_closure" {
     $krep9_rbNCm_closure:
         const :_con_info;
         const $krep2_rbNCf_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.647976304 UTC

[section ""data" . $krep10_rbNCn_closure" {
     $krep10_rbNCn_closure:
         const :_con_info;
         const $krep3_rbNCg_closure+2;
         const $krep9_rbNCm_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.650351529 UTC

[section ""data" . $krep11_rbNCo_closure" {
     $krep11_rbNCo_closure:
         const :_con_info;
         const $krep4_rbNCh_closure+2;
         const $krep10_rbNCn_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.652197415 UTC

[section ""data" . $krep12_rbNCp_closure" {
     $krep12_rbNCp_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Control.Arrow.$tcKleisli_closure+1;
         const $krep11_rbNCo_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.653958256 UTC

[section ""data" . Control.Arrow.$tc'Kleisli1_closure" {
     Control.Arrow.$tc'Kleisli1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep6_rbNCj_closure+4;
         const $krep12_rbNCp_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.655627695 UTC

[section ""cstring" . Control.Arrow.$tc'Kleisli3_bytes" {
     Control.Arrow.$tc'Kleisli3_bytes:
         I8[] [39,75,108,101,105,115,108,105]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.657326086 UTC

[section ""data" . Control.Arrow.$tc'Kleisli2_closure" {
     Control.Arrow.$tc'Kleisli2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$tc'Kleisli3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.659120112 UTC

[section ""data" . Control.Arrow.$tc'Kleisli_closure" {
     Control.Arrow.$tc'Kleisli_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Arrow.$trModule_closure+1;
         const Control.Arrow.$tc'Kleisli2_closure+1;
         const Control.Arrow.$tc'Kleisli1_closure+4;
         const 793719726112502834;
         const 14919550952510816382;
         const 3;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.660856271 UTC

[section ""cstring" . Control.Arrow.$tcArrowZero2_bytes" {
     Control.Arrow.$tcArrowZero2_bytes:
         I8[] [65,114,114,111,119,90,101,114,111]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.66256602 UTC

[section ""data" . Control.Arrow.$tcArrowZero1_closure" {
     Control.Arrow.$tcArrowZero1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$tcArrowZero2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.664282296 UTC

[section ""data" . Control.Arrow.$tcArrowZero_closure" {
     Control.Arrow.$tcArrowZero_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Arrow.$trModule_closure+1;
         const Control.Arrow.$tcArrowZero1_closure+1;
         const Control.Arrow.$tcArrow1_closure+4;
         const 337582314637215801;
         const 485553589222180171;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.666380426 UTC

[section ""cstring" . Control.Arrow.$tcArrowPlus2_bytes" {
     Control.Arrow.$tcArrowPlus2_bytes:
         I8[] [65,114,114,111,119,80,108,117,115]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.668022439 UTC

[section ""data" . Control.Arrow.$tcArrowPlus1_closure" {
     Control.Arrow.$tcArrowPlus1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$tcArrowPlus2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.669850462 UTC

[section ""data" . Control.Arrow.$tcArrowPlus_closure" {
     Control.Arrow.$tcArrowPlus_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Arrow.$trModule_closure+1;
         const Control.Arrow.$tcArrowPlus1_closure+1;
         const Control.Arrow.$tcArrow1_closure+4;
         const 9089885184909062397;
         const 13092571182525076608;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.67222893 UTC

[section ""cstring" . Control.Arrow.$tcArrowChoice2_bytes" {
     Control.Arrow.$tcArrowChoice2_bytes:
         I8[] [65,114,114,111,119,67,104,111,105,99,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.674000151 UTC

[section ""data" . Control.Arrow.$tcArrowChoice1_closure" {
     Control.Arrow.$tcArrowChoice1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$tcArrowChoice2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.675735043 UTC

[section ""data" . Control.Arrow.$tcArrowChoice_closure" {
     Control.Arrow.$tcArrowChoice_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Arrow.$trModule_closure+1;
         const Control.Arrow.$tcArrowChoice1_closure+1;
         const Control.Arrow.$tcArrow1_closure+4;
         const 9045385674203608923;
         const 4474606397073518393;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.677503331 UTC

[section ""cstring" . Control.Arrow.$tcArrowApply2_bytes" {
     Control.Arrow.$tcArrowApply2_bytes:
         I8[] [65,114,114,111,119,65,112,112,108,121]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.679242 UTC

[section ""data" . Control.Arrow.$tcArrowApply1_closure" {
     Control.Arrow.$tcArrowApply1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$tcArrowApply2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.681038722 UTC

[section ""data" . Control.Arrow.$tcArrowApply_closure" {
     Control.Arrow.$tcArrowApply_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Arrow.$trModule_closure+1;
         const Control.Arrow.$tcArrowApply1_closure+1;
         const Control.Arrow.$tcArrow1_closure+4;
         const 4969046276209689969;
         const 2697302259091605677;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.68293311 UTC

[section ""cstring" . Control.Arrow.$tcArrowMonad3_bytes" {
     Control.Arrow.$tcArrowMonad3_bytes:
         I8[] [65,114,114,111,119,77,111,110,97,100]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.684537599 UTC

[section ""data" . Control.Arrow.$tcArrowMonad2_closure" {
     Control.Arrow.$tcArrowMonad2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$tcArrowMonad3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.686452193 UTC

[section ""data" . Control.Arrow.$tcArrowMonad_closure" {
     Control.Arrow.$tcArrowMonad_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Arrow.$trModule_closure+1;
         const Control.Arrow.$tcArrowMonad2_closure+1;
         const Control.Arrow.$tcArrowMonad1_closure+4;
         const 2648525758856951758;
         const 13692351200590237690;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.688267223 UTC

[section ""data" . $krep13_rbNCq_closure" {
     $krep13_rbNCq_closure:
         const :_con_info;
         const $krep3_rbNCg_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.690620085 UTC

[section ""data" . $krep14_rbNCr_closure" {
     $krep14_rbNCr_closure:
         const :_con_info;
         const $krep4_rbNCh_closure+2;
         const $krep13_rbNCq_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.692309587 UTC

[section ""data" . $krep15_rbNCs_closure" {
     $krep15_rbNCs_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Control.Arrow.$tcArrowMonad_closure+1;
         const $krep14_rbNCr_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.693970063 UTC

[section ""data" . Control.Arrow.$tc'ArrowMonad1_closure" {
     Control.Arrow.$tc'ArrowMonad1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep8_rbNCl_closure+3;
         const $krep15_rbNCs_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.695694085 UTC

[section ""cstring" . Control.Arrow.$tc'ArrowMonad3_bytes" {
     Control.Arrow.$tc'ArrowMonad3_bytes:
         I8[] [39,65,114,114,111,119,77,111,110,97,100]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.698305966 UTC

[section ""data" . Control.Arrow.$tc'ArrowMonad2_closure" {
     Control.Arrow.$tc'ArrowMonad2_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$tc'ArrowMonad3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.700014728 UTC

[section ""data" . Control.Arrow.$tc'ArrowMonad_closure" {
     Control.Arrow.$tc'ArrowMonad_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Arrow.$trModule_closure+1;
         const Control.Arrow.$tc'ArrowMonad2_closure+1;
         const Control.Arrow.$tc'ArrowMonad1_closure+4;
         const 8781545391513276915;
         const 783725375361948493;
         const 2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.701800971 UTC

[section ""cstring" . Control.Arrow.$tcArrowLoop2_bytes" {
     Control.Arrow.$tcArrowLoop2_bytes:
         I8[] [65,114,114,111,119,76,111,111,112]
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.703572259 UTC

[section ""data" . Control.Arrow.$tcArrowLoop1_closure" {
     Control.Arrow.$tcArrowLoop1_closure:
         const GHC.Types.TrNameS_con_info;
         const Control.Arrow.$tcArrowLoop2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.70539355 UTC

[section ""data" . Control.Arrow.$tcArrowLoop_closure" {
     Control.Arrow.$tcArrowLoop_closure:
         const GHC.Types.TyCon_con_info;
         const Control.Arrow.$trModule_closure+1;
         const Control.Arrow.$tcArrowLoop1_closure+1;
         const Control.Arrow.$tcArrow1_closure+4;
         const 15298492960828880948;
         const 13953070859738786616;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.70774942 UTC

[section ""data" . Control.Arrow.C:ArrowLoop_closure" {
     Control.Arrow.C:ArrowLoop_closure:
         const Control.Arrow.C:ArrowLoop_info;
 },
 Control.Arrow.C:ArrowLoop_entry() //  [R2, R3]
         { []
         }
     {offset
       cbRng: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbRnk; else goto cbRnj;
       cbRnk: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.C:ArrowLoop_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbRnj: // global
           I64[Hp - 16] = Control.Arrow.C:ArrowLoop_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:ArrowLoop_info" {
     Control.Arrow.C:ArrowLoop_info:
         const Control.Arrow.C:ArrowLoop_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.711724502 UTC

[section ""data" . Control.Arrow.C:ArrowApply_closure" {
     Control.Arrow.C:ArrowApply_closure:
         const Control.Arrow.C:ArrowApply_info;
 },
 Control.Arrow.C:ArrowApply_entry() //  [R2, R3]
         { []
         }
     {offset
       cbRnw: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbRnA; else goto cbRnz;
       cbRnA: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.C:ArrowApply_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbRnz: // global
           I64[Hp - 16] = Control.Arrow.C:ArrowApply_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:ArrowApply_info" {
     Control.Arrow.C:ArrowApply_info:
         const Control.Arrow.C:ArrowApply_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.715917132 UTC

[section ""data" . Control.Arrow.C:ArrowChoice_closure" {
     Control.Arrow.C:ArrowChoice_closure:
         const Control.Arrow.C:ArrowChoice_info;
 },
 Control.Arrow.C:ArrowChoice_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       cbRnM: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto cbRnQ; else goto cbRnP;
       cbRnQ: // global
           HpAlloc = 48;
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.C:ArrowChoice_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cbRnP: // global
           I64[Hp - 40] = Control.Arrow.C:ArrowChoice_con_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           P64[Hp - 16] = R4;
           P64[Hp - 8] = R5;
           P64[Hp] = R6;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:ArrowChoice_info" {
     Control.Arrow.C:ArrowChoice_info:
         const Control.Arrow.C:ArrowChoice_entry;
         const 0;
         const 14;
         const 21474836505;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.720641371 UTC

[section ""data" . Control.Arrow.C:ArrowPlus_closure" {
     Control.Arrow.C:ArrowPlus_closure:
         const Control.Arrow.C:ArrowPlus_info;
 },
 Control.Arrow.C:ArrowPlus_entry() //  [R2, R3]
         { []
         }
     {offset
       cbRo2: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbRo6; else goto cbRo5;
       cbRo6: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.C:ArrowPlus_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbRo5: // global
           I64[Hp - 16] = Control.Arrow.C:ArrowPlus_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:ArrowPlus_info" {
     Control.Arrow.C:ArrowPlus_info:
         const Control.Arrow.C:ArrowPlus_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.724689505 UTC

[section ""data" . Control.Arrow.C:ArrowZero_closure" {
     Control.Arrow.C:ArrowZero_closure:
         const Control.Arrow.C:ArrowZero_info;
 },
 Control.Arrow.C:ArrowZero_entry() //  [R2, R3]
         { []
         }
     {offset
       cbRoi: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cbRom; else goto cbRol;
       cbRom: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.C:ArrowZero_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cbRol: // global
           I64[Hp - 16] = Control.Arrow.C:ArrowZero_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:ArrowZero_info" {
     Control.Arrow.C:ArrowZero_info:
         const Control.Arrow.C:ArrowZero_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.728704024 UTC

[section ""data" . Control.Arrow.C:Arrow_closure" {
     Control.Arrow.C:Arrow_closure:
         const Control.Arrow.C:Arrow_info;
 },
 Control.Arrow.C:Arrow_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       cbRoy: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto cbRoC; else goto cbRoB;
       cbRoC: // global
           HpAlloc = 56;
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = Control.Arrow.C:Arrow_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 16, res: 0, upd: 8;
       cbRoB: // global
           I64[Hp - 48] = Control.Arrow.C:Arrow_con_info;
           P64[Hp - 40] = R2;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           P64[Hp - 16] = R5;
           P64[Hp - 8] = R6;
           P64[Hp] = P64[Sp];
           R1 = Hp - 47;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:Arrow_info" {
     Control.Arrow.C:Arrow_info:
         const Control.Arrow.C:Arrow_entry;
         const 0;
         const 14;
         const 25769803802;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.733102762 UTC

[section ""cstring" . ibRoL_str" {
     ibRoL_str:
         I8[] [98,97,115,101,58,67,111,110,116,114,111,108,46,65,114,114,111,119,46,67,58,65,114,114,111,119,76,111,111,112]
 },
 Control.Arrow.C:ArrowLoop_con_entry() //  [R1]
         { []
         }
     {offset
       cbRoK: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:ArrowLoop_con_info" {
     Control.Arrow.C:ArrowLoop_con_info:
         const Control.Arrow.C:ArrowLoop_con_entry;
         const 2;
         const 4;
         const ibRoL_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.736567143 UTC

[section ""cstring" . ibRoS_str" {
     ibRoS_str:
         I8[] [98,97,115,101,58,67,111,110,116,114,111,108,46,65,114,114,111,119,46,67,58,65,114,114,111,119,65,112,112,108,121]
 },
 Control.Arrow.C:ArrowApply_con_entry() //  [R1]
         { []
         }
     {offset
       cbRoR: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:ArrowApply_con_info" {
     Control.Arrow.C:ArrowApply_con_info:
         const Control.Arrow.C:ArrowApply_con_entry;
         const 2;
         const 4;
         const ibRoS_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.739912631 UTC

[section ""cstring" . ibRoZ_str" {
     ibRoZ_str:
         I8[] [98,97,115,101,58,67,111,110,116,114,111,108,46,65,114,114,111,119,46,67,58,65,114,114,111,119,67,104,111,105,99,101]
 },
 Control.Arrow.C:ArrowChoice_con_entry() //  [R1]
         { []
         }
     {offset
       cbRoY: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:ArrowChoice_con_info" {
     Control.Arrow.C:ArrowChoice_con_info:
         const Control.Arrow.C:ArrowChoice_con_entry;
         const 5;
         const 1;
         const ibRoZ_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.743501127 UTC

[section ""cstring" . ibRp6_str" {
     ibRp6_str:
         I8[] [98,97,115,101,58,67,111,110,116,114,111,108,46,65,114,114,111,119,46,67,58,65,114,114,111,119,80,108,117,115]
 },
 Control.Arrow.C:ArrowPlus_con_entry() //  [R1]
         { []
         }
     {offset
       cbRp5: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:ArrowPlus_con_info" {
     Control.Arrow.C:ArrowPlus_con_info:
         const Control.Arrow.C:ArrowPlus_con_entry;
         const 2;
         const 4;
         const ibRp6_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.746723374 UTC

[section ""cstring" . ibRpd_str" {
     ibRpd_str:
         I8[] [98,97,115,101,58,67,111,110,116,114,111,108,46,65,114,114,111,119,46,67,58,65,114,114,111,119,90,101,114,111]
 },
 Control.Arrow.C:ArrowZero_con_entry() //  [R1]
         { []
         }
     {offset
       cbRpc: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:ArrowZero_con_info" {
     Control.Arrow.C:ArrowZero_con_info:
         const Control.Arrow.C:ArrowZero_con_entry;
         const 2;
         const 4;
         const ibRpd_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.749818565 UTC

[section ""cstring" . ibRpk_str" {
     ibRpk_str:
         I8[] [98,97,115,101,58,67,111,110,116,114,111,108,46,65,114,114,111,119,46,67,58,65,114,114,111,119]
 },
 Control.Arrow.C:Arrow_con_entry() //  [R1]
         { []
         }
     {offset
       cbRpj: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . Control.Arrow.C:Arrow_con_info" {
     Control.Arrow.C:Arrow_con_info:
         const Control.Arrow.C:Arrow_con_entry;
         const 6;
         const 1;
         const ibRpk_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:06:44.752806242 UTC

[section ""relreadonly" . SbQC5_srt" {
     SbQC5_srt:
         const GHC.Err.errorWithoutStackTrace_closure;
         const Control.Arrow.$fMonadArrowMonad_closure;
         const lvl_rbNC6_closure;
         const Control.Arrow.$fMonadPlusArrowMonad_closure;
 }]

