
==================== Tidy Core ====================
2018-03-16 16:09:15.58600562 UTC

Result size of Tidy Core
  = {terms: 1,406, types: 2,096, coercions: 239, joins: 3/13}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Timeout.$fExceptionTimeout2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
System.Timeout.$fExceptionTimeout2 = "<<timeout>>"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Timeout.$fExceptionTimeout1 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
System.Timeout.$fExceptionTimeout1
  = GHC.CString.unpackCString# System.Timeout.$fExceptionTimeout2

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
System.Timeout.$fExceptionTimeout_$cshow :: Timeout -> String
[GblId,
 Arity=1,
 Str=<L,A>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)
         Tmpl= \ _ [Occ=Dead] -> System.Timeout.$fExceptionTimeout1}]
System.Timeout.$fExceptionTimeout_$cshow
  = \ _ [Occ=Dead] -> System.Timeout.$fExceptionTimeout1

-- RHS size: {terms: 6, types: 3, coercions: 0, joins: 0/0}
System.Timeout.$fShowTimeout_$cshowsPrec :: Int -> Timeout -> ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,A><L,A><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ _ [Occ=Dead] _ [Occ=Dead] (s_i7QH0 [Occ=Once] :: String) ->
                 GHC.CString.unpackAppendCString# "<<timeout>>"# s_i7QH0}]
System.Timeout.$fShowTimeout_$cshowsPrec
  = \ _ [Occ=Dead] _ [Occ=Dead] (s_i7QH0 :: String) ->
      GHC.CString.unpackAppendCString#
        System.Timeout.$fExceptionTimeout2 s_i7QH0

-- RHS size: {terms: 5, types: 2, coercions: 0, joins: 0/0}
System.Timeout.$fShowTimeout1 :: Timeout -> String -> [Char]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,A><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ _ [Occ=Dead] (s_i7QH0 [Occ=Once, OS=OneShot] :: String) ->
                 GHC.CString.unpackAppendCString# "<<timeout>>"# s_i7QH0}]
System.Timeout.$fShowTimeout1
  = \ _ [Occ=Dead] (s_i7QH0 [OS=OneShot] :: String) ->
      GHC.CString.unpackAppendCString#
        System.Timeout.$fExceptionTimeout2 s_i7QH0

-- RHS size: {terms: 6, types: 4, coercions: 0, joins: 0/0}
System.Timeout.$fShowTimeout_$cshowList :: [Timeout] -> ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ls_i7JaB [Occ=Once] :: [Timeout])
                 (s_i7JaC [Occ=Once] :: String) ->
                 GHC.Show.showList__
                   @ Timeout System.Timeout.$fShowTimeout1 ls_i7JaB s_i7JaC}]
System.Timeout.$fShowTimeout_$cshowList
  = \ (ls_i7JaB :: [Timeout]) (s_i7JaC :: String) ->
      GHC.Show.showList__
        @ Timeout System.Timeout.$fShowTimeout1 ls_i7JaB s_i7JaC

-- RHS size: {terms: 4, types: 1, coercions: 0, joins: 0/0}
System.Timeout.$fShowTimeout [InlPrag=NOUSERINLINE CONLIKE]
  :: Show Timeout
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       GHC.Show.C:Show TYPE: Timeout
                       System.Timeout.$fShowTimeout_$cshowsPrec
                       System.Timeout.$fExceptionTimeout_$cshow
                       System.Timeout.$fShowTimeout_$cshowList]
System.Timeout.$fShowTimeout
  = GHC.Show.C:Show
      @ Timeout
      System.Timeout.$fShowTimeout_$cshowsPrec
      System.Timeout.$fExceptionTimeout_$cshow
      System.Timeout.$fShowTimeout_$cshowList

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Timeout.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
System.Timeout.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Timeout.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Timeout.$trModule3
  = GHC.Types.TrNameS System.Timeout.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Timeout.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
System.Timeout.$trModule2 = "System.Timeout"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Timeout.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Timeout.$trModule1
  = GHC.Types.TrNameS System.Timeout.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
System.Timeout.$trModule :: GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
System.Timeout.$trModule
  = GHC.Types.Module
      System.Timeout.$trModule3 System.Timeout.$trModule1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Timeout.$fExceptionTimeout5 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
System.Timeout.$fExceptionTimeout5 = "Timeout"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Timeout.$fExceptionTimeout4 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Timeout.$fExceptionTimeout4
  = GHC.Types.TrNameS System.Timeout.$fExceptionTimeout5

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
System.Timeout.$tcTimeout :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
System.Timeout.$tcTimeout
  = GHC.Types.TyCon
      12946206677618037653##
      13297406698289896244##
      System.Timeout.$trModule
      System.Timeout.$fExceptionTimeout4
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 16, types: 33, coercions: 0, joins: 0/0}
System.Timeout.$fExceptionTimeout3
  :: Data.Typeable.Internal.TypeRep Timeout
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 100 60}]
System.Timeout.$fExceptionTimeout3
  = case Data.Typeable.Internal.$wmkTrCon
           @ *
           @ Timeout
           12946206677618037653##
           13297406698289896244##
           System.Timeout.$trModule
           System.Timeout.$fExceptionTimeout4
           0#
           GHC.Types.krep$*
           (GHC.Types.[] @ Data.Typeable.Internal.SomeTypeRep)
    of
    { (# ww8_idPJm, ww9_idPJn, ww10_idPJo, ww11_idPJp, ww12_idPJq #) ->
    Data.Typeable.Internal.TrTyCon
      @ * @ Timeout ww8_idPJm ww9_idPJn ww10_idPJo ww11_idPJp ww12_idPJq
    }

Rec {
-- RHS size: {terms: 6, types: 1, coercions: 5, joins: 0/0}
System.Timeout.$fExceptionTimeout [InlPrag=NOUSERINLINE CONLIKE]
  :: Exception Timeout
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       GHC.Exception.C:Exception TYPE: Timeout
                                 System.Timeout.$fExceptionTimeout3
                                 `cast` (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <Timeout>_N
                                         :: (Data.Typeable.Internal.TypeRep Timeout :: *)
                                            ~R# (Data.Typeable.Internal.Typeable
                                                   Timeout :: Constraint))
                                 System.Timeout.$fShowTimeout
                                 System.Timeout.$fExceptionTimeout_$ctoException
                                 System.Timeout.$fExceptionTimeout_$cfromException
                                 System.Timeout.$fExceptionTimeout_$cshow]
System.Timeout.$fExceptionTimeout
  = GHC.Exception.C:Exception
      @ Timeout
      (System.Timeout.$fExceptionTimeout3
       `cast` (Sym (Data.Typeable.Internal.N:Typeable[0]) <*>_N <Timeout>_N
               :: (Data.Typeable.Internal.TypeRep Timeout :: *)
                  ~R# (Data.Typeable.Internal.Typeable Timeout :: Constraint)))
      System.Timeout.$fShowTimeout
      System.Timeout.$fExceptionTimeout_$ctoException
      System.Timeout.$fExceptionTimeout_$cfromException
      System.Timeout.$fExceptionTimeout_$cshow

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
System.Timeout.$fExceptionTimeout_$cfromException [Occ=LoopBreaker]
  :: GHC.Exception.SomeException -> Maybe Timeout
[GblId, Arity=1, Unf=OtherCon []]
System.Timeout.$fExceptionTimeout_$cfromException
  = asyncExceptionFromException
      @ Timeout System.Timeout.$fExceptionTimeout

-- RHS size: {terms: 5, types: 2, coercions: 0, joins: 0/0}
System.Timeout.$fExceptionTimeout_$ctoException [Occ=LoopBreaker]
  :: Timeout -> GHC.Exception.SomeException
[GblId, Arity=1, Str=<L,U>, Unf=OtherCon []]
System.Timeout.$fExceptionTimeout_$ctoException
  = \ (x_idYfO :: Timeout) ->
      GHC.IO.Exception.$fExceptionSomeAsyncException_$ctoException
        (GHC.IO.Exception.SomeAsyncException
           @ Timeout System.Timeout.$fExceptionTimeout x_idYfO)
end Rec }

-- RHS size: {terms: 3, types: 1, coercions: 26, joins: 0/0}
System.Timeout.$fEqTimeout [InlPrag=NOUSERINLINE CONLIKE]
  :: Eq Timeout
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       GHC.Classes.C:Eq TYPE: Timeout
                        integer-simple-0.1.1.1:GHC.Integer.Type.eqInteger
                        `cast` ((Sym (Data.Unique.N:Unique[0]) ; Sym (System.Timeout.N:Timeout[0]))
                                ->_R (Sym (Data.Unique.N:Unique[0]) ; Sym (System.Timeout.N:Timeout[0]))
                                ->_R <Bool>_R
                                :: (Integer -> Integer -> Bool :: *)
                                   ~R# (Timeout -> Timeout -> Bool :: *))
                        integer-simple-0.1.1.1:GHC.Integer.Type.neqInteger
                        `cast` ((Sym (Data.Unique.N:Unique[0]) ; Sym (System.Timeout.N:Timeout[0]))
                                ->_R (Sym (Data.Unique.N:Unique[0]) ; Sym (System.Timeout.N:Timeout[0]))
                                ->_R <Bool>_R
                                :: (Integer -> Integer -> Bool :: *)
                                   ~R# (Timeout -> Timeout -> Bool :: *))]
System.Timeout.$fEqTimeout
  = GHC.Classes.C:Eq
      @ Timeout
      (integer-simple-0.1.1.1:GHC.Integer.Type.eqInteger
       `cast` ((Sym (Data.Unique.N:Unique[0]) ; Sym (System.Timeout.N:Timeout[0]))
               ->_R (Sym (Data.Unique.N:Unique[0]) ; Sym (System.Timeout.N:Timeout[0]))
               ->_R <Bool>_R
               :: (Integer -> Integer -> Bool :: *)
                  ~R# (Timeout -> Timeout -> Bool :: *)))
      (integer-simple-0.1.1.1:GHC.Integer.Type.neqInteger
       `cast` ((Sym (Data.Unique.N:Unique[0]) ; Sym (System.Timeout.N:Timeout[0]))
               ->_R (Sym (Data.Unique.N:Unique[0]) ; Sym (System.Timeout.N:Timeout[0]))
               ->_R <Bool>_R
               :: (Integer -> Integer -> Bool :: *)
                  ~R# (Timeout -> Timeout -> Bool :: *)))

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_rdYZw :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep_rdYZw
  = GHC.Types.KindRepTyConApp
      Data.Unique.$tcUnique (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep1_rdYZx :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep1_rdYZx
  = GHC.Types.KindRepTyConApp
      System.Timeout.$tcTimeout (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
System.Timeout.$tc'Timeout1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
System.Timeout.$tc'Timeout1
  = GHC.Types.KindRepFun $krep_rdYZw $krep1_rdYZx

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Timeout.$tc'Timeout3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
System.Timeout.$tc'Timeout3 = "'Timeout"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Timeout.$tc'Timeout2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Timeout.$tc'Timeout2
  = GHC.Types.TrNameS System.Timeout.$tc'Timeout3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
System.Timeout.$tc'Timeout :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
System.Timeout.$tc'Timeout
  = GHC.Types.TyCon
      8768730315338197410##
      3436027728364000481##
      System.Timeout.$trModule
      System.Timeout.$tc'Timeout2
      0#
      System.Timeout.$tc'Timeout1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl_rdYZy :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl_rdYZy = "undefined"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl1_rdYZz :: [Char]
[GblId]
lvl1_rdYZz = GHC.CString.unpackCString# lvl_rdYZy

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl2_rdYZA :: [Char]
[GblId]
lvl2_rdYZA = GHC.CString.unpackCString# System.Timeout.$trModule4

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl3_rdYZB :: [Char]
[GblId]
lvl3_rdYZB = GHC.CString.unpackCString# System.Timeout.$trModule2

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl4_rdYZC :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl4_rdYZC = "./System/Timeout.hs"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl5_rdYZD :: [Char]
[GblId]
lvl5_rdYZD = GHC.CString.unpackCString# lvl4_rdYZC

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl6_rdYZE :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl6_rdYZE = GHC.Types.I# 110#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl7_rdYZF :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl7_rdYZF = GHC.Types.I# 38#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl8_rdYZG :: Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl8_rdYZG = GHC.Types.I# 47#

-- RHS size: {terms: 8, types: 0, coercions: 0, joins: 0/0}
lvl9_rdYZH :: GHC.Stack.Types.SrcLoc
[GblId, Str=m, Unf=OtherCon []]
lvl9_rdYZH
  = GHC.Stack.Types.SrcLoc
      lvl2_rdYZA
      lvl3_rdYZB
      lvl5_rdYZD
      lvl6_rdYZE
      lvl7_rdYZF
      lvl6_rdYZE
      lvl8_rdYZG

-- RHS size: {terms: 4, types: 0, coercions: 0, joins: 0/0}
lvl10_rdYZI :: GHC.Stack.Types.CallStack
[GblId, Str=m2, Unf=OtherCon []]
lvl10_rdYZI
  = GHC.Stack.Types.PushCallStack
      lvl1_rdYZz lvl9_rdYZH GHC.Stack.Types.EmptyCallStack

-- RHS size: {terms: 2, types: 2, coercions: 4, joins: 0/0}
lvl11_rdYZJ :: ThreadId
[GblId, Str=x]
lvl11_rdYZJ
  = undefined
      @ 'GHC.Types.LiftedRep
      @ ThreadId
      (lvl10_rdYZI
       `cast` (Sym (GHC.Classes.N:IP[0]
                        <"callStack">_N <GHC.Stack.Types.CallStack>_N)
               :: (GHC.Stack.Types.CallStack :: *)
                  ~R# (?callStack::GHC.Stack.Types.CallStack :: Constraint)))

-- RHS size: {terms: 1,227,
              types: 1,933,
              coercions: 192,
              joins: 3/13}
System.Timeout.$wtimeout [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     GHC.Prim.Int#
     -> IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Maybe a #)
[GblId, Arity=3, Str=<S,U><L,1*C1(U(U,U))><L,U>, Unf=OtherCon []]
System.Timeout.$wtimeout
  = \ (@ a_sdYNm)
      (ww_sdYNs :: GHC.Prim.Int#)
      (w_sdYNo :: IO a_sdYNm)
      (w1_sdYNp :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case GHC.Prim.<# ww_sdYNs 0# of {
        __DEFAULT ->
          case ww_sdYNs of wild_X1i {
            __DEFAULT ->
              case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_ddVYX
                     GHC.Prim.realWorld#
              of
              { (# ds_ddVYW, ds1_ddVYV #) ->
              case ds1_ddVYV of {
                __DEFAULT ->
                  case GHC.Prim.myThreadId# w1_sdYNp of
                  { (# ipv_idPQK, ipv1_idPQL #) ->
                  case Data.Unique.uniqSource
                       `cast` (GHC.IORef.N:IORef[0] <Integer>_N
                               :: (GHC.IORef.IORef Integer :: *)
                                  ~R# (GHC.STRef.STRef GHC.Prim.RealWorld Integer :: *))
                  of
                  { GHC.STRef.STRef r#_icBfS ->
                  case GHC.Prim.atomicModifyMutVar#
                         @ GHC.Prim.RealWorld
                         @ Integer
                         @ (Integer, Integer)
                         @ Integer
                         r#_icBfS
                         Data.Unique.newUnique2
                         ipv_idPQK
                  of
                  { (# ipv2_icBg3, ipv3_icBg4 #) ->
                  case ipv3_icBg4 of b1_icBg6 { __DEFAULT ->
                  case GHC.Event.Thread.timerManager
                       `cast` (GHC.IORef.N:IORef[0] <Maybe
                                                       GHC.Event.TimerManager.TimerManager>_N
                               :: (GHC.IORef.IORef
                                     (Maybe GHC.Event.TimerManager.TimerManager) :: *)
                                  ~R# (GHC.STRef.STRef
                                         GHC.Prim.RealWorld
                                         (Maybe GHC.Event.TimerManager.TimerManager) :: *))
                  of
                  { GHC.STRef.STRef var#_idYhU ->
                  case GHC.Prim.readMutVar#
                         @ GHC.Prim.RealWorld
                         @ (Maybe GHC.Event.TimerManager.TimerManager)
                         var#_idYhU
                         ipv2_icBg3
                  of
                  { (# ipv4_idYhY, ipv5_idYhZ #) ->
                  case ipv5_idYhZ of {
                    Nothing ->
                      case GHC.Event.Thread.getSystemTimerManager2 ipv4_idYhY
                      of wild6_00 {
                      };
                    Just mgr_idYi5 ->
                      case GHC.Prim.newMVar# @ GHC.Prim.RealWorld @ ThreadId ipv4_idYhY
                      of
                      { (# ipv6_iaIyp, ipv7_iaIyq #) ->
                      GHC.Prim.catch#
                        @ (Maybe a_sdYNm)
                        @ GHC.Exception.SomeException
                        (\ (eta_icnD9 [OS=OneShot]
                              :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                           case GHC.Prim.getMaskingState# eta_icnD9 of
                           { (# ipv8_icnDc, ipv9_icnDd #) ->
                           let {
                             before_sdYnj
                               :: GHC.Prim.State# GHC.Prim.RealWorld
                                  -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                             [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                             before_sdYnj
                               = \ (s_X7IBU :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                   case GHC.Prim.isEmptyMVar#
                                          @ GHC.Prim.RealWorld @ ThreadId ipv7_iaIyq s_X7IBU
                                   of
                                   { (# ipv10_idSao, ipv11_idSap #) ->
                                   case ipv11_idSap of {
                                     __DEFAULT ->
                                       case GHC.Prim.fork#
                                              @ (IO ())
                                              ((\ (eta1_idYha
                                                     :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                  GHC.Prim.catch#
                                                    @ ()
                                                    @ GHC.Exception.SomeException
                                                    (GHC.Prim.unmaskAsyncExceptions#
                                                       @ ()
                                                       (\ (s1_X7IC6 [OS=OneShot]
                                                             :: GHC.Prim.State#
                                                                  GHC.Prim.RealWorld) ->
                                                          case GHC.Prim.myThreadId# s1_X7IC6 of
                                                          { (# ipv12_XdPTH, ipv13_XdPTJ #) ->
                                                          case GHC.Prim.tryPutMVar#
                                                                 @ GHC.Prim.RealWorld
                                                                 @ ThreadId
                                                                 ipv7_iaIyq
                                                                 (GHC.Conc.Sync.ThreadId
                                                                    ipv13_XdPTJ)
                                                                 ipv12_XdPTH
                                                          of
                                                          { (# ipv14_iax3e, ipv15_iax3f #) ->
                                                          case ipv15_iax3f of {
                                                            __DEFAULT ->
                                                              case GHC.Prim.killThread#
                                                                     @ GHC.Exception.SomeException
                                                                     ipv1_idPQL
                                                                     (System.Timeout.$fExceptionTimeout_$ctoException
                                                                        (b1_icBg6
                                                                         `cast` (Sym (Data.Unique.N:Unique[0]) ; Sym (System.Timeout.N:Timeout[0])
                                                                                 :: (Integer :: *)
                                                                                    ~R# (Timeout :: *))))
                                                                     ipv14_iax3e
                                                              of s2_idPRs
                                                              { __DEFAULT ->
                                                              (# s2_idPRs, GHC.Tuple.() #)
                                                              };
                                                            0# -> (# ipv14_iax3e, GHC.Tuple.() #)
                                                          }
                                                          }
                                                          }))
                                                    GHC.Conc.Sync.forkIO2
                                                    eta1_idYha)
                                               `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                                                       :: (GHC.Prim.State# GHC.Prim.RealWorld
                                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                 () #) :: *)
                                                          ~R# (IO () :: *)))
                                              ipv10_idSao
                                       of
                                       { (# ipv12_idYhe, ipv13_idYhf #) ->
                                       (# ipv12_idYhe, GHC.Tuple.() #)
                                       };
                                     0# -> (# ipv10_idSao, GHC.Tuple.() #)
                                   }
                                   } } in
                           let {
                             after_sdYn8 [Dmd=<L,C(C1(U(U,A)))>]
                               :: GHC.Event.TimerManager.TimeoutKey
                                  -> GHC.Prim.State# GHC.Prim.RealWorld
                                  -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                             [LclId, Arity=2, Str=<L,U(U)><S,U>, Unf=OtherCon []]
                             after_sdYn8
                               = \ (key_adY9d :: GHC.Event.TimerManager.TimeoutKey)
                                   (eta1_Xw [OS=OneShot] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                   case GHC.Prim.getMaskingState# eta1_Xw of
                                   { (# ipv10_idSaA, ipv11_idSaB #) ->
                                   let {
                                     io_sdYnl [Dmd=<C(S),C(U(U,U))>]
                                       :: GHC.Prim.State# GHC.Prim.RealWorld
                                          -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                     [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                                     io_sdYnl
                                       = \ (s_X7ICd :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                           case GHC.Prim.tryPutMVar#
                                                  @ GHC.Prim.RealWorld
                                                  @ ThreadId
                                                  ipv7_iaIyq
                                                  lvl11_rdYZJ
                                                  s_X7ICd
                                           of
                                           { (# ipv12_iax3e, ipv13_iax3f #) ->
                                           case ipv13_iax3f of {
                                             __DEFAULT ->
                                               GHC.Event.TimerManager.unregisterTimeout1
                                                 mgr_idYi5 key_adY9d ipv12_iax3e;
                                             0# ->
                                               case GHC.Prim.takeMVar#
                                                      @ GHC.Prim.RealWorld
                                                      @ ThreadId
                                                      ipv7_iaIyq
                                                      ipv12_iax3e
                                               of
                                               { (# ipv14_X7ICt, ipv15_X7ICv #) ->
                                               GHC.Conc.Sync.killThread1 ipv15_X7ICv ipv14_X7ICt
                                               }
                                           }
                                           } } in
                                   case ipv11_idSaB of {
                                     __DEFAULT ->
                                       GHC.Prim.maskUninterruptible# @ () io_sdYnl ipv10_idSaA;
                                     1# -> io_sdYnl ipv10_idSaA
                                   }
                                   } } in
                           case ipv9_icnDd of {
                             __DEFAULT ->
                               case mgr_idYi5 of
                               { GHC.Event.TimerManager.TimerManager ww2_idYiL ww3_idYiP ww4_idYiR
                                                                     ww5_idYiS ww6_idYiT ww7_idYiU
                                                                     ww8_idYiV ww9_idYiW
                                                                     ww10_idYiX ->
                               case GHC.Prim.fetchAddIntArray#
                                      @ GHC.Prim.RealWorld ww5_idYiS 0# 1# ipv8_icnDc
                               of
                               { (# ipv10_idYAy, ipv11_idYAz #) ->
                               let {
                                 ipv12_idYAx [Dmd=<L,U(U)>] :: Int
                                 [LclId, Unf=OtherCon []]
                                 ipv12_idYAx = GHC.Types.I# ipv11_idYAz } in
                               join {
                                 $j_sdYCr [Dmd=<L,1*C1(C1(U))>]
                                   :: GHC.Prim.State# GHC.Prim.RealWorld
                                      -> GHC.Event.TimerManager.TimeoutKey
                                      -> (# GHC.Prim.State# GHC.Prim.RealWorld, Maybe a_sdYNm #)
                                 [LclId[JoinId(2)], Arity=2, Str=<S,U><L,U(U)>, Unf=OtherCon []]
                                 $j_sdYCr (ipv13_icnDi [OS=OneShot]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld)
                                          (ipv14_icnDj [OS=OneShot]
                                             :: GHC.Event.TimerManager.TimeoutKey)
                                   = case GHC.Prim.catch#
                                            @ (Maybe a_sdYNm)
                                            @ GHC.Exception.SomeException
                                            (GHC.Prim.maskAsyncExceptions#
                                               @ (Maybe a_sdYNm)
                                               (\ (s_i7Vb0 [OS=OneShot]
                                                     :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                  case (w_sdYNo
                                                        `cast` (GHC.Types.N:IO[0] <a_sdYNm>_R
                                                                :: (IO a_sdYNm :: *)
                                                                   ~R# (GHC.Prim.State#
                                                                          GHC.Prim.RealWorld
                                                                        -> (# GHC.Prim.State#
                                                                                GHC.Prim.RealWorld,
                                                                              a_sdYNm #) :: *)))
                                                         s_i7Vb0
                                                  of
                                                  { (# ipv15_X7Ve4, ipv16_X7Ve6 #) ->
                                                  (# ipv15_X7Ve4,
                                                     GHC.Base.Just @ a_sdYNm ipv16_X7Ve6 #)
                                                  }))
                                            (\ (e1_icnDl [OS=OneShot]
                                                  :: GHC.Exception.SomeException)
                                               (s_icnDm [OS=OneShot]
                                                  :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                               case after_sdYn8 ipv14_icnDj s_icnDm of
                                               { (# ipv15_icnDp, ipv16_icnDq #) ->
                                               GHC.Prim.raiseIO#
                                                 @ GHC.Exception.SomeException
                                                 @ (Maybe a_sdYNm)
                                                 e1_icnDl
                                                 ipv15_icnDp
                                               })
                                            ipv13_icnDi
                                     of
                                     { (# ipv15_icnDu, ipv16_icnDv #) ->
                                     case after_sdYn8 ipv14_icnDj ipv15_icnDu of
                                     { (# ipv17_icnDz, ipv18_icnDA #) ->
                                     (# ipv17_icnDz, ipv16_icnDv #)
                                     }
                                     } } in
                               case GHC.Prim.<=# wild_X1i 0# of {
                                 __DEFAULT ->
                                   case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Word# #)}_idYAC
                                          ipv10_idYAy
                                   of
                                   { (# ds9_idYAG, ds10_idYAH #) ->
                                   let {
                                     p_idYAF :: GHC.Prim.Word#
                                     [LclId]
                                     p_idYAF
                                       = GHC.Prim.plusWord#
                                           (GHC.Prim.timesWord#
                                              (GHC.Prim.int2Word# wild_X1i) 1000##)
                                           ds10_idYAH } in
                                   case GHC.Prim.atomicModifyMutVar#
                                          @ GHC.Prim.RealWorld
                                          @ GHC.Event.TimerManager.TimeoutQueue
                                          @ (GHC.Event.TimerManager.TimeoutQueue, Bool)
                                          @ Bool
                                          ww3_idYiP
                                          (\ (a1_idYAJ :: GHC.Event.TimerManager.TimeoutQueue) ->
                                             case GHC.Event.PSQ.$wunsafeInsertNew
                                                    @ GHC.Event.TimerManager.TimeoutCallback
                                                    ipv11_idYAz
                                                    p_idYAF
                                                    (before_sdYnj
                                                     `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                                                             :: (GHC.Prim.State# GHC.Prim.RealWorld
                                                                 -> (# GHC.Prim.State#
                                                                         GHC.Prim.RealWorld,
                                                                       () #) :: *)
                                                                ~R# (IO () :: *)))
                                                    (GHC.Event.PSQ.delete
                                                       @ GHC.Event.TimerManager.TimeoutCallback
                                                       (ipv12_idYAx
                                                        `cast` (Sym (GHC.Event.Unique.N:Unique[0])
                                                                :: (Int :: *)
                                                                   ~R# (GHC.Event.Unique.Unique :: *)))
                                                       a1_idYAJ)
                                             of a'1_idYAK
                                             { __DEFAULT ->
                                             (a'1_idYAK,
                                              case a1_idYAJ of {
                                                GHC.Event.PSQ.Bin dt_idYAN dt1_idYAO x_idYAP
                                                                  dt2_idYAQ l_idYAR r_idYAS ->
                                                  case a'1_idYAK of {
                                                    GHC.Event.PSQ.Bin dt4_idYAW dt5_idYAX x1_idYAY
                                                                      dt6_idYAZ l1_idYB0 r1_idYB1 ->
                                                      GHC.Prim.tagToEnum#
                                                        @ Bool
                                                        (GHC.Prim.neWord# dt1_idYAO dt5_idYAX);
                                                    GHC.Event.PSQ.Tip dt4_idYB4 dt5_idYB5
                                                                      x1_idYB6 ->
                                                      GHC.Prim.tagToEnum#
                                                        @ Bool
                                                        (GHC.Prim.neWord# dt1_idYAO dt5_idYB5);
                                                    GHC.Event.PSQ.Nil -> GHC.Types.True
                                                  };
                                                GHC.Event.PSQ.Tip dt_idYBa dt1_idYBb x_idYBc ->
                                                  case a'1_idYAK of {
                                                    GHC.Event.PSQ.Bin dt2_idYBg dt3_idYBh x1_idYBi
                                                                      dt4_idYBj l_idYBk r_idYBl ->
                                                      GHC.Prim.tagToEnum#
                                                        @ Bool
                                                        (GHC.Prim.neWord# dt1_idYBb dt3_idYBh);
                                                    GHC.Event.PSQ.Tip dt2_idYBo dt3_idYBp
                                                                      x1_idYBq ->
                                                      GHC.Prim.tagToEnum#
                                                        @ Bool
                                                        (GHC.Prim.neWord# dt1_idYBb dt3_idYBp);
                                                    GHC.Event.PSQ.Nil -> GHC.Types.True
                                                  };
                                                GHC.Event.PSQ.Nil -> GHC.Types.True
                                              })
                                             })
                                          ds9_idYAG
                                   of
                                   { (# ipv13_idYBw, ipv14_idYBx #) ->
                                   case ipv14_idYBx of {
                                     False ->
                                       jump $j_sdYCr
                                         ipv13_idYBw
                                         (ipv12_idYAx
                                          `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                  :: (Int :: *)
                                                     ~R# (GHC.Event.TimerManager.TimeoutKey :: *)));
                                     True ->
                                       case {__pkg_ccall base-4.11.0.0 Int#
                           -> Word# -> State# RealWorld -> (# State# RealWorld, Int# #)}_idYBD
                                              (GHC.Prim.narrow32Int# ww8_idYiV) 1## ipv13_idYBw
                                       of
                                       { (# ds12_idYBH, ds13_idYBI #) ->
                                       case GHC.Prim.narrow32Int# ds13_idYBI of {
                                         __DEFAULT ->
                                           case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_idYBL
                                                  ds12_idYBH
                                           of
                                           { (# ds14_idYBO, ds15_idYBP #) ->
                                           case GHC.Prim.readMutVar#
                                                  @ GHC.Prim.RealWorld @ Bool ww10_idYiX ds14_idYBO
                                           of
                                           { (# ipv15_idYBT, ipv16_idYBU #) ->
                                           case ipv16_idYBU of {
                                             False ->
                                               case Foreign.C.Error.throwErrno1
                                                      @ () GHC.Event.Control.sendWakeup2 ipv15_idYBT
                                               of
                                               { (# ipv17_idYC3, ipv18_idYC4 #) ->
                                               jump $j_sdYCr
                                                 ipv17_idYC3
                                                 (ipv12_idYAx
                                                  `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                          :: (Int :: *)
                                                             ~R# (GHC.Event.TimerManager.TimeoutKey :: *)))
                                               };
                                             True ->
                                               case GHC.Prim.narrow32Int# ds15_idYBP of {
                                                 __DEFAULT ->
                                                   case Foreign.C.Error.throwErrno1
                                                          @ ()
                                                          GHC.Event.Control.sendWakeup2
                                                          ipv15_idYBT
                                                   of
                                                   { (# ipv17_idYCb, ipv18_idYCc #) ->
                                                   jump $j_sdYCr
                                                     ipv17_idYCb
                                                     (ipv12_idYAx
                                                      `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                              :: (Int :: *)
                                                                 ~R# (GHC.Event.TimerManager.TimeoutKey :: *)))
                                                   };
                                                 9# ->
                                                   jump $j_sdYCr
                                                     ipv15_idYBT
                                                     (ipv12_idYAx
                                                      `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                              :: (Int :: *)
                                                                 ~R# (GHC.Event.TimerManager.TimeoutKey :: *)))
                                               }
                                           }
                                           }
                                           };
                                         0# ->
                                           jump $j_sdYCr
                                             ds12_idYBH
                                             (ipv12_idYAx
                                              `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                      :: (Int :: *)
                                                         ~R# (GHC.Event.TimerManager.TimeoutKey :: *)))
                                       }
                                       }
                                   }
                                   }
                                   };
                                 1# ->
                                   case GHC.Prim.isEmptyMVar#
                                          @ GHC.Prim.RealWorld @ ThreadId ipv7_iaIyq ipv10_idYAy
                                   of
                                   { (# ipv13_idSao, ipv14_idSap #) ->
                                   case ipv14_idSap of {
                                     __DEFAULT ->
                                       case GHC.Prim.fork#
                                              @ (IO ())
                                              ((\ (eta1_idYha
                                                     :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                  GHC.Prim.catch#
                                                    @ ()
                                                    @ GHC.Exception.SomeException
                                                    (GHC.Prim.unmaskAsyncExceptions#
                                                       @ ()
                                                       (\ (s_X7IC6 [OS=OneShot]
                                                             :: GHC.Prim.State#
                                                                  GHC.Prim.RealWorld) ->
                                                          case GHC.Prim.myThreadId# s_X7IC6 of
                                                          { (# ipv15_XdPTH, ipv16_XdPTJ #) ->
                                                          case GHC.Prim.tryPutMVar#
                                                                 @ GHC.Prim.RealWorld
                                                                 @ ThreadId
                                                                 ipv7_iaIyq
                                                                 (GHC.Conc.Sync.ThreadId
                                                                    ipv16_XdPTJ)
                                                                 ipv15_XdPTH
                                                          of
                                                          { (# ipv17_iax3e, ipv18_iax3f #) ->
                                                          case ipv18_iax3f of {
                                                            __DEFAULT ->
                                                              case GHC.Prim.killThread#
                                                                     @ GHC.Exception.SomeException
                                                                     ipv1_idPQL
                                                                     (System.Timeout.$fExceptionTimeout_$ctoException
                                                                        (b1_icBg6
                                                                         `cast` (Sym (Data.Unique.N:Unique[0]) ; Sym (System.Timeout.N:Timeout[0])
                                                                                 :: (Integer :: *)
                                                                                    ~R# (Timeout :: *))))
                                                                     ipv17_iax3e
                                                              of s1_idPRs
                                                              { __DEFAULT ->
                                                              (# s1_idPRs, GHC.Tuple.() #)
                                                              };
                                                            0# -> (# ipv17_iax3e, GHC.Tuple.() #)
                                                          }
                                                          }
                                                          }))
                                                    GHC.Conc.Sync.forkIO2
                                                    eta1_idYha)
                                               `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                                                       :: (GHC.Prim.State# GHC.Prim.RealWorld
                                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                 () #) :: *)
                                                          ~R# (IO () :: *)))
                                              ipv13_idSao
                                       of
                                       { (# ipv15_idYhe, ipv16_idYhf #) ->
                                       jump $j_sdYCr
                                         ipv15_idYhe
                                         (ipv12_idYAx
                                          `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                  :: (Int :: *)
                                                     ~R# (GHC.Event.TimerManager.TimeoutKey :: *)))
                                       };
                                     0# ->
                                       jump $j_sdYCr
                                         ipv13_idSao
                                         (ipv12_idYAx
                                          `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                  :: (Int :: *)
                                                     ~R# (GHC.Event.TimerManager.TimeoutKey :: *)))
                                   }
                                   }
                               }
                               }
                               };
                             0# ->
                               GHC.Prim.maskAsyncExceptions#
                                 @ (Maybe a_sdYNm)
                                 (\ (s_icnDC [OS=OneShot] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                    case mgr_idYi5 of
                                    { GHC.Event.TimerManager.TimerManager ww2_idYiL ww3_idYiP
                                                                          ww4_idYiR ww5_idYiS
                                                                          ww6_idYiT ww7_idYiU
                                                                          ww8_idYiV ww9_idYiW
                                                                          ww10_idYiX ->
                                    case GHC.Prim.fetchAddIntArray#
                                           @ GHC.Prim.RealWorld ww5_idYiS 0# 1# s_icnDC
                                    of
                                    { (# ipv10_idYAy, ipv11_idYAz #) ->
                                    let {
                                      ipv12_idYAx [Dmd=<L,U(U)>] :: Int
                                      [LclId, Unf=OtherCon []]
                                      ipv12_idYAx = GHC.Types.I# ipv11_idYAz } in
                                    join {
                                      $j_sdYCX [Dmd=<L,1*C1(C1(U))>]
                                        :: GHC.Prim.State# GHC.Prim.RealWorld
                                           -> GHC.Event.TimerManager.TimeoutKey
                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                 Maybe a_sdYNm #)
                                      [LclId[JoinId(2)],
                                       Arity=2,
                                       Str=<S,U><L,U(U)>,
                                       Unf=OtherCon []]
                                      $j_sdYCX (ipv13_icnDF [OS=OneShot]
                                                  :: GHC.Prim.State# GHC.Prim.RealWorld)
                                               (ipv14_icnDG [OS=OneShot]
                                                  :: GHC.Event.TimerManager.TimeoutKey)
                                        = case GHC.Prim.catch#
                                                 @ (Maybe a_sdYNm)
                                                 @ GHC.Exception.SomeException
                                                 (GHC.Prim.unmaskAsyncExceptions#
                                                    @ (Maybe a_sdYNm)
                                                    (\ (s1_i7Vb0 [OS=OneShot]
                                                          :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                       case (w_sdYNo
                                                             `cast` (GHC.Types.N:IO[0] <a_sdYNm>_R
                                                                     :: (IO a_sdYNm :: *)
                                                                        ~R# (GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   a_sdYNm #) :: *)))
                                                              s1_i7Vb0
                                                       of
                                                       { (# ipv15_X7Ve6, ipv16_X7Ve8 #) ->
                                                       (# ipv15_X7Ve6,
                                                          GHC.Base.Just @ a_sdYNm ipv16_X7Ve8 #)
                                                       }))
                                                 (\ (e1_icnDI [OS=OneShot]
                                                       :: GHC.Exception.SomeException)
                                                    (s1_icnDJ [OS=OneShot]
                                                       :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                    case after_sdYn8 ipv14_icnDG s1_icnDJ of
                                                    { (# ipv15_icnDM, ipv16_icnDN #) ->
                                                    GHC.Prim.raiseIO#
                                                      @ GHC.Exception.SomeException
                                                      @ (Maybe a_sdYNm)
                                                      e1_icnDI
                                                      ipv15_icnDM
                                                    })
                                                 ipv13_icnDF
                                          of
                                          { (# ipv15_icnDR, ipv16_icnDS #) ->
                                          case after_sdYn8 ipv14_icnDG ipv15_icnDR of
                                          { (# ipv17_icnDW, ipv18_icnDX #) ->
                                          (# ipv17_icnDW, ipv16_icnDS #)
                                          }
                                          } } in
                                    case GHC.Prim.<=# wild_X1i 0# of {
                                      __DEFAULT ->
                                        case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Word# #)}_idYAC
                                               ipv10_idYAy
                                        of
                                        { (# ds9_idYAG, ds10_idYAH #) ->
                                        let {
                                          p_idYAF :: GHC.Prim.Word#
                                          [LclId]
                                          p_idYAF
                                            = GHC.Prim.plusWord#
                                                (GHC.Prim.timesWord#
                                                   (GHC.Prim.int2Word# wild_X1i) 1000##)
                                                ds10_idYAH } in
                                        case GHC.Prim.atomicModifyMutVar#
                                               @ GHC.Prim.RealWorld
                                               @ GHC.Event.TimerManager.TimeoutQueue
                                               @ (GHC.Event.TimerManager.TimeoutQueue, Bool)
                                               @ Bool
                                               ww3_idYiP
                                               (\ (a1_idYAJ
                                                     :: GHC.Event.TimerManager.TimeoutQueue) ->
                                                  case GHC.Event.PSQ.$wunsafeInsertNew
                                                         @ GHC.Event.TimerManager.TimeoutCallback
                                                         ipv11_idYAz
                                                         p_idYAF
                                                         (before_sdYnj
                                                          `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                                                                  :: (GHC.Prim.State#
                                                                        GHC.Prim.RealWorld
                                                                      -> (# GHC.Prim.State#
                                                                              GHC.Prim.RealWorld,
                                                                            () #) :: *)
                                                                     ~R# (IO () :: *)))
                                                         (GHC.Event.PSQ.delete
                                                            @ GHC.Event.TimerManager.TimeoutCallback
                                                            (ipv12_idYAx
                                                             `cast` (Sym (GHC.Event.Unique.N:Unique[0])
                                                                     :: (Int :: *)
                                                                        ~R# (GHC.Event.Unique.Unique :: *)))
                                                            a1_idYAJ)
                                                  of a'1_idYAK
                                                  { __DEFAULT ->
                                                  (a'1_idYAK,
                                                   case a1_idYAJ of {
                                                     GHC.Event.PSQ.Bin dt_idYAN dt1_idYAO x_idYAP
                                                                       dt2_idYAQ l_idYAR r_idYAS ->
                                                       case a'1_idYAK of {
                                                         GHC.Event.PSQ.Bin dt4_idYAW dt5_idYAX
                                                                           x1_idYAY dt6_idYAZ
                                                                           l1_idYB0 r1_idYB1 ->
                                                           GHC.Prim.tagToEnum#
                                                             @ Bool
                                                             (GHC.Prim.neWord# dt1_idYAO dt5_idYAX);
                                                         GHC.Event.PSQ.Tip dt4_idYB4 dt5_idYB5
                                                                           x1_idYB6 ->
                                                           GHC.Prim.tagToEnum#
                                                             @ Bool
                                                             (GHC.Prim.neWord# dt1_idYAO dt5_idYB5);
                                                         GHC.Event.PSQ.Nil -> GHC.Types.True
                                                       };
                                                     GHC.Event.PSQ.Tip dt_idYBa dt1_idYBb x_idYBc ->
                                                       case a'1_idYAK of {
                                                         GHC.Event.PSQ.Bin dt2_idYBg dt3_idYBh
                                                                           x1_idYBi dt4_idYBj
                                                                           l_idYBk r_idYBl ->
                                                           GHC.Prim.tagToEnum#
                                                             @ Bool
                                                             (GHC.Prim.neWord# dt1_idYBb dt3_idYBh);
                                                         GHC.Event.PSQ.Tip dt2_idYBo dt3_idYBp
                                                                           x1_idYBq ->
                                                           GHC.Prim.tagToEnum#
                                                             @ Bool
                                                             (GHC.Prim.neWord# dt1_idYBb dt3_idYBp);
                                                         GHC.Event.PSQ.Nil -> GHC.Types.True
                                                       };
                                                     GHC.Event.PSQ.Nil -> GHC.Types.True
                                                   })
                                                  })
                                               ds9_idYAG
                                        of
                                        { (# ipv13_idYBw, ipv14_idYBx #) ->
                                        case ipv14_idYBx of {
                                          False ->
                                            jump $j_sdYCX
                                              ipv13_idYBw
                                              (ipv12_idYAx
                                               `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                       :: (Int :: *)
                                                          ~R# (GHC.Event.TimerManager.TimeoutKey :: *)));
                                          True ->
                                            case {__pkg_ccall base-4.11.0.0 Int#
                           -> Word# -> State# RealWorld -> (# State# RealWorld, Int# #)}_idYBD
                                                   (GHC.Prim.narrow32Int# ww8_idYiV) 1## ipv13_idYBw
                                            of
                                            { (# ds12_idYBH, ds13_idYBI #) ->
                                            case GHC.Prim.narrow32Int# ds13_idYBI of {
                                              __DEFAULT ->
                                                case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_idYBL
                                                       ds12_idYBH
                                                of
                                                { (# ds14_idYBO, ds15_idYBP #) ->
                                                case GHC.Prim.readMutVar#
                                                       @ GHC.Prim.RealWorld
                                                       @ Bool
                                                       ww10_idYiX
                                                       ds14_idYBO
                                                of
                                                { (# ipv15_idYBT, ipv16_idYBU #) ->
                                                case ipv16_idYBU of {
                                                  False ->
                                                    case Foreign.C.Error.throwErrno1
                                                           @ ()
                                                           GHC.Event.Control.sendWakeup2
                                                           ipv15_idYBT
                                                    of
                                                    { (# ipv17_idYC3, ipv18_idYC4 #) ->
                                                    jump $j_sdYCX
                                                      ipv17_idYC3
                                                      (ipv12_idYAx
                                                       `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                               :: (Int :: *)
                                                                  ~R# (GHC.Event.TimerManager.TimeoutKey :: *)))
                                                    };
                                                  True ->
                                                    case GHC.Prim.narrow32Int# ds15_idYBP of {
                                                      __DEFAULT ->
                                                        case Foreign.C.Error.throwErrno1
                                                               @ ()
                                                               GHC.Event.Control.sendWakeup2
                                                               ipv15_idYBT
                                                        of
                                                        { (# ipv17_idYCb, ipv18_idYCc #) ->
                                                        jump $j_sdYCX
                                                          ipv17_idYCb
                                                          (ipv12_idYAx
                                                           `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                                   :: (Int :: *)
                                                                      ~R# (GHC.Event.TimerManager.TimeoutKey :: *)))
                                                        };
                                                      9# ->
                                                        jump $j_sdYCX
                                                          ipv15_idYBT
                                                          (ipv12_idYAx
                                                           `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                                   :: (Int :: *)
                                                                      ~R# (GHC.Event.TimerManager.TimeoutKey :: *)))
                                                    }
                                                }
                                                }
                                                };
                                              0# ->
                                                jump $j_sdYCX
                                                  ds12_idYBH
                                                  (ipv12_idYAx
                                                   `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                           :: (Int :: *)
                                                              ~R# (GHC.Event.TimerManager.TimeoutKey :: *)))
                                            }
                                            }
                                        }
                                        }
                                        };
                                      1# ->
                                        case GHC.Prim.isEmptyMVar#
                                               @ GHC.Prim.RealWorld
                                               @ ThreadId
                                               ipv7_iaIyq
                                               ipv10_idYAy
                                        of
                                        { (# ipv13_idSao, ipv14_idSap #) ->
                                        case ipv14_idSap of {
                                          __DEFAULT ->
                                            case GHC.Prim.fork#
                                                   @ (IO ())
                                                   ((\ (eta1_idYha
                                                          :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                       GHC.Prim.catch#
                                                         @ ()
                                                         @ GHC.Exception.SomeException
                                                         (GHC.Prim.unmaskAsyncExceptions#
                                                            @ ()
                                                            (\ (s1_X7IC6 [OS=OneShot]
                                                                  :: GHC.Prim.State#
                                                                       GHC.Prim.RealWorld) ->
                                                               case GHC.Prim.myThreadId# s1_X7IC6 of
                                                               { (# ipv15_XdPTH, ipv16_XdPTJ #) ->
                                                               case GHC.Prim.tryPutMVar#
                                                                      @ GHC.Prim.RealWorld
                                                                      @ ThreadId
                                                                      ipv7_iaIyq
                                                                      (GHC.Conc.Sync.ThreadId
                                                                         ipv16_XdPTJ)
                                                                      ipv15_XdPTH
                                                               of
                                                               { (# ipv17_iax3e, ipv18_iax3f #) ->
                                                               case ipv18_iax3f of {
                                                                 __DEFAULT ->
                                                                   case GHC.Prim.killThread#
                                                                          @ GHC.Exception.SomeException
                                                                          ipv1_idPQL
                                                                          (System.Timeout.$fExceptionTimeout_$ctoException
                                                                             (b1_icBg6
                                                                              `cast` (Sym (Data.Unique.N:Unique[0]) ; Sym (System.Timeout.N:Timeout[0])
                                                                                      :: (Integer :: *)
                                                                                         ~R# (Timeout :: *))))
                                                                          ipv17_iax3e
                                                                   of s2_idPRs
                                                                   { __DEFAULT ->
                                                                   (# s2_idPRs, GHC.Tuple.() #)
                                                                   };
                                                                 0# ->
                                                                   (# ipv17_iax3e, GHC.Tuple.() #)
                                                               }
                                                               }
                                                               }))
                                                         GHC.Conc.Sync.forkIO2
                                                         eta1_idYha)
                                                    `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                                                            :: (GHC.Prim.State# GHC.Prim.RealWorld
                                                                -> (# GHC.Prim.State#
                                                                        GHC.Prim.RealWorld,
                                                                      () #) :: *)
                                                               ~R# (IO () :: *)))
                                                   ipv13_idSao
                                            of
                                            { (# ipv15_idYhe, ipv16_idYhf #) ->
                                            jump $j_sdYCX
                                              ipv15_idYhe
                                              (ipv12_idYAx
                                               `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                       :: (Int :: *)
                                                          ~R# (GHC.Event.TimerManager.TimeoutKey :: *)))
                                            };
                                          0# ->
                                            jump $j_sdYCX
                                              ipv13_idSao
                                              (ipv12_idYAx
                                               `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                       :: (Int :: *)
                                                          ~R# (GHC.Event.TimerManager.TimeoutKey :: *)))
                                        }
                                        }
                                    }
                                    }
                                    })
                                 ipv8_icnDc;
                             1# ->
                               case mgr_idYi5 of
                               { GHC.Event.TimerManager.TimerManager ww2_idYiL ww3_idYiP ww4_idYiR
                                                                     ww5_idYiS ww6_idYiT ww7_idYiU
                                                                     ww8_idYiV ww9_idYiW
                                                                     ww10_idYiX ->
                               case GHC.Prim.fetchAddIntArray#
                                      @ GHC.Prim.RealWorld ww5_idYiS 0# 1# ipv8_icnDc
                               of
                               { (# ipv10_idYAy, ipv11_idYAz #) ->
                               let {
                                 ipv12_idYAx [Dmd=<L,U(U)>] :: Int
                                 [LclId, Unf=OtherCon []]
                                 ipv12_idYAx = GHC.Types.I# ipv11_idYAz } in
                               join {
                                 $j_sdYDr [Dmd=<L,1*C1(C1(U))>]
                                   :: GHC.Prim.State# GHC.Prim.RealWorld
                                      -> GHC.Event.TimerManager.TimeoutKey
                                      -> (# GHC.Prim.State# GHC.Prim.RealWorld, Maybe a_sdYNm #)
                                 [LclId[JoinId(2)], Arity=2, Str=<S,U><L,U(U)>, Unf=OtherCon []]
                                 $j_sdYDr (ipv13_icnE1 [OS=OneShot]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld)
                                          (ipv14_icnE2 [OS=OneShot]
                                             :: GHC.Event.TimerManager.TimeoutKey)
                                   = case GHC.Prim.catch#
                                            @ (Maybe a_sdYNm)
                                            @ GHC.Exception.SomeException
                                            (GHC.Prim.maskUninterruptible#
                                               @ (Maybe a_sdYNm)
                                               (\ (s_i7Vb0 [OS=OneShot]
                                                     :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                  case (w_sdYNo
                                                        `cast` (GHC.Types.N:IO[0] <a_sdYNm>_R
                                                                :: (IO a_sdYNm :: *)
                                                                   ~R# (GHC.Prim.State#
                                                                          GHC.Prim.RealWorld
                                                                        -> (# GHC.Prim.State#
                                                                                GHC.Prim.RealWorld,
                                                                              a_sdYNm #) :: *)))
                                                         s_i7Vb0
                                                  of
                                                  { (# ipv15_X7Ve5, ipv16_X7Ve7 #) ->
                                                  (# ipv15_X7Ve5,
                                                     GHC.Base.Just @ a_sdYNm ipv16_X7Ve7 #)
                                                  }))
                                            (\ (e1_icnE4 [OS=OneShot]
                                                  :: GHC.Exception.SomeException)
                                               (s_icnE5 [OS=OneShot]
                                                  :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                               case after_sdYn8 ipv14_icnE2 s_icnE5 of
                                               { (# ipv15_icnE8, ipv16_icnE9 #) ->
                                               GHC.Prim.raiseIO#
                                                 @ GHC.Exception.SomeException
                                                 @ (Maybe a_sdYNm)
                                                 e1_icnE4
                                                 ipv15_icnE8
                                               })
                                            ipv13_icnE1
                                     of
                                     { (# ipv15_icnEd, ipv16_icnEe #) ->
                                     case after_sdYn8 ipv14_icnE2 ipv15_icnEd of
                                     { (# ipv17_icnEi, ipv18_icnEj #) ->
                                     (# ipv17_icnEi, ipv16_icnEe #)
                                     }
                                     } } in
                               case GHC.Prim.<=# wild_X1i 0# of {
                                 __DEFAULT ->
                                   case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Word# #)}_idYAC
                                          ipv10_idYAy
                                   of
                                   { (# ds9_idYAG, ds10_idYAH #) ->
                                   let {
                                     p_idYAF :: GHC.Prim.Word#
                                     [LclId]
                                     p_idYAF
                                       = GHC.Prim.plusWord#
                                           (GHC.Prim.timesWord#
                                              (GHC.Prim.int2Word# wild_X1i) 1000##)
                                           ds10_idYAH } in
                                   case GHC.Prim.atomicModifyMutVar#
                                          @ GHC.Prim.RealWorld
                                          @ GHC.Event.TimerManager.TimeoutQueue
                                          @ (GHC.Event.TimerManager.TimeoutQueue, Bool)
                                          @ Bool
                                          ww3_idYiP
                                          (\ (a1_idYAJ :: GHC.Event.TimerManager.TimeoutQueue) ->
                                             case GHC.Event.PSQ.$wunsafeInsertNew
                                                    @ GHC.Event.TimerManager.TimeoutCallback
                                                    ipv11_idYAz
                                                    p_idYAF
                                                    (before_sdYnj
                                                     `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                                                             :: (GHC.Prim.State# GHC.Prim.RealWorld
                                                                 -> (# GHC.Prim.State#
                                                                         GHC.Prim.RealWorld,
                                                                       () #) :: *)
                                                                ~R# (IO () :: *)))
                                                    (GHC.Event.PSQ.delete
                                                       @ GHC.Event.TimerManager.TimeoutCallback
                                                       (ipv12_idYAx
                                                        `cast` (Sym (GHC.Event.Unique.N:Unique[0])
                                                                :: (Int :: *)
                                                                   ~R# (GHC.Event.Unique.Unique :: *)))
                                                       a1_idYAJ)
                                             of a'1_idYAK
                                             { __DEFAULT ->
                                             (a'1_idYAK,
                                              case a1_idYAJ of {
                                                GHC.Event.PSQ.Bin dt_idYAN dt1_idYAO x_idYAP
                                                                  dt2_idYAQ l_idYAR r_idYAS ->
                                                  case a'1_idYAK of {
                                                    GHC.Event.PSQ.Bin dt4_idYAW dt5_idYAX x1_idYAY
                                                                      dt6_idYAZ l1_idYB0 r1_idYB1 ->
                                                      GHC.Prim.tagToEnum#
                                                        @ Bool
                                                        (GHC.Prim.neWord# dt1_idYAO dt5_idYAX);
                                                    GHC.Event.PSQ.Tip dt4_idYB4 dt5_idYB5
                                                                      x1_idYB6 ->
                                                      GHC.Prim.tagToEnum#
                                                        @ Bool
                                                        (GHC.Prim.neWord# dt1_idYAO dt5_idYB5);
                                                    GHC.Event.PSQ.Nil -> GHC.Types.True
                                                  };
                                                GHC.Event.PSQ.Tip dt_idYBa dt1_idYBb x_idYBc ->
                                                  case a'1_idYAK of {
                                                    GHC.Event.PSQ.Bin dt2_idYBg dt3_idYBh x1_idYBi
                                                                      dt4_idYBj l_idYBk r_idYBl ->
                                                      GHC.Prim.tagToEnum#
                                                        @ Bool
                                                        (GHC.Prim.neWord# dt1_idYBb dt3_idYBh);
                                                    GHC.Event.PSQ.Tip dt2_idYBo dt3_idYBp
                                                                      x1_idYBq ->
                                                      GHC.Prim.tagToEnum#
                                                        @ Bool
                                                        (GHC.Prim.neWord# dt1_idYBb dt3_idYBp);
                                                    GHC.Event.PSQ.Nil -> GHC.Types.True
                                                  };
                                                GHC.Event.PSQ.Nil -> GHC.Types.True
                                              })
                                             })
                                          ds9_idYAG
                                   of
                                   { (# ipv13_idYBw, ipv14_idYBx #) ->
                                   case ipv14_idYBx of {
                                     False ->
                                       jump $j_sdYDr
                                         ipv13_idYBw
                                         (ipv12_idYAx
                                          `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                  :: (Int :: *)
                                                     ~R# (GHC.Event.TimerManager.TimeoutKey :: *)));
                                     True ->
                                       case {__pkg_ccall base-4.11.0.0 Int#
                           -> Word# -> State# RealWorld -> (# State# RealWorld, Int# #)}_idYBD
                                              (GHC.Prim.narrow32Int# ww8_idYiV) 1## ipv13_idYBw
                                       of
                                       { (# ds12_idYBH, ds13_idYBI #) ->
                                       case GHC.Prim.narrow32Int# ds13_idYBI of {
                                         __DEFAULT ->
                                           case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_idYBL
                                                  ds12_idYBH
                                           of
                                           { (# ds14_idYBO, ds15_idYBP #) ->
                                           case GHC.Prim.readMutVar#
                                                  @ GHC.Prim.RealWorld @ Bool ww10_idYiX ds14_idYBO
                                           of
                                           { (# ipv15_idYBT, ipv16_idYBU #) ->
                                           case ipv16_idYBU of {
                                             False ->
                                               case Foreign.C.Error.throwErrno1
                                                      @ () GHC.Event.Control.sendWakeup2 ipv15_idYBT
                                               of
                                               { (# ipv17_idYC3, ipv18_idYC4 #) ->
                                               jump $j_sdYDr
                                                 ipv17_idYC3
                                                 (ipv12_idYAx
                                                  `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                          :: (Int :: *)
                                                             ~R# (GHC.Event.TimerManager.TimeoutKey :: *)))
                                               };
                                             True ->
                                               case GHC.Prim.narrow32Int# ds15_idYBP of {
                                                 __DEFAULT ->
                                                   case Foreign.C.Error.throwErrno1
                                                          @ ()
                                                          GHC.Event.Control.sendWakeup2
                                                          ipv15_idYBT
                                                   of
                                                   { (# ipv17_idYCb, ipv18_idYCc #) ->
                                                   jump $j_sdYDr
                                                     ipv17_idYCb
                                                     (ipv12_idYAx
                                                      `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                              :: (Int :: *)
                                                                 ~R# (GHC.Event.TimerManager.TimeoutKey :: *)))
                                                   };
                                                 9# ->
                                                   jump $j_sdYDr
                                                     ipv15_idYBT
                                                     (ipv12_idYAx
                                                      `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                              :: (Int :: *)
                                                                 ~R# (GHC.Event.TimerManager.TimeoutKey :: *)))
                                               }
                                           }
                                           }
                                           };
                                         0# ->
                                           jump $j_sdYDr
                                             ds12_idYBH
                                             (ipv12_idYAx
                                              `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                      :: (Int :: *)
                                                         ~R# (GHC.Event.TimerManager.TimeoutKey :: *)))
                                       }
                                       }
                                   }
                                   }
                                   };
                                 1# ->
                                   case GHC.Prim.isEmptyMVar#
                                          @ GHC.Prim.RealWorld @ ThreadId ipv7_iaIyq ipv10_idYAy
                                   of
                                   { (# ipv13_idSao, ipv14_idSap #) ->
                                   case ipv14_idSap of {
                                     __DEFAULT ->
                                       case GHC.Prim.fork#
                                              @ (IO ())
                                              ((\ (eta1_idYha
                                                     :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                  GHC.Prim.catch#
                                                    @ ()
                                                    @ GHC.Exception.SomeException
                                                    (GHC.Prim.unmaskAsyncExceptions#
                                                       @ ()
                                                       (\ (s_X7IC6 [OS=OneShot]
                                                             :: GHC.Prim.State#
                                                                  GHC.Prim.RealWorld) ->
                                                          case GHC.Prim.myThreadId# s_X7IC6 of
                                                          { (# ipv15_XdPTH, ipv16_XdPTJ #) ->
                                                          case GHC.Prim.tryPutMVar#
                                                                 @ GHC.Prim.RealWorld
                                                                 @ ThreadId
                                                                 ipv7_iaIyq
                                                                 (GHC.Conc.Sync.ThreadId
                                                                    ipv16_XdPTJ)
                                                                 ipv15_XdPTH
                                                          of
                                                          { (# ipv17_iax3e, ipv18_iax3f #) ->
                                                          case ipv18_iax3f of {
                                                            __DEFAULT ->
                                                              case GHC.Prim.killThread#
                                                                     @ GHC.Exception.SomeException
                                                                     ipv1_idPQL
                                                                     (System.Timeout.$fExceptionTimeout_$ctoException
                                                                        (b1_icBg6
                                                                         `cast` (Sym (Data.Unique.N:Unique[0]) ; Sym (System.Timeout.N:Timeout[0])
                                                                                 :: (Integer :: *)
                                                                                    ~R# (Timeout :: *))))
                                                                     ipv17_iax3e
                                                              of s1_idPRs
                                                              { __DEFAULT ->
                                                              (# s1_idPRs, GHC.Tuple.() #)
                                                              };
                                                            0# -> (# ipv17_iax3e, GHC.Tuple.() #)
                                                          }
                                                          }
                                                          }))
                                                    GHC.Conc.Sync.forkIO2
                                                    eta1_idYha)
                                               `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                                                       :: (GHC.Prim.State# GHC.Prim.RealWorld
                                                           -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                                 () #) :: *)
                                                          ~R# (IO () :: *)))
                                              ipv13_idSao
                                       of
                                       { (# ipv15_idYhe, ipv16_idYhf #) ->
                                       jump $j_sdYDr
                                         ipv15_idYhe
                                         (ipv12_idYAx
                                          `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                  :: (Int :: *)
                                                     ~R# (GHC.Event.TimerManager.TimeoutKey :: *)))
                                       };
                                     0# ->
                                       jump $j_sdYDr
                                         ipv13_idSao
                                         (ipv12_idYAx
                                          `cast` (Sym (GHC.Event.Unique.N:Unique[0]) ; Sym (GHC.Event.TimerManager.N:TimeoutKey[0])
                                                  :: (Int :: *)
                                                     ~R# (GHC.Event.TimerManager.TimeoutKey :: *)))
                                   }
                                   }
                               }
                               }
                               }
                           }
                           })
                        (\ (e1_idYgU [OS=OneShot] :: GHC.Exception.SomeException)
                           (eta_Xk [OS=OneShot] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                           case System.Timeout.$fExceptionTimeout_$cfromException e1_idYgU
                           of {
                             Nothing ->
                               GHC.Prim.raiseIO#
                                 @ GHC.Exception.SomeException @ (Maybe a_sdYNm) e1_idYgU eta_Xk;
                             Just e'_idYgZ ->
                               case integer-simple-0.1.1.1:GHC.Integer.Type.eqInteger#
                                      (e'_idYgZ
                                       `cast` (System.Timeout.N:Timeout[0] ; Data.Unique.N:Unique[0]
                                               :: (Timeout :: *) ~R# (Integer :: *)))
                                      b1_icBg6
                               of {
                                 __DEFAULT ->
                                   GHC.Prim.raiseIO#
                                     @ GHC.Exception.SomeException
                                     @ (Maybe a_sdYNm)
                                     (System.Timeout.$fExceptionTimeout_$ctoException e'_idYgZ)
                                     eta_Xk;
                                 1# -> (# eta_Xk, GHC.Base.Nothing @ a_sdYNm #)
                               }
                           })
                        ipv6_iaIyp
                      }
                  }
                  }
                  }
                  }
                  }
                  }
                  };
                0# ->
                  case GHC.Prim.myThreadId# w1_sdYNp of
                  { (# ipv_idPQK, ipv1_idPQL #) ->
                  case Data.Unique.uniqSource
                       `cast` (GHC.IORef.N:IORef[0] <Integer>_N
                               :: (GHC.IORef.IORef Integer :: *)
                                  ~R# (GHC.STRef.STRef GHC.Prim.RealWorld Integer :: *))
                  of
                  { GHC.STRef.STRef r#_icBfS ->
                  case GHC.Prim.atomicModifyMutVar#
                         @ GHC.Prim.RealWorld
                         @ Integer
                         @ (Integer, Integer)
                         @ Integer
                         r#_icBfS
                         Data.Unique.newUnique2
                         ipv_idPQK
                  of
                  { (# ipv2_icBg3, ipv3_icBg4 #) ->
                  case ipv3_icBg4 of b1_icBg6 { __DEFAULT ->
                  GHC.Prim.catch#
                    @ (Maybe a_sdYNm)
                    @ GHC.Exception.SomeException
                    (\ (eta_icnD9 [OS=OneShot]
                          :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case GHC.Prim.getMaskingState# eta_icnD9 of
                       { (# ipv4_icnDc, ipv5_icnDd #) ->
                       let {
                         before_sdYmV [Dmd=<C(S(SS(S))),1*C1(U(U,U(U)))>]
                           :: GHC.Prim.State# GHC.Prim.RealWorld
                              -> (# GHC.Prim.State# GHC.Prim.RealWorld, ThreadId #)
                         [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
                         before_sdYmV
                           = \ (s_idYh9 [OS=OneShot] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                               case GHC.Prim.fork#
                                      @ (IO ())
                                      ((\ (eta1_idYha :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          GHC.Prim.catch#
                                            @ ()
                                            @ GHC.Exception.SomeException
                                            (GHC.Prim.unmaskAsyncExceptions#
                                               @ ()
                                               (\ (s1_i7JiH [OS=OneShot]
                                                     :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                                  case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_idYhj
                                                         GHC.Prim.realWorld#
                                                  of
                                                  { (# ds5_idYhm, ds6_idYhn #) ->
                                                  case ds6_idYhn of {
                                                    __DEFAULT ->
                                                      case GHC.Event.Thread.$wthreadDelay
                                                             wild_X1i s1_i7JiH
                                                      of
                                                      { (# ipv6_i7JiK, ipv7_i7JiL #) ->
                                                      case GHC.Prim.killThread#
                                                             @ GHC.Exception.SomeException
                                                             ipv1_idPQL
                                                             (System.Timeout.$fExceptionTimeout_$ctoException
                                                                (b1_icBg6
                                                                 `cast` (Sym (Data.Unique.N:Unique[0]) ; Sym (System.Timeout.N:Timeout[0])
                                                                         :: (Integer :: *)
                                                                            ~R# (Timeout :: *))))
                                                             ipv6_i7JiK
                                                      of s2_idPRs
                                                      { __DEFAULT ->
                                                      (# s2_idPRs, GHC.Tuple.() #)
                                                      }
                                                      };
                                                    0# ->
                                                      case GHC.Prim.delay#
                                                             @ GHC.Prim.RealWorld wild_X1i s1_i7JiH
                                                      of s'_idYhv
                                                      { __DEFAULT ->
                                                      case GHC.Prim.killThread#
                                                             @ GHC.Exception.SomeException
                                                             ipv1_idPQL
                                                             (System.Timeout.$fExceptionTimeout_$ctoException
                                                                (b1_icBg6
                                                                 `cast` (Sym (Data.Unique.N:Unique[0]) ; Sym (System.Timeout.N:Timeout[0])
                                                                         :: (Integer :: *)
                                                                            ~R# (Timeout :: *))))
                                                             s'_idYhv
                                                      of s2_idPRs
                                                      { __DEFAULT ->
                                                      (# s2_idPRs, GHC.Tuple.() #)
                                                      }
                                                      }
                                                  }
                                                  }))
                                            GHC.Conc.Sync.forkIO2
                                            eta1_idYha)
                                       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                                               :: (GHC.Prim.State# GHC.Prim.RealWorld
                                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         () #) :: *)
                                                  ~R# (IO () :: *)))
                                      s_idYh9
                               of
                               { (# ipv6_idYhe, ipv7_idYhf #) ->
                               (# ipv6_idYhe, GHC.Conc.Sync.ThreadId ipv7_idYhf #)
                               } } in
                       case ipv5_icnDd of {
                         __DEFAULT ->
                           case before_sdYmV ipv4_icnDc of { (# ipv6_icnDi, ipv7_icnDj #) ->
                           case GHC.Prim.catch#
                                  @ (Maybe a_sdYNm)
                                  @ GHC.Exception.SomeException
                                  (GHC.Prim.maskAsyncExceptions#
                                     @ (Maybe a_sdYNm)
                                     (\ (s_X7VcA [OS=OneShot]
                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                        case (w_sdYNo
                                              `cast` (GHC.Types.N:IO[0] <a_sdYNm>_R
                                                      :: (IO a_sdYNm :: *)
                                                         ~R# (GHC.Prim.State# GHC.Prim.RealWorld
                                                              -> (# GHC.Prim.State#
                                                                      GHC.Prim.RealWorld,
                                                                    a_sdYNm #) :: *)))
                                               s_X7VcA
                                        of
                                        { (# ipv8_X7VdB, ipv9_X7VdD #) ->
                                        (# ipv8_X7VdB, GHC.Base.Just @ a_sdYNm ipv9_X7VdD #)
                                        }))
                                  (\ (e1_icnDl [OS=OneShot] :: GHC.Exception.SomeException)
                                     (s_icnDm [OS=OneShot] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                     case GHC.Prim.getMaskingState# s_icnDm of
                                     { (# ipv8_idSaA, ipv9_idSaB #) ->
                                     case ipv9_idSaB of {
                                       __DEFAULT ->
                                         case GHC.Prim.maskUninterruptible#
                                                @ ()
                                                (GHC.Conc.Sync.killThread1 ipv7_icnDj)
                                                ipv8_idSaA
                                         of
                                         { (# ipv10_icnDp, ipv11_icnDq #) ->
                                         GHC.Prim.raiseIO#
                                           @ GHC.Exception.SomeException
                                           @ (Maybe a_sdYNm)
                                           e1_icnDl
                                           ipv10_icnDp
                                         };
                                       1# ->
                                         case ipv7_icnDj of { GHC.Conc.Sync.ThreadId tid1_idYhE ->
                                         case GHC.Prim.killThread#
                                                @ GHC.Exception.SomeException
                                                tid1_idYhE
                                                GHC.Conc.Sync.killThread2
                                                ipv8_idSaA
                                         of s1_idYhG
                                         { __DEFAULT ->
                                         GHC.Prim.raiseIO#
                                           @ GHC.Exception.SomeException
                                           @ (Maybe a_sdYNm)
                                           e1_icnDl
                                           s1_idYhG
                                         }
                                         }
                                     }
                                     })
                                  ipv6_icnDi
                           of
                           { (# ipv8_icnDu, ipv9_icnDv #) ->
                           case GHC.Prim.getMaskingState# ipv8_icnDu of
                           { (# ipv10_idSaA, ipv11_idSaB #) ->
                           case ipv11_idSaB of {
                             __DEFAULT ->
                               case GHC.Prim.maskUninterruptible#
                                      @ () (GHC.Conc.Sync.killThread1 ipv7_icnDj) ipv10_idSaA
                               of
                               { (# ipv12_icnDz, ipv13_icnDA #) ->
                               (# ipv12_icnDz, ipv9_icnDv #)
                               };
                             1# ->
                               case ipv7_icnDj of { GHC.Conc.Sync.ThreadId tid1_idYhE ->
                               case GHC.Prim.killThread#
                                      @ GHC.Exception.SomeException
                                      tid1_idYhE
                                      GHC.Conc.Sync.killThread2
                                      ipv10_idSaA
                               of s1_idYhG
                               { __DEFAULT ->
                               (# s1_idYhG, ipv9_icnDv #)
                               }
                               }
                           }
                           }
                           }
                           };
                         0# ->
                           GHC.Prim.maskAsyncExceptions#
                             @ (Maybe a_sdYNm)
                             (\ (s_icnDC [OS=OneShot] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                case before_sdYmV s_icnDC of { (# ipv6_icnDF, ipv7_icnDG #) ->
                                case GHC.Prim.catch#
                                       @ (Maybe a_sdYNm)
                                       @ GHC.Exception.SomeException
                                       (GHC.Prim.unmaskAsyncExceptions#
                                          @ (Maybe a_sdYNm)
                                          (\ (s1_X7VcC [OS=OneShot]
                                                :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                             case (w_sdYNo
                                                   `cast` (GHC.Types.N:IO[0] <a_sdYNm>_R
                                                           :: (IO a_sdYNm :: *)
                                                              ~R# (GHC.Prim.State#
                                                                     GHC.Prim.RealWorld
                                                                   -> (# GHC.Prim.State#
                                                                           GHC.Prim.RealWorld,
                                                                         a_sdYNm #) :: *)))
                                                    s1_X7VcC
                                             of
                                             { (# ipv8_X7VdD, ipv9_X7VdF #) ->
                                             (# ipv8_X7VdD, GHC.Base.Just @ a_sdYNm ipv9_X7VdF #)
                                             }))
                                       (\ (e1_icnDI [OS=OneShot] :: GHC.Exception.SomeException)
                                          (s1_icnDJ [OS=OneShot]
                                             :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                          case GHC.Prim.getMaskingState# s1_icnDJ of
                                          { (# ipv8_idSaA, ipv9_idSaB #) ->
                                          case ipv9_idSaB of {
                                            __DEFAULT ->
                                              case GHC.Prim.maskUninterruptible#
                                                     @ ()
                                                     (GHC.Conc.Sync.killThread1 ipv7_icnDG)
                                                     ipv8_idSaA
                                              of
                                              { (# ipv10_icnDM, ipv11_icnDN #) ->
                                              GHC.Prim.raiseIO#
                                                @ GHC.Exception.SomeException
                                                @ (Maybe a_sdYNm)
                                                e1_icnDI
                                                ipv10_icnDM
                                              };
                                            1# ->
                                              case ipv7_icnDG of
                                              { GHC.Conc.Sync.ThreadId tid1_idYhE ->
                                              case GHC.Prim.killThread#
                                                     @ GHC.Exception.SomeException
                                                     tid1_idYhE
                                                     GHC.Conc.Sync.killThread2
                                                     ipv8_idSaA
                                              of s2_idYhG
                                              { __DEFAULT ->
                                              GHC.Prim.raiseIO#
                                                @ GHC.Exception.SomeException
                                                @ (Maybe a_sdYNm)
                                                e1_icnDI
                                                s2_idYhG
                                              }
                                              }
                                          }
                                          })
                                       ipv6_icnDF
                                of
                                { (# ipv8_icnDR, ipv9_icnDS #) ->
                                case GHC.Prim.getMaskingState# ipv8_icnDR of
                                { (# ipv10_idSaA, ipv11_idSaB #) ->
                                case ipv11_idSaB of {
                                  __DEFAULT ->
                                    case GHC.Prim.maskUninterruptible#
                                           @ () (GHC.Conc.Sync.killThread1 ipv7_icnDG) ipv10_idSaA
                                    of
                                    { (# ipv12_icnDW, ipv13_icnDX #) ->
                                    (# ipv12_icnDW, ipv9_icnDS #)
                                    };
                                  1# ->
                                    case ipv7_icnDG of { GHC.Conc.Sync.ThreadId tid1_idYhE ->
                                    case GHC.Prim.killThread#
                                           @ GHC.Exception.SomeException
                                           tid1_idYhE
                                           GHC.Conc.Sync.killThread2
                                           ipv10_idSaA
                                    of s1_idYhG
                                    { __DEFAULT ->
                                    (# s1_idYhG, ipv9_icnDS #)
                                    }
                                    }
                                }
                                }
                                }
                                })
                             ipv4_icnDc;
                         1# ->
                           case before_sdYmV ipv4_icnDc of { (# ipv6_icnE1, ipv7_icnE2 #) ->
                           case GHC.Prim.catch#
                                  @ (Maybe a_sdYNm)
                                  @ GHC.Exception.SomeException
                                  (GHC.Prim.maskUninterruptible#
                                     @ (Maybe a_sdYNm)
                                     (\ (s_X7VcB [OS=OneShot]
                                           :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                        case (w_sdYNo
                                              `cast` (GHC.Types.N:IO[0] <a_sdYNm>_R
                                                      :: (IO a_sdYNm :: *)
                                                         ~R# (GHC.Prim.State# GHC.Prim.RealWorld
                                                              -> (# GHC.Prim.State#
                                                                      GHC.Prim.RealWorld,
                                                                    a_sdYNm #) :: *)))
                                               s_X7VcB
                                        of
                                        { (# ipv8_X7VdC, ipv9_X7VdE #) ->
                                        (# ipv8_X7VdC, GHC.Base.Just @ a_sdYNm ipv9_X7VdE #)
                                        }))
                                  (\ (e1_icnE4 [OS=OneShot] :: GHC.Exception.SomeException)
                                     (s_icnE5 [OS=OneShot] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                                     case GHC.Prim.getMaskingState# s_icnE5 of
                                     { (# ipv8_idSaA, ipv9_idSaB #) ->
                                     case ipv9_idSaB of {
                                       __DEFAULT ->
                                         case GHC.Prim.maskUninterruptible#
                                                @ ()
                                                (GHC.Conc.Sync.killThread1 ipv7_icnE2)
                                                ipv8_idSaA
                                         of
                                         { (# ipv10_icnE8, ipv11_icnE9 #) ->
                                         GHC.Prim.raiseIO#
                                           @ GHC.Exception.SomeException
                                           @ (Maybe a_sdYNm)
                                           e1_icnE4
                                           ipv10_icnE8
                                         };
                                       1# ->
                                         case ipv7_icnE2 of { GHC.Conc.Sync.ThreadId tid1_idYhE ->
                                         case GHC.Prim.killThread#
                                                @ GHC.Exception.SomeException
                                                tid1_idYhE
                                                GHC.Conc.Sync.killThread2
                                                ipv8_idSaA
                                         of s1_idYhG
                                         { __DEFAULT ->
                                         GHC.Prim.raiseIO#
                                           @ GHC.Exception.SomeException
                                           @ (Maybe a_sdYNm)
                                           e1_icnE4
                                           s1_idYhG
                                         }
                                         }
                                     }
                                     })
                                  ipv6_icnE1
                           of
                           { (# ipv8_icnEd, ipv9_icnEe #) ->
                           case GHC.Prim.getMaskingState# ipv8_icnEd of
                           { (# ipv10_idSaA, ipv11_idSaB #) ->
                           case ipv11_idSaB of {
                             __DEFAULT ->
                               case GHC.Prim.maskUninterruptible#
                                      @ () (GHC.Conc.Sync.killThread1 ipv7_icnE2) ipv10_idSaA
                               of
                               { (# ipv12_icnEi, ipv13_icnEj #) ->
                               (# ipv12_icnEi, ipv9_icnEe #)
                               };
                             1# ->
                               case ipv7_icnE2 of { GHC.Conc.Sync.ThreadId tid1_idYhE ->
                               case GHC.Prim.killThread#
                                      @ GHC.Exception.SomeException
                                      tid1_idYhE
                                      GHC.Conc.Sync.killThread2
                                      ipv10_idSaA
                               of s1_idYhG
                               { __DEFAULT ->
                               (# s1_idYhG, ipv9_icnEe #)
                               }
                               }
                           }
                           }
                           }
                           }
                       }
                       })
                    (\ (e1_idYgU [OS=OneShot] :: GHC.Exception.SomeException)
                       (eta_Xe [OS=OneShot] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                       case System.Timeout.$fExceptionTimeout_$cfromException e1_idYgU
                       of {
                         Nothing ->
                           GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException @ (Maybe a_sdYNm) e1_idYgU eta_Xe;
                         Just e'_idYgZ ->
                           case integer-simple-0.1.1.1:GHC.Integer.Type.eqInteger#
                                  (e'_idYgZ
                                   `cast` (System.Timeout.N:Timeout[0] ; Data.Unique.N:Unique[0]
                                           :: (Timeout :: *) ~R# (Integer :: *)))
                                  b1_icBg6
                           of {
                             __DEFAULT ->
                               GHC.Prim.raiseIO#
                                 @ GHC.Exception.SomeException
                                 @ (Maybe a_sdYNm)
                                 (System.Timeout.$fExceptionTimeout_$ctoException e'_idYgZ)
                                 eta_Xe;
                             1# -> (# eta_Xe, GHC.Base.Nothing @ a_sdYNm #)
                           }
                       })
                    ipv2_icBg3
                  }
                  }
                  }
                  }
              }
              };
            0# -> (# w1_sdYNp, GHC.Base.Nothing @ a_sdYNm #)
          };
        1# ->
          case (w_sdYNo
                `cast` (GHC.Types.N:IO[0] <a_sdYNm>_R
                        :: (IO a_sdYNm :: *)
                           ~R# (GHC.Prim.State# GHC.Prim.RealWorld
                                -> (# GHC.Prim.State# GHC.Prim.RealWorld, a_sdYNm #) :: *)))
                 w1_sdYNp
          of
          { (# ipv_i7Vb3, ipv1_i7Vb4 #) ->
          (# ipv_i7Vb3, GHC.Base.Just @ a_sdYNm ipv1_i7Vb4 #)
          }
      }

-- RHS size: {terms: 11, types: 10, coercions: 0, joins: 0/0}
System.Timeout.timeout1 [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     Int
     -> IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Maybe a #)
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><L,1*C1(U(U,U))><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_sdYNm)
                 (w_sdYNn [Occ=Once!] :: Int)
                 (w1_sdYNo [Occ=Once] :: IO a_sdYNm)
                 (w2_sdYNp [Occ=Once] :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case w_sdYNn of { GHC.Types.I# ww1_sdYNs [Occ=Once] ->
                 System.Timeout.$wtimeout @ a_sdYNm ww1_sdYNs w1_sdYNo w2_sdYNp
                 }}]
System.Timeout.timeout1
  = \ (@ a_sdYNm)
      (w_sdYNn :: Int)
      (w1_sdYNo :: IO a_sdYNm)
      (w2_sdYNp :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case w_sdYNn of { GHC.Types.I# ww1_sdYNs ->
      System.Timeout.$wtimeout @ a_sdYNm ww1_sdYNs w1_sdYNo w2_sdYNp
      }

-- RHS size: {terms: 1, types: 0, coercions: 12, joins: 0/0}
timeout :: forall a. Int -> IO a -> IO (Maybe a)
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><L,1*C1(U(U,U))><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= System.Timeout.timeout1
               `cast` (forall (a :: <*>_N).
                       <Int>_R ->_R <IO a>_R ->_R Sym (GHC.Types.N:IO[0] <Maybe a>_R)
                       :: (forall a.
                           Int
                           -> IO a
                           -> GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, Maybe a #) :: *)
                          ~R# (forall a. Int -> IO a -> IO (Maybe a) :: *))}]
timeout
  = System.Timeout.timeout1
    `cast` (forall (a :: <*>_N).
            <Int>_R ->_R <IO a>_R ->_R Sym (GHC.Types.N:IO[0] <Maybe a>_R)
            :: (forall a.
                Int
                -> IO a
                -> GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, Maybe a #) :: *)
               ~R# (forall a. Int -> IO a -> IO (Maybe a) :: *))


