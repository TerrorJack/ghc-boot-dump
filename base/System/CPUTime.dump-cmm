
==================== Output Cmm ====================
2018-03-16 16:07:26.480944486 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:26.481803067 UTC

[section ""data" . lvl_rcxCQ_closure" {
     lvl_rcxCQ_closure:
         const lvl_rcxCQ_info;
         const 0;
 },
 lvl_rcxCQ_entry() //  []
         { info_tbl: [(ccxD3,
                       label: lvl_rcxCQ_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxD3: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccxD4; else goto ccxD5;
       ccxD4: // global
           R1 = lvl_rcxCQ_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       ccxD5: // global
           I64[Sp - 8] = block_ccxD1_info;
           Sp = Sp - 8;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 _ccxD1() //  []
         { info_tbl: [(ccxD1,
                       label: block_ccxD1_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxD1: // global
           Sp = Sp + 8;
           call System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.483005283 UTC

[section ""data" . System.CPUTime.cpuTimePrecision_closure" {
     System.CPUTime.cpuTimePrecision_closure:
         const System.CPUTime.cpuTimePrecision_info;
         const 0;
         const 0;
         const 0;
 },
 System.CPUTime.cpuTimePrecision_entry() //  [R1]
         { info_tbl: [(ccxDg,
                       label: System.CPUTime.cpuTimePrecision_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxDg: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccxDh; else goto ccxDi;
       ccxDh: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccxDi: // global
           (_ccxDb::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccxDb::I64 == 0) goto ccxDd; else goto ccxDc;
       ccxDd: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccxDc: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccxDb::I64;
           I64[Sp - 24] = block_ccxDe_info;
           Sp = Sp - 24;
           call lvl_rcxCQ_entry() args: 8, res: 8, upd: 24;
     }
 },
 _ccxDe() //  [R1]
         { info_tbl: [(ccxDe,
                       label: block_ccxDe_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxDe: // global
           R1 = R1 & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.484100032 UTC

[section ""data" . System.CPUTime.getCPUTime_closure" {
     System.CPUTime.getCPUTime_closure:
         const System.CPUTime.getCPUTime_info;
         const 0;
 },
 System.CPUTime.getCPUTime_entry() //  []
         { info_tbl: [(ccxDo,
                       label: System.CPUTime.getCPUTime_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxDo: // global
           call System.CPUTime.Posix.ClockGetTime.getCPUTime1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.484748584 UTC

[section ""cstring" . System.CPUTime.$trModule4_bytes" {
     System.CPUTime.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.485334282 UTC

[section ""data" . System.CPUTime.$trModule3_closure" {
     System.CPUTime.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.485945531 UTC

[section ""cstring" . System.CPUTime.$trModule2_bytes" {
     System.CPUTime.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,67,80,85,84,105,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.486496454 UTC

[section ""data" . System.CPUTime.$trModule1_closure" {
     System.CPUTime.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.487051471 UTC

[section ""data" . System.CPUTime.$trModule_closure" {
     System.CPUTime.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.CPUTime.$trModule3_closure+1;
         const System.CPUTime.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.487631951 UTC

[section ""relreadonly" . ScxD7_srt" {
     ScxD7_srt:
         const System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision1_closure;
         const lvl_rcxCQ_closure;
         const System.CPUTime.Posix.ClockGetTime.getCPUTime1_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.488197675 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:26.488816867 UTC

[section ""data" . lvl_rcxCQ_closure" {
     lvl_rcxCQ_closure:
         const lvl_rcxCQ_info;
         const 0;
 },
 lvl_rcxCQ_entry() //  []
         { info_tbl: [(ccxDx,
                       label: lvl_rcxCQ_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxDx: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccxDy; else goto ccxDz;
       ccxDy: // global
           R1 = lvl_rcxCQ_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       ccxDz: // global
           I64[Sp - 8] = block_ccxDv_info;
           Sp = Sp - 8;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 _ccxDv() //  []
         { info_tbl: [(ccxDv,
                       label: block_ccxDv_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxDv: // global
           Sp = Sp + 8;
           call System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.489906443 UTC

[section ""data" . System.CPUTime.cpuTimePrecision_closure" {
     System.CPUTime.cpuTimePrecision_closure:
         const System.CPUTime.cpuTimePrecision_info;
         const 0;
         const 0;
         const 0;
 },
 System.CPUTime.cpuTimePrecision_entry() //  [R1]
         { info_tbl: [(ccxDJ,
                       label: System.CPUTime.cpuTimePrecision_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxDJ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccxDK; else goto ccxDL;
       ccxDK: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccxDL: // global
           (_ccxDE::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccxDE::I64 == 0) goto ccxDG; else goto ccxDF;
       ccxDG: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccxDF: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccxDE::I64;
           I64[Sp - 24] = block_ccxDH_info;
           Sp = Sp - 24;
           call lvl_rcxCQ_entry() args: 8, res: 8, upd: 24;
     }
 },
 _ccxDH() //  [R1]
         { info_tbl: [(ccxDH,
                       label: block_ccxDH_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxDH: // global
           R1 = R1 & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.491125863 UTC

[section ""data" . System.CPUTime.getCPUTime_closure" {
     System.CPUTime.getCPUTime_closure:
         const System.CPUTime.getCPUTime_info;
         const 0;
 },
 System.CPUTime.getCPUTime_entry() //  []
         { info_tbl: [(ccxDR,
                       label: System.CPUTime.getCPUTime_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxDR: // global
           call System.CPUTime.Posix.ClockGetTime.getCPUTime1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.491942079 UTC

[section ""cstring" . System.CPUTime.$trModule4_bytes" {
     System.CPUTime.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.492557393 UTC

[section ""data" . System.CPUTime.$trModule3_closure" {
     System.CPUTime.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.49322243 UTC

[section ""cstring" . System.CPUTime.$trModule2_bytes" {
     System.CPUTime.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,67,80,85,84,105,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.493935639 UTC

[section ""data" . System.CPUTime.$trModule1_closure" {
     System.CPUTime.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.494517323 UTC

[section ""data" . System.CPUTime.$trModule_closure" {
     System.CPUTime.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.CPUTime.$trModule3_closure+1;
         const System.CPUTime.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.495091969 UTC

[section ""relreadonly" . ScxD7_srt" {
     ScxD7_srt:
         const System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision1_closure;
         const lvl_rcxCQ_closure;
         const System.CPUTime.Posix.ClockGetTime.getCPUTime1_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.495913358 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:26.497309954 UTC

[section ""data" . lvl_rcxCQ_closure" {
     lvl_rcxCQ_closure:
         const lvl_rcxCQ_info;
         const 0;
 },
 lvl_rcxCQ_entry() //  []
         { info_tbl: [(ccxE0,
                       label: lvl_rcxCQ_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxE0: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccxE1; else goto ccxE2;
       ccxE1: // global
           R1 = lvl_rcxCQ_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       ccxE2: // global
           I64[Sp - 8] = block_ccxDY_info;
           Sp = Sp - 8;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 _ccxDY() //  []
         { info_tbl: [(ccxDY,
                       label: block_ccxDY_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxDY: // global
           Sp = Sp + 8;
           call System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.5024885 UTC

[section ""data" . System.CPUTime.cpuTimePrecision_closure" {
     System.CPUTime.cpuTimePrecision_closure:
         const System.CPUTime.cpuTimePrecision_info;
         const 0;
         const 0;
         const 0;
 },
 System.CPUTime.cpuTimePrecision_entry() //  [R1]
         { info_tbl: [(ccxEk,
                       label: System.CPUTime.cpuTimePrecision_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxEk: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccxEl; else goto ccxEm;
       ccxEl: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccxEm: // global
           (_ccxEf::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccxEf::I64 == 0) goto ccxEh; else goto ccxEg;
       ccxEh: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccxEg: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccxEf::I64;
           I64[Sp - 24] = block_ccxEi_info;
           Sp = Sp - 24;
           call lvl_rcxCQ_entry() args: 8, res: 8, upd: 24;
     }
 },
 _ccxEi() //  [R1]
         { info_tbl: [(ccxEi,
                       label: block_ccxEi_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxEi: // global
           R1 = R1 & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.508050535 UTC

[section ""data" . System.CPUTime.getCPUTime_closure" {
     System.CPUTime.getCPUTime_closure:
         const System.CPUTime.getCPUTime_info;
         const 0;
 },
 System.CPUTime.getCPUTime_entry() //  []
         { info_tbl: [(ccxEE,
                       label: System.CPUTime.getCPUTime_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxEE: // global
           call System.CPUTime.Posix.ClockGetTime.getCPUTime1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.512494091 UTC

[section ""cstring" . System.CPUTime.$trModule4_bytes" {
     System.CPUTime.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.514230916 UTC

[section ""data" . System.CPUTime.$trModule3_closure" {
     System.CPUTime.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.515950326 UTC

[section ""cstring" . System.CPUTime.$trModule2_bytes" {
     System.CPUTime.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,67,80,85,84,105,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.517639556 UTC

[section ""data" . System.CPUTime.$trModule1_closure" {
     System.CPUTime.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.519294532 UTC

[section ""data" . System.CPUTime.$trModule_closure" {
     System.CPUTime.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.CPUTime.$trModule3_closure+1;
         const System.CPUTime.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.521057341 UTC

[section ""relreadonly" . ScxD7_srt" {
     ScxD7_srt:
         const System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision1_closure;
         const lvl_rcxCQ_closure;
         const System.CPUTime.Posix.ClockGetTime.getCPUTime1_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.548013525 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:26.549394354 UTC

[section ""data" . lvl_rcxCQ_closure" {
     lvl_rcxCQ_closure:
         const lvl_rcxCQ_info;
         const 0;
 },
 lvl_rcxCQ_entry() //  []
         { info_tbl: [(ccxF2,
                       label: lvl_rcxCQ_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxF2: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccxF3; else goto ccxF4;
       ccxF3: // global
           R1 = lvl_rcxCQ_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       ccxF4: // global
           I64[Sp - 8] = block_ccxF0_info;
           Sp = Sp - 8;
           call stg_noDuplicate#() args: 8, res: 8, upd: 8;
     }
 },
 _ccxF0() //  []
         { info_tbl: [(ccxF0,
                       label: block_ccxF0_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxF0: // global
           Sp = Sp + 8;
           call System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.555632714 UTC

[section ""data" . System.CPUTime.cpuTimePrecision_closure" {
     System.CPUTime.cpuTimePrecision_closure:
         const System.CPUTime.cpuTimePrecision_info;
         const 0;
         const 0;
         const 0;
 },
 System.CPUTime.cpuTimePrecision_entry() //  [R1]
         { info_tbl: [(ccxFo,
                       label: System.CPUTime.cpuTimePrecision_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxFo: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccxFp; else goto ccxFq;
       ccxFp: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccxFq: // global
           (_ccxFj::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccxFj::I64 == 0) goto ccxFl; else goto ccxFk;
       ccxFl: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccxFk: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccxFj::I64;
           I64[Sp - 24] = block_ccxFm_info;
           Sp = Sp - 24;
           call lvl_rcxCQ_entry() args: 8, res: 8, upd: 24;
     }
 },
 _ccxFm() //  [R1]
         { info_tbl: [(ccxFm,
                       label: block_ccxFm_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxFm: // global
           R1 = R1 & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.561307997 UTC

[section ""data" . System.CPUTime.getCPUTime_closure" {
     System.CPUTime.getCPUTime_closure:
         const System.CPUTime.getCPUTime_info;
         const 0;
 },
 System.CPUTime.getCPUTime_entry() //  []
         { info_tbl: [(ccxFK,
                       label: System.CPUTime.getCPUTime_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccxFK: // global
           call System.CPUTime.Posix.ClockGetTime.getCPUTime1_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.564466899 UTC

[section ""cstring" . System.CPUTime.$trModule4_bytes" {
     System.CPUTime.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.56626909 UTC

[section ""data" . System.CPUTime.$trModule3_closure" {
     System.CPUTime.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.568054263 UTC

[section ""cstring" . System.CPUTime.$trModule2_bytes" {
     System.CPUTime.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,67,80,85,84,105,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.570014135 UTC

[section ""data" . System.CPUTime.$trModule1_closure" {
     System.CPUTime.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.571733976 UTC

[section ""data" . System.CPUTime.$trModule_closure" {
     System.CPUTime.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.CPUTime.$trModule3_closure+1;
         const System.CPUTime.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:26.573534896 UTC

[section ""relreadonly" . ScxF6_srt" {
     ScxF6_srt:
         const System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision1_closure;
         const lvl_rcxCQ_closure;
         const System.CPUTime.Posix.ClockGetTime.getCPUTime1_closure;
 }]

