
==================== Output Cmm ====================
2018-03-16 16:07:15.728746328 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:15.729418887 UTC

[section ""cstring" . System.Info.os1_bytes" {
     System.Info.os1_bytes:
         I8[] [108,105,110,117,120]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.730274953 UTC

[section ""data" . System.Info.os_closure" {
     System.Info.os_closure:
         const System.Info.os_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.os_entry() //  [R1]
         { info_tbl: [(ccmD9,
                       label: System.Info.os_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmD9: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmDa; else goto ccmDb;
       ccmDa: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmDb: // global
           (_ccmD6::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmD6::I64 == 0) goto ccmD8; else goto ccmD7;
       ccmD8: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmD7: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmD6::I64;
           R2 = System.Info.os1_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.731243704 UTC

[section ""cstring" . System.Info.arch1_bytes" {
     System.Info.arch1_bytes:
         I8[] [120,56,54,95,54,52]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.732014874 UTC

[section ""data" . System.Info.arch_closure" {
     System.Info.arch_closure:
         const System.Info.arch_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.arch_entry() //  [R1]
         { info_tbl: [(ccmDi,
                       label: System.Info.arch_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmDi: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmDj; else goto ccmDk;
       ccmDj: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmDk: // global
           (_ccmDf::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmDf::I64 == 0) goto ccmDh; else goto ccmDg;
       ccmDh: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmDg: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmDf::I64;
           R2 = System.Info.arch1_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.732928424 UTC

[section ""cstring" . System.Info.compilerName1_bytes" {
     System.Info.compilerName1_bytes:
         I8[] [103,104,99]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.733674407 UTC

[section ""data" . System.Info.compilerName_closure" {
     System.Info.compilerName_closure:
         const System.Info.compilerName_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.compilerName_entry() //  [R1]
         { info_tbl: [(ccmDr,
                       label: System.Info.compilerName_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmDr: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmDs; else goto ccmDt;
       ccmDs: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmDt: // global
           (_ccmDo::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmDo::I64 == 0) goto ccmDq; else goto ccmDp;
       ccmDq: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmDp: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmDo::I64;
           R2 = System.Info.compilerName1_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.734884078 UTC

[section ""data" . System.Info.compilerVersion4_closure" {
     System.Info.compilerVersion4_closure:
         const System.Info.compilerVersion4_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.compilerVersion4_entry() //  [R1]
         { info_tbl: [(ccmDD,
                       label: System.Info.compilerVersion4_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmDD: // global
           _rcmCO::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto ccmDE; else goto ccmDF;
       ccmDF: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto ccmDH; else goto ccmDG;
       ccmDH: // global
           HpAlloc = 56;
           goto ccmDE;
       ccmDE: // global
           R1 = _rcmCO::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmDG: // global
           (_ccmDx::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _rcmCO::P64);
           if (_ccmDx::I64 == 0) goto ccmDz; else goto ccmDy;
       ccmDz: // global
           call (I64[I64[_rcmCO::P64]])() args: 8, res: 0, upd: 8;
       ccmDy: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmDx::I64;
           (_scmCT::I64, _scmCU::I64) = call MO_S_QuotRem W64(805, 100);
           I64[Hp - 48] = GHC.Types.I#_con_info;
           I64[Hp - 40] = _scmCU::I64;
           I64[Hp - 32] = GHC.Types.I#_con_info;
           I64[Hp - 24] = _scmCT::I64;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = Hp - 47;
           R1 = Hp - 15;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.73620404 UTC

[section ""data" . System.Info.compilerVersion5_closure" {
     System.Info.compilerVersion5_closure:
         const System.Info.compilerVersion5_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.compilerVersion5_entry() //  [R1]
         { info_tbl: [(ccmDR,
                       label: System.Info.compilerVersion5_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmDR: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccmDS; else goto ccmDT;
       ccmDS: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmDT: // global
           (_ccmDL::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmDL::I64 == 0) goto ccmDN; else goto ccmDM;
       ccmDN: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmDM: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmDL::I64;
           I64[Sp - 24] = block_ccmDO_info;
           R1 = System.Info.compilerVersion4_closure;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto ucmDX; else goto ccmDP;
       ucmDX: // global
           call _ccmDO(R1) args: 0, res: 0, upd: 0;
       ccmDP: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _ccmDO() //  [R1]
         { info_tbl: [(ccmDO,
                       label: block_ccmDO_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmDO: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.737566567 UTC

[section ""data" . System.Info.compilerVersion3_closure" {
     System.Info.compilerVersion3_closure:
         const System.Info.compilerVersion3_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.compilerVersion3_entry() //  [R1]
         { info_tbl: [(ccmE8,
                       label: System.Info.compilerVersion3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmE8: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccmE9; else goto ccmEa;
       ccmE9: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmEa: // global
           (_ccmE2::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmE2::I64 == 0) goto ccmE4; else goto ccmE3;
       ccmE4: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmE3: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmE2::I64;
           I64[Sp - 24] = block_ccmE5_info;
           R1 = System.Info.compilerVersion4_closure;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto ucmEe; else goto ccmE6;
       ucmEe: // global
           call _ccmE5(R1) args: 0, res: 0, upd: 0;
       ccmE6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _ccmE5() //  [R1]
         { info_tbl: [(ccmE5,
                       label: block_ccmE5_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmE5: // global
           R1 = P64[R1 + 15] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.738691737 UTC

[section ""data" . System.Info.compilerVersion2_closure" {
     System.Info.compilerVersion2_closure:
         const :_con_info;
         const System.Info.compilerVersion3_closure;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.739316942 UTC

[section ""data" . System.Info.compilerVersion1_closure" {
     System.Info.compilerVersion1_closure:
         const :_con_info;
         const System.Info.compilerVersion5_closure;
         const System.Info.compilerVersion2_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.739895285 UTC

[section ""data" . System.Info.compilerVersion_closure" {
     System.Info.compilerVersion_closure:
         const Data.Version.Version_con_info;
         const System.Info.compilerVersion1_closure+2;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.740495705 UTC

[section ""cstring" . System.Info.$trModule4_bytes" {
     System.Info.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.741040721 UTC

[section ""data" . System.Info.$trModule3_closure" {
     System.Info.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Info.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.741662532 UTC

[section ""cstring" . System.Info.$trModule2_bytes" {
     System.Info.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,73,110,102,111]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.742224066 UTC

[section ""data" . System.Info.$trModule1_closure" {
     System.Info.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Info.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.742820354 UTC

[section ""data" . System.Info.$trModule_closure" {
     System.Info.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Info.$trModule3_closure+1;
         const System.Info.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.74341743 UTC

[section ""relreadonly" . ScmDY_srt" {
     ScmDY_srt:
         const System.Info.compilerVersion4_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.743956759 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:15.744495193 UTC

[section ""cstring" . System.Info.os1_bytes" {
     System.Info.os1_bytes:
         I8[] [108,105,110,117,120]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.745313053 UTC

[section ""data" . System.Info.os_closure" {
     System.Info.os_closure:
         const System.Info.os_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.os_entry() //  [R1]
         { info_tbl: [(ccmEl,
                       label: System.Info.os_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmEl: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmEm; else goto ccmEn;
       ccmEm: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmEn: // global
           (_ccmEi::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmEi::I64 == 0) goto ccmEk; else goto ccmEj;
       ccmEk: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmEj: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmEi::I64;
           R2 = System.Info.os1_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.746223482 UTC

[section ""cstring" . System.Info.arch1_bytes" {
     System.Info.arch1_bytes:
         I8[] [120,56,54,95,54,52]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.74695473 UTC

[section ""data" . System.Info.arch_closure" {
     System.Info.arch_closure:
         const System.Info.arch_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.arch_entry() //  [R1]
         { info_tbl: [(ccmEu,
                       label: System.Info.arch_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmEu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmEv; else goto ccmEw;
       ccmEv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmEw: // global
           (_ccmEr::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmEr::I64 == 0) goto ccmEt; else goto ccmEs;
       ccmEt: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmEs: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmEr::I64;
           R2 = System.Info.arch1_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.747843507 UTC

[section ""cstring" . System.Info.compilerName1_bytes" {
     System.Info.compilerName1_bytes:
         I8[] [103,104,99]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.748612884 UTC

[section ""data" . System.Info.compilerName_closure" {
     System.Info.compilerName_closure:
         const System.Info.compilerName_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.compilerName_entry() //  [R1]
         { info_tbl: [(ccmED,
                       label: System.Info.compilerName_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmED: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmEE; else goto ccmEF;
       ccmEE: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmEF: // global
           (_ccmEA::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmEA::I64 == 0) goto ccmEC; else goto ccmEB;
       ccmEC: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmEB: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmEA::I64;
           R2 = System.Info.compilerName1_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.749800392 UTC

[section ""data" . System.Info.compilerVersion4_closure" {
     System.Info.compilerVersion4_closure:
         const System.Info.compilerVersion4_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.compilerVersion4_entry() //  [R1]
         { info_tbl: [(ccmEP,
                       label: System.Info.compilerVersion4_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmEP: // global
           _rcmCO::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto ccmEQ; else goto ccmER;
       ccmER: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto ccmET; else goto ccmES;
       ccmET: // global
           HpAlloc = 56;
           goto ccmEQ;
       ccmEQ: // global
           R1 = _rcmCO::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmES: // global
           (_ccmEJ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _rcmCO::P64);
           if (_ccmEJ::I64 == 0) goto ccmEL; else goto ccmEK;
       ccmEL: // global
           call (I64[I64[_rcmCO::P64]])() args: 8, res: 0, upd: 8;
       ccmEK: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmEJ::I64;
           (_scmCT::I64, _scmCU::I64) = call MO_S_QuotRem W64(805, 100);
           I64[Hp - 48] = GHC.Types.I#_con_info;
           I64[Hp - 40] = _scmCU::I64;
           I64[Hp - 32] = GHC.Types.I#_con_info;
           I64[Hp - 24] = _scmCT::I64;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = Hp - 47;
           R1 = Hp - 15;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.751127759 UTC

[section ""data" . System.Info.compilerVersion5_closure" {
     System.Info.compilerVersion5_closure:
         const System.Info.compilerVersion5_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.compilerVersion5_entry() //  [R1]
         { info_tbl: [(ccmF3,
                       label: System.Info.compilerVersion5_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmF3: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccmF4; else goto ccmF5;
       ccmF4: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmF5: // global
           (_ccmEX::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmEX::I64 == 0) goto ccmEZ; else goto ccmEY;
       ccmEZ: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmEY: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmEX::I64;
           I64[Sp - 24] = block_ccmF0_info;
           R1 = System.Info.compilerVersion4_closure;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto ucmF9; else goto ccmF1;
       ucmF9: // global
           call _ccmF0(R1) args: 0, res: 0, upd: 0;
       ccmF1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _ccmF0() //  [R1]
         { info_tbl: [(ccmF0,
                       label: block_ccmF0_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmF0: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.752507319 UTC

[section ""data" . System.Info.compilerVersion3_closure" {
     System.Info.compilerVersion3_closure:
         const System.Info.compilerVersion3_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.compilerVersion3_entry() //  [R1]
         { info_tbl: [(ccmFj,
                       label: System.Info.compilerVersion3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmFj: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccmFk; else goto ccmFl;
       ccmFk: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmFl: // global
           (_ccmFd::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmFd::I64 == 0) goto ccmFf; else goto ccmFe;
       ccmFf: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmFe: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmFd::I64;
           I64[Sp - 24] = block_ccmFg_info;
           R1 = System.Info.compilerVersion4_closure;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto ucmFp; else goto ccmFh;
       ucmFp: // global
           call _ccmFg(R1) args: 0, res: 0, upd: 0;
       ccmFh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _ccmFg() //  [R1]
         { info_tbl: [(ccmFg,
                       label: block_ccmFg_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmFg: // global
           R1 = P64[R1 + 15] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.753793747 UTC

[section ""data" . System.Info.compilerVersion2_closure" {
     System.Info.compilerVersion2_closure:
         const :_con_info;
         const System.Info.compilerVersion3_closure;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.754401589 UTC

[section ""data" . System.Info.compilerVersion1_closure" {
     System.Info.compilerVersion1_closure:
         const :_con_info;
         const System.Info.compilerVersion5_closure;
         const System.Info.compilerVersion2_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.755014902 UTC

[section ""data" . System.Info.compilerVersion_closure" {
     System.Info.compilerVersion_closure:
         const Data.Version.Version_con_info;
         const System.Info.compilerVersion1_closure+2;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.755625549 UTC

[section ""cstring" . System.Info.$trModule4_bytes" {
     System.Info.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.756209027 UTC

[section ""data" . System.Info.$trModule3_closure" {
     System.Info.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Info.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.756806376 UTC

[section ""cstring" . System.Info.$trModule2_bytes" {
     System.Info.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,73,110,102,111]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.757423972 UTC

[section ""data" . System.Info.$trModule1_closure" {
     System.Info.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Info.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.75799967 UTC

[section ""data" . System.Info.$trModule_closure" {
     System.Info.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Info.$trModule3_closure+1;
         const System.Info.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.758601715 UTC

[section ""relreadonly" . ScmDY_srt" {
     ScmDY_srt:
         const System.Info.compilerVersion4_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.759367006 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:15.761418944 UTC

[section ""cstring" . System.Info.os1_bytes" {
     System.Info.os1_bytes:
         I8[] [108,105,110,117,120]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.763448823 UTC

[section ""data" . System.Info.os_closure" {
     System.Info.os_closure:
         const System.Info.os_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.os_entry() //  [R1]
         { info_tbl: [(ccmFx,
                       label: System.Info.os_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmFx: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmFy; else goto ccmFz;
       ccmFy: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmFz: // global
           (_ccmFu::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmFu::I64 == 0) goto ccmFw; else goto ccmFv;
       ccmFw: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmFv: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmFu::I64;
           R2 = System.Info.os1_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.767523145 UTC

[section ""cstring" . System.Info.arch1_bytes" {
     System.Info.arch1_bytes:
         I8[] [120,56,54,95,54,52]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.770018704 UTC

[section ""data" . System.Info.arch_closure" {
     System.Info.arch_closure:
         const System.Info.arch_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.arch_entry() //  [R1]
         { info_tbl: [(ccmFO,
                       label: System.Info.arch_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmFO: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmFP; else goto ccmFQ;
       ccmFP: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmFQ: // global
           (_ccmFL::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmFL::I64 == 0) goto ccmFN; else goto ccmFM;
       ccmFN: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmFM: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmFL::I64;
           R2 = System.Info.arch1_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.773967144 UTC

[section ""cstring" . System.Info.compilerName1_bytes" {
     System.Info.compilerName1_bytes:
         I8[] [103,104,99]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.775822362 UTC

[section ""data" . System.Info.compilerName_closure" {
     System.Info.compilerName_closure:
         const System.Info.compilerName_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.compilerName_entry() //  [R1]
         { info_tbl: [(ccmG5,
                       label: System.Info.compilerName_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmG5: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmG6; else goto ccmG7;
       ccmG6: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmG7: // global
           (_ccmG2::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmG2::I64 == 0) goto ccmG4; else goto ccmG3;
       ccmG4: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmG3: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmG2::I64;
           R2 = System.Info.compilerName1_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.780089405 UTC

[section ""data" . System.Info.compilerVersion4_closure" {
     System.Info.compilerVersion4_closure:
         const System.Info.compilerVersion4_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.compilerVersion4_entry() //  [R1]
         { info_tbl: [(ccmGo,
                       label: System.Info.compilerVersion4_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmGo: // global
           _rcmCO::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto ccmGp; else goto ccmGq;
       ccmGq: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto ccmGs; else goto ccmGr;
       ccmGs: // global
           HpAlloc = 56;
           goto ccmGp;
       ccmGp: // global
           R1 = _rcmCO::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmGr: // global
           (_ccmGi::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _rcmCO::P64);
           if (_ccmGi::I64 == 0) goto ccmGk; else goto ccmGj;
       ccmGk: // global
           call (I64[I64[_rcmCO::P64]])() args: 8, res: 0, upd: 8;
       ccmGj: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmGi::I64;
           (_scmCT::I64, _scmCU::I64) = call MO_S_QuotRem W64(805, 100);
           I64[Hp - 48] = GHC.Types.I#_con_info;
           I64[Hp - 40] = _scmCU::I64;
           I64[Hp - 32] = GHC.Types.I#_con_info;
           I64[Hp - 24] = _scmCT::I64;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = Hp - 47;
           R1 = Hp - 15;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.785338838 UTC

[section ""data" . System.Info.compilerVersion5_closure" {
     System.Info.compilerVersion5_closure:
         const System.Info.compilerVersion5_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.compilerVersion5_entry() //  [R1]
         { info_tbl: [(ccmGN,
                       label: System.Info.compilerVersion5_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmGN: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccmGO; else goto ccmGP;
       ccmGO: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmGP: // global
           (_ccmGH::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmGH::I64 == 0) goto ccmGJ; else goto ccmGI;
       ccmGJ: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmGI: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmGH::I64;
           I64[Sp - 24] = block_ccmGK_info;
           R1 = System.Info.compilerVersion4_closure;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto ucmGT; else goto ccmGL;
       ucmGT: // global
           call _ccmGK(R1) args: 0, res: 0, upd: 0;
       ccmGL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _ccmGK() //  [R1]
         { info_tbl: [(ccmGK,
                       label: block_ccmGK_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmGK: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.791308542 UTC

[section ""data" . System.Info.compilerVersion3_closure" {
     System.Info.compilerVersion3_closure:
         const System.Info.compilerVersion3_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.compilerVersion3_entry() //  [R1]
         { info_tbl: [(ccmHg,
                       label: System.Info.compilerVersion3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmHg: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccmHh; else goto ccmHi;
       ccmHh: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmHi: // global
           (_ccmHa::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmHa::I64 == 0) goto ccmHc; else goto ccmHb;
       ccmHc: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmHb: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmHa::I64;
           I64[Sp - 24] = block_ccmHd_info;
           R1 = System.Info.compilerVersion4_closure;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto ucmHm; else goto ccmHe;
       ucmHm: // global
           call _ccmHd(R1) args: 0, res: 0, upd: 0;
       ccmHe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _ccmHd() //  [R1]
         { info_tbl: [(ccmHd,
                       label: block_ccmHd_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmHd: // global
           R1 = P64[R1 + 15] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.798040538 UTC

[section ""data" . System.Info.compilerVersion2_closure" {
     System.Info.compilerVersion2_closure:
         const :_con_info;
         const System.Info.compilerVersion3_closure;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.799877925 UTC

[section ""data" . System.Info.compilerVersion1_closure" {
     System.Info.compilerVersion1_closure:
         const :_con_info;
         const System.Info.compilerVersion5_closure;
         const System.Info.compilerVersion2_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.801697161 UTC

[section ""data" . System.Info.compilerVersion_closure" {
     System.Info.compilerVersion_closure:
         const Data.Version.Version_con_info;
         const System.Info.compilerVersion1_closure+2;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.803458221 UTC

[section ""cstring" . System.Info.$trModule4_bytes" {
     System.Info.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.805153378 UTC

[section ""data" . System.Info.$trModule3_closure" {
     System.Info.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Info.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.806921611 UTC

[section ""cstring" . System.Info.$trModule2_bytes" {
     System.Info.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,73,110,102,111]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.808650017 UTC

[section ""data" . System.Info.$trModule1_closure" {
     System.Info.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Info.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.810367583 UTC

[section ""data" . System.Info.$trModule_closure" {
     System.Info.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Info.$trModule3_closure+1;
         const System.Info.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.812162062 UTC

[section ""relreadonly" . ScmDY_srt" {
     ScmDY_srt:
         const System.Info.compilerVersion4_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.866035088 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:15.867125191 UTC

[section ""cstring" . System.Info.os1_bytes" {
     System.Info.os1_bytes:
         I8[] [108,105,110,117,120]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.869217476 UTC

[section ""data" . System.Info.os_closure" {
     System.Info.os_closure:
         const System.Info.os_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.os_entry() //  [R1]
         { info_tbl: [(ccmI1,
                       label: System.Info.os_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmI1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmI2; else goto ccmI3;
       ccmI2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmI3: // global
           (_ccmHY::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmHY::I64 == 0) goto ccmI0; else goto ccmHZ;
       ccmI0: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmHZ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmHY::I64;
           R2 = System.Info.os1_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.87352139 UTC

[section ""cstring" . System.Info.arch1_bytes" {
     System.Info.arch1_bytes:
         I8[] [120,56,54,95,54,52]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.875442325 UTC

[section ""data" . System.Info.arch_closure" {
     System.Info.arch_closure:
         const System.Info.arch_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.arch_entry() //  [R1]
         { info_tbl: [(ccmIj,
                       label: System.Info.arch_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmIj: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmIk; else goto ccmIl;
       ccmIk: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmIl: // global
           (_ccmIg::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmIg::I64 == 0) goto ccmIi; else goto ccmIh;
       ccmIi: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmIh: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmIg::I64;
           R2 = System.Info.arch1_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.879479478 UTC

[section ""cstring" . System.Info.compilerName1_bytes" {
     System.Info.compilerName1_bytes:
         I8[] [103,104,99]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.881472611 UTC

[section ""data" . System.Info.compilerName_closure" {
     System.Info.compilerName_closure:
         const System.Info.compilerName_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.compilerName_entry() //  [R1]
         { info_tbl: [(ccmIB,
                       label: System.Info.compilerName_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmIB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccmIC; else goto ccmID;
       ccmIC: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmID: // global
           (_ccmIy::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmIy::I64 == 0) goto ccmIA; else goto ccmIz;
       ccmIA: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmIz: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmIy::I64;
           R2 = System.Info.compilerName1_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.885853027 UTC

[section ""data" . System.Info.compilerVersion4_closure" {
     System.Info.compilerVersion4_closure:
         const System.Info.compilerVersion4_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.compilerVersion4_entry() //  [R1]
         { info_tbl: [(ccmIV,
                       label: System.Info.compilerVersion4_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmIV: // global
           _rcmCO::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto ccmIW; else goto ccmIX;
       ccmIX: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto ccmIZ; else goto ccmIY;
       ccmIZ: // global
           HpAlloc = 56;
           goto ccmIW;
       ccmIW: // global
           R1 = _rcmCO::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmIY: // global
           (_ccmIP::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _rcmCO::P64);
           if (_ccmIP::I64 == 0) goto ccmIR; else goto ccmIQ;
       ccmIR: // global
           call (I64[I64[_rcmCO::P64]])() args: 8, res: 0, upd: 8;
       ccmIQ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmIP::I64;
           (_scmHK::I64, _scmHL::I64) = call MO_S_QuotRem W64(805, 100);
           I64[Hp - 48] = GHC.Types.I#_con_info;
           I64[Hp - 40] = _scmHL::I64;
           I64[Hp - 32] = GHC.Types.I#_con_info;
           I64[Hp - 24] = _scmHK::I64;
           I64[Hp - 16] = (,)_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = Hp - 47;
           R1 = Hp - 15;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.891019289 UTC

[section ""data" . System.Info.compilerVersion5_closure" {
     System.Info.compilerVersion5_closure:
         const System.Info.compilerVersion5_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.compilerVersion5_entry() //  [R1]
         { info_tbl: [(ccmJo,
                       label: System.Info.compilerVersion5_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmJo: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccmJp; else goto ccmJq;
       ccmJp: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmJq: // global
           (_ccmJi::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmJi::I64 == 0) goto ccmJk; else goto ccmJj;
       ccmJk: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmJj: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmJi::I64;
           I64[Sp - 24] = block_ccmJl_info;
           R1 = System.Info.compilerVersion4_closure;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto ucmJu; else goto ccmJm;
       ucmJu: // global
           call _ccmJl(R1) args: 0, res: 0, upd: 0;
       ccmJm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _ccmJl() //  [R1]
         { info_tbl: [(ccmJl,
                       label: block_ccmJl_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmJl: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.898235415 UTC

[section ""data" . System.Info.compilerVersion3_closure" {
     System.Info.compilerVersion3_closure:
         const System.Info.compilerVersion3_info;
         const 0;
         const 0;
         const 0;
 },
 System.Info.compilerVersion3_entry() //  [R1]
         { info_tbl: [(ccmJU,
                       label: System.Info.compilerVersion3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmJU: // global
           if ((Sp + -24) < SpLim) (likely: False) goto ccmJV; else goto ccmJW;
       ccmJV: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccmJW: // global
           (_ccmJO::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccmJO::I64 == 0) goto ccmJQ; else goto ccmJP;
       ccmJQ: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccmJP: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccmJO::I64;
           I64[Sp - 24] = block_ccmJR_info;
           R1 = System.Info.compilerVersion4_closure;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto ucmK0; else goto ccmJS;
       ucmK0: // global
           call _ccmJR(R1) args: 0, res: 0, upd: 0;
       ccmJS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _ccmJR() //  [R1]
         { info_tbl: [(ccmJR,
                       label: block_ccmJR_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccmJR: // global
           R1 = P64[R1 + 15] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.904003386 UTC

[section ""data" . System.Info.compilerVersion2_closure" {
     System.Info.compilerVersion2_closure:
         const :_con_info;
         const System.Info.compilerVersion3_closure;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.905781712 UTC

[section ""data" . System.Info.compilerVersion1_closure" {
     System.Info.compilerVersion1_closure:
         const :_con_info;
         const System.Info.compilerVersion5_closure;
         const System.Info.compilerVersion2_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.907511843 UTC

[section ""data" . System.Info.compilerVersion_closure" {
     System.Info.compilerVersion_closure:
         const Data.Version.Version_con_info;
         const System.Info.compilerVersion1_closure+2;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.909497979 UTC

[section ""cstring" . System.Info.$trModule4_bytes" {
     System.Info.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.911562341 UTC

[section ""data" . System.Info.$trModule3_closure" {
     System.Info.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Info.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.913494964 UTC

[section ""cstring" . System.Info.$trModule2_bytes" {
     System.Info.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,73,110,102,111]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.915362425 UTC

[section ""data" . System.Info.$trModule1_closure" {
     System.Info.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Info.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.917290893 UTC

[section ""data" . System.Info.$trModule_closure" {
     System.Info.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Info.$trModule3_closure+1;
         const System.Info.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:15.919196421 UTC

[section ""relreadonly" . ScmJv_srt" {
     ScmJv_srt:
         const System.Info.compilerVersion4_closure;
 }]

