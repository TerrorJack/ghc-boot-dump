
==================== Output Cmm ====================
2018-03-16 16:04:30.533472404 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:04:30.534303186 UTC

[section ""cstring" . System.Posix.Internals.ioe_unknownfiletype4_bytes" {
     System.Posix.Internals.ioe_unknownfiletype4_bytes:
         I8[] [102,100,84,121,112,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.535342081 UTC

[section ""data" . System.Posix.Internals.ioe_unknownfiletype3_closure" {
     System.Posix.Internals.ioe_unknownfiletype3_closure:
         const System.Posix.Internals.ioe_unknownfiletype3_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.ioe_unknownfiletype3_entry() //  [R1]
         { info_tbl: [(c9pGQ,
                       label: System.Posix.Internals.ioe_unknownfiletype3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pGQ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9pGR; else goto c9pGS;
       c9pGR: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9pGS: // global
           (_c9pGN::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9pGN::I64 == 0) goto c9pGP; else goto c9pGO;
       c9pGP: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9pGO: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9pGN::I64;
           R2 = System.Posix.Internals.ioe_unknownfiletype4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.536538806 UTC

[section ""cstring" . System.Posix.Internals.ioe_unknownfiletype2_bytes" {
     System.Posix.Internals.ioe_unknownfiletype2_bytes:
         I8[] [117,110,107,110,111,119,110,32,102,105,108,101,32,116,121,112,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.537430333 UTC

[section ""data" . System.Posix.Internals.ioe_unknownfiletype1_closure" {
     System.Posix.Internals.ioe_unknownfiletype1_closure:
         const System.Posix.Internals.ioe_unknownfiletype1_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.ioe_unknownfiletype1_entry() //  [R1]
         { info_tbl: [(c9pGZ,
                       label: System.Posix.Internals.ioe_unknownfiletype1_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pGZ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9pH0; else goto c9pH1;
       c9pH0: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9pH1: // global
           (_c9pGW::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9pGW::I64 == 0) goto c9pGY; else goto c9pGX;
       c9pGY: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9pGX: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9pGW::I64;
           R2 = System.Posix.Internals.ioe_unknownfiletype2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.538541312 UTC

[section ""data" . System.Posix.Internals.ioe_unknownfiletype_closure" {
     System.Posix.Internals.ioe_unknownfiletype_closure:
         const GHC.IO.Exception.IOError_con_info;
         const GHC.Base.Nothing_closure+1;
         const GHC.IO.Exception.UnsupportedOperation_closure+1;
         const System.Posix.Internals.ioe_unknownfiletype3_closure;
         const System.Posix.Internals.ioe_unknownfiletype1_closure;
         const GHC.Base.Nothing_closure+1;
         const GHC.Base.Nothing_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.539296916 UTC

[section ""cstring" . System.Posix.Internals.$trModule4_bytes" {
     System.Posix.Internals.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.539967063 UTC

[section ""data" . System.Posix.Internals.$trModule3_closure" {
     System.Posix.Internals.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.540710248 UTC

[section ""cstring" . System.Posix.Internals.$trModule2_bytes" {
     System.Posix.Internals.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,80,111,115,105,120,46,73,110,116,101,114,110,97,108,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.541422109 UTC

[section ""data" . System.Posix.Internals.$trModule1_closure" {
     System.Posix.Internals.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.542117937 UTC

[section ""data" . System.Posix.Internals.$trModule_closure" {
     System.Posix.Internals.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Posix.Internals.$trModule3_closure+1;
         const System.Posix.Internals.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.542889807 UTC

[section ""cstring" . System.Posix.Internals.$tcCFLock2_bytes" {
     System.Posix.Internals.$tcCFLock2_bytes:
         I8[] [67,70,76,111,99,107]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.543553506 UTC

[section ""data" . System.Posix.Internals.$tcCFLock1_closure" {
     System.Posix.Internals.$tcCFLock1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCFLock2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.54426498 UTC

[section ""data" . System.Posix.Internals.$tcCFLock_closure" {
     System.Posix.Internals.$tcCFLock_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCFLock1_closure+1;
         const GHC.Types.krep$*_closure;
         const 3834113763436071548;
         const 14488320300686398525;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.545024734 UTC

[section ""cstring" . System.Posix.Internals.$tcCGroup2_bytes" {
     System.Posix.Internals.$tcCGroup2_bytes:
         I8[] [67,71,114,111,117,112]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.545673628 UTC

[section ""data" . System.Posix.Internals.$tcCGroup1_closure" {
     System.Posix.Internals.$tcCGroup1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCGroup2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.546273935 UTC

[section ""data" . System.Posix.Internals.$tcCGroup_closure" {
     System.Posix.Internals.$tcCGroup_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCGroup1_closure+1;
         const GHC.Types.krep$*_closure;
         const 11152603070241255843;
         const 9377315854270582287;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.546988418 UTC

[section ""cstring" . System.Posix.Internals.$tcCLconv2_bytes" {
     System.Posix.Internals.$tcCLconv2_bytes:
         I8[] [67,76,99,111,110,118]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.547710765 UTC

[section ""data" . System.Posix.Internals.$tcCLconv1_closure" {
     System.Posix.Internals.$tcCLconv1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCLconv2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.548631943 UTC

[section ""data" . System.Posix.Internals.$tcCLconv_closure" {
     System.Posix.Internals.$tcCLconv_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCLconv1_closure+1;
         const GHC.Types.krep$*_closure;
         const 3987786751457835656;
         const 9275563211259231122;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.549709239 UTC

[section ""cstring" . System.Posix.Internals.$tcCPasswd2_bytes" {
     System.Posix.Internals.$tcCPasswd2_bytes:
         I8[] [67,80,97,115,115,119,100]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.55059307 UTC

[section ""data" . System.Posix.Internals.$tcCPasswd1_closure" {
     System.Posix.Internals.$tcCPasswd1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCPasswd2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.551517151 UTC

[section ""data" . System.Posix.Internals.$tcCPasswd_closure" {
     System.Posix.Internals.$tcCPasswd_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCPasswd1_closure+1;
         const GHC.Types.krep$*_closure;
         const 5062644740775551982;
         const 16304478656107476218;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.552430349 UTC

[section ""cstring" . System.Posix.Internals.$tcCSigaction2_bytes" {
     System.Posix.Internals.$tcCSigaction2_bytes:
         I8[] [67,83,105,103,97,99,116,105,111,110]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.55336759 UTC

[section ""data" . System.Posix.Internals.$tcCSigaction1_closure" {
     System.Posix.Internals.$tcCSigaction1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCSigaction2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.55428651 UTC

[section ""data" . System.Posix.Internals.$tcCSigaction_closure" {
     System.Posix.Internals.$tcCSigaction_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCSigaction1_closure+1;
         const GHC.Types.krep$*_closure;
         const 17845420242338901681;
         const 15424947738972948028;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.555208017 UTC

[section ""cstring" . System.Posix.Internals.$tcCSigset2_bytes" {
     System.Posix.Internals.$tcCSigset2_bytes:
         I8[] [67,83,105,103,115,101,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.555858938 UTC

[section ""data" . System.Posix.Internals.$tcCSigset1_closure" {
     System.Posix.Internals.$tcCSigset1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCSigset2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.556563666 UTC

[section ""data" . System.Posix.Internals.$tcCSigset_closure" {
     System.Posix.Internals.$tcCSigset_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCSigset1_closure+1;
         const GHC.Types.krep$*_closure;
         const 14081798148172232868;
         const 6852541821114425705;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.557305006 UTC

[section ""cstring" . System.Posix.Internals.$tcCStat2_bytes" {
     System.Posix.Internals.$tcCStat2_bytes:
         I8[] [67,83,116,97,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.558012032 UTC

[section ""data" . System.Posix.Internals.$tcCStat1_closure" {
     System.Posix.Internals.$tcCStat1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCStat2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.558705601 UTC

[section ""data" . System.Posix.Internals.$tcCStat_closure" {
     System.Posix.Internals.$tcCStat_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCStat1_closure+1;
         const GHC.Types.krep$*_closure;
         const 2636779476884011316;
         const 12868714044560040280;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.559404749 UTC

[section ""cstring" . System.Posix.Internals.$tcCTermios2_bytes" {
     System.Posix.Internals.$tcCTermios2_bytes:
         I8[] [67,84,101,114,109,105,111,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.560100129 UTC

[section ""data" . System.Posix.Internals.$tcCTermios1_closure" {
     System.Posix.Internals.$tcCTermios1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCTermios2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.560821327 UTC

[section ""data" . System.Posix.Internals.$tcCTermios_closure" {
     System.Posix.Internals.$tcCTermios_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCTermios1_closure+1;
         const GHC.Types.krep$*_closure;
         const 11465338758467385152;
         const 17071974511267829282;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.561575775 UTC

[section ""cstring" . System.Posix.Internals.$tcCTm2_bytes" {
     System.Posix.Internals.$tcCTm2_bytes:
         I8[] [67,84,109]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.562248101 UTC

[section ""data" . System.Posix.Internals.$tcCTm1_closure" {
     System.Posix.Internals.$tcCTm1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCTm2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.562974303 UTC

[section ""data" . System.Posix.Internals.$tcCTm_closure" {
     System.Posix.Internals.$tcCTm_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCTm1_closure+1;
         const GHC.Types.krep$*_closure;
         const 14493525435896339207;
         const 9617693238091267571;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.563687587 UTC

[section ""cstring" . System.Posix.Internals.$tcCTms2_bytes" {
     System.Posix.Internals.$tcCTms2_bytes:
         I8[] [67,84,109,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.5643495 UTC

[section ""data" . System.Posix.Internals.$tcCTms1_closure" {
     System.Posix.Internals.$tcCTms1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCTms2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.564979458 UTC

[section ""data" . System.Posix.Internals.$tcCTms_closure" {
     System.Posix.Internals.$tcCTms_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCTms1_closure+1;
         const GHC.Types.krep$*_closure;
         const 1698703802659843616;
         const 8887550035694172540;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.566224853 UTC

[section ""cstring" . System.Posix.Internals.$tcCUtimbuf2_bytes" {
     System.Posix.Internals.$tcCUtimbuf2_bytes:
         I8[] [67,85,116,105,109,98,117,102]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.604554347 UTC

[section ""data" . System.Posix.Internals.$tcCUtimbuf1_closure" {
     System.Posix.Internals.$tcCUtimbuf1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCUtimbuf2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.60581233 UTC

[section ""data" . System.Posix.Internals.$tcCUtimbuf_closure" {
     System.Posix.Internals.$tcCUtimbuf_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCUtimbuf1_closure+1;
         const GHC.Types.krep$*_closure;
         const 8896027261912555023;
         const 11165583664207333654;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.606716672 UTC

[section ""cstring" . System.Posix.Internals.$tcCUtsname2_bytes" {
     System.Posix.Internals.$tcCUtsname2_bytes:
         I8[] [67,85,116,115,110,97,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.607540929 UTC

[section ""data" . System.Posix.Internals.$tcCUtsname1_closure" {
     System.Posix.Internals.$tcCUtsname1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCUtsname2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.608483393 UTC

[section ""data" . System.Posix.Internals.$tcCUtsname_closure" {
     System.Posix.Internals.$tcCUtsname_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCUtsname1_closure+1;
         const GHC.Types.krep$*_closure;
         const 628277874126106259;
         const 14985531938252154773;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.610018252 UTC

[section ""data" . get_saved_termios1_r9pej_closure" {
     get_saved_termios1_r9pej_closure:
         const get_saved_termios1_r9pej_info;
 },
 get_saved_termios1_r9pej_entry() //  [R2]
         { info_tbl: [(c9pH9,
                       label: get_saved_termios1_r9pej_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pH9: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9pHf; else goto c9pHg;
       c9pHf: // global
           R2 = R2;
           R1 = get_saved_termios1_r9pej_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9pHg: // global
           I64[Sp - 8] = block_c9pH6_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9pHk; else goto c9pH7;
       u9pHk: // global
           call _c9pH6(R1) args: 0, res: 0, upd: 0;
       c9pH7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pH6() //  [R1]
         { info_tbl: [(c9pH6,
                       label: block_c9pH6_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pH6: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pHj; else goto c9pHi;
       c9pHj: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pHi: // global
           (_s9pfS::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [PtrHint] __hscore_get_saved_termios(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s9pfS::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.611847935 UTC

[section ""data" . System.Posix.Internals.get_saved_termios_closure" {
     System.Posix.Internals.get_saved_termios_closure:
         const System.Posix.Internals.get_saved_termios_info;
 },
 System.Posix.Internals.get_saved_termios_entry() //  [R2]
         { info_tbl: [(c9pHp,
                       label: System.Posix.Internals.get_saved_termios_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pHp: // global
           R2 = R2;
           call get_saved_termios1_r9pej_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.613231698 UTC

[section ""data" . set_saved_termios1_r9pek_closure" {
     set_saved_termios1_r9pek_closure:
         const set_saved_termios1_r9pek_info;
 },
 set_saved_termios1_r9pek_entry() //  [R2, R3]
         { info_tbl: [(c9pHz,
                       label: set_saved_termios1_r9pek_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pHz: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9pHD; else goto c9pHE;
       c9pHD: // global
           R3 = R3;
           R2 = R2;
           R1 = set_saved_termios1_r9pek_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pHE: // global
           I64[Sp - 16] = block_c9pHw_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9pHP; else goto c9pHx;
       u9pHP: // global
           call _c9pHw(R1) args: 0, res: 0, upd: 0;
       c9pHx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pHw() //  [R1]
         { info_tbl: [(c9pHw,
                       label: block_c9pHw_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pHw: // global
           I64[Sp] = block_c9pHC_info;
           _s9pfY::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pfY::I64;
           if (R1 & 7 != 0) goto u9pHO; else goto c9pHG;
       u9pHO: // global
           call _c9pHC(R1) args: 0, res: 0, upd: 0;
       c9pHG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pHC() //  [R1]
         { info_tbl: [(c9pHC,
                       label: block_c9pHC_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pHC: // global
           call "ccall" arg hints:  [‘signed’,
                                     PtrHint]  result hints:  [] __hscore_set_saved_termios(I64[Sp + 8], I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.614896955 UTC

[section ""data" . System.Posix.Internals.set_saved_termios_closure" {
     System.Posix.Internals.set_saved_termios_closure:
         const System.Posix.Internals.set_saved_termios_info;
 },
 System.Posix.Internals.set_saved_termios_entry() //  [R2, R3]
         { info_tbl: [(c9pHU,
                       label: System.Posix.Internals.set_saved_termios_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pHU: // global
           R3 = R3;
           R2 = R2;
           call set_saved_termios1_r9pek_entry(R3,
                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.61609887 UTC

[section ""data" . c_open1_r9pel_closure" {
     c_open1_r9pel_closure:
         const c_open1_r9pel_info;
 },
 c_open1_r9pel_entry() //  [R2, R3, R4]
         { info_tbl: [(c9pI4,
                       label: c_open1_r9pel_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pI4: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9pIp; else goto c9pIq;
       c9pIp: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_open1_r9pel_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pIq: // global
           I64[Sp - 24] = block_c9pI1_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9pIx; else goto c9pI2;
       u9pIx: // global
           call _c9pI1(R1) args: 0, res: 0, upd: 0;
       c9pI2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pI1() //  [R1]
         { info_tbl: [(c9pI1,
                       label: block_c9pI1_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pI1: // global
           I64[Sp] = block_c9pI7_info;
           _s9pg9::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pg9::I64;
           if (R1 & 7 != 0) goto u9pIw; else goto c9pI8;
       u9pIw: // global
           call _c9pI7(R1) args: 0, res: 0, upd: 0;
       c9pI8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pI7() //  [R1]
         { info_tbl: [(c9pI7,
                       label: block_c9pI7_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pI7: // global
           I64[Sp] = block_c9pIc_info;
           _s9pgb::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pgb::I64;
           if (R1 & 7 != 0) goto u9pIy; else goto c9pId;
       u9pIy: // global
           call _c9pIc(R1) args: 0, res: 0, upd: 0;
       c9pId: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pIc() //  [R1]
         { info_tbl: [(c9pIc,
                       label: block_c9pIc_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pIc: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pIv; else goto c9pIu;
       c9pIv: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pIu: // global
           (_s9pgh::I64) = call "ccall" arg hints:  [PtrHint,
                                                     ‘signed’,]  result hints:  [‘signed’] __hscore_open(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pgh::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.617855033 UTC

[section ""data" . System.Posix.Internals.c_open_closure" {
     System.Posix.Internals.c_open_closure:
         const System.Posix.Internals.c_open_info;
 },
 System.Posix.Internals.c_open_entry() //  [R2, R3, R4]
         { info_tbl: [(c9pID,
                       label: System.Posix.Internals.c_open_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pID: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_open1_r9pel_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.619202518 UTC

[section ""data" . c_safe_open1_r9pem_closure" {
     c_safe_open1_r9pem_closure:
         const c_safe_open1_r9pem_info;
 },
 c_safe_open1_r9pem_entry() //  [R2, R3, R4]
         { info_tbl: [(c9pIN,
                       label: c_safe_open1_r9pem_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pIN: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9pJa; else goto c9pJb;
       c9pJa: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_safe_open1_r9pem_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pJb: // global
           I64[Sp - 24] = block_c9pIK_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9pJt; else goto c9pIL;
       u9pJt: // global
           call _c9pIK(R1) args: 0, res: 0, upd: 0;
       c9pIL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pIK() //  [R1]
         { info_tbl: [(c9pIK,
                       label: block_c9pIK_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pIK: // global
           I64[Sp] = block_c9pIQ_info;
           _s9pgp::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pgp::I64;
           if (R1 & 7 != 0) goto u9pJs; else goto c9pIR;
       u9pJs: // global
           call _c9pIQ(R1) args: 0, res: 0, upd: 0;
       c9pIR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pIQ() //  [R1]
         { info_tbl: [(c9pIQ,
                       label: block_c9pIQ_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pIQ: // global
           I64[Sp] = block_c9pIV_info;
           _s9pgr::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pgr::I64;
           if (R1 & 7 != 0) goto u9pJu; else goto c9pIW;
       u9pJu: // global
           call _c9pIV(R1) args: 0, res: 0, upd: 0;
       c9pIW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pIV() //  [R1]
         { info_tbl: [(c9pIV,
                       label: block_c9pIV_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pIV: // global
           _c9pJ2::I64 = I64[Sp + 16];
           I64[Sp + 16] = block_c9pJ4_info;
           _c9pJ1::I64 = I64[Sp + 8];
           Sp = Sp + 16;
           _c9pJ3::I64 = I64[R1 + 7];
           _u9pJk::P64 = CurrentTSO;
           I64[I64[_u9pJk::P64 + 24] + 16] = Sp;
           _u9pJl::I64 = CurrentNursery;
           P64[_u9pJl::I64 + 8] = Hp + 8;
           I64[_u9pJk::P64 + 104] = I64[_u9pJk::P64 + 104] - ((Hp + 8) - I64[_u9pJl::I64]);
           (_u9pJi::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [PtrHint] suspendThread(BaseReg, 0);
           (_s9pgx::I64) = call "ccall" arg hints:  [PtrHint,
                                                     ‘signed’,]  result hints:  [‘signed’] __hscore_open(_c9pJ1::I64, _c9pJ2::I64, _c9pJ3::I64);
           (_u9pJj::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] resumeThread(_u9pJi::I64);
           BaseReg = _u9pJj::I64;
           _u9pJm::P64 = CurrentTSO;
           _u9pJn::P64 = I64[_u9pJm::P64 + 24];
           Sp = I64[_u9pJn::P64 + 16];
           SpLim = _u9pJn::P64 + 192;
           HpAlloc = 0;
           _u9pJo::I64 = CurrentNursery;
           _u9pJp::I64 = I64[_u9pJo::I64 + 8];
           Hp = _u9pJp::I64 - 8;
           _u9pJq::I64 = I64[_u9pJo::I64];
           HpLim = _u9pJq::I64 + ((%MO_SS_Conv_W32_W64(I32[_u9pJo::I64 + 48]) << 12) - 1);
           I64[_u9pJm::P64 + 104] = I64[_u9pJm::P64 + 104] + (_u9pJp::I64 - _u9pJq::I64);
           R1 = _s9pgx::I64;
           call (I64[I64[Sp]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pJ4() //  [R1]
         { info_tbl: [(c9pJ4,
                       label: block_c9pJ4_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pJ4: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pJh; else goto c9pJg;
       c9pJh: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9pJg: // global
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R1));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.621523457 UTC

[section ""data" . System.Posix.Internals.c_safe_open_closure" {
     System.Posix.Internals.c_safe_open_closure:
         const System.Posix.Internals.c_safe_open_info;
 },
 System.Posix.Internals.c_safe_open_entry() //  [R2, R3, R4]
         { info_tbl: [(c9pJz,
                       label: System.Posix.Internals.c_safe_open_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pJz: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_safe_open1_r9pem_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.622701871 UTC

[section ""data" . c_fstat1_r9pen_closure" {
     c_fstat1_r9pen_closure:
         const c_fstat1_r9pen_info;
 },
 c_fstat1_r9pen_entry() //  [R2, R3]
         { info_tbl: [(c9pJJ,
                       label: c_fstat1_r9pen_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pJJ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9pJY; else goto c9pJZ;
       c9pJY: // global
           R3 = R3;
           R2 = R2;
           R1 = c_fstat1_r9pen_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pJZ: // global
           I64[Sp - 16] = block_c9pJG_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9pK5; else goto c9pJH;
       u9pK5: // global
           call _c9pJG(R1) args: 0, res: 0, upd: 0;
       c9pJH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pJG() //  [R1]
         { info_tbl: [(c9pJG,
                       label: block_c9pJG_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pJG: // global
           I64[Sp] = block_c9pJM_info;
           _s9pgE::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pgE::I64;
           if (R1 & 7 != 0) goto u9pK4; else goto c9pJN;
       u9pK4: // global
           call _c9pJM(R1) args: 0, res: 0, upd: 0;
       c9pJN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pJM() //  [R1]
         { info_tbl: [(c9pJM,
                       label: block_c9pJM_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pJM: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pK3; else goto c9pK2;
       c9pK3: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pK2: // global
           (_s9pgK::I64) = call "ccall" arg hints:  [‘signed’,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_fstat(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pgK::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.624225569 UTC

[section ""data" . System.Posix.Internals.c_fstat_closure" {
     System.Posix.Internals.c_fstat_closure:
         const System.Posix.Internals.c_fstat_info;
 },
 System.Posix.Internals.c_fstat_entry() //  [R2, R3]
         { info_tbl: [(c9pKa,
                       label: System.Posix.Internals.c_fstat_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pKa: // global
           R3 = R3;
           R2 = R2;
           call c_fstat1_r9pen_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.625391663 UTC

[section ""data" . lstat1_r9peo_closure" {
     lstat1_r9peo_closure:
         const lstat1_r9peo_info;
 },
 lstat1_r9peo_entry() //  [R2, R3]
         { info_tbl: [(c9pKk,
                       label: lstat1_r9peo_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pKk: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9pKz; else goto c9pKA;
       c9pKz: // global
           R3 = R3;
           R2 = R2;
           R1 = lstat1_r9peo_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pKA: // global
           I64[Sp - 16] = block_c9pKh_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9pKG; else goto c9pKi;
       u9pKG: // global
           call _c9pKh(R1) args: 0, res: 0, upd: 0;
       c9pKi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pKh() //  [R1]
         { info_tbl: [(c9pKh,
                       label: block_c9pKh_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pKh: // global
           I64[Sp] = block_c9pKn_info;
           _s9pgR::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pgR::I64;
           if (R1 & 7 != 0) goto u9pKF; else goto c9pKo;
       u9pKF: // global
           call _c9pKn(R1) args: 0, res: 0, upd: 0;
       c9pKo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pKn() //  [R1]
         { info_tbl: [(c9pKn,
                       label: block_c9pKn_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pKn: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pKE; else goto c9pKD;
       c9pKE: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pKD: // global
           (_s9pgX::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_lstat(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pgX::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.626879312 UTC

[section ""data" . System.Posix.Internals.lstat_closure" {
     System.Posix.Internals.lstat_closure:
         const System.Posix.Internals.lstat_info;
 },
 System.Posix.Internals.lstat_entry() //  [R2, R3]
         { info_tbl: [(c9pKL,
                       label: System.Posix.Internals.lstat_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pKL: // global
           R3 = R3;
           R2 = R2;
           call lstat1_r9peo_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.62805307 UTC

[section ""data" . c_lseek1_r9pep_closure" {
     c_lseek1_r9pep_closure:
         const c_lseek1_r9pep_info;
 },
 c_lseek1_r9pep_entry() //  [R2, R3, R4]
         { info_tbl: [(c9pKV,
                       label: c_lseek1_r9pep_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pKV: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9pLd; else goto c9pLe;
       c9pLd: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_lseek1_r9pep_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pLe: // global
           I64[Sp - 24] = block_c9pKS_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9pLl; else goto c9pKT;
       u9pLl: // global
           call _c9pKS(R1) args: 0, res: 0, upd: 0;
       c9pKT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pKS() //  [R1]
         { info_tbl: [(c9pKS,
                       label: block_c9pKS_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pKS: // global
           I64[Sp] = block_c9pKY_info;
           _s9ph5::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9ph5::I64;
           if (R1 & 7 != 0) goto u9pLk; else goto c9pKZ;
       u9pLk: // global
           call _c9pKY(R1) args: 0, res: 0, upd: 0;
       c9pKZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pKY() //  [R1]
         { info_tbl: [(c9pKY,
                       label: block_c9pKY_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pKY: // global
           I64[Sp] = block_c9pL3_info;
           _s9ph7::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9ph7::I64;
           if (R1 & 7 != 0) goto u9pLm; else goto c9pL4;
       u9pLm: // global
           call _c9pL3(R1) args: 0, res: 0, upd: 0;
       c9pL4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pL3() //  [R1]
         { info_tbl: [(c9pL3,
                       label: block_c9pL3_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pL3: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pLj; else goto c9pLi;
       c9pLj: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pLi: // global
           (_s9phd::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC23ZCbaseZCSystemziPosixziInternalsZClseek(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9phd::I64;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.629795792 UTC

[section ""data" . System.Posix.Internals.c_lseek_closure" {
     System.Posix.Internals.c_lseek_closure:
         const System.Posix.Internals.c_lseek_info;
 },
 System.Posix.Internals.c_lseek_entry() //  [R2, R3, R4]
         { info_tbl: [(c9pLr,
                       label: System.Posix.Internals.c_lseek_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pLr: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_lseek1_r9pep_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.630941652 UTC

[section ""data" . c_access1_r9peq_closure" {
     c_access1_r9peq_closure:
         const c_access1_r9peq_info;
 },
 c_access1_r9peq_entry() //  [R2, R3]
         { info_tbl: [(c9pLB,
                       label: c_access1_r9peq_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pLB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9pLQ; else goto c9pLR;
       c9pLQ: // global
           R3 = R3;
           R2 = R2;
           R1 = c_access1_r9peq_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pLR: // global
           I64[Sp - 16] = block_c9pLy_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9pLX; else goto c9pLz;
       u9pLX: // global
           call _c9pLy(R1) args: 0, res: 0, upd: 0;
       c9pLz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pLy() //  [R1]
         { info_tbl: [(c9pLy,
                       label: block_c9pLy_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pLy: // global
           I64[Sp] = block_c9pLE_info;
           _s9phj::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9phj::I64;
           if (R1 & 7 != 0) goto u9pLW; else goto c9pLF;
       u9pLW: // global
           call _c9pLE(R1) args: 0, res: 0, upd: 0;
       c9pLF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pLE() //  [R1]
         { info_tbl: [(c9pLE,
                       label: block_c9pLE_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pLE: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pLV; else goto c9pLU;
       c9pLV: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pLU: // global
           (_s9php::I64) = call "ccall" arg hints:  [PtrHint,
                                                     ‘signed’]  result hints:  [‘signed’] access(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9php::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.632491108 UTC

[section ""data" . System.Posix.Internals.c_access_closure" {
     System.Posix.Internals.c_access_closure:
         const System.Posix.Internals.c_access_info;
 },
 System.Posix.Internals.c_access_entry() //  [R2, R3]
         { info_tbl: [(c9pM2,
                       label: System.Posix.Internals.c_access_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pM2: // global
           R3 = R3;
           R2 = R2;
           call c_access1_r9peq_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.633801177 UTC

[section ""data" . c_chmod1_r9per_closure" {
     c_chmod1_r9per_closure:
         const c_chmod1_r9per_info;
 },
 c_chmod1_r9per_entry() //  [R2, R3]
         { info_tbl: [(c9pMc,
                       label: c_chmod1_r9per_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pMc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9pMr; else goto c9pMs;
       c9pMr: // global
           R3 = R3;
           R2 = R2;
           R1 = c_chmod1_r9per_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pMs: // global
           I64[Sp - 16] = block_c9pM9_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9pMy; else goto c9pMa;
       u9pMy: // global
           call _c9pM9(R1) args: 0, res: 0, upd: 0;
       c9pMa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pM9() //  [R1]
         { info_tbl: [(c9pM9,
                       label: block_c9pM9_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pM9: // global
           I64[Sp] = block_c9pMf_info;
           _s9phw::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9phw::I64;
           if (R1 & 7 != 0) goto u9pMx; else goto c9pMg;
       u9pMx: // global
           call _c9pMf(R1) args: 0, res: 0, upd: 0;
       c9pMg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pMf() //  [R1]
         { info_tbl: [(c9pMf,
                       label: block_c9pMf_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pMf: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pMw; else goto c9pMv;
       c9pMw: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pMv: // global
           (_s9phC::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [‘signed’] chmod(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9phC::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.635278735 UTC

[section ""data" . System.Posix.Internals.c_chmod_closure" {
     System.Posix.Internals.c_chmod_closure:
         const System.Posix.Internals.c_chmod_info;
 },
 System.Posix.Internals.c_chmod_entry() //  [R2, R3]
         { info_tbl: [(c9pMD,
                       label: System.Posix.Internals.c_chmod_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pMD: // global
           R3 = R3;
           R2 = R2;
           call c_chmod1_r9per_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.636312121 UTC

[section ""data" . c_close1_r9pes_closure" {
     c_close1_r9pes_closure:
         const c_close1_r9pes_info;
 },
 c_close1_r9pes_entry() //  [R2]
         { info_tbl: [(c9pMN,
                       label: c_close1_r9pes_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pMN: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9pMW; else goto c9pMX;
       c9pMW: // global
           R2 = R2;
           R1 = c_close1_r9pes_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9pMX: // global
           I64[Sp - 8] = block_c9pMK_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9pN1; else goto c9pML;
       u9pN1: // global
           call _c9pMK(R1) args: 0, res: 0, upd: 0;
       c9pML: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pMK() //  [R1]
         { info_tbl: [(c9pMK,
                       label: block_c9pMK_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pMK: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pN0; else goto c9pMZ;
       c9pN0: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pMZ: // global
           (_s9phM::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [‘signed’] close(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9phM::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.637589939 UTC

[section ""data" . System.Posix.Internals.c_close_closure" {
     System.Posix.Internals.c_close_closure:
         const System.Posix.Internals.c_close_info;
 },
 System.Posix.Internals.c_close_entry() //  [R2]
         { info_tbl: [(c9pN6,
                       label: System.Posix.Internals.c_close_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pN6: // global
           R2 = R2;
           call c_close1_r9pes_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.638680682 UTC

[section ""data" . c_creat1_r9pet_closure" {
     c_creat1_r9pet_closure:
         const c_creat1_r9pet_info;
 },
 c_creat1_r9pet_entry() //  [R2, R3]
         { info_tbl: [(c9pNg,
                       label: c_creat1_r9pet_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pNg: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9pNv; else goto c9pNw;
       c9pNv: // global
           R3 = R3;
           R2 = R2;
           R1 = c_creat1_r9pet_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pNw: // global
           I64[Sp - 16] = block_c9pNd_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9pNC; else goto c9pNe;
       u9pNC: // global
           call _c9pNd(R1) args: 0, res: 0, upd: 0;
       c9pNe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pNd() //  [R1]
         { info_tbl: [(c9pNd,
                       label: block_c9pNd_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pNd: // global
           I64[Sp] = block_c9pNj_info;
           _s9phT::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9phT::I64;
           if (R1 & 7 != 0) goto u9pNB; else goto c9pNk;
       u9pNB: // global
           call _c9pNj(R1) args: 0, res: 0, upd: 0;
       c9pNk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pNj() //  [R1]
         { info_tbl: [(c9pNj,
                       label: block_c9pNj_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pNj: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pNA; else goto c9pNz;
       c9pNA: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pNz: // global
           (_s9phZ::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [‘signed’] creat(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9phZ::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.640149912 UTC

[section ""data" . System.Posix.Internals.c_creat_closure" {
     System.Posix.Internals.c_creat_closure:
         const System.Posix.Internals.c_creat_info;
 },
 System.Posix.Internals.c_creat_entry() //  [R2, R3]
         { info_tbl: [(c9pNH,
                       label: System.Posix.Internals.c_creat_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pNH: // global
           R3 = R3;
           R2 = R2;
           call c_creat1_r9pet_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.64118559 UTC

[section ""data" . c_dup1_r9peu_closure" {
     c_dup1_r9peu_closure:
         const c_dup1_r9peu_info;
 },
 c_dup1_r9peu_entry() //  [R2]
         { info_tbl: [(c9pNR,
                       label: c_dup1_r9peu_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pNR: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9pO0; else goto c9pO1;
       c9pO0: // global
           R2 = R2;
           R1 = c_dup1_r9peu_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9pO1: // global
           I64[Sp - 8] = block_c9pNO_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9pO5; else goto c9pNP;
       u9pO5: // global
           call _c9pNO(R1) args: 0, res: 0, upd: 0;
       c9pNP: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pNO() //  [R1]
         { info_tbl: [(c9pNO,
                       label: block_c9pNO_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pNO: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pO4; else goto c9pO3;
       c9pO4: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pO3: // global
           (_s9pi9::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [‘signed’] dup(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pi9::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.642435514 UTC

[section ""data" . System.Posix.Internals.c_dup_closure" {
     System.Posix.Internals.c_dup_closure:
         const System.Posix.Internals.c_dup_info;
 },
 System.Posix.Internals.c_dup_entry() //  [R2]
         { info_tbl: [(c9pOa,
                       label: System.Posix.Internals.c_dup_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pOa: // global
           R2 = R2;
           call c_dup1_r9peu_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.643561503 UTC

[section ""data" . c_dup3_r9pev_closure" {
     c_dup3_r9pev_closure:
         const c_dup3_r9pev_info;
 },
 c_dup3_r9pev_entry() //  [R2, R3]
         { info_tbl: [(c9pOk,
                       label: c_dup3_r9pev_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pOk: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9pOz; else goto c9pOA;
       c9pOz: // global
           R3 = R3;
           R2 = R2;
           R1 = c_dup3_r9pev_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pOA: // global
           I64[Sp - 16] = block_c9pOh_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9pOG; else goto c9pOi;
       u9pOG: // global
           call _c9pOh(R1) args: 0, res: 0, upd: 0;
       c9pOi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pOh() //  [R1]
         { info_tbl: [(c9pOh,
                       label: block_c9pOh_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pOh: // global
           I64[Sp] = block_c9pOn_info;
           _s9pig::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pig::I64;
           if (R1 & 7 != 0) goto u9pOF; else goto c9pOo;
       u9pOF: // global
           call _c9pOn(R1) args: 0, res: 0, upd: 0;
       c9pOo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pOn() //  [R1]
         { info_tbl: [(c9pOn,
                       label: block_c9pOn_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pOn: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pOE; else goto c9pOD;
       c9pOE: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pOD: // global
           (_s9pim::I64) = call "ccall" arg hints:  [‘signed’,
                                                     ‘signed’]  result hints:  [‘signed’] dup2(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pim::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.645043475 UTC

[section ""data" . System.Posix.Internals.c_dup2_closure" {
     System.Posix.Internals.c_dup2_closure:
         const System.Posix.Internals.c_dup2_info;
 },
 System.Posix.Internals.c_dup2_entry() //  [R2, R3]
         { info_tbl: [(c9pOL,
                       label: System.Posix.Internals.c_dup2_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pOL: // global
           R3 = R3;
           R2 = R2;
           call c_dup3_r9pev_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.646301711 UTC

[section ""data" . c_isatty1_r9pew_closure" {
     c_isatty1_r9pew_closure:
         const c_isatty1_r9pew_info;
 },
 c_isatty1_r9pew_entry() //  [R2]
         { info_tbl: [(c9pOV,
                       label: c_isatty1_r9pew_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pOV: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9pP4; else goto c9pP5;
       c9pP4: // global
           R2 = R2;
           R1 = c_isatty1_r9pew_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9pP5: // global
           I64[Sp - 8] = block_c9pOS_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9pP9; else goto c9pOT;
       u9pP9: // global
           call _c9pOS(R1) args: 0, res: 0, upd: 0;
       c9pOT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pOS() //  [R1]
         { info_tbl: [(c9pOS,
                       label: block_c9pOS_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pOS: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pP8; else goto c9pP7;
       c9pP8: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pP7: // global
           (_s9piw::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [‘signed’] isatty(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9piw::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.64753499 UTC

[section ""data" . System.Posix.Internals.c_isatty_closure" {
     System.Posix.Internals.c_isatty_closure:
         const System.Posix.Internals.c_isatty_info;
 },
 System.Posix.Internals.c_isatty_entry() //  [R2]
         { info_tbl: [(c9pPe,
                       label: System.Posix.Internals.c_isatty_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pPe: // global
           R2 = R2;
           call c_isatty1_r9pew_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.64866775 UTC

[section ""data" . c_read1_r9pex_closure" {
     c_read1_r9pex_closure:
         const c_read1_r9pex_info;
 },
 c_read1_r9pex_entry() //  [R2, R3, R4]
         { info_tbl: [(c9pPo,
                       label: c_read1_r9pex_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pPo: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9pPG; else goto c9pPH;
       c9pPG: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_read1_r9pex_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pPH: // global
           I64[Sp - 24] = block_c9pPl_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9pPO; else goto c9pPm;
       u9pPO: // global
           call _c9pPl(R1) args: 0, res: 0, upd: 0;
       c9pPm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pPl() //  [R1]
         { info_tbl: [(c9pPl,
                       label: block_c9pPl_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pPl: // global
           I64[Sp] = block_c9pPr_info;
           _s9piE::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9piE::I64;
           if (R1 & 7 != 0) goto u9pPN; else goto c9pPs;
       u9pPN: // global
           call _c9pPr(R1) args: 0, res: 0, upd: 0;
       c9pPs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pPr() //  [R1]
         { info_tbl: [(c9pPr,
                       label: block_c9pPr_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pPr: // global
           I64[Sp] = block_c9pPw_info;
           _s9piG::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9piG::I64;
           if (R1 & 7 != 0) goto u9pPP; else goto c9pPx;
       u9pPP: // global
           call _c9pPw(R1) args: 0, res: 0, upd: 0;
       c9pPx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pPw() //  [R1]
         { info_tbl: [(c9pPw,
                       label: block_c9pPw_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pPw: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pPM; else goto c9pPL;
       c9pPM: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pPL: // global
           (_s9piM::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC22ZCbaseZCSystemziPosixziInternalsZCread(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9piM::I64;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.650355499 UTC

[section ""data" . System.Posix.Internals.c_read_closure" {
     System.Posix.Internals.c_read_closure:
         const System.Posix.Internals.c_read_info;
 },
 System.Posix.Internals.c_read_entry() //  [R2, R3, R4]
         { info_tbl: [(c9pPU,
                       label: System.Posix.Internals.c_read_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pPU: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_read1_r9pex_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.651699551 UTC

[section ""data" . c_safe_read1_r9pey_closure" {
     c_safe_read1_r9pey_closure:
         const c_safe_read1_r9pey_info;
 },
 c_safe_read1_r9pey_entry() //  [R2, R3, R4]
         { info_tbl: [(c9pQ4,
                       label: c_safe_read1_r9pey_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pQ4: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9pQo; else goto c9pQp;
       c9pQo: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_safe_read1_r9pey_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pQp: // global
           I64[Sp - 24] = block_c9pQ1_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9pQH; else goto c9pQ2;
       u9pQH: // global
           call _c9pQ1(R1) args: 0, res: 0, upd: 0;
       c9pQ2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pQ1() //  [R1]
         { info_tbl: [(c9pQ1,
                       label: block_c9pQ1_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pQ1: // global
           I64[Sp] = block_c9pQ7_info;
           _s9piT::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9piT::I64;
           if (R1 & 7 != 0) goto u9pQG; else goto c9pQ8;
       u9pQG: // global
           call _c9pQ7(R1) args: 0, res: 0, upd: 0;
       c9pQ8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pQ7() //  [R1]
         { info_tbl: [(c9pQ7,
                       label: block_c9pQ7_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pQ7: // global
           I64[Sp] = block_c9pQc_info;
           _s9piV::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9piV::I64;
           if (R1 & 7 != 0) goto u9pQI; else goto c9pQd;
       u9pQI: // global
           call _c9pQc(R1) args: 0, res: 0, upd: 0;
       c9pQd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pQc() //  [R1]
         { info_tbl: [(c9pQc,
                       label: block_c9pQc_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pQc: // global
           _c9pQj::I64 = I64[Sp + 16];
           I64[Sp + 16] = block_c9pQl_info;
           _c9pQi::I64 = I64[Sp + 8];
           Sp = Sp + 16;
           _c9pQk::I64 = I64[R1 + 7];
           _u9pQy::P64 = CurrentTSO;
           I64[I64[_u9pQy::P64 + 24] + 16] = Sp;
           _u9pQz::I64 = CurrentNursery;
           P64[_u9pQz::I64 + 8] = Hp + 8;
           I64[_u9pQy::P64 + 104] = I64[_u9pQy::P64 + 104] - ((Hp + 8) - I64[_u9pQz::I64]);
           (_u9pQw::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [PtrHint] suspendThread(BaseReg, 0);
           (_s9pj1::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC21ZCbaseZCSystemziPosixziInternalsZCread(_c9pQi::I64, _c9pQj::I64, _c9pQk::I64);
           (_u9pQx::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] resumeThread(_u9pQw::I64);
           BaseReg = _u9pQx::I64;
           _u9pQA::P64 = CurrentTSO;
           _u9pQB::P64 = I64[_u9pQA::P64 + 24];
           Sp = I64[_u9pQB::P64 + 16];
           SpLim = _u9pQB::P64 + 192;
           HpAlloc = 0;
           _u9pQC::I64 = CurrentNursery;
           _u9pQD::I64 = I64[_u9pQC::I64 + 8];
           Hp = _u9pQD::I64 - 8;
           _u9pQE::I64 = I64[_u9pQC::I64];
           HpLim = _u9pQE::I64 + ((%MO_SS_Conv_W32_W64(I32[_u9pQC::I64 + 48]) << 12) - 1);
           I64[_u9pQA::P64 + 104] = I64[_u9pQA::P64 + 104] + (_u9pQD::I64 - _u9pQE::I64);
           R1 = _s9pj1::I64;
           call (I64[I64[Sp]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pQl() //  [R1]
         { info_tbl: [(c9pQl,
                       label: block_c9pQl_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pQl: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pQv; else goto c9pQu;
       c9pQv: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9pQu: // global
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.653855837 UTC

[section ""data" . System.Posix.Internals.c_safe_read_closure" {
     System.Posix.Internals.c_safe_read_closure:
         const System.Posix.Internals.c_safe_read_info;
 },
 System.Posix.Internals.c_safe_read_entry() //  [R2, R3, R4]
         { info_tbl: [(c9pQN,
                       label: System.Posix.Internals.c_safe_read_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pQN: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_safe_read1_r9pey_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.6549101 UTC

[section ""data" . c_umask1_r9pez_closure" {
     c_umask1_r9pez_closure:
         const c_umask1_r9pez_info;
 },
 c_umask1_r9pez_entry() //  [R2]
         { info_tbl: [(c9pQX,
                       label: c_umask1_r9pez_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pQX: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9pR6; else goto c9pR7;
       c9pR6: // global
           R2 = R2;
           R1 = c_umask1_r9pez_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9pR7: // global
           I64[Sp - 8] = block_c9pQU_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9pRb; else goto c9pQV;
       u9pRb: // global
           call _c9pQU(R1) args: 0, res: 0, upd: 0;
       c9pQV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pQU() //  [R1]
         { info_tbl: [(c9pQU,
                       label: block_c9pQU_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pQU: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pRa; else goto c9pR9;
       c9pRa: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pR9: // global
           (_s9pja::I64) = call "ccall" arg hints:  []  result hints:  [] umask(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Word.W32#_con_info;
           I64[Hp] = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pja::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.656104427 UTC

[section ""data" . System.Posix.Internals.c_umask_closure" {
     System.Posix.Internals.c_umask_closure:
         const System.Posix.Internals.c_umask_info;
 },
 System.Posix.Internals.c_umask_entry() //  [R2]
         { info_tbl: [(c9pRg,
                       label: System.Posix.Internals.c_umask_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pRg: // global
           R2 = R2;
           call c_umask1_r9pez_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.65753957 UTC

[section ""data" . c_write1_r9peA_closure" {
     c_write1_r9peA_closure:
         const c_write1_r9peA_info;
 },
 c_write1_r9peA_entry() //  [R2, R3, R4]
         { info_tbl: [(c9pRq,
                       label: c_write1_r9peA_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pRq: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9pRI; else goto c9pRJ;
       c9pRI: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_write1_r9peA_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pRJ: // global
           I64[Sp - 24] = block_c9pRn_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9pRQ; else goto c9pRo;
       u9pRQ: // global
           call _c9pRn(R1) args: 0, res: 0, upd: 0;
       c9pRo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pRn() //  [R1]
         { info_tbl: [(c9pRn,
                       label: block_c9pRn_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pRn: // global
           I64[Sp] = block_c9pRt_info;
           _s9pji::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pji::I64;
           if (R1 & 7 != 0) goto u9pRP; else goto c9pRu;
       u9pRP: // global
           call _c9pRt(R1) args: 0, res: 0, upd: 0;
       c9pRu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pRt() //  [R1]
         { info_tbl: [(c9pRt,
                       label: block_c9pRt_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pRt: // global
           I64[Sp] = block_c9pRy_info;
           _s9pjk::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pjk::I64;
           if (R1 & 7 != 0) goto u9pRR; else goto c9pRz;
       u9pRR: // global
           call _c9pRy(R1) args: 0, res: 0, upd: 0;
       c9pRz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pRy() //  [R1]
         { info_tbl: [(c9pRy,
                       label: block_c9pRy_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pRy: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pRO; else goto c9pRN;
       c9pRO: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pRN: // global
           (_s9pjq::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9pjq::I64;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.659226444 UTC

[section ""data" . System.Posix.Internals.c_write_closure" {
     System.Posix.Internals.c_write_closure:
         const System.Posix.Internals.c_write_info;
 },
 System.Posix.Internals.c_write_entry() //  [R2, R3, R4]
         { info_tbl: [(c9pRW,
                       label: System.Posix.Internals.c_write_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pRW: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_write1_r9peA_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.66047903 UTC

[section ""data" . c_safe_write1_r9peB_closure" {
     c_safe_write1_r9peB_closure:
         const c_safe_write1_r9peB_info;
 },
 c_safe_write1_r9peB_entry() //  [R2, R3, R4]
         { info_tbl: [(c9pS6,
                       label: c_safe_write1_r9peB_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pS6: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9pSq; else goto c9pSr;
       c9pSq: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_safe_write1_r9peB_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pSr: // global
           I64[Sp - 24] = block_c9pS3_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9pSJ; else goto c9pS4;
       u9pSJ: // global
           call _c9pS3(R1) args: 0, res: 0, upd: 0;
       c9pS4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pS3() //  [R1]
         { info_tbl: [(c9pS3,
                       label: block_c9pS3_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pS3: // global
           I64[Sp] = block_c9pS9_info;
           _s9pjx::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pjx::I64;
           if (R1 & 7 != 0) goto u9pSI; else goto c9pSa;
       u9pSI: // global
           call _c9pS9(R1) args: 0, res: 0, upd: 0;
       c9pSa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pS9() //  [R1]
         { info_tbl: [(c9pS9,
                       label: block_c9pS9_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pS9: // global
           I64[Sp] = block_c9pSe_info;
           _s9pjz::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pjz::I64;
           if (R1 & 7 != 0) goto u9pSK; else goto c9pSf;
       u9pSK: // global
           call _c9pSe(R1) args: 0, res: 0, upd: 0;
       c9pSf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pSe() //  [R1]
         { info_tbl: [(c9pSe,
                       label: block_c9pSe_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pSe: // global
           _c9pSl::I64 = I64[Sp + 16];
           I64[Sp + 16] = block_c9pSn_info;
           _c9pSk::I64 = I64[Sp + 8];
           Sp = Sp + 16;
           _c9pSm::I64 = I64[R1 + 7];
           _u9pSA::P64 = CurrentTSO;
           I64[I64[_u9pSA::P64 + 24] + 16] = Sp;
           _u9pSB::I64 = CurrentNursery;
           P64[_u9pSB::I64 + 8] = Hp + 8;
           I64[_u9pSA::P64 + 104] = I64[_u9pSA::P64 + 104] - ((Hp + 8) - I64[_u9pSB::I64]);
           (_u9pSy::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [PtrHint] suspendThread(BaseReg, 0);
           (_s9pjF::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC19ZCbaseZCSystemziPosixziInternalsZCwrite(_c9pSk::I64, _c9pSl::I64, _c9pSm::I64);
           (_u9pSz::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] resumeThread(_u9pSy::I64);
           BaseReg = _u9pSz::I64;
           _u9pSC::P64 = CurrentTSO;
           _u9pSD::P64 = I64[_u9pSC::P64 + 24];
           Sp = I64[_u9pSD::P64 + 16];
           SpLim = _u9pSD::P64 + 192;
           HpAlloc = 0;
           _u9pSE::I64 = CurrentNursery;
           _u9pSF::I64 = I64[_u9pSE::I64 + 8];
           Hp = _u9pSF::I64 - 8;
           _u9pSG::I64 = I64[_u9pSE::I64];
           HpLim = _u9pSG::I64 + ((%MO_SS_Conv_W32_W64(I32[_u9pSE::I64 + 48]) << 12) - 1);
           I64[_u9pSC::P64 + 104] = I64[_u9pSC::P64 + 104] + (_u9pSF::I64 - _u9pSG::I64);
           R1 = _s9pjF::I64;
           call (I64[I64[Sp]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pSn() //  [R1]
         { info_tbl: [(c9pSn,
                       label: block_c9pSn_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pSn: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pSx; else goto c9pSw;
       c9pSx: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9pSw: // global
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.66260329 UTC

[section ""data" . System.Posix.Internals.c_safe_write_closure" {
     System.Posix.Internals.c_safe_write_closure:
         const System.Posix.Internals.c_safe_write_info;
 },
 System.Posix.Internals.c_safe_write_entry() //  [R2, R3, R4]
         { info_tbl: [(c9pSP,
                       label: System.Posix.Internals.c_safe_write_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pSP: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_safe_write1_r9peB_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.665099203 UTC

[section ""data" . c_pipe1_r9peC_closure" {
     c_pipe1_r9peC_closure:
         const c_pipe1_r9peC_info;
 },
 c_pipe1_r9peC_entry() //  [R2]
         { info_tbl: [(c9pSZ,
                       label: c_pipe1_r9peC_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pSZ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9pT8; else goto c9pT9;
       c9pT8: // global
           R2 = R2;
           R1 = c_pipe1_r9peC_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9pT9: // global
           I64[Sp - 8] = block_c9pSW_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9pTd; else goto c9pSX;
       u9pTd: // global
           call _c9pSW(R1) args: 0, res: 0, upd: 0;
       c9pSX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pSW() //  [R1]
         { info_tbl: [(c9pSW,
                       label: block_c9pSW_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pSW: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pTc; else goto c9pTb;
       c9pTc: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pTb: // global
           (_s9pjO::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] pipe(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pjO::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.666886477 UTC

[section ""data" . System.Posix.Internals.c_pipe_closure" {
     System.Posix.Internals.c_pipe_closure:
         const System.Posix.Internals.c_pipe_info;
 },
 System.Posix.Internals.c_pipe_entry() //  [R2]
         { info_tbl: [(c9pTi,
                       label: System.Posix.Internals.c_pipe_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pTi: // global
           R2 = R2;
           call c_pipe1_r9peC_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.668279804 UTC

[section ""data" . c_unlink1_r9peD_closure" {
     c_unlink1_r9peD_closure:
         const c_unlink1_r9peD_info;
 },
 c_unlink1_r9peD_entry() //  [R2]
         { info_tbl: [(c9pTs,
                       label: c_unlink1_r9peD_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pTs: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9pTB; else goto c9pTC;
       c9pTB: // global
           R2 = R2;
           R1 = c_unlink1_r9peD_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9pTC: // global
           I64[Sp - 8] = block_c9pTp_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9pTG; else goto c9pTq;
       u9pTG: // global
           call _c9pTp(R1) args: 0, res: 0, upd: 0;
       c9pTq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pTp() //  [R1]
         { info_tbl: [(c9pTp,
                       label: block_c9pTp_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pTp: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pTF; else goto c9pTE;
       c9pTF: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pTE: // global
           (_s9pjY::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] unlink(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pjY::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.670213377 UTC

[section ""data" . System.Posix.Internals.c_unlink_closure" {
     System.Posix.Internals.c_unlink_closure:
         const System.Posix.Internals.c_unlink_info;
 },
 System.Posix.Internals.c_unlink_entry() //  [R2]
         { info_tbl: [(c9pTL,
                       label: System.Posix.Internals.c_unlink_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pTL: // global
           R2 = R2;
           call c_unlink1_r9peD_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.671674983 UTC

[section ""data" . c_utime1_r9peE_closure" {
     c_utime1_r9peE_closure:
         const c_utime1_r9peE_info;
 },
 c_utime1_r9peE_entry() //  [R2, R3]
         { info_tbl: [(c9pTV,
                       label: c_utime1_r9peE_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pTV: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9pUa; else goto c9pUb;
       c9pUa: // global
           R3 = R3;
           R2 = R2;
           R1 = c_utime1_r9peE_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pUb: // global
           I64[Sp - 16] = block_c9pTS_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9pUh; else goto c9pTT;
       u9pUh: // global
           call _c9pTS(R1) args: 0, res: 0, upd: 0;
       c9pTT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pTS() //  [R1]
         { info_tbl: [(c9pTS,
                       label: block_c9pTS_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pTS: // global
           I64[Sp] = block_c9pTY_info;
           _s9pk5::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pk5::I64;
           if (R1 & 7 != 0) goto u9pUg; else goto c9pTZ;
       u9pUg: // global
           call _c9pTY(R1) args: 0, res: 0, upd: 0;
       c9pTZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pTY() //  [R1]
         { info_tbl: [(c9pTY,
                       label: block_c9pTY_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pTY: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pUf; else goto c9pUe;
       c9pUf: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pUe: // global
           (_s9pkb::I64) = call "capi" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC18ZCbaseZCSystemziPosixziInternalsZCutime(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pkb::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.673344071 UTC

[section ""data" . System.Posix.Internals.c_utime_closure" {
     System.Posix.Internals.c_utime_closure:
         const System.Posix.Internals.c_utime_info;
 },
 System.Posix.Internals.c_utime_entry() //  [R2, R3]
         { info_tbl: [(c9pUm,
                       label: System.Posix.Internals.c_utime_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pUm: // global
           R3 = R3;
           R2 = R2;
           call c_utime1_r9peE_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.674199827 UTC

[section ""data" . c_getpid1_r9peF_closure" {
     c_getpid1_r9peF_closure:
         const c_getpid1_r9peF_info;
 },
 c_getpid1_r9peF_entry() //  []
         { info_tbl: [(c9pUw,
                       label: c_getpid1_r9peF_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pUw: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pUC; else goto c9pUB;
       c9pUC: // global
           HpAlloc = 16;
           R1 = c_getpid1_r9peF_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9pUB: // global
           (_s9pki::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] getpid();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pki::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.675100225 UTC

[section ""data" . System.Posix.Internals.c_getpid_closure" {
     System.Posix.Internals.c_getpid_closure:
         const System.Posix.Internals.c_getpid_info;
 },
 System.Posix.Internals.c_getpid_entry() //  []
         { info_tbl: [(c9pUH,
                       label: System.Posix.Internals.c_getpid_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pUH: // global
           call c_getpid1_r9peF_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.676149675 UTC

[section ""data" . c_stat1_r9peG_closure" {
     c_stat1_r9peG_closure:
         const c_stat1_r9peG_info;
 },
 c_stat1_r9peG_entry() //  [R2, R3]
         { info_tbl: [(c9pUR,
                       label: c_stat1_r9peG_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pUR: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9pV6; else goto c9pV7;
       c9pV6: // global
           R3 = R3;
           R2 = R2;
           R1 = c_stat1_r9peG_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pV7: // global
           I64[Sp - 16] = block_c9pUO_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9pVd; else goto c9pUP;
       u9pVd: // global
           call _c9pUO(R1) args: 0, res: 0, upd: 0;
       c9pUP: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pUO() //  [R1]
         { info_tbl: [(c9pUO,
                       label: block_c9pUO_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pUO: // global
           I64[Sp] = block_c9pUU_info;
           _s9pkp::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pkp::I64;
           if (R1 & 7 != 0) goto u9pVc; else goto c9pUV;
       u9pVc: // global
           call _c9pUU(R1) args: 0, res: 0, upd: 0;
       c9pUV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pUU() //  [R1]
         { info_tbl: [(c9pUU,
                       label: block_c9pUU_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pUU: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pVb; else goto c9pVa;
       c9pVb: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pVa: // global
           (_s9pkv::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_stat(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pkv::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.677590509 UTC

[section ""data" . System.Posix.Internals.c_stat_closure" {
     System.Posix.Internals.c_stat_closure:
         const System.Posix.Internals.c_stat_info;
 },
 System.Posix.Internals.c_stat_entry() //  [R2, R3]
         { info_tbl: [(c9pVi,
                       label: System.Posix.Internals.c_stat_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pVi: // global
           R3 = R3;
           R2 = R2;
           call c_stat1_r9peG_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.678676975 UTC

[section ""data" . c_ftruncate1_r9peH_closure" {
     c_ftruncate1_r9peH_closure:
         const c_ftruncate1_r9peH_info;
 },
 c_ftruncate1_r9peH_entry() //  [R2, R3]
         { info_tbl: [(c9pVs,
                       label: c_ftruncate1_r9peH_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pVs: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9pVH; else goto c9pVI;
       c9pVH: // global
           R3 = R3;
           R2 = R2;
           R1 = c_ftruncate1_r9peH_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pVI: // global
           I64[Sp - 16] = block_c9pVp_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9pVO; else goto c9pVq;
       u9pVO: // global
           call _c9pVp(R1) args: 0, res: 0, upd: 0;
       c9pVq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pVp() //  [R1]
         { info_tbl: [(c9pVp,
                       label: block_c9pVp_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pVp: // global
           I64[Sp] = block_c9pVv_info;
           _s9pkC::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pkC::I64;
           if (R1 & 7 != 0) goto u9pVN; else goto c9pVw;
       u9pVN: // global
           call _c9pVv(R1) args: 0, res: 0, upd: 0;
       c9pVw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pVv() //  [R1]
         { info_tbl: [(c9pVv,
                       label: block_c9pVv_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pVv: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pVM; else goto c9pVL;
       c9pVM: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pVL: // global
           (_s9pkI::I64) = call "ccall" arg hints:  [‘signed’,
                                                     ‘signed’]  result hints:  [‘signed’] __hscore_ftruncate(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pkI::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.680079247 UTC

[section ""data" . System.Posix.Internals.c_ftruncate_closure" {
     System.Posix.Internals.c_ftruncate_closure:
         const System.Posix.Internals.c_ftruncate_info;
 },
 System.Posix.Internals.c_ftruncate_entry() //  [R2, R3]
         { info_tbl: [(c9pVT,
                       label: System.Posix.Internals.c_ftruncate_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pVT: // global
           R3 = R3;
           R2 = R2;
           call c_ftruncate1_r9peH_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.681181709 UTC

[section ""data" . c_fcntl_read1_r9peI_closure" {
     c_fcntl_read1_r9peI_closure:
         const c_fcntl_read1_r9peI_info;
 },
 c_fcntl_read1_r9peI_entry() //  [R2, R3]
         { info_tbl: [(c9pW3,
                       label: c_fcntl_read1_r9peI_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pW3: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9pWi; else goto c9pWj;
       c9pWi: // global
           R3 = R3;
           R2 = R2;
           R1 = c_fcntl_read1_r9peI_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pWj: // global
           I64[Sp - 16] = block_c9pW0_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9pWp; else goto c9pW1;
       u9pWp: // global
           call _c9pW0(R1) args: 0, res: 0, upd: 0;
       c9pW1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pW0() //  [R1]
         { info_tbl: [(c9pW0,
                       label: block_c9pW0_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pW0: // global
           I64[Sp] = block_c9pW6_info;
           _s9pkP::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pkP::I64;
           if (R1 & 7 != 0) goto u9pWo; else goto c9pW7;
       u9pWo: // global
           call _c9pW6(R1) args: 0, res: 0, upd: 0;
       c9pW7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pW6() //  [R1]
         { info_tbl: [(c9pW6,
                       label: block_c9pW6_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pW6: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pWn; else goto c9pWm;
       c9pWn: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pWm: // global
           (_s9pkV::I64) = call "capi" arg hints:  [‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC17ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pkV::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.682816414 UTC

[section ""data" . System.Posix.Internals.c_fcntl_read_closure" {
     System.Posix.Internals.c_fcntl_read_closure:
         const System.Posix.Internals.c_fcntl_read_info;
 },
 System.Posix.Internals.c_fcntl_read_entry() //  [R2, R3]
         { info_tbl: [(c9pWu,
                       label: System.Posix.Internals.c_fcntl_read_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pWu: // global
           R3 = R3;
           R2 = R2;
           call c_fcntl_read1_r9peI_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.684000807 UTC

[section ""data" . c_fcntl_write1_r9peJ_closure" {
     c_fcntl_write1_r9peJ_closure:
         const c_fcntl_write1_r9peJ_info;
 },
 c_fcntl_write1_r9peJ_entry() //  [R2, R3, R4]
         { info_tbl: [(c9pWE,
                       label: c_fcntl_write1_r9peJ_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pWE: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9pWZ; else goto c9pX0;
       c9pWZ: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_fcntl_write1_r9peJ_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pX0: // global
           I64[Sp - 24] = block_c9pWB_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9pX7; else goto c9pWC;
       u9pX7: // global
           call _c9pWB(R1) args: 0, res: 0, upd: 0;
       c9pWC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pWB() //  [R1]
         { info_tbl: [(c9pWB,
                       label: block_c9pWB_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pWB: // global
           I64[Sp] = block_c9pWH_info;
           _s9pl3::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pl3::I64;
           if (R1 & 7 != 0) goto u9pX6; else goto c9pWI;
       u9pX6: // global
           call _c9pWH(R1) args: 0, res: 0, upd: 0;
       c9pWI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pWH() //  [R1]
         { info_tbl: [(c9pWH,
                       label: block_c9pWH_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pWH: // global
           I64[Sp] = block_c9pWM_info;
           _s9pl5::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pl5::I64;
           if (R1 & 7 != 0) goto u9pX8; else goto c9pWN;
       u9pX8: // global
           call _c9pWM(R1) args: 0, res: 0, upd: 0;
       c9pWN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pWM() //  [R1]
         { info_tbl: [(c9pWM,
                       label: block_c9pWM_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pWM: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pX5; else goto c9pX4;
       c9pX5: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pX4: // global
           (_s9plb::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9plb::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.685677979 UTC

[section ""data" . System.Posix.Internals.c_fcntl_write_closure" {
     System.Posix.Internals.c_fcntl_write_closure:
         const System.Posix.Internals.c_fcntl_write_info;
 },
 System.Posix.Internals.c_fcntl_write_entry() //  [R2, R3, R4]
         { info_tbl: [(c9pXd,
                       label: System.Posix.Internals.c_fcntl_write_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pXd: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_fcntl_write1_r9peJ_entry(R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.686854287 UTC

[section ""data" . c_fcntl_lock1_r9peK_closure" {
     c_fcntl_lock1_r9peK_closure:
         const c_fcntl_lock1_r9peK_info;
 },
 c_fcntl_lock1_r9peK_entry() //  [R2, R3, R4]
         { info_tbl: [(c9pXn,
                       label: c_fcntl_lock1_r9peK_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pXn: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9pXI; else goto c9pXJ;
       c9pXI: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_fcntl_lock1_r9peK_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pXJ: // global
           I64[Sp - 24] = block_c9pXk_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9pXQ; else goto c9pXl;
       u9pXQ: // global
           call _c9pXk(R1) args: 0, res: 0, upd: 0;
       c9pXl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pXk() //  [R1]
         { info_tbl: [(c9pXk,
                       label: block_c9pXk_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pXk: // global
           I64[Sp] = block_c9pXq_info;
           _s9plj::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9plj::I64;
           if (R1 & 7 != 0) goto u9pXP; else goto c9pXr;
       u9pXP: // global
           call _c9pXq(R1) args: 0, res: 0, upd: 0;
       c9pXr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pXq() //  [R1]
         { info_tbl: [(c9pXq,
                       label: block_c9pXq_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pXq: // global
           I64[Sp] = block_c9pXv_info;
           _s9pll::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pll::I64;
           if (R1 & 7 != 0) goto u9pXR; else goto c9pXw;
       u9pXR: // global
           call _c9pXv(R1) args: 0, res: 0, upd: 0;
       c9pXw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pXv() //  [R1]
         { info_tbl: [(c9pXv,
                       label: block_c9pXv_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pXv: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pXO; else goto c9pXN;
       c9pXO: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pXN: // global
           (_s9plr::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC15ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9plr::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.688526096 UTC

[section ""data" . System.Posix.Internals.c_fcntl_lock_closure" {
     System.Posix.Internals.c_fcntl_lock_closure:
         const System.Posix.Internals.c_fcntl_lock_info;
 },
 System.Posix.Internals.c_fcntl_lock_entry() //  [R2, R3, R4]
         { info_tbl: [(c9pXW,
                       label: System.Posix.Internals.c_fcntl_lock_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pXW: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_fcntl_lock1_r9peK_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.689423256 UTC

[section ""data" . c_fork1_r9peL_closure" {
     c_fork1_r9peL_closure:
         const c_fork1_r9peL_info;
 },
 c_fork1_r9peL_entry() //  []
         { info_tbl: [(c9pY6,
                       label: c_fork1_r9peL_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pY6: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pYc; else goto c9pYb;
       c9pYc: // global
           HpAlloc = 16;
           R1 = c_fork1_r9peL_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9pYb: // global
           (_s9ply::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] fork();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9ply::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.690344033 UTC

[section ""data" . System.Posix.Internals.c_fork_closure" {
     System.Posix.Internals.c_fork_closure:
         const System.Posix.Internals.c_fork_info;
 },
 System.Posix.Internals.c_fork_entry() //  []
         { info_tbl: [(c9pYh,
                       label: System.Posix.Internals.c_fork_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pYh: // global
           call c_fork1_r9peL_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.691435665 UTC

[section ""data" . c_link1_r9peM_closure" {
     c_link1_r9peM_closure:
         const c_link1_r9peM_info;
 },
 c_link1_r9peM_entry() //  [R2, R3]
         { info_tbl: [(c9pYr,
                       label: c_link1_r9peM_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pYr: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9pYG; else goto c9pYH;
       c9pYG: // global
           R3 = R3;
           R2 = R2;
           R1 = c_link1_r9peM_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pYH: // global
           I64[Sp - 16] = block_c9pYo_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9pYN; else goto c9pYp;
       u9pYN: // global
           call _c9pYo(R1) args: 0, res: 0, upd: 0;
       c9pYp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pYo() //  [R1]
         { info_tbl: [(c9pYo,
                       label: block_c9pYo_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pYo: // global
           I64[Sp] = block_c9pYu_info;
           _s9plF::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9plF::I64;
           if (R1 & 7 != 0) goto u9pYM; else goto c9pYv;
       u9pYM: // global
           call _c9pYu(R1) args: 0, res: 0, upd: 0;
       c9pYv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pYu() //  [R1]
         { info_tbl: [(c9pYu,
                       label: block_c9pYu_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pYu: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pYL; else goto c9pYK;
       c9pYL: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pYK: // global
           (_s9plL::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [‘signed’] link(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9plL::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.692863057 UTC

[section ""data" . System.Posix.Internals.c_link_closure" {
     System.Posix.Internals.c_link_closure:
         const System.Posix.Internals.c_link_info;
 },
 System.Posix.Internals.c_link_entry() //  [R2, R3]
         { info_tbl: [(c9pYS,
                       label: System.Posix.Internals.c_link_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pYS: // global
           R3 = R3;
           R2 = R2;
           call c_link1_r9peM_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.694245109 UTC

[section ""data" . c_mkfifo1_r9peN_closure" {
     c_mkfifo1_r9peN_closure:
         const c_mkfifo1_r9peN_info;
 },
 c_mkfifo1_r9peN_entry() //  [R2, R3]
         { info_tbl: [(c9pZ2,
                       label: c_mkfifo1_r9peN_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pZ2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9pZh; else goto c9pZi;
       c9pZh: // global
           R3 = R3;
           R2 = R2;
           R1 = c_mkfifo1_r9peN_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9pZi: // global
           I64[Sp - 16] = block_c9pYZ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9pZo; else goto c9pZ0;
       u9pZo: // global
           call _c9pYZ(R1) args: 0, res: 0, upd: 0;
       c9pZ0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pYZ() //  [R1]
         { info_tbl: [(c9pYZ,
                       label: block_c9pYZ_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pYZ: // global
           I64[Sp] = block_c9pZ5_info;
           _s9plS::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9plS::I64;
           if (R1 & 7 != 0) goto u9pZn; else goto c9pZ6;
       u9pZn: // global
           call _c9pZ5(R1) args: 0, res: 0, upd: 0;
       c9pZ6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pZ5() //  [R1]
         { info_tbl: [(c9pZ5,
                       label: block_c9pZ5_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pZ5: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pZm; else goto c9pZl;
       c9pZm: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pZl: // global
           (_s9plY::I64) = call "capi" arg hints:  [PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC14ZCbaseZCSystemziPosixziInternalsZCmkfifo(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9plY::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.69569854 UTC

[section ""data" . System.Posix.Internals.c_mkfifo_closure" {
     System.Posix.Internals.c_mkfifo_closure:
         const System.Posix.Internals.c_mkfifo_info;
 },
 System.Posix.Internals.c_mkfifo_entry() //  [R2, R3]
         { info_tbl: [(c9pZt,
                       label: System.Posix.Internals.c_mkfifo_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pZt: // global
           R3 = R3;
           R2 = R2;
           call c_mkfifo1_r9peN_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.696685447 UTC

[section ""data" . c_sigemptyset1_r9peO_closure" {
     c_sigemptyset1_r9peO_closure:
         const c_sigemptyset1_r9peO_info;
 },
 c_sigemptyset1_r9peO_entry() //  [R2]
         { info_tbl: [(c9pZD,
                       label: c_sigemptyset1_r9peO_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pZD: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9pZM; else goto c9pZN;
       c9pZM: // global
           R2 = R2;
           R1 = c_sigemptyset1_r9peO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9pZN: // global
           I64[Sp - 8] = block_c9pZA_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9pZR; else goto c9pZB;
       u9pZR: // global
           call _c9pZA(R1) args: 0, res: 0, upd: 0;
       c9pZB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9pZA() //  [R1]
         { info_tbl: [(c9pZA,
                       label: block_c9pZA_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pZA: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9pZQ; else goto c9pZP;
       c9pZQ: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9pZP: // global
           (_s9pm8::I64) = call "capi" arg hints:  [PtrHint]  result hints:  [‘signed’] ghczuwrapperZC13ZCbaseZCSystemziPosixziInternalsZCsigemptyset(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pm8::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.69796459 UTC

[section ""data" . System.Posix.Internals.c_sigemptyset_closure" {
     System.Posix.Internals.c_sigemptyset_closure:
         const System.Posix.Internals.c_sigemptyset_info;
 },
 System.Posix.Internals.c_sigemptyset_entry() //  [R2]
         { info_tbl: [(c9pZW,
                       label: System.Posix.Internals.c_sigemptyset_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9pZW: // global
           R2 = R2;
           call c_sigemptyset1_r9peO_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.699033967 UTC

[section ""data" . c_sigaddset1_r9peP_closure" {
     c_sigaddset1_r9peP_closure:
         const c_sigaddset1_r9peP_info;
 },
 c_sigaddset1_r9peP_entry() //  [R2, R3]
         { info_tbl: [(c9q06,
                       label: c_sigaddset1_r9peP_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q06: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9q0l; else goto c9q0m;
       c9q0l: // global
           R3 = R3;
           R2 = R2;
           R1 = c_sigaddset1_r9peP_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9q0m: // global
           I64[Sp - 16] = block_c9q03_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9q0s; else goto c9q04;
       u9q0s: // global
           call _c9q03(R1) args: 0, res: 0, upd: 0;
       c9q04: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q03() //  [R1]
         { info_tbl: [(c9q03,
                       label: block_c9q03_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q03: // global
           I64[Sp] = block_c9q09_info;
           _s9pmf::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pmf::I64;
           if (R1 & 7 != 0) goto u9q0r; else goto c9q0a;
       u9q0r: // global
           call _c9q09(R1) args: 0, res: 0, upd: 0;
       c9q0a: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q09() //  [R1]
         { info_tbl: [(c9q09,
                       label: block_c9q09_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q09: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q0q; else goto c9q0p;
       c9q0q: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9q0p: // global
           (_s9pml::I64) = call "capi" arg hints:  [PtrHint,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC12ZCbaseZCSystemziPosixziInternalsZCsigaddset(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pml::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.700508816 UTC

[section ""data" . System.Posix.Internals.c_sigaddset_closure" {
     System.Posix.Internals.c_sigaddset_closure:
         const System.Posix.Internals.c_sigaddset_info;
 },
 System.Posix.Internals.c_sigaddset_entry() //  [R2, R3]
         { info_tbl: [(c9q0x,
                       label: System.Posix.Internals.c_sigaddset_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q0x: // global
           R3 = R3;
           R2 = R2;
           call c_sigaddset1_r9peP_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.701659987 UTC

[section ""data" . c_sigprocmask1_r9peQ_closure" {
     c_sigprocmask1_r9peQ_closure:
         const c_sigprocmask1_r9peQ_info;
 },
 c_sigprocmask1_r9peQ_entry() //  [R2, R3, R4]
         { info_tbl: [(c9q0H,
                       label: c_sigprocmask1_r9peQ_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q0H: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9q12; else goto c9q13;
       c9q12: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_sigprocmask1_r9peQ_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9q13: // global
           I64[Sp - 24] = block_c9q0E_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9q1a; else goto c9q0F;
       u9q1a: // global
           call _c9q0E(R1) args: 0, res: 0, upd: 0;
       c9q0F: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q0E() //  [R1]
         { info_tbl: [(c9q0E,
                       label: block_c9q0E_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q0E: // global
           I64[Sp] = block_c9q0K_info;
           _s9pmt::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pmt::I64;
           if (R1 & 7 != 0) goto u9q19; else goto c9q0L;
       u9q19: // global
           call _c9q0K(R1) args: 0, res: 0, upd: 0;
       c9q0L: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q0K() //  [R1]
         { info_tbl: [(c9q0K,
                       label: block_c9q0K_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q0K: // global
           I64[Sp] = block_c9q0P_info;
           _s9pmv::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pmv::I64;
           if (R1 & 7 != 0) goto u9q1b; else goto c9q0Q;
       u9q1b: // global
           call _c9q0P(R1) args: 0, res: 0, upd: 0;
       c9q0Q: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q0P() //  [R1]
         { info_tbl: [(c9q0P,
                       label: block_c9q0P_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q0P: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q18; else goto c9q17;
       c9q18: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9q17: // global
           (_s9pmB::I64) = call "capi" arg hints:  [‘signed’, PtrHint,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC11ZCbaseZCSystemziPosixziInternalsZCsigprocmask(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pmB::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.703371832 UTC

[section ""data" . System.Posix.Internals.c_sigprocmask_closure" {
     System.Posix.Internals.c_sigprocmask_closure:
         const System.Posix.Internals.c_sigprocmask_info;
 },
 System.Posix.Internals.c_sigprocmask_entry() //  [R2, R3, R4]
         { info_tbl: [(c9q1g,
                       label: System.Posix.Internals.c_sigprocmask_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q1g: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_sigprocmask1_r9peQ_entry(R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.704535765 UTC

[section ""data" . c_tcgetattr1_r9peR_closure" {
     c_tcgetattr1_r9peR_closure:
         const c_tcgetattr1_r9peR_info;
 },
 c_tcgetattr1_r9peR_entry() //  [R2, R3]
         { info_tbl: [(c9q1q,
                       label: c_tcgetattr1_r9peR_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q1q: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9q1F; else goto c9q1G;
       c9q1F: // global
           R3 = R3;
           R2 = R2;
           R1 = c_tcgetattr1_r9peR_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9q1G: // global
           I64[Sp - 16] = block_c9q1n_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9q1M; else goto c9q1o;
       u9q1M: // global
           call _c9q1n(R1) args: 0, res: 0, upd: 0;
       c9q1o: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q1n() //  [R1]
         { info_tbl: [(c9q1n,
                       label: block_c9q1n_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q1n: // global
           I64[Sp] = block_c9q1t_info;
           _s9pmI::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pmI::I64;
           if (R1 & 7 != 0) goto u9q1L; else goto c9q1u;
       u9q1L: // global
           call _c9q1t(R1) args: 0, res: 0, upd: 0;
       c9q1u: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q1t() //  [R1]
         { info_tbl: [(c9q1t,
                       label: block_c9q1t_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q1t: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q1K; else goto c9q1J;
       c9q1K: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9q1J: // global
           (_s9pmO::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC10ZCbaseZCSystemziPosixziInternalsZCtcgetattr(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pmO::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.706229944 UTC

[section ""data" . System.Posix.Internals.c_tcgetattr_closure" {
     System.Posix.Internals.c_tcgetattr_closure:
         const System.Posix.Internals.c_tcgetattr_info;
 },
 System.Posix.Internals.c_tcgetattr_entry() //  [R2, R3]
         { info_tbl: [(c9q1R,
                       label: System.Posix.Internals.c_tcgetattr_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q1R: // global
           R3 = R3;
           R2 = R2;
           call c_tcgetattr1_r9peR_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.707418029 UTC

[section ""data" . c_tcsetattr1_r9peS_closure" {
     c_tcsetattr1_r9peS_closure:
         const c_tcsetattr1_r9peS_info;
 },
 c_tcsetattr1_r9peS_entry() //  [R2, R3, R4]
         { info_tbl: [(c9q21,
                       label: c_tcsetattr1_r9peS_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q21: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9q2m; else goto c9q2n;
       c9q2m: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_tcsetattr1_r9peS_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9q2n: // global
           I64[Sp - 24] = block_c9q1Y_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9q2u; else goto c9q1Z;
       u9q2u: // global
           call _c9q1Y(R1) args: 0, res: 0, upd: 0;
       c9q1Z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q1Y() //  [R1]
         { info_tbl: [(c9q1Y,
                       label: block_c9q1Y_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q1Y: // global
           I64[Sp] = block_c9q24_info;
           _s9pmW::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pmW::I64;
           if (R1 & 7 != 0) goto u9q2t; else goto c9q25;
       u9q2t: // global
           call _c9q24(R1) args: 0, res: 0, upd: 0;
       c9q25: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q24() //  [R1]
         { info_tbl: [(c9q24,
                       label: block_c9q24_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q24: // global
           I64[Sp] = block_c9q29_info;
           _s9pmY::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pmY::I64;
           if (R1 & 7 != 0) goto u9q2v; else goto c9q2a;
       u9q2v: // global
           call _c9q29(R1) args: 0, res: 0, upd: 0;
       c9q2a: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q29() //  [R1]
         { info_tbl: [(c9q29,
                       label: block_c9q29_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q29: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q2s; else goto c9q2r;
       c9q2s: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9q2r: // global
           (_s9pn4::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC9ZCbaseZCSystemziPosixziInternalsZCtcsetattr(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pn4::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.709099338 UTC

[section ""data" . System.Posix.Internals.c_tcsetattr_closure" {
     System.Posix.Internals.c_tcsetattr_closure:
         const System.Posix.Internals.c_tcsetattr_info;
 },
 System.Posix.Internals.c_tcsetattr_entry() //  [R2, R3, R4]
         { info_tbl: [(c9q2A,
                       label: System.Posix.Internals.c_tcsetattr_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q2A: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_tcsetattr1_r9peS_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.710322122 UTC

[section ""data" . c_waitpid1_r9peT_closure" {
     c_waitpid1_r9peT_closure:
         const c_waitpid1_r9peT_info;
 },
 c_waitpid1_r9peT_entry() //  [R2, R3, R4]
         { info_tbl: [(c9q2K,
                       label: c_waitpid1_r9peT_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q2K: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9q35; else goto c9q36;
       c9q35: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_waitpid1_r9peT_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9q36: // global
           I64[Sp - 24] = block_c9q2H_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9q3d; else goto c9q2I;
       u9q3d: // global
           call _c9q2H(R1) args: 0, res: 0, upd: 0;
       c9q2I: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q2H() //  [R1]
         { info_tbl: [(c9q2H,
                       label: block_c9q2H_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q2H: // global
           I64[Sp] = block_c9q2N_info;
           _s9pnc::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pnc::I64;
           if (R1 & 7 != 0) goto u9q3c; else goto c9q2O;
       u9q3c: // global
           call _c9q2N(R1) args: 0, res: 0, upd: 0;
       c9q2O: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q2N() //  [R1]
         { info_tbl: [(c9q2N,
                       label: block_c9q2N_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q2N: // global
           I64[Sp] = block_c9q2S_info;
           _s9pne::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pne::I64;
           if (R1 & 7 != 0) goto u9q3e; else goto c9q2T;
       u9q3e: // global
           call _c9q2S(R1) args: 0, res: 0, upd: 0;
       c9q2T: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q2S() //  [R1]
         { info_tbl: [(c9q2S,
                       label: block_c9q2S_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q2S: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q3b; else goto c9q3a;
       c9q3b: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9q3a: // global
           (_s9pnk::I64) = call "ccall" arg hints:  [‘signed’, PtrHint,
                                                     ‘signed’]  result hints:  [‘signed’] waitpid(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnk::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.712049294 UTC

[section ""data" . System.Posix.Internals.c_waitpid_closure" {
     System.Posix.Internals.c_waitpid_closure:
         const System.Posix.Internals.c_waitpid_info;
 },
 System.Posix.Internals.c_waitpid_entry() //  [R2, R3, R4]
         { info_tbl: [(c9q3j,
                       label: System.Posix.Internals.c_waitpid_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q3j: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_waitpid1_r9peT_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.712987624 UTC

[section ""data" . o_RDONLY1_r9peU_closure" {
     o_RDONLY1_r9peU_closure:
         const o_RDONLY1_r9peU_info;
         const 0;
         const 0;
         const 0;
 },
 o_RDONLY1_r9peU_entry() //  [R1]
         { info_tbl: [(c9q3v,
                       label: o_RDONLY1_r9peU_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q3v: // global
           _r9peU::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9q3y; else goto c9q3z;
       c9q3z: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q3B; else goto c9q3A;
       c9q3B: // global
           HpAlloc = 16;
           goto c9q3y;
       c9q3y: // global
           R1 = _r9peU::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9q3A: // global
           (_c9q3p::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peU::P64);
           if (_c9q3p::I64 == 0) goto c9q3r; else goto c9q3q;
       c9q3r: // global
           call (I64[I64[_r9peU::P64]])() args: 8, res: 0, upd: 8;
       c9q3q: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9q3p::I64;
           (_s9pnq::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_rdonly();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnq::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.714018316 UTC

[section ""data" . System.Posix.Internals.o_RDONLY_closure" {
     System.Posix.Internals.o_RDONLY_closure:
         const stg_IND_STATIC_info;
         const o_RDONLY1_r9peU_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.71481269 UTC

[section ""data" . o_WRONLY1_r9peV_closure" {
     o_WRONLY1_r9peV_closure:
         const o_WRONLY1_r9peV_info;
         const 0;
         const 0;
         const 0;
 },
 o_WRONLY1_r9peV_entry() //  [R1]
         { info_tbl: [(c9q3L,
                       label: o_WRONLY1_r9peV_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q3L: // global
           _r9peV::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9q3O; else goto c9q3P;
       c9q3P: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q3R; else goto c9q3Q;
       c9q3R: // global
           HpAlloc = 16;
           goto c9q3O;
       c9q3O: // global
           R1 = _r9peV::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9q3Q: // global
           (_c9q3F::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peV::P64);
           if (_c9q3F::I64 == 0) goto c9q3H; else goto c9q3G;
       c9q3H: // global
           call (I64[I64[_r9peV::P64]])() args: 8, res: 0, upd: 8;
       c9q3G: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9q3F::I64;
           (_s9pnv::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_wronly();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnv::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.715811538 UTC

[section ""data" . System.Posix.Internals.o_WRONLY_closure" {
     System.Posix.Internals.o_WRONLY_closure:
         const stg_IND_STATIC_info;
         const o_WRONLY1_r9peV_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.716607689 UTC

[section ""data" . o_RDWR1_r9peW_closure" {
     o_RDWR1_r9peW_closure:
         const o_RDWR1_r9peW_info;
         const 0;
         const 0;
         const 0;
 },
 o_RDWR1_r9peW_entry() //  [R1]
         { info_tbl: [(c9q41,
                       label: o_RDWR1_r9peW_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q41: // global
           _r9peW::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9q44; else goto c9q45;
       c9q45: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q47; else goto c9q46;
       c9q47: // global
           HpAlloc = 16;
           goto c9q44;
       c9q44: // global
           R1 = _r9peW::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9q46: // global
           (_c9q3V::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peW::P64);
           if (_c9q3V::I64 == 0) goto c9q3X; else goto c9q3W;
       c9q3X: // global
           call (I64[I64[_r9peW::P64]])() args: 8, res: 0, upd: 8;
       c9q3W: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9q3V::I64;
           (_s9pnA::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_rdwr();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnA::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.717874269 UTC

[section ""data" . System.Posix.Internals.o_RDWR_closure" {
     System.Posix.Internals.o_RDWR_closure:
         const stg_IND_STATIC_info;
         const o_RDWR1_r9peW_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.718690261 UTC

[section ""data" . o_APPEND1_r9peX_closure" {
     o_APPEND1_r9peX_closure:
         const o_APPEND1_r9peX_info;
         const 0;
         const 0;
         const 0;
 },
 o_APPEND1_r9peX_entry() //  [R1]
         { info_tbl: [(c9q4h,
                       label: o_APPEND1_r9peX_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q4h: // global
           _r9peX::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9q4k; else goto c9q4l;
       c9q4l: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q4n; else goto c9q4m;
       c9q4n: // global
           HpAlloc = 16;
           goto c9q4k;
       c9q4k: // global
           R1 = _r9peX::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9q4m: // global
           (_c9q4b::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peX::P64);
           if (_c9q4b::I64 == 0) goto c9q4d; else goto c9q4c;
       c9q4d: // global
           call (I64[I64[_r9peX::P64]])() args: 8, res: 0, upd: 8;
       c9q4c: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9q4b::I64;
           (_s9pnF::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_append();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnF::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.721464048 UTC

[section ""data" . System.Posix.Internals.o_APPEND_closure" {
     System.Posix.Internals.o_APPEND_closure:
         const stg_IND_STATIC_info;
         const o_APPEND1_r9peX_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.722254655 UTC

[section ""data" . o_CREAT1_r9peY_closure" {
     o_CREAT1_r9peY_closure:
         const o_CREAT1_r9peY_info;
         const 0;
         const 0;
         const 0;
 },
 o_CREAT1_r9peY_entry() //  [R1]
         { info_tbl: [(c9q4x,
                       label: o_CREAT1_r9peY_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q4x: // global
           _r9peY::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9q4A; else goto c9q4B;
       c9q4B: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q4D; else goto c9q4C;
       c9q4D: // global
           HpAlloc = 16;
           goto c9q4A;
       c9q4A: // global
           R1 = _r9peY::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9q4C: // global
           (_c9q4r::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peY::P64);
           if (_c9q4r::I64 == 0) goto c9q4t; else goto c9q4s;
       c9q4t: // global
           call (I64[I64[_r9peY::P64]])() args: 8, res: 0, upd: 8;
       c9q4s: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9q4r::I64;
           (_s9pnK::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_creat();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnK::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.723255603 UTC

[section ""data" . System.Posix.Internals.o_CREAT_closure" {
     System.Posix.Internals.o_CREAT_closure:
         const stg_IND_STATIC_info;
         const o_CREAT1_r9peY_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.72405501 UTC

[section ""data" . o_EXCL1_r9peZ_closure" {
     o_EXCL1_r9peZ_closure:
         const o_EXCL1_r9peZ_info;
         const 0;
         const 0;
         const 0;
 },
 o_EXCL1_r9peZ_entry() //  [R1]
         { info_tbl: [(c9q4N,
                       label: o_EXCL1_r9peZ_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q4N: // global
           _r9peZ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9q4Q; else goto c9q4R;
       c9q4R: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q4T; else goto c9q4S;
       c9q4T: // global
           HpAlloc = 16;
           goto c9q4Q;
       c9q4Q: // global
           R1 = _r9peZ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9q4S: // global
           (_c9q4H::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peZ::P64);
           if (_c9q4H::I64 == 0) goto c9q4J; else goto c9q4I;
       c9q4J: // global
           call (I64[I64[_r9peZ::P64]])() args: 8, res: 0, upd: 8;
       c9q4I: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9q4H::I64;
           (_s9pnP::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_excl();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnP::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.725111798 UTC

[section ""data" . System.Posix.Internals.o_EXCL_closure" {
     System.Posix.Internals.o_EXCL_closure:
         const stg_IND_STATIC_info;
         const o_EXCL1_r9peZ_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.72591867 UTC

[section ""data" . o_TRUNC1_r9pf0_closure" {
     o_TRUNC1_r9pf0_closure:
         const o_TRUNC1_r9pf0_info;
         const 0;
         const 0;
         const 0;
 },
 o_TRUNC1_r9pf0_entry() //  [R1]
         { info_tbl: [(c9q53,
                       label: o_TRUNC1_r9pf0_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q53: // global
           _r9pf0::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9q56; else goto c9q57;
       c9q57: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q59; else goto c9q58;
       c9q59: // global
           HpAlloc = 16;
           goto c9q56;
       c9q56: // global
           R1 = _r9pf0::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9q58: // global
           (_c9q4X::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pf0::P64);
           if (_c9q4X::I64 == 0) goto c9q4Z; else goto c9q4Y;
       c9q4Z: // global
           call (I64[I64[_r9pf0::P64]])() args: 8, res: 0, upd: 8;
       c9q4Y: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9q4X::I64;
           (_s9pnU::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_trunc();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnU::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.726912703 UTC

[section ""data" . System.Posix.Internals.o_TRUNC_closure" {
     System.Posix.Internals.o_TRUNC_closure:
         const stg_IND_STATIC_info;
         const o_TRUNC1_r9pf0_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.727701447 UTC

[section ""data" . o_NOCTTY1_r9pf1_closure" {
     o_NOCTTY1_r9pf1_closure:
         const o_NOCTTY1_r9pf1_info;
         const 0;
         const 0;
         const 0;
 },
 o_NOCTTY1_r9pf1_entry() //  [R1]
         { info_tbl: [(c9q5j,
                       label: o_NOCTTY1_r9pf1_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q5j: // global
           _r9pf1::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9q5m; else goto c9q5n;
       c9q5n: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q5p; else goto c9q5o;
       c9q5p: // global
           HpAlloc = 16;
           goto c9q5m;
       c9q5m: // global
           R1 = _r9pf1::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9q5o: // global
           (_c9q5d::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pf1::P64);
           if (_c9q5d::I64 == 0) goto c9q5f; else goto c9q5e;
       c9q5f: // global
           call (I64[I64[_r9pf1::P64]])() args: 8, res: 0, upd: 8;
       c9q5e: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9q5d::I64;
           (_s9pnZ::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_noctty();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnZ::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.728697298 UTC

[section ""data" . System.Posix.Internals.o_NOCTTY_closure" {
     System.Posix.Internals.o_NOCTTY_closure:
         const stg_IND_STATIC_info;
         const o_NOCTTY1_r9pf1_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.7297553 UTC

[section ""data" . o_NONBLOCK1_r9pf2_closure" {
     o_NONBLOCK1_r9pf2_closure:
         const o_NONBLOCK1_r9pf2_info;
         const 0;
         const 0;
         const 0;
 },
 o_NONBLOCK1_r9pf2_entry() //  [R1]
         { info_tbl: [(c9q5z,
                       label: o_NONBLOCK1_r9pf2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q5z: // global
           _r9pf2::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9q5C; else goto c9q5D;
       c9q5D: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q5F; else goto c9q5E;
       c9q5F: // global
           HpAlloc = 16;
           goto c9q5C;
       c9q5C: // global
           R1 = _r9pf2::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9q5E: // global
           (_c9q5t::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pf2::P64);
           if (_c9q5t::I64 == 0) goto c9q5v; else goto c9q5u;
       c9q5v: // global
           call (I64[I64[_r9pf2::P64]])() args: 8, res: 0, upd: 8;
       c9q5u: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9q5t::I64;
           (_s9po4::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_nonblock();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9po4::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.730715445 UTC

[section ""data" . System.Posix.Internals.o_NONBLOCK_closure" {
     System.Posix.Internals.o_NONBLOCK_closure:
         const stg_IND_STATIC_info;
         const o_NONBLOCK1_r9pf2_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.731454131 UTC

[section ""data" . o_BINARY1_r9pf3_closure" {
     o_BINARY1_r9pf3_closure:
         const o_BINARY1_r9pf3_info;
         const 0;
         const 0;
         const 0;
 },
 o_BINARY1_r9pf3_entry() //  [R1]
         { info_tbl: [(c9q5P,
                       label: o_BINARY1_r9pf3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q5P: // global
           _r9pf3::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9q5S; else goto c9q5T;
       c9q5T: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q5V; else goto c9q5U;
       c9q5V: // global
           HpAlloc = 16;
           goto c9q5S;
       c9q5S: // global
           R1 = _r9pf3::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9q5U: // global
           (_c9q5J::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pf3::P64);
           if (_c9q5J::I64 == 0) goto c9q5L; else goto c9q5K;
       c9q5L: // global
           call (I64[I64[_r9pf3::P64]])() args: 8, res: 0, upd: 8;
       c9q5K: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9q5J::I64;
           (_s9po9::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_binary();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9po9::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.732447041 UTC

[section ""data" . System.Posix.Internals.o_BINARY_closure" {
     System.Posix.Internals.o_BINARY_closure:
         const stg_IND_STATIC_info;
         const o_BINARY1_r9pf3_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.733374935 UTC

[section ""data" . c_s_isreg1_r9pf4_closure" {
     c_s_isreg1_r9pf4_closure:
         const c_s_isreg1_r9pf4_info;
 },
 c_s_isreg1_r9pf4_entry() //  [R2]
         { info_tbl: [(c9q63,
                       label: c_s_isreg1_r9pf4_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q63: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9q6c; else goto c9q6d;
       c9q6c: // global
           R2 = R2;
           R1 = c_s_isreg1_r9pf4_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9q6d: // global
           I64[Sp - 8] = block_c9q60_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9q6h; else goto c9q61;
       u9q6h: // global
           call _c9q60(R1) args: 0, res: 0, upd: 0;
       c9q61: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q60() //  [R1]
         { info_tbl: [(c9q60,
                       label: block_c9q60_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q60: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q6g; else goto c9q6f;
       c9q6g: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9q6f: // global
           (_s9poh::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9poh::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.734591831 UTC

[section ""data" . System.Posix.Internals.c_s_isreg_closure" {
     System.Posix.Internals.c_s_isreg_closure:
         const System.Posix.Internals.c_s_isreg_info;
 },
 System.Posix.Internals.c_s_isreg_entry() //  [R2]
         { info_tbl: [(c9q6m,
                       label: System.Posix.Internals.c_s_isreg_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q6m: // global
           R2 = R2;
           call c_s_isreg1_r9pf4_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.735556267 UTC

[section ""data" . c_s_ischr1_r9pf5_closure" {
     c_s_ischr1_r9pf5_closure:
         const c_s_ischr1_r9pf5_info;
 },
 c_s_ischr1_r9pf5_entry() //  [R2]
         { info_tbl: [(c9q6w,
                       label: c_s_ischr1_r9pf5_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q6w: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9q6F; else goto c9q6G;
       c9q6F: // global
           R2 = R2;
           R1 = c_s_ischr1_r9pf5_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9q6G: // global
           I64[Sp - 8] = block_c9q6t_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9q6K; else goto c9q6u;
       u9q6K: // global
           call _c9q6t(R1) args: 0, res: 0, upd: 0;
       c9q6u: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q6t() //  [R1]
         { info_tbl: [(c9q6t,
                       label: block_c9q6t_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q6t: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q6J; else goto c9q6I;
       c9q6J: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9q6I: // global
           (_s9pop::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC7ZCbaseZCSystemziPosixziInternalsZCSzuISCHR(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pop::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.73679067 UTC

[section ""data" . System.Posix.Internals.c_s_ischr_closure" {
     System.Posix.Internals.c_s_ischr_closure:
         const System.Posix.Internals.c_s_ischr_info;
 },
 System.Posix.Internals.c_s_ischr_entry() //  [R2]
         { info_tbl: [(c9q6P,
                       label: System.Posix.Internals.c_s_ischr_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q6P: // global
           R2 = R2;
           call c_s_ischr1_r9pf5_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.737781752 UTC

[section ""data" . c_s_isblk1_r9pf6_closure" {
     c_s_isblk1_r9pf6_closure:
         const c_s_isblk1_r9pf6_info;
 },
 c_s_isblk1_r9pf6_entry() //  [R2]
         { info_tbl: [(c9q6Z,
                       label: c_s_isblk1_r9pf6_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q6Z: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9q78; else goto c9q79;
       c9q78: // global
           R2 = R2;
           R1 = c_s_isblk1_r9pf6_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9q79: // global
           I64[Sp - 8] = block_c9q6W_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9q7d; else goto c9q6X;
       u9q7d: // global
           call _c9q6W(R1) args: 0, res: 0, upd: 0;
       c9q6X: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q6W() //  [R1]
         { info_tbl: [(c9q6W,
                       label: block_c9q6W_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q6W: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q7c; else goto c9q7b;
       c9q7c: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9q7b: // global
           (_s9pox::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC6ZCbaseZCSystemziPosixziInternalsZCSzuISBLK(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pox::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.73899476 UTC

[section ""data" . System.Posix.Internals.c_s_isblk_closure" {
     System.Posix.Internals.c_s_isblk_closure:
         const System.Posix.Internals.c_s_isblk_info;
 },
 System.Posix.Internals.c_s_isblk_entry() //  [R2]
         { info_tbl: [(c9q7i,
                       label: System.Posix.Internals.c_s_isblk_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q7i: // global
           R2 = R2;
           call c_s_isblk1_r9pf6_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.739957679 UTC

[section ""data" . c_s_isdir1_r9pf7_closure" {
     c_s_isdir1_r9pf7_closure:
         const c_s_isdir1_r9pf7_info;
 },
 c_s_isdir1_r9pf7_entry() //  [R2]
         { info_tbl: [(c9q7s,
                       label: c_s_isdir1_r9pf7_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q7s: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9q7B; else goto c9q7C;
       c9q7B: // global
           R2 = R2;
           R1 = c_s_isdir1_r9pf7_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9q7C: // global
           I64[Sp - 8] = block_c9q7p_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9q7G; else goto c9q7q;
       u9q7G: // global
           call _c9q7p(R1) args: 0, res: 0, upd: 0;
       c9q7q: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q7p() //  [R1]
         { info_tbl: [(c9q7p,
                       label: block_c9q7p_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q7p: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q7F; else goto c9q7E;
       c9q7F: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9q7E: // global
           (_s9poF::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC5ZCbaseZCSystemziPosixziInternalsZCSzuISDIR(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9poF::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.74115825 UTC

[section ""data" . System.Posix.Internals.c_s_isdir_closure" {
     System.Posix.Internals.c_s_isdir_closure:
         const System.Posix.Internals.c_s_isdir_info;
 },
 System.Posix.Internals.c_s_isdir_entry() //  [R2]
         { info_tbl: [(c9q7L,
                       label: System.Posix.Internals.c_s_isdir_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q7L: // global
           R2 = R2;
           call c_s_isdir1_r9pf7_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.742418123 UTC

[section ""data" . c_s_isfifo1_r9pf8_closure" {
     c_s_isfifo1_r9pf8_closure:
         const c_s_isfifo1_r9pf8_info;
 },
 c_s_isfifo1_r9pf8_entry() //  [R2]
         { info_tbl: [(c9q7V,
                       label: c_s_isfifo1_r9pf8_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q7V: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9q84; else goto c9q85;
       c9q84: // global
           R2 = R2;
           R1 = c_s_isfifo1_r9pf8_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9q85: // global
           I64[Sp - 8] = block_c9q7S_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9q89; else goto c9q7T;
       u9q89: // global
           call _c9q7S(R1) args: 0, res: 0, upd: 0;
       c9q7T: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q7S() //  [R1]
         { info_tbl: [(c9q7S,
                       label: block_c9q7S_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q7S: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q88; else goto c9q87;
       c9q88: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9q87: // global
           (_s9poN::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC4ZCbaseZCSystemziPosixziInternalsZCSzuISFIFO(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9poN::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.743665101 UTC

[section ""data" . System.Posix.Internals.c_s_isfifo_closure" {
     System.Posix.Internals.c_s_isfifo_closure:
         const System.Posix.Internals.c_s_isfifo_info;
 },
 System.Posix.Internals.c_s_isfifo_entry() //  [R2]
         { info_tbl: [(c9q8e,
                       label: System.Posix.Internals.c_s_isfifo_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q8e: // global
           R2 = R2;
           call c_s_isfifo1_r9pf8_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.744568181 UTC

[section ""data" . System.Posix.Internals.sizeof_stat_closure" {
     System.Posix.Internals.sizeof_stat_closure:
         const System.Posix.Internals.sizeof_stat_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.sizeof_stat_entry() //  [R1]
         { info_tbl: [(c9q8p,
                       label: System.Posix.Internals.sizeof_stat_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q8p: // global
           _r9lgf::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9q8q; else goto c9q8r;
       c9q8r: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q8t; else goto c9q8s;
       c9q8t: // global
           HpAlloc = 16;
           goto c9q8q;
       c9q8q: // global
           R1 = _r9lgf::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9q8s: // global
           (_c9q8k::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9lgf::P64);
           if (_c9q8k::I64 == 0) goto c9q8m; else goto c9q8l;
       c9q8m: // global
           call (I64[I64[_r9lgf::P64]])() args: 8, res: 0, upd: 8;
       c9q8l: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9q8k::I64;
           (_s9poS::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_stat();
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9poS::I64;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.745901122 UTC

[section ""data" . st_mtime1_r9pf9_closure" {
     st_mtime1_r9pf9_closure:
         const st_mtime1_r9pf9_info;
 },
 st_mtime1_r9pf9_entry() //  [R2]
         { info_tbl: [(c9q8B,
                       label: st_mtime1_r9pf9_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q8B: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9q8H; else goto c9q8I;
       c9q8H: // global
           R2 = R2;
           R1 = st_mtime1_r9pf9_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9q8I: // global
           I64[Sp - 8] = block_c9q8y_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9q8M; else goto c9q8z;
       u9q8M: // global
           call _c9q8y(R1) args: 0, res: 0, upd: 0;
       c9q8z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q8y() //  [R1]
         { info_tbl: [(c9q8y,
                       label: block_c9q8y_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q8y: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q8L; else goto c9q8K;
       c9q8L: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9q8K: // global
           (_s9pp0::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] __hscore_st_mtime(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9pp0::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.747119966 UTC

[section ""data" . System.Posix.Internals.st_mtime_closure" {
     System.Posix.Internals.st_mtime_closure:
         const System.Posix.Internals.st_mtime_info;
 },
 System.Posix.Internals.st_mtime_entry() //  [R2]
         { info_tbl: [(c9q8R,
                       label: System.Posix.Internals.st_mtime_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q8R: // global
           R2 = R2;
           call st_mtime1_r9pf9_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.748076064 UTC

[section ""data" . st_size1_r9pfa_closure" {
     st_size1_r9pfa_closure:
         const st_size1_r9pfa_info;
 },
 st_size1_r9pfa_entry() //  [R2]
         { info_tbl: [(c9q91,
                       label: st_size1_r9pfa_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q91: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9q97; else goto c9q98;
       c9q97: // global
           R2 = R2;
           R1 = st_size1_r9pfa_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9q98: // global
           I64[Sp - 8] = block_c9q8Y_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9q9c; else goto c9q8Z;
       u9q9c: // global
           call _c9q8Y(R1) args: 0, res: 0, upd: 0;
       c9q8Z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q8Y() //  [R1]
         { info_tbl: [(c9q8Y,
                       label: block_c9q8Y_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q8Y: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q9b; else goto c9q9a;
       c9q9b: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9q9a: // global
           (_s9pp9::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] __hscore_st_size(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9pp9::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.749287586 UTC

[section ""data" . System.Posix.Internals.st_size_closure" {
     System.Posix.Internals.st_size_closure:
         const System.Posix.Internals.st_size_info;
 },
 System.Posix.Internals.st_size_entry() //  [R2]
         { info_tbl: [(c9q9h,
                       label: System.Posix.Internals.st_size_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q9h: // global
           R2 = R2;
           call st_size1_r9pfa_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.750271485 UTC

[section ""data" . st_mode1_r9pfb_closure" {
     st_mode1_r9pfb_closure:
         const st_mode1_r9pfb_info;
 },
 st_mode1_r9pfb_entry() //  [R2]
         { info_tbl: [(c9q9r,
                       label: st_mode1_r9pfb_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q9r: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9q9A; else goto c9q9B;
       c9q9A: // global
           R2 = R2;
           R1 = st_mode1_r9pfb_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9q9B: // global
           I64[Sp - 8] = block_c9q9o_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9q9F; else goto c9q9p;
       u9q9F: // global
           call _c9q9o(R1) args: 0, res: 0, upd: 0;
       c9q9p: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q9o() //  [R1]
         { info_tbl: [(c9q9o,
                       label: block_c9q9o_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q9o: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9q9E; else goto c9q9D;
       c9q9E: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9q9D: // global
           (_s9ppi::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_mode(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Word.W32#_con_info;
           I64[Hp] = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9ppi::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.751429949 UTC

[section ""data" . System.Posix.Internals.st_mode_closure" {
     System.Posix.Internals.st_mode_closure:
         const System.Posix.Internals.st_mode_info;
 },
 System.Posix.Internals.st_mode_entry() //  [R2]
         { info_tbl: [(c9q9K,
                       label: System.Posix.Internals.st_mode_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q9K: // global
           R2 = R2;
           call st_mode1_r9pfb_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.752446303 UTC

[section ""data" . st_dev1_r9pfc_closure" {
     st_dev1_r9pfc_closure:
         const st_dev1_r9pfc_info;
 },
 st_dev1_r9pfc_entry() //  [R2]
         { info_tbl: [(c9q9U,
                       label: st_dev1_r9pfc_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q9U: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qa0; else goto c9qa1;
       c9qa0: // global
           R2 = R2;
           R1 = st_dev1_r9pfc_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qa1: // global
           I64[Sp - 8] = block_c9q9R_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qa5; else goto c9q9S;
       u9qa5: // global
           call _c9q9R(R1) args: 0, res: 0, upd: 0;
       c9q9S: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9q9R() //  [R1]
         { info_tbl: [(c9q9R,
                       label: block_c9q9R_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9q9R: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qa4; else goto c9qa3;
       c9qa4: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qa3: // global
           (_s9pps::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Word.W64#_con_info;
           I64[Hp] = _s9pps::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.753943925 UTC

[section ""data" . System.Posix.Internals.st_dev_closure" {
     System.Posix.Internals.st_dev_closure:
         const System.Posix.Internals.st_dev_info;
 },
 System.Posix.Internals.st_dev_entry() //  [R2]
         { info_tbl: [(c9qaa,
                       label: System.Posix.Internals.st_dev_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qaa: // global
           R2 = R2;
           call st_dev1_r9pfc_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.754877645 UTC

[section ""data" . st_ino1_r9pfd_closure" {
     st_ino1_r9pfd_closure:
         const st_ino1_r9pfd_info;
 },
 st_ino1_r9pfd_entry() //  [R2]
         { info_tbl: [(c9qak,
                       label: st_ino1_r9pfd_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qak: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qaq; else goto c9qar;
       c9qaq: // global
           R2 = R2;
           R1 = st_ino1_r9pfd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qar: // global
           I64[Sp - 8] = block_c9qah_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qav; else goto c9qai;
       u9qav: // global
           call _c9qah(R1) args: 0, res: 0, upd: 0;
       c9qai: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qah() //  [R1]
         { info_tbl: [(c9qah,
                       label: block_c9qah_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qah: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qau; else goto c9qat;
       c9qau: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qat: // global
           (_s9ppB::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Word.W64#_con_info;
           I64[Hp] = _s9ppB::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.756068483 UTC

[section ""data" . System.Posix.Internals.st_ino_closure" {
     System.Posix.Internals.st_ino_closure:
         const System.Posix.Internals.st_ino_info;
 },
 System.Posix.Internals.st_ino_entry() //  [R2]
         { info_tbl: [(c9qaA,
                       label: System.Posix.Internals.st_ino_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qaA: // global
           R2 = R2;
           call st_ino1_r9pfd_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.756946808 UTC

[section ""data" . const_echo1_r9pfe_closure" {
     const_echo1_r9pfe_closure:
         const const_echo1_r9pfe_info;
         const 0;
         const 0;
         const 0;
 },
 const_echo1_r9pfe_entry() //  [R1]
         { info_tbl: [(c9qaM,
                       label: const_echo1_r9pfe_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qaM: // global
           _r9pfe::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9qaP; else goto c9qaQ;
       c9qaQ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qaS; else goto c9qaR;
       c9qaS: // global
           HpAlloc = 16;
           goto c9qaP;
       c9qaP: // global
           R1 = _r9pfe::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qaR: // global
           (_c9qaG::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfe::P64);
           if (_c9qaG::I64 == 0) goto c9qaI; else goto c9qaH;
       c9qaI: // global
           call (I64[I64[_r9pfe::P64]])() args: 8, res: 0, upd: 8;
       c9qaH: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qaG::I64;
           (_s9ppG::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_echo();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9ppG::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.757964953 UTC

[section ""data" . System.Posix.Internals.const_echo_closure" {
     System.Posix.Internals.const_echo_closure:
         const stg_IND_STATIC_info;
         const const_echo1_r9pfe_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.758743036 UTC

[section ""data" . const_tcsanow1_r9pff_closure" {
     const_tcsanow1_r9pff_closure:
         const const_tcsanow1_r9pff_info;
         const 0;
         const 0;
         const 0;
 },
 const_tcsanow1_r9pff_entry() //  [R1]
         { info_tbl: [(c9qb2,
                       label: const_tcsanow1_r9pff_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qb2: // global
           _r9pff::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9qb5; else goto c9qb6;
       c9qb6: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qb8; else goto c9qb7;
       c9qb8: // global
           HpAlloc = 16;
           goto c9qb5;
       c9qb5: // global
           R1 = _r9pff::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qb7: // global
           (_c9qaW::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pff::P64);
           if (_c9qaW::I64 == 0) goto c9qaY; else goto c9qaX;
       c9qaY: // global
           call (I64[I64[_r9pff::P64]])() args: 8, res: 0, upd: 8;
       c9qaX: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qaW::I64;
           (_s9ppL::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_tcsanow();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9ppL::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.759759716 UTC

[section ""data" . System.Posix.Internals.const_tcsanow_closure" {
     System.Posix.Internals.const_tcsanow_closure:
         const stg_IND_STATIC_info;
         const const_tcsanow1_r9pff_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.760540361 UTC

[section ""data" . const_icanon1_r9pfg_closure" {
     const_icanon1_r9pfg_closure:
         const const_icanon1_r9pfg_info;
         const 0;
         const 0;
         const 0;
 },
 const_icanon1_r9pfg_entry() //  [R1]
         { info_tbl: [(c9qbi,
                       label: const_icanon1_r9pfg_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qbi: // global
           _r9pfg::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9qbl; else goto c9qbm;
       c9qbm: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qbo; else goto c9qbn;
       c9qbo: // global
           HpAlloc = 16;
           goto c9qbl;
       c9qbl: // global
           R1 = _r9pfg::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qbn: // global
           (_c9qbc::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfg::P64);
           if (_c9qbc::I64 == 0) goto c9qbe; else goto c9qbd;
       c9qbe: // global
           call (I64[I64[_r9pfg::P64]])() args: 8, res: 0, upd: 8;
       c9qbd: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qbc::I64;
           (_s9ppQ::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_icanon();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9ppQ::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.761555403 UTC

[section ""data" . System.Posix.Internals.const_icanon_closure" {
     System.Posix.Internals.const_icanon_closure:
         const stg_IND_STATIC_info;
         const const_icanon1_r9pfg_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.762330531 UTC

[section ""data" . const_vmin1_r9pfh_closure" {
     const_vmin1_r9pfh_closure:
         const const_vmin1_r9pfh_info;
         const 0;
         const 0;
         const 0;
 },
 const_vmin1_r9pfh_entry() //  [R1]
         { info_tbl: [(c9qby,
                       label: const_vmin1_r9pfh_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qby: // global
           _r9pfh::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9qbB; else goto c9qbC;
       c9qbC: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qbE; else goto c9qbD;
       c9qbE: // global
           HpAlloc = 16;
           goto c9qbB;
       c9qbB: // global
           R1 = _r9pfh::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qbD: // global
           (_c9qbs::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfh::P64);
           if (_c9qbs::I64 == 0) goto c9qbu; else goto c9qbt;
       c9qbu: // global
           call (I64[I64[_r9pfh::P64]])() args: 8, res: 0, upd: 8;
       c9qbt: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qbs::I64;
           (_s9ppV::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_vmin();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9ppV::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.763364944 UTC

[section ""data" . System.Posix.Internals.const_vmin_closure" {
     System.Posix.Internals.const_vmin_closure:
         const stg_IND_STATIC_info;
         const const_vmin1_r9pfh_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.765755373 UTC

[section ""data" . const_vtime1_r9pfi_closure" {
     const_vtime1_r9pfi_closure:
         const const_vtime1_r9pfi_info;
         const 0;
         const 0;
         const 0;
 },
 const_vtime1_r9pfi_entry() //  [R1]
         { info_tbl: [(c9qbO,
                       label: const_vtime1_r9pfi_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qbO: // global
           _r9pfi::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9qbR; else goto c9qbS;
       c9qbS: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qbU; else goto c9qbT;
       c9qbU: // global
           HpAlloc = 16;
           goto c9qbR;
       c9qbR: // global
           R1 = _r9pfi::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qbT: // global
           (_c9qbI::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfi::P64);
           if (_c9qbI::I64 == 0) goto c9qbK; else goto c9qbJ;
       c9qbK: // global
           call (I64[I64[_r9pfi::P64]])() args: 8, res: 0, upd: 8;
       c9qbJ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qbI::I64;
           (_s9pq0::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_vtime();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pq0::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.766777804 UTC

[section ""data" . System.Posix.Internals.const_vtime_closure" {
     System.Posix.Internals.const_vtime_closure:
         const stg_IND_STATIC_info;
         const const_vtime1_r9pfi_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.767547481 UTC

[section ""data" . const_sigttou1_r9pfj_closure" {
     const_sigttou1_r9pfj_closure:
         const const_sigttou1_r9pfj_info;
         const 0;
         const 0;
         const 0;
 },
 const_sigttou1_r9pfj_entry() //  [R1]
         { info_tbl: [(c9qc4,
                       label: const_sigttou1_r9pfj_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qc4: // global
           _r9pfj::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9qc7; else goto c9qc8;
       c9qc8: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qca; else goto c9qc9;
       c9qca: // global
           HpAlloc = 16;
           goto c9qc7;
       c9qc7: // global
           R1 = _r9pfj::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qc9: // global
           (_c9qbY::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfj::P64);
           if (_c9qbY::I64 == 0) goto c9qc0; else goto c9qbZ;
       c9qc0: // global
           call (I64[I64[_r9pfj::P64]])() args: 8, res: 0, upd: 8;
       c9qbZ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qbY::I64;
           (_s9pq5::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sigttou();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pq5::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.768529396 UTC

[section ""data" . System.Posix.Internals.const_sigttou_closure" {
     System.Posix.Internals.const_sigttou_closure:
         const stg_IND_STATIC_info;
         const const_sigttou1_r9pfj_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.769297878 UTC

[section ""data" . const_sig_block1_r9pfk_closure" {
     const_sig_block1_r9pfk_closure:
         const const_sig_block1_r9pfk_info;
         const 0;
         const 0;
         const 0;
 },
 const_sig_block1_r9pfk_entry() //  [R1]
         { info_tbl: [(c9qck,
                       label: const_sig_block1_r9pfk_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qck: // global
           _r9pfk::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9qcn; else goto c9qco;
       c9qco: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qcq; else goto c9qcp;
       c9qcq: // global
           HpAlloc = 16;
           goto c9qcn;
       c9qcn: // global
           R1 = _r9pfk::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qcp: // global
           (_c9qce::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfk::P64);
           if (_c9qce::I64 == 0) goto c9qcg; else goto c9qcf;
       c9qcg: // global
           call (I64[I64[_r9pfk::P64]])() args: 8, res: 0, upd: 8;
       c9qcf: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qce::I64;
           (_s9pqa::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sig_block();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pqa::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.770277556 UTC

[section ""data" . System.Posix.Internals.const_sig_block_closure" {
     System.Posix.Internals.const_sig_block_closure:
         const stg_IND_STATIC_info;
         const const_sig_block1_r9pfk_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.77107199 UTC

[section ""data" . const_sig_setmask1_r9pfl_closure" {
     const_sig_setmask1_r9pfl_closure:
         const const_sig_setmask1_r9pfl_info;
         const 0;
         const 0;
         const 0;
 },
 const_sig_setmask1_r9pfl_entry() //  [R1]
         { info_tbl: [(c9qcA,
                       label: const_sig_setmask1_r9pfl_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qcA: // global
           _r9pfl::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9qcD; else goto c9qcE;
       c9qcE: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qcG; else goto c9qcF;
       c9qcG: // global
           HpAlloc = 16;
           goto c9qcD;
       c9qcD: // global
           R1 = _r9pfl::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qcF: // global
           (_c9qcu::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfl::P64);
           if (_c9qcu::I64 == 0) goto c9qcw; else goto c9qcv;
       c9qcw: // global
           call (I64[I64[_r9pfl::P64]])() args: 8, res: 0, upd: 8;
       c9qcv: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qcu::I64;
           (_s9pqf::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sig_setmask();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pqf::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.772081178 UTC

[section ""data" . System.Posix.Internals.const_sig_setmask_closure" {
     System.Posix.Internals.const_sig_setmask_closure:
         const stg_IND_STATIC_info;
         const const_sig_setmask1_r9pfl_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.772848258 UTC

[section ""data" . const_f_getfl1_r9pfm_closure" {
     const_f_getfl1_r9pfm_closure:
         const const_f_getfl1_r9pfm_info;
         const 0;
         const 0;
         const 0;
 },
 const_f_getfl1_r9pfm_entry() //  [R1]
         { info_tbl: [(c9qcQ,
                       label: const_f_getfl1_r9pfm_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qcQ: // global
           _r9pfm::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9qcT; else goto c9qcU;
       c9qcU: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qcW; else goto c9qcV;
       c9qcW: // global
           HpAlloc = 16;
           goto c9qcT;
       c9qcT: // global
           R1 = _r9pfm::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qcV: // global
           (_c9qcK::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfm::P64);
           if (_c9qcK::I64 == 0) goto c9qcM; else goto c9qcL;
       c9qcM: // global
           call (I64[I64[_r9pfm::P64]])() args: 8, res: 0, upd: 8;
       c9qcL: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qcK::I64;
           (_s9pqk::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_getfl();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pqk::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.773877027 UTC

[section ""data" . System.Posix.Internals.const_f_getfl_closure" {
     System.Posix.Internals.const_f_getfl_closure:
         const stg_IND_STATIC_info;
         const const_f_getfl1_r9pfm_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.774676734 UTC

[section ""data" . const_f_setfl1_r9pfn_closure" {
     const_f_setfl1_r9pfn_closure:
         const const_f_setfl1_r9pfn_info;
         const 0;
         const 0;
         const 0;
 },
 const_f_setfl1_r9pfn_entry() //  [R1]
         { info_tbl: [(c9qd6,
                       label: const_f_setfl1_r9pfn_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qd6: // global
           _r9pfn::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9qd9; else goto c9qda;
       c9qda: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qdc; else goto c9qdb;
       c9qdc: // global
           HpAlloc = 16;
           goto c9qd9;
       c9qd9: // global
           R1 = _r9pfn::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qdb: // global
           (_c9qd0::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfn::P64);
           if (_c9qd0::I64 == 0) goto c9qd2; else goto c9qd1;
       c9qd2: // global
           call (I64[I64[_r9pfn::P64]])() args: 8, res: 0, upd: 8;
       c9qd1: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qd0::I64;
           (_s9pqp::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfl();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pqp::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.775682128 UTC

[section ""data" . System.Posix.Internals.const_f_setfl_closure" {
     System.Posix.Internals.const_f_setfl_closure:
         const stg_IND_STATIC_info;
         const const_f_setfl1_r9pfn_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.776446032 UTC

[section ""data" . const_f_setfd1_r9pfo_closure" {
     const_f_setfd1_r9pfo_closure:
         const const_f_setfd1_r9pfo_info;
         const 0;
         const 0;
         const 0;
 },
 const_f_setfd1_r9pfo_entry() //  [R1]
         { info_tbl: [(c9qdm,
                       label: const_f_setfd1_r9pfo_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qdm: // global
           _r9pfo::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9qdp; else goto c9qdq;
       c9qdq: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qds; else goto c9qdr;
       c9qds: // global
           HpAlloc = 16;
           goto c9qdp;
       c9qdp: // global
           R1 = _r9pfo::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qdr: // global
           (_c9qdg::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfo::P64);
           if (_c9qdg::I64 == 0) goto c9qdi; else goto c9qdh;
       c9qdi: // global
           call (I64[I64[_r9pfo::P64]])() args: 8, res: 0, upd: 8;
       c9qdh: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qdg::I64;
           (_s9pqu::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfd();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pqu::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.777713568 UTC

[section ""data" . System.Posix.Internals.const_f_setfd_closure" {
     System.Posix.Internals.const_f_setfd_closure:
         const stg_IND_STATIC_info;
         const const_f_setfd1_r9pfo_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.778480038 UTC

[section ""data" . const_fd_cloexec1_r9pfp_closure" {
     const_fd_cloexec1_r9pfp_closure:
         const const_fd_cloexec1_r9pfp_info;
         const 0;
         const 0;
         const 0;
 },
 const_fd_cloexec1_r9pfp_entry() //  [R1]
         { info_tbl: [(c9qdB,
                       label: const_fd_cloexec1_r9pfp_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qdB: // global
           _r9pfp::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9qdC; else goto c9qdD;
       c9qdD: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qdF; else goto c9qdE;
       c9qdF: // global
           HpAlloc = 16;
           goto c9qdC;
       c9qdC: // global
           R1 = _r9pfp::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qdE: // global
           (_c9qdw::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfp::P64);
           if (_c9qdw::I64 == 0) goto c9qdy; else goto c9qdx;
       c9qdy: // global
           call (I64[I64[_r9pfp::P64]])() args: 8, res: 0, upd: 8;
       c9qdx: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qdw::I64;
           (_s9pqz::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_fd_cloexec();
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9pqz::I64;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.779424046 UTC

[section ""data" . System.Posix.Internals.const_fd_cloexec_closure" {
     System.Posix.Internals.const_fd_cloexec_closure:
         const stg_IND_STATIC_info;
         const const_fd_cloexec1_r9pfp_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.780190274 UTC

[section ""data" . System.Posix.Internals.sizeof_termios_closure" {
     System.Posix.Internals.sizeof_termios_closure:
         const System.Posix.Internals.sizeof_termios_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.sizeof_termios_entry() //  [R1]
         { info_tbl: [(c9qdO,
                       label: System.Posix.Internals.sizeof_termios_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qdO: // global
           _r9lfX::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9qdP; else goto c9qdQ;
       c9qdQ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qdS; else goto c9qdR;
       c9qdS: // global
           HpAlloc = 16;
           goto c9qdP;
       c9qdP: // global
           R1 = _r9lfX::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qdR: // global
           (_c9qdJ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9lfX::P64);
           if (_c9qdJ::I64 == 0) goto c9qdL; else goto c9qdK;
       c9qdL: // global
           call (I64[I64[_r9lfX::P64]])() args: 8, res: 0, upd: 8;
       c9qdK: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qdJ::I64;
           (_s9pqD::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_termios();
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9pqD::I64;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.781426354 UTC

[section ""data" . System.Posix.Internals.sizeof_sigset_t_closure" {
     System.Posix.Internals.sizeof_sigset_t_closure:
         const System.Posix.Internals.sizeof_sigset_t_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.sizeof_sigset_t_entry() //  [R1]
         { info_tbl: [(c9qe1,
                       label: System.Posix.Internals.sizeof_sigset_t_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qe1: // global
           _r9lfW::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9qe2; else goto c9qe3;
       c9qe3: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qe5; else goto c9qe4;
       c9qe5: // global
           HpAlloc = 16;
           goto c9qe2;
       c9qe2: // global
           R1 = _r9lfW::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qe4: // global
           (_c9qdW::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9lfW::P64);
           if (_c9qdW::I64 == 0) goto c9qdY; else goto c9qdX;
       c9qdY: // global
           call (I64[I64[_r9lfW::P64]])() args: 8, res: 0, upd: 8;
       c9qdX: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qdW::I64;
           (_s9pqH::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_sigset_t();
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9pqH::I64;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.78276203 UTC

[section ""data" . c_lflag1_r9pfq_closure" {
     c_lflag1_r9pfq_closure:
         const c_lflag1_r9pfq_info;
 },
 c_lflag1_r9pfq_entry() //  [R2]
         { info_tbl: [(c9qed,
                       label: c_lflag1_r9pfq_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qed: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qem; else goto c9qen;
       c9qem: // global
           R2 = R2;
           R1 = c_lflag1_r9pfq_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qen: // global
           I64[Sp - 8] = block_c9qea_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qer; else goto c9qeb;
       u9qer: // global
           call _c9qea(R1) args: 0, res: 0, upd: 0;
       c9qeb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qea() //  [R1]
         { info_tbl: [(c9qea,
                       label: block_c9qea_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qea: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qeq; else goto c9qep;
       c9qeq: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qep: // global
           (_s9pqP::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_lflag(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Word.W32#_con_info;
           I64[Hp] = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pqP::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.784008741 UTC

[section ""data" . System.Posix.Internals.c_lflag_closure" {
     System.Posix.Internals.c_lflag_closure:
         const System.Posix.Internals.c_lflag_info;
 },
 System.Posix.Internals.c_lflag_entry() //  [R2]
         { info_tbl: [(c9qew,
                       label: System.Posix.Internals.c_lflag_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qew: // global
           R2 = R2;
           call c_lflag1_r9pfq_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.785089351 UTC

[section ""data" . poke_c_lflag1_r9pfr_closure" {
     poke_c_lflag1_r9pfr_closure:
         const poke_c_lflag1_r9pfr_info;
 },
 poke_c_lflag1_r9pfr_entry() //  [R2, R3]
         { info_tbl: [(c9qeG,
                       label: poke_c_lflag1_r9pfr_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qeG: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qeK; else goto c9qeL;
       c9qeK: // global
           R3 = R3;
           R2 = R2;
           R1 = poke_c_lflag1_r9pfr_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9qeL: // global
           I64[Sp - 16] = block_c9qeD_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9qeW; else goto c9qeE;
       u9qeW: // global
           call _c9qeD(R1) args: 0, res: 0, upd: 0;
       c9qeE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qeD() //  [R1]
         { info_tbl: [(c9qeD,
                       label: block_c9qeD_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qeD: // global
           I64[Sp] = block_c9qeJ_info;
           _s9pqW::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pqW::I64;
           if (R1 & 7 != 0) goto u9qeV; else goto c9qeN;
       u9qeV: // global
           call _c9qeJ(R1) args: 0, res: 0, upd: 0;
       c9qeN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qeJ() //  [R1]
         { info_tbl: [(c9qeJ,
                       label: block_c9qeJ_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qeJ: // global
           call "ccall" arg hints:  [PtrHint,]  result hints:  [] __hscore_poke_lflag(I64[Sp + 8], I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.786471395 UTC

[section ""data" . System.Posix.Internals.poke_c_lflag_closure" {
     System.Posix.Internals.poke_c_lflag_closure:
         const System.Posix.Internals.poke_c_lflag_info;
 },
 System.Posix.Internals.poke_c_lflag_entry() //  [R2, R3]
         { info_tbl: [(c9qf1,
                       label: System.Posix.Internals.poke_c_lflag_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qf1: // global
           R3 = R3;
           R2 = R2;
           call poke_c_lflag1_r9pfr_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.787482625 UTC

[section ""data" . ptr_c_cc1_r9pfs_closure" {
     ptr_c_cc1_r9pfs_closure:
         const ptr_c_cc1_r9pfs_info;
 },
 ptr_c_cc1_r9pfs_entry() //  [R2]
         { info_tbl: [(c9qfb,
                       label: ptr_c_cc1_r9pfs_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qfb: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qfh; else goto c9qfi;
       c9qfh: // global
           R2 = R2;
           R1 = ptr_c_cc1_r9pfs_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qfi: // global
           I64[Sp - 8] = block_c9qf8_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qfm; else goto c9qf9;
       u9qfm: // global
           call _c9qf8(R1) args: 0, res: 0, upd: 0;
       c9qf9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qf8() //  [R1]
         { info_tbl: [(c9qf8,
                       label: block_c9qf8_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qf8: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qfl; else goto c9qfk;
       c9qfl: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qfk: // global
           (_s9pr9::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] __hscore_ptr_c_cc(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s9pr9::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.788658805 UTC

[section ""data" . System.Posix.Internals.ptr_c_cc_closure" {
     System.Posix.Internals.ptr_c_cc_closure:
         const System.Posix.Internals.ptr_c_cc_info;
 },
 System.Posix.Internals.ptr_c_cc_entry() //  [R2]
         { info_tbl: [(c9qfr,
                       label: System.Posix.Internals.ptr_c_cc_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qfr: // global
           R2 = R2;
           call ptr_c_cc1_r9pfs_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.791415296 UTC

[section ""data" . c_s_issock1_r9pft_closure" {
     c_s_issock1_r9pft_closure:
         const c_s_issock1_r9pft_info;
 },
 c_s_issock1_r9pft_entry() //  [R2]
         { info_tbl: [(c9qfB,
                       label: c_s_issock1_r9pft_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qfB: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qfK; else goto c9qfL;
       c9qfK: // global
           R2 = R2;
           R1 = c_s_issock1_r9pft_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qfL: // global
           I64[Sp - 8] = block_c9qfy_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qfP; else goto c9qfz;
       u9qfP: // global
           call _c9qfy(R1) args: 0, res: 0, upd: 0;
       c9qfz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qfy() //  [R1]
         { info_tbl: [(c9qfy,
                       label: block_c9qfy_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qfy: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qfO; else goto c9qfN;
       c9qfO: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qfN: // global
           (_s9prh::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC3ZCbaseZCSystemziPosixziInternalsZCSzuISSOCK(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9prh::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.792634105 UTC

[section ""data" . System.Posix.Internals.c_s_issock_closure" {
     System.Posix.Internals.c_s_issock_closure:
         const System.Posix.Internals.c_s_issock_info;
 },
 System.Posix.Internals.c_s_issock_entry() //  [R2]
         { info_tbl: [(c9qfU,
                       label: System.Posix.Internals.c_s_issock_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qfU: // global
           R2 = R2;
           call c_s_issock1_r9pft_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.793519936 UTC

[section ""data" . System.Posix.Internals.dEFAULT_BUFFER_SIZE_closure" {
     System.Posix.Internals.dEFAULT_BUFFER_SIZE_closure:
         const System.Posix.Internals.dEFAULT_BUFFER_SIZE_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.dEFAULT_BUFFER_SIZE_entry() //  [R1]
         { info_tbl: [(c9qg5,
                       label: System.Posix.Internals.dEFAULT_BUFFER_SIZE_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qg5: // global
           _r9lfR::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9qg6; else goto c9qg7;
       c9qg7: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qg9; else goto c9qg8;
       c9qg9: // global
           HpAlloc = 16;
           goto c9qg6;
       c9qg6: // global
           R1 = _r9lfR::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qg8: // global
           (_c9qg0::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9lfR::P64);
           if (_c9qg0::I64 == 0) goto c9qg2; else goto c9qg1;
       c9qg2: // global
           call (I64[I64[_r9lfR::P64]])() args: 8, res: 0, upd: 8;
       c9qg1: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qg0::I64;
           (_s9prm::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_bufsiz();
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9prm::I64;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.794738626 UTC

[section ""data" . sEEK_CUR1_r9pfu_closure" {
     sEEK_CUR1_r9pfu_closure:
         const sEEK_CUR1_r9pfu_info;
         const 0;
         const 0;
         const 0;
 },
 sEEK_CUR1_r9pfu_entry() //  [R1]
         { info_tbl: [(c9qgj,
                       label: sEEK_CUR1_r9pfu_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qgj: // global
           _r9pfu::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9qgm; else goto c9qgn;
       c9qgn: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qgp; else goto c9qgo;
       c9qgp: // global
           HpAlloc = 16;
           goto c9qgm;
       c9qgm: // global
           R1 = _r9pfu::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qgo: // global
           (_c9qgd::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfu::P64);
           if (_c9qgd::I64 == 0) goto c9qgf; else goto c9qge;
       c9qgf: // global
           call (I64[I64[_r9pfu::P64]])() args: 8, res: 0, upd: 8;
       c9qge: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qgd::I64;
           (_s9prq::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC2ZCbaseZCSystemziPosixziInternalsZCSEEKzuCUR();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9prq::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.795735778 UTC

[section ""data" . System.Posix.Internals.sEEK_CUR_closure" {
     System.Posix.Internals.sEEK_CUR_closure:
         const stg_IND_STATIC_info;
         const sEEK_CUR1_r9pfu_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.796543649 UTC

[section ""data" . sEEK_SET1_r9pfv_closure" {
     sEEK_SET1_r9pfv_closure:
         const sEEK_SET1_r9pfv_info;
         const 0;
         const 0;
         const 0;
 },
 sEEK_SET1_r9pfv_entry() //  [R1]
         { info_tbl: [(c9qgz,
                       label: sEEK_SET1_r9pfv_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qgz: // global
           _r9pfv::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9qgC; else goto c9qgD;
       c9qgD: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qgF; else goto c9qgE;
       c9qgF: // global
           HpAlloc = 16;
           goto c9qgC;
       c9qgC: // global
           R1 = _r9pfv::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qgE: // global
           (_c9qgt::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfv::P64);
           if (_c9qgt::I64 == 0) goto c9qgv; else goto c9qgu;
       c9qgv: // global
           call (I64[I64[_r9pfv::P64]])() args: 8, res: 0, upd: 8;
       c9qgu: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qgt::I64;
           (_s9prv::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC1ZCbaseZCSystemziPosixziInternalsZCSEEKzuSET();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9prv::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.797579995 UTC

[section ""data" . System.Posix.Internals.sEEK_SET_closure" {
     System.Posix.Internals.sEEK_SET_closure:
         const stg_IND_STATIC_info;
         const sEEK_SET1_r9pfv_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.798365062 UTC

[section ""data" . sEEK_END1_r9pfw_closure" {
     sEEK_END1_r9pfw_closure:
         const sEEK_END1_r9pfw_info;
         const 0;
         const 0;
         const 0;
 },
 sEEK_END1_r9pfw_entry() //  [R1]
         { info_tbl: [(c9qgP,
                       label: sEEK_END1_r9pfw_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qgP: // global
           _r9pfw::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9qgS; else goto c9qgT;
       c9qgT: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qgV; else goto c9qgU;
       c9qgV: // global
           HpAlloc = 16;
           goto c9qgS;
       c9qgS: // global
           R1 = _r9pfw::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qgU: // global
           (_c9qgJ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfw::P64);
           if (_c9qgJ::I64 == 0) goto c9qgL; else goto c9qgK;
       c9qgL: // global
           call (I64[I64[_r9pfw::P64]])() args: 8, res: 0, upd: 8;
       c9qgK: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qgJ::I64;
           (_s9prA::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC0ZCbaseZCSystemziPosixziInternalsZCSEEKzuEND();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9prA::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.799369998 UTC

[section ""data" . System.Posix.Internals.sEEK_END_closure" {
     System.Posix.Internals.sEEK_END_closure:
         const stg_IND_STATIC_info;
         const sEEK_END1_r9pfw_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.800141196 UTC

[section ""data" . System.Posix.Internals.withFilePath1_closure" {
     System.Posix.Internals.withFilePath1_closure:
         const System.Posix.Internals.withFilePath1_info;
         const 0;
 },
 System.Posix.Internals.withFilePath1_entry() //  [R2, R3]
         { info_tbl: [(c9qh2,
                       label: System.Posix.Internals.withFilePath1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qh2: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9qh3; else goto c9qh4;
       c9qh3: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Posix.Internals.withFilePath1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9qh4: // global
           I64[Sp - 24] = block_c9qh0_info;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qh0() //  [R1]
         { info_tbl: [(c9qh0,
                       label: block_c9qh0_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qh0: // global
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 24;
           call GHC.Foreign.charIsRepresentable3_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.801559974 UTC

[section ""data" . System.Posix.Internals.withFilePath_closure" {
     System.Posix.Internals.withFilePath_closure:
         const System.Posix.Internals.withFilePath_info;
         const 0;
 },
 System.Posix.Internals.withFilePath_entry() //  [R2, R3]
         { info_tbl: [(c9qhb,
                       label: System.Posix.Internals.withFilePath_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qhb: // global
           R3 = R3;
           R2 = R2;
           call System.Posix.Internals.withFilePath1_entry(R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.806384219 UTC

[section ""data" . System.Posix.Internals.peekFilePathLen1_closure" {
     System.Posix.Internals.peekFilePathLen1_closure:
         const System.Posix.Internals.peekFilePathLen1_info;
         const 0;
 },
 sat_s9psZ_entry() //  [R1]
         { info_tbl: [(c9qjv,
                       label: sat_s9psZ_info
                       rep:HeapRep 2 ptrs 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qjv: // global
           _s9psZ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9qjw; else goto c9qjx;
       c9qjx: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9qjz; else goto c9qjy;
       c9qjz: // global
           HpAlloc = 40;
           goto c9qjw;
       c9qjw: // global
           R1 = _s9psZ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qjy: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9psZ::P64;
           _s9psO::P64 = P64[_s9psZ::P64 + 16];
           _s9psW::P64 = P64[_s9psZ::P64 + 24];
           _s9psS::I64 = I64[_s9psZ::P64 + 32];
           I64[Hp - 32] = GHC.Types.C#_con_info;
           I64[Hp - 24] = _s9psS::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = _s9psO::P64;
           R3 = _s9psW::P64;
           R2 = Hp - 14;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9ptg_entry() //  [R1]
         { info_tbl: [(c9qjI,
                       label: sat_s9ptg_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qjI: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qjJ; else goto c9qjK;
       c9qjJ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qjK: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = GHC.Types.[]_closure+1;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 $wgo_s9psg_entry() //  [R1, R2]
         { info_tbl: [(c9qjL,
                       label: $wgo_s9psg_info
                       rep:HeapRep 2 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qjL: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c9qjM; else goto c9qjN;
       c9qjM: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qjN: // global
           I64[Sp - 32] = block_c9qia_info;
           _s9psg::P64 = R1;
           _s9psf::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp - 24] = _s9psf::P64;
           P64[Sp - 16] = _s9psg::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9qln; else goto c9qib;
       u9qln: // global
           call _c9qia(R1) args: 0, res: 0, upd: 0;
       c9qib: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qia() //  [R1]
         { info_tbl: [(c9qia,
                       label: block_c9qia_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qia: // global
           _s9psf::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9qif_info;
           R3 = _s9psf::P64;
           R2 = P64[Sp + 24];
           _s9psl::P64 = P64[R1 + 15];
           R1 = P64[R1 + 7];
           P64[Sp + 24] = _s9psl::P64;
           Sp = Sp + 8;
           call stg_ap_ppv_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qif() //  [R1]
         { info_tbl: [(c9qif,
                       label: block_c9qif_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qif: // global
           I64[Sp] = block_c9qih_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u9qlf; else goto c9qii;
       u9qlf: // global
           call _c9qih(R1) args: 0, res: 0, upd: 0;
       c9qii: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qih() //  [R1]
         { info_tbl: [(c9qih,
                       label: block_c9qih_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qih: // global
           I64[Sp - 16] = block_c9qim_info;
           _s9pst::P64 = P64[R1 + 7];
           _s9psv::P64 = P64[R1 + 23];
           R1 = P64[R1 + 15];
           P64[Sp - 8] = _s9psv::P64;
           P64[Sp] = _s9pst::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9qlg; else goto c9qin;
       u9qlg: // global
           call _c9qim(R1) args: 0, res: 0, upd: 0;
       c9qin: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qim() //  [R1]
         { info_tbl: [(c9qim,
                       label: block_c9qim_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qim: // global
           if (I64[R1 + 39] == I64[R1 + 47]) goto c9qkI; else goto c9qkb;
       c9qkI: // global
           I64[Sp + 32] = block_c9qiU_info;
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           if (R1 & 7 != 0) goto u9qli; else goto c9qiV;
       u9qli: // global
           call _c9qiU(R1) args: 0, res: 0, upd: 0;
       c9qiV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9qkb: // global
           I64[Sp] = block_c9qjS_info;
           _s9psw::P64 = R1;
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _s9psw::P64;
           if (R1 & 7 != 0) goto u9qlh; else goto c9qkc;
       u9qlh: // global
           call _c9qjS(R1) args: 0, res: 0, upd: 0;
       c9qkc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qiU() //  [R1]
         { info_tbl: [(c9qiU,
                       label: block_c9qiU_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qiU: // global
           _s9ptE::P64 = P64[R1 + 7];
           _s9ptJ::I64 = I64[R1 + 47] - I64[R1 + 39];
           if (%MO_S_Gt_W64(_s9ptJ::I64, 0)) goto c9ql0; else goto c9ql1;
       c9ql0: // global
           P64[Sp - 24] = _s9ptE::P64;
           I64[Sp - 16] = _s9ptJ::I64 - 1;
           P64[Sp - 8] = GHC.Types.[]_closure+1;
           I64[Sp] = I64[R1 + 23];
           Sp = Sp - 32;
           call _c9qjc() args: 0, res: 0, upd: 0;
       c9ql1: // global
           call MO_Touch(_s9ptE::P64);
           R1 = GHC.Types.[]_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9qjc() //  []
         { info_tbl: [(c9qjc,
                       label: block_c9qjc_info
                       rep:StackRep [False, True, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qjc: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9qkV; else goto c9qkU;
       c9qkV: // global
           HpAlloc = 40;
           I64[Sp] = block_c9qjc_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c9qkU: // global
           _s9ptW::P64 = P64[Sp + 24];
           _s9ptY::I64 = I64[Sp + 16];
           if (_s9ptY::I64 != 0) goto c9qkX; else goto c9qkY;
       c9qkX: // global
           I64[Hp - 32] = GHC.Types.C#_con_info;
           I64[Hp - 24] = %MO_UU_Conv_W32_W64(I32[I64[Sp + 32] + (_s9ptY::I64 << 2)]);
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = _s9ptW::P64;
           I64[Sp + 16] = _s9ptY::I64 - 1;
           P64[Sp + 24] = Hp - 14;
           call _c9qjc() args: 0, res: 0, upd: 0;
       c9qkY: // global
           Hp = Hp - 40;
           P64[Sp + 24] = _s9ptW::P64;
           Sp = Sp + 8;
           call _c9qkL() args: 0, res: 0, upd: 0;
     }
 },
 _c9qkL() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qkL: // global
           Hp = Hp + 40;
           _s9ptM::P64 = P64[Sp + 16];
           if (Hp > HpLim) (likely: False) goto c9qkS; else goto c9qkR;
       c9qkS: // global
           HpAlloc = 40;
           I64[Sp - 8] = block_c9qkK_info;
           R1 = _s9ptM::P64;
           Sp = Sp - 8;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qkR: // global
           _s9ptQ::I64 = %MO_UU_Conv_W32_W64(I32[I64[Sp + 24]]);
           call MO_Touch(P64[Sp]);
           I64[Hp - 32] = GHC.Types.C#_con_info;
           I64[Hp - 24] = _s9ptQ::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = _s9ptM::P64;
           R1 = Hp - 14;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9qkK() //  [R1]
         { info_tbl: [(c9qkK,
                       label: block_c9qkK_info
                       rep:StackRep [False, True, True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qkK: // global
           P64[Sp + 24] = R1;
           Sp = Sp + 8;
           call _c9qkL() args: 0, res: 0, upd: 0;
     }
 },
 _c9qjS() //  [R1]
         { info_tbl: [(c9qjS,
                       label: block_c9qjS_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qjS: // global
           _s9psv::P64 = P64[Sp + 8];
           if (R1 & 7 == 2) goto c9qkC; else goto c9qkq;
       c9qkC: // global
           I64[Sp + 8] = block_c9qkA_info;
           R1 = _s9psv::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9qlo; else goto c9qkD;
       u9qlo: // global
           call _c9qkA(R1) args: 0, res: 0, upd: 0;
       c9qkD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9qkq: // global
           _s9psw::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c9qkg_info;
           R3 = _s9psv::P64;
           R2 = _s9psw::P64;
           R1 = P64[Sp + 32];
           Sp = Sp + 16;
           call stg_ap_ppv_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qkA() //  [R1]
         { info_tbl: [(c9qkA,
                       label: block_c9qkA_info
                       rep:StackRep [False, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qkA: // global
           P64[Sp + 24] = P64[Sp + 8];
           I64[Sp + 8] = I64[R1 + 23];
           P64[Sp - 16] = P64[R1 + 7];
           I64[Sp - 8] = I64[R1 + 39];
           I64[Sp] = I64[R1 + 47];
           Sp = Sp - 16;
           call _s9psE() args: 0, res: 0, upd: 0;
     }
 },
 _c9qkg() //  [R1]
         { info_tbl: [(c9qkg,
                       label: block_c9qkg_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qkg: // global
           I64[Sp] = block_c9qki_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u9qlp; else goto c9qkj;
       u9qlp: // global
           call _c9qki(R1) args: 0, res: 0, upd: 0;
       c9qkj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qki() //  [R1]
         { info_tbl: [(c9qki,
                       label: block_c9qki_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qki: // global
           I64[Sp] = block_c9qkn_info;
           _s9ptm::P64 = P64[R1 + 7];
           R1 = P64[R1 + 15];
           P64[Sp + 16] = _s9ptm::P64;
           if (R1 & 7 != 0) goto u9qlq; else goto c9qkt;
       u9qlq: // global
           call _c9qkn(R1) args: 0, res: 0, upd: 0;
       c9qkt: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qkn() //  [R1]
         { info_tbl: [(c9qkn,
                       label: block_c9qkn_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qkn: // global
           P64[Sp - 24] = P64[R1 + 7];
           I64[Sp - 16] = I64[R1 + 39];
           I64[Sp - 8] = I64[R1 + 47];
           I64[Sp] = I64[R1 + 23];
           P64[Sp + 16] = P64[Sp + 16];
           Sp = Sp - 24;
           call _s9psE() args: 0, res: 0, upd: 0;
     }
 },
 _s9psE() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       s9psE: // global
           _s9psL::I64 = I64[Sp + 16] - I64[Sp + 8];
           if (%MO_S_Gt_W64(_s9psL::I64, 0)) goto c9qk5; else goto c9qk6;
       c9qk5: // global
           P64[Sp + 8] = GHC.Types.[]_closure+1;
           I64[Sp + 16] = _s9psL::I64 - 1;
           Sp = Sp - 8;
           call _c9qiM() args: 0, res: 0, upd: 0;
       c9qk6: // global
           _s9psg::P64 = P64[Sp + 32];
           _s9psG::P64 = P64[Sp + 40];
           call MO_Touch(P64[Sp]);
           I64[Sp + 40] = block_c9qjC_info;
           R2 = _s9psG::P64;
           R1 = _s9psg::P64;
           Sp = Sp + 40;
           call $wgo_s9psg_entry(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qiM() //  []
         { info_tbl: [(c9qiM,
                       label: block_c9qiM_info
                       rep:StackRep [False, False, True, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qiM: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9qk0; else goto c9qjZ;
       c9qk0: // global
           HpAlloc = 40;
           I64[Sp] = block_c9qiM_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c9qjZ: // global
           _s9psH::I64 = I64[Sp + 32];
           _s9pt2::P64 = P64[Sp + 16];
           _s9pt4::I64 = I64[Sp + 24];
           if (_s9pt4::I64 != 0) goto c9qk2; else goto c9qk3;
       c9qk2: // global
           _s9pt7::I64 = %MO_UU_Conv_W32_W64(I32[_s9psH::I64 + (_s9pt4::I64 << 2)]);
           I64[Hp - 32] = GHC.Types.C#_con_info;
           I64[Hp - 24] = _s9pt7::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = _s9pt2::P64;
           I64[Sp + 24] = _s9pt4::I64 - 1;
           P64[Sp + 16] = Hp - 14;
           call _c9qiM() args: 0, res: 0, upd: 0;
       c9qk3: // global
           Hp = Hp - 40;
           _s9psg::P64 = P64[Sp + 40];
           _s9psG::P64 = P64[Sp + 48];
           _s9psS::I64 = %MO_UU_Conv_W32_W64(I32[_s9psH::I64]);
           call MO_Touch(P64[Sp + 8]);
           I64[Sp + 32] = block_c9qjn_info;
           R2 = _s9psG::P64;
           R1 = _s9psg::P64;
           I64[Sp + 40] = _s9psS::I64;
           P64[Sp + 48] = _s9pt2::P64;
           Sp = Sp + 32;
           call $wgo_s9psg_entry(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qjn() //  [R1]
         { info_tbl: [(c9qjn,
                       label: block_c9qjn_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qjn: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9qjX; else goto c9qjW;
       c9qjX: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qjW: // global
           I64[Hp - 32] = sat_s9psZ_info;
           P64[Hp - 16] = P64[Sp + 16];
           P64[Hp - 8] = R1;
           I64[Hp] = I64[Sp + 8];
           R1 = Hp - 32;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9qjC() //  [R1]
         { info_tbl: [(c9qjC,
                       label: block_c9qjC_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qjC: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9qk9; else goto c9qk8;
       c9qk9: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qk8: // global
           I64[Hp - 16] = sat_s9ptg_info;
           P64[Hp] = R1;
           R1 = Hp - 16;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9pub_entry() //  [R1, R2]
         { info_tbl: [(c9qlv,
                       label: sat_s9pub_info
                       rep:HeapRep 2 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qlv: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c9qlw; else goto c9qlx;
       c9qlw: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qlx: // global
           I64[Sp - 24] = block_c9qhz_info;
           _s9prT::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp - 16] = _s9prT::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9qlR; else goto c9qhA;
       u9qlR: // global
           call _c9qhz(R1) args: 0, res: 0, upd: 0;
       c9qhA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qhz() //  [R1]
         { info_tbl: [(c9qhz,
                       label: block_c9qhz_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qhz: // global
           I64[Sp - 8] = block_c9qhE_info;
           _s9prX::I64 = I64[R1 + 7];
           R1 = GHC.ForeignPtr.NoFinalizers_closure+1;
           I64[Sp] = _s9prX::I64;
           Sp = Sp - 8;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qhE() //  [R1]
         { info_tbl: [(c9qhE,
                       label: block_c9qhE_info
                       rep:StackRep [True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qhE: // global
           I64[Sp] = block_c9qhG_info;
           _s9ps0::P64 = R1;
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _s9ps0::P64;
           if (R1 & 7 != 0) goto u9qlQ; else goto c9qhH;
       u9qlQ: // global
           call _c9qhG(R1) args: 0, res: 0, upd: 0;
       c9qhH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qhG() //  [R1]
         { info_tbl: [(c9qhG,
                       label: block_c9qhG_info
                       rep:StackRep [True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qhG: // global
           _s9ps2::I64 = I64[R1 + 7];
           if (%MO_S_Gt_W64(_s9ps2::I64, 1)) goto c9qlO; else goto c9qlP;
       c9qlO: // global
           _s9ps4::I64 = _s9ps2::I64;
           goto s9ps3;
       c9qlP: // global
           _s9ps4::I64 = 1;
           goto s9ps3;
       s9ps3: // global
           _s9ps5::I64 = _s9ps4::I64 << 2;
           if (%MO_S_Ge_W64(_s9ps5::I64, 0)) goto c9qlF; else goto c9qlK;
       c9qlF: // global
           I64[Sp - 24] = block_c9qhW_info;
           R1 = GHC.ForeignPtr.NoFinalizers_closure+1;
           I64[Sp - 16] = _s9ps4::I64;
           I64[Sp - 8] = _s9ps5::I64;
           I64[Sp] = _s9ps2::I64;
           Sp = Sp - 24;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
       c9qlK: // global
           R1 = GHC.ForeignPtr.mallocForeignPtrBytes2_closure;
           Sp = Sp + 32;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9qhW() //  [R1]
         { info_tbl: [(c9qhW,
                       label: block_c9qhW_info
                       rep:StackRep [True, True, True, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qhW: // global
           I64[Sp] = block_c9qhY_info;
           _s9ps9::P64 = R1;
           R1 = I64[Sp + 16];
           P64[Sp + 16] = _s9ps9::P64;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qhY() //  [R1]
         { info_tbl: [(c9qhY,
                       label: block_c9qhY_info
                       rep:StackRep [True, False, True, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qhY: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto c9qlJ; else goto c9qlI;
       c9qlJ: // global
           HpAlloc = 176;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qlI: // global
           I64[Hp - 168] = GHC.ForeignPtr.MallocPtr_con_info;
           P64[Hp - 160] = R1;
           P64[Hp - 152] = P64[Sp + 16];
           I64[Hp - 144] = GHC.IO.Buffer.Buffer_con_info;
           P64[Hp - 136] = Hp - 166;
           P64[Hp - 128] = GHC.IO.Buffer.WriteBuffer_closure+2;
           P64[Hp - 120] = R1 + 16;
           I64[Hp - 112] = I64[Sp + 8];
           I64[Hp - 104] = 0;
           I64[Hp - 96] = 0;
           I64[Hp - 88] = $wgo_s9psg_info;
           P64[Hp - 80] = P64[Sp + 48];
           P64[Hp - 72] = Hp - 143;
           I64[Hp - 64] = GHC.ForeignPtr.PlainForeignPtr_con_info;
           P64[Hp - 56] = P64[Sp + 40];
           I64[Hp - 48] = GHC.IO.Buffer.Buffer_con_info;
           P64[Hp - 40] = Hp - 63;
           P64[Hp - 32] = GHC.IO.Buffer.ReadBuffer_closure+1;
           I64[Hp - 24] = I64[Sp + 32];
           _s9ps2::I64 = I64[Sp + 24];
           I64[Hp - 16] = _s9ps2::I64;
           I64[Hp - 8] = 0;
           I64[Hp] = _s9ps2::I64;
           R2 = Hp - 47;
           R1 = Hp - 86;
           Sp = Sp + 56;
           call $wgo_s9psg_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.peekFilePathLen1_entry() //  [R2]
         { info_tbl: [(c9qlS,
                       label: System.Posix.Internals.peekFilePathLen1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qlS: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qlT; else goto c9qlU;
       c9qlT: // global
           R2 = R2;
           R1 = System.Posix.Internals.peekFilePathLen1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qlU: // global
           I64[Sp - 16] = block_c9qhi_info;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qhi() //  [R1]
         { info_tbl: [(c9qhi,
                       label: block_c9qhi_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qhi: // global
           I64[Sp] = block_c9qhk_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u9qm0; else goto c9qhl;
       u9qm0: // global
           call _c9qhk(R1) args: 0, res: 0, upd: 0;
       c9qhl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qhk() //  [R1]
         { info_tbl: [(c9qhk,
                       label: block_c9qhk_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qhk: // global
           I64[Sp] = block_c9qhp_info;
           _s9prP::P64 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s9prP::P64;
           if (R1 & 7 != 0) goto u9qm1; else goto c9qhq;
       u9qm1: // global
           call _c9qhp(R1) args: 0, res: 0, upd: 0;
       c9qhq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qhp() //  [R1]
         { info_tbl: [(c9qhp,
                       label: block_c9qhp_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qhp: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9qlZ; else goto c9qlY;
       c9qlZ: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qlY: // global
           _s9prS::P64 = P64[R1 + 7];
           _s9prT::P64 = P64[R1 + 15];
           I64[Hp - 16] = sat_s9pub_info;
           P64[Hp - 8] = _s9prS::P64;
           P64[Hp] = _s9prT::P64;
           R4 = Hp - 14;
           R3 = GHC.IO.Encoding.Types.close_closure+1;
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.IO.bracket1_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.815044422 UTC

[section ""data" . System.Posix.Internals.peekFilePathLen_closure" {
     System.Posix.Internals.peekFilePathLen_closure:
         const System.Posix.Internals.peekFilePathLen_info;
         const 0;
 },
 System.Posix.Internals.peekFilePathLen_entry() //  [R2]
         { info_tbl: [(c9qm6,
                       label: System.Posix.Internals.peekFilePathLen_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qm6: // global
           R2 = R2;
           call System.Posix.Internals.peekFilePathLen1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.816008069 UTC

[section ""data" . System.Posix.Internals.peekFilePath1_closure" {
     System.Posix.Internals.peekFilePath1_closure:
         const System.Posix.Internals.peekFilePath1_info;
         const 0;
 },
 System.Posix.Internals.peekFilePath1_entry() //  [R2]
         { info_tbl: [(c9qmf,
                       label: System.Posix.Internals.peekFilePath1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qmf: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qmg; else goto c9qmh;
       c9qmg: // global
           R2 = R2;
           R1 = System.Posix.Internals.peekFilePath1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qmh: // global
           I64[Sp - 16] = block_c9qmd_info;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qmd() //  [R1]
         { info_tbl: [(c9qmd,
                       label: block_c9qmd_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qmd: // global
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call GHC.Foreign.peekCString1_entry(R3,
                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.817086687 UTC

[section ""data" . System.Posix.Internals.peekFilePath_closure" {
     System.Posix.Internals.peekFilePath_closure:
         const System.Posix.Internals.peekFilePath_info;
         const 0;
 },
 System.Posix.Internals.peekFilePath_entry() //  [R2]
         { info_tbl: [(c9qmn,
                       label: System.Posix.Internals.peekFilePath_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qmn: // global
           R2 = R2;
           call System.Posix.Internals.peekFilePath1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.81802916 UTC

[section ""data" . System.Posix.Internals.newFilePath1_closure" {
     System.Posix.Internals.newFilePath1_closure:
         const System.Posix.Internals.newFilePath1_info;
         const 0;
 },
 System.Posix.Internals.newFilePath1_entry() //  [R2]
         { info_tbl: [(c9qmw,
                       label: System.Posix.Internals.newFilePath1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qmw: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qmx; else goto c9qmy;
       c9qmx: // global
           R2 = R2;
           R1 = System.Posix.Internals.newFilePath1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qmy: // global
           I64[Sp - 16] = block_c9qmu_info;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qmu() //  [R1]
         { info_tbl: [(c9qmu,
                       label: block_c9qmu_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qmu: // global
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call GHC.Foreign.newCString1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.819059715 UTC

[section ""data" . System.Posix.Internals.newFilePath_closure" {
     System.Posix.Internals.newFilePath_closure:
         const System.Posix.Internals.newFilePath_info;
         const 0;
 },
 System.Posix.Internals.newFilePath_entry() //  [R2]
         { info_tbl: [(c9qmE,
                       label: System.Posix.Internals.newFilePath_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qmE: // global
           R2 = R2;
           call System.Posix.Internals.newFilePath1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.819789744 UTC

[section ""cstring" . System.Posix.Internals.puts3_bytes" {
     System.Posix.Internals.puts3_bytes:
         I8[] [10]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.820532982 UTC

[section ""data" . System.Posix.Internals.puts2_closure" {
     System.Posix.Internals.puts2_closure:
         const System.Posix.Internals.puts2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.puts2_entry() //  [R1]
         { info_tbl: [(c9qmN,
                       label: System.Posix.Internals.puts2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qmN: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qmO; else goto c9qmP;
       c9qmO: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qmP: // global
           (_c9qmK::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9qmK::I64 == 0) goto c9qmM; else goto c9qmL;
       c9qmM: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9qmL: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qmK::I64;
           R2 = System.Posix.Internals.puts3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.823952812 UTC

[section ""data" . System.Posix.Internals.puts1_closure" {
     System.Posix.Internals.puts1_closure:
         const System.Posix.Internals.puts1_info;
         const 0;
 },
 System.Posix.Internals.puts1_entry() //  [R2]
         { info_tbl: [(c9qmW,
                       label: System.Posix.Internals.puts1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qmW: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c9qn0; else goto c9qn1;
       c9qn0: // global
           R2 = R2;
           R1 = System.Posix.Internals.puts1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qn1: // global
           I64[Sp - 8] = block_c9qmU_info;
           R3 = System.Posix.Internals.puts2_closure;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9qmU() //  [R1]
         { info_tbl: [(c9qmU,
                       label: block_c9qmU_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qmU: // global
           I64[Sp - 8] = block_c9qmZ_info;
           R3 = 0;
           R2 = R1;
           P64[Sp] = R1;
           Sp = Sp - 8;
           call GHC.List.$wlenAcc_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9qmZ() //  [R1]
         { info_tbl: [(c9qmZ,
                       label: block_c9qmZ_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qmZ: // global
           I64[Sp - 8] = block_c9qn6_info;
           R2 = 1;
           _s9pup::I64 = R1;
           R1 = R1;
           I64[Sp] = _s9pup::I64;
           Sp = Sp - 8;
           call stg_newAlignedPinnedByteArray#(R2,
                                               R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qn6() //  [R1]
         { info_tbl: [(c9qn6,
                       label: block_c9qn6_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qn6: // global
           P64[Sp - 16] = P64[Sp + 16];
           I64[Sp - 8] = 0;
           P64[Sp] = R1 + 16;
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call _c9qnl() args: 0, res: 0, upd: 0;
     }
 },
 _c9qnl() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qnl: // global
           _s9puG::P64 = P64[Sp];
           I64[Sp] = block_c9qno_info;
           R1 = _s9puG::P64;
           if (R1 & 7 != 0) goto u9qo0; else goto c9qnq;
       u9qo0: // global
           call _c9qno(R1) args: 0, res: 0, upd: 0;
       c9qnq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qno() //  [R1]
         { info_tbl: [(c9qno,
                       label: block_c9qno_info
                       rep:StackRep [True, True, True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qno: // global
           if (R1 & 7 == 1) goto c9qnw; else goto c9qnB;
       c9qnw: // global
           _s9puv::P64 = P64[Sp + 32];
           (_s9puD::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite(1, I64[Sp + 16], I64[Sp + 24]);
           call MO_Touch(_s9puv::P64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9qnB: // global
           I64[Sp - 8] = block_c9qnz_info;
           _s9puL::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9puL::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qo1; else goto c9qnC;
       u9qo1: // global
           call _c9qnz(R1) args: 0, res: 0, upd: 0;
       c9qnC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qnz() //  [R1]
         { info_tbl: [(c9qnz,
                       label: block_c9qnz_info
                       rep:StackRep [False, True, True, True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qnz: // global
           _s9puH::I64 = I64[Sp + 16];
           _s9puL::P64 = P64[Sp + 8];
           I8[I64[Sp + 24] + _s9puH::I64] = %MO_SS_Conv_W64_W8(I64[R1 + 7]);
           P64[Sp + 8] = _s9puL::P64;
           I64[Sp + 16] = _s9puH::I64 + 1;
           Sp = Sp + 8;
           call _c9qnl() args: 0, res: 0, upd: 0;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.826124567 UTC

[section ""data" . System.Posix.Internals.puts_closure" {
     System.Posix.Internals.puts_closure:
         const System.Posix.Internals.puts_info;
         const 0;
 },
 System.Posix.Internals.puts_entry() //  [R2]
         { info_tbl: [(c9qo7,
                       label: System.Posix.Internals.puts_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qo7: // global
           R2 = R2;
           call System.Posix.Internals.puts1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.827090727 UTC

[section ""data" . System.Posix.Internals.s_issock_closure" {
     System.Posix.Internals.s_issock_closure:
         const System.Posix.Internals.s_issock_info;
 },
 System.Posix.Internals.s_issock_entry() //  [R2]
         { info_tbl: [(c9qoh,
                       label: System.Posix.Internals.s_issock_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qoh: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qoi; else goto c9qoj;
       c9qoi: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_issock_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qoj: // global
           I64[Sp - 8] = block_c9qoe_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qoE; else goto c9qof;
       u9qoE: // global
           call _c9qoe(R1) args: 0, res: 0, upd: 0;
       c9qof: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qoe() //  [R1]
         { info_tbl: [(c9qoe,
                       label: block_c9qoe_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qoe: // global
           (_s9puY::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC3ZCbaseZCSystemziPosixziInternalsZCSzuISSOCK(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9puY::I64) == 0 :: W32) goto c9qoA; else goto c9qou;
       c9qoA: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9qou: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.828215201 UTC

[section ""data" . System.Posix.Internals.fdFileSize5_closure" {
     System.Posix.Internals.fdFileSize5_closure:
         const GHC.Int.I32#_con_info;
         const (-1);
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.829052941 UTC

[section ""data" . System.Posix.Internals.fdFileSize_pred_closure" {
     System.Posix.Internals.fdFileSize_pred_closure:
         const System.Posix.Internals.fdFileSize_pred_info;
 },
 System.Posix.Internals.fdFileSize_pred_entry() //  [R2]
         { info_tbl: [(c9qoM,
                       label: System.Posix.Internals.fdFileSize_pred_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qoM: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qoN; else goto c9qoO;
       c9qoN: // global
           R2 = R2;
           R1 = System.Posix.Internals.fdFileSize_pred_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qoO: // global
           I64[Sp - 8] = block_c9qoJ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qoW; else goto c9qoK;
       u9qoW: // global
           call _c9qoJ(R1) args: 0, res: 0, upd: 0;
       c9qoK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qoJ() //  [R1]
         { info_tbl: [(c9qoJ,
                       label: block_c9qoJ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qoJ: // global
           if (I64[R1 + 7] == (-1)) goto c9qoV; else goto c9qoU;
       c9qoV: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9qoU: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.830071374 UTC

[section ""cstring" . lvl_r9pfx_bytes" {
     lvl_r9pfx_bytes:
         I8[] [115,105,103,112,114,111,99,109,97,115,107]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.830793672 UTC

[section ""data" . lvl1_r9pfy_closure" {
     lvl1_r9pfy_closure:
         const lvl1_r9pfy_info;
         const 0;
         const 0;
         const 0;
 },
 lvl1_r9pfy_entry() //  [R1]
         { info_tbl: [(c9qp3,
                       label: lvl1_r9pfy_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qp3: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qp4; else goto c9qp5;
       c9qp4: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qp5: // global
           (_c9qp0::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9qp0::I64 == 0) goto c9qp2; else goto c9qp1;
       c9qp2: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9qp1: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qp0::I64;
           R2 = lvl_r9pfx_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.831773477 UTC

[section ""data" . lvl2_r9pfz_closure" {
     lvl2_r9pfz_closure:
         const lvl2_r9pfz_info;
         const 0;
 },
 lvl2_r9pfz_entry() //  [R2]
         { info_tbl: [(c9qpc,
                       label: lvl2_r9pfz_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qpc: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl1_r9pfy_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.83250496 UTC

[section ""cstring" . lvl3_r9pfA_bytes" {
     lvl3_r9pfA_bytes:
         I8[] [116,99,83,101,116,65,116,116,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.833160966 UTC

[section ""data" . lvl4_r9pfB_closure" {
     lvl4_r9pfB_closure:
         const lvl4_r9pfB_info;
         const 0;
         const 0;
         const 0;
 },
 lvl4_r9pfB_entry() //  [R1]
         { info_tbl: [(c9qpl,
                       label: lvl4_r9pfB_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qpl: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qpm; else goto c9qpn;
       c9qpm: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qpn: // global
           (_c9qpi::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9qpi::I64 == 0) goto c9qpk; else goto c9qpj;
       c9qpk: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9qpj: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qpi::I64;
           R2 = lvl3_r9pfA_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.834050584 UTC

[section ""cstring" . lvl5_r9pfC_bytes" {
     lvl5_r9pfC_bytes:
         I8[] [115,105,103,97,100,100,115,101,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.834779746 UTC

[section ""data" . lvl6_r9pfD_closure" {
     lvl6_r9pfD_closure:
         const lvl6_r9pfD_info;
         const 0;
         const 0;
         const 0;
 },
 lvl6_r9pfD_entry() //  [R1]
         { info_tbl: [(c9qpu,
                       label: lvl6_r9pfD_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qpu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qpv; else goto c9qpw;
       c9qpv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qpw: // global
           (_c9qpr::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9qpr::I64 == 0) goto c9qpt; else goto c9qps;
       c9qpt: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9qps: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qpr::I64;
           R2 = lvl5_r9pfC_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.835800143 UTC

[section ""data" . lvl7_r9pfE_closure" {
     lvl7_r9pfE_closure:
         const lvl7_r9pfE_info;
         const 0;
 },
 lvl7_r9pfE_entry() //  [R2]
         { info_tbl: [(c9qpD,
                       label: lvl7_r9pfE_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qpD: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl6_r9pfD_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.836556992 UTC

[section ""cstring" . lvl8_r9pfF_bytes" {
     lvl8_r9pfF_bytes:
         I8[] [115,105,103,101,109,112,116,121,115,101,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.837467417 UTC

[section ""data" . lvl9_r9pfG_closure" {
     lvl9_r9pfG_closure:
         const lvl9_r9pfG_info;
         const 0;
         const 0;
         const 0;
 },
 lvl9_r9pfG_entry() //  [R1]
         { info_tbl: [(c9qpM,
                       label: lvl9_r9pfG_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qpM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qpN; else goto c9qpO;
       c9qpN: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qpO: // global
           (_c9qpJ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9qpJ::I64 == 0) goto c9qpL; else goto c9qpK;
       c9qpL: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9qpK: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qpJ::I64;
           R2 = lvl8_r9pfF_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.838502099 UTC

[section ""data" . lvl10_r9pfH_closure" {
     lvl10_r9pfH_closure:
         const lvl10_r9pfH_info;
         const 0;
 },
 lvl10_r9pfH_entry() //  [R2]
         { info_tbl: [(c9qpV,
                       label: lvl10_r9pfH_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qpV: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl9_r9pfG_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.841547256 UTC

[section ""data" . System.Posix.Internals.getEcho3_closure" {
     System.Posix.Internals.getEcho3_closure:
         const System.Posix.Internals.getEcho3_info;
         const 0;
 },
 sat_s9pvA_entry() //  [R1]
         { info_tbl: [(c9qqn,
                       label: sat_s9pvA_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qqn: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qqt; else goto c9qqs;
       c9qqt: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9qqs: // global
           (_s9pvx::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC10ZCbaseZCSystemziPosixziInternalsZCtcgetattr(I64[R1 + 7], I64[R1 + 15]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pvx::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9pwD_entry() //  [R1]
         { info_tbl: [(c9qrw,
                       label: sat_s9pwD_info
                       rep:HeapRep 3 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qrw: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qrJ; else goto c9qrI;
       c9qrJ: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9qrI: // global
           (_s9pwA::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC9ZCbaseZCSystemziPosixziInternalsZCtcsetattr(I64[R1 + 7], %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[R1 + 23])), I64[R1 + 15]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pwA::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.getEcho3_entry() //  [R2, R3]
         { info_tbl: [(c9qrK,
                       label: System.Posix.Internals.getEcho3_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qrK: // global
           if ((Sp + -72) < SpLim) (likely: False) goto c9qrL; else goto c9qrM;
       c9qrL: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Posix.Internals.getEcho3_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9qrM: // global
           _s9pve::P64 = R3;
           (_s9pvj::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_termios();
           I64[Sp - 32] = block_c9qq3_info;
           R1 = _s9pvj::I64;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = _s9pve::P64;
           I64[Sp - 8] = _s9pvj::I64;
           Sp = Sp - 32;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qq3() //  [R1]
         { info_tbl: [(c9qq3,
                       label: block_c9qq3_info
                       rep:StackRep [False, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qq3: // global
           I64[Sp] = block_c9qq5_info;
           _s9pvp::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s9pvp::P64;
           if (R1 & 7 != 0) goto u9qtB; else goto c9qq6;
       u9qtB: // global
           call _c9qq5(R1) args: 0, res: 0, upd: 0;
       c9qq6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qq5() //  [R1]
         { info_tbl: [(c9qq5,
                       label: block_c9qq5_info
                       rep:StackRep [False, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qq5: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9qrQ; else goto c9qrP;
       c9qrQ: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qrP: // global
           _s9pvr::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9pvA_info;
           I64[Hp - 8] = _s9pvr::I64;
           _s9pvs::I64 = P64[Sp + 8] + 16;
           I64[Hp] = _s9pvs::I64;
           I64[Sp - 16] = block_c9qqu_info;
           R4 = Hp - 15;
           R3 = lvl4_r9pfB_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           I64[Sp - 8] = _s9pvs::I64;
           I64[Sp] = _s9pvr::I64;
           Sp = Sp - 16;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9qqu() //  []
         { info_tbl: [(c9qqu,
                       label: block_c9qqu_info
                       rep:StackRep [True, True, False, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qqu: // global
           _s9pvr::I64 = I64[Sp + 16];
           if (%MO_S_Gt_W64(_s9pvr::I64, 2)) goto s9pvE; else goto c9qtg;
       c9qtg: // global
           _s9pvj::I64 = I64[Sp + 40];
           _s9pvs::I64 = I64[Sp + 8];
           (_s9pxi::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [PtrHint] __hscore_get_saved_termios(_s9pvr::I64);
           if (_s9pxi::I64 != 0) goto s9pvE; else goto c9qtf;
       c9qtf: // global
           (_s9pxo::I64) = call "ccall" arg hints:  []  result hints:  [PtrHint] malloc(_s9pvj::I64);
           if (_s9pxo::I64 == 0) goto c9qte; else goto c9qtd;
       c9qte: // global
           R1 = Foreign.Marshal.Alloc.malloc1_closure;
           Sp = Sp + 48;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
       c9qtd: // global
           (_s9pxu::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint,]  result hints:  [PtrHint] memcpy(_s9pxo::I64, _s9pvs::I64, _s9pvj::I64);
           call "ccall" arg hints:  [‘signed’,
                                     PtrHint]  result hints:  [] __hscore_set_saved_termios(_s9pvr::I64, _s9pxo::I64);
           goto s9pvE;
       s9pvE: // global
           (_s9pvJ::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_sigset_t();
           I64[Sp] = block_c9qqC_info;
           R1 = _s9pvJ::I64;
           I64[Sp + 40] = _s9pvJ::I64;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qqC() //  [R1]
         { info_tbl: [(c9qqC,
                       label: block_c9qqC_info
                       rep:StackRep [True, True, False, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qqC: // global
           I64[Sp] = block_c9qqE_info;
           _s9pvP::P64 = R1;
           R1 = I64[Sp + 40];
           P64[Sp + 40] = _s9pvP::P64;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qqE() //  [R1]
         { info_tbl: [(c9qqE,
                       label: block_c9qqE_info
                       rep:StackRep [True, True, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qqE: // global
           _s9pvW::I64 = P64[Sp + 40] + 16;
           (_s9pw0::I64) = call "capi" arg hints:  [PtrHint]  result hints:  [‘signed’] ghczuwrapperZC13ZCbaseZCSystemziPosixziInternalsZCsigemptyset(_s9pvW::I64);
           if (%MO_SS_Conv_W64_W32(_s9pw0::I64) == (-1) :: W32) goto c9qsN; else goto c9qrW;
       c9qsN: // global
           (_s9pxc::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _s9pxc::I64;
           Sp = Sp + 48;
           call lvl10_r9pfH_entry(R2) args: 8, res: 0, upd: 8;
       c9qrW: // global
           (_s9pw5::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sigttou();
           (_s9pwa::I64) = call "capi" arg hints:  [PtrHint,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC12ZCbaseZCSystemziPosixziInternalsZCsigaddset(_s9pvW::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pw5::I64)));
           if (%MO_SS_Conv_W64_W32(_s9pwa::I64) == (-1) :: W32) goto c9qsH; else goto c9qrZ;
       c9qsH: // global
           (_s9px7::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _s9px7::I64;
           Sp = Sp + 48;
           call lvl7_r9pfE_entry(R2) args: 8, res: 0, upd: 8;
       c9qrZ: // global
           (_s9pwf::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sig_block();
           _s9pwg::I64 = R1 + 16;
           (_s9pwl::I64) = call "capi" arg hints:  [‘signed’, PtrHint,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC11ZCbaseZCSystemziPosixziInternalsZCsigprocmask(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pwf::I64)), _s9pvW::I64, _s9pwg::I64);
           _s9pwm::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pwl::I64));
           if (_s9pwm::I64 == (-1)) goto c9qsB; else goto u9qtz;
       c9qsB: // global
           (_s9px2::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _s9px2::I64;
           Sp = Sp + 48;
           call lvl2_r9pfz_entry(R2) args: 8, res: 0, upd: 8;
       u9qtz: // global
           I64[Sp - 16] = _s9pwg::I64;
           I64[Sp - 8] = _s9pwm::I64;
           P64[Sp] = R1;
           Sp = Sp - 16;
           call _c9qrj() args: 0, res: 0, upd: 0;
     }
 },
 _c9qrj() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qrj: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qs6; else goto c9qs5;
       c9qs6: // global
           HpAlloc = 16;
           I64[Sp - 8] = block_c9qri_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9qs5: // global
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = I64[Sp + 24];
           I64[Sp - 8] = block_c9qrm_info;
           R2 = Hp - 7;
           R1 = P64[Sp + 48];
           Sp = Sp - 8;
           call stg_ap_pv_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qri() //  [R1]
         { info_tbl: [(c9qri,
                       label: block_c9qri_info
                       rep:StackRep [True, True, False, True, True, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qri: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _c9qrj() args: 0, res: 0, upd: 0;
     }
 },
 _c9qrm() //  [R1]
         { info_tbl: [(c9qrm,
                       label: block_c9qrm_info
                       rep:StackRep [True, True, False, True, True, False, True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qrm: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9qs9; else goto c9qs8;
       c9qs9: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qs8: // global
           _s9pvr::I64 = I64[Sp + 40];
           _s9pvs::I64 = I64[Sp + 32];
           (_s9pwu::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_tcsanow();
           I64[Hp - 24] = sat_s9pwD_info;
           I64[Hp - 16] = _s9pvr::I64;
           I64[Hp - 8] = _s9pvs::I64;
           I64[Hp] = _s9pwu::I64;
           I64[Sp] = block_c9qs1_info;
           R4 = Hp - 23;
           R3 = lvl4_r9pfB_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           P64[Sp + 56] = R1;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9qs1() //  []
         { info_tbl: [(c9qs1,
                       label: block_c9qs1_info
                       rep:StackRep [True, True, False, True, True, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qs1: // global
           _s9pvp::P64 = P64[Sp + 48];
           _s9pvP::P64 = P64[Sp + 64];
           _s9pvV::P64 = P64[Sp + 24];
           _s9pwg::I64 = I64[Sp + 8];
           _s9pwq::P64 = P64[Sp + 56];
           (_s9pwK::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sig_setmask();
           (_s9pwP::I64) = call "capi" arg hints:  [‘signed’, PtrHint,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC11ZCbaseZCSystemziPosixziInternalsZCsigprocmask(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pwK::I64)), _s9pwg::I64, 0);
           if (%MO_SS_Conv_W64_W32(_s9pwP::I64) == (-1) :: W32) goto c9qsv; else goto c9qsp;
       c9qsv: // global
           (_s9pwX::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _s9pwX::I64;
           Sp = Sp + 72;
           call lvl2_r9pfz_entry(R2) args: 8, res: 0, upd: 8;
       c9qsp: // global
           call MO_Touch(_s9pvV::P64);
           call MO_Touch(_s9pvP::P64);
           call MO_Touch(_s9pvp::P64);
           R1 = _s9pwq::P64;
           Sp = Sp + 72;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.846292356 UTC

[section ""data" . System.Posix.Internals.tcSetAttr_closure" {
     System.Posix.Internals.tcSetAttr_closure:
         const System.Posix.Internals.tcSetAttr_info;
         const 0;
 },
 System.Posix.Internals.tcSetAttr_entry() //  [R2, R3]
         { info_tbl: [(c9qtI,
                       label: System.Posix.Internals.tcSetAttr_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qtI: // global
           R3 = R3;
           R2 = R2;
           call System.Posix.Internals.getEcho3_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.847930713 UTC

[section ""data" . System.Posix.Internals.setCooked1_closure" {
     System.Posix.Internals.setCooked1_closure:
         const System.Posix.Internals.setCooked1_info;
         const 0;
 },
 sat_s9pys_entry() //  [R1, R2]
         { info_tbl: [(c9qtX,
                       label: sat_s9pys_info
                       rep:HeapRep 1 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qtX: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9qtY; else goto c9qtZ;
       c9qtY: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qtZ: // global
           I64[Sp - 16] = block_c9qtU_info;
           _s9pxA::P64 = P64[R1 + 6];
           R1 = R2;
           P64[Sp - 8] = _s9pxA::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9qvo; else goto c9qtV;
       u9qvo: // global
           call _c9qtU(R1) args: 0, res: 0, upd: 0;
       c9qtV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qtU() //  [R1]
         { info_tbl: [(c9qtU,
                       label: block_c9qtU_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qtU: // global
           _s9pxA::P64 = P64[Sp + 8];
           _s9pxF::I64 = I64[R1 + 7];
           (_s9pxJ::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_lflag(_s9pxF::I64);
           I64[Sp - 16] = block_c9qu6_info;
           R1 = _s9pxA::P64;
           I64[Sp - 8] = _s9pxJ::I64;
           I64[Sp] = _s9pxF::I64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9qvn; else goto c9qur;
       u9qvn: // global
           call _c9qu6(R1) args: 0, res: 0, upd: 0;
       c9qur: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qu6() //  [R1]
         { info_tbl: [(c9qu6,
                       label: block_c9qu6_info
                       rep:StackRep [True, True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qu6: // global
           _s9pxA::P64 = P64[Sp + 24];
           _s9pxF::I64 = I64[Sp + 16];
           _s9pxJ::I64 = I64[Sp + 8];
           if (R1 & 7 == 1) goto c9qux; else goto c9quB;
       c9qux: // global
           (_s9pyc::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_icanon();
           _s9pxL::I64 = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pxJ::I64)) & %MO_UU_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pyc::I64)) ^ 4294967295;
           goto s9pxK;
       c9quB: // global
           (_s9pym::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_icanon();
           _s9pxL::I64 = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pxJ::I64)) | %MO_UU_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pym::I64));
           goto s9pxK;
       s9pxK: // global
           call "ccall" arg hints:  [PtrHint,]  result hints:  [] __hscore_poke_lflag(_s9pxF::I64, _s9pxL::I64);
           I64[Sp + 8] = block_c9que_info;
           R1 = _s9pxA::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9qvp; else goto c9qug;
       u9qvp: // global
           call _c9que(R1) args: 0, res: 0, upd: 0;
       c9qug: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9que() //  [R1]
         { info_tbl: [(c9que,
                       label: block_c9que_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9que: // global
           if (R1 & 7 == 1) goto c9qum; else goto c9quq;
       c9qum: // global
           (_s9pxT::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] __hscore_ptr_c_cc(I64[Sp + 8]);
           (_s9pxX::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_vmin();
           I8[_s9pxT::I64 + %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pxX::I64))] = 1 :: W8;
           (_s9py4::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_vtime();
           I8[_s9pxT::I64 + %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9py4::I64))] = 0 :: W8;
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9quq: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.setCooked1_entry() //  [R2, R3]
         { info_tbl: [(c9qvq,
                       label: System.Posix.Internals.setCooked1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qvq: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qvu; else goto c9qvt;
       c9qvu: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = System.Posix.Internals.setCooked1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9qvt: // global
           I64[Hp - 8] = sat_s9pys_info;
           P64[Hp] = R3;
           R3 = Hp - 6;
           R2 = R2;
           call System.Posix.Internals.getEcho3_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.850562225 UTC

[section ""data" . System.Posix.Internals.setCooked_closure" {
     System.Posix.Internals.setCooked_closure:
         const System.Posix.Internals.setCooked_info;
         const 0;
 },
 System.Posix.Internals.setCooked_entry() //  [R2, R3]
         { info_tbl: [(c9qvz,
                       label: System.Posix.Internals.setCooked_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qvz: // global
           R3 = R3;
           R2 = R2;
           call System.Posix.Internals.setCooked1_entry(R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.851757614 UTC

[section ""data" . System.Posix.Internals.getEcho2_closure" {
     System.Posix.Internals.getEcho2_closure:
         const System.Posix.Internals.getEcho2_info;
 },
 sat_s9pyK_entry() //  [R1]
         { info_tbl: [(c9qvU,
                       label: sat_s9pyK_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qvU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qvV; else goto c9qwl;
       c9qvV: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qwl: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9pyA::I64 = I64[R1 + 16];
           (_s9pyE::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_echo();
           if (%MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pyA::I64)) & %MO_UU_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pyE::I64)) == 0) goto c9qwh; else goto c9qwb;
       c9qwh: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9qwb: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 System.Posix.Internals.getEcho2_entry() //  [R2]
         { info_tbl: [(c9qwm,
                       label: System.Posix.Internals.getEcho2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qwm: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qwn; else goto c9qwo;
       c9qwn: // global
           R2 = R2;
           R1 = System.Posix.Internals.getEcho2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qwo: // global
           I64[Sp - 8] = block_c9qvG_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qws; else goto c9qvH;
       u9qws: // global
           call _c9qvG(R1) args: 0, res: 0, upd: 0;
       c9qvH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qvG() //  [R1]
         { info_tbl: [(c9qvG,
                       label: block_c9qvG_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qvG: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9qwr; else goto c9qwq;
       c9qwr: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qwq: // global
           (_s9pyA::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_lflag(I64[R1 + 7]);
           I64[Hp - 16] = sat_s9pyK_info;
           I64[Hp] = _s9pyA::I64;
           R1 = Hp - 16;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.853355174 UTC

[section ""data" . System.Posix.Internals.getEcho1_closure" {
     System.Posix.Internals.getEcho1_closure:
         const System.Posix.Internals.getEcho1_info;
         const 0;
 },
 System.Posix.Internals.getEcho1_entry() //  [R2]
         { info_tbl: [(c9qwx,
                       label: System.Posix.Internals.getEcho1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qwx: // global
           R3 = System.Posix.Internals.getEcho2_closure+2;
           R2 = R2;
           call System.Posix.Internals.getEcho3_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.854210008 UTC

[section ""data" . System.Posix.Internals.getEcho_closure" {
     System.Posix.Internals.getEcho_closure:
         const System.Posix.Internals.getEcho_info;
         const 0;
 },
 System.Posix.Internals.getEcho_entry() //  [R2]
         { info_tbl: [(c9qwE,
                       label: System.Posix.Internals.getEcho_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qwE: // global
           R2 = R2;
           call System.Posix.Internals.getEcho1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.855643218 UTC

[section ""data" . System.Posix.Internals.setEcho1_closure" {
     System.Posix.Internals.setEcho1_closure:
         const System.Posix.Internals.setEcho1_info;
         const 0;
 },
 sat_s9pzo_entry() //  [R1, R2]
         { info_tbl: [(c9qwT,
                       label: sat_s9pzo_info
                       rep:HeapRep 1 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qwT: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9qwU; else goto c9qwV;
       c9qwU: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qwV: // global
           I64[Sp - 16] = block_c9qwQ_info;
           _s9pyO::P64 = P64[R1 + 6];
           R1 = R2;
           P64[Sp - 8] = _s9pyO::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9qxU; else goto c9qwR;
       u9qxU: // global
           call _c9qwQ(R1) args: 0, res: 0, upd: 0;
       c9qwR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qwQ() //  [R1]
         { info_tbl: [(c9qwQ,
                       label: block_c9qwQ_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qwQ: // global
           _s9pyO::P64 = P64[Sp + 8];
           _s9pyT::I64 = I64[R1 + 7];
           (_s9pyX::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_lflag(_s9pyT::I64);
           I64[Sp - 8] = block_c9qx0_info;
           R1 = _s9pyO::P64;
           I64[Sp] = _s9pyX::I64;
           I64[Sp + 8] = _s9pyT::I64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qxT; else goto c9qx2;
       u9qxT: // global
           call _c9qx0(R1) args: 0, res: 0, upd: 0;
       c9qx2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qx0() //  [R1]
         { info_tbl: [(c9qx0,
                       label: block_c9qx0_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qx0: // global
           _s9pyT::I64 = I64[Sp + 16];
           _s9pyX::I64 = I64[Sp + 8];
           if (R1 & 7 == 1) goto c9qx8; else goto c9qxc;
       c9qx8: // global
           (_s9pz2::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_echo();
           call "ccall" arg hints:  [PtrHint,]  result hints:  [] __hscore_poke_lflag(_s9pyT::I64, %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pyX::I64)) & %MO_UU_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pz2::I64)) ^ 4294967295);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9qxc: // global
           (_s9pzf::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_echo();
           call "ccall" arg hints:  [PtrHint,]  result hints:  [] __hscore_poke_lflag(_s9pyT::I64, %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pyX::I64)) | %MO_UU_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pzf::I64)));
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.setEcho1_entry() //  [R2, R3]
         { info_tbl: [(c9qxV,
                       label: System.Posix.Internals.setEcho1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qxV: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qxZ; else goto c9qxY;
       c9qxZ: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = System.Posix.Internals.setEcho1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9qxY: // global
           I64[Hp - 8] = sat_s9pzo_info;
           P64[Hp] = R3;
           R3 = Hp - 6;
           R2 = R2;
           call System.Posix.Internals.getEcho3_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.857535568 UTC

[section ""data" . System.Posix.Internals.setEcho_closure" {
     System.Posix.Internals.setEcho_closure:
         const System.Posix.Internals.setEcho_info;
         const 0;
 },
 System.Posix.Internals.setEcho_entry() //  [R2, R3]
         { info_tbl: [(c9qy4,
                       label: System.Posix.Internals.setEcho_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qy4: // global
           R3 = R3;
           R2 = R2;
           call System.Posix.Internals.setEcho1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.858544708 UTC

[section ""data" . System.Posix.Internals.s_isfifo_closure" {
     System.Posix.Internals.s_isfifo_closure:
         const System.Posix.Internals.s_isfifo_info;
 },
 System.Posix.Internals.s_isfifo_entry() //  [R2]
         { info_tbl: [(c9qye,
                       label: System.Posix.Internals.s_isfifo_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qye: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qyf; else goto c9qyg;
       c9qyf: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_isfifo_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qyg: // global
           I64[Sp - 8] = block_c9qyb_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qyB; else goto c9qyc;
       u9qyB: // global
           call _c9qyb(R1) args: 0, res: 0, upd: 0;
       c9qyc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qyb() //  [R1]
         { info_tbl: [(c9qyb,
                       label: block_c9qyb_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qyb: // global
           (_s9pzv::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC4ZCbaseZCSystemziPosixziInternalsZCSzuISFIFO(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9pzv::I64) == 0 :: W32) goto c9qyx; else goto c9qyr;
       c9qyx: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9qyr: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.85990426 UTC

[section ""data" . System.Posix.Internals.s_isdir_closure" {
     System.Posix.Internals.s_isdir_closure:
         const System.Posix.Internals.s_isdir_info;
 },
 System.Posix.Internals.s_isdir_entry() //  [R2]
         { info_tbl: [(c9qyJ,
                       label: System.Posix.Internals.s_isdir_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qyJ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qyK; else goto c9qyL;
       c9qyK: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_isdir_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qyL: // global
           I64[Sp - 8] = block_c9qyG_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qz6; else goto c9qyH;
       u9qz6: // global
           call _c9qyG(R1) args: 0, res: 0, upd: 0;
       c9qyH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qyG() //  [R1]
         { info_tbl: [(c9qyG,
                       label: block_c9qyG_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qyG: // global
           (_s9pzD::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC5ZCbaseZCSystemziPosixziInternalsZCSzuISDIR(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9pzD::I64) == 0 :: W32) goto c9qz2; else goto c9qyW;
       c9qz2: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9qyW: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.861418083 UTC

[section ""data" . System.Posix.Internals.s_isblk_closure" {
     System.Posix.Internals.s_isblk_closure:
         const System.Posix.Internals.s_isblk_info;
 },
 System.Posix.Internals.s_isblk_entry() //  [R2]
         { info_tbl: [(c9qze,
                       label: System.Posix.Internals.s_isblk_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qze: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qzf; else goto c9qzg;
       c9qzf: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_isblk_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qzg: // global
           I64[Sp - 8] = block_c9qzb_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qzB; else goto c9qzc;
       u9qzB: // global
           call _c9qzb(R1) args: 0, res: 0, upd: 0;
       c9qzc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qzb() //  [R1]
         { info_tbl: [(c9qzb,
                       label: block_c9qzb_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qzb: // global
           (_s9pzL::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC6ZCbaseZCSystemziPosixziInternalsZCSzuISBLK(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9pzL::I64) == 0 :: W32) goto c9qzx; else goto c9qzr;
       c9qzx: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9qzr: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.862807534 UTC

[section ""data" . System.Posix.Internals.s_ischr_closure" {
     System.Posix.Internals.s_ischr_closure:
         const System.Posix.Internals.s_ischr_info;
 },
 System.Posix.Internals.s_ischr_entry() //  [R2]
         { info_tbl: [(c9qzJ,
                       label: System.Posix.Internals.s_ischr_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qzJ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qzK; else goto c9qzL;
       c9qzK: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_ischr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qzL: // global
           I64[Sp - 8] = block_c9qzG_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qA6; else goto c9qzH;
       u9qA6: // global
           call _c9qzG(R1) args: 0, res: 0, upd: 0;
       c9qzH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qzG() //  [R1]
         { info_tbl: [(c9qzG,
                       label: block_c9qzG_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qzG: // global
           (_s9pzT::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC7ZCbaseZCSystemziPosixziInternalsZCSzuISCHR(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9pzT::I64) == 0 :: W32) goto c9qA2; else goto c9qzW;
       c9qA2: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9qzW: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.864175813 UTC

[section ""data" . System.Posix.Internals.s_isreg_closure" {
     System.Posix.Internals.s_isreg_closure:
         const System.Posix.Internals.s_isreg_info;
 },
 System.Posix.Internals.s_isreg_entry() //  [R2]
         { info_tbl: [(c9qAe,
                       label: System.Posix.Internals.s_isreg_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qAe: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qAf; else goto c9qAg;
       c9qAf: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_isreg_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qAg: // global
           I64[Sp - 8] = block_c9qAb_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qAB; else goto c9qAc;
       u9qAB: // global
           call _c9qAb(R1) args: 0, res: 0, upd: 0;
       c9qAc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qAb() //  [R1]
         { info_tbl: [(c9qAb,
                       label: block_c9qAb_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qAb: // global
           (_s9pA1::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9pA1::I64) == 0 :: W32) goto c9qAx; else goto c9qAr;
       c9qAx: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9qAr: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.865455664 UTC

[section ""data" . System.Posix.Internals.fdStat2_closure" {
     System.Posix.Internals.fdStat2_closure:
         const System.Posix.Internals.fdStat2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.fdStat2_entry() //  [R1]
         { info_tbl: [(c9qAI,
                       label: System.Posix.Internals.fdStat2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qAI: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qAJ; else goto c9qAK;
       c9qAJ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qAK: // global
           (_c9qAF::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9qAF::I64 == 0) goto c9qAH; else goto c9qAG;
       c9qAH: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9qAG: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qAF::I64;
           R2 = System.Posix.Internals.ioe_unknownfiletype_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.866913921 UTC

[section ""data" . System.Posix.Internals.$wstatGetType_closure" {
     System.Posix.Internals.$wstatGetType_closure:
         const System.Posix.Internals.$wstatGetType_info;
         const 0;
 },
 System.Posix.Internals.$wstatGetType_entry() //  [R2]
         { info_tbl: [(c9qAT,
                       label: System.Posix.Internals.$wstatGetType_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qAT: // global
           (_s9pA8::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_mode(R2);
           _s9pA9::I64 = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pA8::I64));
           (_s9pAd::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC5ZCbaseZCSystemziPosixziInternalsZCSzuISDIR(_s9pA9::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAd::I64) == 0 :: W32) goto c9qBa; else goto c9qB4;
       c9qBa: // global
           (_s9pAi::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC4ZCbaseZCSystemziPosixziInternalsZCSzuISFIFO(_s9pA9::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAi::I64) != 0 :: W32) goto c9qBT; else goto c9qBr;
       c9qBr: // global
           (_s9pAn::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC3ZCbaseZCSystemziPosixziInternalsZCSzuISSOCK(_s9pA9::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAn::I64) != 0 :: W32) goto c9qBT; else goto c9qBI;
       c9qBI: // global
           (_s9pAs::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC7ZCbaseZCSystemziPosixziInternalsZCSzuISCHR(_s9pA9::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAs::I64) != 0 :: W32) goto c9qBT; else goto c9qBZ;
       c9qBT: // global
           R1 = GHC.IO.Device.Stream_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9qBZ: // global
           (_s9pAx::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG(_s9pA9::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAx::I64) == 0 :: W32) goto c9qCg; else goto c9qCa;
       c9qCg: // global
           (_s9pAC::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC6ZCbaseZCSystemziPosixziInternalsZCSzuISBLK(_s9pA9::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAC::I64) == 0 :: W32) goto c9qCx; else goto c9qCr;
       c9qCx: // global
           R1 = System.Posix.Internals.fdStat2_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
       c9qCr: // global
           R1 = GHC.IO.Device.RawDevice_closure+4;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9qCa: // global
           R1 = GHC.IO.Device.RegularFile_closure+3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9qB4: // global
           R1 = GHC.IO.Device.Directory_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.868390344 UTC

[section ""data" . System.Posix.Internals.statGetType1_closure" {
     System.Posix.Internals.statGetType1_closure:
         const System.Posix.Internals.statGetType1_info;
         const 0;
 },
 System.Posix.Internals.statGetType1_entry() //  [R2]
         { info_tbl: [(c9qCI,
                       label: System.Posix.Internals.statGetType1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qCI: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qCJ; else goto c9qCK;
       c9qCJ: // global
           R2 = R2;
           R1 = System.Posix.Internals.statGetType1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qCK: // global
           I64[Sp - 8] = block_c9qCF_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qCO; else goto c9qCG;
       u9qCO: // global
           call _c9qCF(R1) args: 0, res: 0, upd: 0;
       c9qCG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qCF() //  [R1]
         { info_tbl: [(c9qCF,
                       label: block_c9qCF_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qCF: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call System.Posix.Internals.$wstatGetType_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.869478984 UTC

[section ""data" . System.Posix.Internals.statGetType_closure" {
     System.Posix.Internals.statGetType_closure:
         const System.Posix.Internals.statGetType_info;
         const 0;
 },
 System.Posix.Internals.statGetType_entry() //  [R2]
         { info_tbl: [(c9qCT,
                       label: System.Posix.Internals.statGetType_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qCT: // global
           R2 = R2;
           call System.Posix.Internals.statGetType1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.870153466 UTC

[section ""cstring" . lvl11_r9pfI_bytes" {
     lvl11_r9pfI_bytes:
         I8[] [115,101,116,67,108,111,115,101,79,110,69,120,101,99]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.870918752 UTC

[section ""data" . lvl12_r9pfJ_closure" {
     lvl12_r9pfJ_closure:
         const lvl12_r9pfJ_info;
         const 0;
         const 0;
         const 0;
 },
 lvl12_r9pfJ_entry() //  [R1]
         { info_tbl: [(c9qD2,
                       label: lvl12_r9pfJ_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qD2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qD3; else goto c9qD4;
       c9qD3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qD4: // global
           (_c9qCZ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9qCZ::I64 == 0) goto c9qD1; else goto c9qD0;
       c9qD1: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9qD0: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qCZ::I64;
           R2 = lvl11_r9pfI_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.871930475 UTC

[section ""data" . System.Posix.Internals.setCloseOnExec2_closure" {
     System.Posix.Internals.setCloseOnExec2_closure:
         const System.Posix.Internals.setCloseOnExec2_info;
         const 0;
 },
 System.Posix.Internals.setCloseOnExec2_entry() //  [R2]
         { info_tbl: [(c9qDb,
                       label: System.Posix.Internals.setCloseOnExec2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qDb: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl12_r9pfJ_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.872966514 UTC

[section ""data" . System.Posix.Internals.$wsetCloseOnExec_closure" {
     System.Posix.Internals.$wsetCloseOnExec_closure:
         const System.Posix.Internals.$wsetCloseOnExec_info;
         const 0;
 },
 System.Posix.Internals.$wsetCloseOnExec_entry() //  [R2]
         { info_tbl: [(c9qDm,
                       label: System.Posix.Internals.$wsetCloseOnExec_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qDm: // global
           (_s9pAQ::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfd();
           (_s9pAU::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_fd_cloexec();
           (_s9pAZ::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(R2, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pAQ::I64)), _s9pAU::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAZ::I64) == (-1) :: W32) goto c9qDF; else goto c9qDz;
       c9qDF: // global
           (_s9pB4::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _s9pB4::I64;
           call System.Posix.Internals.setCloseOnExec2_entry(R2) args: 8, res: 0, upd: 8;
       c9qDz: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.874363272 UTC

[section ""data" . System.Posix.Internals.setCloseOnExec1_closure" {
     System.Posix.Internals.setCloseOnExec1_closure:
         const System.Posix.Internals.setCloseOnExec1_info;
         const 0;
 },
 System.Posix.Internals.setCloseOnExec1_entry() //  [R2]
         { info_tbl: [(c9qDR,
                       label: System.Posix.Internals.setCloseOnExec1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qDR: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qDS; else goto c9qDT;
       c9qDS: // global
           R2 = R2;
           R1 = System.Posix.Internals.setCloseOnExec1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qDT: // global
           I64[Sp - 8] = block_c9qDO_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qDX; else goto c9qDP;
       u9qDX: // global
           call _c9qDO(R1) args: 0, res: 0, upd: 0;
       c9qDP: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qDO() //  [R1]
         { info_tbl: [(c9qDO,
                       label: block_c9qDO_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qDO: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call System.Posix.Internals.$wsetCloseOnExec_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.875431114 UTC

[section ""data" . System.Posix.Internals.setCloseOnExec_closure" {
     System.Posix.Internals.setCloseOnExec_closure:
         const System.Posix.Internals.setCloseOnExec_info;
         const 0;
 },
 System.Posix.Internals.setCloseOnExec_entry() //  [R2]
         { info_tbl: [(c9qE2,
                       label: System.Posix.Internals.setCloseOnExec_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qE2: // global
           R2 = R2;
           call System.Posix.Internals.setCloseOnExec1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.876411386 UTC

[section ""data" . System.Posix.Internals.setNonBlockingFD2_closure" {
     System.Posix.Internals.setNonBlockingFD2_closure:
         const System.Posix.Internals.setNonBlockingFD2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.setNonBlockingFD2_entry() //  [R1]
         { info_tbl: [(c9qEe,
                       label: System.Posix.Internals.setNonBlockingFD2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qEe: // global
           _r9pee::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9qEq; else goto c9qEr;
       c9qEr: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qEt; else goto c9qEs;
       c9qEt: // global
           HpAlloc = 16;
           goto c9qEq;
       c9qEq: // global
           R1 = _r9pee::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qEs: // global
           (_c9qE8::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pee::P64);
           if (_c9qE8::I64 == 0) goto c9qEa; else goto c9qE9;
       c9qEa: // global
           call (I64[I64[_r9pee::P64]])() args: 8, res: 0, upd: 8;
       c9qE9: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qE8::I64;
           (_s9pBd::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_nonblock();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = ~%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pBd::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.877434752 UTC

[section ""cstring" . System.Posix.Internals.setNonBlockingFD4_bytes" {
     System.Posix.Internals.setNonBlockingFD4_bytes:
         I8[] [115,101,116,78,111,110,66,108,111,99,107,105,110,103,70,68]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.878144594 UTC

[section ""data" . System.Posix.Internals.setNonBlockingFD3_closure" {
     System.Posix.Internals.setNonBlockingFD3_closure:
         const System.Posix.Internals.setNonBlockingFD3_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.setNonBlockingFD3_entry() //  [R1]
         { info_tbl: [(c9qEA,
                       label: System.Posix.Internals.setNonBlockingFD3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qEA: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qEB; else goto c9qEC;
       c9qEB: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qEC: // global
           (_c9qEx::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9qEx::I64 == 0) goto c9qEz; else goto c9qEy;
       c9qEz: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9qEy: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qEx::I64;
           R2 = System.Posix.Internals.setNonBlockingFD4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.881994196 UTC

[section ""data" . System.Posix.Internals.$wsetNonBlockingFD_closure" {
     System.Posix.Internals.$wsetNonBlockingFD_closure:
         const System.Posix.Internals.$wsetNonBlockingFD_info;
         const 0;
 },
 sat_s9pBx_entry() //  [R1]
         { info_tbl: [(c9qEP,
                       label: sat_s9pBx_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qEP: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qF1; else goto c9qF0;
       c9qF1: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9qF0: // global
           (_s9pBu::I64) = call "capi" arg hints:  [‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC17ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[R1 + 7], %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[R1 + 15])));
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pBu::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.$wsetNonBlockingFD_entry() //  [R2, R3]
         { info_tbl: [(c9qF7,
                       label: System.Posix.Internals.$wsetNonBlockingFD_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qF7: // global
           _s9pBj::P64 = R3;
           _s9pBi::I64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto c9qF8; else goto c9qF9;
       c9qF9: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9qFb; else goto c9qFa;
       c9qFb: // global
           HpAlloc = 24;
           goto c9qF8;
       c9qF8: // global
           R3 = _s9pBj::P64;
           R2 = _s9pBi::I64;
           R1 = System.Posix.Internals.$wsetNonBlockingFD_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9qFa: // global
           (_s9pBo::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_getfl();
           I64[Hp - 16] = sat_s9pBx_info;
           I64[Hp - 8] = _s9pBi::I64;
           I64[Hp] = _s9pBo::I64;
           I64[Sp - 24] = block_c9qF2_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.setNonBlockingFD3_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           I64[Sp - 16] = _s9pBi::I64;
           P64[Sp - 8] = _s9pBj::P64;
           Sp = Sp - 24;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9qF2() //  [R1]
         { info_tbl: [(c9qF2,
                       label: block_c9qF2_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qF2: // global
           I64[Sp] = block_c9qF4_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u9qGx; else goto c9qF5;
       u9qGx: // global
           call _c9qF4(R1) args: 0, res: 0, upd: 0;
       c9qF5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qF4() //  [R1]
         { info_tbl: [(c9qF4,
                       label: block_c9qF4_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qF4: // global
           I64[Sp] = block_c9qFf_info;
           _s9pBC::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pBC::I64;
           if (R1 & 7 != 0) goto u9qGy; else goto c9qFh;
       u9qGy: // global
           call _c9qFf(R1) args: 0, res: 0, upd: 0;
       c9qFh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qFf() //  [R1]
         { info_tbl: [(c9qFf,
                       label: block_c9qFf_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qFf: // global
           if (R1 & 7 == 1) goto c9qFo; else goto c9qG9;
       c9qFo: // global
           I64[Sp] = block_c9qFl_info;
           R1 = System.Posix.Internals.setNonBlockingFD2_closure;
           if (R1 & 7 != 0) goto u9qGz; else goto c9qFp;
       u9qGz: // global
           call _c9qFl(R1) args: 0, res: 0, upd: 0;
       c9qFp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9qG9: // global
           _s9pBi::I64 = I64[Sp + 8];
           _s9pBC::I64 = I64[Sp + 16];
           (_s9pBX::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_nonblock();
           _s9pBY::I64 = _s9pBC::I64 | %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pBX::I64));
           if (_s9pBC::I64 == _s9pBY::I64) goto u9qGv; else goto c9qG8;
       u9qGv: // global
           Sp = Sp + 24;
           call _c9qG7() args: 0, res: 0, upd: 0;
       c9qG8: // global
           (_s9pC7::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfl();
           (_s9pCc::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(_s9pBi::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pC7::I64)), _s9pBY::I64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9qFl() //  [R1]
         { info_tbl: [(c9qFl,
                       label: block_c9qFl_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qFl: // global
           _s9pBC::I64 = I64[Sp + 16];
           _s9pBG::I64 = _s9pBC::I64 & I64[R1 + 7];
           if (_s9pBC::I64 == _s9pBG::I64) goto u9qGw; else goto c9qFK;
       u9qGw: // global
           Sp = Sp + 24;
           call _c9qG7() args: 0, res: 0, upd: 0;
       c9qFK: // global
           _s9pBi::I64 = I64[Sp + 8];
           (_s9pBO::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfl();
           (_s9pBT::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(_s9pBi::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pBO::I64)), _s9pBG::I64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9qG7() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qG7: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.884772734 UTC

[section ""data" . System.Posix.Internals.setNonBlockingFD1_closure" {
     System.Posix.Internals.setNonBlockingFD1_closure:
         const System.Posix.Internals.setNonBlockingFD1_info;
         const 0;
 },
 System.Posix.Internals.setNonBlockingFD1_entry() //  [R2, R3]
         { info_tbl: [(c9qGJ,
                       label: System.Posix.Internals.setNonBlockingFD1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qGJ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qGK; else goto c9qGL;
       c9qGK: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Posix.Internals.setNonBlockingFD1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9qGL: // global
           I64[Sp - 16] = block_c9qGG_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9qGP; else goto c9qGH;
       u9qGP: // global
           call _c9qGG(R1) args: 0, res: 0, upd: 0;
       c9qGH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qGG() //  [R1]
         { info_tbl: [(c9qGG,
                       label: block_c9qGG_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qGG: // global
           R3 = P64[Sp + 8];
           R2 = I64[R1 + 7];
           Sp = Sp + 16;
           call System.Posix.Internals.$wsetNonBlockingFD_entry(R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.886166307 UTC

[section ""data" . System.Posix.Internals.setNonBlockingFD_closure" {
     System.Posix.Internals.setNonBlockingFD_closure:
         const System.Posix.Internals.setNonBlockingFD_info;
         const 0;
 },
 System.Posix.Internals.setNonBlockingFD_entry() //  [R2, R3]
         { info_tbl: [(c9qGU,
                       label: System.Posix.Internals.setNonBlockingFD_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qGU: // global
           R3 = R3;
           R2 = R2;
           call System.Posix.Internals.setNonBlockingFD1_entry(R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.886890944 UTC

[section ""cstring" . System.Posix.Internals.fdGetMode3_bytes" {
     System.Posix.Internals.fdGetMode3_bytes:
         I8[] [102,100,71,101,116,77,111,100,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.887533959 UTC

[section ""data" . System.Posix.Internals.fdGetMode2_closure" {
     System.Posix.Internals.fdGetMode2_closure:
         const System.Posix.Internals.fdGetMode2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.fdGetMode2_entry() //  [R1]
         { info_tbl: [(c9qH3,
                       label: System.Posix.Internals.fdGetMode2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qH3: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qH4; else goto c9qH5;
       c9qH4: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qH5: // global
           (_c9qH0::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9qH0::I64 == 0) goto c9qH2; else goto c9qH1;
       c9qH2: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9qH1: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qH0::I64;
           R2 = System.Posix.Internals.fdGetMode3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.889379873 UTC

[section ""data" . System.Posix.Internals.$wfdGetMode_closure" {
     System.Posix.Internals.$wfdGetMode_closure:
         const System.Posix.Internals.$wfdGetMode_info;
         const 0;
 },
 sat_s9pCw_entry() //  [R1]
         { info_tbl: [(c9qHi,
                       label: sat_s9pCw_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qHi: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qHu; else goto c9qHt;
       c9qHu: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9qHt: // global
           (_s9pCt::I64) = call "capi" arg hints:  [‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC17ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[R1 + 7], %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[R1 + 15])));
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pCt::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9pD3_entry() //  [R1]
         { info_tbl: [(c9qHE,
                       label: sat_s9pD3_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qHE: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9qHF; else goto c9qHG;
       c9qHF: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qHG: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9qHB_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9qJ6; else goto c9qHC;
       u9qJ6: // global
           call _c9qHB(R1) args: 0, res: 0, upd: 0;
       c9qHC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9qHB() //  [R1]
         { info_tbl: [(c9qHB,
                       label: block_c9qHB_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qHB: // global
           _s9pCB::I64 = I64[R1 + 7];
           (_s9pCF::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_wronly();
           if (_s9pCB::I64 & %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pCF::I64)) == 0) goto c9qIA; else goto c9qI2;
       c9qIA: // global
           (_s9pCX::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_rdwr();
           if (_s9pCB::I64 & %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pCX::I64)) == 0) goto c9qJ2; else goto c9qIW;
       c9qJ2: // global
           R1 = GHC.IO.IOMode.ReadMode_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9qIW: // global
           R1 = GHC.IO.IOMode.ReadWriteMode_closure+4;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9qI2: // global
           (_s9pCO::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_append();
           if (_s9pCB::I64 & %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pCO::I64)) == 0) goto c9qIu; else goto c9qIo;
       c9qIu: // global
           R1 = GHC.IO.IOMode.WriteMode_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9qIo: // global
           R1 = GHC.IO.IOMode.AppendMode_closure+3;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 System.Posix.Internals.$wfdGetMode_entry() //  [R2]
         { info_tbl: [(c9qJ7,
                       label: System.Posix.Internals.$wfdGetMode_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qJ7: // global
           _s9pCi::I64 = R2;
           if ((Sp + -8) < SpLim) (likely: False) goto c9qJ8; else goto c9qJ9;
       c9qJ9: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9qJb; else goto c9qJa;
       c9qJb: // global
           HpAlloc = 24;
           goto c9qJ8;
       c9qJ8: // global
           R2 = _s9pCi::I64;
           R1 = System.Posix.Internals.$wfdGetMode_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qJa: // global
           (_s9pCn::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_getfl();
           I64[Hp - 16] = sat_s9pCw_info;
           I64[Hp - 8] = _s9pCi::I64;
           I64[Hp] = _s9pCn::I64;
           I64[Sp - 8] = block_c9qHv_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.fdGetMode2_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9qHv() //  [R1]
         { info_tbl: [(c9qHv,
                       label: block_c9qHv_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qHv: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9qJe; else goto c9qJd;
       c9qJe: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qJd: // global
           I64[Hp - 16] = sat_s9pD3_info;
           P64[Hp] = R1;
           R1 = Hp - 16;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.891790978 UTC

[section ""data" . System.Posix.Internals.fdGetMode1_closure" {
     System.Posix.Internals.fdGetMode1_closure:
         const System.Posix.Internals.fdGetMode1_info;
         const 0;
 },
 System.Posix.Internals.fdGetMode1_entry() //  [R2]
         { info_tbl: [(c9qJm,
                       label: System.Posix.Internals.fdGetMode1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qJm: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qJn; else goto c9qJo;
       c9qJn: // global
           R2 = R2;
           R1 = System.Posix.Internals.fdGetMode1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qJo: // global
           I64[Sp - 8] = block_c9qJj_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qJs; else goto c9qJk;
       u9qJs: // global
           call _c9qJj(R1) args: 0, res: 0, upd: 0;
       c9qJk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qJj() //  [R1]
         { info_tbl: [(c9qJj,
                       label: block_c9qJj_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qJj: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call System.Posix.Internals.$wfdGetMode_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.892868455 UTC

[section ""data" . System.Posix.Internals.fdGetMode_closure" {
     System.Posix.Internals.fdGetMode_closure:
         const System.Posix.Internals.fdGetMode_info;
         const 0;
 },
 System.Posix.Internals.fdGetMode_entry() //  [R2]
         { info_tbl: [(c9qJx,
                       label: System.Posix.Internals.fdGetMode_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qJx: // global
           R2 = R2;
           call System.Posix.Internals.fdGetMode1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.89595606 UTC

[section ""data" . System.Posix.Internals.fdStat1_closure" {
     System.Posix.Internals.fdStat1_closure:
         const System.Posix.Internals.fdStat1_info;
         const 0;
 },
 sat_s9pDu_entry() //  [R1]
         { info_tbl: [(c9qJZ,
                       label: sat_s9pDu_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qJZ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qK5; else goto c9qK4;
       c9qK5: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9qK4: // global
           (_s9pDr::I64) = call "ccall" arg hints:  [‘signed’,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_fstat(I64[R1 + 7], I64[R1 + 15]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pDr::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.fdStat1_entry() //  [R2]
         { info_tbl: [(c9qK6,
                       label: System.Posix.Internals.fdStat1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qK6: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9qK7; else goto c9qK8;
       c9qK7: // global
           R2 = R2;
           R1 = System.Posix.Internals.fdStat1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qK8: // global
           (_s9pDd::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_stat();
           I64[Sp - 16] = block_c9qJF_info;
           R1 = _s9pDd::I64;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qJF() //  [R1]
         { info_tbl: [(c9qJF,
                       label: block_c9qJF_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qJF: // global
           I64[Sp] = block_c9qJH_info;
           _s9pDj::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s9pDj::P64;
           if (R1 & 7 != 0) goto u9qN9; else goto c9qJI;
       u9qN9: // global
           call _c9qJH(R1) args: 0, res: 0, upd: 0;
       c9qJI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qJH() //  [R1]
         { info_tbl: [(c9qJH,
                       label: block_c9qJH_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qJH: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9qKc; else goto c9qKb;
       c9qKc: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qKb: // global
           _s9pDl::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9pDu_info;
           I64[Hp - 8] = _s9pDl::I64;
           _s9pDm::I64 = P64[Sp + 8] + 16;
           I64[Hp] = _s9pDm::I64;
           I64[Sp - 8] = block_c9qKd_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.ioe_unknownfiletype3_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           I64[Sp] = _s9pDm::I64;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9qKd() //  []
         { info_tbl: [(c9qKd,
                       label: block_c9qKd_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qKd: // global
           (_s9pDB::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_mode(I64[Sp + 8]);
           _s9pDC::I64 = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pDB::I64));
           (_s9pDG::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC5ZCbaseZCSystemziPosixziInternalsZCSzuISDIR(_s9pDC::I64);
           _s9pDH::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pDG::I64));
           if (_s9pDH::I64 != 0) goto u9qMX; else goto c9qKI;
       u9qMX: // global
           I64[Sp] = _s9pDH::I64;
           call _c9qKr() args: 0, res: 0, upd: 0;
       c9qKI: // global
           (_s9pDX::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC4ZCbaseZCSystemziPosixziInternalsZCSzuISFIFO(_s9pDC::I64);
           _s9pDY::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pDX::I64));
           if (_s9pDY::I64 != 0) goto u9qMZ; else goto c9qL9;
       u9qMZ: // global
           I64[Sp] = _s9pDY::I64;
           call _c9qKS() args: 0, res: 0, upd: 0;
       c9qL9: // global
           (_s9pEe::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC3ZCbaseZCSystemziPosixziInternalsZCSzuISSOCK(_s9pDC::I64);
           _s9pEf::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pEe::I64));
           if (_s9pEf::I64 != 0) goto u9qN1; else goto c9qLA;
       u9qN1: // global
           I64[Sp] = _s9pEf::I64;
           call _c9qLj() args: 0, res: 0, upd: 0;
       c9qLA: // global
           (_s9pEv::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC7ZCbaseZCSystemziPosixziInternalsZCSzuISCHR(_s9pDC::I64);
           _s9pEw::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pEv::I64));
           if (_s9pEw::I64 != 0) goto u9qN3; else goto c9qM1;
       u9qN3: // global
           I64[Sp] = _s9pEw::I64;
           call _c9qLK() args: 0, res: 0, upd: 0;
       c9qM1: // global
           (_s9pEM::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG(_s9pDC::I64);
           _s9pEN::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pEM::I64));
           if (_s9pEN::I64 != 0) goto u9qN5; else goto c9qMs;
       u9qN5: // global
           I64[Sp] = _s9pEN::I64;
           call _c9qMb() args: 0, res: 0, upd: 0;
       c9qMs: // global
           (_s9pF3::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC6ZCbaseZCSystemziPosixziInternalsZCSzuISBLK(_s9pDC::I64);
           _s9pF4::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pF3::I64));
           if (_s9pF4::I64 != 0) goto u9qN7; else goto c9qMT;
       u9qN7: // global
           I64[Sp] = _s9pF4::I64;
           call _c9qMC() args: 0, res: 0, upd: 0;
       c9qMT: // global
           R1 = System.Posix.Internals.fdStat2_closure;
           Sp = Sp + 24;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9qKr() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qKr: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9qKF; else goto c9qKE;
       c9qKF: // global
           HpAlloc = 64;
           _s9pDH::I64 = I64[Sp];
           I64[Sp] = block_c9qKq_info;
           R1 = _s9pDH::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9qKE: // global
           _s9pDj::P64 = P64[Sp + 16];
           _s9pDm::I64 = I64[Sp + 8];
           (_s9pDL::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9pDm::I64);
           (_s9pDP::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9pDm::I64);
           call MO_Touch(_s9pDj::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9pDP::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9pDL::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.Directory_closure+1;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9qKq() //  [R1]
         { info_tbl: [(c9qKq,
                       label: block_c9qKq_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qKq: // global
           I64[Sp] = R1;
           call _c9qKr() args: 0, res: 0, upd: 0;
     }
 },
 _c9qKS() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qKS: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9qL6; else goto c9qL5;
       c9qL6: // global
           HpAlloc = 64;
           _s9pDY::I64 = I64[Sp];
           I64[Sp] = block_c9qKR_info;
           R1 = _s9pDY::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9qL5: // global
           _s9pDj::P64 = P64[Sp + 16];
           _s9pDm::I64 = I64[Sp + 8];
           (_s9pE2::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9pDm::I64);
           (_s9pE6::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9pDm::I64);
           call MO_Touch(_s9pDj::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9pE6::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9pE2::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.Stream_closure+2;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9qKR() //  [R1]
         { info_tbl: [(c9qKR,
                       label: block_c9qKR_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qKR: // global
           I64[Sp] = R1;
           call _c9qKS() args: 0, res: 0, upd: 0;
     }
 },
 _c9qLj() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qLj: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9qLx; else goto c9qLw;
       c9qLx: // global
           HpAlloc = 64;
           _s9pEf::I64 = I64[Sp];
           I64[Sp] = block_c9qLi_info;
           R1 = _s9pEf::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9qLw: // global
           _s9pDj::P64 = P64[Sp + 16];
           _s9pDm::I64 = I64[Sp + 8];
           (_s9pEj::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9pDm::I64);
           (_s9pEn::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9pDm::I64);
           call MO_Touch(_s9pDj::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9pEn::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9pEj::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.Stream_closure+2;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9qLi() //  [R1]
         { info_tbl: [(c9qLi,
                       label: block_c9qLi_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qLi: // global
           I64[Sp] = R1;
           call _c9qLj() args: 0, res: 0, upd: 0;
     }
 },
 _c9qLK() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qLK: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9qLY; else goto c9qLX;
       c9qLY: // global
           HpAlloc = 64;
           _s9pEw::I64 = I64[Sp];
           I64[Sp] = block_c9qLJ_info;
           R1 = _s9pEw::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9qLX: // global
           _s9pDj::P64 = P64[Sp + 16];
           _s9pDm::I64 = I64[Sp + 8];
           (_s9pEA::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9pDm::I64);
           (_s9pEE::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9pDm::I64);
           call MO_Touch(_s9pDj::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9pEE::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9pEA::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.Stream_closure+2;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9qLJ() //  [R1]
         { info_tbl: [(c9qLJ,
                       label: block_c9qLJ_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qLJ: // global
           I64[Sp] = R1;
           call _c9qLK() args: 0, res: 0, upd: 0;
     }
 },
 _c9qMb() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qMb: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9qMp; else goto c9qMo;
       c9qMp: // global
           HpAlloc = 64;
           _s9pEN::I64 = I64[Sp];
           I64[Sp] = block_c9qMa_info;
           R1 = _s9pEN::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9qMo: // global
           _s9pDj::P64 = P64[Sp + 16];
           _s9pDm::I64 = I64[Sp + 8];
           (_s9pER::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9pDm::I64);
           (_s9pEV::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9pDm::I64);
           call MO_Touch(_s9pDj::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9pEV::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9pER::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.RegularFile_closure+3;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9qMa() //  [R1]
         { info_tbl: [(c9qMa,
                       label: block_c9qMa_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qMa: // global
           I64[Sp] = R1;
           call _c9qMb() args: 0, res: 0, upd: 0;
     }
 },
 _c9qMC() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qMC: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9qMQ; else goto c9qMP;
       c9qMQ: // global
           HpAlloc = 64;
           _s9pF4::I64 = I64[Sp];
           I64[Sp] = block_c9qMB_info;
           R1 = _s9pF4::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9qMP: // global
           _s9pDj::P64 = P64[Sp + 16];
           _s9pDm::I64 = I64[Sp + 8];
           (_s9pF8::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9pDm::I64);
           (_s9pFc::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9pDm::I64);
           call MO_Touch(_s9pDj::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9pFc::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9pF8::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.RawDevice_closure+4;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9qMB() //  [R1]
         { info_tbl: [(c9qMB,
                       label: block_c9qMB_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qMB: // global
           I64[Sp] = R1;
           call _c9qMC() args: 0, res: 0, upd: 0;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.901358868 UTC

[section ""data" . System.Posix.Internals.fdStat_closure" {
     System.Posix.Internals.fdStat_closure:
         const System.Posix.Internals.fdStat_info;
         const 0;
 },
 System.Posix.Internals.fdStat_entry() //  [R2]
         { info_tbl: [(c9qNq,
                       label: System.Posix.Internals.fdStat_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qNq: // global
           R2 = R2;
           call System.Posix.Internals.fdStat1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.902288045 UTC

[section ""data" . System.Posix.Internals.fdType1_closure" {
     System.Posix.Internals.fdType1_closure:
         const System.Posix.Internals.fdType1_info;
         const 0;
 },
 System.Posix.Internals.fdType1_entry() //  [R2]
         { info_tbl: [(c9qNC,
                       label: System.Posix.Internals.fdType1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qNC: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qND; else goto c9qNE;
       c9qND: // global
           R2 = R2;
           R1 = System.Posix.Internals.fdType1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qNE: // global
           I64[Sp - 8] = block_c9qNx_info;
           R2 = R2;
           Sp = Sp - 8;
           call System.Posix.Internals.fdStat1_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9qNx() //  [R1]
         { info_tbl: [(c9qNx,
                       label: block_c9qNx_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qNx: // global
           I64[Sp] = block_c9qNz_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u9qNJ; else goto c9qNA;
       u9qNJ: // global
           call _c9qNz(R1) args: 0, res: 0, upd: 0;
       c9qNA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qNz() //  [R1]
         { info_tbl: [(c9qNz,
                       label: block_c9qNz_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qNz: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.903449862 UTC

[section ""data" . System.Posix.Internals.fdType_closure" {
     System.Posix.Internals.fdType_closure:
         const System.Posix.Internals.fdType_info;
         const 0;
 },
 System.Posix.Internals.fdType_entry() //  [R2]
         { info_tbl: [(c9qNO,
                       label: System.Posix.Internals.fdType_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qNO: // global
           R2 = R2;
           call System.Posix.Internals.fdType1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.90413463 UTC

[section ""cstring" . System.Posix.Internals.fileType3_bytes" {
     System.Posix.Internals.fileType3_bytes:
         I8[] [102,105,108,101,84,121,112,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.904861837 UTC

[section ""data" . System.Posix.Internals.fileType2_closure" {
     System.Posix.Internals.fileType2_closure:
         const System.Posix.Internals.fileType2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.fileType2_entry() //  [R1]
         { info_tbl: [(c9qNX,
                       label: System.Posix.Internals.fileType2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qNX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qNY; else goto c9qNZ;
       c9qNY: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qNZ: // global
           (_c9qNU::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9qNU::I64 == 0) goto c9qNW; else goto c9qNV;
       c9qNW: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9qNV: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qNU::I64;
           R2 = System.Posix.Internals.fileType3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.906852473 UTC

[section ""data" . System.Posix.Internals.fileType1_closure" {
     System.Posix.Internals.fileType1_closure:
         const System.Posix.Internals.fileType1_info;
         const 0;
 },
 sat_s9pFS_entry() //  [R1]
         { info_tbl: [(c9qOw,
                       label: sat_s9pFS_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qOw: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qOC; else goto c9qOB;
       c9qOC: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9qOB: // global
           (_s9pFP::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_stat(I64[R1 + 15], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pFP::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9pFW_entry() //  [R1, R2]
         { info_tbl: [(c9qOD,
                       label: sat_s9pFW_info
                       rep:HeapRep 1 nonptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qOD: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qOF; else goto c9qOG;
       c9qOF: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qOG: // global
           I64[Sp - 16] = block_c9qOh_info;
           _s9pFG::I64 = I64[R1 + 6];
           R1 = R2;
           I64[Sp - 8] = _s9pFG::I64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9qOM; else goto c9qOi;
       u9qOM: // global
           call _c9qOh(R1) args: 0, res: 0, upd: 0;
       c9qOi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qOh() //  [R1]
         { info_tbl: [(c9qOh,
                       label: block_c9qOh_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qOh: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9qOJ; else goto c9qOI;
       c9qOJ: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qOI: // global
           _s9pFK::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9pFS_info;
           I64[Hp - 8] = I64[Sp + 8];
           I64[Hp] = _s9pFK::I64;
           I64[Sp] = block_c9qOE_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.fileType2_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9qOE() //  []
         { info_tbl: [(c9qOE,
                       label: block_c9qOE_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qOE: // global
           R2 = I64[Sp + 8];
           Sp = Sp + 16;
           call System.Posix.Internals.$wstatGetType_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . u9qOY_srtd" {
     u9qOY_srtd:
         const S9qh6_srt;
         const 45;
         const 26388413317121;
 },
 System.Posix.Internals.fileType1_entry() //  [R2]
         { info_tbl: [(c9qON,
                       label: System.Posix.Internals.fileType1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qON: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9qOO; else goto c9qOP;
       c9qOO: // global
           R2 = R2;
           R1 = System.Posix.Internals.fileType1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qOP: // global
           (_s9pFw::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_stat();
           I64[Sp - 16] = block_c9qO5_info;
           R1 = _s9pFw::I64;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . u9qOZ_srtd" {
     u9qOZ_srtd:
         const S9qh6_srt;
         const 44;
         const 8796227272705;
 },
 _c9qO5() //  [R1]
         { info_tbl: [(c9qO5,
                       label: block_c9qO5_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qO5: // global
           I64[Sp - 8] = block_c9qO7_info;
           _s9pFC::P64 = R1;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp] = _s9pFC::P64;
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qO7() //  [R1]
         { info_tbl: [(c9qO7,
                       label: block_c9qO7_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qO7: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qOT; else goto c9qOS;
       c9qOT: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qOS: // global
           I64[Hp - 8] = sat_s9pFW_info;
           P64[Hp] = P64[Sp + 8] + 16;
           I64[Sp] = block_c9qOU_info;
           R4 = Hp - 6;
           R3 = P64[Sp + 16];
           R2 = R1;
           call GHC.Foreign.charIsRepresentable3_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9qOU() //  [R1]
         { info_tbl: [(c9qOU,
                       label: block_c9qOU_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qOU: // global
           call MO_Touch(P64[Sp + 8]);
           R1 = R1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.90946292 UTC

[section ""data" . System.Posix.Internals.fileType_closure" {
     System.Posix.Internals.fileType_closure:
         const System.Posix.Internals.fileType_info;
         const 0;
 },
 System.Posix.Internals.fileType_entry() //  [R2]
         { info_tbl: [(c9qP4,
                       label: System.Posix.Internals.fileType_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qP4: // global
           R2 = R2;
           call System.Posix.Internals.fileType1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.910128952 UTC

[section ""cstring" . System.Posix.Internals.fdFileSize4_bytes" {
     System.Posix.Internals.fdFileSize4_bytes:
         I8[] [102,105,108,101,83,105,122,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.910854133 UTC

[section ""data" . System.Posix.Internals.fdFileSize3_closure" {
     System.Posix.Internals.fdFileSize3_closure:
         const System.Posix.Internals.fdFileSize3_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.fdFileSize3_entry() //  [R1]
         { info_tbl: [(c9qPd,
                       label: System.Posix.Internals.fdFileSize3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qPd: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qPe; else goto c9qPf;
       c9qPe: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qPf: // global
           (_c9qPa::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9qPa::I64 == 0) goto c9qPc; else goto c9qPb;
       c9qPc: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9qPb: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qPa::I64;
           R2 = System.Posix.Internals.fdFileSize4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.911748252 UTC

[section ""data" . sat_s9pG1_closure" {
     sat_s9pG1_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.912270652 UTC

[section ""data" . sat_s9pG2_closure" {
     sat_s9pG2_closure:
         const :_con_info;
         const sat_s9pG1_closure+1;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.913011714 UTC

[section ""data" . System.Posix.Internals.fdFileSize2_closure" {
     System.Posix.Internals.fdFileSize2_closure:
         const System.Posix.Internals.fdFileSize2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.fdFileSize2_entry() //  [R1]
         { info_tbl: [(c9qPm,
                       label: System.Posix.Internals.fdFileSize2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qPm: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qPn; else goto c9qPo;
       c9qPn: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qPo: // global
           (_c9qPj::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9qPj::I64 == 0) goto c9qPl; else goto c9qPk;
       c9qPl: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9qPk: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qPj::I64;
           R3 = sat_s9pG2_closure+2;
           R2 = GHC.Types.False_closure+1;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.914968761 UTC

[section ""data" . System.Posix.Internals.fdFileSize1_closure" {
     System.Posix.Internals.fdFileSize1_closure:
         const System.Posix.Internals.fdFileSize1_info;
         const 0;
 },
 sat_s9pGp_entry() //  [R1]
         { info_tbl: [(c9qPO,
                       label: sat_s9pGp_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qPO: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qPU; else goto c9qPT;
       c9qPU: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9qPT: // global
           (_s9pGm::I64) = call "ccall" arg hints:  [‘signed’,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_fstat(I64[R1 + 7], I64[R1 + 15]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pGm::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9pGI_entry() //  [R1]
         { info_tbl: [(c9qQh,
                       label: sat_s9pGI_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qQh: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qQi; else goto c9qQj;
       c9qQi: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qQj: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = I64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 System.Posix.Internals.fdFileSize1_entry() //  [R2]
         { info_tbl: [(c9qQk,
                       label: System.Posix.Internals.fdFileSize1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qQk: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9qQl; else goto c9qQm;
       c9qQl: // global
           R2 = R2;
           R1 = System.Posix.Internals.fdFileSize1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qQm: // global
           (_s9pG8::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_stat();
           I64[Sp - 16] = block_c9qPu_info;
           R1 = _s9pG8::I64;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qPu() //  [R1]
         { info_tbl: [(c9qPu,
                       label: block_c9qPu_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qPu: // global
           I64[Sp] = block_c9qPw_info;
           _s9pGe::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s9pGe::P64;
           if (R1 & 7 != 0) goto u9qQG; else goto c9qPx;
       u9qQG: // global
           call _c9qPw(R1) args: 0, res: 0, upd: 0;
       c9qPx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qPw() //  [R1]
         { info_tbl: [(c9qPw,
                       label: block_c9qPw_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qPw: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9qQq; else goto c9qQp;
       c9qQq: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qQp: // global
           _s9pGg::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9pGp_info;
           I64[Hp - 8] = _s9pGg::I64;
           _s9pGh::I64 = P64[Sp + 8] + 16;
           I64[Hp] = _s9pGh::I64;
           I64[Sp - 8] = block_c9qPV_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.fdFileSize3_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           I64[Sp] = _s9pGh::I64;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9qPV() //  []
         { info_tbl: [(c9qPV,
                       label: block_c9qPV_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qPV: // global
           _s9pGe::P64 = P64[Sp + 16];
           (_s9pGw::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_mode(I64[Sp + 8]);
           (_s9pGB::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG(%MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pGw::I64)));
           _s9pGC::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pGB::I64));
           if (_s9pGC::I64 != 0) goto u9qQE; else goto c9qQz;
       u9qQE: // global
           I64[Sp] = _s9pGC::I64;
           call _c9qQ8() args: 0, res: 0, upd: 0;
       c9qQz: // global
           call MO_Touch(_s9pGe::P64);
           R1 = System.Posix.Internals.fdFileSize2_closure;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9qQ8() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qQ8: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9qQw; else goto c9qQv;
       c9qQw: // global
           HpAlloc = 24;
           _s9pGC::I64 = I64[Sp];
           I64[Sp] = block_c9qQ7_info;
           R1 = _s9pGC::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9qQv: // global
           _s9pGe::P64 = P64[Sp + 16];
           (_s9pGG::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] __hscore_st_size(I64[Sp + 8]);
           call MO_Touch(_s9pGe::P64);
           I64[Hp - 16] = sat_s9pGI_info;
           I64[Hp] = _s9pGG::I64;
           R1 = Hp - 16;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9qQ7() //  [R1]
         { info_tbl: [(c9qQ7,
                       label: block_c9qQ7_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qQ7: // global
           I64[Sp] = R1;
           call _c9qQ8() args: 0, res: 0, upd: 0;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.917655018 UTC

[section ""data" . System.Posix.Internals.fdFileSize_closure" {
     System.Posix.Internals.fdFileSize_closure:
         const System.Posix.Internals.fdFileSize_info;
         const 0;
 },
 System.Posix.Internals.fdFileSize_entry() //  [R2]
         { info_tbl: [(c9qQN,
                       label: System.Posix.Internals.fdFileSize_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qQN: // global
           R2 = R2;
           call System.Posix.Internals.fdFileSize1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.918378955 UTC

[section ""relreadonly" . S9qh6_srt" {
     S9qh6_srt:
         const GHC.IO.Encoding.getFileSystemEncoding_closure;
         const System.Posix.Internals.withFilePath1_closure;
         const GHC.ForeignPtr.mallocForeignPtrBytes2_closure;
         const System.Posix.Internals.peekFilePathLen1_closure;
         const GHC.Foreign.peekCString1_closure;
         const System.Posix.Internals.peekFilePath1_closure;
         const GHC.Foreign.newCString1_closure;
         const System.Posix.Internals.newFilePath1_closure;
         const System.Posix.Internals.puts1_closure;
         const System.Posix.Internals.puts2_closure;
         const Foreign.C.Error.$wlvl_closure;
         const lvl1_r9pfy_closure;
         const lvl6_r9pfD_closure;
         const lvl9_r9pfG_closure;
         const Foreign.Marshal.Alloc.malloc1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
         const System.Posix.Internals.getEcho3_closure;
         const lvl2_r9pfz_closure;
         const lvl4_r9pfB_closure;
         const lvl7_r9pfE_closure;
         const lvl10_r9pfH_closure;
         const System.Posix.Internals.setCooked1_closure;
         const System.Posix.Internals.getEcho1_closure;
         const System.Posix.Internals.setEcho1_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const System.Posix.Internals.ioe_unknownfiletype_closure;
         const System.Posix.Internals.fdStat2_closure;
         const System.Posix.Internals.$wstatGetType_closure;
         const System.Posix.Internals.statGetType1_closure;
         const lvl12_r9pfJ_closure;
         const System.Posix.Internals.setCloseOnExec2_closure;
         const System.Posix.Internals.setCloseOnExec1_closure;
         const System.Posix.Internals.$wsetCloseOnExec_closure;
         const System.Posix.Internals.$wsetNonBlockingFD_closure;
         const System.Posix.Internals.setNonBlockingFD2_closure;
         const System.Posix.Internals.setNonBlockingFD3_closure;
         const System.Posix.Internals.setNonBlockingFD1_closure;
         const System.Posix.Internals.$wfdGetMode_closure;
         const System.Posix.Internals.fdGetMode2_closure;
         const System.Posix.Internals.fdGetMode1_closure;
         const System.Posix.Internals.fdStat1_closure;
         const System.Posix.Internals.ioe_unknownfiletype3_closure;
         const System.Posix.Internals.fdType1_closure;
         const System.Posix.Internals.fileType2_closure;
         const System.Posix.Internals.fileType1_closure;
         const sat_s9pG2_closure;
         const System.Posix.Internals.fdFileSize1_closure;
         const System.Posix.Internals.fdFileSize2_closure;
         const System.Posix.Internals.fdFileSize3_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.919197292 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:04:30.919709319 UTC

[section ""cstring" . System.Posix.Internals.ioe_unknownfiletype4_bytes" {
     System.Posix.Internals.ioe_unknownfiletype4_bytes:
         I8[] [102,100,84,121,112,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.92039581 UTC

[section ""data" . System.Posix.Internals.ioe_unknownfiletype3_closure" {
     System.Posix.Internals.ioe_unknownfiletype3_closure:
         const System.Posix.Internals.ioe_unknownfiletype3_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.ioe_unknownfiletype3_entry() //  [R1]
         { info_tbl: [(c9qQW,
                       label: System.Posix.Internals.ioe_unknownfiletype3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qQW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qQX; else goto c9qQY;
       c9qQX: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qQY: // global
           (_c9qQT::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9qQT::I64 == 0) goto c9qQV; else goto c9qQU;
       c9qQV: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9qQU: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qQT::I64;
           R2 = System.Posix.Internals.ioe_unknownfiletype4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.921343744 UTC

[section ""cstring" . System.Posix.Internals.ioe_unknownfiletype2_bytes" {
     System.Posix.Internals.ioe_unknownfiletype2_bytes:
         I8[] [117,110,107,110,111,119,110,32,102,105,108,101,32,116,121,112,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.922022146 UTC

[section ""data" . System.Posix.Internals.ioe_unknownfiletype1_closure" {
     System.Posix.Internals.ioe_unknownfiletype1_closure:
         const System.Posix.Internals.ioe_unknownfiletype1_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.ioe_unknownfiletype1_entry() //  [R1]
         { info_tbl: [(c9qR5,
                       label: System.Posix.Internals.ioe_unknownfiletype1_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qR5: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qR6; else goto c9qR7;
       c9qR6: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9qR7: // global
           (_c9qR2::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9qR2::I64 == 0) goto c9qR4; else goto c9qR3;
       c9qR4: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9qR3: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9qR2::I64;
           R2 = System.Posix.Internals.ioe_unknownfiletype2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.922934295 UTC

[section ""data" . System.Posix.Internals.ioe_unknownfiletype_closure" {
     System.Posix.Internals.ioe_unknownfiletype_closure:
         const GHC.IO.Exception.IOError_con_info;
         const GHC.Base.Nothing_closure+1;
         const GHC.IO.Exception.UnsupportedOperation_closure+1;
         const System.Posix.Internals.ioe_unknownfiletype3_closure;
         const System.Posix.Internals.ioe_unknownfiletype1_closure;
         const GHC.Base.Nothing_closure+1;
         const GHC.Base.Nothing_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.923535065 UTC

[section ""cstring" . System.Posix.Internals.$trModule4_bytes" {
     System.Posix.Internals.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.924086259 UTC

[section ""data" . System.Posix.Internals.$trModule3_closure" {
     System.Posix.Internals.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.924659911 UTC

[section ""cstring" . System.Posix.Internals.$trModule2_bytes" {
     System.Posix.Internals.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,80,111,115,105,120,46,73,110,116,101,114,110,97,108,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.925287122 UTC

[section ""data" . System.Posix.Internals.$trModule1_closure" {
     System.Posix.Internals.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.925865945 UTC

[section ""data" . System.Posix.Internals.$trModule_closure" {
     System.Posix.Internals.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Posix.Internals.$trModule3_closure+1;
         const System.Posix.Internals.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.926443119 UTC

[section ""cstring" . System.Posix.Internals.$tcCFLock2_bytes" {
     System.Posix.Internals.$tcCFLock2_bytes:
         I8[] [67,70,76,111,99,107]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.926997468 UTC

[section ""data" . System.Posix.Internals.$tcCFLock1_closure" {
     System.Posix.Internals.$tcCFLock1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCFLock2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.927570595 UTC

[section ""data" . System.Posix.Internals.$tcCFLock_closure" {
     System.Posix.Internals.$tcCFLock_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCFLock1_closure+1;
         const GHC.Types.krep$*_closure;
         const 3834113763436071548;
         const 14488320300686398525;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.92814139 UTC

[section ""cstring" . System.Posix.Internals.$tcCGroup2_bytes" {
     System.Posix.Internals.$tcCGroup2_bytes:
         I8[] [67,71,114,111,117,112]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.928684245 UTC

[section ""data" . System.Posix.Internals.$tcCGroup1_closure" {
     System.Posix.Internals.$tcCGroup1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCGroup2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.929330017 UTC

[section ""data" . System.Posix.Internals.$tcCGroup_closure" {
     System.Posix.Internals.$tcCGroup_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCGroup1_closure+1;
         const GHC.Types.krep$*_closure;
         const 11152603070241255843;
         const 9377315854270582287;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.929943731 UTC

[section ""cstring" . System.Posix.Internals.$tcCLconv2_bytes" {
     System.Posix.Internals.$tcCLconv2_bytes:
         I8[] [67,76,99,111,110,118]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.932225396 UTC

[section ""data" . System.Posix.Internals.$tcCLconv1_closure" {
     System.Posix.Internals.$tcCLconv1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCLconv2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.932752296 UTC

[section ""data" . System.Posix.Internals.$tcCLconv_closure" {
     System.Posix.Internals.$tcCLconv_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCLconv1_closure+1;
         const GHC.Types.krep$*_closure;
         const 3987786751457835656;
         const 9275563211259231122;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.933359696 UTC

[section ""cstring" . System.Posix.Internals.$tcCPasswd2_bytes" {
     System.Posix.Internals.$tcCPasswd2_bytes:
         I8[] [67,80,97,115,115,119,100]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.933855049 UTC

[section ""data" . System.Posix.Internals.$tcCPasswd1_closure" {
     System.Posix.Internals.$tcCPasswd1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCPasswd2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.934412428 UTC

[section ""data" . System.Posix.Internals.$tcCPasswd_closure" {
     System.Posix.Internals.$tcCPasswd_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCPasswd1_closure+1;
         const GHC.Types.krep$*_closure;
         const 5062644740775551982;
         const 16304478656107476218;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.935006479 UTC

[section ""cstring" . System.Posix.Internals.$tcCSigaction2_bytes" {
     System.Posix.Internals.$tcCSigaction2_bytes:
         I8[] [67,83,105,103,97,99,116,105,111,110]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.935558727 UTC

[section ""data" . System.Posix.Internals.$tcCSigaction1_closure" {
     System.Posix.Internals.$tcCSigaction1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCSigaction2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.936097936 UTC

[section ""data" . System.Posix.Internals.$tcCSigaction_closure" {
     System.Posix.Internals.$tcCSigaction_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCSigaction1_closure+1;
         const GHC.Types.krep$*_closure;
         const 17845420242338901681;
         const 15424947738972948028;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.936698013 UTC

[section ""cstring" . System.Posix.Internals.$tcCSigset2_bytes" {
     System.Posix.Internals.$tcCSigset2_bytes:
         I8[] [67,83,105,103,115,101,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.937223077 UTC

[section ""data" . System.Posix.Internals.$tcCSigset1_closure" {
     System.Posix.Internals.$tcCSigset1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCSigset2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.938272801 UTC

[section ""data" . System.Posix.Internals.$tcCSigset_closure" {
     System.Posix.Internals.$tcCSigset_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCSigset1_closure+1;
         const GHC.Types.krep$*_closure;
         const 14081798148172232868;
         const 6852541821114425705;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.938851718 UTC

[section ""cstring" . System.Posix.Internals.$tcCStat2_bytes" {
     System.Posix.Internals.$tcCStat2_bytes:
         I8[] [67,83,116,97,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.939391737 UTC

[section ""data" . System.Posix.Internals.$tcCStat1_closure" {
     System.Posix.Internals.$tcCStat1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCStat2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.939955263 UTC

[section ""data" . System.Posix.Internals.$tcCStat_closure" {
     System.Posix.Internals.$tcCStat_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCStat1_closure+1;
         const GHC.Types.krep$*_closure;
         const 2636779476884011316;
         const 12868714044560040280;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.94056437 UTC

[section ""cstring" . System.Posix.Internals.$tcCTermios2_bytes" {
     System.Posix.Internals.$tcCTermios2_bytes:
         I8[] [67,84,101,114,109,105,111,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.941100367 UTC

[section ""data" . System.Posix.Internals.$tcCTermios1_closure" {
     System.Posix.Internals.$tcCTermios1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCTermios2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.941721186 UTC

[section ""data" . System.Posix.Internals.$tcCTermios_closure" {
     System.Posix.Internals.$tcCTermios_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCTermios1_closure+1;
         const GHC.Types.krep$*_closure;
         const 11465338758467385152;
         const 17071974511267829282;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.942342271 UTC

[section ""cstring" . System.Posix.Internals.$tcCTm2_bytes" {
     System.Posix.Internals.$tcCTm2_bytes:
         I8[] [67,84,109]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.942892203 UTC

[section ""data" . System.Posix.Internals.$tcCTm1_closure" {
     System.Posix.Internals.$tcCTm1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCTm2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.943443976 UTC

[section ""data" . System.Posix.Internals.$tcCTm_closure" {
     System.Posix.Internals.$tcCTm_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCTm1_closure+1;
         const GHC.Types.krep$*_closure;
         const 14493525435896339207;
         const 9617693238091267571;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.944002468 UTC

[section ""cstring" . System.Posix.Internals.$tcCTms2_bytes" {
     System.Posix.Internals.$tcCTms2_bytes:
         I8[] [67,84,109,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.944573863 UTC

[section ""data" . System.Posix.Internals.$tcCTms1_closure" {
     System.Posix.Internals.$tcCTms1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCTms2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.945155843 UTC

[section ""data" . System.Posix.Internals.$tcCTms_closure" {
     System.Posix.Internals.$tcCTms_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCTms1_closure+1;
         const GHC.Types.krep$*_closure;
         const 1698703802659843616;
         const 8887550035694172540;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.945764107 UTC

[section ""cstring" . System.Posix.Internals.$tcCUtimbuf2_bytes" {
     System.Posix.Internals.$tcCUtimbuf2_bytes:
         I8[] [67,85,116,105,109,98,117,102]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.946330383 UTC

[section ""data" . System.Posix.Internals.$tcCUtimbuf1_closure" {
     System.Posix.Internals.$tcCUtimbuf1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCUtimbuf2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.946916626 UTC

[section ""data" . System.Posix.Internals.$tcCUtimbuf_closure" {
     System.Posix.Internals.$tcCUtimbuf_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCUtimbuf1_closure+1;
         const GHC.Types.krep$*_closure;
         const 8896027261912555023;
         const 11165583664207333654;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.947513762 UTC

[section ""cstring" . System.Posix.Internals.$tcCUtsname2_bytes" {
     System.Posix.Internals.$tcCUtsname2_bytes:
         I8[] [67,85,116,115,110,97,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.948044141 UTC

[section ""data" . System.Posix.Internals.$tcCUtsname1_closure" {
     System.Posix.Internals.$tcCUtsname1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCUtsname2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.948616413 UTC

[section ""data" . System.Posix.Internals.$tcCUtsname_closure" {
     System.Posix.Internals.$tcCUtsname_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCUtsname1_closure+1;
         const GHC.Types.krep$*_closure;
         const 628277874126106259;
         const 14985531938252154773;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.950388005 UTC

[section ""data" . get_saved_termios1_r9pej_closure" {
     get_saved_termios1_r9pej_closure:
         const get_saved_termios1_r9pej_info;
 },
 get_saved_termios1_r9pej_entry() //  [R2]
         { info_tbl: [(c9qRf,
                       label: get_saved_termios1_r9pej_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qRf: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qRl; else goto c9qRm;
       c9qRl: // global
           R2 = R2;
           R1 = get_saved_termios1_r9pej_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qRm: // global
           I64[Sp - 8] = block_c9qRc_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qRq; else goto c9qRd;
       u9qRq: // global
           call _c9qRc(R1) args: 0, res: 0, upd: 0;
       c9qRd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qRc() //  [R1]
         { info_tbl: [(c9qRc,
                       label: block_c9qRc_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qRc: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qRp; else goto c9qRo;
       c9qRp: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qRo: // global
           (_s9pfS::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [PtrHint] __hscore_get_saved_termios(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s9pfS::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.951649519 UTC

[section ""data" . System.Posix.Internals.get_saved_termios_closure" {
     System.Posix.Internals.get_saved_termios_closure:
         const System.Posix.Internals.get_saved_termios_info;
 },
 System.Posix.Internals.get_saved_termios_entry() //  [R2]
         { info_tbl: [(c9qRv,
                       label: System.Posix.Internals.get_saved_termios_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qRv: // global
           R2 = R2;
           call get_saved_termios1_r9pej_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.952683477 UTC

[section ""data" . set_saved_termios1_r9pek_closure" {
     set_saved_termios1_r9pek_closure:
         const set_saved_termios1_r9pek_info;
 },
 set_saved_termios1_r9pek_entry() //  [R2, R3]
         { info_tbl: [(c9qRF,
                       label: set_saved_termios1_r9pek_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qRF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qRJ; else goto c9qRK;
       c9qRJ: // global
           R3 = R3;
           R2 = R2;
           R1 = set_saved_termios1_r9pek_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9qRK: // global
           I64[Sp - 16] = block_c9qRC_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9qRV; else goto c9qRD;
       u9qRV: // global
           call _c9qRC(R1) args: 0, res: 0, upd: 0;
       c9qRD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qRC() //  [R1]
         { info_tbl: [(c9qRC,
                       label: block_c9qRC_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qRC: // global
           I64[Sp] = block_c9qRI_info;
           _s9pfY::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pfY::I64;
           if (R1 & 7 != 0) goto u9qRU; else goto c9qRM;
       u9qRU: // global
           call _c9qRI(R1) args: 0, res: 0, upd: 0;
       c9qRM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qRI() //  [R1]
         { info_tbl: [(c9qRI,
                       label: block_c9qRI_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qRI: // global
           call "ccall" arg hints:  [‘signed’,
                                     PtrHint]  result hints:  [] __hscore_set_saved_termios(I64[Sp + 8], I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.954028114 UTC

[section ""data" . System.Posix.Internals.set_saved_termios_closure" {
     System.Posix.Internals.set_saved_termios_closure:
         const System.Posix.Internals.set_saved_termios_info;
 },
 System.Posix.Internals.set_saved_termios_entry() //  [R2, R3]
         { info_tbl: [(c9qS0,
                       label: System.Posix.Internals.set_saved_termios_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qS0: // global
           R3 = R3;
           R2 = R2;
           call set_saved_termios1_r9pek_entry(R3,
                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.95519771 UTC

[section ""data" . c_open1_r9pel_closure" {
     c_open1_r9pel_closure:
         const c_open1_r9pel_info;
 },
 c_open1_r9pel_entry() //  [R2, R3, R4]
         { info_tbl: [(c9qSa,
                       label: c_open1_r9pel_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qSa: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9qSv; else goto c9qSw;
       c9qSv: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_open1_r9pel_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9qSw: // global
           I64[Sp - 24] = block_c9qS7_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9qSD; else goto c9qS8;
       u9qSD: // global
           call _c9qS7(R1) args: 0, res: 0, upd: 0;
       c9qS8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qS7() //  [R1]
         { info_tbl: [(c9qS7,
                       label: block_c9qS7_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qS7: // global
           I64[Sp] = block_c9qSd_info;
           _s9pg9::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pg9::I64;
           if (R1 & 7 != 0) goto u9qSC; else goto c9qSe;
       u9qSC: // global
           call _c9qSd(R1) args: 0, res: 0, upd: 0;
       c9qSe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qSd() //  [R1]
         { info_tbl: [(c9qSd,
                       label: block_c9qSd_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qSd: // global
           I64[Sp] = block_c9qSi_info;
           _s9pgb::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pgb::I64;
           if (R1 & 7 != 0) goto u9qSE; else goto c9qSj;
       u9qSE: // global
           call _c9qSi(R1) args: 0, res: 0, upd: 0;
       c9qSj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qSi() //  [R1]
         { info_tbl: [(c9qSi,
                       label: block_c9qSi_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qSi: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qSB; else goto c9qSA;
       c9qSB: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qSA: // global
           (_s9pgh::I64) = call "ccall" arg hints:  [PtrHint,
                                                     ‘signed’,]  result hints:  [‘signed’] __hscore_open(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pgh::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.956863675 UTC

[section ""data" . System.Posix.Internals.c_open_closure" {
     System.Posix.Internals.c_open_closure:
         const System.Posix.Internals.c_open_info;
 },
 System.Posix.Internals.c_open_entry() //  [R2, R3, R4]
         { info_tbl: [(c9qSJ,
                       label: System.Posix.Internals.c_open_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qSJ: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_open1_r9pel_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.958144745 UTC

[section ""data" . c_safe_open1_r9pem_closure" {
     c_safe_open1_r9pem_closure:
         const c_safe_open1_r9pem_info;
 },
 c_safe_open1_r9pem_entry() //  [R2, R3, R4]
         { info_tbl: [(c9qST,
                       label: c_safe_open1_r9pem_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qST: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9qTg; else goto c9qTh;
       c9qTg: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_safe_open1_r9pem_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9qTh: // global
           I64[Sp - 24] = block_c9qSQ_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9qTz; else goto c9qSR;
       u9qTz: // global
           call _c9qSQ(R1) args: 0, res: 0, upd: 0;
       c9qSR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qSQ() //  [R1]
         { info_tbl: [(c9qSQ,
                       label: block_c9qSQ_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qSQ: // global
           I64[Sp] = block_c9qSW_info;
           _s9pgp::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pgp::I64;
           if (R1 & 7 != 0) goto u9qTy; else goto c9qSX;
       u9qTy: // global
           call _c9qSW(R1) args: 0, res: 0, upd: 0;
       c9qSX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qSW() //  [R1]
         { info_tbl: [(c9qSW,
                       label: block_c9qSW_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qSW: // global
           I64[Sp] = block_c9qT1_info;
           _s9pgr::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pgr::I64;
           if (R1 & 7 != 0) goto u9qTA; else goto c9qT2;
       u9qTA: // global
           call _c9qT1(R1) args: 0, res: 0, upd: 0;
       c9qT2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qT1() //  [R1]
         { info_tbl: [(c9qT1,
                       label: block_c9qT1_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qT1: // global
           _c9qT8::I64 = I64[Sp + 16];
           I64[Sp + 16] = block_c9qTa_info;
           _c9qT7::I64 = I64[Sp + 8];
           Sp = Sp + 16;
           _c9qT9::I64 = I64[R1 + 7];
           _u9qTq::P64 = CurrentTSO;
           I64[I64[_u9qTq::P64 + 24] + 16] = Sp;
           _u9qTr::I64 = CurrentNursery;
           P64[_u9qTr::I64 + 8] = Hp + 8;
           I64[_u9qTq::P64 + 104] = I64[_u9qTq::P64 + 104] - ((Hp + 8) - I64[_u9qTr::I64]);
           (_u9qTo::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [PtrHint] suspendThread(BaseReg, 0);
           (_s9pgx::I64) = call "ccall" arg hints:  [PtrHint,
                                                     ‘signed’,]  result hints:  [‘signed’] __hscore_open(_c9qT7::I64, _c9qT8::I64, _c9qT9::I64);
           (_u9qTp::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] resumeThread(_u9qTo::I64);
           BaseReg = _u9qTp::I64;
           _u9qTs::P64 = CurrentTSO;
           _u9qTt::P64 = I64[_u9qTs::P64 + 24];
           Sp = I64[_u9qTt::P64 + 16];
           SpLim = _u9qTt::P64 + 192;
           HpAlloc = 0;
           _u9qTu::I64 = CurrentNursery;
           _u9qTv::I64 = I64[_u9qTu::I64 + 8];
           Hp = _u9qTv::I64 - 8;
           _u9qTw::I64 = I64[_u9qTu::I64];
           HpLim = _u9qTw::I64 + ((%MO_SS_Conv_W32_W64(I32[_u9qTu::I64 + 48]) << 12) - 1);
           I64[_u9qTs::P64 + 104] = I64[_u9qTs::P64 + 104] + (_u9qTv::I64 - _u9qTw::I64);
           R1 = _s9pgx::I64;
           call (I64[I64[Sp]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qTa() //  [R1]
         { info_tbl: [(c9qTa,
                       label: block_c9qTa_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qTa: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qTn; else goto c9qTm;
       c9qTn: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9qTm: // global
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R1));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.960250621 UTC

[section ""data" . System.Posix.Internals.c_safe_open_closure" {
     System.Posix.Internals.c_safe_open_closure:
         const System.Posix.Internals.c_safe_open_info;
 },
 System.Posix.Internals.c_safe_open_entry() //  [R2, R3, R4]
         { info_tbl: [(c9qTF,
                       label: System.Posix.Internals.c_safe_open_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qTF: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_safe_open1_r9pem_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.961840842 UTC

[section ""data" . c_fstat1_r9pen_closure" {
     c_fstat1_r9pen_closure:
         const c_fstat1_r9pen_info;
 },
 c_fstat1_r9pen_entry() //  [R2, R3]
         { info_tbl: [(c9qTP,
                       label: c_fstat1_r9pen_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qTP: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qU4; else goto c9qU5;
       c9qU4: // global
           R3 = R3;
           R2 = R2;
           R1 = c_fstat1_r9pen_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9qU5: // global
           I64[Sp - 16] = block_c9qTM_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9qUb; else goto c9qTN;
       u9qUb: // global
           call _c9qTM(R1) args: 0, res: 0, upd: 0;
       c9qTN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qTM() //  [R1]
         { info_tbl: [(c9qTM,
                       label: block_c9qTM_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qTM: // global
           I64[Sp] = block_c9qTS_info;
           _s9pgE::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pgE::I64;
           if (R1 & 7 != 0) goto u9qUa; else goto c9qTT;
       u9qUa: // global
           call _c9qTS(R1) args: 0, res: 0, upd: 0;
       c9qTT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qTS() //  [R1]
         { info_tbl: [(c9qTS,
                       label: block_c9qTS_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qTS: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qU9; else goto c9qU8;
       c9qU9: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qU8: // global
           (_s9pgK::I64) = call "ccall" arg hints:  [‘signed’,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_fstat(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pgK::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.963289764 UTC

[section ""data" . System.Posix.Internals.c_fstat_closure" {
     System.Posix.Internals.c_fstat_closure:
         const System.Posix.Internals.c_fstat_info;
 },
 System.Posix.Internals.c_fstat_entry() //  [R2, R3]
         { info_tbl: [(c9qUg,
                       label: System.Posix.Internals.c_fstat_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qUg: // global
           R3 = R3;
           R2 = R2;
           call c_fstat1_r9pen_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.96435065 UTC

[section ""data" . lstat1_r9peo_closure" {
     lstat1_r9peo_closure:
         const lstat1_r9peo_info;
 },
 lstat1_r9peo_entry() //  [R2, R3]
         { info_tbl: [(c9qUq,
                       label: lstat1_r9peo_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qUq: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qUF; else goto c9qUG;
       c9qUF: // global
           R3 = R3;
           R2 = R2;
           R1 = lstat1_r9peo_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9qUG: // global
           I64[Sp - 16] = block_c9qUn_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9qUM; else goto c9qUo;
       u9qUM: // global
           call _c9qUn(R1) args: 0, res: 0, upd: 0;
       c9qUo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qUn() //  [R1]
         { info_tbl: [(c9qUn,
                       label: block_c9qUn_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qUn: // global
           I64[Sp] = block_c9qUt_info;
           _s9pgR::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pgR::I64;
           if (R1 & 7 != 0) goto u9qUL; else goto c9qUu;
       u9qUL: // global
           call _c9qUt(R1) args: 0, res: 0, upd: 0;
       c9qUu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qUt() //  [R1]
         { info_tbl: [(c9qUt,
                       label: block_c9qUt_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qUt: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qUK; else goto c9qUJ;
       c9qUK: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qUJ: // global
           (_s9pgX::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_lstat(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pgX::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.965815649 UTC

[section ""data" . System.Posix.Internals.lstat_closure" {
     System.Posix.Internals.lstat_closure:
         const System.Posix.Internals.lstat_info;
 },
 System.Posix.Internals.lstat_entry() //  [R2, R3]
         { info_tbl: [(c9qUR,
                       label: System.Posix.Internals.lstat_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qUR: // global
           R3 = R3;
           R2 = R2;
           call lstat1_r9peo_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.966964168 UTC

[section ""data" . c_lseek1_r9pep_closure" {
     c_lseek1_r9pep_closure:
         const c_lseek1_r9pep_info;
 },
 c_lseek1_r9pep_entry() //  [R2, R3, R4]
         { info_tbl: [(c9qV1,
                       label: c_lseek1_r9pep_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qV1: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9qVj; else goto c9qVk;
       c9qVj: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_lseek1_r9pep_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9qVk: // global
           I64[Sp - 24] = block_c9qUY_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9qVr; else goto c9qUZ;
       u9qVr: // global
           call _c9qUY(R1) args: 0, res: 0, upd: 0;
       c9qUZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qUY() //  [R1]
         { info_tbl: [(c9qUY,
                       label: block_c9qUY_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qUY: // global
           I64[Sp] = block_c9qV4_info;
           _s9ph5::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9ph5::I64;
           if (R1 & 7 != 0) goto u9qVq; else goto c9qV5;
       u9qVq: // global
           call _c9qV4(R1) args: 0, res: 0, upd: 0;
       c9qV5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qV4() //  [R1]
         { info_tbl: [(c9qV4,
                       label: block_c9qV4_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qV4: // global
           I64[Sp] = block_c9qV9_info;
           _s9ph7::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9ph7::I64;
           if (R1 & 7 != 0) goto u9qVs; else goto c9qVa;
       u9qVs: // global
           call _c9qV9(R1) args: 0, res: 0, upd: 0;
       c9qVa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qV9() //  [R1]
         { info_tbl: [(c9qV9,
                       label: block_c9qV9_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qV9: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qVp; else goto c9qVo;
       c9qVp: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qVo: // global
           (_s9phd::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC23ZCbaseZCSystemziPosixziInternalsZClseek(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9phd::I64;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.968608102 UTC

[section ""data" . System.Posix.Internals.c_lseek_closure" {
     System.Posix.Internals.c_lseek_closure:
         const System.Posix.Internals.c_lseek_info;
 },
 System.Posix.Internals.c_lseek_entry() //  [R2, R3, R4]
         { info_tbl: [(c9qVx,
                       label: System.Posix.Internals.c_lseek_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qVx: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_lseek1_r9pep_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.970935971 UTC

[section ""data" . c_access1_r9peq_closure" {
     c_access1_r9peq_closure:
         const c_access1_r9peq_info;
 },
 c_access1_r9peq_entry() //  [R2, R3]
         { info_tbl: [(c9qVH,
                       label: c_access1_r9peq_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qVH: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qVW; else goto c9qVX;
       c9qVW: // global
           R3 = R3;
           R2 = R2;
           R1 = c_access1_r9peq_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9qVX: // global
           I64[Sp - 16] = block_c9qVE_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9qW3; else goto c9qVF;
       u9qW3: // global
           call _c9qVE(R1) args: 0, res: 0, upd: 0;
       c9qVF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qVE() //  [R1]
         { info_tbl: [(c9qVE,
                       label: block_c9qVE_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qVE: // global
           I64[Sp] = block_c9qVK_info;
           _s9phj::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9phj::I64;
           if (R1 & 7 != 0) goto u9qW2; else goto c9qVL;
       u9qW2: // global
           call _c9qVK(R1) args: 0, res: 0, upd: 0;
       c9qVL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qVK() //  [R1]
         { info_tbl: [(c9qVK,
                       label: block_c9qVK_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qVK: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qW1; else goto c9qW0;
       c9qW1: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qW0: // global
           (_s9php::I64) = call "ccall" arg hints:  [PtrHint,
                                                     ‘signed’]  result hints:  [‘signed’] access(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9php::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.972406522 UTC

[section ""data" . System.Posix.Internals.c_access_closure" {
     System.Posix.Internals.c_access_closure:
         const System.Posix.Internals.c_access_info;
 },
 System.Posix.Internals.c_access_entry() //  [R2, R3]
         { info_tbl: [(c9qW8,
                       label: System.Posix.Internals.c_access_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qW8: // global
           R3 = R3;
           R2 = R2;
           call c_access1_r9peq_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.973722569 UTC

[section ""data" . c_chmod1_r9per_closure" {
     c_chmod1_r9per_closure:
         const c_chmod1_r9per_info;
 },
 c_chmod1_r9per_entry() //  [R2, R3]
         { info_tbl: [(c9qWi,
                       label: c_chmod1_r9per_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qWi: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qWx; else goto c9qWy;
       c9qWx: // global
           R3 = R3;
           R2 = R2;
           R1 = c_chmod1_r9per_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9qWy: // global
           I64[Sp - 16] = block_c9qWf_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9qWE; else goto c9qWg;
       u9qWE: // global
           call _c9qWf(R1) args: 0, res: 0, upd: 0;
       c9qWg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qWf() //  [R1]
         { info_tbl: [(c9qWf,
                       label: block_c9qWf_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qWf: // global
           I64[Sp] = block_c9qWl_info;
           _s9phw::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9phw::I64;
           if (R1 & 7 != 0) goto u9qWD; else goto c9qWm;
       u9qWD: // global
           call _c9qWl(R1) args: 0, res: 0, upd: 0;
       c9qWm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qWl() //  [R1]
         { info_tbl: [(c9qWl,
                       label: block_c9qWl_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qWl: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qWC; else goto c9qWB;
       c9qWC: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qWB: // global
           (_s9phC::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [‘signed’] chmod(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9phC::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.975116325 UTC

[section ""data" . System.Posix.Internals.c_chmod_closure" {
     System.Posix.Internals.c_chmod_closure:
         const System.Posix.Internals.c_chmod_info;
 },
 System.Posix.Internals.c_chmod_entry() //  [R2, R3]
         { info_tbl: [(c9qWJ,
                       label: System.Posix.Internals.c_chmod_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qWJ: // global
           R3 = R3;
           R2 = R2;
           call c_chmod1_r9per_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.976083691 UTC

[section ""data" . c_close1_r9pes_closure" {
     c_close1_r9pes_closure:
         const c_close1_r9pes_info;
 },
 c_close1_r9pes_entry() //  [R2]
         { info_tbl: [(c9qWT,
                       label: c_close1_r9pes_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qWT: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qX2; else goto c9qX3;
       c9qX2: // global
           R2 = R2;
           R1 = c_close1_r9pes_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qX3: // global
           I64[Sp - 8] = block_c9qWQ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qX7; else goto c9qWR;
       u9qX7: // global
           call _c9qWQ(R1) args: 0, res: 0, upd: 0;
       c9qWR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qWQ() //  [R1]
         { info_tbl: [(c9qWQ,
                       label: block_c9qWQ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qWQ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qX6; else goto c9qX5;
       c9qX6: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qX5: // global
           (_s9phM::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [‘signed’] close(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9phM::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.97733612 UTC

[section ""data" . System.Posix.Internals.c_close_closure" {
     System.Posix.Internals.c_close_closure:
         const System.Posix.Internals.c_close_info;
 },
 System.Posix.Internals.c_close_entry() //  [R2]
         { info_tbl: [(c9qXc,
                       label: System.Posix.Internals.c_close_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qXc: // global
           R2 = R2;
           call c_close1_r9pes_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.978381749 UTC

[section ""data" . c_creat1_r9pet_closure" {
     c_creat1_r9pet_closure:
         const c_creat1_r9pet_info;
 },
 c_creat1_r9pet_entry() //  [R2, R3]
         { info_tbl: [(c9qXm,
                       label: c_creat1_r9pet_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qXm: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qXB; else goto c9qXC;
       c9qXB: // global
           R3 = R3;
           R2 = R2;
           R1 = c_creat1_r9pet_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9qXC: // global
           I64[Sp - 16] = block_c9qXj_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9qXI; else goto c9qXk;
       u9qXI: // global
           call _c9qXj(R1) args: 0, res: 0, upd: 0;
       c9qXk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qXj() //  [R1]
         { info_tbl: [(c9qXj,
                       label: block_c9qXj_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qXj: // global
           I64[Sp] = block_c9qXp_info;
           _s9phT::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9phT::I64;
           if (R1 & 7 != 0) goto u9qXH; else goto c9qXq;
       u9qXH: // global
           call _c9qXp(R1) args: 0, res: 0, upd: 0;
       c9qXq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qXp() //  [R1]
         { info_tbl: [(c9qXp,
                       label: block_c9qXp_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qXp: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qXG; else goto c9qXF;
       c9qXG: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qXF: // global
           (_s9phZ::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [‘signed’] creat(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9phZ::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.979798871 UTC

[section ""data" . System.Posix.Internals.c_creat_closure" {
     System.Posix.Internals.c_creat_closure:
         const System.Posix.Internals.c_creat_info;
 },
 System.Posix.Internals.c_creat_entry() //  [R2, R3]
         { info_tbl: [(c9qXN,
                       label: System.Posix.Internals.c_creat_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qXN: // global
           R3 = R3;
           R2 = R2;
           call c_creat1_r9pet_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.980784416 UTC

[section ""data" . c_dup1_r9peu_closure" {
     c_dup1_r9peu_closure:
         const c_dup1_r9peu_info;
 },
 c_dup1_r9peu_entry() //  [R2]
         { info_tbl: [(c9qXX,
                       label: c_dup1_r9peu_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qXX: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qY6; else goto c9qY7;
       c9qY6: // global
           R2 = R2;
           R1 = c_dup1_r9peu_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qY7: // global
           I64[Sp - 8] = block_c9qXU_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qYb; else goto c9qXV;
       u9qYb: // global
           call _c9qXU(R1) args: 0, res: 0, upd: 0;
       c9qXV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qXU() //  [R1]
         { info_tbl: [(c9qXU,
                       label: block_c9qXU_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qXU: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qYa; else goto c9qY9;
       c9qYa: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qY9: // global
           (_s9pi9::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [‘signed’] dup(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pi9::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.981946851 UTC

[section ""data" . System.Posix.Internals.c_dup_closure" {
     System.Posix.Internals.c_dup_closure:
         const System.Posix.Internals.c_dup_info;
 },
 System.Posix.Internals.c_dup_entry() //  [R2]
         { info_tbl: [(c9qYg,
                       label: System.Posix.Internals.c_dup_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qYg: // global
           R2 = R2;
           call c_dup1_r9peu_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.983043165 UTC

[section ""data" . c_dup3_r9pev_closure" {
     c_dup3_r9pev_closure:
         const c_dup3_r9pev_info;
 },
 c_dup3_r9pev_entry() //  [R2, R3]
         { info_tbl: [(c9qYq,
                       label: c_dup3_r9pev_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qYq: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9qYF; else goto c9qYG;
       c9qYF: // global
           R3 = R3;
           R2 = R2;
           R1 = c_dup3_r9pev_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9qYG: // global
           I64[Sp - 16] = block_c9qYn_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9qYM; else goto c9qYo;
       u9qYM: // global
           call _c9qYn(R1) args: 0, res: 0, upd: 0;
       c9qYo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qYn() //  [R1]
         { info_tbl: [(c9qYn,
                       label: block_c9qYn_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qYn: // global
           I64[Sp] = block_c9qYt_info;
           _s9pig::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pig::I64;
           if (R1 & 7 != 0) goto u9qYL; else goto c9qYu;
       u9qYL: // global
           call _c9qYt(R1) args: 0, res: 0, upd: 0;
       c9qYu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qYt() //  [R1]
         { info_tbl: [(c9qYt,
                       label: block_c9qYt_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qYt: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qYK; else goto c9qYJ;
       c9qYK: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qYJ: // global
           (_s9pim::I64) = call "ccall" arg hints:  [‘signed’,
                                                     ‘signed’]  result hints:  [‘signed’] dup2(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pim::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.984478932 UTC

[section ""data" . System.Posix.Internals.c_dup2_closure" {
     System.Posix.Internals.c_dup2_closure:
         const System.Posix.Internals.c_dup2_info;
 },
 System.Posix.Internals.c_dup2_entry() //  [R2, R3]
         { info_tbl: [(c9qYR,
                       label: System.Posix.Internals.c_dup2_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qYR: // global
           R3 = R3;
           R2 = R2;
           call c_dup3_r9pev_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.985637179 UTC

[section ""data" . c_isatty1_r9pew_closure" {
     c_isatty1_r9pew_closure:
         const c_isatty1_r9pew_info;
 },
 c_isatty1_r9pew_entry() //  [R2]
         { info_tbl: [(c9qZ1,
                       label: c_isatty1_r9pew_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qZ1: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9qZa; else goto c9qZb;
       c9qZa: // global
           R2 = R2;
           R1 = c_isatty1_r9pew_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9qZb: // global
           I64[Sp - 8] = block_c9qYY_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9qZf; else goto c9qYZ;
       u9qZf: // global
           call _c9qYY(R1) args: 0, res: 0, upd: 0;
       c9qYZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qYY() //  [R1]
         { info_tbl: [(c9qYY,
                       label: block_c9qYY_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qYY: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qZe; else goto c9qZd;
       c9qZe: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qZd: // global
           (_s9piw::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [‘signed’] isatty(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9piw::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.986825439 UTC

[section ""data" . System.Posix.Internals.c_isatty_closure" {
     System.Posix.Internals.c_isatty_closure:
         const System.Posix.Internals.c_isatty_info;
 },
 System.Posix.Internals.c_isatty_entry() //  [R2]
         { info_tbl: [(c9qZk,
                       label: System.Posix.Internals.c_isatty_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qZk: // global
           R2 = R2;
           call c_isatty1_r9pew_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.987953896 UTC

[section ""data" . c_read1_r9pex_closure" {
     c_read1_r9pex_closure:
         const c_read1_r9pex_info;
 },
 c_read1_r9pex_entry() //  [R2, R3, R4]
         { info_tbl: [(c9qZu,
                       label: c_read1_r9pex_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qZu: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9qZM; else goto c9qZN;
       c9qZM: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_read1_r9pex_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9qZN: // global
           I64[Sp - 24] = block_c9qZr_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9qZU; else goto c9qZs;
       u9qZU: // global
           call _c9qZr(R1) args: 0, res: 0, upd: 0;
       c9qZs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qZr() //  [R1]
         { info_tbl: [(c9qZr,
                       label: block_c9qZr_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qZr: // global
           I64[Sp] = block_c9qZx_info;
           _s9piE::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9piE::I64;
           if (R1 & 7 != 0) goto u9qZT; else goto c9qZy;
       u9qZT: // global
           call _c9qZx(R1) args: 0, res: 0, upd: 0;
       c9qZy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qZx() //  [R1]
         { info_tbl: [(c9qZx,
                       label: block_c9qZx_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qZx: // global
           I64[Sp] = block_c9qZC_info;
           _s9piG::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9piG::I64;
           if (R1 & 7 != 0) goto u9qZV; else goto c9qZD;
       u9qZV: // global
           call _c9qZC(R1) args: 0, res: 0, upd: 0;
       c9qZD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9qZC() //  [R1]
         { info_tbl: [(c9qZC,
                       label: block_c9qZC_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9qZC: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9qZS; else goto c9qZR;
       c9qZS: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9qZR: // global
           (_s9piM::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC22ZCbaseZCSystemziPosixziInternalsZCread(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9piM::I64;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.989558841 UTC

[section ""data" . System.Posix.Internals.c_read_closure" {
     System.Posix.Internals.c_read_closure:
         const System.Posix.Internals.c_read_info;
 },
 System.Posix.Internals.c_read_entry() //  [R2, R3, R4]
         { info_tbl: [(c9r00,
                       label: System.Posix.Internals.c_read_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r00: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_read1_r9pex_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.990871472 UTC

[section ""data" . c_safe_read1_r9pey_closure" {
     c_safe_read1_r9pey_closure:
         const c_safe_read1_r9pey_info;
 },
 c_safe_read1_r9pey_entry() //  [R2, R3, R4]
         { info_tbl: [(c9r0a,
                       label: c_safe_read1_r9pey_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r0a: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9r0u; else goto c9r0v;
       c9r0u: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_safe_read1_r9pey_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9r0v: // global
           I64[Sp - 24] = block_c9r07_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9r0N; else goto c9r08;
       u9r0N: // global
           call _c9r07(R1) args: 0, res: 0, upd: 0;
       c9r08: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r07() //  [R1]
         { info_tbl: [(c9r07,
                       label: block_c9r07_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r07: // global
           I64[Sp] = block_c9r0d_info;
           _s9piT::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9piT::I64;
           if (R1 & 7 != 0) goto u9r0M; else goto c9r0e;
       u9r0M: // global
           call _c9r0d(R1) args: 0, res: 0, upd: 0;
       c9r0e: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r0d() //  [R1]
         { info_tbl: [(c9r0d,
                       label: block_c9r0d_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r0d: // global
           I64[Sp] = block_c9r0i_info;
           _s9piV::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9piV::I64;
           if (R1 & 7 != 0) goto u9r0O; else goto c9r0j;
       u9r0O: // global
           call _c9r0i(R1) args: 0, res: 0, upd: 0;
       c9r0j: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r0i() //  [R1]
         { info_tbl: [(c9r0i,
                       label: block_c9r0i_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r0i: // global
           _c9r0p::I64 = I64[Sp + 16];
           I64[Sp + 16] = block_c9r0r_info;
           _c9r0o::I64 = I64[Sp + 8];
           Sp = Sp + 16;
           _c9r0q::I64 = I64[R1 + 7];
           _u9r0E::P64 = CurrentTSO;
           I64[I64[_u9r0E::P64 + 24] + 16] = Sp;
           _u9r0F::I64 = CurrentNursery;
           P64[_u9r0F::I64 + 8] = Hp + 8;
           I64[_u9r0E::P64 + 104] = I64[_u9r0E::P64 + 104] - ((Hp + 8) - I64[_u9r0F::I64]);
           (_u9r0C::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [PtrHint] suspendThread(BaseReg, 0);
           (_s9pj1::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC21ZCbaseZCSystemziPosixziInternalsZCread(_c9r0o::I64, _c9r0p::I64, _c9r0q::I64);
           (_u9r0D::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] resumeThread(_u9r0C::I64);
           BaseReg = _u9r0D::I64;
           _u9r0G::P64 = CurrentTSO;
           _u9r0H::P64 = I64[_u9r0G::P64 + 24];
           Sp = I64[_u9r0H::P64 + 16];
           SpLim = _u9r0H::P64 + 192;
           HpAlloc = 0;
           _u9r0I::I64 = CurrentNursery;
           _u9r0J::I64 = I64[_u9r0I::I64 + 8];
           Hp = _u9r0J::I64 - 8;
           _u9r0K::I64 = I64[_u9r0I::I64];
           HpLim = _u9r0K::I64 + ((%MO_SS_Conv_W32_W64(I32[_u9r0I::I64 + 48]) << 12) - 1);
           I64[_u9r0G::P64 + 104] = I64[_u9r0G::P64 + 104] + (_u9r0J::I64 - _u9r0K::I64);
           R1 = _s9pj1::I64;
           call (I64[I64[Sp]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r0r() //  [R1]
         { info_tbl: [(c9r0r,
                       label: block_c9r0r_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r0r: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9r0B; else goto c9r0A;
       c9r0B: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9r0A: // global
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.992949723 UTC

[section ""data" . System.Posix.Internals.c_safe_read_closure" {
     System.Posix.Internals.c_safe_read_closure:
         const System.Posix.Internals.c_safe_read_info;
 },
 System.Posix.Internals.c_safe_read_entry() //  [R2, R3, R4]
         { info_tbl: [(c9r0T,
                       label: System.Posix.Internals.c_safe_read_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r0T: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_safe_read1_r9pey_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.994001015 UTC

[section ""data" . c_umask1_r9pez_closure" {
     c_umask1_r9pez_closure:
         const c_umask1_r9pez_info;
 },
 c_umask1_r9pez_entry() //  [R2]
         { info_tbl: [(c9r13,
                       label: c_umask1_r9pez_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r13: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9r1c; else goto c9r1d;
       c9r1c: // global
           R2 = R2;
           R1 = c_umask1_r9pez_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9r1d: // global
           I64[Sp - 8] = block_c9r10_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9r1h; else goto c9r11;
       u9r1h: // global
           call _c9r10(R1) args: 0, res: 0, upd: 0;
       c9r11: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r10() //  [R1]
         { info_tbl: [(c9r10,
                       label: block_c9r10_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r10: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9r1g; else goto c9r1f;
       c9r1g: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9r1f: // global
           (_s9pja::I64) = call "ccall" arg hints:  []  result hints:  [] umask(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Word.W32#_con_info;
           I64[Hp] = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pja::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.995200386 UTC

[section ""data" . System.Posix.Internals.c_umask_closure" {
     System.Posix.Internals.c_umask_closure:
         const System.Posix.Internals.c_umask_info;
 },
 System.Posix.Internals.c_umask_entry() //  [R2]
         { info_tbl: [(c9r1m,
                       label: System.Posix.Internals.c_umask_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r1m: // global
           R2 = R2;
           call c_umask1_r9pez_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.996345364 UTC

[section ""data" . c_write1_r9peA_closure" {
     c_write1_r9peA_closure:
         const c_write1_r9peA_info;
 },
 c_write1_r9peA_entry() //  [R2, R3, R4]
         { info_tbl: [(c9r1w,
                       label: c_write1_r9peA_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r1w: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9r1O; else goto c9r1P;
       c9r1O: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_write1_r9peA_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9r1P: // global
           I64[Sp - 24] = block_c9r1t_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9r1W; else goto c9r1u;
       u9r1W: // global
           call _c9r1t(R1) args: 0, res: 0, upd: 0;
       c9r1u: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r1t() //  [R1]
         { info_tbl: [(c9r1t,
                       label: block_c9r1t_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r1t: // global
           I64[Sp] = block_c9r1z_info;
           _s9pji::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pji::I64;
           if (R1 & 7 != 0) goto u9r1V; else goto c9r1A;
       u9r1V: // global
           call _c9r1z(R1) args: 0, res: 0, upd: 0;
       c9r1A: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r1z() //  [R1]
         { info_tbl: [(c9r1z,
                       label: block_c9r1z_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r1z: // global
           I64[Sp] = block_c9r1E_info;
           _s9pjk::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pjk::I64;
           if (R1 & 7 != 0) goto u9r1X; else goto c9r1F;
       u9r1X: // global
           call _c9r1E(R1) args: 0, res: 0, upd: 0;
       c9r1F: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r1E() //  [R1]
         { info_tbl: [(c9r1E,
                       label: block_c9r1E_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r1E: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9r1U; else goto c9r1T;
       c9r1U: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9r1T: // global
           (_s9pjq::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9pjq::I64;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.998261426 UTC

[section ""data" . System.Posix.Internals.c_write_closure" {
     System.Posix.Internals.c_write_closure:
         const System.Posix.Internals.c_write_info;
 },
 System.Posix.Internals.c_write_entry() //  [R2, R3, R4]
         { info_tbl: [(c9r22,
                       label: System.Posix.Internals.c_write_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r22: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_write1_r9peA_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:30.999531482 UTC

[section ""data" . c_safe_write1_r9peB_closure" {
     c_safe_write1_r9peB_closure:
         const c_safe_write1_r9peB_info;
 },
 c_safe_write1_r9peB_entry() //  [R2, R3, R4]
         { info_tbl: [(c9r2c,
                       label: c_safe_write1_r9peB_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r2c: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9r2w; else goto c9r2x;
       c9r2w: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_safe_write1_r9peB_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9r2x: // global
           I64[Sp - 24] = block_c9r29_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9r2P; else goto c9r2a;
       u9r2P: // global
           call _c9r29(R1) args: 0, res: 0, upd: 0;
       c9r2a: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r29() //  [R1]
         { info_tbl: [(c9r29,
                       label: block_c9r29_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r29: // global
           I64[Sp] = block_c9r2f_info;
           _s9pjx::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pjx::I64;
           if (R1 & 7 != 0) goto u9r2O; else goto c9r2g;
       u9r2O: // global
           call _c9r2f(R1) args: 0, res: 0, upd: 0;
       c9r2g: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r2f() //  [R1]
         { info_tbl: [(c9r2f,
                       label: block_c9r2f_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r2f: // global
           I64[Sp] = block_c9r2k_info;
           _s9pjz::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pjz::I64;
           if (R1 & 7 != 0) goto u9r2Q; else goto c9r2l;
       u9r2Q: // global
           call _c9r2k(R1) args: 0, res: 0, upd: 0;
       c9r2l: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r2k() //  [R1]
         { info_tbl: [(c9r2k,
                       label: block_c9r2k_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r2k: // global
           _c9r2r::I64 = I64[Sp + 16];
           I64[Sp + 16] = block_c9r2t_info;
           _c9r2q::I64 = I64[Sp + 8];
           Sp = Sp + 16;
           _c9r2s::I64 = I64[R1 + 7];
           _u9r2G::P64 = CurrentTSO;
           I64[I64[_u9r2G::P64 + 24] + 16] = Sp;
           _u9r2H::I64 = CurrentNursery;
           P64[_u9r2H::I64 + 8] = Hp + 8;
           I64[_u9r2G::P64 + 104] = I64[_u9r2G::P64 + 104] - ((Hp + 8) - I64[_u9r2H::I64]);
           (_u9r2E::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [PtrHint] suspendThread(BaseReg, 0);
           (_s9pjF::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC19ZCbaseZCSystemziPosixziInternalsZCwrite(_c9r2q::I64, _c9r2r::I64, _c9r2s::I64);
           (_u9r2F::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] resumeThread(_u9r2E::I64);
           BaseReg = _u9r2F::I64;
           _u9r2I::P64 = CurrentTSO;
           _u9r2J::P64 = I64[_u9r2I::P64 + 24];
           Sp = I64[_u9r2J::P64 + 16];
           SpLim = _u9r2J::P64 + 192;
           HpAlloc = 0;
           _u9r2K::I64 = CurrentNursery;
           _u9r2L::I64 = I64[_u9r2K::I64 + 8];
           Hp = _u9r2L::I64 - 8;
           _u9r2M::I64 = I64[_u9r2K::I64];
           HpLim = _u9r2M::I64 + ((%MO_SS_Conv_W32_W64(I32[_u9r2K::I64 + 48]) << 12) - 1);
           I64[_u9r2I::P64 + 104] = I64[_u9r2I::P64 + 104] + (_u9r2L::I64 - _u9r2M::I64);
           R1 = _s9pjF::I64;
           call (I64[I64[Sp]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r2t() //  [R1]
         { info_tbl: [(c9r2t,
                       label: block_c9r2t_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r2t: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9r2D; else goto c9r2C;
       c9r2D: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9r2C: // global
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.001640095 UTC

[section ""data" . System.Posix.Internals.c_safe_write_closure" {
     System.Posix.Internals.c_safe_write_closure:
         const System.Posix.Internals.c_safe_write_info;
 },
 System.Posix.Internals.c_safe_write_entry() //  [R2, R3, R4]
         { info_tbl: [(c9r2V,
                       label: System.Posix.Internals.c_safe_write_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r2V: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_safe_write1_r9peB_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.002642134 UTC

[section ""data" . c_pipe1_r9peC_closure" {
     c_pipe1_r9peC_closure:
         const c_pipe1_r9peC_info;
 },
 c_pipe1_r9peC_entry() //  [R2]
         { info_tbl: [(c9r35,
                       label: c_pipe1_r9peC_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r35: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9r3e; else goto c9r3f;
       c9r3e: // global
           R2 = R2;
           R1 = c_pipe1_r9peC_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9r3f: // global
           I64[Sp - 8] = block_c9r32_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9r3j; else goto c9r33;
       u9r3j: // global
           call _c9r32(R1) args: 0, res: 0, upd: 0;
       c9r33: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r32() //  [R1]
         { info_tbl: [(c9r32,
                       label: block_c9r32_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r32: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9r3i; else goto c9r3h;
       c9r3i: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9r3h: // global
           (_s9pjO::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] pipe(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pjO::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.003861317 UTC

[section ""data" . System.Posix.Internals.c_pipe_closure" {
     System.Posix.Internals.c_pipe_closure:
         const System.Posix.Internals.c_pipe_info;
 },
 System.Posix.Internals.c_pipe_entry() //  [R2]
         { info_tbl: [(c9r3o,
                       label: System.Posix.Internals.c_pipe_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r3o: // global
           R2 = R2;
           call c_pipe1_r9peC_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.004856935 UTC

[section ""data" . c_unlink1_r9peD_closure" {
     c_unlink1_r9peD_closure:
         const c_unlink1_r9peD_info;
 },
 c_unlink1_r9peD_entry() //  [R2]
         { info_tbl: [(c9r3y,
                       label: c_unlink1_r9peD_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r3y: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9r3H; else goto c9r3I;
       c9r3H: // global
           R2 = R2;
           R1 = c_unlink1_r9peD_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9r3I: // global
           I64[Sp - 8] = block_c9r3v_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9r3M; else goto c9r3w;
       u9r3M: // global
           call _c9r3v(R1) args: 0, res: 0, upd: 0;
       c9r3w: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r3v() //  [R1]
         { info_tbl: [(c9r3v,
                       label: block_c9r3v_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r3v: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9r3L; else goto c9r3K;
       c9r3L: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9r3K: // global
           (_s9pjY::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] unlink(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pjY::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.00604273 UTC

[section ""data" . System.Posix.Internals.c_unlink_closure" {
     System.Posix.Internals.c_unlink_closure:
         const System.Posix.Internals.c_unlink_info;
 },
 System.Posix.Internals.c_unlink_entry() //  [R2]
         { info_tbl: [(c9r3R,
                       label: System.Posix.Internals.c_unlink_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r3R: // global
           R2 = R2;
           call c_unlink1_r9peD_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.007132704 UTC

[section ""data" . c_utime1_r9peE_closure" {
     c_utime1_r9peE_closure:
         const c_utime1_r9peE_info;
 },
 c_utime1_r9peE_entry() //  [R2, R3]
         { info_tbl: [(c9r41,
                       label: c_utime1_r9peE_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r41: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9r4g; else goto c9r4h;
       c9r4g: // global
           R3 = R3;
           R2 = R2;
           R1 = c_utime1_r9peE_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9r4h: // global
           I64[Sp - 16] = block_c9r3Y_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9r4n; else goto c9r3Z;
       u9r4n: // global
           call _c9r3Y(R1) args: 0, res: 0, upd: 0;
       c9r3Z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r3Y() //  [R1]
         { info_tbl: [(c9r3Y,
                       label: block_c9r3Y_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r3Y: // global
           I64[Sp] = block_c9r44_info;
           _s9pk5::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pk5::I64;
           if (R1 & 7 != 0) goto u9r4m; else goto c9r45;
       u9r4m: // global
           call _c9r44(R1) args: 0, res: 0, upd: 0;
       c9r45: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r44() //  [R1]
         { info_tbl: [(c9r44,
                       label: block_c9r44_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r44: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9r4l; else goto c9r4k;
       c9r4l: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9r4k: // global
           (_s9pkb::I64) = call "capi" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC18ZCbaseZCSystemziPosixziInternalsZCutime(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pkb::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.008544491 UTC

[section ""data" . System.Posix.Internals.c_utime_closure" {
     System.Posix.Internals.c_utime_closure:
         const System.Posix.Internals.c_utime_info;
 },
 System.Posix.Internals.c_utime_entry() //  [R2, R3]
         { info_tbl: [(c9r4s,
                       label: System.Posix.Internals.c_utime_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r4s: // global
           R3 = R3;
           R2 = R2;
           call c_utime1_r9peE_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.009634134 UTC

[section ""data" . c_getpid1_r9peF_closure" {
     c_getpid1_r9peF_closure:
         const c_getpid1_r9peF_info;
 },
 c_getpid1_r9peF_entry() //  []
         { info_tbl: [(c9r4C,
                       label: c_getpid1_r9peF_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r4C: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9r4I; else goto c9r4H;
       c9r4I: // global
           HpAlloc = 16;
           R1 = c_getpid1_r9peF_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9r4H: // global
           (_s9pki::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] getpid();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pki::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.010538656 UTC

[section ""data" . System.Posix.Internals.c_getpid_closure" {
     System.Posix.Internals.c_getpid_closure:
         const System.Posix.Internals.c_getpid_info;
 },
 System.Posix.Internals.c_getpid_entry() //  []
         { info_tbl: [(c9r4N,
                       label: System.Posix.Internals.c_getpid_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r4N: // global
           call c_getpid1_r9peF_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.011578048 UTC

[section ""data" . c_stat1_r9peG_closure" {
     c_stat1_r9peG_closure:
         const c_stat1_r9peG_info;
 },
 c_stat1_r9peG_entry() //  [R2, R3]
         { info_tbl: [(c9r4X,
                       label: c_stat1_r9peG_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r4X: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9r5c; else goto c9r5d;
       c9r5c: // global
           R3 = R3;
           R2 = R2;
           R1 = c_stat1_r9peG_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9r5d: // global
           I64[Sp - 16] = block_c9r4U_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9r5j; else goto c9r4V;
       u9r5j: // global
           call _c9r4U(R1) args: 0, res: 0, upd: 0;
       c9r4V: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r4U() //  [R1]
         { info_tbl: [(c9r4U,
                       label: block_c9r4U_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r4U: // global
           I64[Sp] = block_c9r50_info;
           _s9pkp::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pkp::I64;
           if (R1 & 7 != 0) goto u9r5i; else goto c9r51;
       u9r5i: // global
           call _c9r50(R1) args: 0, res: 0, upd: 0;
       c9r51: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r50() //  [R1]
         { info_tbl: [(c9r50,
                       label: block_c9r50_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r50: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9r5h; else goto c9r5g;
       c9r5h: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9r5g: // global
           (_s9pkv::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_stat(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pkv::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.012960683 UTC

[section ""data" . System.Posix.Internals.c_stat_closure" {
     System.Posix.Internals.c_stat_closure:
         const System.Posix.Internals.c_stat_info;
 },
 System.Posix.Internals.c_stat_entry() //  [R2, R3]
         { info_tbl: [(c9r5o,
                       label: System.Posix.Internals.c_stat_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r5o: // global
           R3 = R3;
           R2 = R2;
           call c_stat1_r9peG_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.01407109 UTC

[section ""data" . c_ftruncate1_r9peH_closure" {
     c_ftruncate1_r9peH_closure:
         const c_ftruncate1_r9peH_info;
 },
 c_ftruncate1_r9peH_entry() //  [R2, R3]
         { info_tbl: [(c9r5y,
                       label: c_ftruncate1_r9peH_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r5y: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9r5N; else goto c9r5O;
       c9r5N: // global
           R3 = R3;
           R2 = R2;
           R1 = c_ftruncate1_r9peH_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9r5O: // global
           I64[Sp - 16] = block_c9r5v_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9r5U; else goto c9r5w;
       u9r5U: // global
           call _c9r5v(R1) args: 0, res: 0, upd: 0;
       c9r5w: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r5v() //  [R1]
         { info_tbl: [(c9r5v,
                       label: block_c9r5v_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r5v: // global
           I64[Sp] = block_c9r5B_info;
           _s9pkC::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pkC::I64;
           if (R1 & 7 != 0) goto u9r5T; else goto c9r5C;
       u9r5T: // global
           call _c9r5B(R1) args: 0, res: 0, upd: 0;
       c9r5C: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r5B() //  [R1]
         { info_tbl: [(c9r5B,
                       label: block_c9r5B_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r5B: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9r5S; else goto c9r5R;
       c9r5S: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9r5R: // global
           (_s9pkI::I64) = call "ccall" arg hints:  [‘signed’,
                                                     ‘signed’]  result hints:  [‘signed’] __hscore_ftruncate(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pkI::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.015518976 UTC

[section ""data" . System.Posix.Internals.c_ftruncate_closure" {
     System.Posix.Internals.c_ftruncate_closure:
         const System.Posix.Internals.c_ftruncate_info;
 },
 System.Posix.Internals.c_ftruncate_entry() //  [R2, R3]
         { info_tbl: [(c9r5Z,
                       label: System.Posix.Internals.c_ftruncate_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r5Z: // global
           R3 = R3;
           R2 = R2;
           call c_ftruncate1_r9peH_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.016583295 UTC

[section ""data" . c_fcntl_read1_r9peI_closure" {
     c_fcntl_read1_r9peI_closure:
         const c_fcntl_read1_r9peI_info;
 },
 c_fcntl_read1_r9peI_entry() //  [R2, R3]
         { info_tbl: [(c9r69,
                       label: c_fcntl_read1_r9peI_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r69: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9r6o; else goto c9r6p;
       c9r6o: // global
           R3 = R3;
           R2 = R2;
           R1 = c_fcntl_read1_r9peI_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9r6p: // global
           I64[Sp - 16] = block_c9r66_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9r6v; else goto c9r67;
       u9r6v: // global
           call _c9r66(R1) args: 0, res: 0, upd: 0;
       c9r67: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r66() //  [R1]
         { info_tbl: [(c9r66,
                       label: block_c9r66_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r66: // global
           I64[Sp] = block_c9r6c_info;
           _s9pkP::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pkP::I64;
           if (R1 & 7 != 0) goto u9r6u; else goto c9r6d;
       u9r6u: // global
           call _c9r6c(R1) args: 0, res: 0, upd: 0;
       c9r6d: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r6c() //  [R1]
         { info_tbl: [(c9r6c,
                       label: block_c9r6c_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r6c: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9r6t; else goto c9r6s;
       c9r6t: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9r6s: // global
           (_s9pkV::I64) = call "capi" arg hints:  [‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC17ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pkV::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.018068212 UTC

[section ""data" . System.Posix.Internals.c_fcntl_read_closure" {
     System.Posix.Internals.c_fcntl_read_closure:
         const System.Posix.Internals.c_fcntl_read_info;
 },
 System.Posix.Internals.c_fcntl_read_entry() //  [R2, R3]
         { info_tbl: [(c9r6A,
                       label: System.Posix.Internals.c_fcntl_read_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r6A: // global
           R3 = R3;
           R2 = R2;
           call c_fcntl_read1_r9peI_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.019233291 UTC

[section ""data" . c_fcntl_write1_r9peJ_closure" {
     c_fcntl_write1_r9peJ_closure:
         const c_fcntl_write1_r9peJ_info;
 },
 c_fcntl_write1_r9peJ_entry() //  [R2, R3, R4]
         { info_tbl: [(c9r6K,
                       label: c_fcntl_write1_r9peJ_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r6K: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9r75; else goto c9r76;
       c9r75: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_fcntl_write1_r9peJ_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9r76: // global
           I64[Sp - 24] = block_c9r6H_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9r7d; else goto c9r6I;
       u9r7d: // global
           call _c9r6H(R1) args: 0, res: 0, upd: 0;
       c9r6I: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r6H() //  [R1]
         { info_tbl: [(c9r6H,
                       label: block_c9r6H_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r6H: // global
           I64[Sp] = block_c9r6N_info;
           _s9pl3::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pl3::I64;
           if (R1 & 7 != 0) goto u9r7c; else goto c9r6O;
       u9r7c: // global
           call _c9r6N(R1) args: 0, res: 0, upd: 0;
       c9r6O: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r6N() //  [R1]
         { info_tbl: [(c9r6N,
                       label: block_c9r6N_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r6N: // global
           I64[Sp] = block_c9r6S_info;
           _s9pl5::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pl5::I64;
           if (R1 & 7 != 0) goto u9r7e; else goto c9r6T;
       u9r7e: // global
           call _c9r6S(R1) args: 0, res: 0, upd: 0;
       c9r6T: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r6S() //  [R1]
         { info_tbl: [(c9r6S,
                       label: block_c9r6S_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r6S: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9r7b; else goto c9r7a;
       c9r7b: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9r7a: // global
           (_s9plb::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9plb::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.020927795 UTC

[section ""data" . System.Posix.Internals.c_fcntl_write_closure" {
     System.Posix.Internals.c_fcntl_write_closure:
         const System.Posix.Internals.c_fcntl_write_info;
 },
 System.Posix.Internals.c_fcntl_write_entry() //  [R2, R3, R4]
         { info_tbl: [(c9r7j,
                       label: System.Posix.Internals.c_fcntl_write_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r7j: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_fcntl_write1_r9peJ_entry(R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.022347914 UTC

[section ""data" . c_fcntl_lock1_r9peK_closure" {
     c_fcntl_lock1_r9peK_closure:
         const c_fcntl_lock1_r9peK_info;
 },
 c_fcntl_lock1_r9peK_entry() //  [R2, R3, R4]
         { info_tbl: [(c9r7t,
                       label: c_fcntl_lock1_r9peK_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r7t: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9r7O; else goto c9r7P;
       c9r7O: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_fcntl_lock1_r9peK_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9r7P: // global
           I64[Sp - 24] = block_c9r7q_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9r7W; else goto c9r7r;
       u9r7W: // global
           call _c9r7q(R1) args: 0, res: 0, upd: 0;
       c9r7r: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r7q() //  [R1]
         { info_tbl: [(c9r7q,
                       label: block_c9r7q_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r7q: // global
           I64[Sp] = block_c9r7w_info;
           _s9plj::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9plj::I64;
           if (R1 & 7 != 0) goto u9r7V; else goto c9r7x;
       u9r7V: // global
           call _c9r7w(R1) args: 0, res: 0, upd: 0;
       c9r7x: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r7w() //  [R1]
         { info_tbl: [(c9r7w,
                       label: block_c9r7w_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r7w: // global
           I64[Sp] = block_c9r7B_info;
           _s9pll::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pll::I64;
           if (R1 & 7 != 0) goto u9r7X; else goto c9r7C;
       u9r7X: // global
           call _c9r7B(R1) args: 0, res: 0, upd: 0;
       c9r7C: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r7B() //  [R1]
         { info_tbl: [(c9r7B,
                       label: block_c9r7B_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r7B: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9r7U; else goto c9r7T;
       c9r7U: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9r7T: // global
           (_s9plr::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC15ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9plr::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.024038325 UTC

[section ""data" . System.Posix.Internals.c_fcntl_lock_closure" {
     System.Posix.Internals.c_fcntl_lock_closure:
         const System.Posix.Internals.c_fcntl_lock_info;
 },
 System.Posix.Internals.c_fcntl_lock_entry() //  [R2, R3, R4]
         { info_tbl: [(c9r82,
                       label: System.Posix.Internals.c_fcntl_lock_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r82: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_fcntl_lock1_r9peK_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.024887331 UTC

[section ""data" . c_fork1_r9peL_closure" {
     c_fork1_r9peL_closure:
         const c_fork1_r9peL_info;
 },
 c_fork1_r9peL_entry() //  []
         { info_tbl: [(c9r8c,
                       label: c_fork1_r9peL_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r8c: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9r8i; else goto c9r8h;
       c9r8i: // global
           HpAlloc = 16;
           R1 = c_fork1_r9peL_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9r8h: // global
           (_s9ply::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] fork();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9ply::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.027402676 UTC

[section ""data" . System.Posix.Internals.c_fork_closure" {
     System.Posix.Internals.c_fork_closure:
         const System.Posix.Internals.c_fork_info;
 },
 System.Posix.Internals.c_fork_entry() //  []
         { info_tbl: [(c9r8n,
                       label: System.Posix.Internals.c_fork_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r8n: // global
           call c_fork1_r9peL_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.028457155 UTC

[section ""data" . c_link1_r9peM_closure" {
     c_link1_r9peM_closure:
         const c_link1_r9peM_info;
 },
 c_link1_r9peM_entry() //  [R2, R3]
         { info_tbl: [(c9r8x,
                       label: c_link1_r9peM_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r8x: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9r8M; else goto c9r8N;
       c9r8M: // global
           R3 = R3;
           R2 = R2;
           R1 = c_link1_r9peM_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9r8N: // global
           I64[Sp - 16] = block_c9r8u_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9r8T; else goto c9r8v;
       u9r8T: // global
           call _c9r8u(R1) args: 0, res: 0, upd: 0;
       c9r8v: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r8u() //  [R1]
         { info_tbl: [(c9r8u,
                       label: block_c9r8u_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r8u: // global
           I64[Sp] = block_c9r8A_info;
           _s9plF::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9plF::I64;
           if (R1 & 7 != 0) goto u9r8S; else goto c9r8B;
       u9r8S: // global
           call _c9r8A(R1) args: 0, res: 0, upd: 0;
       c9r8B: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r8A() //  [R1]
         { info_tbl: [(c9r8A,
                       label: block_c9r8A_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r8A: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9r8R; else goto c9r8Q;
       c9r8R: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9r8Q: // global
           (_s9plL::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [‘signed’] link(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9plL::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.029886672 UTC

[section ""data" . System.Posix.Internals.c_link_closure" {
     System.Posix.Internals.c_link_closure:
         const System.Posix.Internals.c_link_info;
 },
 System.Posix.Internals.c_link_entry() //  [R2, R3]
         { info_tbl: [(c9r8Y,
                       label: System.Posix.Internals.c_link_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r8Y: // global
           R3 = R3;
           R2 = R2;
           call c_link1_r9peM_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.030972553 UTC

[section ""data" . c_mkfifo1_r9peN_closure" {
     c_mkfifo1_r9peN_closure:
         const c_mkfifo1_r9peN_info;
 },
 c_mkfifo1_r9peN_entry() //  [R2, R3]
         { info_tbl: [(c9r98,
                       label: c_mkfifo1_r9peN_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r98: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9r9n; else goto c9r9o;
       c9r9n: // global
           R3 = R3;
           R2 = R2;
           R1 = c_mkfifo1_r9peN_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9r9o: // global
           I64[Sp - 16] = block_c9r95_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9r9u; else goto c9r96;
       u9r9u: // global
           call _c9r95(R1) args: 0, res: 0, upd: 0;
       c9r96: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r95() //  [R1]
         { info_tbl: [(c9r95,
                       label: block_c9r95_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r95: // global
           I64[Sp] = block_c9r9b_info;
           _s9plS::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9plS::I64;
           if (R1 & 7 != 0) goto u9r9t; else goto c9r9c;
       u9r9t: // global
           call _c9r9b(R1) args: 0, res: 0, upd: 0;
       c9r9c: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r9b() //  [R1]
         { info_tbl: [(c9r9b,
                       label: block_c9r9b_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r9b: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9r9s; else goto c9r9r;
       c9r9s: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9r9r: // global
           (_s9plY::I64) = call "capi" arg hints:  [PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC14ZCbaseZCSystemziPosixziInternalsZCmkfifo(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9plY::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.032423465 UTC

[section ""data" . System.Posix.Internals.c_mkfifo_closure" {
     System.Posix.Internals.c_mkfifo_closure:
         const System.Posix.Internals.c_mkfifo_info;
 },
 System.Posix.Internals.c_mkfifo_entry() //  [R2, R3]
         { info_tbl: [(c9r9z,
                       label: System.Posix.Internals.c_mkfifo_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r9z: // global
           R3 = R3;
           R2 = R2;
           call c_mkfifo1_r9peN_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.033632897 UTC

[section ""data" . c_sigemptyset1_r9peO_closure" {
     c_sigemptyset1_r9peO_closure:
         const c_sigemptyset1_r9peO_info;
 },
 c_sigemptyset1_r9peO_entry() //  [R2]
         { info_tbl: [(c9r9J,
                       label: c_sigemptyset1_r9peO_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r9J: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9r9S; else goto c9r9T;
       c9r9S: // global
           R2 = R2;
           R1 = c_sigemptyset1_r9peO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9r9T: // global
           I64[Sp - 8] = block_c9r9G_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9r9X; else goto c9r9H;
       u9r9X: // global
           call _c9r9G(R1) args: 0, res: 0, upd: 0;
       c9r9H: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9r9G() //  [R1]
         { info_tbl: [(c9r9G,
                       label: block_c9r9G_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9r9G: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9r9W; else goto c9r9V;
       c9r9W: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9r9V: // global
           (_s9pm8::I64) = call "capi" arg hints:  [PtrHint]  result hints:  [‘signed’] ghczuwrapperZC13ZCbaseZCSystemziPosixziInternalsZCsigemptyset(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pm8::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.034829923 UTC

[section ""data" . System.Posix.Internals.c_sigemptyset_closure" {
     System.Posix.Internals.c_sigemptyset_closure:
         const System.Posix.Internals.c_sigemptyset_info;
 },
 System.Posix.Internals.c_sigemptyset_entry() //  [R2]
         { info_tbl: [(c9ra2,
                       label: System.Posix.Internals.c_sigemptyset_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ra2: // global
           R2 = R2;
           call c_sigemptyset1_r9peO_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.035888808 UTC

[section ""data" . c_sigaddset1_r9peP_closure" {
     c_sigaddset1_r9peP_closure:
         const c_sigaddset1_r9peP_info;
 },
 c_sigaddset1_r9peP_entry() //  [R2, R3]
         { info_tbl: [(c9rac,
                       label: c_sigaddset1_r9peP_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rac: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rar; else goto c9ras;
       c9rar: // global
           R3 = R3;
           R2 = R2;
           R1 = c_sigaddset1_r9peP_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9ras: // global
           I64[Sp - 16] = block_c9ra9_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9ray; else goto c9raa;
       u9ray: // global
           call _c9ra9(R1) args: 0, res: 0, upd: 0;
       c9raa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ra9() //  [R1]
         { info_tbl: [(c9ra9,
                       label: block_c9ra9_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ra9: // global
           I64[Sp] = block_c9raf_info;
           _s9pmf::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pmf::I64;
           if (R1 & 7 != 0) goto u9rax; else goto c9rag;
       u9rax: // global
           call _c9raf(R1) args: 0, res: 0, upd: 0;
       c9rag: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9raf() //  [R1]
         { info_tbl: [(c9raf,
                       label: block_c9raf_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9raf: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9raw; else goto c9rav;
       c9raw: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rav: // global
           (_s9pml::I64) = call "capi" arg hints:  [PtrHint,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC12ZCbaseZCSystemziPosixziInternalsZCsigaddset(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pml::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.037292935 UTC

[section ""data" . System.Posix.Internals.c_sigaddset_closure" {
     System.Posix.Internals.c_sigaddset_closure:
         const System.Posix.Internals.c_sigaddset_info;
 },
 System.Posix.Internals.c_sigaddset_entry() //  [R2, R3]
         { info_tbl: [(c9raD,
                       label: System.Posix.Internals.c_sigaddset_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9raD: // global
           R3 = R3;
           R2 = R2;
           call c_sigaddset1_r9peP_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.038457642 UTC

[section ""data" . c_sigprocmask1_r9peQ_closure" {
     c_sigprocmask1_r9peQ_closure:
         const c_sigprocmask1_r9peQ_info;
 },
 c_sigprocmask1_r9peQ_entry() //  [R2, R3, R4]
         { info_tbl: [(c9raN,
                       label: c_sigprocmask1_r9peQ_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9raN: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9rb8; else goto c9rb9;
       c9rb8: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_sigprocmask1_r9peQ_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9rb9: // global
           I64[Sp - 24] = block_c9raK_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9rbg; else goto c9raL;
       u9rbg: // global
           call _c9raK(R1) args: 0, res: 0, upd: 0;
       c9raL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9raK() //  [R1]
         { info_tbl: [(c9raK,
                       label: block_c9raK_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9raK: // global
           I64[Sp] = block_c9raQ_info;
           _s9pmt::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pmt::I64;
           if (R1 & 7 != 0) goto u9rbf; else goto c9raR;
       u9rbf: // global
           call _c9raQ(R1) args: 0, res: 0, upd: 0;
       c9raR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9raQ() //  [R1]
         { info_tbl: [(c9raQ,
                       label: block_c9raQ_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9raQ: // global
           I64[Sp] = block_c9raV_info;
           _s9pmv::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pmv::I64;
           if (R1 & 7 != 0) goto u9rbh; else goto c9raW;
       u9rbh: // global
           call _c9raV(R1) args: 0, res: 0, upd: 0;
       c9raW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9raV() //  [R1]
         { info_tbl: [(c9raV,
                       label: block_c9raV_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9raV: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rbe; else goto c9rbd;
       c9rbe: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rbd: // global
           (_s9pmB::I64) = call "capi" arg hints:  [‘signed’, PtrHint,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC11ZCbaseZCSystemziPosixziInternalsZCsigprocmask(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pmB::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.040071324 UTC

[section ""data" . System.Posix.Internals.c_sigprocmask_closure" {
     System.Posix.Internals.c_sigprocmask_closure:
         const System.Posix.Internals.c_sigprocmask_info;
 },
 System.Posix.Internals.c_sigprocmask_entry() //  [R2, R3, R4]
         { info_tbl: [(c9rbm,
                       label: System.Posix.Internals.c_sigprocmask_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rbm: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_sigprocmask1_r9peQ_entry(R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.041200872 UTC

[section ""data" . c_tcgetattr1_r9peR_closure" {
     c_tcgetattr1_r9peR_closure:
         const c_tcgetattr1_r9peR_info;
 },
 c_tcgetattr1_r9peR_entry() //  [R2, R3]
         { info_tbl: [(c9rbw,
                       label: c_tcgetattr1_r9peR_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rbw: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rbL; else goto c9rbM;
       c9rbL: // global
           R3 = R3;
           R2 = R2;
           R1 = c_tcgetattr1_r9peR_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9rbM: // global
           I64[Sp - 16] = block_c9rbt_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9rbS; else goto c9rbu;
       u9rbS: // global
           call _c9rbt(R1) args: 0, res: 0, upd: 0;
       c9rbu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rbt() //  [R1]
         { info_tbl: [(c9rbt,
                       label: block_c9rbt_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rbt: // global
           I64[Sp] = block_c9rbz_info;
           _s9pmI::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pmI::I64;
           if (R1 & 7 != 0) goto u9rbR; else goto c9rbA;
       u9rbR: // global
           call _c9rbz(R1) args: 0, res: 0, upd: 0;
       c9rbA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rbz() //  [R1]
         { info_tbl: [(c9rbz,
                       label: block_c9rbz_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rbz: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rbQ; else goto c9rbP;
       c9rbQ: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rbP: // global
           (_s9pmO::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC10ZCbaseZCSystemziPosixziInternalsZCtcgetattr(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pmO::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.042661581 UTC

[section ""data" . System.Posix.Internals.c_tcgetattr_closure" {
     System.Posix.Internals.c_tcgetattr_closure:
         const System.Posix.Internals.c_tcgetattr_info;
 },
 System.Posix.Internals.c_tcgetattr_entry() //  [R2, R3]
         { info_tbl: [(c9rbX,
                       label: System.Posix.Internals.c_tcgetattr_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rbX: // global
           R3 = R3;
           R2 = R2;
           call c_tcgetattr1_r9peR_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.043841417 UTC

[section ""data" . c_tcsetattr1_r9peS_closure" {
     c_tcsetattr1_r9peS_closure:
         const c_tcsetattr1_r9peS_info;
 },
 c_tcsetattr1_r9peS_entry() //  [R2, R3, R4]
         { info_tbl: [(c9rc7,
                       label: c_tcsetattr1_r9peS_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rc7: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9rcs; else goto c9rct;
       c9rcs: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_tcsetattr1_r9peS_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9rct: // global
           I64[Sp - 24] = block_c9rc4_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9rcA; else goto c9rc5;
       u9rcA: // global
           call _c9rc4(R1) args: 0, res: 0, upd: 0;
       c9rc5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rc4() //  [R1]
         { info_tbl: [(c9rc4,
                       label: block_c9rc4_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rc4: // global
           I64[Sp] = block_c9rca_info;
           _s9pmW::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pmW::I64;
           if (R1 & 7 != 0) goto u9rcz; else goto c9rcb;
       u9rcz: // global
           call _c9rca(R1) args: 0, res: 0, upd: 0;
       c9rcb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rca() //  [R1]
         { info_tbl: [(c9rca,
                       label: block_c9rca_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rca: // global
           I64[Sp] = block_c9rcf_info;
           _s9pmY::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pmY::I64;
           if (R1 & 7 != 0) goto u9rcB; else goto c9rcg;
       u9rcB: // global
           call _c9rcf(R1) args: 0, res: 0, upd: 0;
       c9rcg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rcf() //  [R1]
         { info_tbl: [(c9rcf,
                       label: block_c9rcf_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rcf: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rcy; else goto c9rcx;
       c9rcy: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rcx: // global
           (_s9pn4::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC9ZCbaseZCSystemziPosixziInternalsZCtcsetattr(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pn4::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.045681934 UTC

[section ""data" . System.Posix.Internals.c_tcsetattr_closure" {
     System.Posix.Internals.c_tcsetattr_closure:
         const System.Posix.Internals.c_tcsetattr_info;
 },
 System.Posix.Internals.c_tcsetattr_entry() //  [R2, R3, R4]
         { info_tbl: [(c9rcG,
                       label: System.Posix.Internals.c_tcsetattr_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rcG: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_tcsetattr1_r9peS_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.046879696 UTC

[section ""data" . c_waitpid1_r9peT_closure" {
     c_waitpid1_r9peT_closure:
         const c_waitpid1_r9peT_info;
 },
 c_waitpid1_r9peT_entry() //  [R2, R3, R4]
         { info_tbl: [(c9rcQ,
                       label: c_waitpid1_r9peT_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rcQ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9rdb; else goto c9rdc;
       c9rdb: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_waitpid1_r9peT_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9rdc: // global
           I64[Sp - 24] = block_c9rcN_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9rdj; else goto c9rcO;
       u9rdj: // global
           call _c9rcN(R1) args: 0, res: 0, upd: 0;
       c9rcO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rcN() //  [R1]
         { info_tbl: [(c9rcN,
                       label: block_c9rcN_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rcN: // global
           I64[Sp] = block_c9rcT_info;
           _s9pnc::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pnc::I64;
           if (R1 & 7 != 0) goto u9rdi; else goto c9rcU;
       u9rdi: // global
           call _c9rcT(R1) args: 0, res: 0, upd: 0;
       c9rcU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rcT() //  [R1]
         { info_tbl: [(c9rcT,
                       label: block_c9rcT_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rcT: // global
           I64[Sp] = block_c9rcY_info;
           _s9pne::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pne::I64;
           if (R1 & 7 != 0) goto u9rdk; else goto c9rcZ;
       u9rdk: // global
           call _c9rcY(R1) args: 0, res: 0, upd: 0;
       c9rcZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rcY() //  [R1]
         { info_tbl: [(c9rcY,
                       label: block_c9rcY_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rcY: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rdh; else goto c9rdg;
       c9rdh: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rdg: // global
           (_s9pnk::I64) = call "ccall" arg hints:  [‘signed’, PtrHint,
                                                     ‘signed’]  result hints:  [‘signed’] waitpid(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnk::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.048514936 UTC

[section ""data" . System.Posix.Internals.c_waitpid_closure" {
     System.Posix.Internals.c_waitpid_closure:
         const System.Posix.Internals.c_waitpid_info;
 },
 System.Posix.Internals.c_waitpid_entry() //  [R2, R3, R4]
         { info_tbl: [(c9rdp,
                       label: System.Posix.Internals.c_waitpid_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rdp: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_waitpid1_r9peT_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.049477245 UTC

[section ""data" . o_RDONLY1_r9peU_closure" {
     o_RDONLY1_r9peU_closure:
         const o_RDONLY1_r9peU_info;
         const 0;
         const 0;
         const 0;
 },
 o_RDONLY1_r9peU_entry() //  [R1]
         { info_tbl: [(c9rdB,
                       label: o_RDONLY1_r9peU_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rdB: // global
           _r9peU::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rdE; else goto c9rdF;
       c9rdF: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rdH; else goto c9rdG;
       c9rdH: // global
           HpAlloc = 16;
           goto c9rdE;
       c9rdE: // global
           R1 = _r9peU::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rdG: // global
           (_c9rdv::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peU::P64);
           if (_c9rdv::I64 == 0) goto c9rdx; else goto c9rdw;
       c9rdx: // global
           call (I64[I64[_r9peU::P64]])() args: 8, res: 0, upd: 8;
       c9rdw: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rdv::I64;
           (_s9pnq::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_rdonly();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnq::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.050507628 UTC

[section ""data" . System.Posix.Internals.o_RDONLY_closure" {
     System.Posix.Internals.o_RDONLY_closure:
         const stg_IND_STATIC_info;
         const o_RDONLY1_r9peU_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.051337088 UTC

[section ""data" . o_WRONLY1_r9peV_closure" {
     o_WRONLY1_r9peV_closure:
         const o_WRONLY1_r9peV_info;
         const 0;
         const 0;
         const 0;
 },
 o_WRONLY1_r9peV_entry() //  [R1]
         { info_tbl: [(c9rdR,
                       label: o_WRONLY1_r9peV_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rdR: // global
           _r9peV::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rdU; else goto c9rdV;
       c9rdV: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rdX; else goto c9rdW;
       c9rdX: // global
           HpAlloc = 16;
           goto c9rdU;
       c9rdU: // global
           R1 = _r9peV::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rdW: // global
           (_c9rdL::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peV::P64);
           if (_c9rdL::I64 == 0) goto c9rdN; else goto c9rdM;
       c9rdN: // global
           call (I64[I64[_r9peV::P64]])() args: 8, res: 0, upd: 8;
       c9rdM: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rdL::I64;
           (_s9pnv::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_wronly();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnv::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.052307193 UTC

[section ""data" . System.Posix.Internals.o_WRONLY_closure" {
     System.Posix.Internals.o_WRONLY_closure:
         const stg_IND_STATIC_info;
         const o_WRONLY1_r9peV_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.053093657 UTC

[section ""data" . o_RDWR1_r9peW_closure" {
     o_RDWR1_r9peW_closure:
         const o_RDWR1_r9peW_info;
         const 0;
         const 0;
         const 0;
 },
 o_RDWR1_r9peW_entry() //  [R1]
         { info_tbl: [(c9re7,
                       label: o_RDWR1_r9peW_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9re7: // global
           _r9peW::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rea; else goto c9reb;
       c9reb: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9red; else goto c9rec;
       c9red: // global
           HpAlloc = 16;
           goto c9rea;
       c9rea: // global
           R1 = _r9peW::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rec: // global
           (_c9re1::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peW::P64);
           if (_c9re1::I64 == 0) goto c9re3; else goto c9re2;
       c9re3: // global
           call (I64[I64[_r9peW::P64]])() args: 8, res: 0, upd: 8;
       c9re2: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9re1::I64;
           (_s9pnA::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_rdwr();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnA::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.054766622 UTC

[section ""data" . System.Posix.Internals.o_RDWR_closure" {
     System.Posix.Internals.o_RDWR_closure:
         const stg_IND_STATIC_info;
         const o_RDWR1_r9peW_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.05554196 UTC

[section ""data" . o_APPEND1_r9peX_closure" {
     o_APPEND1_r9peX_closure:
         const o_APPEND1_r9peX_info;
         const 0;
         const 0;
         const 0;
 },
 o_APPEND1_r9peX_entry() //  [R1]
         { info_tbl: [(c9ren,
                       label: o_APPEND1_r9peX_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ren: // global
           _r9peX::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9req; else goto c9rer;
       c9rer: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9ret; else goto c9res;
       c9ret: // global
           HpAlloc = 16;
           goto c9req;
       c9req: // global
           R1 = _r9peX::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9res: // global
           (_c9reh::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peX::P64);
           if (_c9reh::I64 == 0) goto c9rej; else goto c9rei;
       c9rej: // global
           call (I64[I64[_r9peX::P64]])() args: 8, res: 0, upd: 8;
       c9rei: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9reh::I64;
           (_s9pnF::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_append();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnF::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.056512676 UTC

[section ""data" . System.Posix.Internals.o_APPEND_closure" {
     System.Posix.Internals.o_APPEND_closure:
         const stg_IND_STATIC_info;
         const o_APPEND1_r9peX_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.057528246 UTC

[section ""data" . o_CREAT1_r9peY_closure" {
     o_CREAT1_r9peY_closure:
         const o_CREAT1_r9peY_info;
         const 0;
         const 0;
         const 0;
 },
 o_CREAT1_r9peY_entry() //  [R1]
         { info_tbl: [(c9reD,
                       label: o_CREAT1_r9peY_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9reD: // global
           _r9peY::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9reG; else goto c9reH;
       c9reH: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9reJ; else goto c9reI;
       c9reJ: // global
           HpAlloc = 16;
           goto c9reG;
       c9reG: // global
           R1 = _r9peY::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9reI: // global
           (_c9rex::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peY::P64);
           if (_c9rex::I64 == 0) goto c9rez; else goto c9rey;
       c9rez: // global
           call (I64[I64[_r9peY::P64]])() args: 8, res: 0, upd: 8;
       c9rey: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rex::I64;
           (_s9pnK::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_creat();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnK::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.05854182 UTC

[section ""data" . System.Posix.Internals.o_CREAT_closure" {
     System.Posix.Internals.o_CREAT_closure:
         const stg_IND_STATIC_info;
         const o_CREAT1_r9peY_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.059304239 UTC

[section ""data" . o_EXCL1_r9peZ_closure" {
     o_EXCL1_r9peZ_closure:
         const o_EXCL1_r9peZ_info;
         const 0;
         const 0;
         const 0;
 },
 o_EXCL1_r9peZ_entry() //  [R1]
         { info_tbl: [(c9reT,
                       label: o_EXCL1_r9peZ_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9reT: // global
           _r9peZ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9reW; else goto c9reX;
       c9reX: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9reZ; else goto c9reY;
       c9reZ: // global
           HpAlloc = 16;
           goto c9reW;
       c9reW: // global
           R1 = _r9peZ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9reY: // global
           (_c9reN::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peZ::P64);
           if (_c9reN::I64 == 0) goto c9reP; else goto c9reO;
       c9reP: // global
           call (I64[I64[_r9peZ::P64]])() args: 8, res: 0, upd: 8;
       c9reO: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9reN::I64;
           (_s9pnP::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_excl();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnP::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.06030866 UTC

[section ""data" . System.Posix.Internals.o_EXCL_closure" {
     System.Posix.Internals.o_EXCL_closure:
         const stg_IND_STATIC_info;
         const o_EXCL1_r9peZ_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.061085319 UTC

[section ""data" . o_TRUNC1_r9pf0_closure" {
     o_TRUNC1_r9pf0_closure:
         const o_TRUNC1_r9pf0_info;
         const 0;
         const 0;
         const 0;
 },
 o_TRUNC1_r9pf0_entry() //  [R1]
         { info_tbl: [(c9rf9,
                       label: o_TRUNC1_r9pf0_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rf9: // global
           _r9pf0::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rfc; else goto c9rfd;
       c9rfd: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rff; else goto c9rfe;
       c9rff: // global
           HpAlloc = 16;
           goto c9rfc;
       c9rfc: // global
           R1 = _r9pf0::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rfe: // global
           (_c9rf3::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pf0::P64);
           if (_c9rf3::I64 == 0) goto c9rf5; else goto c9rf4;
       c9rf5: // global
           call (I64[I64[_r9pf0::P64]])() args: 8, res: 0, upd: 8;
       c9rf4: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rf3::I64;
           (_s9pnU::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_trunc();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnU::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.062097238 UTC

[section ""data" . System.Posix.Internals.o_TRUNC_closure" {
     System.Posix.Internals.o_TRUNC_closure:
         const stg_IND_STATIC_info;
         const o_TRUNC1_r9pf0_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.062912043 UTC

[section ""data" . o_NOCTTY1_r9pf1_closure" {
     o_NOCTTY1_r9pf1_closure:
         const o_NOCTTY1_r9pf1_info;
         const 0;
         const 0;
         const 0;
 },
 o_NOCTTY1_r9pf1_entry() //  [R1]
         { info_tbl: [(c9rfp,
                       label: o_NOCTTY1_r9pf1_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rfp: // global
           _r9pf1::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rfs; else goto c9rft;
       c9rft: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rfv; else goto c9rfu;
       c9rfv: // global
           HpAlloc = 16;
           goto c9rfs;
       c9rfs: // global
           R1 = _r9pf1::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rfu: // global
           (_c9rfj::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pf1::P64);
           if (_c9rfj::I64 == 0) goto c9rfl; else goto c9rfk;
       c9rfl: // global
           call (I64[I64[_r9pf1::P64]])() args: 8, res: 0, upd: 8;
       c9rfk: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rfj::I64;
           (_s9pnZ::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_noctty();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnZ::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.063952486 UTC

[section ""data" . System.Posix.Internals.o_NOCTTY_closure" {
     System.Posix.Internals.o_NOCTTY_closure:
         const stg_IND_STATIC_info;
         const o_NOCTTY1_r9pf1_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.064738057 UTC

[section ""data" . o_NONBLOCK1_r9pf2_closure" {
     o_NONBLOCK1_r9pf2_closure:
         const o_NONBLOCK1_r9pf2_info;
         const 0;
         const 0;
         const 0;
 },
 o_NONBLOCK1_r9pf2_entry() //  [R1]
         { info_tbl: [(c9rfF,
                       label: o_NONBLOCK1_r9pf2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rfF: // global
           _r9pf2::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rfI; else goto c9rfJ;
       c9rfJ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rfL; else goto c9rfK;
       c9rfL: // global
           HpAlloc = 16;
           goto c9rfI;
       c9rfI: // global
           R1 = _r9pf2::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rfK: // global
           (_c9rfz::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pf2::P64);
           if (_c9rfz::I64 == 0) goto c9rfB; else goto c9rfA;
       c9rfB: // global
           call (I64[I64[_r9pf2::P64]])() args: 8, res: 0, upd: 8;
       c9rfA: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rfz::I64;
           (_s9po4::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_nonblock();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9po4::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.065811078 UTC

[section ""data" . System.Posix.Internals.o_NONBLOCK_closure" {
     System.Posix.Internals.o_NONBLOCK_closure:
         const stg_IND_STATIC_info;
         const o_NONBLOCK1_r9pf2_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.066581221 UTC

[section ""data" . o_BINARY1_r9pf3_closure" {
     o_BINARY1_r9pf3_closure:
         const o_BINARY1_r9pf3_info;
         const 0;
         const 0;
         const 0;
 },
 o_BINARY1_r9pf3_entry() //  [R1]
         { info_tbl: [(c9rfV,
                       label: o_BINARY1_r9pf3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rfV: // global
           _r9pf3::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rfY; else goto c9rfZ;
       c9rfZ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rg1; else goto c9rg0;
       c9rg1: // global
           HpAlloc = 16;
           goto c9rfY;
       c9rfY: // global
           R1 = _r9pf3::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rg0: // global
           (_c9rfP::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pf3::P64);
           if (_c9rfP::I64 == 0) goto c9rfR; else goto c9rfQ;
       c9rfR: // global
           call (I64[I64[_r9pf3::P64]])() args: 8, res: 0, upd: 8;
       c9rfQ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rfP::I64;
           (_s9po9::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_binary();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9po9::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.067581927 UTC

[section ""data" . System.Posix.Internals.o_BINARY_closure" {
     System.Posix.Internals.o_BINARY_closure:
         const stg_IND_STATIC_info;
         const o_BINARY1_r9pf3_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.068517003 UTC

[section ""data" . c_s_isreg1_r9pf4_closure" {
     c_s_isreg1_r9pf4_closure:
         const c_s_isreg1_r9pf4_info;
 },
 c_s_isreg1_r9pf4_entry() //  [R2]
         { info_tbl: [(c9rg9,
                       label: c_s_isreg1_r9pf4_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rg9: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9rgi; else goto c9rgj;
       c9rgi: // global
           R2 = R2;
           R1 = c_s_isreg1_r9pf4_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rgj: // global
           I64[Sp - 8] = block_c9rg6_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rgn; else goto c9rg7;
       u9rgn: // global
           call _c9rg6(R1) args: 0, res: 0, upd: 0;
       c9rg7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rg6() //  [R1]
         { info_tbl: [(c9rg6,
                       label: block_c9rg6_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rg6: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rgm; else goto c9rgl;
       c9rgm: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rgl: // global
           (_s9poh::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9poh::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.070021981 UTC

[section ""data" . System.Posix.Internals.c_s_isreg_closure" {
     System.Posix.Internals.c_s_isreg_closure:
         const System.Posix.Internals.c_s_isreg_info;
 },
 System.Posix.Internals.c_s_isreg_entry() //  [R2]
         { info_tbl: [(c9rgs,
                       label: System.Posix.Internals.c_s_isreg_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rgs: // global
           R2 = R2;
           call c_s_isreg1_r9pf4_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.071025409 UTC

[section ""data" . c_s_ischr1_r9pf5_closure" {
     c_s_ischr1_r9pf5_closure:
         const c_s_ischr1_r9pf5_info;
 },
 c_s_ischr1_r9pf5_entry() //  [R2]
         { info_tbl: [(c9rgC,
                       label: c_s_ischr1_r9pf5_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rgC: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9rgL; else goto c9rgM;
       c9rgL: // global
           R2 = R2;
           R1 = c_s_ischr1_r9pf5_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rgM: // global
           I64[Sp - 8] = block_c9rgz_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rgQ; else goto c9rgA;
       u9rgQ: // global
           call _c9rgz(R1) args: 0, res: 0, upd: 0;
       c9rgA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rgz() //  [R1]
         { info_tbl: [(c9rgz,
                       label: block_c9rgz_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rgz: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rgP; else goto c9rgO;
       c9rgP: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rgO: // global
           (_s9pop::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC7ZCbaseZCSystemziPosixziInternalsZCSzuISCHR(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pop::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.072223995 UTC

[section ""data" . System.Posix.Internals.c_s_ischr_closure" {
     System.Posix.Internals.c_s_ischr_closure:
         const System.Posix.Internals.c_s_ischr_info;
 },
 System.Posix.Internals.c_s_ischr_entry() //  [R2]
         { info_tbl: [(c9rgV,
                       label: System.Posix.Internals.c_s_ischr_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rgV: // global
           R2 = R2;
           call c_s_ischr1_r9pf5_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.073188524 UTC

[section ""data" . c_s_isblk1_r9pf6_closure" {
     c_s_isblk1_r9pf6_closure:
         const c_s_isblk1_r9pf6_info;
 },
 c_s_isblk1_r9pf6_entry() //  [R2]
         { info_tbl: [(c9rh5,
                       label: c_s_isblk1_r9pf6_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rh5: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9rhe; else goto c9rhf;
       c9rhe: // global
           R2 = R2;
           R1 = c_s_isblk1_r9pf6_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rhf: // global
           I64[Sp - 8] = block_c9rh2_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rhj; else goto c9rh3;
       u9rhj: // global
           call _c9rh2(R1) args: 0, res: 0, upd: 0;
       c9rh3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rh2() //  [R1]
         { info_tbl: [(c9rh2,
                       label: block_c9rh2_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rh2: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rhi; else goto c9rhh;
       c9rhi: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rhh: // global
           (_s9pox::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC6ZCbaseZCSystemziPosixziInternalsZCSzuISBLK(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pox::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.075992947 UTC

[section ""data" . System.Posix.Internals.c_s_isblk_closure" {
     System.Posix.Internals.c_s_isblk_closure:
         const System.Posix.Internals.c_s_isblk_info;
 },
 System.Posix.Internals.c_s_isblk_entry() //  [R2]
         { info_tbl: [(c9rho,
                       label: System.Posix.Internals.c_s_isblk_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rho: // global
           R2 = R2;
           call c_s_isblk1_r9pf6_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.077005378 UTC

[section ""data" . c_s_isdir1_r9pf7_closure" {
     c_s_isdir1_r9pf7_closure:
         const c_s_isdir1_r9pf7_info;
 },
 c_s_isdir1_r9pf7_entry() //  [R2]
         { info_tbl: [(c9rhy,
                       label: c_s_isdir1_r9pf7_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rhy: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9rhH; else goto c9rhI;
       c9rhH: // global
           R2 = R2;
           R1 = c_s_isdir1_r9pf7_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rhI: // global
           I64[Sp - 8] = block_c9rhv_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rhM; else goto c9rhw;
       u9rhM: // global
           call _c9rhv(R1) args: 0, res: 0, upd: 0;
       c9rhw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rhv() //  [R1]
         { info_tbl: [(c9rhv,
                       label: block_c9rhv_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rhv: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rhL; else goto c9rhK;
       c9rhL: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rhK: // global
           (_s9poF::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC5ZCbaseZCSystemziPosixziInternalsZCSzuISDIR(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9poF::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.078201351 UTC

[section ""data" . System.Posix.Internals.c_s_isdir_closure" {
     System.Posix.Internals.c_s_isdir_closure:
         const System.Posix.Internals.c_s_isdir_info;
 },
 System.Posix.Internals.c_s_isdir_entry() //  [R2]
         { info_tbl: [(c9rhR,
                       label: System.Posix.Internals.c_s_isdir_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rhR: // global
           R2 = R2;
           call c_s_isdir1_r9pf7_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.079162659 UTC

[section ""data" . c_s_isfifo1_r9pf8_closure" {
     c_s_isfifo1_r9pf8_closure:
         const c_s_isfifo1_r9pf8_info;
 },
 c_s_isfifo1_r9pf8_entry() //  [R2]
         { info_tbl: [(c9ri1,
                       label: c_s_isfifo1_r9pf8_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ri1: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9ria; else goto c9rib;
       c9ria: // global
           R2 = R2;
           R1 = c_s_isfifo1_r9pf8_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rib: // global
           I64[Sp - 8] = block_c9rhY_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rif; else goto c9rhZ;
       u9rif: // global
           call _c9rhY(R1) args: 0, res: 0, upd: 0;
       c9rhZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rhY() //  [R1]
         { info_tbl: [(c9rhY,
                       label: block_c9rhY_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rhY: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rie; else goto c9rid;
       c9rie: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rid: // global
           (_s9poN::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC4ZCbaseZCSystemziPosixziInternalsZCSzuISFIFO(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9poN::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.080341505 UTC

[section ""data" . System.Posix.Internals.c_s_isfifo_closure" {
     System.Posix.Internals.c_s_isfifo_closure:
         const System.Posix.Internals.c_s_isfifo_info;
 },
 System.Posix.Internals.c_s_isfifo_entry() //  [R2]
         { info_tbl: [(c9rik,
                       label: System.Posix.Internals.c_s_isfifo_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rik: // global
           R2 = R2;
           call c_s_isfifo1_r9pf8_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.081549478 UTC

[section ""data" . System.Posix.Internals.sizeof_stat_closure" {
     System.Posix.Internals.sizeof_stat_closure:
         const System.Posix.Internals.sizeof_stat_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.sizeof_stat_entry() //  [R1]
         { info_tbl: [(c9riv,
                       label: System.Posix.Internals.sizeof_stat_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9riv: // global
           _r9lgf::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9riw; else goto c9rix;
       c9rix: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9riz; else goto c9riy;
       c9riz: // global
           HpAlloc = 16;
           goto c9riw;
       c9riw: // global
           R1 = _r9lgf::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9riy: // global
           (_c9riq::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9lgf::P64);
           if (_c9riq::I64 == 0) goto c9ris; else goto c9rir;
       c9ris: // global
           call (I64[I64[_r9lgf::P64]])() args: 8, res: 0, upd: 8;
       c9rir: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9riq::I64;
           (_s9poS::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_stat();
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9poS::I64;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.082816778 UTC

[section ""data" . st_mtime1_r9pf9_closure" {
     st_mtime1_r9pf9_closure:
         const st_mtime1_r9pf9_info;
 },
 st_mtime1_r9pf9_entry() //  [R2]
         { info_tbl: [(c9riH,
                       label: st_mtime1_r9pf9_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9riH: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9riN; else goto c9riO;
       c9riN: // global
           R2 = R2;
           R1 = st_mtime1_r9pf9_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9riO: // global
           I64[Sp - 8] = block_c9riE_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9riS; else goto c9riF;
       u9riS: // global
           call _c9riE(R1) args: 0, res: 0, upd: 0;
       c9riF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9riE() //  [R1]
         { info_tbl: [(c9riE,
                       label: block_c9riE_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9riE: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9riR; else goto c9riQ;
       c9riR: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9riQ: // global
           (_s9pp0::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] __hscore_st_mtime(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9pp0::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.08406421 UTC

[section ""data" . System.Posix.Internals.st_mtime_closure" {
     System.Posix.Internals.st_mtime_closure:
         const System.Posix.Internals.st_mtime_info;
 },
 System.Posix.Internals.st_mtime_entry() //  [R2]
         { info_tbl: [(c9riX,
                       label: System.Posix.Internals.st_mtime_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9riX: // global
           R2 = R2;
           call st_mtime1_r9pf9_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.085044612 UTC

[section ""data" . st_size1_r9pfa_closure" {
     st_size1_r9pfa_closure:
         const st_size1_r9pfa_info;
 },
 st_size1_r9pfa_entry() //  [R2]
         { info_tbl: [(c9rj7,
                       label: st_size1_r9pfa_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rj7: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9rjd; else goto c9rje;
       c9rjd: // global
           R2 = R2;
           R1 = st_size1_r9pfa_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rje: // global
           I64[Sp - 8] = block_c9rj4_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rji; else goto c9rj5;
       u9rji: // global
           call _c9rj4(R1) args: 0, res: 0, upd: 0;
       c9rj5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rj4() //  [R1]
         { info_tbl: [(c9rj4,
                       label: block_c9rj4_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rj4: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rjh; else goto c9rjg;
       c9rjh: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rjg: // global
           (_s9pp9::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] __hscore_st_size(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9pp9::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.086191503 UTC

[section ""data" . System.Posix.Internals.st_size_closure" {
     System.Posix.Internals.st_size_closure:
         const System.Posix.Internals.st_size_info;
 },
 System.Posix.Internals.st_size_entry() //  [R2]
         { info_tbl: [(c9rjn,
                       label: System.Posix.Internals.st_size_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rjn: // global
           R2 = R2;
           call st_size1_r9pfa_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.087210994 UTC

[section ""data" . st_mode1_r9pfb_closure" {
     st_mode1_r9pfb_closure:
         const st_mode1_r9pfb_info;
 },
 st_mode1_r9pfb_entry() //  [R2]
         { info_tbl: [(c9rjx,
                       label: st_mode1_r9pfb_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rjx: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9rjG; else goto c9rjH;
       c9rjG: // global
           R2 = R2;
           R1 = st_mode1_r9pfb_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rjH: // global
           I64[Sp - 8] = block_c9rju_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rjL; else goto c9rjv;
       u9rjL: // global
           call _c9rju(R1) args: 0, res: 0, upd: 0;
       c9rjv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rju() //  [R1]
         { info_tbl: [(c9rju,
                       label: block_c9rju_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rju: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rjK; else goto c9rjJ;
       c9rjK: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rjJ: // global
           (_s9ppi::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_mode(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Word.W32#_con_info;
           I64[Hp] = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9ppi::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.088435292 UTC

[section ""data" . System.Posix.Internals.st_mode_closure" {
     System.Posix.Internals.st_mode_closure:
         const System.Posix.Internals.st_mode_info;
 },
 System.Posix.Internals.st_mode_entry() //  [R2]
         { info_tbl: [(c9rjQ,
                       label: System.Posix.Internals.st_mode_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rjQ: // global
           R2 = R2;
           call st_mode1_r9pfb_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.089369068 UTC

[section ""data" . st_dev1_r9pfc_closure" {
     st_dev1_r9pfc_closure:
         const st_dev1_r9pfc_info;
 },
 st_dev1_r9pfc_entry() //  [R2]
         { info_tbl: [(c9rk0,
                       label: st_dev1_r9pfc_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rk0: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9rk6; else goto c9rk7;
       c9rk6: // global
           R2 = R2;
           R1 = st_dev1_r9pfc_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rk7: // global
           I64[Sp - 8] = block_c9rjX_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rkb; else goto c9rjY;
       u9rkb: // global
           call _c9rjX(R1) args: 0, res: 0, upd: 0;
       c9rjY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rjX() //  [R1]
         { info_tbl: [(c9rjX,
                       label: block_c9rjX_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rjX: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rka; else goto c9rk9;
       c9rka: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rk9: // global
           (_s9pps::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Word.W64#_con_info;
           I64[Hp] = _s9pps::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.090573451 UTC

[section ""data" . System.Posix.Internals.st_dev_closure" {
     System.Posix.Internals.st_dev_closure:
         const System.Posix.Internals.st_dev_info;
 },
 System.Posix.Internals.st_dev_entry() //  [R2]
         { info_tbl: [(c9rkg,
                       label: System.Posix.Internals.st_dev_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rkg: // global
           R2 = R2;
           call st_dev1_r9pfc_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.091558496 UTC

[section ""data" . st_ino1_r9pfd_closure" {
     st_ino1_r9pfd_closure:
         const st_ino1_r9pfd_info;
 },
 st_ino1_r9pfd_entry() //  [R2]
         { info_tbl: [(c9rkq,
                       label: st_ino1_r9pfd_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rkq: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9rkw; else goto c9rkx;
       c9rkw: // global
           R2 = R2;
           R1 = st_ino1_r9pfd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rkx: // global
           I64[Sp - 8] = block_c9rkn_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rkB; else goto c9rko;
       u9rkB: // global
           call _c9rkn(R1) args: 0, res: 0, upd: 0;
       c9rko: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rkn() //  [R1]
         { info_tbl: [(c9rkn,
                       label: block_c9rkn_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rkn: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rkA; else goto c9rkz;
       c9rkA: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rkz: // global
           (_s9ppB::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Word.W64#_con_info;
           I64[Hp] = _s9ppB::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.092712272 UTC

[section ""data" . System.Posix.Internals.st_ino_closure" {
     System.Posix.Internals.st_ino_closure:
         const System.Posix.Internals.st_ino_info;
 },
 System.Posix.Internals.st_ino_entry() //  [R2]
         { info_tbl: [(c9rkG,
                       label: System.Posix.Internals.st_ino_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rkG: // global
           R2 = R2;
           call st_ino1_r9pfd_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.093852303 UTC

[section ""data" . const_echo1_r9pfe_closure" {
     const_echo1_r9pfe_closure:
         const const_echo1_r9pfe_info;
         const 0;
         const 0;
         const 0;
 },
 const_echo1_r9pfe_entry() //  [R1]
         { info_tbl: [(c9rkS,
                       label: const_echo1_r9pfe_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rkS: // global
           _r9pfe::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rkV; else goto c9rkW;
       c9rkW: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rkY; else goto c9rkX;
       c9rkY: // global
           HpAlloc = 16;
           goto c9rkV;
       c9rkV: // global
           R1 = _r9pfe::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rkX: // global
           (_c9rkM::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfe::P64);
           if (_c9rkM::I64 == 0) goto c9rkO; else goto c9rkN;
       c9rkO: // global
           call (I64[I64[_r9pfe::P64]])() args: 8, res: 0, upd: 8;
       c9rkN: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rkM::I64;
           (_s9ppG::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_echo();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9ppG::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.094829667 UTC

[section ""data" . System.Posix.Internals.const_echo_closure" {
     System.Posix.Internals.const_echo_closure:
         const stg_IND_STATIC_info;
         const const_echo1_r9pfe_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.095654407 UTC

[section ""data" . const_tcsanow1_r9pff_closure" {
     const_tcsanow1_r9pff_closure:
         const const_tcsanow1_r9pff_info;
         const 0;
         const 0;
         const 0;
 },
 const_tcsanow1_r9pff_entry() //  [R1]
         { info_tbl: [(c9rl8,
                       label: const_tcsanow1_r9pff_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rl8: // global
           _r9pff::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rlb; else goto c9rlc;
       c9rlc: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rle; else goto c9rld;
       c9rle: // global
           HpAlloc = 16;
           goto c9rlb;
       c9rlb: // global
           R1 = _r9pff::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rld: // global
           (_c9rl2::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pff::P64);
           if (_c9rl2::I64 == 0) goto c9rl4; else goto c9rl3;
       c9rl4: // global
           call (I64[I64[_r9pff::P64]])() args: 8, res: 0, upd: 8;
       c9rl3: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rl2::I64;
           (_s9ppL::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_tcsanow();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9ppL::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.09663591 UTC

[section ""data" . System.Posix.Internals.const_tcsanow_closure" {
     System.Posix.Internals.const_tcsanow_closure:
         const stg_IND_STATIC_info;
         const const_tcsanow1_r9pff_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.097461221 UTC

[section ""data" . const_icanon1_r9pfg_closure" {
     const_icanon1_r9pfg_closure:
         const const_icanon1_r9pfg_info;
         const 0;
         const 0;
         const 0;
 },
 const_icanon1_r9pfg_entry() //  [R1]
         { info_tbl: [(c9rlo,
                       label: const_icanon1_r9pfg_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rlo: // global
           _r9pfg::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rlr; else goto c9rls;
       c9rls: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rlu; else goto c9rlt;
       c9rlu: // global
           HpAlloc = 16;
           goto c9rlr;
       c9rlr: // global
           R1 = _r9pfg::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rlt: // global
           (_c9rli::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfg::P64);
           if (_c9rli::I64 == 0) goto c9rlk; else goto c9rlj;
       c9rlk: // global
           call (I64[I64[_r9pfg::P64]])() args: 8, res: 0, upd: 8;
       c9rlj: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rli::I64;
           (_s9ppQ::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_icanon();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9ppQ::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.098469639 UTC

[section ""data" . System.Posix.Internals.const_icanon_closure" {
     System.Posix.Internals.const_icanon_closure:
         const stg_IND_STATIC_info;
         const const_icanon1_r9pfg_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.099244414 UTC

[section ""data" . const_vmin1_r9pfh_closure" {
     const_vmin1_r9pfh_closure:
         const const_vmin1_r9pfh_info;
         const 0;
         const 0;
         const 0;
 },
 const_vmin1_r9pfh_entry() //  [R1]
         { info_tbl: [(c9rlE,
                       label: const_vmin1_r9pfh_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rlE: // global
           _r9pfh::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rlH; else goto c9rlI;
       c9rlI: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rlK; else goto c9rlJ;
       c9rlK: // global
           HpAlloc = 16;
           goto c9rlH;
       c9rlH: // global
           R1 = _r9pfh::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rlJ: // global
           (_c9rly::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfh::P64);
           if (_c9rly::I64 == 0) goto c9rlA; else goto c9rlz;
       c9rlA: // global
           call (I64[I64[_r9pfh::P64]])() args: 8, res: 0, upd: 8;
       c9rlz: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rly::I64;
           (_s9ppV::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_vmin();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9ppV::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.100244243 UTC

[section ""data" . System.Posix.Internals.const_vmin_closure" {
     System.Posix.Internals.const_vmin_closure:
         const stg_IND_STATIC_info;
         const const_vmin1_r9pfh_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.101009819 UTC

[section ""data" . const_vtime1_r9pfi_closure" {
     const_vtime1_r9pfi_closure:
         const const_vtime1_r9pfi_info;
         const 0;
         const 0;
         const 0;
 },
 const_vtime1_r9pfi_entry() //  [R1]
         { info_tbl: [(c9rlU,
                       label: const_vtime1_r9pfi_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rlU: // global
           _r9pfi::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rlX; else goto c9rlY;
       c9rlY: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rm0; else goto c9rlZ;
       c9rm0: // global
           HpAlloc = 16;
           goto c9rlX;
       c9rlX: // global
           R1 = _r9pfi::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rlZ: // global
           (_c9rlO::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfi::P64);
           if (_c9rlO::I64 == 0) goto c9rlQ; else goto c9rlP;
       c9rlQ: // global
           call (I64[I64[_r9pfi::P64]])() args: 8, res: 0, upd: 8;
       c9rlP: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rlO::I64;
           (_s9pq0::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_vtime();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pq0::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.102005719 UTC

[section ""data" . System.Posix.Internals.const_vtime_closure" {
     System.Posix.Internals.const_vtime_closure:
         const stg_IND_STATIC_info;
         const const_vtime1_r9pfi_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.102774658 UTC

[section ""data" . const_sigttou1_r9pfj_closure" {
     const_sigttou1_r9pfj_closure:
         const const_sigttou1_r9pfj_info;
         const 0;
         const 0;
         const 0;
 },
 const_sigttou1_r9pfj_entry() //  [R1]
         { info_tbl: [(c9rma,
                       label: const_sigttou1_r9pfj_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rma: // global
           _r9pfj::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rmd; else goto c9rme;
       c9rme: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rmg; else goto c9rmf;
       c9rmg: // global
           HpAlloc = 16;
           goto c9rmd;
       c9rmd: // global
           R1 = _r9pfj::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rmf: // global
           (_c9rm4::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfj::P64);
           if (_c9rm4::I64 == 0) goto c9rm6; else goto c9rm5;
       c9rm6: // global
           call (I64[I64[_r9pfj::P64]])() args: 8, res: 0, upd: 8;
       c9rm5: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rm4::I64;
           (_s9pq5::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sigttou();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pq5::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.103757547 UTC

[section ""data" . System.Posix.Internals.const_sigttou_closure" {
     System.Posix.Internals.const_sigttou_closure:
         const stg_IND_STATIC_info;
         const const_sigttou1_r9pfj_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.104528002 UTC

[section ""data" . const_sig_block1_r9pfk_closure" {
     const_sig_block1_r9pfk_closure:
         const const_sig_block1_r9pfk_info;
         const 0;
         const 0;
         const 0;
 },
 const_sig_block1_r9pfk_entry() //  [R1]
         { info_tbl: [(c9rmq,
                       label: const_sig_block1_r9pfk_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rmq: // global
           _r9pfk::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rmt; else goto c9rmu;
       c9rmu: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rmw; else goto c9rmv;
       c9rmw: // global
           HpAlloc = 16;
           goto c9rmt;
       c9rmt: // global
           R1 = _r9pfk::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rmv: // global
           (_c9rmk::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfk::P64);
           if (_c9rmk::I64 == 0) goto c9rmm; else goto c9rml;
       c9rmm: // global
           call (I64[I64[_r9pfk::P64]])() args: 8, res: 0, upd: 8;
       c9rml: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rmk::I64;
           (_s9pqa::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sig_block();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pqa::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.105760136 UTC

[section ""data" . System.Posix.Internals.const_sig_block_closure" {
     System.Posix.Internals.const_sig_block_closure:
         const stg_IND_STATIC_info;
         const const_sig_block1_r9pfk_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.106501735 UTC

[section ""data" . const_sig_setmask1_r9pfl_closure" {
     const_sig_setmask1_r9pfl_closure:
         const const_sig_setmask1_r9pfl_info;
         const 0;
         const 0;
         const 0;
 },
 const_sig_setmask1_r9pfl_entry() //  [R1]
         { info_tbl: [(c9rmG,
                       label: const_sig_setmask1_r9pfl_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rmG: // global
           _r9pfl::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rmJ; else goto c9rmK;
       c9rmK: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rmM; else goto c9rmL;
       c9rmM: // global
           HpAlloc = 16;
           goto c9rmJ;
       c9rmJ: // global
           R1 = _r9pfl::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rmL: // global
           (_c9rmA::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfl::P64);
           if (_c9rmA::I64 == 0) goto c9rmC; else goto c9rmB;
       c9rmC: // global
           call (I64[I64[_r9pfl::P64]])() args: 8, res: 0, upd: 8;
       c9rmB: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rmA::I64;
           (_s9pqf::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sig_setmask();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pqf::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.107471355 UTC

[section ""data" . System.Posix.Internals.const_sig_setmask_closure" {
     System.Posix.Internals.const_sig_setmask_closure:
         const stg_IND_STATIC_info;
         const const_sig_setmask1_r9pfl_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.108239335 UTC

[section ""data" . const_f_getfl1_r9pfm_closure" {
     const_f_getfl1_r9pfm_closure:
         const const_f_getfl1_r9pfm_info;
         const 0;
         const 0;
         const 0;
 },
 const_f_getfl1_r9pfm_entry() //  [R1]
         { info_tbl: [(c9rmW,
                       label: const_f_getfl1_r9pfm_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rmW: // global
           _r9pfm::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rmZ; else goto c9rn0;
       c9rn0: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rn2; else goto c9rn1;
       c9rn2: // global
           HpAlloc = 16;
           goto c9rmZ;
       c9rmZ: // global
           R1 = _r9pfm::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rn1: // global
           (_c9rmQ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfm::P64);
           if (_c9rmQ::I64 == 0) goto c9rmS; else goto c9rmR;
       c9rmS: // global
           call (I64[I64[_r9pfm::P64]])() args: 8, res: 0, upd: 8;
       c9rmR: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rmQ::I64;
           (_s9pqk::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_getfl();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pqk::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.109214427 UTC

[section ""data" . System.Posix.Internals.const_f_getfl_closure" {
     System.Posix.Internals.const_f_getfl_closure:
         const stg_IND_STATIC_info;
         const const_f_getfl1_r9pfm_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.110006052 UTC

[section ""data" . const_f_setfl1_r9pfn_closure" {
     const_f_setfl1_r9pfn_closure:
         const const_f_setfl1_r9pfn_info;
         const 0;
         const 0;
         const 0;
 },
 const_f_setfl1_r9pfn_entry() //  [R1]
         { info_tbl: [(c9rnc,
                       label: const_f_setfl1_r9pfn_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rnc: // global
           _r9pfn::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rnf; else goto c9rng;
       c9rng: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rni; else goto c9rnh;
       c9rni: // global
           HpAlloc = 16;
           goto c9rnf;
       c9rnf: // global
           R1 = _r9pfn::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rnh: // global
           (_c9rn6::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfn::P64);
           if (_c9rn6::I64 == 0) goto c9rn8; else goto c9rn7;
       c9rn8: // global
           call (I64[I64[_r9pfn::P64]])() args: 8, res: 0, upd: 8;
       c9rn7: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rn6::I64;
           (_s9pqp::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfl();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pqp::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.110993514 UTC

[section ""data" . System.Posix.Internals.const_f_setfl_closure" {
     System.Posix.Internals.const_f_setfl_closure:
         const stg_IND_STATIC_info;
         const const_f_setfl1_r9pfn_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.111779646 UTC

[section ""data" . const_f_setfd1_r9pfo_closure" {
     const_f_setfd1_r9pfo_closure:
         const const_f_setfd1_r9pfo_info;
         const 0;
         const 0;
         const 0;
 },
 const_f_setfd1_r9pfo_entry() //  [R1]
         { info_tbl: [(c9rns,
                       label: const_f_setfd1_r9pfo_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rns: // global
           _r9pfo::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rnv; else goto c9rnw;
       c9rnw: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rny; else goto c9rnx;
       c9rny: // global
           HpAlloc = 16;
           goto c9rnv;
       c9rnv: // global
           R1 = _r9pfo::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rnx: // global
           (_c9rnm::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfo::P64);
           if (_c9rnm::I64 == 0) goto c9rno; else goto c9rnn;
       c9rno: // global
           call (I64[I64[_r9pfo::P64]])() args: 8, res: 0, upd: 8;
       c9rnn: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rnm::I64;
           (_s9pqu::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfd();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pqu::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.112760717 UTC

[section ""data" . System.Posix.Internals.const_f_setfd_closure" {
     System.Posix.Internals.const_f_setfd_closure:
         const stg_IND_STATIC_info;
         const const_f_setfd1_r9pfo_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.113566069 UTC

[section ""data" . const_fd_cloexec1_r9pfp_closure" {
     const_fd_cloexec1_r9pfp_closure:
         const const_fd_cloexec1_r9pfp_info;
         const 0;
         const 0;
         const 0;
 },
 const_fd_cloexec1_r9pfp_entry() //  [R1]
         { info_tbl: [(c9rnH,
                       label: const_fd_cloexec1_r9pfp_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rnH: // global
           _r9pfp::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rnI; else goto c9rnJ;
       c9rnJ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rnL; else goto c9rnK;
       c9rnL: // global
           HpAlloc = 16;
           goto c9rnI;
       c9rnI: // global
           R1 = _r9pfp::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rnK: // global
           (_c9rnC::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfp::P64);
           if (_c9rnC::I64 == 0) goto c9rnE; else goto c9rnD;
       c9rnE: // global
           call (I64[I64[_r9pfp::P64]])() args: 8, res: 0, upd: 8;
       c9rnD: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rnC::I64;
           (_s9pqz::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_fd_cloexec();
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9pqz::I64;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.114537453 UTC

[section ""data" . System.Posix.Internals.const_fd_cloexec_closure" {
     System.Posix.Internals.const_fd_cloexec_closure:
         const stg_IND_STATIC_info;
         const const_fd_cloexec1_r9pfp_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.115298309 UTC

[section ""data" . System.Posix.Internals.sizeof_termios_closure" {
     System.Posix.Internals.sizeof_termios_closure:
         const System.Posix.Internals.sizeof_termios_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.sizeof_termios_entry() //  [R1]
         { info_tbl: [(c9rnU,
                       label: System.Posix.Internals.sizeof_termios_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rnU: // global
           _r9lfX::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rnV; else goto c9rnW;
       c9rnW: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rnY; else goto c9rnX;
       c9rnY: // global
           HpAlloc = 16;
           goto c9rnV;
       c9rnV: // global
           R1 = _r9lfX::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rnX: // global
           (_c9rnP::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9lfX::P64);
           if (_c9rnP::I64 == 0) goto c9rnR; else goto c9rnQ;
       c9rnR: // global
           call (I64[I64[_r9lfX::P64]])() args: 8, res: 0, upd: 8;
       c9rnQ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rnP::I64;
           (_s9pqD::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_termios();
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9pqD::I64;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.116488552 UTC

[section ""data" . System.Posix.Internals.sizeof_sigset_t_closure" {
     System.Posix.Internals.sizeof_sigset_t_closure:
         const System.Posix.Internals.sizeof_sigset_t_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.sizeof_sigset_t_entry() //  [R1]
         { info_tbl: [(c9ro7,
                       label: System.Posix.Internals.sizeof_sigset_t_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ro7: // global
           _r9lfW::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9ro8; else goto c9ro9;
       c9ro9: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rob; else goto c9roa;
       c9rob: // global
           HpAlloc = 16;
           goto c9ro8;
       c9ro8: // global
           R1 = _r9lfW::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9roa: // global
           (_c9ro2::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9lfW::P64);
           if (_c9ro2::I64 == 0) goto c9ro4; else goto c9ro3;
       c9ro4: // global
           call (I64[I64[_r9lfW::P64]])() args: 8, res: 0, upd: 8;
       c9ro3: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9ro2::I64;
           (_s9pqH::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_sigset_t();
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9pqH::I64;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.118137201 UTC

[section ""data" . c_lflag1_r9pfq_closure" {
     c_lflag1_r9pfq_closure:
         const c_lflag1_r9pfq_info;
 },
 c_lflag1_r9pfq_entry() //  [R2]
         { info_tbl: [(c9roj,
                       label: c_lflag1_r9pfq_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9roj: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9ros; else goto c9rot;
       c9ros: // global
           R2 = R2;
           R1 = c_lflag1_r9pfq_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rot: // global
           I64[Sp - 8] = block_c9rog_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rox; else goto c9roh;
       u9rox: // global
           call _c9rog(R1) args: 0, res: 0, upd: 0;
       c9roh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rog() //  [R1]
         { info_tbl: [(c9rog,
                       label: block_c9rog_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rog: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9row; else goto c9rov;
       c9row: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rov: // global
           (_s9pqP::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_lflag(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Word.W32#_con_info;
           I64[Hp] = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pqP::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.120671708 UTC

[section ""data" . System.Posix.Internals.c_lflag_closure" {
     System.Posix.Internals.c_lflag_closure:
         const System.Posix.Internals.c_lflag_info;
 },
 System.Posix.Internals.c_lflag_entry() //  [R2]
         { info_tbl: [(c9roC,
                       label: System.Posix.Internals.c_lflag_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9roC: // global
           R2 = R2;
           call c_lflag1_r9pfq_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.121695516 UTC

[section ""data" . poke_c_lflag1_r9pfr_closure" {
     poke_c_lflag1_r9pfr_closure:
         const poke_c_lflag1_r9pfr_info;
 },
 poke_c_lflag1_r9pfr_entry() //  [R2, R3]
         { info_tbl: [(c9roM,
                       label: poke_c_lflag1_r9pfr_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9roM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9roQ; else goto c9roR;
       c9roQ: // global
           R3 = R3;
           R2 = R2;
           R1 = poke_c_lflag1_r9pfr_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9roR: // global
           I64[Sp - 16] = block_c9roJ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9rp2; else goto c9roK;
       u9rp2: // global
           call _c9roJ(R1) args: 0, res: 0, upd: 0;
       c9roK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9roJ() //  [R1]
         { info_tbl: [(c9roJ,
                       label: block_c9roJ_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9roJ: // global
           I64[Sp] = block_c9roP_info;
           _s9pqW::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pqW::I64;
           if (R1 & 7 != 0) goto u9rp1; else goto c9roT;
       u9rp1: // global
           call _c9roP(R1) args: 0, res: 0, upd: 0;
       c9roT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9roP() //  [R1]
         { info_tbl: [(c9roP,
                       label: block_c9roP_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9roP: // global
           call "ccall" arg hints:  [PtrHint,]  result hints:  [] __hscore_poke_lflag(I64[Sp + 8], I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.122990944 UTC

[section ""data" . System.Posix.Internals.poke_c_lflag_closure" {
     System.Posix.Internals.poke_c_lflag_closure:
         const System.Posix.Internals.poke_c_lflag_info;
 },
 System.Posix.Internals.poke_c_lflag_entry() //  [R2, R3]
         { info_tbl: [(c9rp7,
                       label: System.Posix.Internals.poke_c_lflag_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rp7: // global
           R3 = R3;
           R2 = R2;
           call poke_c_lflag1_r9pfr_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.123930363 UTC

[section ""data" . ptr_c_cc1_r9pfs_closure" {
     ptr_c_cc1_r9pfs_closure:
         const ptr_c_cc1_r9pfs_info;
 },
 ptr_c_cc1_r9pfs_entry() //  [R2]
         { info_tbl: [(c9rph,
                       label: ptr_c_cc1_r9pfs_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rph: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9rpn; else goto c9rpo;
       c9rpn: // global
           R2 = R2;
           R1 = ptr_c_cc1_r9pfs_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rpo: // global
           I64[Sp - 8] = block_c9rpe_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rps; else goto c9rpf;
       u9rps: // global
           call _c9rpe(R1) args: 0, res: 0, upd: 0;
       c9rpf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rpe() //  [R1]
         { info_tbl: [(c9rpe,
                       label: block_c9rpe_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rpe: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rpr; else goto c9rpq;
       c9rpr: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rpq: // global
           (_s9pr9::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] __hscore_ptr_c_cc(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s9pr9::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.125061585 UTC

[section ""data" . System.Posix.Internals.ptr_c_cc_closure" {
     System.Posix.Internals.ptr_c_cc_closure:
         const System.Posix.Internals.ptr_c_cc_info;
 },
 System.Posix.Internals.ptr_c_cc_entry() //  [R2]
         { info_tbl: [(c9rpx,
                       label: System.Posix.Internals.ptr_c_cc_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rpx: // global
           R2 = R2;
           call ptr_c_cc1_r9pfs_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.126050404 UTC

[section ""data" . c_s_issock1_r9pft_closure" {
     c_s_issock1_r9pft_closure:
         const c_s_issock1_r9pft_info;
 },
 c_s_issock1_r9pft_entry() //  [R2]
         { info_tbl: [(c9rpH,
                       label: c_s_issock1_r9pft_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rpH: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9rpQ; else goto c9rpR;
       c9rpQ: // global
           R2 = R2;
           R1 = c_s_issock1_r9pft_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rpR: // global
           I64[Sp - 8] = block_c9rpE_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rpV; else goto c9rpF;
       u9rpV: // global
           call _c9rpE(R1) args: 0, res: 0, upd: 0;
       c9rpF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rpE() //  [R1]
         { info_tbl: [(c9rpE,
                       label: block_c9rpE_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rpE: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rpU; else goto c9rpT;
       c9rpU: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rpT: // global
           (_s9prh::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC3ZCbaseZCSystemziPosixziInternalsZCSzuISSOCK(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9prh::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.127203413 UTC

[section ""data" . System.Posix.Internals.c_s_issock_closure" {
     System.Posix.Internals.c_s_issock_closure:
         const System.Posix.Internals.c_s_issock_info;
 },
 System.Posix.Internals.c_s_issock_entry() //  [R2]
         { info_tbl: [(c9rq0,
                       label: System.Posix.Internals.c_s_issock_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rq0: // global
           R2 = R2;
           call c_s_issock1_r9pft_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.128070812 UTC

[section ""data" . System.Posix.Internals.dEFAULT_BUFFER_SIZE_closure" {
     System.Posix.Internals.dEFAULT_BUFFER_SIZE_closure:
         const System.Posix.Internals.dEFAULT_BUFFER_SIZE_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.dEFAULT_BUFFER_SIZE_entry() //  [R1]
         { info_tbl: [(c9rqb,
                       label: System.Posix.Internals.dEFAULT_BUFFER_SIZE_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rqb: // global
           _r9lfR::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rqc; else goto c9rqd;
       c9rqd: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rqf; else goto c9rqe;
       c9rqf: // global
           HpAlloc = 16;
           goto c9rqc;
       c9rqc: // global
           R1 = _r9lfR::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rqe: // global
           (_c9rq6::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9lfR::P64);
           if (_c9rq6::I64 == 0) goto c9rq8; else goto c9rq7;
       c9rq8: // global
           call (I64[I64[_r9lfR::P64]])() args: 8, res: 0, upd: 8;
       c9rq7: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rq6::I64;
           (_s9prm::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_bufsiz();
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9prm::I64;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.129577902 UTC

[section ""data" . sEEK_CUR1_r9pfu_closure" {
     sEEK_CUR1_r9pfu_closure:
         const sEEK_CUR1_r9pfu_info;
         const 0;
         const 0;
         const 0;
 },
 sEEK_CUR1_r9pfu_entry() //  [R1]
         { info_tbl: [(c9rqp,
                       label: sEEK_CUR1_r9pfu_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rqp: // global
           _r9pfu::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rqs; else goto c9rqt;
       c9rqt: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rqv; else goto c9rqu;
       c9rqv: // global
           HpAlloc = 16;
           goto c9rqs;
       c9rqs: // global
           R1 = _r9pfu::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rqu: // global
           (_c9rqj::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfu::P64);
           if (_c9rqj::I64 == 0) goto c9rql; else goto c9rqk;
       c9rql: // global
           call (I64[I64[_r9pfu::P64]])() args: 8, res: 0, upd: 8;
       c9rqk: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rqj::I64;
           (_s9prq::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC2ZCbaseZCSystemziPosixziInternalsZCSEEKzuCUR();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9prq::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.13056443 UTC

[section ""data" . System.Posix.Internals.sEEK_CUR_closure" {
     System.Posix.Internals.sEEK_CUR_closure:
         const stg_IND_STATIC_info;
         const sEEK_CUR1_r9pfu_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.131320047 UTC

[section ""data" . sEEK_SET1_r9pfv_closure" {
     sEEK_SET1_r9pfv_closure:
         const sEEK_SET1_r9pfv_info;
         const 0;
         const 0;
         const 0;
 },
 sEEK_SET1_r9pfv_entry() //  [R1]
         { info_tbl: [(c9rqF,
                       label: sEEK_SET1_r9pfv_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rqF: // global
           _r9pfv::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rqI; else goto c9rqJ;
       c9rqJ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rqL; else goto c9rqK;
       c9rqL: // global
           HpAlloc = 16;
           goto c9rqI;
       c9rqI: // global
           R1 = _r9pfv::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rqK: // global
           (_c9rqz::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfv::P64);
           if (_c9rqz::I64 == 0) goto c9rqB; else goto c9rqA;
       c9rqB: // global
           call (I64[I64[_r9pfv::P64]])() args: 8, res: 0, upd: 8;
       c9rqA: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rqz::I64;
           (_s9prv::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC1ZCbaseZCSystemziPosixziInternalsZCSEEKzuSET();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9prv::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.132332924 UTC

[section ""data" . System.Posix.Internals.sEEK_SET_closure" {
     System.Posix.Internals.sEEK_SET_closure:
         const stg_IND_STATIC_info;
         const sEEK_SET1_r9pfv_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.133079825 UTC

[section ""data" . sEEK_END1_r9pfw_closure" {
     sEEK_END1_r9pfw_closure:
         const sEEK_END1_r9pfw_info;
         const 0;
         const 0;
         const 0;
 },
 sEEK_END1_r9pfw_entry() //  [R1]
         { info_tbl: [(c9rqV,
                       label: sEEK_END1_r9pfw_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rqV: // global
           _r9pfw::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rqY; else goto c9rqZ;
       c9rqZ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rr1; else goto c9rr0;
       c9rr1: // global
           HpAlloc = 16;
           goto c9rqY;
       c9rqY: // global
           R1 = _r9pfw::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rr0: // global
           (_c9rqP::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfw::P64);
           if (_c9rqP::I64 == 0) goto c9rqR; else goto c9rqQ;
       c9rqR: // global
           call (I64[I64[_r9pfw::P64]])() args: 8, res: 0, upd: 8;
       c9rqQ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rqP::I64;
           (_s9prA::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC0ZCbaseZCSystemziPosixziInternalsZCSEEKzuEND();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9prA::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.134064855 UTC

[section ""data" . System.Posix.Internals.sEEK_END_closure" {
     System.Posix.Internals.sEEK_END_closure:
         const stg_IND_STATIC_info;
         const sEEK_END1_r9pfw_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.134883084 UTC

[section ""data" . System.Posix.Internals.withFilePath1_closure" {
     System.Posix.Internals.withFilePath1_closure:
         const System.Posix.Internals.withFilePath1_info;
         const 0;
 },
 System.Posix.Internals.withFilePath1_entry() //  [R2, R3]
         { info_tbl: [(c9rr8,
                       label: System.Posix.Internals.withFilePath1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rr8: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9rr9; else goto c9rra;
       c9rr9: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Posix.Internals.withFilePath1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9rra: // global
           I64[Sp - 24] = block_c9rr6_info;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rr6() //  [R1]
         { info_tbl: [(c9rr6,
                       label: block_c9rr6_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rr6: // global
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 24;
           call GHC.Foreign.charIsRepresentable3_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.136014235 UTC

[section ""data" . System.Posix.Internals.withFilePath_closure" {
     System.Posix.Internals.withFilePath_closure:
         const System.Posix.Internals.withFilePath_info;
         const 0;
 },
 System.Posix.Internals.withFilePath_entry() //  [R2, R3]
         { info_tbl: [(c9rrg,
                       label: System.Posix.Internals.withFilePath_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rrg: // global
           R3 = R3;
           R2 = R2;
           call System.Posix.Internals.withFilePath1_entry(R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.140693776 UTC

[section ""data" . System.Posix.Internals.peekFilePathLen1_closure" {
     System.Posix.Internals.peekFilePathLen1_closure:
         const System.Posix.Internals.peekFilePathLen1_info;
         const 0;
 },
 sat_s9psZ_entry() //  [R1]
         { info_tbl: [(c9rtA,
                       label: sat_s9psZ_info
                       rep:HeapRep 2 ptrs 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rtA: // global
           _s9psZ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rtB; else goto c9rtC;
       c9rtC: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9rtE; else goto c9rtD;
       c9rtE: // global
           HpAlloc = 40;
           goto c9rtB;
       c9rtB: // global
           R1 = _s9psZ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rtD: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9psZ::P64;
           _s9psO::P64 = P64[_s9psZ::P64 + 16];
           _s9psW::P64 = P64[_s9psZ::P64 + 24];
           _s9psS::I64 = I64[_s9psZ::P64 + 32];
           I64[Hp - 32] = GHC.Types.C#_con_info;
           I64[Hp - 24] = _s9psS::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = _s9psO::P64;
           R3 = _s9psW::P64;
           R2 = Hp - 14;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9ptg_entry() //  [R1]
         { info_tbl: [(c9rtN,
                       label: sat_s9ptg_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rtN: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rtO; else goto c9rtP;
       c9rtO: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rtP: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = GHC.Types.[]_closure+1;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 $wgo_s9psg_entry() //  [R1, R2]
         { info_tbl: [(c9rtQ,
                       label: $wgo_s9psg_info
                       rep:HeapRep 2 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rtQ: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c9rtR; else goto c9rtS;
       c9rtR: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rtS: // global
           I64[Sp - 32] = block_c9rsf_info;
           _s9psg::P64 = R1;
           _s9psf::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp - 24] = _s9psf::P64;
           P64[Sp - 16] = _s9psg::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9rvs; else goto c9rsg;
       u9rvs: // global
           call _c9rsf(R1) args: 0, res: 0, upd: 0;
       c9rsg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rsf() //  [R1]
         { info_tbl: [(c9rsf,
                       label: block_c9rsf_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rsf: // global
           _s9psf::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9rsk_info;
           R3 = _s9psf::P64;
           R2 = P64[Sp + 24];
           _s9psl::P64 = P64[R1 + 15];
           R1 = P64[R1 + 7];
           P64[Sp + 24] = _s9psl::P64;
           Sp = Sp + 8;
           call stg_ap_ppv_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rsk() //  [R1]
         { info_tbl: [(c9rsk,
                       label: block_c9rsk_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rsk: // global
           I64[Sp] = block_c9rsm_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u9rvk; else goto c9rsn;
       u9rvk: // global
           call _c9rsm(R1) args: 0, res: 0, upd: 0;
       c9rsn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rsm() //  [R1]
         { info_tbl: [(c9rsm,
                       label: block_c9rsm_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rsm: // global
           I64[Sp - 16] = block_c9rsr_info;
           _s9pst::P64 = P64[R1 + 7];
           _s9psv::P64 = P64[R1 + 23];
           R1 = P64[R1 + 15];
           P64[Sp - 8] = _s9psv::P64;
           P64[Sp] = _s9pst::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9rvl; else goto c9rss;
       u9rvl: // global
           call _c9rsr(R1) args: 0, res: 0, upd: 0;
       c9rss: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rsr() //  [R1]
         { info_tbl: [(c9rsr,
                       label: block_c9rsr_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rsr: // global
           if (I64[R1 + 39] == I64[R1 + 47]) goto c9ruN; else goto c9rug;
       c9ruN: // global
           I64[Sp + 32] = block_c9rsZ_info;
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           if (R1 & 7 != 0) goto u9rvn; else goto c9rt0;
       u9rvn: // global
           call _c9rsZ(R1) args: 0, res: 0, upd: 0;
       c9rt0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9rug: // global
           I64[Sp] = block_c9rtX_info;
           _s9psw::P64 = R1;
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _s9psw::P64;
           if (R1 & 7 != 0) goto u9rvm; else goto c9ruh;
       u9rvm: // global
           call _c9rtX(R1) args: 0, res: 0, upd: 0;
       c9ruh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rsZ() //  [R1]
         { info_tbl: [(c9rsZ,
                       label: block_c9rsZ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rsZ: // global
           _s9ptE::P64 = P64[R1 + 7];
           _s9ptJ::I64 = I64[R1 + 47] - I64[R1 + 39];
           if (%MO_S_Gt_W64(_s9ptJ::I64, 0)) goto c9rv5; else goto c9rv6;
       c9rv5: // global
           P64[Sp - 24] = _s9ptE::P64;
           I64[Sp - 16] = _s9ptJ::I64 - 1;
           P64[Sp - 8] = GHC.Types.[]_closure+1;
           I64[Sp] = I64[R1 + 23];
           Sp = Sp - 32;
           call _c9rth() args: 0, res: 0, upd: 0;
       c9rv6: // global
           call MO_Touch(_s9ptE::P64);
           R1 = GHC.Types.[]_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9rth() //  []
         { info_tbl: [(c9rth,
                       label: block_c9rth_info
                       rep:StackRep [False, True, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rth: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9rv0; else goto c9ruZ;
       c9rv0: // global
           HpAlloc = 40;
           I64[Sp] = block_c9rth_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c9ruZ: // global
           _s9ptW::P64 = P64[Sp + 24];
           _s9ptY::I64 = I64[Sp + 16];
           if (_s9ptY::I64 != 0) goto c9rv2; else goto c9rv3;
       c9rv2: // global
           I64[Hp - 32] = GHC.Types.C#_con_info;
           I64[Hp - 24] = %MO_UU_Conv_W32_W64(I32[I64[Sp + 32] + (_s9ptY::I64 << 2)]);
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = _s9ptW::P64;
           I64[Sp + 16] = _s9ptY::I64 - 1;
           P64[Sp + 24] = Hp - 14;
           call _c9rth() args: 0, res: 0, upd: 0;
       c9rv3: // global
           Hp = Hp - 40;
           P64[Sp + 24] = _s9ptW::P64;
           Sp = Sp + 8;
           call _c9ruQ() args: 0, res: 0, upd: 0;
     }
 },
 _c9ruQ() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ruQ: // global
           Hp = Hp + 40;
           _s9ptM::P64 = P64[Sp + 16];
           if (Hp > HpLim) (likely: False) goto c9ruX; else goto c9ruW;
       c9ruX: // global
           HpAlloc = 40;
           I64[Sp - 8] = block_c9ruP_info;
           R1 = _s9ptM::P64;
           Sp = Sp - 8;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9ruW: // global
           _s9ptQ::I64 = %MO_UU_Conv_W32_W64(I32[I64[Sp + 24]]);
           call MO_Touch(P64[Sp]);
           I64[Hp - 32] = GHC.Types.C#_con_info;
           I64[Hp - 24] = _s9ptQ::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = _s9ptM::P64;
           R1 = Hp - 14;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9ruP() //  [R1]
         { info_tbl: [(c9ruP,
                       label: block_c9ruP_info
                       rep:StackRep [False, True, True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ruP: // global
           P64[Sp + 24] = R1;
           Sp = Sp + 8;
           call _c9ruQ() args: 0, res: 0, upd: 0;
     }
 },
 _c9rtX() //  [R1]
         { info_tbl: [(c9rtX,
                       label: block_c9rtX_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rtX: // global
           _s9psv::P64 = P64[Sp + 8];
           if (R1 & 7 == 2) goto c9ruH; else goto c9ruv;
       c9ruH: // global
           I64[Sp + 8] = block_c9ruF_info;
           R1 = _s9psv::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9rvt; else goto c9ruI;
       u9rvt: // global
           call _c9ruF(R1) args: 0, res: 0, upd: 0;
       c9ruI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9ruv: // global
           _s9psw::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c9rul_info;
           R3 = _s9psv::P64;
           R2 = _s9psw::P64;
           R1 = P64[Sp + 32];
           Sp = Sp + 16;
           call stg_ap_ppv_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ruF() //  [R1]
         { info_tbl: [(c9ruF,
                       label: block_c9ruF_info
                       rep:StackRep [False, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ruF: // global
           P64[Sp + 24] = P64[Sp + 8];
           I64[Sp + 8] = I64[R1 + 23];
           P64[Sp - 16] = P64[R1 + 7];
           I64[Sp - 8] = I64[R1 + 39];
           I64[Sp] = I64[R1 + 47];
           Sp = Sp - 16;
           call _s9psE() args: 0, res: 0, upd: 0;
     }
 },
 _c9rul() //  [R1]
         { info_tbl: [(c9rul,
                       label: block_c9rul_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rul: // global
           I64[Sp] = block_c9run_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u9rvu; else goto c9ruo;
       u9rvu: // global
           call _c9run(R1) args: 0, res: 0, upd: 0;
       c9ruo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9run() //  [R1]
         { info_tbl: [(c9run,
                       label: block_c9run_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9run: // global
           I64[Sp] = block_c9rus_info;
           _s9ptm::P64 = P64[R1 + 7];
           R1 = P64[R1 + 15];
           P64[Sp + 16] = _s9ptm::P64;
           if (R1 & 7 != 0) goto u9rvv; else goto c9ruy;
       u9rvv: // global
           call _c9rus(R1) args: 0, res: 0, upd: 0;
       c9ruy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rus() //  [R1]
         { info_tbl: [(c9rus,
                       label: block_c9rus_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rus: // global
           P64[Sp - 24] = P64[R1 + 7];
           I64[Sp - 16] = I64[R1 + 39];
           I64[Sp - 8] = I64[R1 + 47];
           I64[Sp] = I64[R1 + 23];
           P64[Sp + 16] = P64[Sp + 16];
           Sp = Sp - 24;
           call _s9psE() args: 0, res: 0, upd: 0;
     }
 },
 _s9psE() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       s9psE: // global
           _s9psL::I64 = I64[Sp + 16] - I64[Sp + 8];
           if (%MO_S_Gt_W64(_s9psL::I64, 0)) goto c9rua; else goto c9rub;
       c9rua: // global
           P64[Sp + 8] = GHC.Types.[]_closure+1;
           I64[Sp + 16] = _s9psL::I64 - 1;
           Sp = Sp - 8;
           call _c9rsR() args: 0, res: 0, upd: 0;
       c9rub: // global
           _s9psg::P64 = P64[Sp + 32];
           _s9psG::P64 = P64[Sp + 40];
           call MO_Touch(P64[Sp]);
           I64[Sp + 40] = block_c9rtH_info;
           R2 = _s9psG::P64;
           R1 = _s9psg::P64;
           Sp = Sp + 40;
           call $wgo_s9psg_entry(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rsR() //  []
         { info_tbl: [(c9rsR,
                       label: block_c9rsR_info
                       rep:StackRep [False, False, True, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rsR: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9ru5; else goto c9ru4;
       c9ru5: // global
           HpAlloc = 40;
           I64[Sp] = block_c9rsR_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c9ru4: // global
           _s9psH::I64 = I64[Sp + 32];
           _s9pt2::P64 = P64[Sp + 16];
           _s9pt4::I64 = I64[Sp + 24];
           if (_s9pt4::I64 != 0) goto c9ru7; else goto c9ru8;
       c9ru7: // global
           _s9pt7::I64 = %MO_UU_Conv_W32_W64(I32[_s9psH::I64 + (_s9pt4::I64 << 2)]);
           I64[Hp - 32] = GHC.Types.C#_con_info;
           I64[Hp - 24] = _s9pt7::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = _s9pt2::P64;
           I64[Sp + 24] = _s9pt4::I64 - 1;
           P64[Sp + 16] = Hp - 14;
           call _c9rsR() args: 0, res: 0, upd: 0;
       c9ru8: // global
           Hp = Hp - 40;
           _s9psg::P64 = P64[Sp + 40];
           _s9psG::P64 = P64[Sp + 48];
           _s9psS::I64 = %MO_UU_Conv_W32_W64(I32[_s9psH::I64]);
           call MO_Touch(P64[Sp + 8]);
           I64[Sp + 32] = block_c9rts_info;
           R2 = _s9psG::P64;
           R1 = _s9psg::P64;
           I64[Sp + 40] = _s9psS::I64;
           P64[Sp + 48] = _s9pt2::P64;
           Sp = Sp + 32;
           call $wgo_s9psg_entry(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rts() //  [R1]
         { info_tbl: [(c9rts,
                       label: block_c9rts_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rts: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9ru2; else goto c9ru1;
       c9ru2: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9ru1: // global
           I64[Hp - 32] = sat_s9psZ_info;
           P64[Hp - 16] = P64[Sp + 16];
           P64[Hp - 8] = R1;
           I64[Hp] = I64[Sp + 8];
           R1 = Hp - 32;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9rtH() //  [R1]
         { info_tbl: [(c9rtH,
                       label: block_c9rtH_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rtH: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9rue; else goto c9rud;
       c9rue: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rud: // global
           I64[Hp - 16] = sat_s9ptg_info;
           P64[Hp] = R1;
           R1 = Hp - 16;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9pub_entry() //  [R1, R2]
         { info_tbl: [(c9rvA,
                       label: sat_s9pub_info
                       rep:HeapRep 2 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rvA: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c9rvB; else goto c9rvC;
       c9rvB: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rvC: // global
           I64[Sp - 24] = block_c9rrE_info;
           _s9prT::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp - 16] = _s9prT::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9rvW; else goto c9rrF;
       u9rvW: // global
           call _c9rrE(R1) args: 0, res: 0, upd: 0;
       c9rrF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rrE() //  [R1]
         { info_tbl: [(c9rrE,
                       label: block_c9rrE_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rrE: // global
           I64[Sp - 8] = block_c9rrJ_info;
           _s9prX::I64 = I64[R1 + 7];
           R1 = GHC.ForeignPtr.NoFinalizers_closure+1;
           I64[Sp] = _s9prX::I64;
           Sp = Sp - 8;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rrJ() //  [R1]
         { info_tbl: [(c9rrJ,
                       label: block_c9rrJ_info
                       rep:StackRep [True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rrJ: // global
           I64[Sp] = block_c9rrL_info;
           _s9ps0::P64 = R1;
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _s9ps0::P64;
           if (R1 & 7 != 0) goto u9rvV; else goto c9rrM;
       u9rvV: // global
           call _c9rrL(R1) args: 0, res: 0, upd: 0;
       c9rrM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rrL() //  [R1]
         { info_tbl: [(c9rrL,
                       label: block_c9rrL_info
                       rep:StackRep [True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rrL: // global
           _s9ps2::I64 = I64[R1 + 7];
           if (%MO_S_Gt_W64(_s9ps2::I64, 1)) goto c9rvT; else goto c9rvU;
       c9rvT: // global
           _s9ps4::I64 = _s9ps2::I64;
           goto s9ps3;
       c9rvU: // global
           _s9ps4::I64 = 1;
           goto s9ps3;
       s9ps3: // global
           _s9ps5::I64 = _s9ps4::I64 << 2;
           if (%MO_S_Ge_W64(_s9ps5::I64, 0)) goto c9rvK; else goto c9rvP;
       c9rvK: // global
           I64[Sp - 24] = block_c9rs1_info;
           R1 = GHC.ForeignPtr.NoFinalizers_closure+1;
           I64[Sp - 16] = _s9ps4::I64;
           I64[Sp - 8] = _s9ps5::I64;
           I64[Sp] = _s9ps2::I64;
           Sp = Sp - 24;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
       c9rvP: // global
           R1 = GHC.ForeignPtr.mallocForeignPtrBytes2_closure;
           Sp = Sp + 32;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9rs1() //  [R1]
         { info_tbl: [(c9rs1,
                       label: block_c9rs1_info
                       rep:StackRep [True, True, True, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rs1: // global
           I64[Sp] = block_c9rs3_info;
           _s9ps9::P64 = R1;
           R1 = I64[Sp + 16];
           P64[Sp + 16] = _s9ps9::P64;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rs3() //  [R1]
         { info_tbl: [(c9rs3,
                       label: block_c9rs3_info
                       rep:StackRep [True, False, True, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rs3: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto c9rvO; else goto c9rvN;
       c9rvO: // global
           HpAlloc = 176;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rvN: // global
           I64[Hp - 168] = GHC.ForeignPtr.MallocPtr_con_info;
           P64[Hp - 160] = R1;
           P64[Hp - 152] = P64[Sp + 16];
           I64[Hp - 144] = GHC.IO.Buffer.Buffer_con_info;
           P64[Hp - 136] = Hp - 166;
           P64[Hp - 128] = GHC.IO.Buffer.WriteBuffer_closure+2;
           P64[Hp - 120] = R1 + 16;
           I64[Hp - 112] = I64[Sp + 8];
           I64[Hp - 104] = 0;
           I64[Hp - 96] = 0;
           I64[Hp - 88] = $wgo_s9psg_info;
           P64[Hp - 80] = P64[Sp + 48];
           P64[Hp - 72] = Hp - 143;
           I64[Hp - 64] = GHC.ForeignPtr.PlainForeignPtr_con_info;
           P64[Hp - 56] = P64[Sp + 40];
           I64[Hp - 48] = GHC.IO.Buffer.Buffer_con_info;
           P64[Hp - 40] = Hp - 63;
           P64[Hp - 32] = GHC.IO.Buffer.ReadBuffer_closure+1;
           I64[Hp - 24] = I64[Sp + 32];
           _s9ps2::I64 = I64[Sp + 24];
           I64[Hp - 16] = _s9ps2::I64;
           I64[Hp - 8] = 0;
           I64[Hp] = _s9ps2::I64;
           R2 = Hp - 47;
           R1 = Hp - 86;
           Sp = Sp + 56;
           call $wgo_s9psg_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.peekFilePathLen1_entry() //  [R2]
         { info_tbl: [(c9rvX,
                       label: System.Posix.Internals.peekFilePathLen1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rvX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rvY; else goto c9rvZ;
       c9rvY: // global
           R2 = R2;
           R1 = System.Posix.Internals.peekFilePathLen1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rvZ: // global
           I64[Sp - 16] = block_c9rrn_info;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rrn() //  [R1]
         { info_tbl: [(c9rrn,
                       label: block_c9rrn_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rrn: // global
           I64[Sp] = block_c9rrp_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u9rw5; else goto c9rrq;
       u9rw5: // global
           call _c9rrp(R1) args: 0, res: 0, upd: 0;
       c9rrq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rrp() //  [R1]
         { info_tbl: [(c9rrp,
                       label: block_c9rrp_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rrp: // global
           I64[Sp] = block_c9rru_info;
           _s9prP::P64 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s9prP::P64;
           if (R1 & 7 != 0) goto u9rw6; else goto c9rrv;
       u9rw6: // global
           call _c9rru(R1) args: 0, res: 0, upd: 0;
       c9rrv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rru() //  [R1]
         { info_tbl: [(c9rru,
                       label: block_c9rru_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rru: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9rw4; else goto c9rw3;
       c9rw4: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rw3: // global
           _s9prS::P64 = P64[R1 + 7];
           _s9prT::P64 = P64[R1 + 15];
           I64[Hp - 16] = sat_s9pub_info;
           P64[Hp - 8] = _s9prS::P64;
           P64[Hp] = _s9prT::P64;
           R4 = Hp - 14;
           R3 = GHC.IO.Encoding.Types.close_closure+1;
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.IO.bracket1_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.149290989 UTC

[section ""data" . System.Posix.Internals.peekFilePathLen_closure" {
     System.Posix.Internals.peekFilePathLen_closure:
         const System.Posix.Internals.peekFilePathLen_info;
         const 0;
 },
 System.Posix.Internals.peekFilePathLen_entry() //  [R2]
         { info_tbl: [(c9rwb,
                       label: System.Posix.Internals.peekFilePathLen_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rwb: // global
           R2 = R2;
           call System.Posix.Internals.peekFilePathLen1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.150232156 UTC

[section ""data" . System.Posix.Internals.peekFilePath1_closure" {
     System.Posix.Internals.peekFilePath1_closure:
         const System.Posix.Internals.peekFilePath1_info;
         const 0;
 },
 System.Posix.Internals.peekFilePath1_entry() //  [R2]
         { info_tbl: [(c9rwk,
                       label: System.Posix.Internals.peekFilePath1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rwk: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rwl; else goto c9rwm;
       c9rwl: // global
           R2 = R2;
           R1 = System.Posix.Internals.peekFilePath1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rwm: // global
           I64[Sp - 16] = block_c9rwi_info;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rwi() //  [R1]
         { info_tbl: [(c9rwi,
                       label: block_c9rwi_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rwi: // global
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call GHC.Foreign.peekCString1_entry(R3,
                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.151303384 UTC

[section ""data" . System.Posix.Internals.peekFilePath_closure" {
     System.Posix.Internals.peekFilePath_closure:
         const System.Posix.Internals.peekFilePath_info;
         const 0;
 },
 System.Posix.Internals.peekFilePath_entry() //  [R2]
         { info_tbl: [(c9rws,
                       label: System.Posix.Internals.peekFilePath_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rws: // global
           R2 = R2;
           call System.Posix.Internals.peekFilePath1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.152202541 UTC

[section ""data" . System.Posix.Internals.newFilePath1_closure" {
     System.Posix.Internals.newFilePath1_closure:
         const System.Posix.Internals.newFilePath1_info;
         const 0;
 },
 System.Posix.Internals.newFilePath1_entry() //  [R2]
         { info_tbl: [(c9rwB,
                       label: System.Posix.Internals.newFilePath1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rwB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rwC; else goto c9rwD;
       c9rwC: // global
           R2 = R2;
           R1 = System.Posix.Internals.newFilePath1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rwD: // global
           I64[Sp - 16] = block_c9rwz_info;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rwz() //  [R1]
         { info_tbl: [(c9rwz,
                       label: block_c9rwz_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rwz: // global
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call GHC.Foreign.newCString1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.153292279 UTC

[section ""data" . System.Posix.Internals.newFilePath_closure" {
     System.Posix.Internals.newFilePath_closure:
         const System.Posix.Internals.newFilePath_info;
         const 0;
 },
 System.Posix.Internals.newFilePath_entry() //  [R2]
         { info_tbl: [(c9rwJ,
                       label: System.Posix.Internals.newFilePath_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rwJ: // global
           R2 = R2;
           call System.Posix.Internals.newFilePath1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.154018807 UTC

[section ""cstring" . System.Posix.Internals.puts3_bytes" {
     System.Posix.Internals.puts3_bytes:
         I8[] [10]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.15475885 UTC

[section ""data" . System.Posix.Internals.puts2_closure" {
     System.Posix.Internals.puts2_closure:
         const System.Posix.Internals.puts2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.puts2_entry() //  [R1]
         { info_tbl: [(c9rwS,
                       label: System.Posix.Internals.puts2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rwS: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rwT; else goto c9rwU;
       c9rwT: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rwU: // global
           (_c9rwP::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9rwP::I64 == 0) goto c9rwR; else goto c9rwQ;
       c9rwR: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9rwQ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rwP::I64;
           R2 = System.Posix.Internals.puts3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.156460296 UTC

[section ""data" . System.Posix.Internals.puts1_closure" {
     System.Posix.Internals.puts1_closure:
         const System.Posix.Internals.puts1_info;
         const 0;
 },
 System.Posix.Internals.puts1_entry() //  [R2]
         { info_tbl: [(c9rx1,
                       label: System.Posix.Internals.puts1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rx1: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c9rx5; else goto c9rx6;
       c9rx5: // global
           R2 = R2;
           R1 = System.Posix.Internals.puts1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rx6: // global
           I64[Sp - 8] = block_c9rwZ_info;
           R3 = System.Posix.Internals.puts2_closure;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9rwZ() //  [R1]
         { info_tbl: [(c9rwZ,
                       label: block_c9rwZ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rwZ: // global
           I64[Sp - 8] = block_c9rx4_info;
           R3 = 0;
           R2 = R1;
           P64[Sp] = R1;
           Sp = Sp - 8;
           call GHC.List.$wlenAcc_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9rx4() //  [R1]
         { info_tbl: [(c9rx4,
                       label: block_c9rx4_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rx4: // global
           I64[Sp - 8] = block_c9rxb_info;
           R2 = 1;
           _s9pup::I64 = R1;
           R1 = R1;
           I64[Sp] = _s9pup::I64;
           Sp = Sp - 8;
           call stg_newAlignedPinnedByteArray#(R2,
                                               R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rxb() //  [R1]
         { info_tbl: [(c9rxb,
                       label: block_c9rxb_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rxb: // global
           P64[Sp - 16] = P64[Sp + 16];
           I64[Sp - 8] = 0;
           P64[Sp] = R1 + 16;
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call _c9rxq() args: 0, res: 0, upd: 0;
     }
 },
 _c9rxq() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rxq: // global
           _s9puG::P64 = P64[Sp];
           I64[Sp] = block_c9rxt_info;
           R1 = _s9puG::P64;
           if (R1 & 7 != 0) goto u9ry5; else goto c9rxv;
       u9ry5: // global
           call _c9rxt(R1) args: 0, res: 0, upd: 0;
       c9rxv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rxt() //  [R1]
         { info_tbl: [(c9rxt,
                       label: block_c9rxt_info
                       rep:StackRep [True, True, True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rxt: // global
           if (R1 & 7 == 1) goto c9rxB; else goto c9rxG;
       c9rxB: // global
           _s9puv::P64 = P64[Sp + 32];
           (_s9puD::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite(1, I64[Sp + 16], I64[Sp + 24]);
           call MO_Touch(_s9puv::P64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9rxG: // global
           I64[Sp - 8] = block_c9rxE_info;
           _s9puL::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9puL::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9ry6; else goto c9rxH;
       u9ry6: // global
           call _c9rxE(R1) args: 0, res: 0, upd: 0;
       c9rxH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rxE() //  [R1]
         { info_tbl: [(c9rxE,
                       label: block_c9rxE_info
                       rep:StackRep [False, True, True, True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rxE: // global
           _s9puH::I64 = I64[Sp + 16];
           _s9puL::P64 = P64[Sp + 8];
           I8[I64[Sp + 24] + _s9puH::I64] = %MO_SS_Conv_W64_W8(I64[R1 + 7]);
           P64[Sp + 8] = _s9puL::P64;
           I64[Sp + 16] = _s9puH::I64 + 1;
           Sp = Sp + 8;
           call _c9rxq() args: 0, res: 0, upd: 0;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.15870007 UTC

[section ""data" . System.Posix.Internals.puts_closure" {
     System.Posix.Internals.puts_closure:
         const System.Posix.Internals.puts_info;
         const 0;
 },
 System.Posix.Internals.puts_entry() //  [R2]
         { info_tbl: [(c9ryc,
                       label: System.Posix.Internals.puts_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ryc: // global
           R2 = R2;
           call System.Posix.Internals.puts1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.159671405 UTC

[section ""data" . System.Posix.Internals.s_issock_closure" {
     System.Posix.Internals.s_issock_closure:
         const System.Posix.Internals.s_issock_info;
 },
 System.Posix.Internals.s_issock_entry() //  [R2]
         { info_tbl: [(c9rym,
                       label: System.Posix.Internals.s_issock_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rym: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9ryn; else goto c9ryo;
       c9ryn: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_issock_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9ryo: // global
           I64[Sp - 8] = block_c9ryj_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9ryJ; else goto c9ryk;
       u9ryJ: // global
           call _c9ryj(R1) args: 0, res: 0, upd: 0;
       c9ryk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ryj() //  [R1]
         { info_tbl: [(c9ryj,
                       label: block_c9ryj_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ryj: // global
           (_s9puY::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC3ZCbaseZCSystemziPosixziInternalsZCSzuISSOCK(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9puY::I64) == 0 :: W32) goto c9ryF; else goto c9ryz;
       c9ryF: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9ryz: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.160764105 UTC

[section ""data" . System.Posix.Internals.fdFileSize5_closure" {
     System.Posix.Internals.fdFileSize5_closure:
         const GHC.Int.I32#_con_info;
         const (-1);
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.161616946 UTC

[section ""data" . System.Posix.Internals.fdFileSize_pred_closure" {
     System.Posix.Internals.fdFileSize_pred_closure:
         const System.Posix.Internals.fdFileSize_pred_info;
 },
 System.Posix.Internals.fdFileSize_pred_entry() //  [R2]
         { info_tbl: [(c9ryR,
                       label: System.Posix.Internals.fdFileSize_pred_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ryR: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9ryS; else goto c9ryT;
       c9ryS: // global
           R2 = R2;
           R1 = System.Posix.Internals.fdFileSize_pred_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9ryT: // global
           I64[Sp - 8] = block_c9ryO_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rz1; else goto c9ryP;
       u9rz1: // global
           call _c9ryO(R1) args: 0, res: 0, upd: 0;
       c9ryP: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ryO() //  [R1]
         { info_tbl: [(c9ryO,
                       label: block_c9ryO_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ryO: // global
           if (I64[R1 + 7] == (-1)) goto c9rz0; else goto c9ryZ;
       c9rz0: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9ryZ: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.162620777 UTC

[section ""cstring" . lvl_r9pfx_bytes" {
     lvl_r9pfx_bytes:
         I8[] [115,105,103,112,114,111,99,109,97,115,107]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.163347021 UTC

[section ""data" . lvl1_r9pfy_closure" {
     lvl1_r9pfy_closure:
         const lvl1_r9pfy_info;
         const 0;
         const 0;
         const 0;
 },
 lvl1_r9pfy_entry() //  [R1]
         { info_tbl: [(c9rz8,
                       label: lvl1_r9pfy_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rz8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rz9; else goto c9rza;
       c9rz9: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rza: // global
           (_c9rz5::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9rz5::I64 == 0) goto c9rz7; else goto c9rz6;
       c9rz7: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9rz6: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rz5::I64;
           R2 = lvl_r9pfx_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.164374889 UTC

[section ""data" . lvl2_r9pfz_closure" {
     lvl2_r9pfz_closure:
         const lvl2_r9pfz_info;
         const 0;
 },
 lvl2_r9pfz_entry() //  [R2]
         { info_tbl: [(c9rzh,
                       label: lvl2_r9pfz_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rzh: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl1_r9pfy_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.165137079 UTC

[section ""cstring" . lvl3_r9pfA_bytes" {
     lvl3_r9pfA_bytes:
         I8[] [116,99,83,101,116,65,116,116,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.165879993 UTC

[section ""data" . lvl4_r9pfB_closure" {
     lvl4_r9pfB_closure:
         const lvl4_r9pfB_info;
         const 0;
         const 0;
         const 0;
 },
 lvl4_r9pfB_entry() //  [R1]
         { info_tbl: [(c9rzq,
                       label: lvl4_r9pfB_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rzq: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rzr; else goto c9rzs;
       c9rzr: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rzs: // global
           (_c9rzn::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9rzn::I64 == 0) goto c9rzp; else goto c9rzo;
       c9rzp: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9rzo: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rzn::I64;
           R2 = lvl3_r9pfA_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.166759534 UTC

[section ""cstring" . lvl5_r9pfC_bytes" {
     lvl5_r9pfC_bytes:
         I8[] [115,105,103,97,100,100,115,101,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.167492093 UTC

[section ""data" . lvl6_r9pfD_closure" {
     lvl6_r9pfD_closure:
         const lvl6_r9pfD_info;
         const 0;
         const 0;
         const 0;
 },
 lvl6_r9pfD_entry() //  [R1]
         { info_tbl: [(c9rzz,
                       label: lvl6_r9pfD_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rzz: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rzA; else goto c9rzB;
       c9rzA: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rzB: // global
           (_c9rzw::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9rzw::I64 == 0) goto c9rzy; else goto c9rzx;
       c9rzy: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9rzx: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rzw::I64;
           R2 = lvl5_r9pfC_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.168551738 UTC

[section ""data" . lvl7_r9pfE_closure" {
     lvl7_r9pfE_closure:
         const lvl7_r9pfE_info;
         const 0;
 },
 lvl7_r9pfE_entry() //  [R2]
         { info_tbl: [(c9rzI,
                       label: lvl7_r9pfE_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rzI: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl6_r9pfD_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.169497554 UTC

[section ""cstring" . lvl8_r9pfF_bytes" {
     lvl8_r9pfF_bytes:
         I8[] [115,105,103,101,109,112,116,121,115,101,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.170237559 UTC

[section ""data" . lvl9_r9pfG_closure" {
     lvl9_r9pfG_closure:
         const lvl9_r9pfG_info;
         const 0;
         const 0;
         const 0;
 },
 lvl9_r9pfG_entry() //  [R1]
         { info_tbl: [(c9rzR,
                       label: lvl9_r9pfG_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rzR: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rzS; else goto c9rzT;
       c9rzS: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rzT: // global
           (_c9rzO::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9rzO::I64 == 0) goto c9rzQ; else goto c9rzP;
       c9rzQ: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9rzP: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rzO::I64;
           R2 = lvl8_r9pfF_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.171263947 UTC

[section ""data" . lvl10_r9pfH_closure" {
     lvl10_r9pfH_closure:
         const lvl10_r9pfH_info;
         const 0;
 },
 lvl10_r9pfH_entry() //  [R2]
         { info_tbl: [(c9rA0,
                       label: lvl10_r9pfH_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rA0: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl9_r9pfG_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.174295468 UTC

[section ""data" . System.Posix.Internals.getEcho3_closure" {
     System.Posix.Internals.getEcho3_closure:
         const System.Posix.Internals.getEcho3_info;
         const 0;
 },
 sat_s9pvA_entry() //  [R1]
         { info_tbl: [(c9rAs,
                       label: sat_s9pvA_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rAs: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rAy; else goto c9rAx;
       c9rAy: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9rAx: // global
           (_s9pvx::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC10ZCbaseZCSystemziPosixziInternalsZCtcgetattr(I64[R1 + 7], I64[R1 + 15]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pvx::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9pwD_entry() //  [R1]
         { info_tbl: [(c9rBB,
                       label: sat_s9pwD_info
                       rep:HeapRep 3 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rBB: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rBO; else goto c9rBN;
       c9rBO: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9rBN: // global
           (_s9pwA::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC9ZCbaseZCSystemziPosixziInternalsZCtcsetattr(I64[R1 + 7], %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[R1 + 23])), I64[R1 + 15]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pwA::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.getEcho3_entry() //  [R2, R3]
         { info_tbl: [(c9rBP,
                       label: System.Posix.Internals.getEcho3_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rBP: // global
           if ((Sp + -72) < SpLim) (likely: False) goto c9rBQ; else goto c9rBR;
       c9rBQ: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Posix.Internals.getEcho3_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9rBR: // global
           _s9pve::P64 = R3;
           (_s9pvj::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_termios();
           I64[Sp - 32] = block_c9rA8_info;
           R1 = _s9pvj::I64;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = _s9pve::P64;
           I64[Sp - 8] = _s9pvj::I64;
           Sp = Sp - 32;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rA8() //  [R1]
         { info_tbl: [(c9rA8,
                       label: block_c9rA8_info
                       rep:StackRep [False, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rA8: // global
           I64[Sp] = block_c9rAa_info;
           _s9pvp::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s9pvp::P64;
           if (R1 & 7 != 0) goto u9rDG; else goto c9rAb;
       u9rDG: // global
           call _c9rAa(R1) args: 0, res: 0, upd: 0;
       c9rAb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rAa() //  [R1]
         { info_tbl: [(c9rAa,
                       label: block_c9rAa_info
                       rep:StackRep [False, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rAa: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9rBV; else goto c9rBU;
       c9rBV: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rBU: // global
           _s9pvr::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9pvA_info;
           I64[Hp - 8] = _s9pvr::I64;
           _s9pvs::I64 = P64[Sp + 8] + 16;
           I64[Hp] = _s9pvs::I64;
           I64[Sp - 16] = block_c9rAz_info;
           R4 = Hp - 15;
           R3 = lvl4_r9pfB_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           I64[Sp - 8] = _s9pvs::I64;
           I64[Sp] = _s9pvr::I64;
           Sp = Sp - 16;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9rAz() //  []
         { info_tbl: [(c9rAz,
                       label: block_c9rAz_info
                       rep:StackRep [True, True, False, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rAz: // global
           _s9pvr::I64 = I64[Sp + 16];
           if (%MO_S_Gt_W64(_s9pvr::I64, 2)) goto s9pvE; else goto c9rDl;
       c9rDl: // global
           _s9pvj::I64 = I64[Sp + 40];
           _s9pvs::I64 = I64[Sp + 8];
           (_s9pxi::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [PtrHint] __hscore_get_saved_termios(_s9pvr::I64);
           if (_s9pxi::I64 != 0) goto s9pvE; else goto c9rDk;
       c9rDk: // global
           (_s9pxo::I64) = call "ccall" arg hints:  []  result hints:  [PtrHint] malloc(_s9pvj::I64);
           if (_s9pxo::I64 == 0) goto c9rDj; else goto c9rDi;
       c9rDj: // global
           R1 = Foreign.Marshal.Alloc.malloc1_closure;
           Sp = Sp + 48;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
       c9rDi: // global
           (_s9pxu::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint,]  result hints:  [PtrHint] memcpy(_s9pxo::I64, _s9pvs::I64, _s9pvj::I64);
           call "ccall" arg hints:  [‘signed’,
                                     PtrHint]  result hints:  [] __hscore_set_saved_termios(_s9pvr::I64, _s9pxo::I64);
           goto s9pvE;
       s9pvE: // global
           (_s9pvJ::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_sigset_t();
           I64[Sp] = block_c9rAH_info;
           R1 = _s9pvJ::I64;
           I64[Sp + 40] = _s9pvJ::I64;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rAH() //  [R1]
         { info_tbl: [(c9rAH,
                       label: block_c9rAH_info
                       rep:StackRep [True, True, False, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rAH: // global
           I64[Sp] = block_c9rAJ_info;
           _s9pvP::P64 = R1;
           R1 = I64[Sp + 40];
           P64[Sp + 40] = _s9pvP::P64;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rAJ() //  [R1]
         { info_tbl: [(c9rAJ,
                       label: block_c9rAJ_info
                       rep:StackRep [True, True, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rAJ: // global
           _s9pvW::I64 = P64[Sp + 40] + 16;
           (_s9pw0::I64) = call "capi" arg hints:  [PtrHint]  result hints:  [‘signed’] ghczuwrapperZC13ZCbaseZCSystemziPosixziInternalsZCsigemptyset(_s9pvW::I64);
           if (%MO_SS_Conv_W64_W32(_s9pw0::I64) == (-1) :: W32) goto c9rCS; else goto c9rC1;
       c9rCS: // global
           (_s9pxc::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _s9pxc::I64;
           Sp = Sp + 48;
           call lvl10_r9pfH_entry(R2) args: 8, res: 0, upd: 8;
       c9rC1: // global
           (_s9pw5::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sigttou();
           (_s9pwa::I64) = call "capi" arg hints:  [PtrHint,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC12ZCbaseZCSystemziPosixziInternalsZCsigaddset(_s9pvW::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pw5::I64)));
           if (%MO_SS_Conv_W64_W32(_s9pwa::I64) == (-1) :: W32) goto c9rCM; else goto c9rC4;
       c9rCM: // global
           (_s9px7::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _s9px7::I64;
           Sp = Sp + 48;
           call lvl7_r9pfE_entry(R2) args: 8, res: 0, upd: 8;
       c9rC4: // global
           (_s9pwf::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sig_block();
           _s9pwg::I64 = R1 + 16;
           (_s9pwl::I64) = call "capi" arg hints:  [‘signed’, PtrHint,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC11ZCbaseZCSystemziPosixziInternalsZCsigprocmask(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pwf::I64)), _s9pvW::I64, _s9pwg::I64);
           _s9pwm::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pwl::I64));
           if (_s9pwm::I64 == (-1)) goto c9rCG; else goto u9rDE;
       c9rCG: // global
           (_s9px2::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _s9px2::I64;
           Sp = Sp + 48;
           call lvl2_r9pfz_entry(R2) args: 8, res: 0, upd: 8;
       u9rDE: // global
           I64[Sp - 16] = _s9pwg::I64;
           I64[Sp - 8] = _s9pwm::I64;
           P64[Sp] = R1;
           Sp = Sp - 16;
           call _c9rBo() args: 0, res: 0, upd: 0;
     }
 },
 _c9rBo() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rBo: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rCb; else goto c9rCa;
       c9rCb: // global
           HpAlloc = 16;
           I64[Sp - 8] = block_c9rBn_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9rCa: // global
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = I64[Sp + 24];
           I64[Sp - 8] = block_c9rBr_info;
           R2 = Hp - 7;
           R1 = P64[Sp + 48];
           Sp = Sp - 8;
           call stg_ap_pv_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rBn() //  [R1]
         { info_tbl: [(c9rBn,
                       label: block_c9rBn_info
                       rep:StackRep [True, True, False, True, True, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rBn: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _c9rBo() args: 0, res: 0, upd: 0;
     }
 },
 _c9rBr() //  [R1]
         { info_tbl: [(c9rBr,
                       label: block_c9rBr_info
                       rep:StackRep [True, True, False, True, True, False, True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rBr: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9rCe; else goto c9rCd;
       c9rCe: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rCd: // global
           _s9pvr::I64 = I64[Sp + 40];
           _s9pvs::I64 = I64[Sp + 32];
           (_s9pwu::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_tcsanow();
           I64[Hp - 24] = sat_s9pwD_info;
           I64[Hp - 16] = _s9pvr::I64;
           I64[Hp - 8] = _s9pvs::I64;
           I64[Hp] = _s9pwu::I64;
           I64[Sp] = block_c9rC6_info;
           R4 = Hp - 23;
           R3 = lvl4_r9pfB_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           P64[Sp + 56] = R1;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9rC6() //  []
         { info_tbl: [(c9rC6,
                       label: block_c9rC6_info
                       rep:StackRep [True, True, False, True, True, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rC6: // global
           _s9pvp::P64 = P64[Sp + 48];
           _s9pvP::P64 = P64[Sp + 64];
           _s9pvV::P64 = P64[Sp + 24];
           _s9pwg::I64 = I64[Sp + 8];
           _s9pwq::P64 = P64[Sp + 56];
           (_s9pwK::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sig_setmask();
           (_s9pwP::I64) = call "capi" arg hints:  [‘signed’, PtrHint,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC11ZCbaseZCSystemziPosixziInternalsZCsigprocmask(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pwK::I64)), _s9pwg::I64, 0);
           if (%MO_SS_Conv_W64_W32(_s9pwP::I64) == (-1) :: W32) goto c9rCA; else goto c9rCu;
       c9rCA: // global
           (_s9pwX::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _s9pwX::I64;
           Sp = Sp + 72;
           call lvl2_r9pfz_entry(R2) args: 8, res: 0, upd: 8;
       c9rCu: // global
           call MO_Touch(_s9pvV::P64);
           call MO_Touch(_s9pvP::P64);
           call MO_Touch(_s9pvp::P64);
           R1 = _s9pwq::P64;
           Sp = Sp + 72;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.179000536 UTC

[section ""data" . System.Posix.Internals.tcSetAttr_closure" {
     System.Posix.Internals.tcSetAttr_closure:
         const System.Posix.Internals.tcSetAttr_info;
         const 0;
 },
 System.Posix.Internals.tcSetAttr_entry() //  [R2, R3]
         { info_tbl: [(c9rDN,
                       label: System.Posix.Internals.tcSetAttr_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rDN: // global
           R3 = R3;
           R2 = R2;
           call System.Posix.Internals.getEcho3_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.180668431 UTC

[section ""data" . System.Posix.Internals.setCooked1_closure" {
     System.Posix.Internals.setCooked1_closure:
         const System.Posix.Internals.setCooked1_info;
         const 0;
 },
 sat_s9pys_entry() //  [R1, R2]
         { info_tbl: [(c9rE2,
                       label: sat_s9pys_info
                       rep:HeapRep 1 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rE2: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9rE3; else goto c9rE4;
       c9rE3: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rE4: // global
           I64[Sp - 16] = block_c9rDZ_info;
           _s9pxA::P64 = P64[R1 + 6];
           R1 = R2;
           P64[Sp - 8] = _s9pxA::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9rFt; else goto c9rE0;
       u9rFt: // global
           call _c9rDZ(R1) args: 0, res: 0, upd: 0;
       c9rE0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rDZ() //  [R1]
         { info_tbl: [(c9rDZ,
                       label: block_c9rDZ_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rDZ: // global
           _s9pxA::P64 = P64[Sp + 8];
           _s9pxF::I64 = I64[R1 + 7];
           (_s9pxJ::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_lflag(_s9pxF::I64);
           I64[Sp - 16] = block_c9rEb_info;
           R1 = _s9pxA::P64;
           I64[Sp - 8] = _s9pxJ::I64;
           I64[Sp] = _s9pxF::I64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9rFs; else goto c9rEw;
       u9rFs: // global
           call _c9rEb(R1) args: 0, res: 0, upd: 0;
       c9rEw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rEb() //  [R1]
         { info_tbl: [(c9rEb,
                       label: block_c9rEb_info
                       rep:StackRep [True, True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rEb: // global
           _s9pxA::P64 = P64[Sp + 24];
           _s9pxF::I64 = I64[Sp + 16];
           _s9pxJ::I64 = I64[Sp + 8];
           if (R1 & 7 == 1) goto c9rEC; else goto c9rEG;
       c9rEC: // global
           (_s9pyc::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_icanon();
           _s9pxL::I64 = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pxJ::I64)) & %MO_UU_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pyc::I64)) ^ 4294967295;
           goto s9pxK;
       c9rEG: // global
           (_s9pym::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_icanon();
           _s9pxL::I64 = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pxJ::I64)) | %MO_UU_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pym::I64));
           goto s9pxK;
       s9pxK: // global
           call "ccall" arg hints:  [PtrHint,]  result hints:  [] __hscore_poke_lflag(_s9pxF::I64, _s9pxL::I64);
           I64[Sp + 8] = block_c9rEj_info;
           R1 = _s9pxA::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9rFu; else goto c9rEl;
       u9rFu: // global
           call _c9rEj(R1) args: 0, res: 0, upd: 0;
       c9rEl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rEj() //  [R1]
         { info_tbl: [(c9rEj,
                       label: block_c9rEj_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rEj: // global
           if (R1 & 7 == 1) goto c9rEr; else goto c9rEv;
       c9rEr: // global
           (_s9pxT::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] __hscore_ptr_c_cc(I64[Sp + 8]);
           (_s9pxX::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_vmin();
           I8[_s9pxT::I64 + %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pxX::I64))] = 1 :: W8;
           (_s9py4::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_vtime();
           I8[_s9pxT::I64 + %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9py4::I64))] = 0 :: W8;
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9rEv: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.setCooked1_entry() //  [R2, R3]
         { info_tbl: [(c9rFv,
                       label: System.Posix.Internals.setCooked1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rFv: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rFz; else goto c9rFy;
       c9rFz: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = System.Posix.Internals.setCooked1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9rFy: // global
           I64[Hp - 8] = sat_s9pys_info;
           P64[Hp] = R3;
           R3 = Hp - 6;
           R2 = R2;
           call System.Posix.Internals.getEcho3_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.185135179 UTC

[section ""data" . System.Posix.Internals.setCooked_closure" {
     System.Posix.Internals.setCooked_closure:
         const System.Posix.Internals.setCooked_info;
         const 0;
 },
 System.Posix.Internals.setCooked_entry() //  [R2, R3]
         { info_tbl: [(c9rFE,
                       label: System.Posix.Internals.setCooked_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rFE: // global
           R3 = R3;
           R2 = R2;
           call System.Posix.Internals.setCooked1_entry(R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.186377007 UTC

[section ""data" . System.Posix.Internals.getEcho2_closure" {
     System.Posix.Internals.getEcho2_closure:
         const System.Posix.Internals.getEcho2_info;
 },
 sat_s9pyK_entry() //  [R1]
         { info_tbl: [(c9rFZ,
                       label: sat_s9pyK_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rFZ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rG0; else goto c9rGq;
       c9rG0: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rGq: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9pyA::I64 = I64[R1 + 16];
           (_s9pyE::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_echo();
           if (%MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pyA::I64)) & %MO_UU_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pyE::I64)) == 0) goto c9rGm; else goto c9rGg;
       c9rGm: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9rGg: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 System.Posix.Internals.getEcho2_entry() //  [R2]
         { info_tbl: [(c9rGr,
                       label: System.Posix.Internals.getEcho2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rGr: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9rGs; else goto c9rGt;
       c9rGs: // global
           R2 = R2;
           R1 = System.Posix.Internals.getEcho2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rGt: // global
           I64[Sp - 8] = block_c9rFL_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rGx; else goto c9rFM;
       u9rGx: // global
           call _c9rFL(R1) args: 0, res: 0, upd: 0;
       c9rFM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rFL() //  [R1]
         { info_tbl: [(c9rFL,
                       label: block_c9rFL_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rFL: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9rGw; else goto c9rGv;
       c9rGw: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rGv: // global
           (_s9pyA::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_lflag(I64[R1 + 7]);
           I64[Hp - 16] = sat_s9pyK_info;
           I64[Hp] = _s9pyA::I64;
           R1 = Hp - 16;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.187967656 UTC

[section ""data" . System.Posix.Internals.getEcho1_closure" {
     System.Posix.Internals.getEcho1_closure:
         const System.Posix.Internals.getEcho1_info;
         const 0;
 },
 System.Posix.Internals.getEcho1_entry() //  [R2]
         { info_tbl: [(c9rGC,
                       label: System.Posix.Internals.getEcho1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rGC: // global
           R3 = System.Posix.Internals.getEcho2_closure+2;
           R2 = R2;
           call System.Posix.Internals.getEcho3_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.188768946 UTC

[section ""data" . System.Posix.Internals.getEcho_closure" {
     System.Posix.Internals.getEcho_closure:
         const System.Posix.Internals.getEcho_info;
         const 0;
 },
 System.Posix.Internals.getEcho_entry() //  [R2]
         { info_tbl: [(c9rGJ,
                       label: System.Posix.Internals.getEcho_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rGJ: // global
           R2 = R2;
           call System.Posix.Internals.getEcho1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.190207209 UTC

[section ""data" . System.Posix.Internals.setEcho1_closure" {
     System.Posix.Internals.setEcho1_closure:
         const System.Posix.Internals.setEcho1_info;
         const 0;
 },
 sat_s9pzo_entry() //  [R1, R2]
         { info_tbl: [(c9rGY,
                       label: sat_s9pzo_info
                       rep:HeapRep 1 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rGY: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9rGZ; else goto c9rH0;
       c9rGZ: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rH0: // global
           I64[Sp - 16] = block_c9rGV_info;
           _s9pyO::P64 = P64[R1 + 6];
           R1 = R2;
           P64[Sp - 8] = _s9pyO::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9rHZ; else goto c9rGW;
       u9rHZ: // global
           call _c9rGV(R1) args: 0, res: 0, upd: 0;
       c9rGW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rGV() //  [R1]
         { info_tbl: [(c9rGV,
                       label: block_c9rGV_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rGV: // global
           _s9pyO::P64 = P64[Sp + 8];
           _s9pyT::I64 = I64[R1 + 7];
           (_s9pyX::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_lflag(_s9pyT::I64);
           I64[Sp - 8] = block_c9rH5_info;
           R1 = _s9pyO::P64;
           I64[Sp] = _s9pyX::I64;
           I64[Sp + 8] = _s9pyT::I64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rHY; else goto c9rH7;
       u9rHY: // global
           call _c9rH5(R1) args: 0, res: 0, upd: 0;
       c9rH7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rH5() //  [R1]
         { info_tbl: [(c9rH5,
                       label: block_c9rH5_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rH5: // global
           _s9pyT::I64 = I64[Sp + 16];
           _s9pyX::I64 = I64[Sp + 8];
           if (R1 & 7 == 1) goto c9rHd; else goto c9rHh;
       c9rHd: // global
           (_s9pz2::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_echo();
           call "ccall" arg hints:  [PtrHint,]  result hints:  [] __hscore_poke_lflag(_s9pyT::I64, %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pyX::I64)) & %MO_UU_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pz2::I64)) ^ 4294967295);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9rHh: // global
           (_s9pzf::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_echo();
           call "ccall" arg hints:  [PtrHint,]  result hints:  [] __hscore_poke_lflag(_s9pyT::I64, %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pyX::I64)) | %MO_UU_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pzf::I64)));
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.setEcho1_entry() //  [R2, R3]
         { info_tbl: [(c9rI0,
                       label: System.Posix.Internals.setEcho1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rI0: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rI4; else goto c9rI3;
       c9rI4: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = System.Posix.Internals.setEcho1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9rI3: // global
           I64[Hp - 8] = sat_s9pzo_info;
           P64[Hp] = R3;
           R3 = Hp - 6;
           R2 = R2;
           call System.Posix.Internals.getEcho3_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.192095793 UTC

[section ""data" . System.Posix.Internals.setEcho_closure" {
     System.Posix.Internals.setEcho_closure:
         const System.Posix.Internals.setEcho_info;
         const 0;
 },
 System.Posix.Internals.setEcho_entry() //  [R2, R3]
         { info_tbl: [(c9rI9,
                       label: System.Posix.Internals.setEcho_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rI9: // global
           R3 = R3;
           R2 = R2;
           call System.Posix.Internals.setEcho1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.193092381 UTC

[section ""data" . System.Posix.Internals.s_isfifo_closure" {
     System.Posix.Internals.s_isfifo_closure:
         const System.Posix.Internals.s_isfifo_info;
 },
 System.Posix.Internals.s_isfifo_entry() //  [R2]
         { info_tbl: [(c9rIj,
                       label: System.Posix.Internals.s_isfifo_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rIj: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9rIk; else goto c9rIl;
       c9rIk: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_isfifo_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rIl: // global
           I64[Sp - 8] = block_c9rIg_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rIG; else goto c9rIh;
       u9rIG: // global
           call _c9rIg(R1) args: 0, res: 0, upd: 0;
       c9rIh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rIg() //  [R1]
         { info_tbl: [(c9rIg,
                       label: block_c9rIg_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rIg: // global
           (_s9pzv::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC4ZCbaseZCSystemziPosixziInternalsZCSzuISFIFO(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9pzv::I64) == 0 :: W32) goto c9rIC; else goto c9rIw;
       c9rIC: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9rIw: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.194660265 UTC

[section ""data" . System.Posix.Internals.s_isdir_closure" {
     System.Posix.Internals.s_isdir_closure:
         const System.Posix.Internals.s_isdir_info;
 },
 System.Posix.Internals.s_isdir_entry() //  [R2]
         { info_tbl: [(c9rIO,
                       label: System.Posix.Internals.s_isdir_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rIO: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9rIP; else goto c9rIQ;
       c9rIP: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_isdir_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rIQ: // global
           I64[Sp - 8] = block_c9rIL_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rJb; else goto c9rIM;
       u9rJb: // global
           call _c9rIL(R1) args: 0, res: 0, upd: 0;
       c9rIM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rIL() //  [R1]
         { info_tbl: [(c9rIL,
                       label: block_c9rIL_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rIL: // global
           (_s9pzD::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC5ZCbaseZCSystemziPosixziInternalsZCSzuISDIR(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9pzD::I64) == 0 :: W32) goto c9rJ7; else goto c9rJ1;
       c9rJ7: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9rJ1: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.195989781 UTC

[section ""data" . System.Posix.Internals.s_isblk_closure" {
     System.Posix.Internals.s_isblk_closure:
         const System.Posix.Internals.s_isblk_info;
 },
 System.Posix.Internals.s_isblk_entry() //  [R2]
         { info_tbl: [(c9rJj,
                       label: System.Posix.Internals.s_isblk_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rJj: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9rJk; else goto c9rJl;
       c9rJk: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_isblk_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rJl: // global
           I64[Sp - 8] = block_c9rJg_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rJG; else goto c9rJh;
       u9rJG: // global
           call _c9rJg(R1) args: 0, res: 0, upd: 0;
       c9rJh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rJg() //  [R1]
         { info_tbl: [(c9rJg,
                       label: block_c9rJg_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rJg: // global
           (_s9pzL::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC6ZCbaseZCSystemziPosixziInternalsZCSzuISBLK(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9pzL::I64) == 0 :: W32) goto c9rJC; else goto c9rJw;
       c9rJC: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9rJw: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.197346387 UTC

[section ""data" . System.Posix.Internals.s_ischr_closure" {
     System.Posix.Internals.s_ischr_closure:
         const System.Posix.Internals.s_ischr_info;
 },
 System.Posix.Internals.s_ischr_entry() //  [R2]
         { info_tbl: [(c9rJO,
                       label: System.Posix.Internals.s_ischr_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rJO: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9rJP; else goto c9rJQ;
       c9rJP: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_ischr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rJQ: // global
           I64[Sp - 8] = block_c9rJL_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rKb; else goto c9rJM;
       u9rKb: // global
           call _c9rJL(R1) args: 0, res: 0, upd: 0;
       c9rJM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rJL() //  [R1]
         { info_tbl: [(c9rJL,
                       label: block_c9rJL_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rJL: // global
           (_s9pzT::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC7ZCbaseZCSystemziPosixziInternalsZCSzuISCHR(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9pzT::I64) == 0 :: W32) goto c9rK7; else goto c9rK1;
       c9rK7: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9rK1: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.198682617 UTC

[section ""data" . System.Posix.Internals.s_isreg_closure" {
     System.Posix.Internals.s_isreg_closure:
         const System.Posix.Internals.s_isreg_info;
 },
 System.Posix.Internals.s_isreg_entry() //  [R2]
         { info_tbl: [(c9rKj,
                       label: System.Posix.Internals.s_isreg_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rKj: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9rKk; else goto c9rKl;
       c9rKk: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_isreg_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rKl: // global
           I64[Sp - 8] = block_c9rKg_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rKG; else goto c9rKh;
       u9rKG: // global
           call _c9rKg(R1) args: 0, res: 0, upd: 0;
       c9rKh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rKg() //  [R1]
         { info_tbl: [(c9rKg,
                       label: block_c9rKg_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rKg: // global
           (_s9pA1::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9pA1::I64) == 0 :: W32) goto c9rKC; else goto c9rKw;
       c9rKC: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9rKw: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.199878804 UTC

[section ""data" . System.Posix.Internals.fdStat2_closure" {
     System.Posix.Internals.fdStat2_closure:
         const System.Posix.Internals.fdStat2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.fdStat2_entry() //  [R1]
         { info_tbl: [(c9rKN,
                       label: System.Posix.Internals.fdStat2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rKN: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rKO; else goto c9rKP;
       c9rKO: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rKP: // global
           (_c9rKK::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9rKK::I64 == 0) goto c9rKM; else goto c9rKL;
       c9rKM: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9rKL: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rKK::I64;
           R2 = System.Posix.Internals.ioe_unknownfiletype_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.201308909 UTC

[section ""data" . System.Posix.Internals.$wstatGetType_closure" {
     System.Posix.Internals.$wstatGetType_closure:
         const System.Posix.Internals.$wstatGetType_info;
         const 0;
 },
 System.Posix.Internals.$wstatGetType_entry() //  [R2]
         { info_tbl: [(c9rKY,
                       label: System.Posix.Internals.$wstatGetType_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rKY: // global
           (_s9pA8::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_mode(R2);
           _s9pA9::I64 = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pA8::I64));
           (_s9pAd::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC5ZCbaseZCSystemziPosixziInternalsZCSzuISDIR(_s9pA9::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAd::I64) == 0 :: W32) goto c9rLf; else goto c9rL9;
       c9rLf: // global
           (_s9pAi::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC4ZCbaseZCSystemziPosixziInternalsZCSzuISFIFO(_s9pA9::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAi::I64) != 0 :: W32) goto c9rLY; else goto c9rLw;
       c9rLw: // global
           (_s9pAn::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC3ZCbaseZCSystemziPosixziInternalsZCSzuISSOCK(_s9pA9::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAn::I64) != 0 :: W32) goto c9rLY; else goto c9rLN;
       c9rLN: // global
           (_s9pAs::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC7ZCbaseZCSystemziPosixziInternalsZCSzuISCHR(_s9pA9::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAs::I64) != 0 :: W32) goto c9rLY; else goto c9rM4;
       c9rLY: // global
           R1 = GHC.IO.Device.Stream_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9rM4: // global
           (_s9pAx::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG(_s9pA9::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAx::I64) == 0 :: W32) goto c9rMl; else goto c9rMf;
       c9rMl: // global
           (_s9pAC::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC6ZCbaseZCSystemziPosixziInternalsZCSzuISBLK(_s9pA9::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAC::I64) == 0 :: W32) goto c9rMC; else goto c9rMw;
       c9rMC: // global
           R1 = System.Posix.Internals.fdStat2_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
       c9rMw: // global
           R1 = GHC.IO.Device.RawDevice_closure+4;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9rMf: // global
           R1 = GHC.IO.Device.RegularFile_closure+3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9rL9: // global
           R1 = GHC.IO.Device.Directory_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.202775958 UTC

[section ""data" . System.Posix.Internals.statGetType1_closure" {
     System.Posix.Internals.statGetType1_closure:
         const System.Posix.Internals.statGetType1_info;
         const 0;
 },
 System.Posix.Internals.statGetType1_entry() //  [R2]
         { info_tbl: [(c9rMN,
                       label: System.Posix.Internals.statGetType1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rMN: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9rMO; else goto c9rMP;
       c9rMO: // global
           R2 = R2;
           R1 = System.Posix.Internals.statGetType1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rMP: // global
           I64[Sp - 8] = block_c9rMK_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rMT; else goto c9rML;
       u9rMT: // global
           call _c9rMK(R1) args: 0, res: 0, upd: 0;
       c9rML: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rMK() //  [R1]
         { info_tbl: [(c9rMK,
                       label: block_c9rMK_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rMK: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call System.Posix.Internals.$wstatGetType_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.203855157 UTC

[section ""data" . System.Posix.Internals.statGetType_closure" {
     System.Posix.Internals.statGetType_closure:
         const System.Posix.Internals.statGetType_info;
         const 0;
 },
 System.Posix.Internals.statGetType_entry() //  [R2]
         { info_tbl: [(c9rMY,
                       label: System.Posix.Internals.statGetType_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rMY: // global
           R2 = R2;
           call System.Posix.Internals.statGetType1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.204546409 UTC

[section ""cstring" . lvl11_r9pfI_bytes" {
     lvl11_r9pfI_bytes:
         I8[] [115,101,116,67,108,111,115,101,79,110,69,120,101,99]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.205443591 UTC

[section ""data" . lvl12_r9pfJ_closure" {
     lvl12_r9pfJ_closure:
         const lvl12_r9pfJ_info;
         const 0;
         const 0;
         const 0;
 },
 lvl12_r9pfJ_entry() //  [R1]
         { info_tbl: [(c9rN7,
                       label: lvl12_r9pfJ_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rN7: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rN8; else goto c9rN9;
       c9rN8: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rN9: // global
           (_c9rN4::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9rN4::I64 == 0) goto c9rN6; else goto c9rN5;
       c9rN6: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9rN5: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rN4::I64;
           R2 = lvl11_r9pfI_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.206471649 UTC

[section ""data" . System.Posix.Internals.setCloseOnExec2_closure" {
     System.Posix.Internals.setCloseOnExec2_closure:
         const System.Posix.Internals.setCloseOnExec2_info;
         const 0;
 },
 System.Posix.Internals.setCloseOnExec2_entry() //  [R2]
         { info_tbl: [(c9rNg,
                       label: System.Posix.Internals.setCloseOnExec2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rNg: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl12_r9pfJ_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.207483404 UTC

[section ""data" . System.Posix.Internals.$wsetCloseOnExec_closure" {
     System.Posix.Internals.$wsetCloseOnExec_closure:
         const System.Posix.Internals.$wsetCloseOnExec_info;
         const 0;
 },
 System.Posix.Internals.$wsetCloseOnExec_entry() //  [R2]
         { info_tbl: [(c9rNr,
                       label: System.Posix.Internals.$wsetCloseOnExec_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rNr: // global
           (_s9pAQ::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfd();
           (_s9pAU::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_fd_cloexec();
           (_s9pAZ::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(R2, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pAQ::I64)), _s9pAU::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAZ::I64) == (-1) :: W32) goto c9rNK; else goto c9rNE;
       c9rNK: // global
           (_s9pB4::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _s9pB4::I64;
           call System.Posix.Internals.setCloseOnExec2_entry(R2) args: 8, res: 0, upd: 8;
       c9rNE: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.208612244 UTC

[section ""data" . System.Posix.Internals.setCloseOnExec1_closure" {
     System.Posix.Internals.setCloseOnExec1_closure:
         const System.Posix.Internals.setCloseOnExec1_info;
         const 0;
 },
 System.Posix.Internals.setCloseOnExec1_entry() //  [R2]
         { info_tbl: [(c9rNW,
                       label: System.Posix.Internals.setCloseOnExec1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rNW: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9rNX; else goto c9rNY;
       c9rNX: // global
           R2 = R2;
           R1 = System.Posix.Internals.setCloseOnExec1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rNY: // global
           I64[Sp - 8] = block_c9rNT_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rO2; else goto c9rNU;
       u9rO2: // global
           call _c9rNT(R1) args: 0, res: 0, upd: 0;
       c9rNU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rNT() //  [R1]
         { info_tbl: [(c9rNT,
                       label: block_c9rNT_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rNT: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call System.Posix.Internals.$wsetCloseOnExec_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.209704613 UTC

[section ""data" . System.Posix.Internals.setCloseOnExec_closure" {
     System.Posix.Internals.setCloseOnExec_closure:
         const System.Posix.Internals.setCloseOnExec_info;
         const 0;
 },
 System.Posix.Internals.setCloseOnExec_entry() //  [R2]
         { info_tbl: [(c9rO7,
                       label: System.Posix.Internals.setCloseOnExec_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rO7: // global
           R2 = R2;
           call System.Posix.Internals.setCloseOnExec1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.210640432 UTC

[section ""data" . System.Posix.Internals.setNonBlockingFD2_closure" {
     System.Posix.Internals.setNonBlockingFD2_closure:
         const System.Posix.Internals.setNonBlockingFD2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.setNonBlockingFD2_entry() //  [R1]
         { info_tbl: [(c9rOj,
                       label: System.Posix.Internals.setNonBlockingFD2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rOj: // global
           _r9pee::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9rOv; else goto c9rOw;
       c9rOw: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rOy; else goto c9rOx;
       c9rOy: // global
           HpAlloc = 16;
           goto c9rOv;
       c9rOv: // global
           R1 = _r9pee::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rOx: // global
           (_c9rOd::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pee::P64);
           if (_c9rOd::I64 == 0) goto c9rOf; else goto c9rOe;
       c9rOf: // global
           call (I64[I64[_r9pee::P64]])() args: 8, res: 0, upd: 8;
       c9rOe: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rOd::I64;
           (_s9pBd::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_nonblock();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = ~%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pBd::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.211629322 UTC

[section ""cstring" . System.Posix.Internals.setNonBlockingFD4_bytes" {
     System.Posix.Internals.setNonBlockingFD4_bytes:
         I8[] [115,101,116,78,111,110,66,108,111,99,107,105,110,103,70,68]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.212373406 UTC

[section ""data" . System.Posix.Internals.setNonBlockingFD3_closure" {
     System.Posix.Internals.setNonBlockingFD3_closure:
         const System.Posix.Internals.setNonBlockingFD3_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.setNonBlockingFD3_entry() //  [R1]
         { info_tbl: [(c9rOF,
                       label: System.Posix.Internals.setNonBlockingFD3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rOF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rOG; else goto c9rOH;
       c9rOG: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rOH: // global
           (_c9rOC::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9rOC::I64 == 0) goto c9rOE; else goto c9rOD;
       c9rOE: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9rOD: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rOC::I64;
           R2 = System.Posix.Internals.setNonBlockingFD4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.214411598 UTC

[section ""data" . System.Posix.Internals.$wsetNonBlockingFD_closure" {
     System.Posix.Internals.$wsetNonBlockingFD_closure:
         const System.Posix.Internals.$wsetNonBlockingFD_info;
         const 0;
 },
 sat_s9pBx_entry() //  [R1]
         { info_tbl: [(c9rOU,
                       label: sat_s9pBx_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rOU: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rP6; else goto c9rP5;
       c9rP6: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9rP5: // global
           (_s9pBu::I64) = call "capi" arg hints:  [‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC17ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[R1 + 7], %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[R1 + 15])));
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pBu::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.$wsetNonBlockingFD_entry() //  [R2, R3]
         { info_tbl: [(c9rPc,
                       label: System.Posix.Internals.$wsetNonBlockingFD_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rPc: // global
           _s9pBj::P64 = R3;
           _s9pBi::I64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto c9rPd; else goto c9rPe;
       c9rPe: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9rPg; else goto c9rPf;
       c9rPg: // global
           HpAlloc = 24;
           goto c9rPd;
       c9rPd: // global
           R3 = _s9pBj::P64;
           R2 = _s9pBi::I64;
           R1 = System.Posix.Internals.$wsetNonBlockingFD_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9rPf: // global
           (_s9pBo::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_getfl();
           I64[Hp - 16] = sat_s9pBx_info;
           I64[Hp - 8] = _s9pBi::I64;
           I64[Hp] = _s9pBo::I64;
           I64[Sp - 24] = block_c9rP7_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.setNonBlockingFD3_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           I64[Sp - 16] = _s9pBi::I64;
           P64[Sp - 8] = _s9pBj::P64;
           Sp = Sp - 24;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9rP7() //  [R1]
         { info_tbl: [(c9rP7,
                       label: block_c9rP7_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rP7: // global
           I64[Sp] = block_c9rP9_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u9rQC; else goto c9rPa;
       u9rQC: // global
           call _c9rP9(R1) args: 0, res: 0, upd: 0;
       c9rPa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rP9() //  [R1]
         { info_tbl: [(c9rP9,
                       label: block_c9rP9_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rP9: // global
           I64[Sp] = block_c9rPk_info;
           _s9pBC::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pBC::I64;
           if (R1 & 7 != 0) goto u9rQD; else goto c9rPm;
       u9rQD: // global
           call _c9rPk(R1) args: 0, res: 0, upd: 0;
       c9rPm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rPk() //  [R1]
         { info_tbl: [(c9rPk,
                       label: block_c9rPk_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rPk: // global
           if (R1 & 7 == 1) goto c9rPt; else goto c9rQe;
       c9rPt: // global
           I64[Sp] = block_c9rPq_info;
           R1 = System.Posix.Internals.setNonBlockingFD2_closure;
           if (R1 & 7 != 0) goto u9rQE; else goto c9rPu;
       u9rQE: // global
           call _c9rPq(R1) args: 0, res: 0, upd: 0;
       c9rPu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9rQe: // global
           _s9pBi::I64 = I64[Sp + 8];
           _s9pBC::I64 = I64[Sp + 16];
           (_s9pBX::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_nonblock();
           _s9pBY::I64 = _s9pBC::I64 | %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pBX::I64));
           if (_s9pBC::I64 == _s9pBY::I64) goto u9rQA; else goto c9rQd;
       u9rQA: // global
           Sp = Sp + 24;
           call _c9rQc() args: 0, res: 0, upd: 0;
       c9rQd: // global
           (_s9pC7::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfl();
           (_s9pCc::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(_s9pBi::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pC7::I64)), _s9pBY::I64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9rPq() //  [R1]
         { info_tbl: [(c9rPq,
                       label: block_c9rPq_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rPq: // global
           _s9pBC::I64 = I64[Sp + 16];
           _s9pBG::I64 = _s9pBC::I64 & I64[R1 + 7];
           if (_s9pBC::I64 == _s9pBG::I64) goto u9rQB; else goto c9rPP;
       u9rQB: // global
           Sp = Sp + 24;
           call _c9rQc() args: 0, res: 0, upd: 0;
       c9rPP: // global
           _s9pBi::I64 = I64[Sp + 8];
           (_s9pBO::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfl();
           (_s9pBT::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(_s9pBi::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pBO::I64)), _s9pBG::I64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9rQc() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rQc: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.217180972 UTC

[section ""data" . System.Posix.Internals.setNonBlockingFD1_closure" {
     System.Posix.Internals.setNonBlockingFD1_closure:
         const System.Posix.Internals.setNonBlockingFD1_info;
         const 0;
 },
 System.Posix.Internals.setNonBlockingFD1_entry() //  [R2, R3]
         { info_tbl: [(c9rQO,
                       label: System.Posix.Internals.setNonBlockingFD1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rQO: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rQP; else goto c9rQQ;
       c9rQP: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Posix.Internals.setNonBlockingFD1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9rQQ: // global
           I64[Sp - 16] = block_c9rQL_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9rQU; else goto c9rQM;
       u9rQU: // global
           call _c9rQL(R1) args: 0, res: 0, upd: 0;
       c9rQM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rQL() //  [R1]
         { info_tbl: [(c9rQL,
                       label: block_c9rQL_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rQL: // global
           R3 = P64[Sp + 8];
           R2 = I64[R1 + 7];
           Sp = Sp + 16;
           call System.Posix.Internals.$wsetNonBlockingFD_entry(R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.218333475 UTC

[section ""data" . System.Posix.Internals.setNonBlockingFD_closure" {
     System.Posix.Internals.setNonBlockingFD_closure:
         const System.Posix.Internals.setNonBlockingFD_info;
         const 0;
 },
 System.Posix.Internals.setNonBlockingFD_entry() //  [R2, R3]
         { info_tbl: [(c9rQZ,
                       label: System.Posix.Internals.setNonBlockingFD_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rQZ: // global
           R3 = R3;
           R2 = R2;
           call System.Posix.Internals.setNonBlockingFD1_entry(R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.219053167 UTC

[section ""cstring" . System.Posix.Internals.fdGetMode3_bytes" {
     System.Posix.Internals.fdGetMode3_bytes:
         I8[] [102,100,71,101,116,77,111,100,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.219800235 UTC

[section ""data" . System.Posix.Internals.fdGetMode2_closure" {
     System.Posix.Internals.fdGetMode2_closure:
         const System.Posix.Internals.fdGetMode2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.fdGetMode2_entry() //  [R1]
         { info_tbl: [(c9rR8,
                       label: System.Posix.Internals.fdGetMode2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rR8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rR9; else goto c9rRa;
       c9rR9: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rRa: // global
           (_c9rR5::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9rR5::I64 == 0) goto c9rR7; else goto c9rR6;
       c9rR7: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9rR6: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rR5::I64;
           R2 = System.Posix.Internals.fdGetMode3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.221659219 UTC

[section ""data" . System.Posix.Internals.$wfdGetMode_closure" {
     System.Posix.Internals.$wfdGetMode_closure:
         const System.Posix.Internals.$wfdGetMode_info;
         const 0;
 },
 sat_s9pCw_entry() //  [R1]
         { info_tbl: [(c9rRn,
                       label: sat_s9pCw_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rRn: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rRz; else goto c9rRy;
       c9rRz: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9rRy: // global
           (_s9pCt::I64) = call "capi" arg hints:  [‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC17ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[R1 + 7], %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[R1 + 15])));
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pCt::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9pD3_entry() //  [R1]
         { info_tbl: [(c9rRJ,
                       label: sat_s9pD3_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rRJ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9rRK; else goto c9rRL;
       c9rRK: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rRL: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9rRG_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9rTb; else goto c9rRH;
       u9rTb: // global
           call _c9rRG(R1) args: 0, res: 0, upd: 0;
       c9rRH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9rRG() //  [R1]
         { info_tbl: [(c9rRG,
                       label: block_c9rRG_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rRG: // global
           _s9pCB::I64 = I64[R1 + 7];
           (_s9pCF::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_wronly();
           if (_s9pCB::I64 & %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pCF::I64)) == 0) goto c9rSF; else goto c9rS7;
       c9rSF: // global
           (_s9pCX::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_rdwr();
           if (_s9pCB::I64 & %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pCX::I64)) == 0) goto c9rT7; else goto c9rT1;
       c9rT7: // global
           R1 = GHC.IO.IOMode.ReadMode_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9rT1: // global
           R1 = GHC.IO.IOMode.ReadWriteMode_closure+4;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9rS7: // global
           (_s9pCO::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_append();
           if (_s9pCB::I64 & %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pCO::I64)) == 0) goto c9rSz; else goto c9rSt;
       c9rSz: // global
           R1 = GHC.IO.IOMode.WriteMode_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9rSt: // global
           R1 = GHC.IO.IOMode.AppendMode_closure+3;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 System.Posix.Internals.$wfdGetMode_entry() //  [R2]
         { info_tbl: [(c9rTc,
                       label: System.Posix.Internals.$wfdGetMode_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rTc: // global
           _s9pCi::I64 = R2;
           if ((Sp + -8) < SpLim) (likely: False) goto c9rTd; else goto c9rTe;
       c9rTe: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9rTg; else goto c9rTf;
       c9rTg: // global
           HpAlloc = 24;
           goto c9rTd;
       c9rTd: // global
           R2 = _s9pCi::I64;
           R1 = System.Posix.Internals.$wfdGetMode_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rTf: // global
           (_s9pCn::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_getfl();
           I64[Hp - 16] = sat_s9pCw_info;
           I64[Hp - 8] = _s9pCi::I64;
           I64[Hp] = _s9pCn::I64;
           I64[Sp - 8] = block_c9rRA_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.fdGetMode2_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9rRA() //  [R1]
         { info_tbl: [(c9rRA,
                       label: block_c9rRA_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rRA: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9rTj; else goto c9rTi;
       c9rTj: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rTi: // global
           I64[Hp - 16] = sat_s9pD3_info;
           P64[Hp] = R1;
           R1 = Hp - 16;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.224072318 UTC

[section ""data" . System.Posix.Internals.fdGetMode1_closure" {
     System.Posix.Internals.fdGetMode1_closure:
         const System.Posix.Internals.fdGetMode1_info;
         const 0;
 },
 System.Posix.Internals.fdGetMode1_entry() //  [R2]
         { info_tbl: [(c9rTr,
                       label: System.Posix.Internals.fdGetMode1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rTr: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9rTs; else goto c9rTt;
       c9rTs: // global
           R2 = R2;
           R1 = System.Posix.Internals.fdGetMode1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rTt: // global
           I64[Sp - 8] = block_c9rTo_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9rTx; else goto c9rTp;
       u9rTx: // global
           call _c9rTo(R1) args: 0, res: 0, upd: 0;
       c9rTp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rTo() //  [R1]
         { info_tbl: [(c9rTo,
                       label: block_c9rTo_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rTo: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call System.Posix.Internals.$wfdGetMode_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.22516167 UTC

[section ""data" . System.Posix.Internals.fdGetMode_closure" {
     System.Posix.Internals.fdGetMode_closure:
         const System.Posix.Internals.fdGetMode_info;
         const 0;
 },
 System.Posix.Internals.fdGetMode_entry() //  [R2]
         { info_tbl: [(c9rTC,
                       label: System.Posix.Internals.fdGetMode_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rTC: // global
           R2 = R2;
           call System.Posix.Internals.fdGetMode1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.228204311 UTC

[section ""data" . System.Posix.Internals.fdStat1_closure" {
     System.Posix.Internals.fdStat1_closure:
         const System.Posix.Internals.fdStat1_info;
         const 0;
 },
 sat_s9pDu_entry() //  [R1]
         { info_tbl: [(c9rU4,
                       label: sat_s9pDu_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rU4: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rUa; else goto c9rU9;
       c9rUa: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9rU9: // global
           (_s9pDr::I64) = call "ccall" arg hints:  [‘signed’,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_fstat(I64[R1 + 7], I64[R1 + 15]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pDr::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.fdStat1_entry() //  [R2]
         { info_tbl: [(c9rUb,
                       label: System.Posix.Internals.fdStat1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rUb: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9rUc; else goto c9rUd;
       c9rUc: // global
           R2 = R2;
           R1 = System.Posix.Internals.fdStat1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rUd: // global
           (_s9pDd::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_stat();
           I64[Sp - 16] = block_c9rTK_info;
           R1 = _s9pDd::I64;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rTK() //  [R1]
         { info_tbl: [(c9rTK,
                       label: block_c9rTK_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rTK: // global
           I64[Sp] = block_c9rTM_info;
           _s9pDj::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s9pDj::P64;
           if (R1 & 7 != 0) goto u9rXe; else goto c9rTN;
       u9rXe: // global
           call _c9rTM(R1) args: 0, res: 0, upd: 0;
       c9rTN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rTM() //  [R1]
         { info_tbl: [(c9rTM,
                       label: block_c9rTM_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rTM: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9rUh; else goto c9rUg;
       c9rUh: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rUg: // global
           _s9pDl::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9pDu_info;
           I64[Hp - 8] = _s9pDl::I64;
           _s9pDm::I64 = P64[Sp + 8] + 16;
           I64[Hp] = _s9pDm::I64;
           I64[Sp - 8] = block_c9rUi_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.ioe_unknownfiletype3_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           I64[Sp] = _s9pDm::I64;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9rUi() //  []
         { info_tbl: [(c9rUi,
                       label: block_c9rUi_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rUi: // global
           (_s9pDB::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_mode(I64[Sp + 8]);
           _s9pDC::I64 = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pDB::I64));
           (_s9pDG::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC5ZCbaseZCSystemziPosixziInternalsZCSzuISDIR(_s9pDC::I64);
           _s9pDH::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pDG::I64));
           if (_s9pDH::I64 != 0) goto u9rX2; else goto c9rUN;
       u9rX2: // global
           I64[Sp] = _s9pDH::I64;
           call _c9rUw() args: 0, res: 0, upd: 0;
       c9rUN: // global
           (_s9pDX::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC4ZCbaseZCSystemziPosixziInternalsZCSzuISFIFO(_s9pDC::I64);
           _s9pDY::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pDX::I64));
           if (_s9pDY::I64 != 0) goto u9rX4; else goto c9rVe;
       u9rX4: // global
           I64[Sp] = _s9pDY::I64;
           call _c9rUX() args: 0, res: 0, upd: 0;
       c9rVe: // global
           (_s9pEe::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC3ZCbaseZCSystemziPosixziInternalsZCSzuISSOCK(_s9pDC::I64);
           _s9pEf::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pEe::I64));
           if (_s9pEf::I64 != 0) goto u9rX6; else goto c9rVF;
       u9rX6: // global
           I64[Sp] = _s9pEf::I64;
           call _c9rVo() args: 0, res: 0, upd: 0;
       c9rVF: // global
           (_s9pEv::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC7ZCbaseZCSystemziPosixziInternalsZCSzuISCHR(_s9pDC::I64);
           _s9pEw::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pEv::I64));
           if (_s9pEw::I64 != 0) goto u9rX8; else goto c9rW6;
       u9rX8: // global
           I64[Sp] = _s9pEw::I64;
           call _c9rVP() args: 0, res: 0, upd: 0;
       c9rW6: // global
           (_s9pEM::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG(_s9pDC::I64);
           _s9pEN::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pEM::I64));
           if (_s9pEN::I64 != 0) goto u9rXa; else goto c9rWx;
       u9rXa: // global
           I64[Sp] = _s9pEN::I64;
           call _c9rWg() args: 0, res: 0, upd: 0;
       c9rWx: // global
           (_s9pF3::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC6ZCbaseZCSystemziPosixziInternalsZCSzuISBLK(_s9pDC::I64);
           _s9pF4::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pF3::I64));
           if (_s9pF4::I64 != 0) goto u9rXc; else goto c9rWY;
       u9rXc: // global
           I64[Sp] = _s9pF4::I64;
           call _c9rWH() args: 0, res: 0, upd: 0;
       c9rWY: // global
           R1 = System.Posix.Internals.fdStat2_closure;
           Sp = Sp + 24;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9rUw() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rUw: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9rUK; else goto c9rUJ;
       c9rUK: // global
           HpAlloc = 64;
           _s9pDH::I64 = I64[Sp];
           I64[Sp] = block_c9rUv_info;
           R1 = _s9pDH::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9rUJ: // global
           _s9pDj::P64 = P64[Sp + 16];
           _s9pDm::I64 = I64[Sp + 8];
           (_s9pDL::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9pDm::I64);
           (_s9pDP::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9pDm::I64);
           call MO_Touch(_s9pDj::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9pDP::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9pDL::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.Directory_closure+1;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9rUv() //  [R1]
         { info_tbl: [(c9rUv,
                       label: block_c9rUv_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rUv: // global
           I64[Sp] = R1;
           call _c9rUw() args: 0, res: 0, upd: 0;
     }
 },
 _c9rUX() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rUX: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9rVb; else goto c9rVa;
       c9rVb: // global
           HpAlloc = 64;
           _s9pDY::I64 = I64[Sp];
           I64[Sp] = block_c9rUW_info;
           R1 = _s9pDY::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9rVa: // global
           _s9pDj::P64 = P64[Sp + 16];
           _s9pDm::I64 = I64[Sp + 8];
           (_s9pE2::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9pDm::I64);
           (_s9pE6::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9pDm::I64);
           call MO_Touch(_s9pDj::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9pE6::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9pE2::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.Stream_closure+2;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9rUW() //  [R1]
         { info_tbl: [(c9rUW,
                       label: block_c9rUW_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rUW: // global
           I64[Sp] = R1;
           call _c9rUX() args: 0, res: 0, upd: 0;
     }
 },
 _c9rVo() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rVo: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9rVC; else goto c9rVB;
       c9rVC: // global
           HpAlloc = 64;
           _s9pEf::I64 = I64[Sp];
           I64[Sp] = block_c9rVn_info;
           R1 = _s9pEf::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9rVB: // global
           _s9pDj::P64 = P64[Sp + 16];
           _s9pDm::I64 = I64[Sp + 8];
           (_s9pEj::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9pDm::I64);
           (_s9pEn::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9pDm::I64);
           call MO_Touch(_s9pDj::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9pEn::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9pEj::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.Stream_closure+2;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9rVn() //  [R1]
         { info_tbl: [(c9rVn,
                       label: block_c9rVn_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rVn: // global
           I64[Sp] = R1;
           call _c9rVo() args: 0, res: 0, upd: 0;
     }
 },
 _c9rVP() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rVP: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9rW3; else goto c9rW2;
       c9rW3: // global
           HpAlloc = 64;
           _s9pEw::I64 = I64[Sp];
           I64[Sp] = block_c9rVO_info;
           R1 = _s9pEw::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9rW2: // global
           _s9pDj::P64 = P64[Sp + 16];
           _s9pDm::I64 = I64[Sp + 8];
           (_s9pEA::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9pDm::I64);
           (_s9pEE::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9pDm::I64);
           call MO_Touch(_s9pDj::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9pEE::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9pEA::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.Stream_closure+2;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9rVO() //  [R1]
         { info_tbl: [(c9rVO,
                       label: block_c9rVO_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rVO: // global
           I64[Sp] = R1;
           call _c9rVP() args: 0, res: 0, upd: 0;
     }
 },
 _c9rWg() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rWg: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9rWu; else goto c9rWt;
       c9rWu: // global
           HpAlloc = 64;
           _s9pEN::I64 = I64[Sp];
           I64[Sp] = block_c9rWf_info;
           R1 = _s9pEN::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9rWt: // global
           _s9pDj::P64 = P64[Sp + 16];
           _s9pDm::I64 = I64[Sp + 8];
           (_s9pER::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9pDm::I64);
           (_s9pEV::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9pDm::I64);
           call MO_Touch(_s9pDj::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9pEV::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9pER::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.RegularFile_closure+3;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9rWf() //  [R1]
         { info_tbl: [(c9rWf,
                       label: block_c9rWf_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rWf: // global
           I64[Sp] = R1;
           call _c9rWg() args: 0, res: 0, upd: 0;
     }
 },
 _c9rWH() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rWH: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9rWV; else goto c9rWU;
       c9rWV: // global
           HpAlloc = 64;
           _s9pF4::I64 = I64[Sp];
           I64[Sp] = block_c9rWG_info;
           R1 = _s9pF4::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9rWU: // global
           _s9pDj::P64 = P64[Sp + 16];
           _s9pDm::I64 = I64[Sp + 8];
           (_s9pF8::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9pDm::I64);
           (_s9pFc::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9pDm::I64);
           call MO_Touch(_s9pDj::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9pFc::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9pF8::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.RawDevice_closure+4;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9rWG() //  [R1]
         { info_tbl: [(c9rWG,
                       label: block_c9rWG_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rWG: // global
           I64[Sp] = R1;
           call _c9rWH() args: 0, res: 0, upd: 0;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.233881827 UTC

[section ""data" . System.Posix.Internals.fdStat_closure" {
     System.Posix.Internals.fdStat_closure:
         const System.Posix.Internals.fdStat_info;
         const 0;
 },
 System.Posix.Internals.fdStat_entry() //  [R2]
         { info_tbl: [(c9rXv,
                       label: System.Posix.Internals.fdStat_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rXv: // global
           R2 = R2;
           call System.Posix.Internals.fdStat1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.234866205 UTC

[section ""data" . System.Posix.Internals.fdType1_closure" {
     System.Posix.Internals.fdType1_closure:
         const System.Posix.Internals.fdType1_info;
         const 0;
 },
 System.Posix.Internals.fdType1_entry() //  [R2]
         { info_tbl: [(c9rXH,
                       label: System.Posix.Internals.fdType1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rXH: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9rXI; else goto c9rXJ;
       c9rXI: // global
           R2 = R2;
           R1 = System.Posix.Internals.fdType1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rXJ: // global
           I64[Sp - 8] = block_c9rXC_info;
           R2 = R2;
           Sp = Sp - 8;
           call System.Posix.Internals.fdStat1_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9rXC() //  [R1]
         { info_tbl: [(c9rXC,
                       label: block_c9rXC_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rXC: // global
           I64[Sp] = block_c9rXE_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u9rXO; else goto c9rXF;
       u9rXO: // global
           call _c9rXE(R1) args: 0, res: 0, upd: 0;
       c9rXF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rXE() //  [R1]
         { info_tbl: [(c9rXE,
                       label: block_c9rXE_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rXE: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.235998715 UTC

[section ""data" . System.Posix.Internals.fdType_closure" {
     System.Posix.Internals.fdType_closure:
         const System.Posix.Internals.fdType_info;
         const 0;
 },
 System.Posix.Internals.fdType_entry() //  [R2]
         { info_tbl: [(c9rXT,
                       label: System.Posix.Internals.fdType_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rXT: // global
           R2 = R2;
           call System.Posix.Internals.fdType1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.236724695 UTC

[section ""cstring" . System.Posix.Internals.fileType3_bytes" {
     System.Posix.Internals.fileType3_bytes:
         I8[] [102,105,108,101,84,121,112,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.237484496 UTC

[section ""data" . System.Posix.Internals.fileType2_closure" {
     System.Posix.Internals.fileType2_closure:
         const System.Posix.Internals.fileType2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.fileType2_entry() //  [R1]
         { info_tbl: [(c9rY2,
                       label: System.Posix.Internals.fileType2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rY2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rY3; else goto c9rY4;
       c9rY3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rY4: // global
           (_c9rXZ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9rXZ::I64 == 0) goto c9rY1; else goto c9rY0;
       c9rY1: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9rY0: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rXZ::I64;
           R2 = System.Posix.Internals.fileType3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.239313609 UTC

[section ""data" . System.Posix.Internals.fileType1_closure" {
     System.Posix.Internals.fileType1_closure:
         const System.Posix.Internals.fileType1_info;
         const 0;
 },
 sat_s9pFS_entry() //  [R1]
         { info_tbl: [(c9rYB,
                       label: sat_s9pFS_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rYB: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rYH; else goto c9rYG;
       c9rYH: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9rYG: // global
           (_s9pFP::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_stat(I64[R1 + 15], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pFP::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9pFW_entry() //  [R1, R2]
         { info_tbl: [(c9rYI,
                       label: sat_s9pFW_info
                       rep:HeapRep 1 nonptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rYI: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rYK; else goto c9rYL;
       c9rYK: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rYL: // global
           I64[Sp - 16] = block_c9rYm_info;
           _s9pFG::I64 = I64[R1 + 6];
           R1 = R2;
           I64[Sp - 8] = _s9pFG::I64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9rYR; else goto c9rYn;
       u9rYR: // global
           call _c9rYm(R1) args: 0, res: 0, upd: 0;
       c9rYn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rYm() //  [R1]
         { info_tbl: [(c9rYm,
                       label: block_c9rYm_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rYm: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9rYO; else goto c9rYN;
       c9rYO: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rYN: // global
           _s9pFK::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9pFS_info;
           I64[Hp - 8] = I64[Sp + 8];
           I64[Hp] = _s9pFK::I64;
           I64[Sp] = block_c9rYJ_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.fileType2_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9rYJ() //  []
         { info_tbl: [(c9rYJ,
                       label: block_c9rYJ_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rYJ: // global
           R2 = I64[Sp + 8];
           Sp = Sp + 16;
           call System.Posix.Internals.$wstatGetType_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . u9rZ3_srtd" {
     u9rZ3_srtd:
         const S9qh6_srt;
         const 45;
         const 26388413317121;
 },
 System.Posix.Internals.fileType1_entry() //  [R2]
         { info_tbl: [(c9rYS,
                       label: System.Posix.Internals.fileType1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rYS: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9rYT; else goto c9rYU;
       c9rYT: // global
           R2 = R2;
           R1 = System.Posix.Internals.fileType1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9rYU: // global
           (_s9pFw::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_stat();
           I64[Sp - 16] = block_c9rYa_info;
           R1 = _s9pFw::I64;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . u9rZ4_srtd" {
     u9rZ4_srtd:
         const S9qh6_srt;
         const 44;
         const 8796227272705;
 },
 _c9rYa() //  [R1]
         { info_tbl: [(c9rYa,
                       label: block_c9rYa_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rYa: // global
           I64[Sp - 8] = block_c9rYc_info;
           _s9pFC::P64 = R1;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp] = _s9pFC::P64;
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rYc() //  [R1]
         { info_tbl: [(c9rYc,
                       label: block_c9rYc_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rYc: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rYY; else goto c9rYX;
       c9rYY: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9rYX: // global
           I64[Hp - 8] = sat_s9pFW_info;
           P64[Hp] = P64[Sp + 8] + 16;
           I64[Sp] = block_c9rYZ_info;
           R4 = Hp - 6;
           R3 = P64[Sp + 16];
           R2 = R1;
           call GHC.Foreign.charIsRepresentable3_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9rYZ() //  [R1]
         { info_tbl: [(c9rYZ,
                       label: block_c9rYZ_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rYZ: // global
           call MO_Touch(P64[Sp + 8]);
           R1 = R1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.242286731 UTC

[section ""data" . System.Posix.Internals.fileType_closure" {
     System.Posix.Internals.fileType_closure:
         const System.Posix.Internals.fileType_info;
         const 0;
 },
 System.Posix.Internals.fileType_entry() //  [R2]
         { info_tbl: [(c9rZ9,
                       label: System.Posix.Internals.fileType_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rZ9: // global
           R2 = R2;
           call System.Posix.Internals.fileType1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.243010871 UTC

[section ""cstring" . System.Posix.Internals.fdFileSize4_bytes" {
     System.Posix.Internals.fdFileSize4_bytes:
         I8[] [102,105,108,101,83,105,122,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.243725407 UTC

[section ""data" . System.Posix.Internals.fdFileSize3_closure" {
     System.Posix.Internals.fdFileSize3_closure:
         const System.Posix.Internals.fdFileSize3_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.fdFileSize3_entry() //  [R1]
         { info_tbl: [(c9rZi,
                       label: System.Posix.Internals.fdFileSize3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rZi: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rZj; else goto c9rZk;
       c9rZj: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rZk: // global
           (_c9rZf::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9rZf::I64 == 0) goto c9rZh; else goto c9rZg;
       c9rZh: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9rZg: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rZf::I64;
           R2 = System.Posix.Internals.fdFileSize4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.246707023 UTC

[section ""data" . sat_s9pG1_closure" {
     sat_s9pG1_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.247318995 UTC

[section ""data" . sat_s9pG2_closure" {
     sat_s9pG2_closure:
         const :_con_info;
         const sat_s9pG1_closure+1;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.248065986 UTC

[section ""data" . System.Posix.Internals.fdFileSize2_closure" {
     System.Posix.Internals.fdFileSize2_closure:
         const System.Posix.Internals.fdFileSize2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.fdFileSize2_entry() //  [R1]
         { info_tbl: [(c9rZr,
                       label: System.Posix.Internals.fdFileSize2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rZr: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9rZs; else goto c9rZt;
       c9rZs: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9rZt: // global
           (_c9rZo::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9rZo::I64 == 0) goto c9rZq; else goto c9rZp;
       c9rZq: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9rZp: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9rZo::I64;
           R3 = sat_s9pG2_closure+2;
           R2 = GHC.Types.False_closure+1;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.250120992 UTC

[section ""data" . System.Posix.Internals.fdFileSize1_closure" {
     System.Posix.Internals.fdFileSize1_closure:
         const System.Posix.Internals.fdFileSize1_info;
         const 0;
 },
 sat_s9pGp_entry() //  [R1]
         { info_tbl: [(c9rZT,
                       label: sat_s9pGp_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rZT: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9rZZ; else goto c9rZY;
       c9rZZ: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9rZY: // global
           (_s9pGm::I64) = call "ccall" arg hints:  [‘signed’,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_fstat(I64[R1 + 7], I64[R1 + 15]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pGm::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9pGI_entry() //  [R1]
         { info_tbl: [(c9s0m,
                       label: sat_s9pGI_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s0m: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9s0n; else goto c9s0o;
       c9s0n: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9s0o: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = I64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 System.Posix.Internals.fdFileSize1_entry() //  [R2]
         { info_tbl: [(c9s0p,
                       label: System.Posix.Internals.fdFileSize1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s0p: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9s0q; else goto c9s0r;
       c9s0q: // global
           R2 = R2;
           R1 = System.Posix.Internals.fdFileSize1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9s0r: // global
           (_s9pG8::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_stat();
           I64[Sp - 16] = block_c9rZz_info;
           R1 = _s9pG8::I64;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rZz() //  [R1]
         { info_tbl: [(c9rZz,
                       label: block_c9rZz_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rZz: // global
           I64[Sp] = block_c9rZB_info;
           _s9pGe::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s9pGe::P64;
           if (R1 & 7 != 0) goto u9s0L; else goto c9rZC;
       u9s0L: // global
           call _c9rZB(R1) args: 0, res: 0, upd: 0;
       c9rZC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9rZB() //  [R1]
         { info_tbl: [(c9rZB,
                       label: block_c9rZB_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9rZB: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9s0v; else goto c9s0u;
       c9s0v: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9s0u: // global
           _s9pGg::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9pGp_info;
           I64[Hp - 8] = _s9pGg::I64;
           _s9pGh::I64 = P64[Sp + 8] + 16;
           I64[Hp] = _s9pGh::I64;
           I64[Sp - 8] = block_c9s00_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.fdFileSize3_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           I64[Sp] = _s9pGh::I64;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9s00() //  []
         { info_tbl: [(c9s00,
                       label: block_c9s00_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s00: // global
           _s9pGe::P64 = P64[Sp + 16];
           (_s9pGw::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_mode(I64[Sp + 8]);
           (_s9pGB::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG(%MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pGw::I64)));
           _s9pGC::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pGB::I64));
           if (_s9pGC::I64 != 0) goto u9s0J; else goto c9s0E;
       u9s0J: // global
           I64[Sp] = _s9pGC::I64;
           call _c9s0d() args: 0, res: 0, upd: 0;
       c9s0E: // global
           call MO_Touch(_s9pGe::P64);
           R1 = System.Posix.Internals.fdFileSize2_closure;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9s0d() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s0d: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9s0B; else goto c9s0A;
       c9s0B: // global
           HpAlloc = 24;
           _s9pGC::I64 = I64[Sp];
           I64[Sp] = block_c9s0c_info;
           R1 = _s9pGC::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9s0A: // global
           _s9pGe::P64 = P64[Sp + 16];
           (_s9pGG::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] __hscore_st_size(I64[Sp + 8]);
           call MO_Touch(_s9pGe::P64);
           I64[Hp - 16] = sat_s9pGI_info;
           I64[Hp] = _s9pGG::I64;
           R1 = Hp - 16;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9s0c() //  [R1]
         { info_tbl: [(c9s0c,
                       label: block_c9s0c_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s0c: // global
           I64[Sp] = R1;
           call _c9s0d() args: 0, res: 0, upd: 0;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.252694043 UTC

[section ""data" . System.Posix.Internals.fdFileSize_closure" {
     System.Posix.Internals.fdFileSize_closure:
         const System.Posix.Internals.fdFileSize_info;
         const 0;
 },
 System.Posix.Internals.fdFileSize_entry() //  [R2]
         { info_tbl: [(c9s0S,
                       label: System.Posix.Internals.fdFileSize_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s0S: // global
           R2 = R2;
           call System.Posix.Internals.fdFileSize1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.253422082 UTC

[section ""relreadonly" . S9qh6_srt" {
     S9qh6_srt:
         const GHC.IO.Encoding.getFileSystemEncoding_closure;
         const System.Posix.Internals.withFilePath1_closure;
         const GHC.ForeignPtr.mallocForeignPtrBytes2_closure;
         const System.Posix.Internals.peekFilePathLen1_closure;
         const GHC.Foreign.peekCString1_closure;
         const System.Posix.Internals.peekFilePath1_closure;
         const GHC.Foreign.newCString1_closure;
         const System.Posix.Internals.newFilePath1_closure;
         const System.Posix.Internals.puts1_closure;
         const System.Posix.Internals.puts2_closure;
         const Foreign.C.Error.$wlvl_closure;
         const lvl1_r9pfy_closure;
         const lvl6_r9pfD_closure;
         const lvl9_r9pfG_closure;
         const Foreign.Marshal.Alloc.malloc1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
         const System.Posix.Internals.getEcho3_closure;
         const lvl2_r9pfz_closure;
         const lvl4_r9pfB_closure;
         const lvl7_r9pfE_closure;
         const lvl10_r9pfH_closure;
         const System.Posix.Internals.setCooked1_closure;
         const System.Posix.Internals.getEcho1_closure;
         const System.Posix.Internals.setEcho1_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const System.Posix.Internals.ioe_unknownfiletype_closure;
         const System.Posix.Internals.fdStat2_closure;
         const System.Posix.Internals.$wstatGetType_closure;
         const System.Posix.Internals.statGetType1_closure;
         const lvl12_r9pfJ_closure;
         const System.Posix.Internals.setCloseOnExec2_closure;
         const System.Posix.Internals.setCloseOnExec1_closure;
         const System.Posix.Internals.$wsetCloseOnExec_closure;
         const System.Posix.Internals.$wsetNonBlockingFD_closure;
         const System.Posix.Internals.setNonBlockingFD2_closure;
         const System.Posix.Internals.setNonBlockingFD3_closure;
         const System.Posix.Internals.setNonBlockingFD1_closure;
         const System.Posix.Internals.$wfdGetMode_closure;
         const System.Posix.Internals.fdGetMode2_closure;
         const System.Posix.Internals.fdGetMode1_closure;
         const System.Posix.Internals.fdStat1_closure;
         const System.Posix.Internals.ioe_unknownfiletype3_closure;
         const System.Posix.Internals.fdType1_closure;
         const System.Posix.Internals.fileType2_closure;
         const System.Posix.Internals.fileType1_closure;
         const sat_s9pG2_closure;
         const System.Posix.Internals.fdFileSize1_closure;
         const System.Posix.Internals.fdFileSize2_closure;
         const System.Posix.Internals.fdFileSize3_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.25515258 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:04:31.256244885 UTC

[section ""cstring" . System.Posix.Internals.ioe_unknownfiletype4_bytes" {
     System.Posix.Internals.ioe_unknownfiletype4_bytes:
         I8[] [102,100,84,121,112,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.258295444 UTC

[section ""data" . System.Posix.Internals.ioe_unknownfiletype3_closure" {
     System.Posix.Internals.ioe_unknownfiletype3_closure:
         const System.Posix.Internals.ioe_unknownfiletype3_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.ioe_unknownfiletype3_entry() //  [R1]
         { info_tbl: [(c9s12,
                       label: System.Posix.Internals.ioe_unknownfiletype3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s12: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9s13; else goto c9s14;
       c9s13: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9s14: // global
           (_c9s0Z::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9s0Z::I64 == 0) goto c9s11; else goto c9s10;
       c9s11: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9s10: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9s0Z::I64;
           R2 = System.Posix.Internals.ioe_unknownfiletype4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.262236603 UTC

[section ""cstring" . System.Posix.Internals.ioe_unknownfiletype2_bytes" {
     System.Posix.Internals.ioe_unknownfiletype2_bytes:
         I8[] [117,110,107,110,111,119,110,32,102,105,108,101,32,116,121,112,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.264107225 UTC

[section ""data" . System.Posix.Internals.ioe_unknownfiletype1_closure" {
     System.Posix.Internals.ioe_unknownfiletype1_closure:
         const System.Posix.Internals.ioe_unknownfiletype1_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.ioe_unknownfiletype1_entry() //  [R1]
         { info_tbl: [(c9s1j,
                       label: System.Posix.Internals.ioe_unknownfiletype1_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s1j: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9s1k; else goto c9s1l;
       c9s1k: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9s1l: // global
           (_c9s1g::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9s1g::I64 == 0) goto c9s1i; else goto c9s1h;
       c9s1i: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9s1h: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9s1g::I64;
           R2 = System.Posix.Internals.ioe_unknownfiletype2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.268100358 UTC

[section ""data" . System.Posix.Internals.ioe_unknownfiletype_closure" {
     System.Posix.Internals.ioe_unknownfiletype_closure:
         const GHC.IO.Exception.IOError_con_info;
         const GHC.Base.Nothing_closure+1;
         const GHC.IO.Exception.UnsupportedOperation_closure+1;
         const System.Posix.Internals.ioe_unknownfiletype3_closure;
         const System.Posix.Internals.ioe_unknownfiletype1_closure;
         const GHC.Base.Nothing_closure+1;
         const GHC.Base.Nothing_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.269977936 UTC

[section ""cstring" . System.Posix.Internals.$trModule4_bytes" {
     System.Posix.Internals.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.271715837 UTC

[section ""data" . System.Posix.Internals.$trModule3_closure" {
     System.Posix.Internals.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.273446102 UTC

[section ""cstring" . System.Posix.Internals.$trModule2_bytes" {
     System.Posix.Internals.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,80,111,115,105,120,46,73,110,116,101,114,110,97,108,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.275154873 UTC

[section ""data" . System.Posix.Internals.$trModule1_closure" {
     System.Posix.Internals.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.276873377 UTC

[section ""data" . System.Posix.Internals.$trModule_closure" {
     System.Posix.Internals.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Posix.Internals.$trModule3_closure+1;
         const System.Posix.Internals.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.279806017 UTC

[section ""cstring" . System.Posix.Internals.$tcCFLock2_bytes" {
     System.Posix.Internals.$tcCFLock2_bytes:
         I8[] [67,70,76,111,99,107]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.281719584 UTC

[section ""data" . System.Posix.Internals.$tcCFLock1_closure" {
     System.Posix.Internals.$tcCFLock1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCFLock2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.283444955 UTC

[section ""data" . System.Posix.Internals.$tcCFLock_closure" {
     System.Posix.Internals.$tcCFLock_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCFLock1_closure+1;
         const GHC.Types.krep$*_closure;
         const 3834113763436071548;
         const 14488320300686398525;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.285224399 UTC

[section ""cstring" . System.Posix.Internals.$tcCGroup2_bytes" {
     System.Posix.Internals.$tcCGroup2_bytes:
         I8[] [67,71,114,111,117,112]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.286793677 UTC

[section ""data" . System.Posix.Internals.$tcCGroup1_closure" {
     System.Posix.Internals.$tcCGroup1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCGroup2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.288463346 UTC

[section ""data" . System.Posix.Internals.$tcCGroup_closure" {
     System.Posix.Internals.$tcCGroup_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCGroup1_closure+1;
         const GHC.Types.krep$*_closure;
         const 11152603070241255843;
         const 9377315854270582287;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.290804218 UTC

[section ""cstring" . System.Posix.Internals.$tcCLconv2_bytes" {
     System.Posix.Internals.$tcCLconv2_bytes:
         I8[] [67,76,99,111,110,118]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.292434847 UTC

[section ""data" . System.Posix.Internals.$tcCLconv1_closure" {
     System.Posix.Internals.$tcCLconv1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCLconv2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.294173373 UTC

[section ""data" . System.Posix.Internals.$tcCLconv_closure" {
     System.Posix.Internals.$tcCLconv_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCLconv1_closure+1;
         const GHC.Types.krep$*_closure;
         const 3987786751457835656;
         const 9275563211259231122;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.295997272 UTC

[section ""cstring" . System.Posix.Internals.$tcCPasswd2_bytes" {
     System.Posix.Internals.$tcCPasswd2_bytes:
         I8[] [67,80,97,115,115,119,100]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.297655235 UTC

[section ""data" . System.Posix.Internals.$tcCPasswd1_closure" {
     System.Posix.Internals.$tcCPasswd1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCPasswd2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.299317155 UTC

[section ""data" . System.Posix.Internals.$tcCPasswd_closure" {
     System.Posix.Internals.$tcCPasswd_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCPasswd1_closure+1;
         const GHC.Types.krep$*_closure;
         const 5062644740775551982;
         const 16304478656107476218;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.301115618 UTC

[section ""cstring" . System.Posix.Internals.$tcCSigaction2_bytes" {
     System.Posix.Internals.$tcCSigaction2_bytes:
         I8[] [67,83,105,103,97,99,116,105,111,110]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.303093738 UTC

[section ""data" . System.Posix.Internals.$tcCSigaction1_closure" {
     System.Posix.Internals.$tcCSigaction1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCSigaction2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.305372831 UTC

[section ""data" . System.Posix.Internals.$tcCSigaction_closure" {
     System.Posix.Internals.$tcCSigaction_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCSigaction1_closure+1;
         const GHC.Types.krep$*_closure;
         const 17845420242338901681;
         const 15424947738972948028;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.307234508 UTC

[section ""cstring" . System.Posix.Internals.$tcCSigset2_bytes" {
     System.Posix.Internals.$tcCSigset2_bytes:
         I8[] [67,83,105,103,115,101,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.308857837 UTC

[section ""data" . System.Posix.Internals.$tcCSigset1_closure" {
     System.Posix.Internals.$tcCSigset1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCSigset2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.310509213 UTC

[section ""data" . System.Posix.Internals.$tcCSigset_closure" {
     System.Posix.Internals.$tcCSigset_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCSigset1_closure+1;
         const GHC.Types.krep$*_closure;
         const 14081798148172232868;
         const 6852541821114425705;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.31227746 UTC

[section ""cstring" . System.Posix.Internals.$tcCStat2_bytes" {
     System.Posix.Internals.$tcCStat2_bytes:
         I8[] [67,83,116,97,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.315047965 UTC

[section ""data" . System.Posix.Internals.$tcCStat1_closure" {
     System.Posix.Internals.$tcCStat1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCStat2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.316667247 UTC

[section ""data" . System.Posix.Internals.$tcCStat_closure" {
     System.Posix.Internals.$tcCStat_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCStat1_closure+1;
         const GHC.Types.krep$*_closure;
         const 2636779476884011316;
         const 12868714044560040280;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.318484467 UTC

[section ""cstring" . System.Posix.Internals.$tcCTermios2_bytes" {
     System.Posix.Internals.$tcCTermios2_bytes:
         I8[] [67,84,101,114,109,105,111,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.320146206 UTC

[section ""data" . System.Posix.Internals.$tcCTermios1_closure" {
     System.Posix.Internals.$tcCTermios1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCTermios2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.321809865 UTC

[section ""data" . System.Posix.Internals.$tcCTermios_closure" {
     System.Posix.Internals.$tcCTermios_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCTermios1_closure+1;
         const GHC.Types.krep$*_closure;
         const 11465338758467385152;
         const 17071974511267829282;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.323567507 UTC

[section ""cstring" . System.Posix.Internals.$tcCTm2_bytes" {
     System.Posix.Internals.$tcCTm2_bytes:
         I8[] [67,84,109]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.325704843 UTC

[section ""data" . System.Posix.Internals.$tcCTm1_closure" {
     System.Posix.Internals.$tcCTm1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCTm2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.327374387 UTC

[section ""data" . System.Posix.Internals.$tcCTm_closure" {
     System.Posix.Internals.$tcCTm_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCTm1_closure+1;
         const GHC.Types.krep$*_closure;
         const 14493525435896339207;
         const 9617693238091267571;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.329232813 UTC

[section ""cstring" . System.Posix.Internals.$tcCTms2_bytes" {
     System.Posix.Internals.$tcCTms2_bytes:
         I8[] [67,84,109,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.330847346 UTC

[section ""data" . System.Posix.Internals.$tcCTms1_closure" {
     System.Posix.Internals.$tcCTms1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCTms2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.332970147 UTC

[section ""data" . System.Posix.Internals.$tcCTms_closure" {
     System.Posix.Internals.$tcCTms_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCTms1_closure+1;
         const GHC.Types.krep$*_closure;
         const 1698703802659843616;
         const 8887550035694172540;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.334682317 UTC

[section ""cstring" . System.Posix.Internals.$tcCUtimbuf2_bytes" {
     System.Posix.Internals.$tcCUtimbuf2_bytes:
         I8[] [67,85,116,105,109,98,117,102]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.336302731 UTC

[section ""data" . System.Posix.Internals.$tcCUtimbuf1_closure" {
     System.Posix.Internals.$tcCUtimbuf1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCUtimbuf2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.338424991 UTC

[section ""data" . System.Posix.Internals.$tcCUtimbuf_closure" {
     System.Posix.Internals.$tcCUtimbuf_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCUtimbuf1_closure+1;
         const GHC.Types.krep$*_closure;
         const 8896027261912555023;
         const 11165583664207333654;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.340202692 UTC

[section ""cstring" . System.Posix.Internals.$tcCUtsname2_bytes" {
     System.Posix.Internals.$tcCUtsname2_bytes:
         I8[] [67,85,116,115,110,97,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.341809909 UTC

[section ""data" . System.Posix.Internals.$tcCUtsname1_closure" {
     System.Posix.Internals.$tcCUtsname1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCUtsname2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.343468924 UTC

[section ""data" . System.Posix.Internals.$tcCUtsname_closure" {
     System.Posix.Internals.$tcCUtsname_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCUtsname1_closure+1;
         const GHC.Types.krep$*_closure;
         const 628277874126106259;
         const 14985531938252154773;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.345745263 UTC

[section ""data" . get_saved_termios1_r9pej_closure" {
     get_saved_termios1_r9pej_closure:
         const get_saved_termios1_r9pej_info;
 },
 get_saved_termios1_r9pej_entry() //  [R2]
         { info_tbl: [(c9s2g,
                       label: get_saved_termios1_r9pej_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s2g: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9s2m; else goto c9s2n;
       c9s2m: // global
           R2 = R2;
           R1 = get_saved_termios1_r9pej_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9s2n: // global
           I64[Sp - 8] = block_c9s2d_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9s2r; else goto c9s2e;
       u9s2r: // global
           call _c9s2d(R1) args: 0, res: 0, upd: 0;
       c9s2e: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9s2d() //  [R1]
         { info_tbl: [(c9s2d,
                       label: block_c9s2d_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s2d: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9s2q; else goto c9s2p;
       c9s2q: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9s2p: // global
           (_s9pfS::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [PtrHint] __hscore_get_saved_termios(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s9pfS::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.351990394 UTC

[section ""data" . System.Posix.Internals.get_saved_termios_closure" {
     System.Posix.Internals.get_saved_termios_closure:
         const System.Posix.Internals.get_saved_termios_info;
 },
 System.Posix.Internals.get_saved_termios_entry() //  [R2]
         { info_tbl: [(c9s2G,
                       label: System.Posix.Internals.get_saved_termios_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s2G: // global
           R2 = R2;
           call get_saved_termios1_r9pej_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.355499077 UTC

[section ""data" . set_saved_termios1_r9pek_closure" {
     set_saved_termios1_r9pek_closure:
         const set_saved_termios1_r9pek_info;
 },
 set_saved_termios1_r9pek_entry() //  [R2, R3]
         { info_tbl: [(c9s2U,
                       label: set_saved_termios1_r9pek_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s2U: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9s2Y; else goto c9s2Z;
       c9s2Y: // global
           R3 = R3;
           R2 = R2;
           R1 = set_saved_termios1_r9pek_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9s2Z: // global
           I64[Sp - 16] = block_c9s2R_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9s3a; else goto c9s2S;
       u9s3a: // global
           call _c9s2R(R1) args: 0, res: 0, upd: 0;
       c9s2S: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9s2R() //  [R1]
         { info_tbl: [(c9s2R,
                       label: block_c9s2R_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s2R: // global
           I64[Sp] = block_c9s2X_info;
           _s9pfY::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pfY::I64;
           if (R1 & 7 != 0) goto u9s39; else goto c9s31;
       u9s39: // global
           call _c9s2X(R1) args: 0, res: 0, upd: 0;
       c9s31: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9s2X() //  [R1]
         { info_tbl: [(c9s2X,
                       label: block_c9s2X_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s2X: // global
           call "ccall" arg hints:  [‘signed’,
                                     PtrHint]  result hints:  [] __hscore_set_saved_termios(I64[Sp + 8], I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.362992397 UTC

[section ""data" . System.Posix.Internals.set_saved_termios_closure" {
     System.Posix.Internals.set_saved_termios_closure:
         const System.Posix.Internals.set_saved_termios_info;
 },
 System.Posix.Internals.set_saved_termios_entry() //  [R2, R3]
         { info_tbl: [(c9s3t,
                       label: System.Posix.Internals.set_saved_termios_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s3t: // global
           R3 = R3;
           R2 = R2;
           call set_saved_termios1_r9pek_entry(R3,
                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.366676145 UTC

[section ""data" . c_open1_r9pel_closure" {
     c_open1_r9pel_closure:
         const c_open1_r9pel_info;
 },
 c_open1_r9pel_entry() //  [R2, R3, R4]
         { info_tbl: [(c9s3H,
                       label: c_open1_r9pel_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s3H: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9s42; else goto c9s43;
       c9s42: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_open1_r9pel_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9s43: // global
           I64[Sp - 24] = block_c9s3E_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9s4a; else goto c9s3F;
       u9s4a: // global
           call _c9s3E(R1) args: 0, res: 0, upd: 0;
       c9s3F: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9s3E() //  [R1]
         { info_tbl: [(c9s3E,
                       label: block_c9s3E_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s3E: // global
           I64[Sp] = block_c9s3K_info;
           _s9pg9::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pg9::I64;
           if (R1 & 7 != 0) goto u9s49; else goto c9s3L;
       u9s49: // global
           call _c9s3K(R1) args: 0, res: 0, upd: 0;
       c9s3L: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9s3K() //  [R1]
         { info_tbl: [(c9s3K,
                       label: block_c9s3K_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s3K: // global
           I64[Sp] = block_c9s3P_info;
           _s9pgb::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pgb::I64;
           if (R1 & 7 != 0) goto u9s4b; else goto c9s3Q;
       u9s4b: // global
           call _c9s3P(R1) args: 0, res: 0, upd: 0;
       c9s3Q: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9s3P() //  [R1]
         { info_tbl: [(c9s3P,
                       label: block_c9s3P_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s3P: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9s48; else goto c9s47;
       c9s48: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9s47: // global
           (_s9pgh::I64) = call "ccall" arg hints:  [PtrHint,
                                                     ‘signed’,]  result hints:  [‘signed’] __hscore_open(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pgh::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.376545289 UTC

[section ""data" . System.Posix.Internals.c_open_closure" {
     System.Posix.Internals.c_open_closure:
         const System.Posix.Internals.c_open_info;
 },
 System.Posix.Internals.c_open_entry() //  [R2, R3, R4]
         { info_tbl: [(c9s4z,
                       label: System.Posix.Internals.c_open_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s4z: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_open1_r9pel_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.380481423 UTC

[section ""data" . c_safe_open1_r9pem_closure" {
     c_safe_open1_r9pem_closure:
         const c_safe_open1_r9pem_info;
 },
 c_safe_open1_r9pem_entry() //  [R2, R3, R4]
         { info_tbl: [(c9s4N,
                       label: c_safe_open1_r9pem_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s4N: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9s5a; else goto c9s5b;
       c9s5a: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_safe_open1_r9pem_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9s5b: // global
           I64[Sp - 24] = block_c9s4K_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9s5t; else goto c9s4L;
       u9s5t: // global
           call _c9s4K(R1) args: 0, res: 0, upd: 0;
       c9s4L: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9s4K() //  [R1]
         { info_tbl: [(c9s4K,
                       label: block_c9s4K_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s4K: // global
           I64[Sp] = block_c9s4Q_info;
           _s9pgp::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pgp::I64;
           if (R1 & 7 != 0) goto u9s5s; else goto c9s4R;
       u9s5s: // global
           call _c9s4Q(R1) args: 0, res: 0, upd: 0;
       c9s4R: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9s4Q() //  [R1]
         { info_tbl: [(c9s4Q,
                       label: block_c9s4Q_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s4Q: // global
           I64[Sp] = block_c9s4V_info;
           _s9pgr::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pgr::I64;
           if (R1 & 7 != 0) goto u9s5u; else goto c9s4W;
       u9s5u: // global
           call _c9s4V(R1) args: 0, res: 0, upd: 0;
       c9s4W: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9s4V() //  [R1]
         { info_tbl: [(c9s4V,
                       label: block_c9s4V_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s4V: // global
           _c9s52::I64 = I64[Sp + 16];
           I64[Sp + 16] = block_c9s54_info;
           _c9s51::I64 = I64[Sp + 8];
           Sp = Sp + 16;
           _c9s53::I64 = I64[R1 + 7];
           _u9s5k::P64 = CurrentTSO;
           I64[I64[_u9s5k::P64 + 24] + 16] = Sp;
           _u9s5l::I64 = CurrentNursery;
           P64[_u9s5l::I64 + 8] = Hp + 8;
           I64[_u9s5k::P64 + 104] = I64[_u9s5k::P64 + 104] - ((Hp + 8) - I64[_u9s5l::I64]);
           (_u9s5i::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [PtrHint] suspendThread(BaseReg, 0);
           (_s9pgx::I64) = call "ccall" arg hints:  [PtrHint,
                                                     ‘signed’,]  result hints:  [‘signed’] __hscore_open(_c9s51::I64, _c9s52::I64, _c9s53::I64);
           (_u9s5j::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] resumeThread(_u9s5i::I64);
           BaseReg = _u9s5j::I64;
           _u9s5m::P64 = CurrentTSO;
           _u9s5n::P64 = I64[_u9s5m::P64 + 24];
           Sp = I64[_u9s5n::P64 + 16];
           SpLim = _u9s5n::P64 + 192;
           HpAlloc = 0;
           _u9s5o::I64 = CurrentNursery;
           _u9s5p::I64 = I64[_u9s5o::I64 + 8];
           Hp = _u9s5p::I64 - 8;
           _u9s5q::I64 = I64[_u9s5o::I64];
           HpLim = _u9s5q::I64 + ((%MO_SS_Conv_W32_W64(I32[_u9s5o::I64 + 48]) << 12) - 1);
           I64[_u9s5m::P64 + 104] = I64[_u9s5m::P64 + 104] + (_u9s5p::I64 - _u9s5q::I64);
           R1 = _s9pgx::I64;
           call (I64[I64[Sp]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9s54() //  [R1]
         { info_tbl: [(c9s54,
                       label: block_c9s54_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s54: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9s5h; else goto c9s5g;
       c9s5h: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9s5g: // global
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R1));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.392796378 UTC

[section ""data" . System.Posix.Internals.c_safe_open_closure" {
     System.Posix.Internals.c_safe_open_closure:
         const System.Posix.Internals.c_safe_open_info;
 },
 System.Posix.Internals.c_safe_open_entry() //  [R2, R3, R4]
         { info_tbl: [(c9s6c,
                       label: System.Posix.Internals.c_safe_open_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s6c: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_safe_open1_r9pem_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.396488528 UTC

[section ""data" . c_fstat1_r9pen_closure" {
     c_fstat1_r9pen_closure:
         const c_fstat1_r9pen_info;
 },
 c_fstat1_r9pen_entry() //  [R2, R3]
         { info_tbl: [(c9s6q,
                       label: c_fstat1_r9pen_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s6q: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9s6F; else goto c9s6G;
       c9s6F: // global
           R3 = R3;
           R2 = R2;
           R1 = c_fstat1_r9pen_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9s6G: // global
           I64[Sp - 16] = block_c9s6n_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9s6M; else goto c9s6o;
       u9s6M: // global
           call _c9s6n(R1) args: 0, res: 0, upd: 0;
       c9s6o: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9s6n() //  [R1]
         { info_tbl: [(c9s6n,
                       label: block_c9s6n_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s6n: // global
           I64[Sp] = block_c9s6t_info;
           _s9pgE::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pgE::I64;
           if (R1 & 7 != 0) goto u9s6L; else goto c9s6u;
       u9s6L: // global
           call _c9s6t(R1) args: 0, res: 0, upd: 0;
       c9s6u: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9s6t() //  [R1]
         { info_tbl: [(c9s6t,
                       label: block_c9s6t_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s6t: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9s6K; else goto c9s6J;
       c9s6K: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9s6J: // global
           (_s9pgK::I64) = call "ccall" arg hints:  [‘signed’,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_fstat(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pgK::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.40447319 UTC

[section ""data" . System.Posix.Internals.c_fstat_closure" {
     System.Posix.Internals.c_fstat_closure:
         const System.Posix.Internals.c_fstat_info;
 },
 System.Posix.Internals.c_fstat_entry() //  [R2, R3]
         { info_tbl: [(c9s76,
                       label: System.Posix.Internals.c_fstat_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s76: // global
           R3 = R3;
           R2 = R2;
           call c_fstat1_r9pen_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.408095234 UTC

[section ""data" . lstat1_r9peo_closure" {
     lstat1_r9peo_closure:
         const lstat1_r9peo_info;
 },
 lstat1_r9peo_entry() //  [R2, R3]
         { info_tbl: [(c9s7k,
                       label: lstat1_r9peo_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s7k: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9s7z; else goto c9s7A;
       c9s7z: // global
           R3 = R3;
           R2 = R2;
           R1 = lstat1_r9peo_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9s7A: // global
           I64[Sp - 16] = block_c9s7h_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9s7G; else goto c9s7i;
       u9s7G: // global
           call _c9s7h(R1) args: 0, res: 0, upd: 0;
       c9s7i: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9s7h() //  [R1]
         { info_tbl: [(c9s7h,
                       label: block_c9s7h_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s7h: // global
           I64[Sp] = block_c9s7n_info;
           _s9pgR::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pgR::I64;
           if (R1 & 7 != 0) goto u9s7F; else goto c9s7o;
       u9s7F: // global
           call _c9s7n(R1) args: 0, res: 0, upd: 0;
       c9s7o: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9s7n() //  [R1]
         { info_tbl: [(c9s7n,
                       label: block_c9s7n_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s7n: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9s7E; else goto c9s7D;
       c9s7E: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9s7D: // global
           (_s9pgX::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_lstat(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pgX::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.415676978 UTC

[section ""data" . System.Posix.Internals.lstat_closure" {
     System.Posix.Internals.lstat_closure:
         const System.Posix.Internals.lstat_info;
 },
 System.Posix.Internals.lstat_entry() //  [R2, R3]
         { info_tbl: [(c9s80,
                       label: System.Posix.Internals.lstat_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s80: // global
           R3 = R3;
           R2 = R2;
           call lstat1_r9peo_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.419315827 UTC

[section ""data" . c_lseek1_r9pep_closure" {
     c_lseek1_r9pep_closure:
         const c_lseek1_r9pep_info;
 },
 c_lseek1_r9pep_entry() //  [R2, R3, R4]
         { info_tbl: [(c9s8e,
                       label: c_lseek1_r9pep_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s8e: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9s8w; else goto c9s8x;
       c9s8w: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_lseek1_r9pep_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9s8x: // global
           I64[Sp - 24] = block_c9s8b_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9s8E; else goto c9s8c;
       u9s8E: // global
           call _c9s8b(R1) args: 0, res: 0, upd: 0;
       c9s8c: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9s8b() //  [R1]
         { info_tbl: [(c9s8b,
                       label: block_c9s8b_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s8b: // global
           I64[Sp] = block_c9s8h_info;
           _s9ph5::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9ph5::I64;
           if (R1 & 7 != 0) goto u9s8D; else goto c9s8i;
       u9s8D: // global
           call _c9s8h(R1) args: 0, res: 0, upd: 0;
       c9s8i: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9s8h() //  [R1]
         { info_tbl: [(c9s8h,
                       label: block_c9s8h_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s8h: // global
           I64[Sp] = block_c9s8m_info;
           _s9ph7::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9ph7::I64;
           if (R1 & 7 != 0) goto u9s8F; else goto c9s8n;
       u9s8F: // global
           call _c9s8m(R1) args: 0, res: 0, upd: 0;
       c9s8n: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9s8m() //  [R1]
         { info_tbl: [(c9s8m,
                       label: block_c9s8m_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s8m: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9s8C; else goto c9s8B;
       c9s8C: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9s8B: // global
           (_s9phd::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC23ZCbaseZCSystemziPosixziInternalsZClseek(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9phd::I64;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.428379624 UTC

[section ""data" . System.Posix.Internals.c_lseek_closure" {
     System.Posix.Internals.c_lseek_closure:
         const System.Posix.Internals.c_lseek_info;
 },
 System.Posix.Internals.c_lseek_entry() //  [R2, R3, R4]
         { info_tbl: [(c9s92,
                       label: System.Posix.Internals.c_lseek_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s92: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_lseek1_r9pep_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.432300659 UTC

[section ""data" . c_access1_r9peq_closure" {
     c_access1_r9peq_closure:
         const c_access1_r9peq_info;
 },
 c_access1_r9peq_entry() //  [R2, R3]
         { info_tbl: [(c9s9g,
                       label: c_access1_r9peq_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s9g: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9s9v; else goto c9s9w;
       c9s9v: // global
           R3 = R3;
           R2 = R2;
           R1 = c_access1_r9peq_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9s9w: // global
           I64[Sp - 16] = block_c9s9d_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9s9C; else goto c9s9e;
       u9s9C: // global
           call _c9s9d(R1) args: 0, res: 0, upd: 0;
       c9s9e: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9s9d() //  [R1]
         { info_tbl: [(c9s9d,
                       label: block_c9s9d_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s9d: // global
           I64[Sp] = block_c9s9j_info;
           _s9phj::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9phj::I64;
           if (R1 & 7 != 0) goto u9s9B; else goto c9s9k;
       u9s9B: // global
           call _c9s9j(R1) args: 0, res: 0, upd: 0;
       c9s9k: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9s9j() //  [R1]
         { info_tbl: [(c9s9j,
                       label: block_c9s9j_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s9j: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9s9A; else goto c9s9z;
       c9s9A: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9s9z: // global
           (_s9php::I64) = call "ccall" arg hints:  [PtrHint,
                                                     ‘signed’]  result hints:  [‘signed’] access(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9php::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.440780352 UTC

[section ""data" . System.Posix.Internals.c_access_closure" {
     System.Posix.Internals.c_access_closure:
         const System.Posix.Internals.c_access_info;
 },
 System.Posix.Internals.c_access_entry() //  [R2, R3]
         { info_tbl: [(c9s9W,
                       label: System.Posix.Internals.c_access_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9s9W: // global
           R3 = R3;
           R2 = R2;
           call c_access1_r9peq_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.444428893 UTC

[section ""data" . c_chmod1_r9per_closure" {
     c_chmod1_r9per_closure:
         const c_chmod1_r9per_info;
 },
 c_chmod1_r9per_entry() //  [R2, R3]
         { info_tbl: [(c9saa,
                       label: c_chmod1_r9per_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9saa: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9sap; else goto c9saq;
       c9sap: // global
           R3 = R3;
           R2 = R2;
           R1 = c_chmod1_r9per_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9saq: // global
           I64[Sp - 16] = block_c9sa7_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9saw; else goto c9sa8;
       u9saw: // global
           call _c9sa7(R1) args: 0, res: 0, upd: 0;
       c9sa8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sa7() //  [R1]
         { info_tbl: [(c9sa7,
                       label: block_c9sa7_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sa7: // global
           I64[Sp] = block_c9sad_info;
           _s9phw::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9phw::I64;
           if (R1 & 7 != 0) goto u9sav; else goto c9sae;
       u9sav: // global
           call _c9sad(R1) args: 0, res: 0, upd: 0;
       c9sae: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sad() //  [R1]
         { info_tbl: [(c9sad,
                       label: block_c9sad_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sad: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sau; else goto c9sat;
       c9sau: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sat: // global
           (_s9phC::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [‘signed’] chmod(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9phC::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.452041853 UTC

[section ""data" . System.Posix.Internals.c_chmod_closure" {
     System.Posix.Internals.c_chmod_closure:
         const System.Posix.Internals.c_chmod_info;
 },
 System.Posix.Internals.c_chmod_entry() //  [R2, R3]
         { info_tbl: [(c9saQ,
                       label: System.Posix.Internals.c_chmod_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9saQ: // global
           R3 = R3;
           R2 = R2;
           call c_chmod1_r9per_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.455513236 UTC

[section ""data" . c_close1_r9pes_closure" {
     c_close1_r9pes_closure:
         const c_close1_r9pes_info;
 },
 c_close1_r9pes_entry() //  [R2]
         { info_tbl: [(c9sb4,
                       label: c_close1_r9pes_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sb4: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9sbd; else goto c9sbe;
       c9sbd: // global
           R2 = R2;
           R1 = c_close1_r9pes_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9sbe: // global
           I64[Sp - 8] = block_c9sb1_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9sbi; else goto c9sb2;
       u9sbi: // global
           call _c9sb1(R1) args: 0, res: 0, upd: 0;
       c9sb2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sb1() //  [R1]
         { info_tbl: [(c9sb1,
                       label: block_c9sb1_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sb1: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sbh; else goto c9sbg;
       c9sbh: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sbg: // global
           (_s9phM::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [‘signed’] close(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9phM::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.461073255 UTC

[section ""data" . System.Posix.Internals.c_close_closure" {
     System.Posix.Internals.c_close_closure:
         const System.Posix.Internals.c_close_info;
 },
 System.Posix.Internals.c_close_entry() //  [R2]
         { info_tbl: [(c9sby,
                       label: System.Posix.Internals.c_close_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sby: // global
           R2 = R2;
           call c_close1_r9pes_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.464720214 UTC

[section ""data" . c_creat1_r9pet_closure" {
     c_creat1_r9pet_closure:
         const c_creat1_r9pet_info;
 },
 c_creat1_r9pet_entry() //  [R2, R3]
         { info_tbl: [(c9sbM,
                       label: c_creat1_r9pet_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sbM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9sc1; else goto c9sc2;
       c9sc1: // global
           R3 = R3;
           R2 = R2;
           R1 = c_creat1_r9pet_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9sc2: // global
           I64[Sp - 16] = block_c9sbJ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9sc8; else goto c9sbK;
       u9sc8: // global
           call _c9sbJ(R1) args: 0, res: 0, upd: 0;
       c9sbK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sbJ() //  [R1]
         { info_tbl: [(c9sbJ,
                       label: block_c9sbJ_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sbJ: // global
           I64[Sp] = block_c9sbP_info;
           _s9phT::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9phT::I64;
           if (R1 & 7 != 0) goto u9sc7; else goto c9sbQ;
       u9sc7: // global
           call _c9sbP(R1) args: 0, res: 0, upd: 0;
       c9sbQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sbP() //  [R1]
         { info_tbl: [(c9sbP,
                       label: block_c9sbP_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sbP: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sc6; else goto c9sc5;
       c9sc6: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sc5: // global
           (_s9phZ::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [‘signed’] creat(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9phZ::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.472651896 UTC

[section ""data" . System.Posix.Internals.c_creat_closure" {
     System.Posix.Internals.c_creat_closure:
         const System.Posix.Internals.c_creat_info;
 },
 System.Posix.Internals.c_creat_entry() //  [R2, R3]
         { info_tbl: [(c9scs,
                       label: System.Posix.Internals.c_creat_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9scs: // global
           R3 = R3;
           R2 = R2;
           call c_creat1_r9pet_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.476164818 UTC

[section ""data" . c_dup1_r9peu_closure" {
     c_dup1_r9peu_closure:
         const c_dup1_r9peu_info;
 },
 c_dup1_r9peu_entry() //  [R2]
         { info_tbl: [(c9scG,
                       label: c_dup1_r9peu_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9scG: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9scP; else goto c9scQ;
       c9scP: // global
           R2 = R2;
           R1 = c_dup1_r9peu_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9scQ: // global
           I64[Sp - 8] = block_c9scD_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9scU; else goto c9scE;
       u9scU: // global
           call _c9scD(R1) args: 0, res: 0, upd: 0;
       c9scE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9scD() //  [R1]
         { info_tbl: [(c9scD,
                       label: block_c9scD_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9scD: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9scT; else goto c9scS;
       c9scT: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9scS: // global
           (_s9pi9::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [‘signed’] dup(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pi9::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.482505803 UTC

[section ""data" . System.Posix.Internals.c_dup_closure" {
     System.Posix.Internals.c_dup_closure:
         const System.Posix.Internals.c_dup_info;
 },
 System.Posix.Internals.c_dup_entry() //  [R2]
         { info_tbl: [(c9sda,
                       label: System.Posix.Internals.c_dup_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sda: // global
           R2 = R2;
           call c_dup1_r9peu_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.486084534 UTC

[section ""data" . c_dup3_r9pev_closure" {
     c_dup3_r9pev_closure:
         const c_dup3_r9pev_info;
 },
 c_dup3_r9pev_entry() //  [R2, R3]
         { info_tbl: [(c9sdo,
                       label: c_dup3_r9pev_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sdo: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9sdD; else goto c9sdE;
       c9sdD: // global
           R3 = R3;
           R2 = R2;
           R1 = c_dup3_r9pev_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9sdE: // global
           I64[Sp - 16] = block_c9sdl_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9sdK; else goto c9sdm;
       u9sdK: // global
           call _c9sdl(R1) args: 0, res: 0, upd: 0;
       c9sdm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sdl() //  [R1]
         { info_tbl: [(c9sdl,
                       label: block_c9sdl_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sdl: // global
           I64[Sp] = block_c9sdr_info;
           _s9pig::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pig::I64;
           if (R1 & 7 != 0) goto u9sdJ; else goto c9sds;
       u9sdJ: // global
           call _c9sdr(R1) args: 0, res: 0, upd: 0;
       c9sds: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sdr() //  [R1]
         { info_tbl: [(c9sdr,
                       label: block_c9sdr_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sdr: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sdI; else goto c9sdH;
       c9sdI: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sdH: // global
           (_s9pim::I64) = call "ccall" arg hints:  [‘signed’,
                                                     ‘signed’]  result hints:  [‘signed’] dup2(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pim::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.493401349 UTC

[section ""data" . System.Posix.Internals.c_dup2_closure" {
     System.Posix.Internals.c_dup2_closure:
         const System.Posix.Internals.c_dup2_info;
 },
 System.Posix.Internals.c_dup2_entry() //  [R2, R3]
         { info_tbl: [(c9se4,
                       label: System.Posix.Internals.c_dup2_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9se4: // global
           R3 = R3;
           R2 = R2;
           call c_dup3_r9pev_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.496870899 UTC

[section ""data" . c_isatty1_r9pew_closure" {
     c_isatty1_r9pew_closure:
         const c_isatty1_r9pew_info;
 },
 c_isatty1_r9pew_entry() //  [R2]
         { info_tbl: [(c9sei,
                       label: c_isatty1_r9pew_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sei: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9ser; else goto c9ses;
       c9ser: // global
           R2 = R2;
           R1 = c_isatty1_r9pew_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9ses: // global
           I64[Sp - 8] = block_c9sef_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9sew; else goto c9seg;
       u9sew: // global
           call _c9sef(R1) args: 0, res: 0, upd: 0;
       c9seg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sef() //  [R1]
         { info_tbl: [(c9sef,
                       label: block_c9sef_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sef: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sev; else goto c9seu;
       c9sev: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9seu: // global
           (_s9piw::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [‘signed’] isatty(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9piw::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.503668261 UTC

[section ""data" . System.Posix.Internals.c_isatty_closure" {
     System.Posix.Internals.c_isatty_closure:
         const System.Posix.Internals.c_isatty_info;
 },
 System.Posix.Internals.c_isatty_entry() //  [R2]
         { info_tbl: [(c9seM,
                       label: System.Posix.Internals.c_isatty_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9seM: // global
           R2 = R2;
           call c_isatty1_r9pew_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.507439174 UTC

[section ""data" . c_read1_r9pex_closure" {
     c_read1_r9pex_closure:
         const c_read1_r9pex_info;
 },
 c_read1_r9pex_entry() //  [R2, R3, R4]
         { info_tbl: [(c9sf0,
                       label: c_read1_r9pex_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sf0: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9sfi; else goto c9sfj;
       c9sfi: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_read1_r9pex_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9sfj: // global
           I64[Sp - 24] = block_c9seX_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9sfq; else goto c9seY;
       u9sfq: // global
           call _c9seX(R1) args: 0, res: 0, upd: 0;
       c9seY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9seX() //  [R1]
         { info_tbl: [(c9seX,
                       label: block_c9seX_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9seX: // global
           I64[Sp] = block_c9sf3_info;
           _s9piE::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9piE::I64;
           if (R1 & 7 != 0) goto u9sfp; else goto c9sf4;
       u9sfp: // global
           call _c9sf3(R1) args: 0, res: 0, upd: 0;
       c9sf4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sf3() //  [R1]
         { info_tbl: [(c9sf3,
                       label: block_c9sf3_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sf3: // global
           I64[Sp] = block_c9sf8_info;
           _s9piG::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9piG::I64;
           if (R1 & 7 != 0) goto u9sfr; else goto c9sf9;
       u9sfr: // global
           call _c9sf8(R1) args: 0, res: 0, upd: 0;
       c9sf9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sf8() //  [R1]
         { info_tbl: [(c9sf8,
                       label: block_c9sf8_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sf8: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sfo; else goto c9sfn;
       c9sfo: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sfn: // global
           (_s9piM::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC22ZCbaseZCSystemziPosixziInternalsZCread(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9piM::I64;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.517517908 UTC

[section ""data" . System.Posix.Internals.c_read_closure" {
     System.Posix.Internals.c_read_closure:
         const System.Posix.Internals.c_read_info;
 },
 System.Posix.Internals.c_read_entry() //  [R2, R3, R4]
         { info_tbl: [(c9sfO,
                       label: System.Posix.Internals.c_read_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sfO: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_read1_r9pex_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.521355307 UTC

[section ""data" . c_safe_read1_r9pey_closure" {
     c_safe_read1_r9pey_closure:
         const c_safe_read1_r9pey_info;
 },
 c_safe_read1_r9pey_entry() //  [R2, R3, R4]
         { info_tbl: [(c9sg2,
                       label: c_safe_read1_r9pey_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sg2: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9sgm; else goto c9sgn;
       c9sgm: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_safe_read1_r9pey_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9sgn: // global
           I64[Sp - 24] = block_c9sfZ_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9sgF; else goto c9sg0;
       u9sgF: // global
           call _c9sfZ(R1) args: 0, res: 0, upd: 0;
       c9sg0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sfZ() //  [R1]
         { info_tbl: [(c9sfZ,
                       label: block_c9sfZ_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sfZ: // global
           I64[Sp] = block_c9sg5_info;
           _s9piT::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9piT::I64;
           if (R1 & 7 != 0) goto u9sgE; else goto c9sg6;
       u9sgE: // global
           call _c9sg5(R1) args: 0, res: 0, upd: 0;
       c9sg6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sg5() //  [R1]
         { info_tbl: [(c9sg5,
                       label: block_c9sg5_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sg5: // global
           I64[Sp] = block_c9sga_info;
           _s9piV::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9piV::I64;
           if (R1 & 7 != 0) goto u9sgG; else goto c9sgb;
       u9sgG: // global
           call _c9sga(R1) args: 0, res: 0, upd: 0;
       c9sgb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sga() //  [R1]
         { info_tbl: [(c9sga,
                       label: block_c9sga_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sga: // global
           _c9sgh::I64 = I64[Sp + 16];
           I64[Sp + 16] = block_c9sgj_info;
           _c9sgg::I64 = I64[Sp + 8];
           Sp = Sp + 16;
           _c9sgi::I64 = I64[R1 + 7];
           _u9sgw::P64 = CurrentTSO;
           I64[I64[_u9sgw::P64 + 24] + 16] = Sp;
           _u9sgx::I64 = CurrentNursery;
           P64[_u9sgx::I64 + 8] = Hp + 8;
           I64[_u9sgw::P64 + 104] = I64[_u9sgw::P64 + 104] - ((Hp + 8) - I64[_u9sgx::I64]);
           (_u9sgu::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [PtrHint] suspendThread(BaseReg, 0);
           (_s9pj1::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC21ZCbaseZCSystemziPosixziInternalsZCread(_c9sgg::I64, _c9sgh::I64, _c9sgi::I64);
           (_u9sgv::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] resumeThread(_u9sgu::I64);
           BaseReg = _u9sgv::I64;
           _u9sgy::P64 = CurrentTSO;
           _u9sgz::P64 = I64[_u9sgy::P64 + 24];
           Sp = I64[_u9sgz::P64 + 16];
           SpLim = _u9sgz::P64 + 192;
           HpAlloc = 0;
           _u9sgA::I64 = CurrentNursery;
           _u9sgB::I64 = I64[_u9sgA::I64 + 8];
           Hp = _u9sgB::I64 - 8;
           _u9sgC::I64 = I64[_u9sgA::I64];
           HpLim = _u9sgC::I64 + ((%MO_SS_Conv_W32_W64(I32[_u9sgA::I64 + 48]) << 12) - 1);
           I64[_u9sgy::P64 + 104] = I64[_u9sgy::P64 + 104] + (_u9sgB::I64 - _u9sgC::I64);
           R1 = _s9pj1::I64;
           call (I64[I64[Sp]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sgj() //  [R1]
         { info_tbl: [(c9sgj,
                       label: block_c9sgj_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sgj: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sgt; else goto c9sgs;
       c9sgt: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9sgs: // global
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.533700531 UTC

[section ""data" . System.Posix.Internals.c_safe_read_closure" {
     System.Posix.Internals.c_safe_read_closure:
         const System.Posix.Internals.c_safe_read_info;
 },
 System.Posix.Internals.c_safe_read_entry() //  [R2, R3, R4]
         { info_tbl: [(c9shn,
                       label: System.Posix.Internals.c_safe_read_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9shn: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_safe_read1_r9pey_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.537301576 UTC

[section ""data" . c_umask1_r9pez_closure" {
     c_umask1_r9pez_closure:
         const c_umask1_r9pez_info;
 },
 c_umask1_r9pez_entry() //  [R2]
         { info_tbl: [(c9shB,
                       label: c_umask1_r9pez_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9shB: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9shK; else goto c9shL;
       c9shK: // global
           R2 = R2;
           R1 = c_umask1_r9pez_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9shL: // global
           I64[Sp - 8] = block_c9shy_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9shP; else goto c9shz;
       u9shP: // global
           call _c9shy(R1) args: 0, res: 0, upd: 0;
       c9shz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9shy() //  [R1]
         { info_tbl: [(c9shy,
                       label: block_c9shy_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9shy: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9shO; else goto c9shN;
       c9shO: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9shN: // global
           (_s9pja::I64) = call "ccall" arg hints:  []  result hints:  [] umask(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Word.W32#_con_info;
           I64[Hp] = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pja::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.543831682 UTC

[section ""data" . System.Posix.Internals.c_umask_closure" {
     System.Posix.Internals.c_umask_closure:
         const System.Posix.Internals.c_umask_info;
 },
 System.Posix.Internals.c_umask_entry() //  [R2]
         { info_tbl: [(c9si5,
                       label: System.Posix.Internals.c_umask_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9si5: // global
           R2 = R2;
           call c_umask1_r9pez_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.547431873 UTC

[section ""data" . c_write1_r9peA_closure" {
     c_write1_r9peA_closure:
         const c_write1_r9peA_info;
 },
 c_write1_r9peA_entry() //  [R2, R3, R4]
         { info_tbl: [(c9sij,
                       label: c_write1_r9peA_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sij: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9siB; else goto c9siC;
       c9siB: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_write1_r9peA_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9siC: // global
           I64[Sp - 24] = block_c9sig_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9siJ; else goto c9sih;
       u9siJ: // global
           call _c9sig(R1) args: 0, res: 0, upd: 0;
       c9sih: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sig() //  [R1]
         { info_tbl: [(c9sig,
                       label: block_c9sig_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sig: // global
           I64[Sp] = block_c9sim_info;
           _s9pji::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pji::I64;
           if (R1 & 7 != 0) goto u9siI; else goto c9sin;
       u9siI: // global
           call _c9sim(R1) args: 0, res: 0, upd: 0;
       c9sin: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sim() //  [R1]
         { info_tbl: [(c9sim,
                       label: block_c9sim_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sim: // global
           I64[Sp] = block_c9sir_info;
           _s9pjk::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pjk::I64;
           if (R1 & 7 != 0) goto u9siK; else goto c9sis;
       u9siK: // global
           call _c9sir(R1) args: 0, res: 0, upd: 0;
       c9sis: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sir() //  [R1]
         { info_tbl: [(c9sir,
                       label: block_c9sir_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sir: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9siH; else goto c9siG;
       c9siH: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9siG: // global
           (_s9pjq::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9pjq::I64;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.556890635 UTC

[section ""data" . System.Posix.Internals.c_write_closure" {
     System.Posix.Internals.c_write_closure:
         const System.Posix.Internals.c_write_info;
 },
 System.Posix.Internals.c_write_entry() //  [R2, R3, R4]
         { info_tbl: [(c9sj7,
                       label: System.Posix.Internals.c_write_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sj7: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_write1_r9peA_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.560694004 UTC

[section ""data" . c_safe_write1_r9peB_closure" {
     c_safe_write1_r9peB_closure:
         const c_safe_write1_r9peB_info;
 },
 c_safe_write1_r9peB_entry() //  [R2, R3, R4]
         { info_tbl: [(c9sjl,
                       label: c_safe_write1_r9peB_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sjl: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9sjF; else goto c9sjG;
       c9sjF: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_safe_write1_r9peB_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9sjG: // global
           I64[Sp - 24] = block_c9sji_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9sjY; else goto c9sjj;
       u9sjY: // global
           call _c9sji(R1) args: 0, res: 0, upd: 0;
       c9sjj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sji() //  [R1]
         { info_tbl: [(c9sji,
                       label: block_c9sji_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sji: // global
           I64[Sp] = block_c9sjo_info;
           _s9pjx::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pjx::I64;
           if (R1 & 7 != 0) goto u9sjX; else goto c9sjp;
       u9sjX: // global
           call _c9sjo(R1) args: 0, res: 0, upd: 0;
       c9sjp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sjo() //  [R1]
         { info_tbl: [(c9sjo,
                       label: block_c9sjo_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sjo: // global
           I64[Sp] = block_c9sjt_info;
           _s9pjz::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pjz::I64;
           if (R1 & 7 != 0) goto u9sjZ; else goto c9sju;
       u9sjZ: // global
           call _c9sjt(R1) args: 0, res: 0, upd: 0;
       c9sju: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sjt() //  [R1]
         { info_tbl: [(c9sjt,
                       label: block_c9sjt_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sjt: // global
           _c9sjA::I64 = I64[Sp + 16];
           I64[Sp + 16] = block_c9sjC_info;
           _c9sjz::I64 = I64[Sp + 8];
           Sp = Sp + 16;
           _c9sjB::I64 = I64[R1 + 7];
           _u9sjP::P64 = CurrentTSO;
           I64[I64[_u9sjP::P64 + 24] + 16] = Sp;
           _u9sjQ::I64 = CurrentNursery;
           P64[_u9sjQ::I64 + 8] = Hp + 8;
           I64[_u9sjP::P64 + 104] = I64[_u9sjP::P64 + 104] - ((Hp + 8) - I64[_u9sjQ::I64]);
           (_u9sjN::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [PtrHint] suspendThread(BaseReg, 0);
           (_s9pjF::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC19ZCbaseZCSystemziPosixziInternalsZCwrite(_c9sjz::I64, _c9sjA::I64, _c9sjB::I64);
           (_u9sjO::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] resumeThread(_u9sjN::I64);
           BaseReg = _u9sjO::I64;
           _u9sjR::P64 = CurrentTSO;
           _u9sjS::P64 = I64[_u9sjR::P64 + 24];
           Sp = I64[_u9sjS::P64 + 16];
           SpLim = _u9sjS::P64 + 192;
           HpAlloc = 0;
           _u9sjT::I64 = CurrentNursery;
           _u9sjU::I64 = I64[_u9sjT::I64 + 8];
           Hp = _u9sjU::I64 - 8;
           _u9sjV::I64 = I64[_u9sjT::I64];
           HpLim = _u9sjV::I64 + ((%MO_SS_Conv_W32_W64(I32[_u9sjT::I64 + 48]) << 12) - 1);
           I64[_u9sjR::P64 + 104] = I64[_u9sjR::P64 + 104] + (_u9sjU::I64 - _u9sjV::I64);
           R1 = _s9pjF::I64;
           call (I64[I64[Sp]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sjC() //  [R1]
         { info_tbl: [(c9sjC,
                       label: block_c9sjC_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sjC: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sjM; else goto c9sjL;
       c9sjM: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9sjL: // global
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.572448295 UTC

[section ""data" . System.Posix.Internals.c_safe_write_closure" {
     System.Posix.Internals.c_safe_write_closure:
         const System.Posix.Internals.c_safe_write_info;
 },
 System.Posix.Internals.c_safe_write_entry() //  [R2, R3, R4]
         { info_tbl: [(c9skG,
                       label: System.Posix.Internals.c_safe_write_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9skG: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_safe_write1_r9peB_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.57653825 UTC

[section ""data" . c_pipe1_r9peC_closure" {
     c_pipe1_r9peC_closure:
         const c_pipe1_r9peC_info;
 },
 c_pipe1_r9peC_entry() //  [R2]
         { info_tbl: [(c9skU,
                       label: c_pipe1_r9peC_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9skU: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9sl3; else goto c9sl4;
       c9sl3: // global
           R2 = R2;
           R1 = c_pipe1_r9peC_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9sl4: // global
           I64[Sp - 8] = block_c9skR_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9sl8; else goto c9skS;
       u9sl8: // global
           call _c9skR(R1) args: 0, res: 0, upd: 0;
       c9skS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9skR() //  [R1]
         { info_tbl: [(c9skR,
                       label: block_c9skR_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9skR: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sl7; else goto c9sl6;
       c9sl7: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sl6: // global
           (_s9pjO::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] pipe(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pjO::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.583902398 UTC

[section ""data" . System.Posix.Internals.c_pipe_closure" {
     System.Posix.Internals.c_pipe_closure:
         const System.Posix.Internals.c_pipe_info;
 },
 System.Posix.Internals.c_pipe_entry() //  [R2]
         { info_tbl: [(c9slo,
                       label: System.Posix.Internals.c_pipe_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9slo: // global
           R2 = R2;
           call c_pipe1_r9peC_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.587610701 UTC

[section ""data" . c_unlink1_r9peD_closure" {
     c_unlink1_r9peD_closure:
         const c_unlink1_r9peD_info;
 },
 c_unlink1_r9peD_entry() //  [R2]
         { info_tbl: [(c9slC,
                       label: c_unlink1_r9peD_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9slC: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9slL; else goto c9slM;
       c9slL: // global
           R2 = R2;
           R1 = c_unlink1_r9peD_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9slM: // global
           I64[Sp - 8] = block_c9slz_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9slQ; else goto c9slA;
       u9slQ: // global
           call _c9slz(R1) args: 0, res: 0, upd: 0;
       c9slA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9slz() //  [R1]
         { info_tbl: [(c9slz,
                       label: block_c9slz_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9slz: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9slP; else goto c9slO;
       c9slP: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9slO: // global
           (_s9pjY::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] unlink(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pjY::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.593715578 UTC

[section ""data" . System.Posix.Internals.c_unlink_closure" {
     System.Posix.Internals.c_unlink_closure:
         const System.Posix.Internals.c_unlink_info;
 },
 System.Posix.Internals.c_unlink_entry() //  [R2]
         { info_tbl: [(c9sm6,
                       label: System.Posix.Internals.c_unlink_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sm6: // global
           R2 = R2;
           call c_unlink1_r9peD_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.597351932 UTC

[section ""data" . c_utime1_r9peE_closure" {
     c_utime1_r9peE_closure:
         const c_utime1_r9peE_info;
 },
 c_utime1_r9peE_entry() //  [R2, R3]
         { info_tbl: [(c9smk,
                       label: c_utime1_r9peE_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9smk: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9smz; else goto c9smA;
       c9smz: // global
           R3 = R3;
           R2 = R2;
           R1 = c_utime1_r9peE_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9smA: // global
           I64[Sp - 16] = block_c9smh_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9smG; else goto c9smi;
       u9smG: // global
           call _c9smh(R1) args: 0, res: 0, upd: 0;
       c9smi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9smh() //  [R1]
         { info_tbl: [(c9smh,
                       label: block_c9smh_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9smh: // global
           I64[Sp] = block_c9smn_info;
           _s9pk5::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pk5::I64;
           if (R1 & 7 != 0) goto u9smF; else goto c9smo;
       u9smF: // global
           call _c9smn(R1) args: 0, res: 0, upd: 0;
       c9smo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9smn() //  [R1]
         { info_tbl: [(c9smn,
                       label: block_c9smn_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9smn: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9smE; else goto c9smD;
       c9smE: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9smD: // global
           (_s9pkb::I64) = call "capi" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC18ZCbaseZCSystemziPosixziInternalsZCutime(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pkb::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.604652062 UTC

[section ""data" . System.Posix.Internals.c_utime_closure" {
     System.Posix.Internals.c_utime_closure:
         const System.Posix.Internals.c_utime_info;
 },
 System.Posix.Internals.c_utime_entry() //  [R2, R3]
         { info_tbl: [(c9sn0,
                       label: System.Posix.Internals.c_utime_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sn0: // global
           R3 = R3;
           R2 = R2;
           call c_utime1_r9peE_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.608160328 UTC

[section ""data" . c_getpid1_r9peF_closure" {
     c_getpid1_r9peF_closure:
         const c_getpid1_r9peF_info;
 },
 c_getpid1_r9peF_entry() //  []
         { info_tbl: [(c9sne,
                       label: c_getpid1_r9peF_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sne: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9snk; else goto c9snj;
       c9snk: // global
           HpAlloc = 16;
           R1 = c_getpid1_r9peF_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9snj: // global
           (_s9pki::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] getpid();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pki::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.613787249 UTC

[section ""data" . System.Posix.Internals.c_getpid_closure" {
     System.Posix.Internals.c_getpid_closure:
         const System.Posix.Internals.c_getpid_info;
 },
 System.Posix.Internals.c_getpid_entry() //  []
         { info_tbl: [(c9snv,
                       label: System.Posix.Internals.c_getpid_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9snv: // global
           call c_getpid1_r9peF_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.617486877 UTC

[section ""data" . c_stat1_r9peG_closure" {
     c_stat1_r9peG_closure:
         const c_stat1_r9peG_info;
 },
 c_stat1_r9peG_entry() //  [R2, R3]
         { info_tbl: [(c9snJ,
                       label: c_stat1_r9peG_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9snJ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9snY; else goto c9snZ;
       c9snY: // global
           R3 = R3;
           R2 = R2;
           R1 = c_stat1_r9peG_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9snZ: // global
           I64[Sp - 16] = block_c9snG_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9so5; else goto c9snH;
       u9so5: // global
           call _c9snG(R1) args: 0, res: 0, upd: 0;
       c9snH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9snG() //  [R1]
         { info_tbl: [(c9snG,
                       label: block_c9snG_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9snG: // global
           I64[Sp] = block_c9snM_info;
           _s9pkp::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pkp::I64;
           if (R1 & 7 != 0) goto u9so4; else goto c9snN;
       u9so4: // global
           call _c9snM(R1) args: 0, res: 0, upd: 0;
       c9snN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9snM() //  [R1]
         { info_tbl: [(c9snM,
                       label: block_c9snM_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9snM: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9so3; else goto c9so2;
       c9so3: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9so2: // global
           (_s9pkv::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_stat(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pkv::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.625147277 UTC

[section ""data" . System.Posix.Internals.c_stat_closure" {
     System.Posix.Internals.c_stat_closure:
         const System.Posix.Internals.c_stat_info;
 },
 System.Posix.Internals.c_stat_entry() //  [R2, R3]
         { info_tbl: [(c9sop,
                       label: System.Posix.Internals.c_stat_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sop: // global
           R3 = R3;
           R2 = R2;
           call c_stat1_r9peG_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.628953234 UTC

[section ""data" . c_ftruncate1_r9peH_closure" {
     c_ftruncate1_r9peH_closure:
         const c_ftruncate1_r9peH_info;
 },
 c_ftruncate1_r9peH_entry() //  [R2, R3]
         { info_tbl: [(c9soD,
                       label: c_ftruncate1_r9peH_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9soD: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9soS; else goto c9soT;
       c9soS: // global
           R3 = R3;
           R2 = R2;
           R1 = c_ftruncate1_r9peH_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9soT: // global
           I64[Sp - 16] = block_c9soA_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9soZ; else goto c9soB;
       u9soZ: // global
           call _c9soA(R1) args: 0, res: 0, upd: 0;
       c9soB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9soA() //  [R1]
         { info_tbl: [(c9soA,
                       label: block_c9soA_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9soA: // global
           I64[Sp] = block_c9soG_info;
           _s9pkC::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pkC::I64;
           if (R1 & 7 != 0) goto u9soY; else goto c9soH;
       u9soY: // global
           call _c9soG(R1) args: 0, res: 0, upd: 0;
       c9soH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9soG() //  [R1]
         { info_tbl: [(c9soG,
                       label: block_c9soG_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9soG: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9soX; else goto c9soW;
       c9soX: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9soW: // global
           (_s9pkI::I64) = call "ccall" arg hints:  [‘signed’,
                                                     ‘signed’]  result hints:  [‘signed’] __hscore_ftruncate(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pkI::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.636894632 UTC

[section ""data" . System.Posix.Internals.c_ftruncate_closure" {
     System.Posix.Internals.c_ftruncate_closure:
         const System.Posix.Internals.c_ftruncate_info;
 },
 System.Posix.Internals.c_ftruncate_entry() //  [R2, R3]
         { info_tbl: [(c9spj,
                       label: System.Posix.Internals.c_ftruncate_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9spj: // global
           R3 = R3;
           R2 = R2;
           call c_ftruncate1_r9peH_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.640519995 UTC

[section ""data" . c_fcntl_read1_r9peI_closure" {
     c_fcntl_read1_r9peI_closure:
         const c_fcntl_read1_r9peI_info;
 },
 c_fcntl_read1_r9peI_entry() //  [R2, R3]
         { info_tbl: [(c9spx,
                       label: c_fcntl_read1_r9peI_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9spx: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9spM; else goto c9spN;
       c9spM: // global
           R3 = R3;
           R2 = R2;
           R1 = c_fcntl_read1_r9peI_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9spN: // global
           I64[Sp - 16] = block_c9spu_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9spT; else goto c9spv;
       u9spT: // global
           call _c9spu(R1) args: 0, res: 0, upd: 0;
       c9spv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9spu() //  [R1]
         { info_tbl: [(c9spu,
                       label: block_c9spu_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9spu: // global
           I64[Sp] = block_c9spA_info;
           _s9pkP::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pkP::I64;
           if (R1 & 7 != 0) goto u9spS; else goto c9spB;
       u9spS: // global
           call _c9spA(R1) args: 0, res: 0, upd: 0;
       c9spB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9spA() //  [R1]
         { info_tbl: [(c9spA,
                       label: block_c9spA_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9spA: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9spR; else goto c9spQ;
       c9spR: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9spQ: // global
           (_s9pkV::I64) = call "capi" arg hints:  [‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC17ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pkV::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.64921448 UTC

[section ""data" . System.Posix.Internals.c_fcntl_read_closure" {
     System.Posix.Internals.c_fcntl_read_closure:
         const System.Posix.Internals.c_fcntl_read_info;
 },
 System.Posix.Internals.c_fcntl_read_entry() //  [R2, R3]
         { info_tbl: [(c9sqd,
                       label: System.Posix.Internals.c_fcntl_read_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sqd: // global
           R3 = R3;
           R2 = R2;
           call c_fcntl_read1_r9peI_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.652882774 UTC

[section ""data" . c_fcntl_write1_r9peJ_closure" {
     c_fcntl_write1_r9peJ_closure:
         const c_fcntl_write1_r9peJ_info;
 },
 c_fcntl_write1_r9peJ_entry() //  [R2, R3, R4]
         { info_tbl: [(c9sqr,
                       label: c_fcntl_write1_r9peJ_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sqr: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9sqM; else goto c9sqN;
       c9sqM: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_fcntl_write1_r9peJ_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9sqN: // global
           I64[Sp - 24] = block_c9sqo_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9sqU; else goto c9sqp;
       u9sqU: // global
           call _c9sqo(R1) args: 0, res: 0, upd: 0;
       c9sqp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sqo() //  [R1]
         { info_tbl: [(c9sqo,
                       label: block_c9sqo_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sqo: // global
           I64[Sp] = block_c9squ_info;
           _s9pl3::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pl3::I64;
           if (R1 & 7 != 0) goto u9sqT; else goto c9sqv;
       u9sqT: // global
           call _c9squ(R1) args: 0, res: 0, upd: 0;
       c9sqv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9squ() //  [R1]
         { info_tbl: [(c9squ,
                       label: block_c9squ_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9squ: // global
           I64[Sp] = block_c9sqz_info;
           _s9pl5::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pl5::I64;
           if (R1 & 7 != 0) goto u9sqV; else goto c9sqA;
       u9sqV: // global
           call _c9sqz(R1) args: 0, res: 0, upd: 0;
       c9sqA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sqz() //  [R1]
         { info_tbl: [(c9sqz,
                       label: block_c9sqz_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sqz: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sqS; else goto c9sqR;
       c9sqS: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sqR: // global
           (_s9plb::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9plb::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.662380885 UTC

[section ""data" . System.Posix.Internals.c_fcntl_write_closure" {
     System.Posix.Internals.c_fcntl_write_closure:
         const System.Posix.Internals.c_fcntl_write_info;
 },
 System.Posix.Internals.c_fcntl_write_entry() //  [R2, R3, R4]
         { info_tbl: [(c9srj,
                       label: System.Posix.Internals.c_fcntl_write_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9srj: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_fcntl_write1_r9peJ_entry(R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.666129676 UTC

[section ""data" . c_fcntl_lock1_r9peK_closure" {
     c_fcntl_lock1_r9peK_closure:
         const c_fcntl_lock1_r9peK_info;
 },
 c_fcntl_lock1_r9peK_entry() //  [R2, R3, R4]
         { info_tbl: [(c9srx,
                       label: c_fcntl_lock1_r9peK_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9srx: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9srS; else goto c9srT;
       c9srS: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_fcntl_lock1_r9peK_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9srT: // global
           I64[Sp - 24] = block_c9sru_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9ss0; else goto c9srv;
       u9ss0: // global
           call _c9sru(R1) args: 0, res: 0, upd: 0;
       c9srv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sru() //  [R1]
         { info_tbl: [(c9sru,
                       label: block_c9sru_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sru: // global
           I64[Sp] = block_c9srA_info;
           _s9plj::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9plj::I64;
           if (R1 & 7 != 0) goto u9srZ; else goto c9srB;
       u9srZ: // global
           call _c9srA(R1) args: 0, res: 0, upd: 0;
       c9srB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9srA() //  [R1]
         { info_tbl: [(c9srA,
                       label: block_c9srA_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9srA: // global
           I64[Sp] = block_c9srF_info;
           _s9pll::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pll::I64;
           if (R1 & 7 != 0) goto u9ss1; else goto c9srG;
       u9ss1: // global
           call _c9srF(R1) args: 0, res: 0, upd: 0;
       c9srG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9srF() //  [R1]
         { info_tbl: [(c9srF,
                       label: block_c9srF_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9srF: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9srY; else goto c9srX;
       c9srY: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9srX: // global
           (_s9plr::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC15ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9plr::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.675527113 UTC

[section ""data" . System.Posix.Internals.c_fcntl_lock_closure" {
     System.Posix.Internals.c_fcntl_lock_closure:
         const System.Posix.Internals.c_fcntl_lock_info;
 },
 System.Posix.Internals.c_fcntl_lock_entry() //  [R2, R3, R4]
         { info_tbl: [(c9ssp,
                       label: System.Posix.Internals.c_fcntl_lock_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ssp: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_fcntl_lock1_r9peK_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.679033786 UTC

[section ""data" . c_fork1_r9peL_closure" {
     c_fork1_r9peL_closure:
         const c_fork1_r9peL_info;
 },
 c_fork1_r9peL_entry() //  []
         { info_tbl: [(c9ssD,
                       label: c_fork1_r9peL_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ssD: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9ssJ; else goto c9ssI;
       c9ssJ: // global
           HpAlloc = 16;
           R1 = c_fork1_r9peL_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9ssI: // global
           (_s9ply::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] fork();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9ply::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.683228038 UTC

[section ""data" . System.Posix.Internals.c_fork_closure" {
     System.Posix.Internals.c_fork_closure:
         const System.Posix.Internals.c_fork_info;
 },
 System.Posix.Internals.c_fork_entry() //  []
         { info_tbl: [(c9ssU,
                       label: System.Posix.Internals.c_fork_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ssU: // global
           call c_fork1_r9peL_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.687354086 UTC

[section ""data" . c_link1_r9peM_closure" {
     c_link1_r9peM_closure:
         const c_link1_r9peM_info;
 },
 c_link1_r9peM_entry() //  [R2, R3]
         { info_tbl: [(c9st8,
                       label: c_link1_r9peM_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9st8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9stn; else goto c9sto;
       c9stn: // global
           R3 = R3;
           R2 = R2;
           R1 = c_link1_r9peM_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9sto: // global
           I64[Sp - 16] = block_c9st5_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9stu; else goto c9st6;
       u9stu: // global
           call _c9st5(R1) args: 0, res: 0, upd: 0;
       c9st6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9st5() //  [R1]
         { info_tbl: [(c9st5,
                       label: block_c9st5_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9st5: // global
           I64[Sp] = block_c9stb_info;
           _s9plF::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9plF::I64;
           if (R1 & 7 != 0) goto u9stt; else goto c9stc;
       u9stt: // global
           call _c9stb(R1) args: 0, res: 0, upd: 0;
       c9stc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9stb() //  [R1]
         { info_tbl: [(c9stb,
                       label: block_c9stb_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9stb: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sts; else goto c9str;
       c9sts: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9str: // global
           (_s9plL::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [‘signed’] link(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9plL::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.694702912 UTC

[section ""data" . System.Posix.Internals.c_link_closure" {
     System.Posix.Internals.c_link_closure:
         const System.Posix.Internals.c_link_info;
 },
 System.Posix.Internals.c_link_entry() //  [R2, R3]
         { info_tbl: [(c9stO,
                       label: System.Posix.Internals.c_link_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9stO: // global
           R3 = R3;
           R2 = R2;
           call c_link1_r9peM_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.6987462 UTC

[section ""data" . c_mkfifo1_r9peN_closure" {
     c_mkfifo1_r9peN_closure:
         const c_mkfifo1_r9peN_info;
 },
 c_mkfifo1_r9peN_entry() //  [R2, R3]
         { info_tbl: [(c9su2,
                       label: c_mkfifo1_r9peN_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9su2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9suh; else goto c9sui;
       c9suh: // global
           R3 = R3;
           R2 = R2;
           R1 = c_mkfifo1_r9peN_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9sui: // global
           I64[Sp - 16] = block_c9stZ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9suo; else goto c9su0;
       u9suo: // global
           call _c9stZ(R1) args: 0, res: 0, upd: 0;
       c9su0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9stZ() //  [R1]
         { info_tbl: [(c9stZ,
                       label: block_c9stZ_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9stZ: // global
           I64[Sp] = block_c9su5_info;
           _s9plS::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9plS::I64;
           if (R1 & 7 != 0) goto u9sun; else goto c9su6;
       u9sun: // global
           call _c9su5(R1) args: 0, res: 0, upd: 0;
       c9su6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9su5() //  [R1]
         { info_tbl: [(c9su5,
                       label: block_c9su5_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9su5: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sum; else goto c9sul;
       c9sum: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sul: // global
           (_s9plY::I64) = call "capi" arg hints:  [PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC14ZCbaseZCSystemziPosixziInternalsZCmkfifo(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9plY::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.706235875 UTC

[section ""data" . System.Posix.Internals.c_mkfifo_closure" {
     System.Posix.Internals.c_mkfifo_closure:
         const System.Posix.Internals.c_mkfifo_info;
 },
 System.Posix.Internals.c_mkfifo_entry() //  [R2, R3]
         { info_tbl: [(c9suI,
                       label: System.Posix.Internals.c_mkfifo_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9suI: // global
           R3 = R3;
           R2 = R2;
           call c_mkfifo1_r9peN_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.709991896 UTC

[section ""data" . c_sigemptyset1_r9peO_closure" {
     c_sigemptyset1_r9peO_closure:
         const c_sigemptyset1_r9peO_info;
 },
 c_sigemptyset1_r9peO_entry() //  [R2]
         { info_tbl: [(c9suW,
                       label: c_sigemptyset1_r9peO_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9suW: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9sv5; else goto c9sv6;
       c9sv5: // global
           R2 = R2;
           R1 = c_sigemptyset1_r9peO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9sv6: // global
           I64[Sp - 8] = block_c9suT_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9sva; else goto c9suU;
       u9sva: // global
           call _c9suT(R1) args: 0, res: 0, upd: 0;
       c9suU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9suT() //  [R1]
         { info_tbl: [(c9suT,
                       label: block_c9suT_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9suT: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sv9; else goto c9sv8;
       c9sv9: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sv8: // global
           (_s9pm8::I64) = call "capi" arg hints:  [PtrHint]  result hints:  [‘signed’] ghczuwrapperZC13ZCbaseZCSystemziPosixziInternalsZCsigemptyset(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pm8::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.715492767 UTC

[section ""data" . System.Posix.Internals.c_sigemptyset_closure" {
     System.Posix.Internals.c_sigemptyset_closure:
         const System.Posix.Internals.c_sigemptyset_info;
 },
 System.Posix.Internals.c_sigemptyset_entry() //  [R2]
         { info_tbl: [(c9svq,
                       label: System.Posix.Internals.c_sigemptyset_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9svq: // global
           R2 = R2;
           call c_sigemptyset1_r9peO_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.719574233 UTC

[section ""data" . c_sigaddset1_r9peP_closure" {
     c_sigaddset1_r9peP_closure:
         const c_sigaddset1_r9peP_info;
 },
 c_sigaddset1_r9peP_entry() //  [R2, R3]
         { info_tbl: [(c9svE,
                       label: c_sigaddset1_r9peP_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9svE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9svT; else goto c9svU;
       c9svT: // global
           R3 = R3;
           R2 = R2;
           R1 = c_sigaddset1_r9peP_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9svU: // global
           I64[Sp - 16] = block_c9svB_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9sw0; else goto c9svC;
       u9sw0: // global
           call _c9svB(R1) args: 0, res: 0, upd: 0;
       c9svC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9svB() //  [R1]
         { info_tbl: [(c9svB,
                       label: block_c9svB_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9svB: // global
           I64[Sp] = block_c9svH_info;
           _s9pmf::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pmf::I64;
           if (R1 & 7 != 0) goto u9svZ; else goto c9svI;
       u9svZ: // global
           call _c9svH(R1) args: 0, res: 0, upd: 0;
       c9svI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9svH() //  [R1]
         { info_tbl: [(c9svH,
                       label: block_c9svH_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9svH: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9svY; else goto c9svX;
       c9svY: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9svX: // global
           (_s9pml::I64) = call "capi" arg hints:  [PtrHint,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC12ZCbaseZCSystemziPosixziInternalsZCsigaddset(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pml::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.72732026 UTC

[section ""data" . System.Posix.Internals.c_sigaddset_closure" {
     System.Posix.Internals.c_sigaddset_closure:
         const System.Posix.Internals.c_sigaddset_info;
 },
 System.Posix.Internals.c_sigaddset_entry() //  [R2, R3]
         { info_tbl: [(c9swk,
                       label: System.Posix.Internals.c_sigaddset_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9swk: // global
           R3 = R3;
           R2 = R2;
           call c_sigaddset1_r9peP_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.731039831 UTC

[section ""data" . c_sigprocmask1_r9peQ_closure" {
     c_sigprocmask1_r9peQ_closure:
         const c_sigprocmask1_r9peQ_info;
 },
 c_sigprocmask1_r9peQ_entry() //  [R2, R3, R4]
         { info_tbl: [(c9swy,
                       label: c_sigprocmask1_r9peQ_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9swy: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9swT; else goto c9swU;
       c9swT: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_sigprocmask1_r9peQ_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9swU: // global
           I64[Sp - 24] = block_c9swv_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9sx1; else goto c9sww;
       u9sx1: // global
           call _c9swv(R1) args: 0, res: 0, upd: 0;
       c9sww: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9swv() //  [R1]
         { info_tbl: [(c9swv,
                       label: block_c9swv_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9swv: // global
           I64[Sp] = block_c9swB_info;
           _s9pmt::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pmt::I64;
           if (R1 & 7 != 0) goto u9sx0; else goto c9swC;
       u9sx0: // global
           call _c9swB(R1) args: 0, res: 0, upd: 0;
       c9swC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9swB() //  [R1]
         { info_tbl: [(c9swB,
                       label: block_c9swB_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9swB: // global
           I64[Sp] = block_c9swG_info;
           _s9pmv::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pmv::I64;
           if (R1 & 7 != 0) goto u9sx2; else goto c9swH;
       u9sx2: // global
           call _c9swG(R1) args: 0, res: 0, upd: 0;
       c9swH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9swG() //  [R1]
         { info_tbl: [(c9swG,
                       label: block_c9swG_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9swG: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9swZ; else goto c9swY;
       c9swZ: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9swY: // global
           (_s9pmB::I64) = call "capi" arg hints:  [‘signed’, PtrHint,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC11ZCbaseZCSystemziPosixziInternalsZCsigprocmask(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pmB::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.74056205 UTC

[section ""data" . System.Posix.Internals.c_sigprocmask_closure" {
     System.Posix.Internals.c_sigprocmask_closure:
         const System.Posix.Internals.c_sigprocmask_info;
 },
 System.Posix.Internals.c_sigprocmask_entry() //  [R2, R3, R4]
         { info_tbl: [(c9sxq,
                       label: System.Posix.Internals.c_sigprocmask_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sxq: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_sigprocmask1_r9peQ_entry(R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.744326643 UTC

[section ""data" . c_tcgetattr1_r9peR_closure" {
     c_tcgetattr1_r9peR_closure:
         const c_tcgetattr1_r9peR_info;
 },
 c_tcgetattr1_r9peR_entry() //  [R2, R3]
         { info_tbl: [(c9sxE,
                       label: c_tcgetattr1_r9peR_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sxE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9sxT; else goto c9sxU;
       c9sxT: // global
           R3 = R3;
           R2 = R2;
           R1 = c_tcgetattr1_r9peR_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9sxU: // global
           I64[Sp - 16] = block_c9sxB_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9sy0; else goto c9sxC;
       u9sy0: // global
           call _c9sxB(R1) args: 0, res: 0, upd: 0;
       c9sxC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sxB() //  [R1]
         { info_tbl: [(c9sxB,
                       label: block_c9sxB_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sxB: // global
           I64[Sp] = block_c9sxH_info;
           _s9pmI::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pmI::I64;
           if (R1 & 7 != 0) goto u9sxZ; else goto c9sxI;
       u9sxZ: // global
           call _c9sxH(R1) args: 0, res: 0, upd: 0;
       c9sxI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sxH() //  [R1]
         { info_tbl: [(c9sxH,
                       label: block_c9sxH_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sxH: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sxY; else goto c9sxX;
       c9sxY: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sxX: // global
           (_s9pmO::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC10ZCbaseZCSystemziPosixziInternalsZCtcgetattr(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pmO::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.752011585 UTC

[section ""data" . System.Posix.Internals.c_tcgetattr_closure" {
     System.Posix.Internals.c_tcgetattr_closure:
         const System.Posix.Internals.c_tcgetattr_info;
 },
 System.Posix.Internals.c_tcgetattr_entry() //  [R2, R3]
         { info_tbl: [(c9syk,
                       label: System.Posix.Internals.c_tcgetattr_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9syk: // global
           R3 = R3;
           R2 = R2;
           call c_tcgetattr1_r9peR_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.756141257 UTC

[section ""data" . c_tcsetattr1_r9peS_closure" {
     c_tcsetattr1_r9peS_closure:
         const c_tcsetattr1_r9peS_info;
 },
 c_tcsetattr1_r9peS_entry() //  [R2, R3, R4]
         { info_tbl: [(c9syy,
                       label: c_tcsetattr1_r9peS_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9syy: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9syT; else goto c9syU;
       c9syT: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_tcsetattr1_r9peS_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9syU: // global
           I64[Sp - 24] = block_c9syv_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9sz1; else goto c9syw;
       u9sz1: // global
           call _c9syv(R1) args: 0, res: 0, upd: 0;
       c9syw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9syv() //  [R1]
         { info_tbl: [(c9syv,
                       label: block_c9syv_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9syv: // global
           I64[Sp] = block_c9syB_info;
           _s9pmW::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pmW::I64;
           if (R1 & 7 != 0) goto u9sz0; else goto c9syC;
       u9sz0: // global
           call _c9syB(R1) args: 0, res: 0, upd: 0;
       c9syC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9syB() //  [R1]
         { info_tbl: [(c9syB,
                       label: block_c9syB_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9syB: // global
           I64[Sp] = block_c9syG_info;
           _s9pmY::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pmY::I64;
           if (R1 & 7 != 0) goto u9sz2; else goto c9syH;
       u9sz2: // global
           call _c9syG(R1) args: 0, res: 0, upd: 0;
       c9syH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9syG() //  [R1]
         { info_tbl: [(c9syG,
                       label: block_c9syG_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9syG: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9syZ; else goto c9syY;
       c9syZ: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9syY: // global
           (_s9pn4::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC9ZCbaseZCSystemziPosixziInternalsZCtcsetattr(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pn4::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.765762988 UTC

[section ""data" . System.Posix.Internals.c_tcsetattr_closure" {
     System.Posix.Internals.c_tcsetattr_closure:
         const System.Posix.Internals.c_tcsetattr_info;
 },
 System.Posix.Internals.c_tcsetattr_entry() //  [R2, R3, R4]
         { info_tbl: [(c9szq,
                       label: System.Posix.Internals.c_tcsetattr_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9szq: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_tcsetattr1_r9peS_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.769438064 UTC

[section ""data" . c_waitpid1_r9peT_closure" {
     c_waitpid1_r9peT_closure:
         const c_waitpid1_r9peT_info;
 },
 c_waitpid1_r9peT_entry() //  [R2, R3, R4]
         { info_tbl: [(c9szE,
                       label: c_waitpid1_r9peT_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9szE: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9szZ; else goto c9sA0;
       c9szZ: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_waitpid1_r9peT_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9sA0: // global
           I64[Sp - 24] = block_c9szB_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9sA7; else goto c9szC;
       u9sA7: // global
           call _c9szB(R1) args: 0, res: 0, upd: 0;
       c9szC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9szB() //  [R1]
         { info_tbl: [(c9szB,
                       label: block_c9szB_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9szB: // global
           I64[Sp] = block_c9szH_info;
           _s9pnc::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pnc::I64;
           if (R1 & 7 != 0) goto u9sA6; else goto c9szI;
       u9sA6: // global
           call _c9szH(R1) args: 0, res: 0, upd: 0;
       c9szI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9szH() //  [R1]
         { info_tbl: [(c9szH,
                       label: block_c9szH_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9szH: // global
           I64[Sp] = block_c9szM_info;
           _s9pne::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pne::I64;
           if (R1 & 7 != 0) goto u9sA8; else goto c9szN;
       u9sA8: // global
           call _c9szM(R1) args: 0, res: 0, upd: 0;
       c9szN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9szM() //  [R1]
         { info_tbl: [(c9szM,
                       label: block_c9szM_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9szM: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sA5; else goto c9sA4;
       c9sA5: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sA4: // global
           (_s9pnk::I64) = call "ccall" arg hints:  [‘signed’, PtrHint,
                                                     ‘signed’]  result hints:  [‘signed’] waitpid(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnk::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.778729794 UTC

[section ""data" . System.Posix.Internals.c_waitpid_closure" {
     System.Posix.Internals.c_waitpid_closure:
         const System.Posix.Internals.c_waitpid_info;
 },
 System.Posix.Internals.c_waitpid_entry() //  [R2, R3, R4]
         { info_tbl: [(c9sAw,
                       label: System.Posix.Internals.c_waitpid_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sAw: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_waitpid1_r9peT_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.782527317 UTC

[section ""data" . o_RDONLY1_r9peU_closure" {
     o_RDONLY1_r9peU_closure:
         const o_RDONLY1_r9peU_info;
         const 0;
         const 0;
         const 0;
 },
 o_RDONLY1_r9peU_entry() //  [R1]
         { info_tbl: [(c9sAM,
                       label: o_RDONLY1_r9peU_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sAM: // global
           _r9peU::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sAP; else goto c9sAQ;
       c9sAQ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sAS; else goto c9sAR;
       c9sAS: // global
           HpAlloc = 16;
           goto c9sAP;
       c9sAP: // global
           R1 = _r9peU::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sAR: // global
           (_c9sAG::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peU::P64);
           if (_c9sAG::I64 == 0) goto c9sAI; else goto c9sAH;
       c9sAI: // global
           call (I64[I64[_r9peU::P64]])() args: 8, res: 0, upd: 8;
       c9sAH: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sAG::I64;
           (_s9pnq::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_rdonly();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnq::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.786736201 UTC

[section ""data" . System.Posix.Internals.o_RDONLY_closure" {
     System.Posix.Internals.o_RDONLY_closure:
         const stg_IND_STATIC_info;
         const o_RDONLY1_r9peU_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.789320006 UTC

[section ""data" . o_WRONLY1_r9peV_closure" {
     o_WRONLY1_r9peV_closure:
         const o_WRONLY1_r9peV_info;
         const 0;
         const 0;
         const 0;
 },
 o_WRONLY1_r9peV_entry() //  [R1]
         { info_tbl: [(c9sBc,
                       label: o_WRONLY1_r9peV_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sBc: // global
           _r9peV::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sBf; else goto c9sBg;
       c9sBg: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sBi; else goto c9sBh;
       c9sBi: // global
           HpAlloc = 16;
           goto c9sBf;
       c9sBf: // global
           R1 = _r9peV::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sBh: // global
           (_c9sB6::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peV::P64);
           if (_c9sB6::I64 == 0) goto c9sB8; else goto c9sB7;
       c9sB8: // global
           call (I64[I64[_r9peV::P64]])() args: 8, res: 0, upd: 8;
       c9sB7: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sB6::I64;
           (_s9pnv::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_wronly();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnv::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.793513539 UTC

[section ""data" . System.Posix.Internals.o_WRONLY_closure" {
     System.Posix.Internals.o_WRONLY_closure:
         const stg_IND_STATIC_info;
         const o_WRONLY1_r9peV_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.795429023 UTC

[section ""data" . o_RDWR1_r9peW_closure" {
     o_RDWR1_r9peW_closure:
         const o_RDWR1_r9peW_info;
         const 0;
         const 0;
         const 0;
 },
 o_RDWR1_r9peW_entry() //  [R1]
         { info_tbl: [(c9sBC,
                       label: o_RDWR1_r9peW_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sBC: // global
           _r9peW::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sBF; else goto c9sBG;
       c9sBG: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sBI; else goto c9sBH;
       c9sBI: // global
           HpAlloc = 16;
           goto c9sBF;
       c9sBF: // global
           R1 = _r9peW::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sBH: // global
           (_c9sBw::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peW::P64);
           if (_c9sBw::I64 == 0) goto c9sBy; else goto c9sBx;
       c9sBy: // global
           call (I64[I64[_r9peW::P64]])() args: 8, res: 0, upd: 8;
       c9sBx: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sBw::I64;
           (_s9pnA::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_rdwr();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnA::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.79994127 UTC

[section ""data" . System.Posix.Internals.o_RDWR_closure" {
     System.Posix.Internals.o_RDWR_closure:
         const stg_IND_STATIC_info;
         const o_RDWR1_r9peW_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.801816101 UTC

[section ""data" . o_APPEND1_r9peX_closure" {
     o_APPEND1_r9peX_closure:
         const o_APPEND1_r9peX_info;
         const 0;
         const 0;
         const 0;
 },
 o_APPEND1_r9peX_entry() //  [R1]
         { info_tbl: [(c9sC2,
                       label: o_APPEND1_r9peX_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sC2: // global
           _r9peX::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sC5; else goto c9sC6;
       c9sC6: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sC8; else goto c9sC7;
       c9sC8: // global
           HpAlloc = 16;
           goto c9sC5;
       c9sC5: // global
           R1 = _r9peX::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sC7: // global
           (_c9sBW::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peX::P64);
           if (_c9sBW::I64 == 0) goto c9sBY; else goto c9sBX;
       c9sBY: // global
           call (I64[I64[_r9peX::P64]])() args: 8, res: 0, upd: 8;
       c9sBX: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sBW::I64;
           (_s9pnF::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_append();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnF::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.805983949 UTC

[section ""data" . System.Posix.Internals.o_APPEND_closure" {
     System.Posix.Internals.o_APPEND_closure:
         const stg_IND_STATIC_info;
         const o_APPEND1_r9peX_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.807865096 UTC

[section ""data" . o_CREAT1_r9peY_closure" {
     o_CREAT1_r9peY_closure:
         const o_CREAT1_r9peY_info;
         const 0;
         const 0;
         const 0;
 },
 o_CREAT1_r9peY_entry() //  [R1]
         { info_tbl: [(c9sCs,
                       label: o_CREAT1_r9peY_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sCs: // global
           _r9peY::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sCv; else goto c9sCw;
       c9sCw: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sCy; else goto c9sCx;
       c9sCy: // global
           HpAlloc = 16;
           goto c9sCv;
       c9sCv: // global
           R1 = _r9peY::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sCx: // global
           (_c9sCm::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peY::P64);
           if (_c9sCm::I64 == 0) goto c9sCo; else goto c9sCn;
       c9sCo: // global
           call (I64[I64[_r9peY::P64]])() args: 8, res: 0, upd: 8;
       c9sCn: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sCm::I64;
           (_s9pnK::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_creat();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnK::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.812010337 UTC

[section ""data" . System.Posix.Internals.o_CREAT_closure" {
     System.Posix.Internals.o_CREAT_closure:
         const stg_IND_STATIC_info;
         const o_CREAT1_r9peY_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.814289448 UTC

[section ""data" . o_EXCL1_r9peZ_closure" {
     o_EXCL1_r9peZ_closure:
         const o_EXCL1_r9peZ_info;
         const 0;
         const 0;
         const 0;
 },
 o_EXCL1_r9peZ_entry() //  [R1]
         { info_tbl: [(c9sCS,
                       label: o_EXCL1_r9peZ_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sCS: // global
           _r9peZ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sCV; else goto c9sCW;
       c9sCW: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sCY; else goto c9sCX;
       c9sCY: // global
           HpAlloc = 16;
           goto c9sCV;
       c9sCV: // global
           R1 = _r9peZ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sCX: // global
           (_c9sCM::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peZ::P64);
           if (_c9sCM::I64 == 0) goto c9sCO; else goto c9sCN;
       c9sCO: // global
           call (I64[I64[_r9peZ::P64]])() args: 8, res: 0, upd: 8;
       c9sCN: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sCM::I64;
           (_s9pnP::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_excl();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnP::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.818456664 UTC

[section ""data" . System.Posix.Internals.o_EXCL_closure" {
     System.Posix.Internals.o_EXCL_closure:
         const stg_IND_STATIC_info;
         const o_EXCL1_r9peZ_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.82040355 UTC

[section ""data" . o_TRUNC1_r9pf0_closure" {
     o_TRUNC1_r9pf0_closure:
         const o_TRUNC1_r9pf0_info;
         const 0;
         const 0;
         const 0;
 },
 o_TRUNC1_r9pf0_entry() //  [R1]
         { info_tbl: [(c9sDi,
                       label: o_TRUNC1_r9pf0_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sDi: // global
           _r9pf0::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sDl; else goto c9sDm;
       c9sDm: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sDo; else goto c9sDn;
       c9sDo: // global
           HpAlloc = 16;
           goto c9sDl;
       c9sDl: // global
           R1 = _r9pf0::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sDn: // global
           (_c9sDc::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pf0::P64);
           if (_c9sDc::I64 == 0) goto c9sDe; else goto c9sDd;
       c9sDe: // global
           call (I64[I64[_r9pf0::P64]])() args: 8, res: 0, upd: 8;
       c9sDd: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sDc::I64;
           (_s9pnU::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_trunc();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnU::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.825125125 UTC

[section ""data" . System.Posix.Internals.o_TRUNC_closure" {
     System.Posix.Internals.o_TRUNC_closure:
         const stg_IND_STATIC_info;
         const o_TRUNC1_r9pf0_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.827462744 UTC

[section ""data" . o_NOCTTY1_r9pf1_closure" {
     o_NOCTTY1_r9pf1_closure:
         const o_NOCTTY1_r9pf1_info;
         const 0;
         const 0;
         const 0;
 },
 o_NOCTTY1_r9pf1_entry() //  [R1]
         { info_tbl: [(c9sDI,
                       label: o_NOCTTY1_r9pf1_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sDI: // global
           _r9pf1::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sDL; else goto c9sDM;
       c9sDM: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sDO; else goto c9sDN;
       c9sDO: // global
           HpAlloc = 16;
           goto c9sDL;
       c9sDL: // global
           R1 = _r9pf1::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sDN: // global
           (_c9sDC::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pf1::P64);
           if (_c9sDC::I64 == 0) goto c9sDE; else goto c9sDD;
       c9sDE: // global
           call (I64[I64[_r9pf1::P64]])() args: 8, res: 0, upd: 8;
       c9sDD: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sDC::I64;
           (_s9pnZ::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_noctty();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pnZ::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.83154966 UTC

[section ""data" . System.Posix.Internals.o_NOCTTY_closure" {
     System.Posix.Internals.o_NOCTTY_closure:
         const stg_IND_STATIC_info;
         const o_NOCTTY1_r9pf1_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.833509152 UTC

[section ""data" . o_NONBLOCK1_r9pf2_closure" {
     o_NONBLOCK1_r9pf2_closure:
         const o_NONBLOCK1_r9pf2_info;
         const 0;
         const 0;
         const 0;
 },
 o_NONBLOCK1_r9pf2_entry() //  [R1]
         { info_tbl: [(c9sE8,
                       label: o_NONBLOCK1_r9pf2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sE8: // global
           _r9pf2::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sEb; else goto c9sEc;
       c9sEc: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sEe; else goto c9sEd;
       c9sEe: // global
           HpAlloc = 16;
           goto c9sEb;
       c9sEb: // global
           R1 = _r9pf2::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sEd: // global
           (_c9sE2::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pf2::P64);
           if (_c9sE2::I64 == 0) goto c9sE4; else goto c9sE3;
       c9sE4: // global
           call (I64[I64[_r9pf2::P64]])() args: 8, res: 0, upd: 8;
       c9sE3: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sE2::I64;
           (_s9po4::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_nonblock();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9po4::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.837916125 UTC

[section ""data" . System.Posix.Internals.o_NONBLOCK_closure" {
     System.Posix.Internals.o_NONBLOCK_closure:
         const stg_IND_STATIC_info;
         const o_NONBLOCK1_r9pf2_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.839765728 UTC

[section ""data" . o_BINARY1_r9pf3_closure" {
     o_BINARY1_r9pf3_closure:
         const o_BINARY1_r9pf3_info;
         const 0;
         const 0;
         const 0;
 },
 o_BINARY1_r9pf3_entry() //  [R1]
         { info_tbl: [(c9sEy,
                       label: o_BINARY1_r9pf3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sEy: // global
           _r9pf3::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sEB; else goto c9sEC;
       c9sEC: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sEE; else goto c9sED;
       c9sEE: // global
           HpAlloc = 16;
           goto c9sEB;
       c9sEB: // global
           R1 = _r9pf3::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sED: // global
           (_c9sEs::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pf3::P64);
           if (_c9sEs::I64 == 0) goto c9sEu; else goto c9sEt;
       c9sEu: // global
           call (I64[I64[_r9pf3::P64]])() args: 8, res: 0, upd: 8;
       c9sEt: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sEs::I64;
           (_s9po9::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_binary();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9po9::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.843974651 UTC

[section ""data" . System.Posix.Internals.o_BINARY_closure" {
     System.Posix.Internals.o_BINARY_closure:
         const stg_IND_STATIC_info;
         const o_BINARY1_r9pf3_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.846134545 UTC

[section ""data" . c_s_isreg1_r9pf4_closure" {
     c_s_isreg1_r9pf4_closure:
         const c_s_isreg1_r9pf4_info;
 },
 c_s_isreg1_r9pf4_entry() //  [R2]
         { info_tbl: [(c9sEW,
                       label: c_s_isreg1_r9pf4_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sEW: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9sF5; else goto c9sF6;
       c9sF5: // global
           R2 = R2;
           R1 = c_s_isreg1_r9pf4_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9sF6: // global
           I64[Sp - 8] = block_c9sET_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9sFa; else goto c9sEU;
       u9sFa: // global
           call _c9sET(R1) args: 0, res: 0, upd: 0;
       c9sEU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sET() //  [R1]
         { info_tbl: [(c9sET,
                       label: block_c9sET_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sET: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sF9; else goto c9sF8;
       c9sF9: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sF8: // global
           (_s9poh::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9poh::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.851858462 UTC

[section ""data" . System.Posix.Internals.c_s_isreg_closure" {
     System.Posix.Internals.c_s_isreg_closure:
         const System.Posix.Internals.c_s_isreg_info;
 },
 System.Posix.Internals.c_s_isreg_entry() //  [R2]
         { info_tbl: [(c9sFq,
                       label: System.Posix.Internals.c_s_isreg_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sFq: // global
           R2 = R2;
           call c_s_isreg1_r9pf4_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.855655559 UTC

[section ""data" . c_s_ischr1_r9pf5_closure" {
     c_s_ischr1_r9pf5_closure:
         const c_s_ischr1_r9pf5_info;
 },
 c_s_ischr1_r9pf5_entry() //  [R2]
         { info_tbl: [(c9sFE,
                       label: c_s_ischr1_r9pf5_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sFE: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9sFN; else goto c9sFO;
       c9sFN: // global
           R2 = R2;
           R1 = c_s_ischr1_r9pf5_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9sFO: // global
           I64[Sp - 8] = block_c9sFB_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9sFS; else goto c9sFC;
       u9sFS: // global
           call _c9sFB(R1) args: 0, res: 0, upd: 0;
       c9sFC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sFB() //  [R1]
         { info_tbl: [(c9sFB,
                       label: block_c9sFB_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sFB: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sFR; else goto c9sFQ;
       c9sFR: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sFQ: // global
           (_s9pop::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC7ZCbaseZCSystemziPosixziInternalsZCSzuISCHR(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pop::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.861761904 UTC

[section ""data" . System.Posix.Internals.c_s_ischr_closure" {
     System.Posix.Internals.c_s_ischr_closure:
         const System.Posix.Internals.c_s_ischr_info;
 },
 System.Posix.Internals.c_s_ischr_entry() //  [R2]
         { info_tbl: [(c9sG8,
                       label: System.Posix.Internals.c_s_ischr_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sG8: // global
           R2 = R2;
           call c_s_ischr1_r9pf5_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.865236465 UTC

[section ""data" . c_s_isblk1_r9pf6_closure" {
     c_s_isblk1_r9pf6_closure:
         const c_s_isblk1_r9pf6_info;
 },
 c_s_isblk1_r9pf6_entry() //  [R2]
         { info_tbl: [(c9sGm,
                       label: c_s_isblk1_r9pf6_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sGm: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9sGv; else goto c9sGw;
       c9sGv: // global
           R2 = R2;
           R1 = c_s_isblk1_r9pf6_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9sGw: // global
           I64[Sp - 8] = block_c9sGj_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9sGA; else goto c9sGk;
       u9sGA: // global
           call _c9sGj(R1) args: 0, res: 0, upd: 0;
       c9sGk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sGj() //  [R1]
         { info_tbl: [(c9sGj,
                       label: block_c9sGj_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sGj: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sGz; else goto c9sGy;
       c9sGz: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sGy: // global
           (_s9pox::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC6ZCbaseZCSystemziPosixziInternalsZCSzuISBLK(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pox::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.870945537 UTC

[section ""data" . System.Posix.Internals.c_s_isblk_closure" {
     System.Posix.Internals.c_s_isblk_closure:
         const System.Posix.Internals.c_s_isblk_info;
 },
 System.Posix.Internals.c_s_isblk_entry() //  [R2]
         { info_tbl: [(c9sGQ,
                       label: System.Posix.Internals.c_s_isblk_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sGQ: // global
           R2 = R2;
           call c_s_isblk1_r9pf6_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.874889955 UTC

[section ""data" . c_s_isdir1_r9pf7_closure" {
     c_s_isdir1_r9pf7_closure:
         const c_s_isdir1_r9pf7_info;
 },
 c_s_isdir1_r9pf7_entry() //  [R2]
         { info_tbl: [(c9sH4,
                       label: c_s_isdir1_r9pf7_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sH4: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9sHd; else goto c9sHe;
       c9sHd: // global
           R2 = R2;
           R1 = c_s_isdir1_r9pf7_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9sHe: // global
           I64[Sp - 8] = block_c9sH1_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9sHi; else goto c9sH2;
       u9sHi: // global
           call _c9sH1(R1) args: 0, res: 0, upd: 0;
       c9sH2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sH1() //  [R1]
         { info_tbl: [(c9sH1,
                       label: block_c9sH1_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sH1: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sHh; else goto c9sHg;
       c9sHh: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sHg: // global
           (_s9poF::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC5ZCbaseZCSystemziPosixziInternalsZCSzuISDIR(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9poF::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.880504164 UTC

[section ""data" . System.Posix.Internals.c_s_isdir_closure" {
     System.Posix.Internals.c_s_isdir_closure:
         const System.Posix.Internals.c_s_isdir_info;
 },
 System.Posix.Internals.c_s_isdir_entry() //  [R2]
         { info_tbl: [(c9sHy,
                       label: System.Posix.Internals.c_s_isdir_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sHy: // global
           R2 = R2;
           call c_s_isdir1_r9pf7_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.883947255 UTC

[section ""data" . c_s_isfifo1_r9pf8_closure" {
     c_s_isfifo1_r9pf8_closure:
         const c_s_isfifo1_r9pf8_info;
 },
 c_s_isfifo1_r9pf8_entry() //  [R2]
         { info_tbl: [(c9sHM,
                       label: c_s_isfifo1_r9pf8_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sHM: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9sHV; else goto c9sHW;
       c9sHV: // global
           R2 = R2;
           R1 = c_s_isfifo1_r9pf8_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9sHW: // global
           I64[Sp - 8] = block_c9sHJ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9sI0; else goto c9sHK;
       u9sI0: // global
           call _c9sHJ(R1) args: 0, res: 0, upd: 0;
       c9sHK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sHJ() //  [R1]
         { info_tbl: [(c9sHJ,
                       label: block_c9sHJ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sHJ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sHZ; else goto c9sHY;
       c9sHZ: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sHY: // global
           (_s9poN::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC4ZCbaseZCSystemziPosixziInternalsZCSzuISFIFO(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9poN::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.89387489 UTC

[section ""data" . System.Posix.Internals.c_s_isfifo_closure" {
     System.Posix.Internals.c_s_isfifo_closure:
         const System.Posix.Internals.c_s_isfifo_info;
 },
 System.Posix.Internals.c_s_isfifo_entry() //  [R2]
         { info_tbl: [(c9sIg,
                       label: System.Posix.Internals.c_s_isfifo_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sIg: // global
           R2 = R2;
           call c_s_isfifo1_r9pf8_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.897879968 UTC

[section ""data" . System.Posix.Internals.sizeof_stat_closure" {
     System.Posix.Internals.sizeof_stat_closure:
         const System.Posix.Internals.sizeof_stat_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.sizeof_stat_entry() //  [R1]
         { info_tbl: [(c9sIv,
                       label: System.Posix.Internals.sizeof_stat_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sIv: // global
           _r9lgf::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sIw; else goto c9sIx;
       c9sIx: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sIz; else goto c9sIy;
       c9sIz: // global
           HpAlloc = 16;
           goto c9sIw;
       c9sIw: // global
           R1 = _r9lgf::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sIy: // global
           (_c9sIq::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9lgf::P64);
           if (_c9sIq::I64 == 0) goto c9sIs; else goto c9sIr;
       c9sIs: // global
           call (I64[I64[_r9lgf::P64]])() args: 8, res: 0, upd: 8;
       c9sIr: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sIq::I64;
           (_s9poS::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_stat();
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9poS::I64;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.90322455 UTC

[section ""data" . st_mtime1_r9pf9_closure" {
     st_mtime1_r9pf9_closure:
         const st_mtime1_r9pf9_info;
 },
 st_mtime1_r9pf9_entry() //  [R2]
         { info_tbl: [(c9sIP,
                       label: st_mtime1_r9pf9_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sIP: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9sIV; else goto c9sIW;
       c9sIV: // global
           R2 = R2;
           R1 = st_mtime1_r9pf9_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9sIW: // global
           I64[Sp - 8] = block_c9sIM_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9sJ0; else goto c9sIN;
       u9sJ0: // global
           call _c9sIM(R1) args: 0, res: 0, upd: 0;
       c9sIN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sIM() //  [R1]
         { info_tbl: [(c9sIM,
                       label: block_c9sIM_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sIM: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sIZ; else goto c9sIY;
       c9sIZ: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sIY: // global
           (_s9pp0::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] __hscore_st_mtime(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9pp0::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.909699482 UTC

[section ""data" . System.Posix.Internals.st_mtime_closure" {
     System.Posix.Internals.st_mtime_closure:
         const System.Posix.Internals.st_mtime_info;
 },
 System.Posix.Internals.st_mtime_entry() //  [R2]
         { info_tbl: [(c9sJf,
                       label: System.Posix.Internals.st_mtime_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sJf: // global
           R2 = R2;
           call st_mtime1_r9pf9_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.913714502 UTC

[section ""data" . st_size1_r9pfa_closure" {
     st_size1_r9pfa_closure:
         const st_size1_r9pfa_info;
 },
 st_size1_r9pfa_entry() //  [R2]
         { info_tbl: [(c9sJt,
                       label: st_size1_r9pfa_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sJt: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9sJz; else goto c9sJA;
       c9sJz: // global
           R2 = R2;
           R1 = st_size1_r9pfa_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9sJA: // global
           I64[Sp - 8] = block_c9sJq_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9sJE; else goto c9sJr;
       u9sJE: // global
           call _c9sJq(R1) args: 0, res: 0, upd: 0;
       c9sJr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sJq() //  [R1]
         { info_tbl: [(c9sJq,
                       label: block_c9sJq_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sJq: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sJD; else goto c9sJC;
       c9sJD: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sJC: // global
           (_s9pp9::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] __hscore_st_size(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9pp9::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.920319249 UTC

[section ""data" . System.Posix.Internals.st_size_closure" {
     System.Posix.Internals.st_size_closure:
         const System.Posix.Internals.st_size_info;
 },
 System.Posix.Internals.st_size_entry() //  [R2]
         { info_tbl: [(c9sJT,
                       label: System.Posix.Internals.st_size_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sJT: // global
           R2 = R2;
           call st_size1_r9pfa_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.924379473 UTC

[section ""data" . st_mode1_r9pfb_closure" {
     st_mode1_r9pfb_closure:
         const st_mode1_r9pfb_info;
 },
 st_mode1_r9pfb_entry() //  [R2]
         { info_tbl: [(c9sK7,
                       label: st_mode1_r9pfb_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sK7: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9sKg; else goto c9sKh;
       c9sKg: // global
           R2 = R2;
           R1 = st_mode1_r9pfb_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9sKh: // global
           I64[Sp - 8] = block_c9sK4_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9sKl; else goto c9sK5;
       u9sKl: // global
           call _c9sK4(R1) args: 0, res: 0, upd: 0;
       c9sK5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sK4() //  [R1]
         { info_tbl: [(c9sK4,
                       label: block_c9sK4_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sK4: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sKk; else goto c9sKj;
       c9sKk: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sKj: // global
           (_s9ppi::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_mode(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Word.W32#_con_info;
           I64[Hp] = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9ppi::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.931366609 UTC

[section ""data" . System.Posix.Internals.st_mode_closure" {
     System.Posix.Internals.st_mode_closure:
         const System.Posix.Internals.st_mode_info;
 },
 System.Posix.Internals.st_mode_entry() //  [R2]
         { info_tbl: [(c9sKB,
                       label: System.Posix.Internals.st_mode_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sKB: // global
           R2 = R2;
           call st_mode1_r9pfb_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.935888443 UTC

[section ""data" . st_dev1_r9pfc_closure" {
     st_dev1_r9pfc_closure:
         const st_dev1_r9pfc_info;
 },
 st_dev1_r9pfc_entry() //  [R2]
         { info_tbl: [(c9sKP,
                       label: st_dev1_r9pfc_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sKP: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9sKV; else goto c9sKW;
       c9sKV: // global
           R2 = R2;
           R1 = st_dev1_r9pfc_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9sKW: // global
           I64[Sp - 8] = block_c9sKM_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9sL0; else goto c9sKN;
       u9sL0: // global
           call _c9sKM(R1) args: 0, res: 0, upd: 0;
       c9sKN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sKM() //  [R1]
         { info_tbl: [(c9sKM,
                       label: block_c9sKM_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sKM: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sKZ; else goto c9sKY;
       c9sKZ: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sKY: // global
           (_s9pps::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Word.W64#_con_info;
           I64[Hp] = _s9pps::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.941601171 UTC

[section ""data" . System.Posix.Internals.st_dev_closure" {
     System.Posix.Internals.st_dev_closure:
         const System.Posix.Internals.st_dev_info;
 },
 System.Posix.Internals.st_dev_entry() //  [R2]
         { info_tbl: [(c9sLf,
                       label: System.Posix.Internals.st_dev_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sLf: // global
           R2 = R2;
           call st_dev1_r9pfc_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.945026419 UTC

[section ""data" . st_ino1_r9pfd_closure" {
     st_ino1_r9pfd_closure:
         const st_ino1_r9pfd_info;
 },
 st_ino1_r9pfd_entry() //  [R2]
         { info_tbl: [(c9sLt,
                       label: st_ino1_r9pfd_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sLt: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9sLz; else goto c9sLA;
       c9sLz: // global
           R2 = R2;
           R1 = st_ino1_r9pfd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9sLA: // global
           I64[Sp - 8] = block_c9sLq_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9sLE; else goto c9sLr;
       u9sLE: // global
           call _c9sLq(R1) args: 0, res: 0, upd: 0;
       c9sLr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sLq() //  [R1]
         { info_tbl: [(c9sLq,
                       label: block_c9sLq_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sLq: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sLD; else goto c9sLC;
       c9sLD: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sLC: // global
           (_s9ppB::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Word.W64#_con_info;
           I64[Hp] = _s9ppB::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.950579317 UTC

[section ""data" . System.Posix.Internals.st_ino_closure" {
     System.Posix.Internals.st_ino_closure:
         const System.Posix.Internals.st_ino_info;
 },
 System.Posix.Internals.st_ino_entry() //  [R2]
         { info_tbl: [(c9sLT,
                       label: System.Posix.Internals.st_ino_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sLT: // global
           R2 = R2;
           call st_ino1_r9pfd_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.953961752 UTC

[section ""data" . const_echo1_r9pfe_closure" {
     const_echo1_r9pfe_closure:
         const const_echo1_r9pfe_info;
         const 0;
         const 0;
         const 0;
 },
 const_echo1_r9pfe_entry() //  [R1]
         { info_tbl: [(c9sM9,
                       label: const_echo1_r9pfe_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sM9: // global
           _r9pfe::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sMc; else goto c9sMd;
       c9sMd: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sMf; else goto c9sMe;
       c9sMf: // global
           HpAlloc = 16;
           goto c9sMc;
       c9sMc: // global
           R1 = _r9pfe::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sMe: // global
           (_c9sM3::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfe::P64);
           if (_c9sM3::I64 == 0) goto c9sM5; else goto c9sM4;
       c9sM5: // global
           call (I64[I64[_r9pfe::P64]])() args: 8, res: 0, upd: 8;
       c9sM4: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sM3::I64;
           (_s9ppG::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_echo();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9ppG::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.958478825 UTC

[section ""data" . System.Posix.Internals.const_echo_closure" {
     System.Posix.Internals.const_echo_closure:
         const stg_IND_STATIC_info;
         const const_echo1_r9pfe_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.960505297 UTC

[section ""data" . const_tcsanow1_r9pff_closure" {
     const_tcsanow1_r9pff_closure:
         const const_tcsanow1_r9pff_info;
         const 0;
         const 0;
         const 0;
 },
 const_tcsanow1_r9pff_entry() //  [R1]
         { info_tbl: [(c9sMz,
                       label: const_tcsanow1_r9pff_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sMz: // global
           _r9pff::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sMC; else goto c9sMD;
       c9sMD: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sMF; else goto c9sME;
       c9sMF: // global
           HpAlloc = 16;
           goto c9sMC;
       c9sMC: // global
           R1 = _r9pff::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sME: // global
           (_c9sMt::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pff::P64);
           if (_c9sMt::I64 == 0) goto c9sMv; else goto c9sMu;
       c9sMv: // global
           call (I64[I64[_r9pff::P64]])() args: 8, res: 0, upd: 8;
       c9sMu: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sMt::I64;
           (_s9ppL::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_tcsanow();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9ppL::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.964690464 UTC

[section ""data" . System.Posix.Internals.const_tcsanow_closure" {
     System.Posix.Internals.const_tcsanow_closure:
         const stg_IND_STATIC_info;
         const const_tcsanow1_r9pff_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.967186002 UTC

[section ""data" . const_icanon1_r9pfg_closure" {
     const_icanon1_r9pfg_closure:
         const const_icanon1_r9pfg_info;
         const 0;
         const 0;
         const 0;
 },
 const_icanon1_r9pfg_entry() //  [R1]
         { info_tbl: [(c9sMZ,
                       label: const_icanon1_r9pfg_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sMZ: // global
           _r9pfg::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sN2; else goto c9sN3;
       c9sN3: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sN5; else goto c9sN4;
       c9sN5: // global
           HpAlloc = 16;
           goto c9sN2;
       c9sN2: // global
           R1 = _r9pfg::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sN4: // global
           (_c9sMT::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfg::P64);
           if (_c9sMT::I64 == 0) goto c9sMV; else goto c9sMU;
       c9sMV: // global
           call (I64[I64[_r9pfg::P64]])() args: 8, res: 0, upd: 8;
       c9sMU: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sMT::I64;
           (_s9ppQ::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_icanon();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9ppQ::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.971240391 UTC

[section ""data" . System.Posix.Internals.const_icanon_closure" {
     System.Posix.Internals.const_icanon_closure:
         const stg_IND_STATIC_info;
         const const_icanon1_r9pfg_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.97306531 UTC

[section ""data" . const_vmin1_r9pfh_closure" {
     const_vmin1_r9pfh_closure:
         const const_vmin1_r9pfh_info;
         const 0;
         const 0;
         const 0;
 },
 const_vmin1_r9pfh_entry() //  [R1]
         { info_tbl: [(c9sNp,
                       label: const_vmin1_r9pfh_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sNp: // global
           _r9pfh::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sNs; else goto c9sNt;
       c9sNt: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sNv; else goto c9sNu;
       c9sNv: // global
           HpAlloc = 16;
           goto c9sNs;
       c9sNs: // global
           R1 = _r9pfh::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sNu: // global
           (_c9sNj::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfh::P64);
           if (_c9sNj::I64 == 0) goto c9sNl; else goto c9sNk;
       c9sNl: // global
           call (I64[I64[_r9pfh::P64]])() args: 8, res: 0, upd: 8;
       c9sNk: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sNj::I64;
           (_s9ppV::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_vmin();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9ppV::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.977105039 UTC

[section ""data" . System.Posix.Internals.const_vmin_closure" {
     System.Posix.Internals.const_vmin_closure:
         const stg_IND_STATIC_info;
         const const_vmin1_r9pfh_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.979604349 UTC

[section ""data" . const_vtime1_r9pfi_closure" {
     const_vtime1_r9pfi_closure:
         const const_vtime1_r9pfi_info;
         const 0;
         const 0;
         const 0;
 },
 const_vtime1_r9pfi_entry() //  [R1]
         { info_tbl: [(c9sNP,
                       label: const_vtime1_r9pfi_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sNP: // global
           _r9pfi::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sNS; else goto c9sNT;
       c9sNT: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sNV; else goto c9sNU;
       c9sNV: // global
           HpAlloc = 16;
           goto c9sNS;
       c9sNS: // global
           R1 = _r9pfi::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sNU: // global
           (_c9sNJ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfi::P64);
           if (_c9sNJ::I64 == 0) goto c9sNL; else goto c9sNK;
       c9sNL: // global
           call (I64[I64[_r9pfi::P64]])() args: 8, res: 0, upd: 8;
       c9sNK: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sNJ::I64;
           (_s9pq0::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_vtime();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pq0::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.983636443 UTC

[section ""data" . System.Posix.Internals.const_vtime_closure" {
     System.Posix.Internals.const_vtime_closure:
         const stg_IND_STATIC_info;
         const const_vtime1_r9pfi_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.985538873 UTC

[section ""data" . const_sigttou1_r9pfj_closure" {
     const_sigttou1_r9pfj_closure:
         const const_sigttou1_r9pfj_info;
         const 0;
         const 0;
         const 0;
 },
 const_sigttou1_r9pfj_entry() //  [R1]
         { info_tbl: [(c9sOf,
                       label: const_sigttou1_r9pfj_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sOf: // global
           _r9pfj::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sOi; else goto c9sOj;
       c9sOj: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sOl; else goto c9sOk;
       c9sOl: // global
           HpAlloc = 16;
           goto c9sOi;
       c9sOi: // global
           R1 = _r9pfj::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sOk: // global
           (_c9sO9::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfj::P64);
           if (_c9sO9::I64 == 0) goto c9sOb; else goto c9sOa;
       c9sOb: // global
           call (I64[I64[_r9pfj::P64]])() args: 8, res: 0, upd: 8;
       c9sOa: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sO9::I64;
           (_s9pq5::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sigttou();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pq5::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.990077378 UTC

[section ""data" . System.Posix.Internals.const_sigttou_closure" {
     System.Posix.Internals.const_sigttou_closure:
         const stg_IND_STATIC_info;
         const const_sigttou1_r9pfj_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.991935205 UTC

[section ""data" . const_sig_block1_r9pfk_closure" {
     const_sig_block1_r9pfk_closure:
         const const_sig_block1_r9pfk_info;
         const 0;
         const 0;
         const 0;
 },
 const_sig_block1_r9pfk_entry() //  [R1]
         { info_tbl: [(c9sOF,
                       label: const_sig_block1_r9pfk_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sOF: // global
           _r9pfk::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sOI; else goto c9sOJ;
       c9sOJ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sOL; else goto c9sOK;
       c9sOL: // global
           HpAlloc = 16;
           goto c9sOI;
       c9sOI: // global
           R1 = _r9pfk::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sOK: // global
           (_c9sOz::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfk::P64);
           if (_c9sOz::I64 == 0) goto c9sOB; else goto c9sOA;
       c9sOB: // global
           call (I64[I64[_r9pfk::P64]])() args: 8, res: 0, upd: 8;
       c9sOA: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sOz::I64;
           (_s9pqa::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sig_block();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pqa::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.996011503 UTC

[section ""data" . System.Posix.Internals.const_sig_block_closure" {
     System.Posix.Internals.const_sig_block_closure:
         const stg_IND_STATIC_info;
         const const_sig_block1_r9pfk_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:31.997927592 UTC

[section ""data" . const_sig_setmask1_r9pfl_closure" {
     const_sig_setmask1_r9pfl_closure:
         const const_sig_setmask1_r9pfl_info;
         const 0;
         const 0;
         const 0;
 },
 const_sig_setmask1_r9pfl_entry() //  [R1]
         { info_tbl: [(c9sP5,
                       label: const_sig_setmask1_r9pfl_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sP5: // global
           _r9pfl::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sP8; else goto c9sP9;
       c9sP9: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sPb; else goto c9sPa;
       c9sPb: // global
           HpAlloc = 16;
           goto c9sP8;
       c9sP8: // global
           R1 = _r9pfl::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sPa: // global
           (_c9sOZ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfl::P64);
           if (_c9sOZ::I64 == 0) goto c9sP1; else goto c9sP0;
       c9sP1: // global
           call (I64[I64[_r9pfl::P64]])() args: 8, res: 0, upd: 8;
       c9sP0: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sOZ::I64;
           (_s9pqf::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sig_setmask();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pqf::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.002742232 UTC

[section ""data" . System.Posix.Internals.const_sig_setmask_closure" {
     System.Posix.Internals.const_sig_setmask_closure:
         const stg_IND_STATIC_info;
         const const_sig_setmask1_r9pfl_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.00459006 UTC

[section ""data" . const_f_getfl1_r9pfm_closure" {
     const_f_getfl1_r9pfm_closure:
         const const_f_getfl1_r9pfm_info;
         const 0;
         const 0;
         const 0;
 },
 const_f_getfl1_r9pfm_entry() //  [R1]
         { info_tbl: [(c9sPv,
                       label: const_f_getfl1_r9pfm_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sPv: // global
           _r9pfm::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sPy; else goto c9sPz;
       c9sPz: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sPB; else goto c9sPA;
       c9sPB: // global
           HpAlloc = 16;
           goto c9sPy;
       c9sPy: // global
           R1 = _r9pfm::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sPA: // global
           (_c9sPp::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfm::P64);
           if (_c9sPp::I64 == 0) goto c9sPr; else goto c9sPq;
       c9sPr: // global
           call (I64[I64[_r9pfm::P64]])() args: 8, res: 0, upd: 8;
       c9sPq: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sPp::I64;
           (_s9pqk::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_getfl();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pqk::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.008634736 UTC

[section ""data" . System.Posix.Internals.const_f_getfl_closure" {
     System.Posix.Internals.const_f_getfl_closure:
         const stg_IND_STATIC_info;
         const const_f_getfl1_r9pfm_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.010453863 UTC

[section ""data" . const_f_setfl1_r9pfn_closure" {
     const_f_setfl1_r9pfn_closure:
         const const_f_setfl1_r9pfn_info;
         const 0;
         const 0;
         const 0;
 },
 const_f_setfl1_r9pfn_entry() //  [R1]
         { info_tbl: [(c9sPV,
                       label: const_f_setfl1_r9pfn_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sPV: // global
           _r9pfn::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sPY; else goto c9sPZ;
       c9sPZ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sQ1; else goto c9sQ0;
       c9sQ1: // global
           HpAlloc = 16;
           goto c9sPY;
       c9sPY: // global
           R1 = _r9pfn::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sQ0: // global
           (_c9sPP::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfn::P64);
           if (_c9sPP::I64 == 0) goto c9sPR; else goto c9sPQ;
       c9sPR: // global
           call (I64[I64[_r9pfn::P64]])() args: 8, res: 0, upd: 8;
       c9sPQ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sPP::I64;
           (_s9pqp::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfl();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pqp::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.014839342 UTC

[section ""data" . System.Posix.Internals.const_f_setfl_closure" {
     System.Posix.Internals.const_f_setfl_closure:
         const stg_IND_STATIC_info;
         const const_f_setfl1_r9pfn_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.016713643 UTC

[section ""data" . const_f_setfd1_r9pfo_closure" {
     const_f_setfd1_r9pfo_closure:
         const const_f_setfd1_r9pfo_info;
         const 0;
         const 0;
         const 0;
 },
 const_f_setfd1_r9pfo_entry() //  [R1]
         { info_tbl: [(c9sQl,
                       label: const_f_setfd1_r9pfo_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sQl: // global
           _r9pfo::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sQo; else goto c9sQp;
       c9sQp: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sQr; else goto c9sQq;
       c9sQr: // global
           HpAlloc = 16;
           goto c9sQo;
       c9sQo: // global
           R1 = _r9pfo::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sQq: // global
           (_c9sQf::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfo::P64);
           if (_c9sQf::I64 == 0) goto c9sQh; else goto c9sQg;
       c9sQh: // global
           call (I64[I64[_r9pfo::P64]])() args: 8, res: 0, upd: 8;
       c9sQg: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sQf::I64;
           (_s9pqu::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfd();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pqu::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.020779743 UTC

[section ""data" . System.Posix.Internals.const_f_setfd_closure" {
     System.Posix.Internals.const_f_setfd_closure:
         const stg_IND_STATIC_info;
         const const_f_setfd1_r9pfo_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.022744461 UTC

[section ""data" . const_fd_cloexec1_r9pfp_closure" {
     const_fd_cloexec1_r9pfp_closure:
         const const_fd_cloexec1_r9pfp_info;
         const 0;
         const 0;
         const 0;
 },
 const_fd_cloexec1_r9pfp_entry() //  [R1]
         { info_tbl: [(c9sQK,
                       label: const_fd_cloexec1_r9pfp_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sQK: // global
           _r9pfp::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sQL; else goto c9sQM;
       c9sQM: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sQO; else goto c9sQN;
       c9sQO: // global
           HpAlloc = 16;
           goto c9sQL;
       c9sQL: // global
           R1 = _r9pfp::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sQN: // global
           (_c9sQF::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfp::P64);
           if (_c9sQF::I64 == 0) goto c9sQH; else goto c9sQG;
       c9sQH: // global
           call (I64[I64[_r9pfp::P64]])() args: 8, res: 0, upd: 8;
       c9sQG: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sQF::I64;
           (_s9pqz::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_fd_cloexec();
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9pqz::I64;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.027127306 UTC

[section ""data" . System.Posix.Internals.const_fd_cloexec_closure" {
     System.Posix.Internals.const_fd_cloexec_closure:
         const stg_IND_STATIC_info;
         const const_fd_cloexec1_r9pfp_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.028975247 UTC

[section ""data" . System.Posix.Internals.sizeof_termios_closure" {
     System.Posix.Internals.sizeof_termios_closure:
         const System.Posix.Internals.sizeof_termios_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.sizeof_termios_entry() //  [R1]
         { info_tbl: [(c9sR6,
                       label: System.Posix.Internals.sizeof_termios_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sR6: // global
           _r9lfX::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sR7; else goto c9sR8;
       c9sR8: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sRa; else goto c9sR9;
       c9sRa: // global
           HpAlloc = 16;
           goto c9sR7;
       c9sR7: // global
           R1 = _r9lfX::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sR9: // global
           (_c9sR1::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9lfX::P64);
           if (_c9sR1::I64 == 0) goto c9sR3; else goto c9sR2;
       c9sR3: // global
           call (I64[I64[_r9lfX::P64]])() args: 8, res: 0, upd: 8;
       c9sR2: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sR1::I64;
           (_s9pqD::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_termios();
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9pqD::I64;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.033935585 UTC

[section ""data" . System.Posix.Internals.sizeof_sigset_t_closure" {
     System.Posix.Internals.sizeof_sigset_t_closure:
         const System.Posix.Internals.sizeof_sigset_t_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.sizeof_sigset_t_entry() //  [R1]
         { info_tbl: [(c9sRr,
                       label: System.Posix.Internals.sizeof_sigset_t_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sRr: // global
           _r9lfW::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sRs; else goto c9sRt;
       c9sRt: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sRv; else goto c9sRu;
       c9sRv: // global
           HpAlloc = 16;
           goto c9sRs;
       c9sRs: // global
           R1 = _r9lfW::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sRu: // global
           (_c9sRm::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9lfW::P64);
           if (_c9sRm::I64 == 0) goto c9sRo; else goto c9sRn;
       c9sRo: // global
           call (I64[I64[_r9lfW::P64]])() args: 8, res: 0, upd: 8;
       c9sRn: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sRm::I64;
           (_s9pqH::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_sigset_t();
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9pqH::I64;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.038454414 UTC

[section ""data" . c_lflag1_r9pfq_closure" {
     c_lflag1_r9pfq_closure:
         const c_lflag1_r9pfq_info;
 },
 c_lflag1_r9pfq_entry() //  [R2]
         { info_tbl: [(c9sRL,
                       label: c_lflag1_r9pfq_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sRL: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9sRU; else goto c9sRV;
       c9sRU: // global
           R2 = R2;
           R1 = c_lflag1_r9pfq_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9sRV: // global
           I64[Sp - 8] = block_c9sRI_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9sRZ; else goto c9sRJ;
       u9sRZ: // global
           call _c9sRI(R1) args: 0, res: 0, upd: 0;
       c9sRJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sRI() //  [R1]
         { info_tbl: [(c9sRI,
                       label: block_c9sRI_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sRI: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sRY; else goto c9sRX;
       c9sRY: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sRX: // global
           (_s9pqP::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_lflag(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Word.W32#_con_info;
           I64[Hp] = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pqP::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.044263087 UTC

[section ""data" . System.Posix.Internals.c_lflag_closure" {
     System.Posix.Internals.c_lflag_closure:
         const System.Posix.Internals.c_lflag_info;
 },
 System.Posix.Internals.c_lflag_entry() //  [R2]
         { info_tbl: [(c9sSf,
                       label: System.Posix.Internals.c_lflag_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sSf: // global
           R2 = R2;
           call c_lflag1_r9pfq_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.047787977 UTC

[section ""data" . poke_c_lflag1_r9pfr_closure" {
     poke_c_lflag1_r9pfr_closure:
         const poke_c_lflag1_r9pfr_info;
 },
 poke_c_lflag1_r9pfr_entry() //  [R2, R3]
         { info_tbl: [(c9sSt,
                       label: poke_c_lflag1_r9pfr_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sSt: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9sSx; else goto c9sSy;
       c9sSx: // global
           R3 = R3;
           R2 = R2;
           R1 = poke_c_lflag1_r9pfr_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9sSy: // global
           I64[Sp - 16] = block_c9sSq_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9sSJ; else goto c9sSr;
       u9sSJ: // global
           call _c9sSq(R1) args: 0, res: 0, upd: 0;
       c9sSr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sSq() //  [R1]
         { info_tbl: [(c9sSq,
                       label: block_c9sSq_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sSq: // global
           I64[Sp] = block_c9sSw_info;
           _s9pqW::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9pqW::I64;
           if (R1 & 7 != 0) goto u9sSI; else goto c9sSA;
       u9sSI: // global
           call _c9sSw(R1) args: 0, res: 0, upd: 0;
       c9sSA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sSw() //  [R1]
         { info_tbl: [(c9sSw,
                       label: block_c9sSw_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sSw: // global
           call "ccall" arg hints:  [PtrHint,]  result hints:  [] __hscore_poke_lflag(I64[Sp + 8], I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.054772882 UTC

[section ""data" . System.Posix.Internals.poke_c_lflag_closure" {
     System.Posix.Internals.poke_c_lflag_closure:
         const System.Posix.Internals.poke_c_lflag_info;
 },
 System.Posix.Internals.poke_c_lflag_entry() //  [R2, R3]
         { info_tbl: [(c9sT2,
                       label: System.Posix.Internals.poke_c_lflag_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sT2: // global
           R3 = R3;
           R2 = R2;
           call poke_c_lflag1_r9pfr_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.058271598 UTC

[section ""data" . ptr_c_cc1_r9pfs_closure" {
     ptr_c_cc1_r9pfs_closure:
         const ptr_c_cc1_r9pfs_info;
 },
 ptr_c_cc1_r9pfs_entry() //  [R2]
         { info_tbl: [(c9sTg,
                       label: ptr_c_cc1_r9pfs_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sTg: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9sTm; else goto c9sTn;
       c9sTm: // global
           R2 = R2;
           R1 = ptr_c_cc1_r9pfs_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9sTn: // global
           I64[Sp - 8] = block_c9sTd_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9sTr; else goto c9sTe;
       u9sTr: // global
           call _c9sTd(R1) args: 0, res: 0, upd: 0;
       c9sTe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sTd() //  [R1]
         { info_tbl: [(c9sTd,
                       label: block_c9sTd_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sTd: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sTq; else goto c9sTp;
       c9sTq: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sTp: // global
           (_s9pr9::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] __hscore_ptr_c_cc(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s9pr9::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.064356572 UTC

[section ""data" . System.Posix.Internals.ptr_c_cc_closure" {
     System.Posix.Internals.ptr_c_cc_closure:
         const System.Posix.Internals.ptr_c_cc_info;
 },
 System.Posix.Internals.ptr_c_cc_entry() //  [R2]
         { info_tbl: [(c9sTG,
                       label: System.Posix.Internals.ptr_c_cc_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sTG: // global
           R2 = R2;
           call ptr_c_cc1_r9pfs_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.068297169 UTC

[section ""data" . c_s_issock1_r9pft_closure" {
     c_s_issock1_r9pft_closure:
         const c_s_issock1_r9pft_info;
 },
 c_s_issock1_r9pft_entry() //  [R2]
         { info_tbl: [(c9sTU,
                       label: c_s_issock1_r9pft_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sTU: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9sU3; else goto c9sU4;
       c9sU3: // global
           R2 = R2;
           R1 = c_s_issock1_r9pft_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9sU4: // global
           I64[Sp - 8] = block_c9sTR_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9sU8; else goto c9sTS;
       u9sU8: // global
           call _c9sTR(R1) args: 0, res: 0, upd: 0;
       c9sTS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sTR() //  [R1]
         { info_tbl: [(c9sTR,
                       label: block_c9sTR_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sTR: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sU7; else goto c9sU6;
       c9sU7: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sU6: // global
           (_s9prh::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC3ZCbaseZCSystemziPosixziInternalsZCSzuISSOCK(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9prh::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.073836782 UTC

[section ""data" . System.Posix.Internals.c_s_issock_closure" {
     System.Posix.Internals.c_s_issock_closure:
         const System.Posix.Internals.c_s_issock_info;
 },
 System.Posix.Internals.c_s_issock_entry() //  [R2]
         { info_tbl: [(c9sUo,
                       label: System.Posix.Internals.c_s_issock_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sUo: // global
           R2 = R2;
           call c_s_issock1_r9pft_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.077144309 UTC

[section ""data" . System.Posix.Internals.dEFAULT_BUFFER_SIZE_closure" {
     System.Posix.Internals.dEFAULT_BUFFER_SIZE_closure:
         const System.Posix.Internals.dEFAULT_BUFFER_SIZE_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.dEFAULT_BUFFER_SIZE_entry() //  [R1]
         { info_tbl: [(c9sUD,
                       label: System.Posix.Internals.dEFAULT_BUFFER_SIZE_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sUD: // global
           _r9lfR::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sUE; else goto c9sUF;
       c9sUF: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sUH; else goto c9sUG;
       c9sUH: // global
           HpAlloc = 16;
           goto c9sUE;
       c9sUE: // global
           R1 = _r9lfR::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sUG: // global
           (_c9sUy::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9lfR::P64);
           if (_c9sUy::I64 == 0) goto c9sUA; else goto c9sUz;
       c9sUA: // global
           call (I64[I64[_r9lfR::P64]])() args: 8, res: 0, upd: 8;
       c9sUz: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sUy::I64;
           (_s9prm::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_bufsiz();
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9prm::I64;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.082085765 UTC

[section ""data" . sEEK_CUR1_r9pfu_closure" {
     sEEK_CUR1_r9pfu_closure:
         const sEEK_CUR1_r9pfu_info;
         const 0;
         const 0;
         const 0;
 },
 sEEK_CUR1_r9pfu_entry() //  [R1]
         { info_tbl: [(c9sUZ,
                       label: sEEK_CUR1_r9pfu_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sUZ: // global
           _r9pfu::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sV2; else goto c9sV3;
       c9sV3: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sV5; else goto c9sV4;
       c9sV5: // global
           HpAlloc = 16;
           goto c9sV2;
       c9sV2: // global
           R1 = _r9pfu::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sV4: // global
           (_c9sUT::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfu::P64);
           if (_c9sUT::I64 == 0) goto c9sUV; else goto c9sUU;
       c9sUV: // global
           call (I64[I64[_r9pfu::P64]])() args: 8, res: 0, upd: 8;
       c9sUU: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sUT::I64;
           (_s9prq::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC2ZCbaseZCSystemziPosixziInternalsZCSEEKzuCUR();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9prq::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.08617584 UTC

[section ""data" . System.Posix.Internals.sEEK_CUR_closure" {
     System.Posix.Internals.sEEK_CUR_closure:
         const stg_IND_STATIC_info;
         const sEEK_CUR1_r9pfu_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.08807369 UTC

[section ""data" . sEEK_SET1_r9pfv_closure" {
     sEEK_SET1_r9pfv_closure:
         const sEEK_SET1_r9pfv_info;
         const 0;
         const 0;
         const 0;
 },
 sEEK_SET1_r9pfv_entry() //  [R1]
         { info_tbl: [(c9sVp,
                       label: sEEK_SET1_r9pfv_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sVp: // global
           _r9pfv::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sVs; else goto c9sVt;
       c9sVt: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sVv; else goto c9sVu;
       c9sVv: // global
           HpAlloc = 16;
           goto c9sVs;
       c9sVs: // global
           R1 = _r9pfv::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sVu: // global
           (_c9sVj::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfv::P64);
           if (_c9sVj::I64 == 0) goto c9sVl; else goto c9sVk;
       c9sVl: // global
           call (I64[I64[_r9pfv::P64]])() args: 8, res: 0, upd: 8;
       c9sVk: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sVj::I64;
           (_s9prv::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC1ZCbaseZCSystemziPosixziInternalsZCSEEKzuSET();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9prv::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.092220102 UTC

[section ""data" . System.Posix.Internals.sEEK_SET_closure" {
     System.Posix.Internals.sEEK_SET_closure:
         const stg_IND_STATIC_info;
         const sEEK_SET1_r9pfv_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.094617282 UTC

[section ""data" . sEEK_END1_r9pfw_closure" {
     sEEK_END1_r9pfw_closure:
         const sEEK_END1_r9pfw_info;
         const 0;
         const 0;
         const 0;
 },
 sEEK_END1_r9pfw_entry() //  [R1]
         { info_tbl: [(c9sVP,
                       label: sEEK_END1_r9pfw_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sVP: // global
           _r9pfw::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sVS; else goto c9sVT;
       c9sVT: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9sVV; else goto c9sVU;
       c9sVV: // global
           HpAlloc = 16;
           goto c9sVS;
       c9sVS: // global
           R1 = _r9pfw::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sVU: // global
           (_c9sVJ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfw::P64);
           if (_c9sVJ::I64 == 0) goto c9sVL; else goto c9sVK;
       c9sVL: // global
           call (I64[I64[_r9pfw::P64]])() args: 8, res: 0, upd: 8;
       c9sVK: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9sVJ::I64;
           (_s9prA::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC0ZCbaseZCSystemziPosixziInternalsZCSEEKzuEND();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9prA::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.098816945 UTC

[section ""data" . System.Posix.Internals.sEEK_END_closure" {
     System.Posix.Internals.sEEK_END_closure:
         const stg_IND_STATIC_info;
         const sEEK_END1_r9pfw_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.100744692 UTC

[section ""data" . System.Posix.Internals.withFilePath1_closure" {
     System.Posix.Internals.withFilePath1_closure:
         const System.Posix.Internals.withFilePath1_info;
         const 0;
 },
 System.Posix.Internals.withFilePath1_entry() //  [R2, R3]
         { info_tbl: [(c9sWc,
                       label: System.Posix.Internals.withFilePath1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sWc: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9sWd; else goto c9sWe;
       c9sWd: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Posix.Internals.withFilePath1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9sWe: // global
           I64[Sp - 24] = block_c9sWa_info;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sWa() //  [R1]
         { info_tbl: [(c9sWa,
                       label: block_c9sWa_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sWa: // global
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 24;
           call GHC.Foreign.charIsRepresentable3_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.107013979 UTC

[section ""data" . System.Posix.Internals.withFilePath_closure" {
     System.Posix.Internals.withFilePath_closure:
         const System.Posix.Internals.withFilePath_info;
         const 0;
 },
 System.Posix.Internals.withFilePath_entry() //  [R2, R3]
         { info_tbl: [(c9sWs,
                       label: System.Posix.Internals.withFilePath_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sWs: // global
           R3 = R3;
           R2 = R2;
           call System.Posix.Internals.withFilePath1_entry(R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.114372568 UTC

[section ""data" . System.Posix.Internals.peekFilePathLen1_closure" {
     System.Posix.Internals.peekFilePathLen1_closure:
         const System.Posix.Internals.peekFilePathLen1_info;
         const 0;
 },
 sat_s9psZ_entry() //  [R1]
         { info_tbl: [(c9sYQ,
                       label: sat_s9psZ_info
                       rep:HeapRep 2 ptrs 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sYQ: // global
           _s9psZ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9sYR; else goto c9sYS;
       c9sYS: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9sYU; else goto c9sYT;
       c9sYU: // global
           HpAlloc = 40;
           goto c9sYR;
       c9sYR: // global
           R1 = _s9psZ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sYT: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9psZ::P64;
           _s9psO::P64 = P64[_s9psZ::P64 + 16];
           _s9psW::P64 = P64[_s9psZ::P64 + 24];
           _s9psS::I64 = I64[_s9psZ::P64 + 32];
           I64[Hp - 32] = GHC.Types.C#_con_info;
           I64[Hp - 24] = _s9psS::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = _s9psO::P64;
           R3 = _s9psW::P64;
           R2 = Hp - 14;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9ptg_entry() //  [R1]
         { info_tbl: [(c9sZ3,
                       label: sat_s9ptg_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sZ3: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9sZ4; else goto c9sZ5;
       c9sZ4: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9sZ5: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = GHC.Types.[]_closure+1;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 $wgo_s9psg_entry() //  [R1, R2]
         { info_tbl: [(c9sZ6,
                       label: $wgo_s9psg_info
                       rep:HeapRep 2 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sZ6: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c9sZ7; else goto c9sZ8;
       c9sZ7: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9sZ8: // global
           I64[Sp - 32] = block_c9sXv_info;
           _s9psg::P64 = R1;
           _s9psf::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp - 24] = _s9psf::P64;
           P64[Sp - 16] = _s9psg::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9t0I; else goto c9sXw;
       u9t0I: // global
           call _c9sXv(R1) args: 0, res: 0, upd: 0;
       c9sXw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sXv() //  [R1]
         { info_tbl: [(c9sXv,
                       label: block_c9sXv_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sXv: // global
           _s9psf::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9sXA_info;
           R3 = _s9psf::P64;
           R2 = P64[Sp + 24];
           _s9psl::P64 = P64[R1 + 15];
           R1 = P64[R1 + 7];
           P64[Sp + 24] = _s9psl::P64;
           Sp = Sp + 8;
           call stg_ap_ppv_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sXA() //  [R1]
         { info_tbl: [(c9sXA,
                       label: block_c9sXA_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sXA: // global
           I64[Sp] = block_c9sXC_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u9t0A; else goto c9sXD;
       u9t0A: // global
           call _c9sXC(R1) args: 0, res: 0, upd: 0;
       c9sXD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sXC() //  [R1]
         { info_tbl: [(c9sXC,
                       label: block_c9sXC_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sXC: // global
           I64[Sp - 16] = block_c9sXH_info;
           _s9pst::P64 = P64[R1 + 7];
           _s9psv::P64 = P64[R1 + 23];
           R1 = P64[R1 + 15];
           P64[Sp - 8] = _s9psv::P64;
           P64[Sp] = _s9pst::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9t0B; else goto c9sXI;
       u9t0B: // global
           call _c9sXH(R1) args: 0, res: 0, upd: 0;
       c9sXI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sXH() //  [R1]
         { info_tbl: [(c9sXH,
                       label: block_c9sXH_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sXH: // global
           if (I64[R1 + 39] == I64[R1 + 47]) goto c9t03; else goto c9sZw;
       c9t03: // global
           I64[Sp + 32] = block_c9sYf_info;
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           if (R1 & 7 != 0) goto u9t0D; else goto c9sYg;
       u9t0D: // global
           call _c9sYf(R1) args: 0, res: 0, upd: 0;
       c9sYg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9sZw: // global
           I64[Sp] = block_c9sZd_info;
           _s9psw::P64 = R1;
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _s9psw::P64;
           if (R1 & 7 != 0) goto u9t0C; else goto c9sZx;
       u9t0C: // global
           call _c9sZd(R1) args: 0, res: 0, upd: 0;
       c9sZx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sYf() //  [R1]
         { info_tbl: [(c9sYf,
                       label: block_c9sYf_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sYf: // global
           _s9ptE::P64 = P64[R1 + 7];
           _s9ptJ::I64 = I64[R1 + 47] - I64[R1 + 39];
           if (%MO_S_Gt_W64(_s9ptJ::I64, 0)) goto c9t0l; else goto c9t0m;
       c9t0l: // global
           P64[Sp - 24] = _s9ptE::P64;
           I64[Sp - 16] = _s9ptJ::I64 - 1;
           P64[Sp - 8] = GHC.Types.[]_closure+1;
           I64[Sp] = I64[R1 + 23];
           Sp = Sp - 32;
           call _c9sYx() args: 0, res: 0, upd: 0;
       c9t0m: // global
           call MO_Touch(_s9ptE::P64);
           R1 = GHC.Types.[]_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9sYx() //  []
         { info_tbl: [(c9sYx,
                       label: block_c9sYx_info
                       rep:StackRep [False, True, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sYx: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9t0g; else goto c9t0f;
       c9t0g: // global
           HpAlloc = 40;
           I64[Sp] = block_c9sYx_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c9t0f: // global
           _s9ptW::P64 = P64[Sp + 24];
           _s9ptY::I64 = I64[Sp + 16];
           if (_s9ptY::I64 != 0) goto c9t0i; else goto c9t0j;
       c9t0i: // global
           I64[Hp - 32] = GHC.Types.C#_con_info;
           I64[Hp - 24] = %MO_UU_Conv_W32_W64(I32[I64[Sp + 32] + (_s9ptY::I64 << 2)]);
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = _s9ptW::P64;
           I64[Sp + 16] = _s9ptY::I64 - 1;
           P64[Sp + 24] = Hp - 14;
           call _c9sYx() args: 0, res: 0, upd: 0;
       c9t0j: // global
           Hp = Hp - 40;
           P64[Sp + 24] = _s9ptW::P64;
           Sp = Sp + 8;
           call _c9t06() args: 0, res: 0, upd: 0;
     }
 },
 _c9t06() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t06: // global
           Hp = Hp + 40;
           _s9ptM::P64 = P64[Sp + 16];
           if (Hp > HpLim) (likely: False) goto c9t0d; else goto c9t0c;
       c9t0d: // global
           HpAlloc = 40;
           I64[Sp - 8] = block_c9t05_info;
           R1 = _s9ptM::P64;
           Sp = Sp - 8;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9t0c: // global
           _s9ptQ::I64 = %MO_UU_Conv_W32_W64(I32[I64[Sp + 24]]);
           call MO_Touch(P64[Sp]);
           I64[Hp - 32] = GHC.Types.C#_con_info;
           I64[Hp - 24] = _s9ptQ::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = _s9ptM::P64;
           R1 = Hp - 14;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9t05() //  [R1]
         { info_tbl: [(c9t05,
                       label: block_c9t05_info
                       rep:StackRep [False, True, True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t05: // global
           P64[Sp + 24] = R1;
           Sp = Sp + 8;
           call _c9t06() args: 0, res: 0, upd: 0;
     }
 },
 _c9sZd() //  [R1]
         { info_tbl: [(c9sZd,
                       label: block_c9sZd_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sZd: // global
           _s9psv::P64 = P64[Sp + 8];
           if (R1 & 7 == 2) goto c9sZX; else goto c9sZL;
       c9sZX: // global
           I64[Sp + 8] = block_c9sZV_info;
           R1 = _s9psv::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9t0J; else goto c9sZY;
       u9t0J: // global
           call _c9sZV(R1) args: 0, res: 0, upd: 0;
       c9sZY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9sZL: // global
           _s9psw::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c9sZB_info;
           R3 = _s9psv::P64;
           R2 = _s9psw::P64;
           R1 = P64[Sp + 32];
           Sp = Sp + 16;
           call stg_ap_ppv_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sZV() //  [R1]
         { info_tbl: [(c9sZV,
                       label: block_c9sZV_info
                       rep:StackRep [False, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sZV: // global
           P64[Sp + 24] = P64[Sp + 8];
           I64[Sp + 8] = I64[R1 + 23];
           P64[Sp - 16] = P64[R1 + 7];
           I64[Sp - 8] = I64[R1 + 39];
           I64[Sp] = I64[R1 + 47];
           Sp = Sp - 16;
           call _s9psE() args: 0, res: 0, upd: 0;
     }
 },
 _c9sZB() //  [R1]
         { info_tbl: [(c9sZB,
                       label: block_c9sZB_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sZB: // global
           I64[Sp] = block_c9sZD_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u9t0K; else goto c9sZE;
       u9t0K: // global
           call _c9sZD(R1) args: 0, res: 0, upd: 0;
       c9sZE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sZD() //  [R1]
         { info_tbl: [(c9sZD,
                       label: block_c9sZD_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sZD: // global
           I64[Sp] = block_c9sZI_info;
           _s9ptm::P64 = P64[R1 + 7];
           R1 = P64[R1 + 15];
           P64[Sp + 16] = _s9ptm::P64;
           if (R1 & 7 != 0) goto u9t0L; else goto c9sZO;
       u9t0L: // global
           call _c9sZI(R1) args: 0, res: 0, upd: 0;
       c9sZO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sZI() //  [R1]
         { info_tbl: [(c9sZI,
                       label: block_c9sZI_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sZI: // global
           P64[Sp - 24] = P64[R1 + 7];
           I64[Sp - 16] = I64[R1 + 39];
           I64[Sp - 8] = I64[R1 + 47];
           I64[Sp] = I64[R1 + 23];
           P64[Sp + 16] = P64[Sp + 16];
           Sp = Sp - 24;
           call _s9psE() args: 0, res: 0, upd: 0;
     }
 },
 _s9psE() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       s9psE: // global
           _s9psL::I64 = I64[Sp + 16] - I64[Sp + 8];
           if (%MO_S_Gt_W64(_s9psL::I64, 0)) goto c9sZq; else goto c9sZr;
       c9sZq: // global
           P64[Sp + 8] = GHC.Types.[]_closure+1;
           I64[Sp + 16] = _s9psL::I64 - 1;
           Sp = Sp - 8;
           call _c9sY7() args: 0, res: 0, upd: 0;
       c9sZr: // global
           _s9psg::P64 = P64[Sp + 32];
           _s9psG::P64 = P64[Sp + 40];
           call MO_Touch(P64[Sp]);
           I64[Sp + 40] = block_c9sYX_info;
           R2 = _s9psG::P64;
           R1 = _s9psg::P64;
           Sp = Sp + 40;
           call $wgo_s9psg_entry(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sY7() //  []
         { info_tbl: [(c9sY7,
                       label: block_c9sY7_info
                       rep:StackRep [False, False, True, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sY7: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9sZl; else goto c9sZk;
       c9sZl: // global
           HpAlloc = 40;
           I64[Sp] = block_c9sY7_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c9sZk: // global
           _s9psH::I64 = I64[Sp + 32];
           _s9pt2::P64 = P64[Sp + 16];
           _s9pt4::I64 = I64[Sp + 24];
           if (_s9pt4::I64 != 0) goto c9sZn; else goto c9sZo;
       c9sZn: // global
           _s9pt7::I64 = %MO_UU_Conv_W32_W64(I32[_s9psH::I64 + (_s9pt4::I64 << 2)]);
           I64[Hp - 32] = GHC.Types.C#_con_info;
           I64[Hp - 24] = _s9pt7::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = _s9pt2::P64;
           I64[Sp + 24] = _s9pt4::I64 - 1;
           P64[Sp + 16] = Hp - 14;
           call _c9sY7() args: 0, res: 0, upd: 0;
       c9sZo: // global
           Hp = Hp - 40;
           _s9psg::P64 = P64[Sp + 40];
           _s9psG::P64 = P64[Sp + 48];
           _s9psS::I64 = %MO_UU_Conv_W32_W64(I32[_s9psH::I64]);
           call MO_Touch(P64[Sp + 8]);
           I64[Sp + 32] = block_c9sYI_info;
           R2 = _s9psG::P64;
           R1 = _s9psg::P64;
           I64[Sp + 40] = _s9psS::I64;
           P64[Sp + 48] = _s9pt2::P64;
           Sp = Sp + 32;
           call $wgo_s9psg_entry(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sYI() //  [R1]
         { info_tbl: [(c9sYI,
                       label: block_c9sYI_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sYI: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9sZi; else goto c9sZh;
       c9sZi: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sZh: // global
           I64[Hp - 32] = sat_s9psZ_info;
           P64[Hp - 16] = P64[Sp + 16];
           P64[Hp - 8] = R1;
           I64[Hp] = I64[Sp + 8];
           R1 = Hp - 32;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9sYX() //  [R1]
         { info_tbl: [(c9sYX,
                       label: block_c9sYX_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sYX: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9sZu; else goto c9sZt;
       c9sZu: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9sZt: // global
           I64[Hp - 16] = sat_s9ptg_info;
           P64[Hp] = R1;
           R1 = Hp - 16;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9pub_entry() //  [R1, R2]
         { info_tbl: [(c9t0Q,
                       label: sat_s9pub_info
                       rep:HeapRep 2 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t0Q: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c9t0R; else goto c9t0S;
       c9t0R: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9t0S: // global
           I64[Sp - 24] = block_c9sWU_info;
           _s9prT::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp - 16] = _s9prT::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9t1c; else goto c9sWV;
       u9t1c: // global
           call _c9sWU(R1) args: 0, res: 0, upd: 0;
       c9sWV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sWU() //  [R1]
         { info_tbl: [(c9sWU,
                       label: block_c9sWU_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sWU: // global
           I64[Sp - 8] = block_c9sWZ_info;
           _s9prX::I64 = I64[R1 + 7];
           R1 = GHC.ForeignPtr.NoFinalizers_closure+1;
           I64[Sp] = _s9prX::I64;
           Sp = Sp - 8;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sWZ() //  [R1]
         { info_tbl: [(c9sWZ,
                       label: block_c9sWZ_info
                       rep:StackRep [True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sWZ: // global
           I64[Sp] = block_c9sX1_info;
           _s9ps0::P64 = R1;
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _s9ps0::P64;
           if (R1 & 7 != 0) goto u9t1b; else goto c9sX2;
       u9t1b: // global
           call _c9sX1(R1) args: 0, res: 0, upd: 0;
       c9sX2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sX1() //  [R1]
         { info_tbl: [(c9sX1,
                       label: block_c9sX1_info
                       rep:StackRep [True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sX1: // global
           _s9ps2::I64 = I64[R1 + 7];
           if (%MO_S_Gt_W64(_s9ps2::I64, 1)) goto c9t19; else goto c9t1a;
       c9t19: // global
           _s9ps4::I64 = _s9ps2::I64;
           goto s9ps3;
       c9t1a: // global
           _s9ps4::I64 = 1;
           goto s9ps3;
       s9ps3: // global
           _s9ps5::I64 = _s9ps4::I64 << 2;
           if (%MO_S_Ge_W64(_s9ps5::I64, 0)) goto c9t10; else goto c9t15;
       c9t10: // global
           I64[Sp - 24] = block_c9sXh_info;
           R1 = GHC.ForeignPtr.NoFinalizers_closure+1;
           I64[Sp - 16] = _s9ps4::I64;
           I64[Sp - 8] = _s9ps5::I64;
           I64[Sp] = _s9ps2::I64;
           Sp = Sp - 24;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
       c9t15: // global
           R1 = GHC.ForeignPtr.mallocForeignPtrBytes2_closure;
           Sp = Sp + 32;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9sXh() //  [R1]
         { info_tbl: [(c9sXh,
                       label: block_c9sXh_info
                       rep:StackRep [True, True, True, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sXh: // global
           I64[Sp] = block_c9sXj_info;
           _s9ps9::P64 = R1;
           R1 = I64[Sp + 16];
           P64[Sp + 16] = _s9ps9::P64;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sXj() //  [R1]
         { info_tbl: [(c9sXj,
                       label: block_c9sXj_info
                       rep:StackRep [True, False, True, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sXj: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto c9t14; else goto c9t13;
       c9t14: // global
           HpAlloc = 176;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9t13: // global
           I64[Hp - 168] = GHC.ForeignPtr.MallocPtr_con_info;
           P64[Hp - 160] = R1;
           P64[Hp - 152] = P64[Sp + 16];
           I64[Hp - 144] = GHC.IO.Buffer.Buffer_con_info;
           P64[Hp - 136] = Hp - 166;
           P64[Hp - 128] = GHC.IO.Buffer.WriteBuffer_closure+2;
           P64[Hp - 120] = R1 + 16;
           I64[Hp - 112] = I64[Sp + 8];
           I64[Hp - 104] = 0;
           I64[Hp - 96] = 0;
           I64[Hp - 88] = $wgo_s9psg_info;
           P64[Hp - 80] = P64[Sp + 48];
           P64[Hp - 72] = Hp - 143;
           I64[Hp - 64] = GHC.ForeignPtr.PlainForeignPtr_con_info;
           P64[Hp - 56] = P64[Sp + 40];
           I64[Hp - 48] = GHC.IO.Buffer.Buffer_con_info;
           P64[Hp - 40] = Hp - 63;
           P64[Hp - 32] = GHC.IO.Buffer.ReadBuffer_closure+1;
           I64[Hp - 24] = I64[Sp + 32];
           _s9ps2::I64 = I64[Sp + 24];
           I64[Hp - 16] = _s9ps2::I64;
           I64[Hp - 8] = 0;
           I64[Hp] = _s9ps2::I64;
           R2 = Hp - 47;
           R1 = Hp - 86;
           Sp = Sp + 56;
           call $wgo_s9psg_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.peekFilePathLen1_entry() //  [R2]
         { info_tbl: [(c9t1d,
                       label: System.Posix.Internals.peekFilePathLen1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t1d: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9t1e; else goto c9t1f;
       c9t1e: // global
           R2 = R2;
           R1 = System.Posix.Internals.peekFilePathLen1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9t1f: // global
           I64[Sp - 16] = block_c9sWD_info;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sWD() //  [R1]
         { info_tbl: [(c9sWD,
                       label: block_c9sWD_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sWD: // global
           I64[Sp] = block_c9sWF_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u9t1l; else goto c9sWG;
       u9t1l: // global
           call _c9sWF(R1) args: 0, res: 0, upd: 0;
       c9sWG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sWF() //  [R1]
         { info_tbl: [(c9sWF,
                       label: block_c9sWF_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sWF: // global
           I64[Sp] = block_c9sWK_info;
           _s9prP::P64 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s9prP::P64;
           if (R1 & 7 != 0) goto u9t1m; else goto c9sWL;
       u9t1m: // global
           call _c9sWK(R1) args: 0, res: 0, upd: 0;
       c9sWL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9sWK() //  [R1]
         { info_tbl: [(c9sWK,
                       label: block_c9sWK_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9sWK: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9t1k; else goto c9t1j;
       c9t1k: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9t1j: // global
           _s9prS::P64 = P64[R1 + 7];
           _s9prT::P64 = P64[R1 + 15];
           I64[Hp - 16] = sat_s9pub_info;
           P64[Hp - 8] = _s9prS::P64;
           P64[Hp] = _s9prT::P64;
           R4 = Hp - 14;
           R3 = GHC.IO.Encoding.Types.close_closure+1;
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.IO.bracket1_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.176358721 UTC

[section ""data" . System.Posix.Internals.peekFilePathLen_closure" {
     System.Posix.Internals.peekFilePathLen_closure:
         const System.Posix.Internals.peekFilePathLen_info;
         const 0;
 },
 System.Posix.Internals.peekFilePathLen_entry() //  [R2]
         { info_tbl: [(c9t3S,
                       label: System.Posix.Internals.peekFilePathLen_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t3S: // global
           R2 = R2;
           call System.Posix.Internals.peekFilePathLen1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.179870103 UTC

[section ""data" . System.Posix.Internals.peekFilePath1_closure" {
     System.Posix.Internals.peekFilePath1_closure:
         const System.Posix.Internals.peekFilePath1_info;
         const 0;
 },
 System.Posix.Internals.peekFilePath1_entry() //  [R2]
         { info_tbl: [(c9t45,
                       label: System.Posix.Internals.peekFilePath1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t45: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9t46; else goto c9t47;
       c9t46: // global
           R2 = R2;
           R1 = System.Posix.Internals.peekFilePath1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9t47: // global
           I64[Sp - 16] = block_c9t43_info;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9t43() //  [R1]
         { info_tbl: [(c9t43,
                       label: block_c9t43_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t43: // global
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call GHC.Foreign.peekCString1_entry(R3,
                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.185107211 UTC

[section ""data" . System.Posix.Internals.peekFilePath_closure" {
     System.Posix.Internals.peekFilePath_closure:
         const System.Posix.Internals.peekFilePath_info;
         const 0;
 },
 System.Posix.Internals.peekFilePath_entry() //  [R2]
         { info_tbl: [(c9t4l,
                       label: System.Posix.Internals.peekFilePath_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t4l: // global
           R2 = R2;
           call System.Posix.Internals.peekFilePath1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.189477856 UTC

[section ""data" . System.Posix.Internals.newFilePath1_closure" {
     System.Posix.Internals.newFilePath1_closure:
         const System.Posix.Internals.newFilePath1_info;
         const 0;
 },
 System.Posix.Internals.newFilePath1_entry() //  [R2]
         { info_tbl: [(c9t4y,
                       label: System.Posix.Internals.newFilePath1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t4y: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9t4z; else goto c9t4A;
       c9t4z: // global
           R2 = R2;
           R1 = System.Posix.Internals.newFilePath1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9t4A: // global
           I64[Sp - 16] = block_c9t4w_info;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9t4w() //  [R1]
         { info_tbl: [(c9t4w,
                       label: block_c9t4w_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t4w: // global
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call GHC.Foreign.newCString1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.194560011 UTC

[section ""data" . System.Posix.Internals.newFilePath_closure" {
     System.Posix.Internals.newFilePath_closure:
         const System.Posix.Internals.newFilePath_info;
         const 0;
 },
 System.Posix.Internals.newFilePath_entry() //  [R2]
         { info_tbl: [(c9t4O,
                       label: System.Posix.Internals.newFilePath_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t4O: // global
           R2 = R2;
           call System.Posix.Internals.newFilePath1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.199486666 UTC

[section ""cstring" . System.Posix.Internals.puts3_bytes" {
     System.Posix.Internals.puts3_bytes:
         I8[] [10]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.201657092 UTC

[section ""data" . System.Posix.Internals.puts2_closure" {
     System.Posix.Internals.puts2_closure:
         const System.Posix.Internals.puts2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.puts2_entry() //  [R1]
         { info_tbl: [(c9t52,
                       label: System.Posix.Internals.puts2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t52: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9t53; else goto c9t54;
       c9t53: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9t54: // global
           (_c9t4Z::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9t4Z::I64 == 0) goto c9t51; else goto c9t50;
       c9t51: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9t50: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9t4Z::I64;
           R2 = System.Posix.Internals.puts3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.207362846 UTC

[section ""data" . System.Posix.Internals.puts1_closure" {
     System.Posix.Internals.puts1_closure:
         const System.Posix.Internals.puts1_info;
         const 0;
 },
 System.Posix.Internals.puts1_entry() //  [R2]
         { info_tbl: [(c9t5i,
                       label: System.Posix.Internals.puts1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t5i: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c9t5m; else goto c9t5n;
       c9t5m: // global
           R2 = R2;
           R1 = System.Posix.Internals.puts1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9t5n: // global
           I64[Sp - 8] = block_c9t5g_info;
           R3 = System.Posix.Internals.puts2_closure;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9t5g() //  [R1]
         { info_tbl: [(c9t5g,
                       label: block_c9t5g_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t5g: // global
           I64[Sp - 8] = block_c9t5l_info;
           R3 = 0;
           R2 = R1;
           P64[Sp] = R1;
           Sp = Sp - 8;
           call GHC.List.$wlenAcc_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9t5l() //  [R1]
         { info_tbl: [(c9t5l,
                       label: block_c9t5l_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t5l: // global
           I64[Sp - 8] = block_c9t5s_info;
           R2 = 1;
           _s9pup::I64 = R1;
           R1 = R1;
           I64[Sp] = _s9pup::I64;
           Sp = Sp - 8;
           call stg_newAlignedPinnedByteArray#(R2,
                                               R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9t5s() //  [R1]
         { info_tbl: [(c9t5s,
                       label: block_c9t5s_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t5s: // global
           P64[Sp - 16] = P64[Sp + 16];
           I64[Sp - 8] = 0;
           P64[Sp] = R1 + 16;
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call _c9t5H() args: 0, res: 0, upd: 0;
     }
 },
 _c9t5H() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t5H: // global
           _s9puG::P64 = P64[Sp];
           I64[Sp] = block_c9t5K_info;
           R1 = _s9puG::P64;
           if (R1 & 7 != 0) goto u9t6m; else goto c9t5M;
       u9t6m: // global
           call _c9t5K(R1) args: 0, res: 0, upd: 0;
       c9t5M: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9t5K() //  [R1]
         { info_tbl: [(c9t5K,
                       label: block_c9t5K_info
                       rep:StackRep [True, True, True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t5K: // global
           if (R1 & 7 == 1) goto c9t5S; else goto c9t5X;
       c9t5S: // global
           _s9puv::P64 = P64[Sp + 32];
           (_s9puD::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite(1, I64[Sp + 16], I64[Sp + 24]);
           call MO_Touch(_s9puv::P64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9t5X: // global
           I64[Sp - 8] = block_c9t5V_info;
           _s9puL::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9puL::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9t6n; else goto c9t5Y;
       u9t6n: // global
           call _c9t5V(R1) args: 0, res: 0, upd: 0;
       c9t5Y: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9t5V() //  [R1]
         { info_tbl: [(c9t5V,
                       label: block_c9t5V_info
                       rep:StackRep [False, True, True, True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t5V: // global
           _s9puH::I64 = I64[Sp + 16];
           _s9puL::P64 = P64[Sp + 8];
           I8[I64[Sp + 24] + _s9puH::I64] = %MO_SS_Conv_W64_W8(I64[R1 + 7]);
           P64[Sp + 8] = _s9puL::P64;
           I64[Sp + 16] = _s9puH::I64 + 1;
           Sp = Sp + 8;
           call _c9t5H() args: 0, res: 0, upd: 0;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.223838999 UTC

[section ""data" . System.Posix.Internals.puts_closure" {
     System.Posix.Internals.puts_closure:
         const System.Posix.Internals.puts_info;
         const 0;
 },
 System.Posix.Internals.puts_entry() //  [R2]
         { info_tbl: [(c9t6Z,
                       label: System.Posix.Internals.puts_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t6Z: // global
           R2 = R2;
           call System.Posix.Internals.puts1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.228889125 UTC

[section ""data" . System.Posix.Internals.s_issock_closure" {
     System.Posix.Internals.s_issock_closure:
         const System.Posix.Internals.s_issock_info;
 },
 System.Posix.Internals.s_issock_entry() //  [R2]
         { info_tbl: [(c9t7d,
                       label: System.Posix.Internals.s_issock_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t7d: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9t7e; else goto c9t7f;
       c9t7e: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_issock_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9t7f: // global
           I64[Sp - 8] = block_c9t7a_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9t7A; else goto c9t7b;
       u9t7A: // global
           call _c9t7a(R1) args: 0, res: 0, upd: 0;
       c9t7b: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9t7a() //  [R1]
         { info_tbl: [(c9t7a,
                       label: block_c9t7a_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t7a: // global
           (_s9puY::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC3ZCbaseZCSystemziPosixziInternalsZCSzuISSOCK(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9puY::I64) == 0 :: W32) goto c9t7w; else goto c9t7q;
       c9t7w: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9t7q: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.23563477 UTC

[section ""data" . System.Posix.Internals.fdFileSize5_closure" {
     System.Posix.Internals.fdFileSize5_closure:
         const GHC.Int.I32#_con_info;
         const (-1);
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.238017374 UTC

[section ""data" . System.Posix.Internals.fdFileSize_pred_closure" {
     System.Posix.Internals.fdFileSize_pred_closure:
         const System.Posix.Internals.fdFileSize_pred_info;
 },
 System.Posix.Internals.fdFileSize_pred_entry() //  [R2]
         { info_tbl: [(c9t7U,
                       label: System.Posix.Internals.fdFileSize_pred_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t7U: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9t7V; else goto c9t7W;
       c9t7V: // global
           R2 = R2;
           R1 = System.Posix.Internals.fdFileSize_pred_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9t7W: // global
           I64[Sp - 8] = block_c9t7R_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9t84; else goto c9t7S;
       u9t84: // global
           call _c9t7R(R1) args: 0, res: 0, upd: 0;
       c9t7S: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9t7R() //  [R1]
         { info_tbl: [(c9t7R,
                       label: block_c9t7R_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t7R: // global
           if (I64[R1 + 7] == (-1)) goto c9t83; else goto c9t82;
       c9t83: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9t82: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.243571111 UTC

[section ""cstring" . lvl_r9pfx_bytes" {
     lvl_r9pfx_bytes:
         I8[] [115,105,103,112,114,111,99,109,97,115,107]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.245457525 UTC

[section ""data" . lvl1_r9pfy_closure" {
     lvl1_r9pfy_closure:
         const lvl1_r9pfy_info;
         const 0;
         const 0;
         const 0;
 },
 lvl1_r9pfy_entry() //  [R1]
         { info_tbl: [(c9t8n,
                       label: lvl1_r9pfy_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t8n: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9t8o; else goto c9t8p;
       c9t8o: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9t8p: // global
           (_c9t8k::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9t8k::I64 == 0) goto c9t8m; else goto c9t8l;
       c9t8m: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9t8l: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9t8k::I64;
           R2 = lvl_r9pfx_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.249598292 UTC

[section ""data" . lvl2_r9pfz_closure" {
     lvl2_r9pfz_closure:
         const lvl2_r9pfz_info;
         const 0;
 },
 lvl2_r9pfz_entry() //  [R2]
         { info_tbl: [(c9t8D,
                       label: lvl2_r9pfz_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t8D: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl1_r9pfy_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.25277104 UTC

[section ""cstring" . lvl3_r9pfA_bytes" {
     lvl3_r9pfA_bytes:
         I8[] [116,99,83,101,116,65,116,116,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.254522189 UTC

[section ""data" . lvl4_r9pfB_closure" {
     lvl4_r9pfB_closure:
         const lvl4_r9pfB_info;
         const 0;
         const 0;
         const 0;
 },
 lvl4_r9pfB_entry() //  [R1]
         { info_tbl: [(c9t8R,
                       label: lvl4_r9pfB_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t8R: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9t8S; else goto c9t8T;
       c9t8S: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9t8T: // global
           (_c9t8O::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9t8O::I64 == 0) goto c9t8Q; else goto c9t8P;
       c9t8Q: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9t8P: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9t8O::I64;
           R2 = lvl3_r9pfA_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.258259817 UTC

[section ""cstring" . lvl5_r9pfC_bytes" {
     lvl5_r9pfC_bytes:
         I8[] [115,105,103,97,100,100,115,101,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.260648009 UTC

[section ""data" . lvl6_r9pfD_closure" {
     lvl6_r9pfD_closure:
         const lvl6_r9pfD_info;
         const 0;
         const 0;
         const 0;
 },
 lvl6_r9pfD_entry() //  [R1]
         { info_tbl: [(c9t98,
                       label: lvl6_r9pfD_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t98: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9t99; else goto c9t9a;
       c9t99: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9t9a: // global
           (_c9t95::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9t95::I64 == 0) goto c9t97; else goto c9t96;
       c9t97: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9t96: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9t95::I64;
           R2 = lvl5_r9pfC_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.264657681 UTC

[section ""data" . lvl7_r9pfE_closure" {
     lvl7_r9pfE_closure:
         const lvl7_r9pfE_info;
         const 0;
 },
 lvl7_r9pfE_entry() //  [R2]
         { info_tbl: [(c9t9o,
                       label: lvl7_r9pfE_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t9o: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl6_r9pfD_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.268350649 UTC

[section ""cstring" . lvl8_r9pfF_bytes" {
     lvl8_r9pfF_bytes:
         I8[] [115,105,103,101,109,112,116,121,115,101,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.270209964 UTC

[section ""data" . lvl9_r9pfG_closure" {
     lvl9_r9pfG_closure:
         const lvl9_r9pfG_info;
         const 0;
         const 0;
         const 0;
 },
 lvl9_r9pfG_entry() //  [R1]
         { info_tbl: [(c9t9C,
                       label: lvl9_r9pfG_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t9C: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9t9D; else goto c9t9E;
       c9t9D: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9t9E: // global
           (_c9t9z::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9t9z::I64 == 0) goto c9t9B; else goto c9t9A;
       c9t9B: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9t9A: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9t9z::I64;
           R2 = lvl8_r9pfF_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.274145179 UTC

[section ""data" . lvl10_r9pfH_closure" {
     lvl10_r9pfH_closure:
         const lvl10_r9pfH_info;
         const 0;
 },
 lvl10_r9pfH_entry() //  [R2]
         { info_tbl: [(c9t9S,
                       label: lvl10_r9pfH_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9t9S: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl9_r9pfG_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.280079572 UTC

[section ""data" . System.Posix.Internals.getEcho3_closure" {
     System.Posix.Internals.getEcho3_closure:
         const System.Posix.Internals.getEcho3_info;
         const 0;
 },
 sat_s9pvA_entry() //  [R1]
         { info_tbl: [(c9tao,
                       label: sat_s9pvA_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tao: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9tau; else goto c9tat;
       c9tau: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9tat: // global
           (_s9pvx::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC10ZCbaseZCSystemziPosixziInternalsZCtcgetattr(I64[R1 + 7], I64[R1 + 15]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pvx::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9pwD_entry() //  [R1]
         { info_tbl: [(c9tbx,
                       label: sat_s9pwD_info
                       rep:HeapRep 3 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tbx: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9tbK; else goto c9tbJ;
       c9tbK: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9tbJ: // global
           (_s9pwA::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC9ZCbaseZCSystemziPosixziInternalsZCtcsetattr(I64[R1 + 7], %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[R1 + 23])), I64[R1 + 15]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pwA::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.getEcho3_entry() //  [R2, R3]
         { info_tbl: [(c9tbL,
                       label: System.Posix.Internals.getEcho3_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tbL: // global
           if ((Sp + -72) < SpLim) (likely: False) goto c9tbM; else goto c9tbN;
       c9tbM: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Posix.Internals.getEcho3_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9tbN: // global
           _s9pve::P64 = R3;
           (_s9pvj::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_termios();
           I64[Sp - 32] = block_c9ta4_info;
           R1 = _s9pvj::I64;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = _s9pve::P64;
           I64[Sp - 8] = _s9pvj::I64;
           Sp = Sp - 32;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ta4() //  [R1]
         { info_tbl: [(c9ta4,
                       label: block_c9ta4_info
                       rep:StackRep [False, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ta4: // global
           I64[Sp] = block_c9ta6_info;
           _s9pvp::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s9pvp::P64;
           if (R1 & 7 != 0) goto u9tdC; else goto c9ta7;
       u9tdC: // global
           call _c9ta6(R1) args: 0, res: 0, upd: 0;
       c9ta7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ta6() //  [R1]
         { info_tbl: [(c9ta6,
                       label: block_c9ta6_info
                       rep:StackRep [False, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ta6: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9tbR; else goto c9tbQ;
       c9tbR: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9tbQ: // global
           _s9pvr::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9pvA_info;
           I64[Hp - 8] = _s9pvr::I64;
           _s9pvs::I64 = P64[Sp + 8] + 16;
           I64[Hp] = _s9pvs::I64;
           I64[Sp - 16] = block_c9tav_info;
           R4 = Hp - 15;
           R3 = lvl4_r9pfB_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           I64[Sp - 8] = _s9pvs::I64;
           I64[Sp] = _s9pvr::I64;
           Sp = Sp - 16;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9tav() //  []
         { info_tbl: [(c9tav,
                       label: block_c9tav_info
                       rep:StackRep [True, True, False, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tav: // global
           _s9pvr::I64 = I64[Sp + 16];
           if (%MO_S_Gt_W64(_s9pvr::I64, 2)) goto s9pvE; else goto c9tdh;
       c9tdh: // global
           _s9pvj::I64 = I64[Sp + 40];
           _s9pvs::I64 = I64[Sp + 8];
           (_s9pxi::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [PtrHint] __hscore_get_saved_termios(_s9pvr::I64);
           if (_s9pxi::I64 != 0) goto s9pvE; else goto c9tdg;
       c9tdg: // global
           (_s9pxo::I64) = call "ccall" arg hints:  []  result hints:  [PtrHint] malloc(_s9pvj::I64);
           if (_s9pxo::I64 == 0) goto c9tdf; else goto c9tde;
       c9tdf: // global
           R1 = Foreign.Marshal.Alloc.malloc1_closure;
           Sp = Sp + 48;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
       c9tde: // global
           (_s9pxu::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint,]  result hints:  [PtrHint] memcpy(_s9pxo::I64, _s9pvs::I64, _s9pvj::I64);
           call "ccall" arg hints:  [‘signed’,
                                     PtrHint]  result hints:  [] __hscore_set_saved_termios(_s9pvr::I64, _s9pxo::I64);
           goto s9pvE;
       s9pvE: // global
           (_s9pvJ::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_sigset_t();
           I64[Sp] = block_c9taD_info;
           R1 = _s9pvJ::I64;
           I64[Sp + 40] = _s9pvJ::I64;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9taD() //  [R1]
         { info_tbl: [(c9taD,
                       label: block_c9taD_info
                       rep:StackRep [True, True, False, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9taD: // global
           I64[Sp] = block_c9taF_info;
           _s9pvP::P64 = R1;
           R1 = I64[Sp + 40];
           P64[Sp + 40] = _s9pvP::P64;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9taF() //  [R1]
         { info_tbl: [(c9taF,
                       label: block_c9taF_info
                       rep:StackRep [True, True, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9taF: // global
           _s9pvW::I64 = P64[Sp + 40] + 16;
           (_s9pw0::I64) = call "capi" arg hints:  [PtrHint]  result hints:  [‘signed’] ghczuwrapperZC13ZCbaseZCSystemziPosixziInternalsZCsigemptyset(_s9pvW::I64);
           if (%MO_SS_Conv_W64_W32(_s9pw0::I64) == (-1) :: W32) goto c9tcO; else goto c9tbX;
       c9tcO: // global
           (_s9pxc::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _s9pxc::I64;
           Sp = Sp + 48;
           call lvl10_r9pfH_entry(R2) args: 8, res: 0, upd: 8;
       c9tbX: // global
           (_s9pw5::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sigttou();
           (_s9pwa::I64) = call "capi" arg hints:  [PtrHint,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC12ZCbaseZCSystemziPosixziInternalsZCsigaddset(_s9pvW::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pw5::I64)));
           if (%MO_SS_Conv_W64_W32(_s9pwa::I64) == (-1) :: W32) goto c9tcI; else goto c9tc0;
       c9tcI: // global
           (_s9px7::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _s9px7::I64;
           Sp = Sp + 48;
           call lvl7_r9pfE_entry(R2) args: 8, res: 0, upd: 8;
       c9tc0: // global
           (_s9pwf::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sig_block();
           _s9pwg::I64 = R1 + 16;
           (_s9pwl::I64) = call "capi" arg hints:  [‘signed’, PtrHint,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC11ZCbaseZCSystemziPosixziInternalsZCsigprocmask(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pwf::I64)), _s9pvW::I64, _s9pwg::I64);
           _s9pwm::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pwl::I64));
           if (_s9pwm::I64 == (-1)) goto c9tcC; else goto u9tdA;
       c9tcC: // global
           (_s9px2::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _s9px2::I64;
           Sp = Sp + 48;
           call lvl2_r9pfz_entry(R2) args: 8, res: 0, upd: 8;
       u9tdA: // global
           I64[Sp - 16] = _s9pwg::I64;
           I64[Sp - 8] = _s9pwm::I64;
           P64[Sp] = R1;
           Sp = Sp - 16;
           call _c9tbk() args: 0, res: 0, upd: 0;
     }
 },
 _c9tbk() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tbk: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9tc7; else goto c9tc6;
       c9tc7: // global
           HpAlloc = 16;
           I64[Sp - 8] = block_c9tbj_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9tc6: // global
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = I64[Sp + 24];
           I64[Sp - 8] = block_c9tbn_info;
           R2 = Hp - 7;
           R1 = P64[Sp + 48];
           Sp = Sp - 8;
           call stg_ap_pv_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9tbj() //  [R1]
         { info_tbl: [(c9tbj,
                       label: block_c9tbj_info
                       rep:StackRep [True, True, False, True, True, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tbj: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _c9tbk() args: 0, res: 0, upd: 0;
     }
 },
 _c9tbn() //  [R1]
         { info_tbl: [(c9tbn,
                       label: block_c9tbn_info
                       rep:StackRep [True, True, False, True, True, False, True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tbn: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9tca; else goto c9tc9;
       c9tca: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9tc9: // global
           _s9pvr::I64 = I64[Sp + 40];
           _s9pvs::I64 = I64[Sp + 32];
           (_s9pwu::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_tcsanow();
           I64[Hp - 24] = sat_s9pwD_info;
           I64[Hp - 16] = _s9pvr::I64;
           I64[Hp - 8] = _s9pvs::I64;
           I64[Hp] = _s9pwu::I64;
           I64[Sp] = block_c9tc2_info;
           R4 = Hp - 23;
           R3 = lvl4_r9pfB_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           P64[Sp + 56] = R1;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9tc2() //  []
         { info_tbl: [(c9tc2,
                       label: block_c9tc2_info
                       rep:StackRep [True, True, False, True, True, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tc2: // global
           _s9pvp::P64 = P64[Sp + 48];
           _s9pvP::P64 = P64[Sp + 64];
           _s9pvV::P64 = P64[Sp + 24];
           _s9pwg::I64 = I64[Sp + 8];
           _s9pwq::P64 = P64[Sp + 56];
           (_s9pwK::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sig_setmask();
           (_s9pwP::I64) = call "capi" arg hints:  [‘signed’, PtrHint,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC11ZCbaseZCSystemziPosixziInternalsZCsigprocmask(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pwK::I64)), _s9pwg::I64, 0);
           if (%MO_SS_Conv_W64_W32(_s9pwP::I64) == (-1) :: W32) goto c9tcw; else goto c9tcq;
       c9tcw: // global
           (_s9pwX::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _s9pwX::I64;
           Sp = Sp + 72;
           call lvl2_r9pfz_entry(R2) args: 8, res: 0, upd: 8;
       c9tcq: // global
           call MO_Touch(_s9pvV::P64);
           call MO_Touch(_s9pvP::P64);
           call MO_Touch(_s9pvp::P64);
           R1 = _s9pwq::P64;
           Sp = Sp + 72;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.309389802 UTC

[section ""data" . System.Posix.Internals.tcSetAttr_closure" {
     System.Posix.Internals.tcSetAttr_closure:
         const System.Posix.Internals.tcSetAttr_info;
         const 0;
 },
 System.Posix.Internals.tcSetAttr_entry() //  [R2, R3]
         { info_tbl: [(c9teB,
                       label: System.Posix.Internals.tcSetAttr_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9teB: // global
           R3 = R3;
           R2 = R2;
           call System.Posix.Internals.getEcho3_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.313846773 UTC

[section ""data" . System.Posix.Internals.setCooked1_closure" {
     System.Posix.Internals.setCooked1_closure:
         const System.Posix.Internals.setCooked1_info;
         const 0;
 },
 sat_s9pys_entry() //  [R1, R2]
         { info_tbl: [(c9teU,
                       label: sat_s9pys_info
                       rep:HeapRep 1 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9teU: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9teV; else goto c9teW;
       c9teV: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9teW: // global
           I64[Sp - 16] = block_c9teR_info;
           _s9pxA::P64 = P64[R1 + 6];
           R1 = R2;
           P64[Sp - 8] = _s9pxA::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9tgl; else goto c9teS;
       u9tgl: // global
           call _c9teR(R1) args: 0, res: 0, upd: 0;
       c9teS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9teR() //  [R1]
         { info_tbl: [(c9teR,
                       label: block_c9teR_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9teR: // global
           _s9pxA::P64 = P64[Sp + 8];
           _s9pxF::I64 = I64[R1 + 7];
           (_s9pxJ::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_lflag(_s9pxF::I64);
           I64[Sp - 16] = block_c9tf3_info;
           R1 = _s9pxA::P64;
           I64[Sp - 8] = _s9pxJ::I64;
           I64[Sp] = _s9pxF::I64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9tgk; else goto c9tfo;
       u9tgk: // global
           call _c9tf3(R1) args: 0, res: 0, upd: 0;
       c9tfo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9tf3() //  [R1]
         { info_tbl: [(c9tf3,
                       label: block_c9tf3_info
                       rep:StackRep [True, True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tf3: // global
           _s9pxA::P64 = P64[Sp + 24];
           _s9pxF::I64 = I64[Sp + 16];
           _s9pxJ::I64 = I64[Sp + 8];
           if (R1 & 7 == 1) goto c9tfu; else goto c9tfy;
       c9tfu: // global
           (_s9pyc::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_icanon();
           _s9pxL::I64 = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pxJ::I64)) & %MO_UU_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pyc::I64)) ^ 4294967295;
           goto s9pxK;
       c9tfy: // global
           (_s9pym::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_icanon();
           _s9pxL::I64 = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pxJ::I64)) | %MO_UU_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pym::I64));
           goto s9pxK;
       s9pxK: // global
           call "ccall" arg hints:  [PtrHint,]  result hints:  [] __hscore_poke_lflag(_s9pxF::I64, _s9pxL::I64);
           I64[Sp + 8] = block_c9tfb_info;
           R1 = _s9pxA::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9tgm; else goto c9tfd;
       u9tgm: // global
           call _c9tfb(R1) args: 0, res: 0, upd: 0;
       c9tfd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9tfb() //  [R1]
         { info_tbl: [(c9tfb,
                       label: block_c9tfb_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tfb: // global
           if (R1 & 7 == 1) goto c9tfj; else goto c9tfn;
       c9tfj: // global
           (_s9pxT::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] __hscore_ptr_c_cc(I64[Sp + 8]);
           (_s9pxX::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_vmin();
           I8[_s9pxT::I64 + %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pxX::I64))] = 1 :: W8;
           (_s9py4::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_vtime();
           I8[_s9pxT::I64 + %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9py4::I64))] = 0 :: W8;
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9tfn: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.setCooked1_entry() //  [R2, R3]
         { info_tbl: [(c9tgn,
                       label: System.Posix.Internals.setCooked1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tgn: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9tgr; else goto c9tgq;
       c9tgr: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = System.Posix.Internals.setCooked1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9tgq: // global
           I64[Hp - 8] = sat_s9pys_info;
           P64[Hp] = R3;
           R3 = Hp - 6;
           R2 = R2;
           call System.Posix.Internals.getEcho3_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.326317462 UTC

[section ""data" . System.Posix.Internals.setCooked_closure" {
     System.Posix.Internals.setCooked_closure:
         const System.Posix.Internals.setCooked_info;
         const 0;
 },
 System.Posix.Internals.setCooked_entry() //  [R2, R3]
         { info_tbl: [(c9th5,
                       label: System.Posix.Internals.setCooked_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9th5: // global
           R3 = R3;
           R2 = R2;
           call System.Posix.Internals.setCooked1_entry(R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.330130402 UTC

[section ""data" . System.Posix.Internals.getEcho2_closure" {
     System.Posix.Internals.getEcho2_closure:
         const System.Posix.Internals.getEcho2_info;
 },
 sat_s9pyK_entry() //  [R1]
         { info_tbl: [(c9thu,
                       label: sat_s9pyK_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9thu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9thv; else goto c9thV;
       c9thv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9thV: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9pyA::I64 = I64[R1 + 16];
           (_s9pyE::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_echo();
           if (%MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pyA::I64)) & %MO_UU_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pyE::I64)) == 0) goto c9thR; else goto c9thL;
       c9thR: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9thL: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 System.Posix.Internals.getEcho2_entry() //  [R2]
         { info_tbl: [(c9thW,
                       label: System.Posix.Internals.getEcho2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9thW: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9thX; else goto c9thY;
       c9thX: // global
           R2 = R2;
           R1 = System.Posix.Internals.getEcho2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9thY: // global
           I64[Sp - 8] = block_c9thg_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9ti2; else goto c9thh;
       u9ti2: // global
           call _c9thg(R1) args: 0, res: 0, upd: 0;
       c9thh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9thg() //  [R1]
         { info_tbl: [(c9thg,
                       label: block_c9thg_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9thg: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9ti1; else goto c9ti0;
       c9ti1: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9ti0: // global
           (_s9pyA::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_lflag(I64[R1 + 7]);
           I64[Hp - 16] = sat_s9pyK_info;
           I64[Hp] = _s9pyA::I64;
           R1 = Hp - 16;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.337884768 UTC

[section ""data" . System.Posix.Internals.getEcho1_closure" {
     System.Posix.Internals.getEcho1_closure:
         const System.Posix.Internals.getEcho1_info;
         const 0;
 },
 System.Posix.Internals.getEcho1_entry() //  [R2]
         { info_tbl: [(c9tiq,
                       label: System.Posix.Internals.getEcho1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tiq: // global
           R3 = System.Posix.Internals.getEcho2_closure+2;
           R2 = R2;
           call System.Posix.Internals.getEcho3_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.342118955 UTC

[section ""data" . System.Posix.Internals.getEcho_closure" {
     System.Posix.Internals.getEcho_closure:
         const System.Posix.Internals.getEcho_info;
         const 0;
 },
 System.Posix.Internals.getEcho_entry() //  [R2]
         { info_tbl: [(c9tiB,
                       label: System.Posix.Internals.getEcho_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tiB: // global
           R2 = R2;
           call System.Posix.Internals.getEcho1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.346095044 UTC

[section ""data" . System.Posix.Internals.setEcho1_closure" {
     System.Posix.Internals.setEcho1_closure:
         const System.Posix.Internals.setEcho1_info;
         const 0;
 },
 sat_s9pzo_entry() //  [R1, R2]
         { info_tbl: [(c9tiU,
                       label: sat_s9pzo_info
                       rep:HeapRep 1 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tiU: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9tiV; else goto c9tiW;
       c9tiV: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9tiW: // global
           I64[Sp - 16] = block_c9tiR_info;
           _s9pyO::P64 = P64[R1 + 6];
           R1 = R2;
           P64[Sp - 8] = _s9pyO::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9tjV; else goto c9tiS;
       u9tjV: // global
           call _c9tiR(R1) args: 0, res: 0, upd: 0;
       c9tiS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9tiR() //  [R1]
         { info_tbl: [(c9tiR,
                       label: block_c9tiR_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tiR: // global
           _s9pyO::P64 = P64[Sp + 8];
           _s9pyT::I64 = I64[R1 + 7];
           (_s9pyX::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_lflag(_s9pyT::I64);
           I64[Sp - 8] = block_c9tj1_info;
           R1 = _s9pyO::P64;
           I64[Sp] = _s9pyX::I64;
           I64[Sp + 8] = _s9pyT::I64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9tjU; else goto c9tj3;
       u9tjU: // global
           call _c9tj1(R1) args: 0, res: 0, upd: 0;
       c9tj3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9tj1() //  [R1]
         { info_tbl: [(c9tj1,
                       label: block_c9tj1_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tj1: // global
           _s9pyT::I64 = I64[Sp + 16];
           _s9pyX::I64 = I64[Sp + 8];
           if (R1 & 7 == 1) goto c9tj9; else goto c9tjd;
       c9tj9: // global
           (_s9pz2::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_echo();
           call "ccall" arg hints:  [PtrHint,]  result hints:  [] __hscore_poke_lflag(_s9pyT::I64, %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pyX::I64)) & %MO_UU_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pz2::I64)) ^ 4294967295);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9tjd: // global
           (_s9pzf::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_echo();
           call "ccall" arg hints:  [PtrHint,]  result hints:  [] __hscore_poke_lflag(_s9pyT::I64, %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pyX::I64)) | %MO_UU_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pzf::I64)));
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.setEcho1_entry() //  [R2, R3]
         { info_tbl: [(c9tjW,
                       label: System.Posix.Internals.setEcho1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tjW: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9tk0; else goto c9tjZ;
       c9tk0: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = System.Posix.Internals.setEcho1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9tjZ: // global
           I64[Hp - 8] = sat_s9pzo_info;
           P64[Hp] = R3;
           R3 = Hp - 6;
           R2 = R2;
           call System.Posix.Internals.getEcho3_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.356576967 UTC

[section ""data" . System.Posix.Internals.setEcho_closure" {
     System.Posix.Internals.setEcho_closure:
         const System.Posix.Internals.setEcho_info;
         const 0;
 },
 System.Posix.Internals.setEcho_entry() //  [R2, R3]
         { info_tbl: [(c9tkx,
                       label: System.Posix.Internals.setEcho_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tkx: // global
           R3 = R3;
           R2 = R2;
           call System.Posix.Internals.setEcho1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.360171948 UTC

[section ""data" . System.Posix.Internals.s_isfifo_closure" {
     System.Posix.Internals.s_isfifo_closure:
         const System.Posix.Internals.s_isfifo_info;
 },
 System.Posix.Internals.s_isfifo_entry() //  [R2]
         { info_tbl: [(c9tkL,
                       label: System.Posix.Internals.s_isfifo_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tkL: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9tkM; else goto c9tkN;
       c9tkM: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_isfifo_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9tkN: // global
           I64[Sp - 8] = block_c9tkI_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9tl8; else goto c9tkJ;
       u9tl8: // global
           call _c9tkI(R1) args: 0, res: 0, upd: 0;
       c9tkJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9tkI() //  [R1]
         { info_tbl: [(c9tkI,
                       label: block_c9tkI_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tkI: // global
           (_s9pzv::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC4ZCbaseZCSystemziPosixziInternalsZCSzuISFIFO(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9pzv::I64) == 0 :: W32) goto c9tl4; else goto c9tkY;
       c9tl4: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9tkY: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.366310672 UTC

[section ""data" . System.Posix.Internals.s_isdir_closure" {
     System.Posix.Internals.s_isdir_closure:
         const System.Posix.Internals.s_isdir_info;
 },
 System.Posix.Internals.s_isdir_entry() //  [R2]
         { info_tbl: [(c9tlr,
                       label: System.Posix.Internals.s_isdir_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tlr: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9tls; else goto c9tlt;
       c9tls: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_isdir_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9tlt: // global
           I64[Sp - 8] = block_c9tlo_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9tlO; else goto c9tlp;
       u9tlO: // global
           call _c9tlo(R1) args: 0, res: 0, upd: 0;
       c9tlp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9tlo() //  [R1]
         { info_tbl: [(c9tlo,
                       label: block_c9tlo_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tlo: // global
           (_s9pzD::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC5ZCbaseZCSystemziPosixziInternalsZCSzuISDIR(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9pzD::I64) == 0 :: W32) goto c9tlK; else goto c9tlE;
       c9tlK: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9tlE: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.372103967 UTC

[section ""data" . System.Posix.Internals.s_isblk_closure" {
     System.Posix.Internals.s_isblk_closure:
         const System.Posix.Internals.s_isblk_info;
 },
 System.Posix.Internals.s_isblk_entry() //  [R2]
         { info_tbl: [(c9tm7,
                       label: System.Posix.Internals.s_isblk_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tm7: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9tm8; else goto c9tm9;
       c9tm8: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_isblk_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9tm9: // global
           I64[Sp - 8] = block_c9tm4_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9tmu; else goto c9tm5;
       u9tmu: // global
           call _c9tm4(R1) args: 0, res: 0, upd: 0;
       c9tm5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9tm4() //  [R1]
         { info_tbl: [(c9tm4,
                       label: block_c9tm4_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tm4: // global
           (_s9pzL::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC6ZCbaseZCSystemziPosixziInternalsZCSzuISBLK(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9pzL::I64) == 0 :: W32) goto c9tmq; else goto c9tmk;
       c9tmq: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9tmk: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.378780414 UTC

[section ""data" . System.Posix.Internals.s_ischr_closure" {
     System.Posix.Internals.s_ischr_closure:
         const System.Posix.Internals.s_ischr_info;
 },
 System.Posix.Internals.s_ischr_entry() //  [R2]
         { info_tbl: [(c9tmN,
                       label: System.Posix.Internals.s_ischr_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tmN: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9tmO; else goto c9tmP;
       c9tmO: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_ischr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9tmP: // global
           I64[Sp - 8] = block_c9tmK_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9tna; else goto c9tmL;
       u9tna: // global
           call _c9tmK(R1) args: 0, res: 0, upd: 0;
       c9tmL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9tmK() //  [R1]
         { info_tbl: [(c9tmK,
                       label: block_c9tmK_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tmK: // global
           (_s9pzT::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC7ZCbaseZCSystemziPosixziInternalsZCSzuISCHR(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9pzT::I64) == 0 :: W32) goto c9tn6; else goto c9tn0;
       c9tn6: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9tn0: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.384644917 UTC

[section ""data" . System.Posix.Internals.s_isreg_closure" {
     System.Posix.Internals.s_isreg_closure:
         const System.Posix.Internals.s_isreg_info;
 },
 System.Posix.Internals.s_isreg_entry() //  [R2]
         { info_tbl: [(c9tnt,
                       label: System.Posix.Internals.s_isreg_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tnt: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9tnu; else goto c9tnv;
       c9tnu: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_isreg_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9tnv: // global
           I64[Sp - 8] = block_c9tnq_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9tnQ; else goto c9tnr;
       u9tnQ: // global
           call _c9tnq(R1) args: 0, res: 0, upd: 0;
       c9tnr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9tnq() //  [R1]
         { info_tbl: [(c9tnq,
                       label: block_c9tnq_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tnq: // global
           (_s9pA1::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9pA1::I64) == 0 :: W32) goto c9tnM; else goto c9tnG;
       c9tnM: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9tnG: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.390690396 UTC

[section ""data" . System.Posix.Internals.fdStat2_closure" {
     System.Posix.Internals.fdStat2_closure:
         const System.Posix.Internals.fdStat2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.fdStat2_entry() //  [R1]
         { info_tbl: [(c9to8,
                       label: System.Posix.Internals.fdStat2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9to8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9to9; else goto c9toa;
       c9to9: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9toa: // global
           (_c9to5::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9to5::I64 == 0) goto c9to7; else goto c9to6;
       c9to7: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9to6: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9to5::I64;
           R2 = System.Posix.Internals.ioe_unknownfiletype_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.395178485 UTC

[section ""data" . System.Posix.Internals.$wstatGetType_closure" {
     System.Posix.Internals.$wstatGetType_closure:
         const System.Posix.Internals.$wstatGetType_info;
         const 0;
 },
 System.Posix.Internals.$wstatGetType_entry() //  [R2]
         { info_tbl: [(c9toq,
                       label: System.Posix.Internals.$wstatGetType_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9toq: // global
           (_s9pA8::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_mode(R2);
           _s9pA9::I64 = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pA8::I64));
           (_s9pAd::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC5ZCbaseZCSystemziPosixziInternalsZCSzuISDIR(_s9pA9::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAd::I64) == 0 :: W32) goto c9toH; else goto c9toB;
       c9toH: // global
           (_s9pAi::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC4ZCbaseZCSystemziPosixziInternalsZCSzuISFIFO(_s9pA9::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAi::I64) != 0 :: W32) goto c9tpq; else goto c9toY;
       c9toY: // global
           (_s9pAn::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC3ZCbaseZCSystemziPosixziInternalsZCSzuISSOCK(_s9pA9::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAn::I64) != 0 :: W32) goto c9tpq; else goto c9tpf;
       c9tpf: // global
           (_s9pAs::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC7ZCbaseZCSystemziPosixziInternalsZCSzuISCHR(_s9pA9::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAs::I64) != 0 :: W32) goto c9tpq; else goto c9tpw;
       c9tpq: // global
           R1 = GHC.IO.Device.Stream_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9tpw: // global
           (_s9pAx::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG(_s9pA9::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAx::I64) == 0 :: W32) goto c9tpN; else goto c9tpH;
       c9tpN: // global
           (_s9pAC::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC6ZCbaseZCSystemziPosixziInternalsZCSzuISBLK(_s9pA9::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAC::I64) == 0 :: W32) goto c9tq4; else goto c9tpY;
       c9tq4: // global
           R1 = System.Posix.Internals.fdStat2_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
       c9tpY: // global
           R1 = GHC.IO.Device.RawDevice_closure+4;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9tpH: // global
           R1 = GHC.IO.Device.RegularFile_closure+3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9toB: // global
           R1 = GHC.IO.Device.Directory_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.400453789 UTC

[section ""data" . System.Posix.Internals.statGetType1_closure" {
     System.Posix.Internals.statGetType1_closure:
         const System.Posix.Internals.statGetType1_info;
         const 0;
 },
 System.Posix.Internals.statGetType1_entry() //  [R2]
         { info_tbl: [(c9tqn,
                       label: System.Posix.Internals.statGetType1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tqn: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9tqo; else goto c9tqp;
       c9tqo: // global
           R2 = R2;
           R1 = System.Posix.Internals.statGetType1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9tqp: // global
           I64[Sp - 8] = block_c9tqk_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9tqt; else goto c9tql;
       u9tqt: // global
           call _c9tqk(R1) args: 0, res: 0, upd: 0;
       c9tql: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9tqk() //  [R1]
         { info_tbl: [(c9tqk,
                       label: block_c9tqk_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tqk: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call System.Posix.Internals.$wstatGetType_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.40586142 UTC

[section ""data" . System.Posix.Internals.statGetType_closure" {
     System.Posix.Internals.statGetType_closure:
         const System.Posix.Internals.statGetType_info;
         const 0;
 },
 System.Posix.Internals.statGetType_entry() //  [R2]
         { info_tbl: [(c9tqH,
                       label: System.Posix.Internals.statGetType_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tqH: // global
           R2 = R2;
           call System.Posix.Internals.statGetType1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.409095219 UTC

[section ""cstring" . lvl11_r9pfI_bytes" {
     lvl11_r9pfI_bytes:
         I8[] [115,101,116,67,108,111,115,101,79,110,69,120,101,99]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.410973941 UTC

[section ""data" . lvl12_r9pfJ_closure" {
     lvl12_r9pfJ_closure:
         const lvl12_r9pfJ_info;
         const 0;
         const 0;
         const 0;
 },
 lvl12_r9pfJ_entry() //  [R1]
         { info_tbl: [(c9tqV,
                       label: lvl12_r9pfJ_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tqV: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9tqW; else goto c9tqX;
       c9tqW: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9tqX: // global
           (_c9tqS::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9tqS::I64 == 0) goto c9tqU; else goto c9tqT;
       c9tqU: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9tqT: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9tqS::I64;
           R2 = lvl11_r9pfI_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.415833118 UTC

[section ""data" . System.Posix.Internals.setCloseOnExec2_closure" {
     System.Posix.Internals.setCloseOnExec2_closure:
         const System.Posix.Internals.setCloseOnExec2_info;
         const 0;
 },
 System.Posix.Internals.setCloseOnExec2_entry() //  [R2]
         { info_tbl: [(c9trb,
                       label: System.Posix.Internals.setCloseOnExec2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9trb: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl12_r9pfJ_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.419475609 UTC

[section ""data" . System.Posix.Internals.$wsetCloseOnExec_closure" {
     System.Posix.Internals.$wsetCloseOnExec_closure:
         const System.Posix.Internals.$wsetCloseOnExec_info;
         const 0;
 },
 System.Posix.Internals.$wsetCloseOnExec_entry() //  [R2]
         { info_tbl: [(c9trq,
                       label: System.Posix.Internals.$wsetCloseOnExec_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9trq: // global
           (_s9pAQ::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfd();
           (_s9pAU::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_fd_cloexec();
           (_s9pAZ::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(R2, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pAQ::I64)), _s9pAU::I64);
           if (%MO_SS_Conv_W64_W32(_s9pAZ::I64) == (-1) :: W32) goto c9trJ; else goto c9trD;
       c9trJ: // global
           (_s9pB4::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _s9pB4::I64;
           call System.Posix.Internals.setCloseOnExec2_entry(R2) args: 8, res: 0, upd: 8;
       c9trD: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.423689063 UTC

[section ""data" . System.Posix.Internals.setCloseOnExec1_closure" {
     System.Posix.Internals.setCloseOnExec1_closure:
         const System.Posix.Internals.setCloseOnExec1_info;
         const 0;
 },
 System.Posix.Internals.setCloseOnExec1_entry() //  [R2]
         { info_tbl: [(c9ts2,
                       label: System.Posix.Internals.setCloseOnExec1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ts2: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9ts3; else goto c9ts4;
       c9ts3: // global
           R2 = R2;
           R1 = System.Posix.Internals.setCloseOnExec1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9ts4: // global
           I64[Sp - 8] = block_c9trZ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9ts8; else goto c9ts0;
       u9ts8: // global
           call _c9trZ(R1) args: 0, res: 0, upd: 0;
       c9ts0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9trZ() //  [R1]
         { info_tbl: [(c9trZ,
                       label: block_c9trZ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9trZ: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call System.Posix.Internals.$wsetCloseOnExec_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.429028345 UTC

[section ""data" . System.Posix.Internals.setCloseOnExec_closure" {
     System.Posix.Internals.setCloseOnExec_closure:
         const System.Posix.Internals.setCloseOnExec_info;
         const 0;
 },
 System.Posix.Internals.setCloseOnExec_entry() //  [R2]
         { info_tbl: [(c9tsm,
                       label: System.Posix.Internals.setCloseOnExec_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tsm: // global
           R2 = R2;
           call System.Posix.Internals.setCloseOnExec1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.432823353 UTC

[section ""data" . System.Posix.Internals.setNonBlockingFD2_closure" {
     System.Posix.Internals.setNonBlockingFD2_closure:
         const System.Posix.Internals.setNonBlockingFD2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.setNonBlockingFD2_entry() //  [R1]
         { info_tbl: [(c9tsC,
                       label: System.Posix.Internals.setNonBlockingFD2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tsC: // global
           _r9pee::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9tsO; else goto c9tsP;
       c9tsP: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9tsR; else goto c9tsQ;
       c9tsR: // global
           HpAlloc = 16;
           goto c9tsO;
       c9tsO: // global
           R1 = _r9pee::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9tsQ: // global
           (_c9tsw::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pee::P64);
           if (_c9tsw::I64 == 0) goto c9tsy; else goto c9tsx;
       c9tsy: // global
           call (I64[I64[_r9pee::P64]])() args: 8, res: 0, upd: 8;
       c9tsx: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9tsw::I64;
           (_s9pBd::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_nonblock();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = ~%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pBd::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.437023917 UTC

[section ""cstring" . System.Posix.Internals.setNonBlockingFD4_bytes" {
     System.Posix.Internals.setNonBlockingFD4_bytes:
         I8[] [115,101,116,78,111,110,66,108,111,99,107,105,110,103,70,68]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.439009943 UTC

[section ""data" . System.Posix.Internals.setNonBlockingFD3_closure" {
     System.Posix.Internals.setNonBlockingFD3_closure:
         const System.Posix.Internals.setNonBlockingFD3_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.setNonBlockingFD3_entry() //  [R1]
         { info_tbl: [(c9tt8,
                       label: System.Posix.Internals.setNonBlockingFD3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tt8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9tt9; else goto c9tta;
       c9tt9: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9tta: // global
           (_c9tt5::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9tt5::I64 == 0) goto c9tt7; else goto c9tt6;
       c9tt7: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9tt6: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9tt5::I64;
           R2 = System.Posix.Internals.setNonBlockingFD4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.444554152 UTC

[section ""data" . System.Posix.Internals.$wsetNonBlockingFD_closure" {
     System.Posix.Internals.$wsetNonBlockingFD_closure:
         const System.Posix.Internals.$wsetNonBlockingFD_info;
         const 0;
 },
 sat_s9pBx_entry() //  [R1]
         { info_tbl: [(c9ttu,
                       label: sat_s9pBx_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ttu: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9ttG; else goto c9ttF;
       c9ttG: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9ttF: // global
           (_s9pBu::I64) = call "capi" arg hints:  [‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC17ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[R1 + 7], %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[R1 + 15])));
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pBu::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.$wsetNonBlockingFD_entry() //  [R2, R3]
         { info_tbl: [(c9ttM,
                       label: System.Posix.Internals.$wsetNonBlockingFD_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ttM: // global
           _s9pBj::P64 = R3;
           _s9pBi::I64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto c9ttN; else goto c9ttO;
       c9ttO: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9ttQ; else goto c9ttP;
       c9ttQ: // global
           HpAlloc = 24;
           goto c9ttN;
       c9ttN: // global
           R3 = _s9pBj::P64;
           R2 = _s9pBi::I64;
           R1 = System.Posix.Internals.$wsetNonBlockingFD_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9ttP: // global
           (_s9pBo::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_getfl();
           I64[Hp - 16] = sat_s9pBx_info;
           I64[Hp - 8] = _s9pBi::I64;
           I64[Hp] = _s9pBo::I64;
           I64[Sp - 24] = block_c9ttH_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.setNonBlockingFD3_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           I64[Sp - 16] = _s9pBi::I64;
           P64[Sp - 8] = _s9pBj::P64;
           Sp = Sp - 24;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9ttH() //  [R1]
         { info_tbl: [(c9ttH,
                       label: block_c9ttH_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ttH: // global
           I64[Sp] = block_c9ttJ_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u9tvc; else goto c9ttK;
       u9tvc: // global
           call _c9ttJ(R1) args: 0, res: 0, upd: 0;
       c9ttK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ttJ() //  [R1]
         { info_tbl: [(c9ttJ,
                       label: block_c9ttJ_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ttJ: // global
           I64[Sp] = block_c9ttU_info;
           _s9pBC::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9pBC::I64;
           if (R1 & 7 != 0) goto u9tvd; else goto c9ttW;
       u9tvd: // global
           call _c9ttU(R1) args: 0, res: 0, upd: 0;
       c9ttW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ttU() //  [R1]
         { info_tbl: [(c9ttU,
                       label: block_c9ttU_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ttU: // global
           if (R1 & 7 == 1) goto c9tu3; else goto c9tuO;
       c9tu3: // global
           I64[Sp] = block_c9tu0_info;
           R1 = System.Posix.Internals.setNonBlockingFD2_closure;
           if (R1 & 7 != 0) goto u9tve; else goto c9tu4;
       u9tve: // global
           call _c9tu0(R1) args: 0, res: 0, upd: 0;
       c9tu4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9tuO: // global
           _s9pBi::I64 = I64[Sp + 8];
           _s9pBC::I64 = I64[Sp + 16];
           (_s9pBX::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_nonblock();
           _s9pBY::I64 = _s9pBC::I64 | %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pBX::I64));
           if (_s9pBC::I64 == _s9pBY::I64) goto u9tva; else goto c9tuN;
       u9tva: // global
           Sp = Sp + 24;
           call _c9tuM() args: 0, res: 0, upd: 0;
       c9tuN: // global
           (_s9pC7::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfl();
           (_s9pCc::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(_s9pBi::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pC7::I64)), _s9pBY::I64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9tu0() //  [R1]
         { info_tbl: [(c9tu0,
                       label: block_c9tu0_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tu0: // global
           _s9pBC::I64 = I64[Sp + 16];
           _s9pBG::I64 = _s9pBC::I64 & I64[R1 + 7];
           if (_s9pBC::I64 == _s9pBG::I64) goto u9tvb; else goto c9tup;
       u9tvb: // global
           Sp = Sp + 24;
           call _c9tuM() args: 0, res: 0, upd: 0;
       c9tup: // global
           _s9pBi::I64 = I64[Sp + 8];
           (_s9pBO::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfl();
           (_s9pBT::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(_s9pBi::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pBO::I64)), _s9pBG::I64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9tuM() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tuM: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.460812474 UTC

[section ""data" . System.Posix.Internals.setNonBlockingFD1_closure" {
     System.Posix.Internals.setNonBlockingFD1_closure:
         const System.Posix.Internals.setNonBlockingFD1_info;
         const 0;
 },
 System.Posix.Internals.setNonBlockingFD1_entry() //  [R2, R3]
         { info_tbl: [(c9tw3,
                       label: System.Posix.Internals.setNonBlockingFD1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tw3: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9tw4; else goto c9tw5;
       c9tw4: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Posix.Internals.setNonBlockingFD1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9tw5: // global
           I64[Sp - 16] = block_c9tw0_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9tw9; else goto c9tw1;
       u9tw9: // global
           call _c9tw0(R1) args: 0, res: 0, upd: 0;
       c9tw1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9tw0() //  [R1]
         { info_tbl: [(c9tw0,
                       label: block_c9tw0_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tw0: // global
           R3 = P64[Sp + 8];
           R2 = I64[R1 + 7];
           Sp = Sp + 16;
           call System.Posix.Internals.$wsetNonBlockingFD_entry(R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.466212965 UTC

[section ""data" . System.Posix.Internals.setNonBlockingFD_closure" {
     System.Posix.Internals.setNonBlockingFD_closure:
         const System.Posix.Internals.setNonBlockingFD_info;
         const 0;
 },
 System.Posix.Internals.setNonBlockingFD_entry() //  [R2, R3]
         { info_tbl: [(c9twn,
                       label: System.Posix.Internals.setNonBlockingFD_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9twn: // global
           R3 = R3;
           R2 = R2;
           call System.Posix.Internals.setNonBlockingFD1_entry(R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.469603394 UTC

[section ""cstring" . System.Posix.Internals.fdGetMode3_bytes" {
     System.Posix.Internals.fdGetMode3_bytes:
         I8[] [102,100,71,101,116,77,111,100,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.471460245 UTC

[section ""data" . System.Posix.Internals.fdGetMode2_closure" {
     System.Posix.Internals.fdGetMode2_closure:
         const System.Posix.Internals.fdGetMode2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.fdGetMode2_entry() //  [R1]
         { info_tbl: [(c9twB,
                       label: System.Posix.Internals.fdGetMode2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9twB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9twC; else goto c9twD;
       c9twC: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9twD: // global
           (_c9twy::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9twy::I64 == 0) goto c9twA; else goto c9twz;
       c9twA: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9twz: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9twy::I64;
           R2 = System.Posix.Internals.fdGetMode3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.476399644 UTC

[section ""data" . System.Posix.Internals.$wfdGetMode_closure" {
     System.Posix.Internals.$wfdGetMode_closure:
         const System.Posix.Internals.$wfdGetMode_info;
         const 0;
 },
 sat_s9pCw_entry() //  [R1]
         { info_tbl: [(c9twX,
                       label: sat_s9pCw_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9twX: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9tx9; else goto c9tx8;
       c9tx9: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9tx8: // global
           (_s9pCt::I64) = call "capi" arg hints:  [‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC17ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[R1 + 7], %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[R1 + 15])));
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pCt::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9pD3_entry() //  [R1]
         { info_tbl: [(c9txj,
                       label: sat_s9pD3_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9txj: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9txk; else goto c9txl;
       c9txk: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9txl: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9txg_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9tyL; else goto c9txh;
       u9tyL: // global
           call _c9txg(R1) args: 0, res: 0, upd: 0;
       c9txh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9txg() //  [R1]
         { info_tbl: [(c9txg,
                       label: block_c9txg_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9txg: // global
           _s9pCB::I64 = I64[R1 + 7];
           (_s9pCF::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_wronly();
           if (_s9pCB::I64 & %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pCF::I64)) == 0) goto c9tyf; else goto c9txH;
       c9tyf: // global
           (_s9pCX::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_rdwr();
           if (_s9pCB::I64 & %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pCX::I64)) == 0) goto c9tyH; else goto c9tyB;
       c9tyH: // global
           R1 = GHC.IO.IOMode.ReadMode_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9tyB: // global
           R1 = GHC.IO.IOMode.ReadWriteMode_closure+4;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9txH: // global
           (_s9pCO::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_append();
           if (_s9pCB::I64 & %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pCO::I64)) == 0) goto c9ty9; else goto c9ty3;
       c9ty9: // global
           R1 = GHC.IO.IOMode.WriteMode_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9ty3: // global
           R1 = GHC.IO.IOMode.AppendMode_closure+3;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 System.Posix.Internals.$wfdGetMode_entry() //  [R2]
         { info_tbl: [(c9tyM,
                       label: System.Posix.Internals.$wfdGetMode_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tyM: // global
           _s9pCi::I64 = R2;
           if ((Sp + -8) < SpLim) (likely: False) goto c9tyN; else goto c9tyO;
       c9tyO: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9tyQ; else goto c9tyP;
       c9tyQ: // global
           HpAlloc = 24;
           goto c9tyN;
       c9tyN: // global
           R2 = _s9pCi::I64;
           R1 = System.Posix.Internals.$wfdGetMode_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9tyP: // global
           (_s9pCn::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_getfl();
           I64[Hp - 16] = sat_s9pCw_info;
           I64[Hp - 8] = _s9pCi::I64;
           I64[Hp] = _s9pCn::I64;
           I64[Sp - 8] = block_c9txa_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.fdGetMode2_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9txa() //  [R1]
         { info_tbl: [(c9txa,
                       label: block_c9txa_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9txa: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9tyT; else goto c9tyS;
       c9tyT: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9tyS: // global
           I64[Hp - 16] = sat_s9pD3_info;
           P64[Hp] = R1;
           R1 = Hp - 16;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.490111573 UTC

[section ""data" . System.Posix.Internals.fdGetMode1_closure" {
     System.Posix.Internals.fdGetMode1_closure:
         const System.Posix.Internals.fdGetMode1_info;
         const 0;
 },
 System.Posix.Internals.fdGetMode1_entry() //  [R2]
         { info_tbl: [(c9tzB,
                       label: System.Posix.Internals.fdGetMode1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tzB: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9tzC; else goto c9tzD;
       c9tzC: // global
           R2 = R2;
           R1 = System.Posix.Internals.fdGetMode1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9tzD: // global
           I64[Sp - 8] = block_c9tzy_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9tzH; else goto c9tzz;
       u9tzH: // global
           call _c9tzy(R1) args: 0, res: 0, upd: 0;
       c9tzz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9tzy() //  [R1]
         { info_tbl: [(c9tzy,
                       label: block_c9tzy_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tzy: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call System.Posix.Internals.$wfdGetMode_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.495537349 UTC

[section ""data" . System.Posix.Internals.fdGetMode_closure" {
     System.Posix.Internals.fdGetMode_closure:
         const System.Posix.Internals.fdGetMode_info;
         const 0;
 },
 System.Posix.Internals.fdGetMode_entry() //  [R2]
         { info_tbl: [(c9tzV,
                       label: System.Posix.Internals.fdGetMode_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tzV: // global
           R2 = R2;
           call System.Posix.Internals.fdGetMode1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.501006069 UTC

[section ""data" . System.Posix.Internals.fdStat1_closure" {
     System.Posix.Internals.fdStat1_closure:
         const System.Posix.Internals.fdStat1_info;
         const 0;
 },
 sat_s9pDu_entry() //  [R1]
         { info_tbl: [(c9tAr,
                       label: sat_s9pDu_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tAr: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9tAx; else goto c9tAw;
       c9tAx: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9tAw: // global
           (_s9pDr::I64) = call "ccall" arg hints:  [‘signed’,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_fstat(I64[R1 + 7], I64[R1 + 15]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pDr::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.fdStat1_entry() //  [R2]
         { info_tbl: [(c9tAy,
                       label: System.Posix.Internals.fdStat1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tAy: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9tAz; else goto c9tAA;
       c9tAz: // global
           R2 = R2;
           R1 = System.Posix.Internals.fdStat1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9tAA: // global
           (_s9pDd::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_stat();
           I64[Sp - 16] = block_c9tA7_info;
           R1 = _s9pDd::I64;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9tA7() //  [R1]
         { info_tbl: [(c9tA7,
                       label: block_c9tA7_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tA7: // global
           I64[Sp] = block_c9tA9_info;
           _s9pDj::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s9pDj::P64;
           if (R1 & 7 != 0) goto u9tDB; else goto c9tAa;
       u9tDB: // global
           call _c9tA9(R1) args: 0, res: 0, upd: 0;
       c9tAa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9tA9() //  [R1]
         { info_tbl: [(c9tA9,
                       label: block_c9tA9_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tA9: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9tAE; else goto c9tAD;
       c9tAE: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9tAD: // global
           _s9pDl::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9pDu_info;
           I64[Hp - 8] = _s9pDl::I64;
           _s9pDm::I64 = P64[Sp + 8] + 16;
           I64[Hp] = _s9pDm::I64;
           I64[Sp - 8] = block_c9tAF_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.ioe_unknownfiletype3_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           I64[Sp] = _s9pDm::I64;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9tAF() //  []
         { info_tbl: [(c9tAF,
                       label: block_c9tAF_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tAF: // global
           (_s9pDB::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_mode(I64[Sp + 8]);
           _s9pDC::I64 = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pDB::I64));
           (_s9pDG::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC5ZCbaseZCSystemziPosixziInternalsZCSzuISDIR(_s9pDC::I64);
           _s9pDH::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pDG::I64));
           if (_s9pDH::I64 != 0) goto u9tDp; else goto c9tBa;
       u9tDp: // global
           I64[Sp] = _s9pDH::I64;
           call _c9tAT() args: 0, res: 0, upd: 0;
       c9tBa: // global
           (_s9pDX::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC4ZCbaseZCSystemziPosixziInternalsZCSzuISFIFO(_s9pDC::I64);
           _s9pDY::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pDX::I64));
           if (_s9pDY::I64 != 0) goto u9tDr; else goto c9tBB;
       u9tDr: // global
           I64[Sp] = _s9pDY::I64;
           call _c9tBk() args: 0, res: 0, upd: 0;
       c9tBB: // global
           (_s9pEe::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC3ZCbaseZCSystemziPosixziInternalsZCSzuISSOCK(_s9pDC::I64);
           _s9pEf::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pEe::I64));
           if (_s9pEf::I64 != 0) goto u9tDt; else goto c9tC2;
       u9tDt: // global
           I64[Sp] = _s9pEf::I64;
           call _c9tBL() args: 0, res: 0, upd: 0;
       c9tC2: // global
           (_s9pEv::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC7ZCbaseZCSystemziPosixziInternalsZCSzuISCHR(_s9pDC::I64);
           _s9pEw::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pEv::I64));
           if (_s9pEw::I64 != 0) goto u9tDv; else goto c9tCt;
       u9tDv: // global
           I64[Sp] = _s9pEw::I64;
           call _c9tCc() args: 0, res: 0, upd: 0;
       c9tCt: // global
           (_s9pEM::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG(_s9pDC::I64);
           _s9pEN::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pEM::I64));
           if (_s9pEN::I64 != 0) goto u9tDx; else goto c9tCU;
       u9tDx: // global
           I64[Sp] = _s9pEN::I64;
           call _c9tCD() args: 0, res: 0, upd: 0;
       c9tCU: // global
           (_s9pF3::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC6ZCbaseZCSystemziPosixziInternalsZCSzuISBLK(_s9pDC::I64);
           _s9pF4::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pF3::I64));
           if (_s9pF4::I64 != 0) goto u9tDz; else goto c9tDl;
       u9tDz: // global
           I64[Sp] = _s9pF4::I64;
           call _c9tD4() args: 0, res: 0, upd: 0;
       c9tDl: // global
           R1 = System.Posix.Internals.fdStat2_closure;
           Sp = Sp + 24;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9tAT() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tAT: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9tB7; else goto c9tB6;
       c9tB7: // global
           HpAlloc = 64;
           _s9pDH::I64 = I64[Sp];
           I64[Sp] = block_c9tAS_info;
           R1 = _s9pDH::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9tB6: // global
           _s9pDj::P64 = P64[Sp + 16];
           _s9pDm::I64 = I64[Sp + 8];
           (_s9pDL::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9pDm::I64);
           (_s9pDP::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9pDm::I64);
           call MO_Touch(_s9pDj::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9pDP::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9pDL::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.Directory_closure+1;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9tAS() //  [R1]
         { info_tbl: [(c9tAS,
                       label: block_c9tAS_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tAS: // global
           I64[Sp] = R1;
           call _c9tAT() args: 0, res: 0, upd: 0;
     }
 },
 _c9tBk() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tBk: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9tBy; else goto c9tBx;
       c9tBy: // global
           HpAlloc = 64;
           _s9pDY::I64 = I64[Sp];
           I64[Sp] = block_c9tBj_info;
           R1 = _s9pDY::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9tBx: // global
           _s9pDj::P64 = P64[Sp + 16];
           _s9pDm::I64 = I64[Sp + 8];
           (_s9pE2::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9pDm::I64);
           (_s9pE6::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9pDm::I64);
           call MO_Touch(_s9pDj::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9pE6::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9pE2::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.Stream_closure+2;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9tBj() //  [R1]
         { info_tbl: [(c9tBj,
                       label: block_c9tBj_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tBj: // global
           I64[Sp] = R1;
           call _c9tBk() args: 0, res: 0, upd: 0;
     }
 },
 _c9tBL() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tBL: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9tBZ; else goto c9tBY;
       c9tBZ: // global
           HpAlloc = 64;
           _s9pEf::I64 = I64[Sp];
           I64[Sp] = block_c9tBK_info;
           R1 = _s9pEf::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9tBY: // global
           _s9pDj::P64 = P64[Sp + 16];
           _s9pDm::I64 = I64[Sp + 8];
           (_s9pEj::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9pDm::I64);
           (_s9pEn::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9pDm::I64);
           call MO_Touch(_s9pDj::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9pEn::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9pEj::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.Stream_closure+2;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9tBK() //  [R1]
         { info_tbl: [(c9tBK,
                       label: block_c9tBK_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tBK: // global
           I64[Sp] = R1;
           call _c9tBL() args: 0, res: 0, upd: 0;
     }
 },
 _c9tCc() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tCc: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9tCq; else goto c9tCp;
       c9tCq: // global
           HpAlloc = 64;
           _s9pEw::I64 = I64[Sp];
           I64[Sp] = block_c9tCb_info;
           R1 = _s9pEw::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9tCp: // global
           _s9pDj::P64 = P64[Sp + 16];
           _s9pDm::I64 = I64[Sp + 8];
           (_s9pEA::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9pDm::I64);
           (_s9pEE::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9pDm::I64);
           call MO_Touch(_s9pDj::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9pEE::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9pEA::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.Stream_closure+2;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9tCb() //  [R1]
         { info_tbl: [(c9tCb,
                       label: block_c9tCb_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tCb: // global
           I64[Sp] = R1;
           call _c9tCc() args: 0, res: 0, upd: 0;
     }
 },
 _c9tCD() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tCD: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9tCR; else goto c9tCQ;
       c9tCR: // global
           HpAlloc = 64;
           _s9pEN::I64 = I64[Sp];
           I64[Sp] = block_c9tCC_info;
           R1 = _s9pEN::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9tCQ: // global
           _s9pDj::P64 = P64[Sp + 16];
           _s9pDm::I64 = I64[Sp + 8];
           (_s9pER::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9pDm::I64);
           (_s9pEV::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9pDm::I64);
           call MO_Touch(_s9pDj::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9pEV::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9pER::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.RegularFile_closure+3;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9tCC() //  [R1]
         { info_tbl: [(c9tCC,
                       label: block_c9tCC_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tCC: // global
           I64[Sp] = R1;
           call _c9tCD() args: 0, res: 0, upd: 0;
     }
 },
 _c9tD4() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tD4: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9tDi; else goto c9tDh;
       c9tDi: // global
           HpAlloc = 64;
           _s9pF4::I64 = I64[Sp];
           I64[Sp] = block_c9tD3_info;
           R1 = _s9pF4::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9tDh: // global
           _s9pDj::P64 = P64[Sp + 16];
           _s9pDm::I64 = I64[Sp + 8];
           (_s9pF8::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9pDm::I64);
           (_s9pFc::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9pDm::I64);
           call MO_Touch(_s9pDj::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9pFc::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9pF8::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.RawDevice_closure+4;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9tD3() //  [R1]
         { info_tbl: [(c9tD3,
                       label: block_c9tD3_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tD3: // global
           I64[Sp] = R1;
           call _c9tD4() args: 0, res: 0, upd: 0;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.538579852 UTC

[section ""data" . System.Posix.Internals.fdStat_closure" {
     System.Posix.Internals.fdStat_closure:
         const System.Posix.Internals.fdStat_info;
         const 0;
 },
 System.Posix.Internals.fdStat_entry() //  [R2]
         { info_tbl: [(c9tEZ,
                       label: System.Posix.Internals.fdStat_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tEZ: // global
           R2 = R2;
           call System.Posix.Internals.fdStat1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.542578356 UTC

[section ""data" . System.Posix.Internals.fdType1_closure" {
     System.Posix.Internals.fdType1_closure:
         const System.Posix.Internals.fdType1_info;
         const 0;
 },
 System.Posix.Internals.fdType1_entry() //  [R2]
         { info_tbl: [(c9tFf,
                       label: System.Posix.Internals.fdType1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tFf: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9tFg; else goto c9tFh;
       c9tFg: // global
           R2 = R2;
           R1 = System.Posix.Internals.fdType1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9tFh: // global
           I64[Sp - 8] = block_c9tFa_info;
           R2 = R2;
           Sp = Sp - 8;
           call System.Posix.Internals.fdStat1_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9tFa() //  [R1]
         { info_tbl: [(c9tFa,
                       label: block_c9tFa_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tFa: // global
           I64[Sp] = block_c9tFc_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u9tFm; else goto c9tFd;
       u9tFm: // global
           call _c9tFc(R1) args: 0, res: 0, upd: 0;
       c9tFd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9tFc() //  [R1]
         { info_tbl: [(c9tFc,
                       label: block_c9tFc_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tFc: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.549992136 UTC

[section ""data" . System.Posix.Internals.fdType_closure" {
     System.Posix.Internals.fdType_closure:
         const System.Posix.Internals.fdType_info;
         const 0;
 },
 System.Posix.Internals.fdType_entry() //  [R2]
         { info_tbl: [(c9tFE,
                       label: System.Posix.Internals.fdType_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tFE: // global
           R2 = R2;
           call System.Posix.Internals.fdType1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.553597593 UTC

[section ""cstring" . System.Posix.Internals.fileType3_bytes" {
     System.Posix.Internals.fileType3_bytes:
         I8[] [102,105,108,101,84,121,112,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.555437118 UTC

[section ""data" . System.Posix.Internals.fileType2_closure" {
     System.Posix.Internals.fileType2_closure:
         const System.Posix.Internals.fileType2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.fileType2_entry() //  [R1]
         { info_tbl: [(c9tFS,
                       label: System.Posix.Internals.fileType2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tFS: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9tFT; else goto c9tFU;
       c9tFT: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9tFU: // global
           (_c9tFP::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9tFP::I64 == 0) goto c9tFR; else goto c9tFQ;
       c9tFR: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9tFQ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9tFP::I64;
           R2 = System.Posix.Internals.fileType3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.560291288 UTC

[section ""data" . System.Posix.Internals.fileType1_closure" {
     System.Posix.Internals.fileType1_closure:
         const System.Posix.Internals.fileType1_info;
         const 0;
 },
 sat_s9pFS_entry() //  [R1]
         { info_tbl: [(c9tGy,
                       label: sat_s9pFS_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tGy: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9tGE; else goto c9tGD;
       c9tGE: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9tGD: // global
           (_s9pFP::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_stat(I64[R1 + 15], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pFP::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9pFW_entry() //  [R1, R2]
         { info_tbl: [(c9tGF,
                       label: sat_s9pFW_info
                       rep:HeapRep 1 nonptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tGF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9tGH; else goto c9tGI;
       c9tGH: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9tGI: // global
           I64[Sp - 16] = block_c9tGj_info;
           _s9pFG::I64 = I64[R1 + 6];
           R1 = R2;
           I64[Sp - 8] = _s9pFG::I64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9tGO; else goto c9tGk;
       u9tGO: // global
           call _c9tGj(R1) args: 0, res: 0, upd: 0;
       c9tGk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9tGj() //  [R1]
         { info_tbl: [(c9tGj,
                       label: block_c9tGj_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tGj: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9tGL; else goto c9tGK;
       c9tGL: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9tGK: // global
           _s9pFK::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9pFS_info;
           I64[Hp - 8] = I64[Sp + 8];
           I64[Hp] = _s9pFK::I64;
           I64[Sp] = block_c9tGG_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.fileType2_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9tGG() //  []
         { info_tbl: [(c9tGG,
                       label: block_c9tGG_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tGG: // global
           R2 = I64[Sp + 8];
           Sp = Sp + 16;
           call System.Posix.Internals.$wstatGetType_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . u9tH0_srtd" {
     u9tH0_srtd:
         const S9qh6_srt;
         const 45;
         const 26388413317121;
 },
 System.Posix.Internals.fileType1_entry() //  [R2]
         { info_tbl: [(c9tGP,
                       label: System.Posix.Internals.fileType1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tGP: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9tGQ; else goto c9tGR;
       c9tGQ: // global
           R2 = R2;
           R1 = System.Posix.Internals.fileType1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9tGR: // global
           (_s9pFw::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_stat();
           I64[Sp - 16] = block_c9tG7_info;
           R1 = _s9pFw::I64;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . u9tH1_srtd" {
     u9tH1_srtd:
         const S9qh6_srt;
         const 44;
         const 8796227272705;
 },
 _c9tG7() //  [R1]
         { info_tbl: [(c9tG7,
                       label: block_c9tG7_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tG7: // global
           I64[Sp - 8] = block_c9tG9_info;
           _s9pFC::P64 = R1;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp] = _s9pFC::P64;
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9tG9() //  [R1]
         { info_tbl: [(c9tG9,
                       label: block_c9tG9_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tG9: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9tGV; else goto c9tGU;
       c9tGV: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9tGU: // global
           I64[Hp - 8] = sat_s9pFW_info;
           P64[Hp] = P64[Sp + 8] + 16;
           I64[Sp] = block_c9tGW_info;
           R4 = Hp - 6;
           R3 = P64[Sp + 16];
           R2 = R1;
           call GHC.Foreign.charIsRepresentable3_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9tGW() //  [R1]
         { info_tbl: [(c9tGW,
                       label: block_c9tGW_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tGW: // global
           call MO_Touch(P64[Sp + 8]);
           R1 = R1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.579134553 UTC

[section ""data" . System.Posix.Internals.fileType_closure" {
     System.Posix.Internals.fileType_closure:
         const System.Posix.Internals.fileType_info;
         const 0;
 },
 System.Posix.Internals.fileType_entry() //  [R2]
         { info_tbl: [(c9tHG,
                       label: System.Posix.Internals.fileType_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tHG: // global
           R2 = R2;
           call System.Posix.Internals.fileType1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.582359745 UTC

[section ""cstring" . System.Posix.Internals.fdFileSize4_bytes" {
     System.Posix.Internals.fdFileSize4_bytes:
         I8[] [102,105,108,101,83,105,122,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.584175402 UTC

[section ""data" . System.Posix.Internals.fdFileSize3_closure" {
     System.Posix.Internals.fdFileSize3_closure:
         const System.Posix.Internals.fdFileSize3_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.fdFileSize3_entry() //  [R1]
         { info_tbl: [(c9tHU,
                       label: System.Posix.Internals.fdFileSize3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tHU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9tHV; else goto c9tHW;
       c9tHV: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9tHW: // global
           (_c9tHR::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9tHR::I64 == 0) goto c9tHT; else goto c9tHS;
       c9tHT: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9tHS: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9tHR::I64;
           R2 = System.Posix.Internals.fdFileSize4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.588063809 UTC

[section ""data" . sat_s9pG1_closure" {
     sat_s9pG1_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.59018696 UTC

[section ""data" . sat_s9pG2_closure" {
     sat_s9pG2_closure:
         const :_con_info;
         const sat_s9pG1_closure+1;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.592121662 UTC

[section ""data" . System.Posix.Internals.fdFileSize2_closure" {
     System.Posix.Internals.fdFileSize2_closure:
         const System.Posix.Internals.fdFileSize2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.fdFileSize2_entry() //  [R1]
         { info_tbl: [(c9tIc,
                       label: System.Posix.Internals.fdFileSize2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tIc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9tId; else goto c9tIe;
       c9tId: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9tIe: // global
           (_c9tI9::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9tI9::I64 == 0) goto c9tIb; else goto c9tIa;
       c9tIb: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9tIa: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9tI9::I64;
           R3 = sat_s9pG2_closure+2;
           R2 = GHC.Types.False_closure+1;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.597143773 UTC

[section ""data" . System.Posix.Internals.fdFileSize1_closure" {
     System.Posix.Internals.fdFileSize1_closure:
         const System.Posix.Internals.fdFileSize1_info;
         const 0;
 },
 sat_s9pGp_entry() //  [R1]
         { info_tbl: [(c9tIL,
                       label: sat_s9pGp_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tIL: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9tIR; else goto c9tIQ;
       c9tIR: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9tIQ: // global
           (_s9pGm::I64) = call "ccall" arg hints:  [‘signed’,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_fstat(I64[R1 + 7], I64[R1 + 15]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pGm::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9pGI_entry() //  [R1]
         { info_tbl: [(c9tJe,
                       label: sat_s9pGI_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tJe: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9tJf; else goto c9tJg;
       c9tJf: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9tJg: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = I64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 System.Posix.Internals.fdFileSize1_entry() //  [R2]
         { info_tbl: [(c9tJh,
                       label: System.Posix.Internals.fdFileSize1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tJh: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9tJi; else goto c9tJj;
       c9tJi: // global
           R2 = R2;
           R1 = System.Posix.Internals.fdFileSize1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9tJj: // global
           (_s9pG8::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_stat();
           I64[Sp - 16] = block_c9tIr_info;
           R1 = _s9pG8::I64;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9tIr() //  [R1]
         { info_tbl: [(c9tIr,
                       label: block_c9tIr_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tIr: // global
           I64[Sp] = block_c9tIt_info;
           _s9pGe::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s9pGe::P64;
           if (R1 & 7 != 0) goto u9tJD; else goto c9tIu;
       u9tJD: // global
           call _c9tIt(R1) args: 0, res: 0, upd: 0;
       c9tIu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9tIt() //  [R1]
         { info_tbl: [(c9tIt,
                       label: block_c9tIt_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tIt: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9tJn; else goto c9tJm;
       c9tJn: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9tJm: // global
           _s9pGg::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9pGp_info;
           I64[Hp - 8] = _s9pGg::I64;
           _s9pGh::I64 = P64[Sp + 8] + 16;
           I64[Hp] = _s9pGh::I64;
           I64[Sp - 8] = block_c9tIS_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.fdFileSize3_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           I64[Sp] = _s9pGh::I64;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9tIS() //  []
         { info_tbl: [(c9tIS,
                       label: block_c9tIS_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tIS: // global
           _s9pGe::P64 = P64[Sp + 16];
           (_s9pGw::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_mode(I64[Sp + 8]);
           (_s9pGB::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG(%MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9pGw::I64)));
           _s9pGC::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9pGB::I64));
           if (_s9pGC::I64 != 0) goto u9tJB; else goto c9tJw;
       u9tJB: // global
           I64[Sp] = _s9pGC::I64;
           call _c9tJ5() args: 0, res: 0, upd: 0;
       c9tJw: // global
           call MO_Touch(_s9pGe::P64);
           R1 = System.Posix.Internals.fdFileSize2_closure;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9tJ5() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tJ5: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9tJt; else goto c9tJs;
       c9tJt: // global
           HpAlloc = 24;
           _s9pGC::I64 = I64[Sp];
           I64[Sp] = block_c9tJ4_info;
           R1 = _s9pGC::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9tJs: // global
           _s9pGe::P64 = P64[Sp + 16];
           (_s9pGG::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] __hscore_st_size(I64[Sp + 8]);
           call MO_Touch(_s9pGe::P64);
           I64[Hp - 16] = sat_s9pGI_info;
           I64[Hp] = _s9pGG::I64;
           R1 = Hp - 16;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9tJ4() //  [R1]
         { info_tbl: [(c9tJ4,
                       label: block_c9tJ4_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tJ4: // global
           I64[Sp] = R1;
           call _c9tJ5() args: 0, res: 0, upd: 0;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.614357109 UTC

[section ""data" . System.Posix.Internals.fdFileSize_closure" {
     System.Posix.Internals.fdFileSize_closure:
         const System.Posix.Internals.fdFileSize_info;
         const 0;
 },
 System.Posix.Internals.fdFileSize_entry() //  [R2]
         { info_tbl: [(c9tKg,
                       label: System.Posix.Internals.fdFileSize_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9tKg: // global
           R2 = R2;
           call System.Posix.Internals.fdFileSize1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:32.617839739 UTC

[section ""relreadonly" . S9qh6_srt" {
     S9qh6_srt:
         const GHC.IO.Encoding.getFileSystemEncoding_closure;
         const System.Posix.Internals.withFilePath1_closure;
         const GHC.ForeignPtr.mallocForeignPtrBytes2_closure;
         const System.Posix.Internals.peekFilePathLen1_closure;
         const GHC.Foreign.peekCString1_closure;
         const System.Posix.Internals.peekFilePath1_closure;
         const GHC.Foreign.newCString1_closure;
         const System.Posix.Internals.newFilePath1_closure;
         const System.Posix.Internals.puts1_closure;
         const System.Posix.Internals.puts2_closure;
         const Foreign.C.Error.$wlvl_closure;
         const lvl1_r9pfy_closure;
         const lvl6_r9pfD_closure;
         const lvl9_r9pfG_closure;
         const Foreign.Marshal.Alloc.malloc1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
         const System.Posix.Internals.getEcho3_closure;
         const lvl2_r9pfz_closure;
         const lvl4_r9pfB_closure;
         const lvl7_r9pfE_closure;
         const lvl10_r9pfH_closure;
         const System.Posix.Internals.setCooked1_closure;
         const System.Posix.Internals.getEcho1_closure;
         const System.Posix.Internals.setEcho1_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const System.Posix.Internals.ioe_unknownfiletype_closure;
         const System.Posix.Internals.fdStat2_closure;
         const System.Posix.Internals.$wstatGetType_closure;
         const System.Posix.Internals.statGetType1_closure;
         const lvl12_r9pfJ_closure;
         const System.Posix.Internals.setCloseOnExec2_closure;
         const System.Posix.Internals.setCloseOnExec1_closure;
         const System.Posix.Internals.$wsetCloseOnExec_closure;
         const System.Posix.Internals.$wsetNonBlockingFD_closure;
         const System.Posix.Internals.setNonBlockingFD2_closure;
         const System.Posix.Internals.setNonBlockingFD3_closure;
         const System.Posix.Internals.setNonBlockingFD1_closure;
         const System.Posix.Internals.$wfdGetMode_closure;
         const System.Posix.Internals.fdGetMode2_closure;
         const System.Posix.Internals.fdGetMode1_closure;
         const System.Posix.Internals.fdStat1_closure;
         const System.Posix.Internals.ioe_unknownfiletype3_closure;
         const System.Posix.Internals.fdType1_closure;
         const System.Posix.Internals.fileType2_closure;
         const System.Posix.Internals.fileType1_closure;
         const sat_s9pG2_closure;
         const System.Posix.Internals.fdFileSize1_closure;
         const System.Posix.Internals.fdFileSize2_closure;
         const System.Posix.Internals.fdFileSize3_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.933631626 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:04:36.934742206 UTC

[section ""cstring" . System.Posix.Internals.ioe_unknownfiletype4_bytes" {
     System.Posix.Internals.ioe_unknownfiletype4_bytes:
         I8[] [102,100,84,121,112,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.943675872 UTC

[section ""data" . System.Posix.Internals.ioe_unknownfiletype3_closure" {
     System.Posix.Internals.ioe_unknownfiletype3_closure:
         const System.Posix.Internals.ioe_unknownfiletype3_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.ioe_unknownfiletype3_entry() //  [R1]
         { info_tbl: [(c9ubu,
                       label: System.Posix.Internals.ioe_unknownfiletype3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ubu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9ubv; else goto c9ubw;
       c9ubv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9ubw: // global
           (_c9ubr::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9ubr::I64 == 0) goto c9ubt; else goto c9ubs;
       c9ubt: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9ubs: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9ubr::I64;
           R2 = System.Posix.Internals.ioe_unknownfiletype4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.947591174 UTC

[section ""cstring" . System.Posix.Internals.ioe_unknownfiletype2_bytes" {
     System.Posix.Internals.ioe_unknownfiletype2_bytes:
         I8[] [117,110,107,110,111,119,110,32,102,105,108,101,32,116,121,112,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.949523644 UTC

[section ""data" . System.Posix.Internals.ioe_unknownfiletype1_closure" {
     System.Posix.Internals.ioe_unknownfiletype1_closure:
         const System.Posix.Internals.ioe_unknownfiletype1_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.ioe_unknownfiletype1_entry() //  [R1]
         { info_tbl: [(c9ubM,
                       label: System.Posix.Internals.ioe_unknownfiletype1_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ubM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9ubN; else goto c9ubO;
       c9ubN: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9ubO: // global
           (_c9ubJ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9ubJ::I64 == 0) goto c9ubL; else goto c9ubK;
       c9ubL: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9ubK: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9ubJ::I64;
           R2 = System.Posix.Internals.ioe_unknownfiletype2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.953859695 UTC

[section ""data" . System.Posix.Internals.ioe_unknownfiletype_closure" {
     System.Posix.Internals.ioe_unknownfiletype_closure:
         const GHC.IO.Exception.IOError_con_info;
         const GHC.Base.Nothing_closure+1;
         const GHC.IO.Exception.UnsupportedOperation_closure+1;
         const System.Posix.Internals.ioe_unknownfiletype3_closure;
         const System.Posix.Internals.ioe_unknownfiletype1_closure;
         const GHC.Base.Nothing_closure+1;
         const GHC.Base.Nothing_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.955592877 UTC

[section ""cstring" . System.Posix.Internals.$trModule4_bytes" {
     System.Posix.Internals.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.95728117 UTC

[section ""data" . System.Posix.Internals.$trModule3_closure" {
     System.Posix.Internals.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.958972065 UTC

[section ""cstring" . System.Posix.Internals.$trModule2_bytes" {
     System.Posix.Internals.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,80,111,115,105,120,46,73,110,116,101,114,110,97,108,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.960632896 UTC

[section ""data" . System.Posix.Internals.$trModule1_closure" {
     System.Posix.Internals.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.962730414 UTC

[section ""data" . System.Posix.Internals.$trModule_closure" {
     System.Posix.Internals.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.Posix.Internals.$trModule3_closure+1;
         const System.Posix.Internals.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.964440644 UTC

[section ""cstring" . System.Posix.Internals.$tcCFLock2_bytes" {
     System.Posix.Internals.$tcCFLock2_bytes:
         I8[] [67,70,76,111,99,107]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.966209558 UTC

[section ""data" . System.Posix.Internals.$tcCFLock1_closure" {
     System.Posix.Internals.$tcCFLock1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCFLock2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.96798566 UTC

[section ""data" . System.Posix.Internals.$tcCFLock_closure" {
     System.Posix.Internals.$tcCFLock_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCFLock1_closure+1;
         const GHC.Types.krep$*_closure;
         const 3834113763436071548;
         const 14488320300686398525;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.969989725 UTC

[section ""cstring" . System.Posix.Internals.$tcCGroup2_bytes" {
     System.Posix.Internals.$tcCGroup2_bytes:
         I8[] [67,71,114,111,117,112]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.971723055 UTC

[section ""data" . System.Posix.Internals.$tcCGroup1_closure" {
     System.Posix.Internals.$tcCGroup1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCGroup2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.973944841 UTC

[section ""data" . System.Posix.Internals.$tcCGroup_closure" {
     System.Posix.Internals.$tcCGroup_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCGroup1_closure+1;
         const GHC.Types.krep$*_closure;
         const 11152603070241255843;
         const 9377315854270582287;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.975802327 UTC

[section ""cstring" . System.Posix.Internals.$tcCLconv2_bytes" {
     System.Posix.Internals.$tcCLconv2_bytes:
         I8[] [67,76,99,111,110,118]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.977551456 UTC

[section ""data" . System.Posix.Internals.$tcCLconv1_closure" {
     System.Posix.Internals.$tcCLconv1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCLconv2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.979319289 UTC

[section ""data" . System.Posix.Internals.$tcCLconv_closure" {
     System.Posix.Internals.$tcCLconv_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCLconv1_closure+1;
         const GHC.Types.krep$*_closure;
         const 3987786751457835656;
         const 9275563211259231122;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.981215037 UTC

[section ""cstring" . System.Posix.Internals.$tcCPasswd2_bytes" {
     System.Posix.Internals.$tcCPasswd2_bytes:
         I8[] [67,80,97,115,115,119,100]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.983849514 UTC

[section ""data" . System.Posix.Internals.$tcCPasswd1_closure" {
     System.Posix.Internals.$tcCPasswd1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCPasswd2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.98556205 UTC

[section ""data" . System.Posix.Internals.$tcCPasswd_closure" {
     System.Posix.Internals.$tcCPasswd_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCPasswd1_closure+1;
         const GHC.Types.krep$*_closure;
         const 5062644740775551982;
         const 16304478656107476218;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.987301266 UTC

[section ""cstring" . System.Posix.Internals.$tcCSigaction2_bytes" {
     System.Posix.Internals.$tcCSigaction2_bytes:
         I8[] [67,83,105,103,97,99,116,105,111,110]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.989001977 UTC

[section ""data" . System.Posix.Internals.$tcCSigaction1_closure" {
     System.Posix.Internals.$tcCSigaction1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCSigaction2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.990883449 UTC

[section ""data" . System.Posix.Internals.$tcCSigaction_closure" {
     System.Posix.Internals.$tcCSigaction_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCSigaction1_closure+1;
         const GHC.Types.krep$*_closure;
         const 17845420242338901681;
         const 15424947738972948028;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.993009813 UTC

[section ""cstring" . System.Posix.Internals.$tcCSigset2_bytes" {
     System.Posix.Internals.$tcCSigset2_bytes:
         I8[] [67,83,105,103,115,101,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.99467354 UTC

[section ""data" . System.Posix.Internals.$tcCSigset1_closure" {
     System.Posix.Internals.$tcCSigset1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCSigset2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.996274156 UTC

[section ""data" . System.Posix.Internals.$tcCSigset_closure" {
     System.Posix.Internals.$tcCSigset_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCSigset1_closure+1;
         const GHC.Types.krep$*_closure;
         const 14081798148172232868;
         const 6852541821114425705;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.998163578 UTC

[section ""cstring" . System.Posix.Internals.$tcCStat2_bytes" {
     System.Posix.Internals.$tcCStat2_bytes:
         I8[] [67,83,116,97,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:36.999899115 UTC

[section ""data" . System.Posix.Internals.$tcCStat1_closure" {
     System.Posix.Internals.$tcCStat1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCStat2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.002029919 UTC

[section ""data" . System.Posix.Internals.$tcCStat_closure" {
     System.Posix.Internals.$tcCStat_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCStat1_closure+1;
         const GHC.Types.krep$*_closure;
         const 2636779476884011316;
         const 12868714044560040280;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.004209924 UTC

[section ""cstring" . System.Posix.Internals.$tcCTermios2_bytes" {
     System.Posix.Internals.$tcCTermios2_bytes:
         I8[] [67,84,101,114,109,105,111,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.005975752 UTC

[section ""data" . System.Posix.Internals.$tcCTermios1_closure" {
     System.Posix.Internals.$tcCTermios1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCTermios2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.007710146 UTC

[section ""data" . System.Posix.Internals.$tcCTermios_closure" {
     System.Posix.Internals.$tcCTermios_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCTermios1_closure+1;
         const GHC.Types.krep$*_closure;
         const 11465338758467385152;
         const 17071974511267829282;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.009798132 UTC

[section ""cstring" . System.Posix.Internals.$tcCTm2_bytes" {
     System.Posix.Internals.$tcCTm2_bytes:
         I8[] [67,84,109]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.011528356 UTC

[section ""data" . System.Posix.Internals.$tcCTm1_closure" {
     System.Posix.Internals.$tcCTm1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCTm2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.013557589 UTC

[section ""data" . System.Posix.Internals.$tcCTm_closure" {
     System.Posix.Internals.$tcCTm_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCTm1_closure+1;
         const GHC.Types.krep$*_closure;
         const 14493525435896339207;
         const 9617693238091267571;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.015419158 UTC

[section ""cstring" . System.Posix.Internals.$tcCTms2_bytes" {
     System.Posix.Internals.$tcCTms2_bytes:
         I8[] [67,84,109,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.017125264 UTC

[section ""data" . System.Posix.Internals.$tcCTms1_closure" {
     System.Posix.Internals.$tcCTms1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCTms2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.018866712 UTC

[section ""data" . System.Posix.Internals.$tcCTms_closure" {
     System.Posix.Internals.$tcCTms_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCTms1_closure+1;
         const GHC.Types.krep$*_closure;
         const 1698703802659843616;
         const 8887550035694172540;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.020659333 UTC

[section ""cstring" . System.Posix.Internals.$tcCUtimbuf2_bytes" {
     System.Posix.Internals.$tcCUtimbuf2_bytes:
         I8[] [67,85,116,105,109,98,117,102]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.022624614 UTC

[section ""data" . System.Posix.Internals.$tcCUtimbuf1_closure" {
     System.Posix.Internals.$tcCUtimbuf1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCUtimbuf2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.024343621 UTC

[section ""data" . System.Posix.Internals.$tcCUtimbuf_closure" {
     System.Posix.Internals.$tcCUtimbuf_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCUtimbuf1_closure+1;
         const GHC.Types.krep$*_closure;
         const 8896027261912555023;
         const 11165583664207333654;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.026179592 UTC

[section ""cstring" . System.Posix.Internals.$tcCUtsname2_bytes" {
     System.Posix.Internals.$tcCUtsname2_bytes:
         I8[] [67,85,116,115,110,97,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.027824852 UTC

[section ""data" . System.Posix.Internals.$tcCUtsname1_closure" {
     System.Posix.Internals.$tcCUtsname1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.Posix.Internals.$tcCUtsname2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.029645064 UTC

[section ""data" . System.Posix.Internals.$tcCUtsname_closure" {
     System.Posix.Internals.$tcCUtsname_closure:
         const GHC.Types.TyCon_con_info;
         const System.Posix.Internals.$trModule_closure+1;
         const System.Posix.Internals.$tcCUtsname1_closure+1;
         const GHC.Types.krep$*_closure;
         const 628277874126106259;
         const 14985531938252154773;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.03224831 UTC

[section ""data" . get_saved_termios1_r9pej_closure" {
     get_saved_termios1_r9pej_closure:
         const get_saved_termios1_r9pej_info;
 },
 get_saved_termios1_r9pej_entry() //  [R2]
         { info_tbl: [(c9ucK,
                       label: get_saved_termios1_r9pej_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ucK: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9ucQ; else goto c9ucR;
       c9ucQ: // global
           R2 = R2;
           R1 = get_saved_termios1_r9pej_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9ucR: // global
           I64[Sp - 8] = block_c9ucH_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9ucV; else goto c9ucI;
       u9ucV: // global
           call _c9ucH(R1) args: 0, res: 0, upd: 0;
       c9ucI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ucH() //  [R1]
         { info_tbl: [(c9ucH,
                       label: block_c9ucH_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ucH: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9ucU; else goto c9ucT;
       c9ucU: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9ucT: // global
           (_s9tKv::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [PtrHint] __hscore_get_saved_termios(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s9tKv::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.039017619 UTC

[section ""data" . System.Posix.Internals.get_saved_termios_closure" {
     System.Posix.Internals.get_saved_termios_closure:
         const System.Posix.Internals.get_saved_termios_info;
 },
 System.Posix.Internals.get_saved_termios_entry() //  [R2]
         { info_tbl: [(c9udc,
                       label: System.Posix.Internals.get_saved_termios_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9udc: // global
           R2 = R2;
           call get_saved_termios1_r9pej_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.043159918 UTC

[section ""data" . set_saved_termios1_r9pek_closure" {
     set_saved_termios1_r9pek_closure:
         const set_saved_termios1_r9pek_info;
 },
 set_saved_termios1_r9pek_entry() //  [R2, R3]
         { info_tbl: [(c9udq,
                       label: set_saved_termios1_r9pek_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9udq: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9udu; else goto c9udv;
       c9udu: // global
           R3 = R3;
           R2 = R2;
           R1 = set_saved_termios1_r9pek_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9udv: // global
           I64[Sp - 16] = block_c9udn_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9udG; else goto c9udo;
       u9udG: // global
           call _c9udn(R1) args: 0, res: 0, upd: 0;
       c9udo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9udn() //  [R1]
         { info_tbl: [(c9udn,
                       label: block_c9udn_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9udn: // global
           I64[Sp] = block_c9udt_info;
           _s9tKB::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tKB::I64;
           if (R1 & 7 != 0) goto u9udF; else goto c9udx;
       u9udF: // global
           call _c9udt(R1) args: 0, res: 0, upd: 0;
       c9udx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9udt() //  [R1]
         { info_tbl: [(c9udt,
                       label: block_c9udt_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9udt: // global
           call "ccall" arg hints:  [‘signed’,
                                     PtrHint]  result hints:  [] __hscore_set_saved_termios(I64[Sp + 8], I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.050648727 UTC

[section ""data" . System.Posix.Internals.set_saved_termios_closure" {
     System.Posix.Internals.set_saved_termios_closure:
         const System.Posix.Internals.set_saved_termios_info;
 },
 System.Posix.Internals.set_saved_termios_entry() //  [R2, R3]
         { info_tbl: [(c9ue2,
                       label: System.Posix.Internals.set_saved_termios_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ue2: // global
           R3 = R3;
           R2 = R2;
           call set_saved_termios1_r9pek_entry(R3,
                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.054836098 UTC

[section ""data" . c_open1_r9pel_closure" {
     c_open1_r9pel_closure:
         const c_open1_r9pel_info;
 },
 c_open1_r9pel_entry() //  [R2, R3, R4]
         { info_tbl: [(c9ueg,
                       label: c_open1_r9pel_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ueg: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9ueB; else goto c9ueC;
       c9ueB: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_open1_r9pel_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9ueC: // global
           I64[Sp - 24] = block_c9ued_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9ueJ; else goto c9uee;
       u9ueJ: // global
           call _c9ued(R1) args: 0, res: 0, upd: 0;
       c9uee: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ued() //  [R1]
         { info_tbl: [(c9ued,
                       label: block_c9ued_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ued: // global
           I64[Sp] = block_c9uej_info;
           _s9tKM::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tKM::I64;
           if (R1 & 7 != 0) goto u9ueI; else goto c9uek;
       u9ueI: // global
           call _c9uej(R1) args: 0, res: 0, upd: 0;
       c9uek: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uej() //  [R1]
         { info_tbl: [(c9uej,
                       label: block_c9uej_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uej: // global
           I64[Sp] = block_c9ueo_info;
           _s9tKO::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9tKO::I64;
           if (R1 & 7 != 0) goto u9ueK; else goto c9uep;
       u9ueK: // global
           call _c9ueo(R1) args: 0, res: 0, upd: 0;
       c9uep: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ueo() //  [R1]
         { info_tbl: [(c9ueo,
                       label: block_c9ueo_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ueo: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9ueH; else goto c9ueG;
       c9ueH: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9ueG: // global
           (_s9tKU::I64) = call "ccall" arg hints:  [PtrHint,
                                                     ‘signed’,]  result hints:  [‘signed’] __hscore_open(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tKU::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.064695188 UTC

[section ""data" . System.Posix.Internals.c_open_closure" {
     System.Posix.Internals.c_open_closure:
         const System.Posix.Internals.c_open_info;
 },
 System.Posix.Internals.c_open_entry() //  [R2, R3, R4]
         { info_tbl: [(c9ufc,
                       label: System.Posix.Internals.c_open_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ufc: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_open1_r9pel_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.068886604 UTC

[section ""data" . c_safe_open1_r9pem_closure" {
     c_safe_open1_r9pem_closure:
         const c_safe_open1_r9pem_info;
 },
 c_safe_open1_r9pem_entry() //  [R2, R3, R4]
         { info_tbl: [(c9ufq,
                       label: c_safe_open1_r9pem_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ufq: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9ufN; else goto c9ufO;
       c9ufN: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_safe_open1_r9pem_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9ufO: // global
           I64[Sp - 24] = block_c9ufn_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9ug6; else goto c9ufo;
       u9ug6: // global
           call _c9ufn(R1) args: 0, res: 0, upd: 0;
       c9ufo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ufn() //  [R1]
         { info_tbl: [(c9ufn,
                       label: block_c9ufn_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ufn: // global
           I64[Sp] = block_c9uft_info;
           _s9tL2::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tL2::I64;
           if (R1 & 7 != 0) goto u9ug5; else goto c9ufu;
       u9ug5: // global
           call _c9uft(R1) args: 0, res: 0, upd: 0;
       c9ufu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uft() //  [R1]
         { info_tbl: [(c9uft,
                       label: block_c9uft_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uft: // global
           I64[Sp] = block_c9ufy_info;
           _s9tL4::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9tL4::I64;
           if (R1 & 7 != 0) goto u9ug7; else goto c9ufz;
       u9ug7: // global
           call _c9ufy(R1) args: 0, res: 0, upd: 0;
       c9ufz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ufy() //  [R1]
         { info_tbl: [(c9ufy,
                       label: block_c9ufy_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ufy: // global
           _c9ufF::I64 = I64[Sp + 16];
           I64[Sp + 16] = block_c9ufH_info;
           _c9ufE::I64 = I64[Sp + 8];
           Sp = Sp + 16;
           _c9ufG::I64 = I64[R1 + 7];
           _u9ufX::P64 = CurrentTSO;
           I64[I64[_u9ufX::P64 + 24] + 16] = Sp;
           _u9ufY::I64 = CurrentNursery;
           P64[_u9ufY::I64 + 8] = Hp + 8;
           I64[_u9ufX::P64 + 104] = I64[_u9ufX::P64 + 104] - ((Hp + 8) - I64[_u9ufY::I64]);
           (_u9ufV::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [PtrHint] suspendThread(BaseReg, 0);
           (_s9tLa::I64) = call "ccall" arg hints:  [PtrHint,
                                                     ‘signed’,]  result hints:  [‘signed’] __hscore_open(_c9ufE::I64, _c9ufF::I64, _c9ufG::I64);
           (_u9ufW::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] resumeThread(_u9ufV::I64);
           BaseReg = _u9ufW::I64;
           _u9ufZ::P64 = CurrentTSO;
           _u9ug0::P64 = I64[_u9ufZ::P64 + 24];
           Sp = I64[_u9ug0::P64 + 16];
           SpLim = _u9ug0::P64 + 192;
           HpAlloc = 0;
           _u9ug1::I64 = CurrentNursery;
           _u9ug2::I64 = I64[_u9ug1::I64 + 8];
           Hp = _u9ug2::I64 - 8;
           _u9ug3::I64 = I64[_u9ug1::I64];
           HpLim = _u9ug3::I64 + ((%MO_SS_Conv_W32_W64(I32[_u9ug1::I64 + 48]) << 12) - 1);
           I64[_u9ufZ::P64 + 104] = I64[_u9ufZ::P64 + 104] + (_u9ug2::I64 - _u9ug3::I64);
           R1 = _s9tLa::I64;
           call (I64[I64[Sp]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ufH() //  [R1]
         { info_tbl: [(c9ufH,
                       label: block_c9ufH_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ufH: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9ufU; else goto c9ufT;
       c9ufU: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9ufT: // global
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R1));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.08166663 UTC

[section ""data" . System.Posix.Internals.c_safe_open_closure" {
     System.Posix.Internals.c_safe_open_closure:
         const System.Posix.Internals.c_safe_open_info;
 },
 System.Posix.Internals.c_safe_open_entry() //  [R2, R3, R4]
         { info_tbl: [(c9ugU,
                       label: System.Posix.Internals.c_safe_open_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ugU: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_safe_open1_r9pem_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.085467954 UTC

[section ""data" . c_fstat1_r9pen_closure" {
     c_fstat1_r9pen_closure:
         const c_fstat1_r9pen_info;
 },
 c_fstat1_r9pen_entry() //  [R2, R3]
         { info_tbl: [(c9uh8,
                       label: c_fstat1_r9pen_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uh8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9uhn; else goto c9uho;
       c9uhn: // global
           R3 = R3;
           R2 = R2;
           R1 = c_fstat1_r9pen_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9uho: // global
           I64[Sp - 16] = block_c9uh5_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9uhu; else goto c9uh6;
       u9uhu: // global
           call _c9uh5(R1) args: 0, res: 0, upd: 0;
       c9uh6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uh5() //  [R1]
         { info_tbl: [(c9uh5,
                       label: block_c9uh5_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uh5: // global
           I64[Sp] = block_c9uhb_info;
           _s9tLh::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tLh::I64;
           if (R1 & 7 != 0) goto u9uht; else goto c9uhc;
       u9uht: // global
           call _c9uhb(R1) args: 0, res: 0, upd: 0;
       c9uhc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uhb() //  [R1]
         { info_tbl: [(c9uhb,
                       label: block_c9uhb_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uhb: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uhs; else goto c9uhr;
       c9uhs: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uhr: // global
           (_s9tLn::I64) = call "ccall" arg hints:  [‘signed’,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_fstat(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tLn::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.093608654 UTC

[section ""data" . System.Posix.Internals.c_fstat_closure" {
     System.Posix.Internals.c_fstat_closure:
         const System.Posix.Internals.c_fstat_info;
 },
 System.Posix.Internals.c_fstat_entry() //  [R2, R3]
         { info_tbl: [(c9uhR,
                       label: System.Posix.Internals.c_fstat_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uhR: // global
           R3 = R3;
           R2 = R2;
           call c_fstat1_r9pen_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.097455963 UTC

[section ""data" . lstat1_r9peo_closure" {
     lstat1_r9peo_closure:
         const lstat1_r9peo_info;
 },
 lstat1_r9peo_entry() //  [R2, R3]
         { info_tbl: [(c9ui5,
                       label: lstat1_r9peo_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ui5: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9uik; else goto c9uil;
       c9uik: // global
           R3 = R3;
           R2 = R2;
           R1 = lstat1_r9peo_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9uil: // global
           I64[Sp - 16] = block_c9ui2_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9uir; else goto c9ui3;
       u9uir: // global
           call _c9ui2(R1) args: 0, res: 0, upd: 0;
       c9ui3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ui2() //  [R1]
         { info_tbl: [(c9ui2,
                       label: block_c9ui2_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ui2: // global
           I64[Sp] = block_c9ui8_info;
           _s9tLu::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tLu::I64;
           if (R1 & 7 != 0) goto u9uiq; else goto c9ui9;
       u9uiq: // global
           call _c9ui8(R1) args: 0, res: 0, upd: 0;
       c9ui9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ui8() //  [R1]
         { info_tbl: [(c9ui8,
                       label: block_c9ui8_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ui8: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uip; else goto c9uio;
       c9uip: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uio: // global
           (_s9tLA::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_lstat(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tLA::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.105491567 UTC

[section ""data" . System.Posix.Internals.lstat_closure" {
     System.Posix.Internals.lstat_closure:
         const System.Posix.Internals.lstat_info;
 },
 System.Posix.Internals.lstat_entry() //  [R2, R3]
         { info_tbl: [(c9uiO,
                       label: System.Posix.Internals.lstat_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uiO: // global
           R3 = R3;
           R2 = R2;
           call lstat1_r9peo_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.109551795 UTC

[section ""data" . c_lseek1_r9pep_closure" {
     c_lseek1_r9pep_closure:
         const c_lseek1_r9pep_info;
 },
 c_lseek1_r9pep_entry() //  [R2, R3, R4]
         { info_tbl: [(c9uj2,
                       label: c_lseek1_r9pep_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uj2: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9ujk; else goto c9ujl;
       c9ujk: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_lseek1_r9pep_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9ujl: // global
           I64[Sp - 24] = block_c9uiZ_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9ujs; else goto c9uj0;
       u9ujs: // global
           call _c9uiZ(R1) args: 0, res: 0, upd: 0;
       c9uj0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uiZ() //  [R1]
         { info_tbl: [(c9uiZ,
                       label: block_c9uiZ_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uiZ: // global
           I64[Sp] = block_c9uj5_info;
           _s9tLI::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tLI::I64;
           if (R1 & 7 != 0) goto u9ujr; else goto c9uj6;
       u9ujr: // global
           call _c9uj5(R1) args: 0, res: 0, upd: 0;
       c9uj6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uj5() //  [R1]
         { info_tbl: [(c9uj5,
                       label: block_c9uj5_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uj5: // global
           I64[Sp] = block_c9uja_info;
           _s9tLK::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9tLK::I64;
           if (R1 & 7 != 0) goto u9ujt; else goto c9ujb;
       u9ujt: // global
           call _c9uja(R1) args: 0, res: 0, upd: 0;
       c9ujb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uja() //  [R1]
         { info_tbl: [(c9uja,
                       label: block_c9uja_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uja: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9ujq; else goto c9ujp;
       c9ujq: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9ujp: // global
           (_s9tLQ::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC23ZCbaseZCSystemziPosixziInternalsZClseek(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9tLQ::I64;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.11907472 UTC

[section ""data" . System.Posix.Internals.c_lseek_closure" {
     System.Posix.Internals.c_lseek_closure:
         const System.Posix.Internals.c_lseek_info;
 },
 System.Posix.Internals.c_lseek_entry() //  [R2, R3, R4]
         { info_tbl: [(c9ujU,
                       label: System.Posix.Internals.c_lseek_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ujU: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_lseek1_r9pep_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.123013877 UTC

[section ""data" . c_access1_r9peq_closure" {
     c_access1_r9peq_closure:
         const c_access1_r9peq_info;
 },
 c_access1_r9peq_entry() //  [R2, R3]
         { info_tbl: [(c9uk8,
                       label: c_access1_r9peq_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uk8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9ukn; else goto c9uko;
       c9ukn: // global
           R3 = R3;
           R2 = R2;
           R1 = c_access1_r9peq_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9uko: // global
           I64[Sp - 16] = block_c9uk5_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9uku; else goto c9uk6;
       u9uku: // global
           call _c9uk5(R1) args: 0, res: 0, upd: 0;
       c9uk6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uk5() //  [R1]
         { info_tbl: [(c9uk5,
                       label: block_c9uk5_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uk5: // global
           I64[Sp] = block_c9ukb_info;
           _s9tLW::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tLW::I64;
           if (R1 & 7 != 0) goto u9ukt; else goto c9ukc;
       u9ukt: // global
           call _c9ukb(R1) args: 0, res: 0, upd: 0;
       c9ukc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ukb() //  [R1]
         { info_tbl: [(c9ukb,
                       label: block_c9ukb_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ukb: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uks; else goto c9ukr;
       c9uks: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9ukr: // global
           (_s9tM2::I64) = call "ccall" arg hints:  [PtrHint,
                                                     ‘signed’]  result hints:  [‘signed’] access(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tM2::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.131185826 UTC

[section ""data" . System.Posix.Internals.c_access_closure" {
     System.Posix.Internals.c_access_closure:
         const System.Posix.Internals.c_access_info;
 },
 System.Posix.Internals.c_access_entry() //  [R2, R3]
         { info_tbl: [(c9ukR,
                       label: System.Posix.Internals.c_access_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ukR: // global
           R3 = R3;
           R2 = R2;
           call c_access1_r9peq_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.13486647 UTC

[section ""data" . c_chmod1_r9per_closure" {
     c_chmod1_r9per_closure:
         const c_chmod1_r9per_info;
 },
 c_chmod1_r9per_entry() //  [R2, R3]
         { info_tbl: [(c9ul5,
                       label: c_chmod1_r9per_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ul5: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9ulk; else goto c9ull;
       c9ulk: // global
           R3 = R3;
           R2 = R2;
           R1 = c_chmod1_r9per_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9ull: // global
           I64[Sp - 16] = block_c9ul2_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9ulr; else goto c9ul3;
       u9ulr: // global
           call _c9ul2(R1) args: 0, res: 0, upd: 0;
       c9ul3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ul2() //  [R1]
         { info_tbl: [(c9ul2,
                       label: block_c9ul2_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ul2: // global
           I64[Sp] = block_c9ul8_info;
           _s9tM9::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tM9::I64;
           if (R1 & 7 != 0) goto u9ulq; else goto c9ul9;
       u9ulq: // global
           call _c9ul8(R1) args: 0, res: 0, upd: 0;
       c9ul9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ul8() //  [R1]
         { info_tbl: [(c9ul8,
                       label: block_c9ul8_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ul8: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9ulp; else goto c9ulo;
       c9ulp: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9ulo: // global
           (_s9tMf::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [‘signed’] chmod(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tMf::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.142995515 UTC

[section ""data" . System.Posix.Internals.c_chmod_closure" {
     System.Posix.Internals.c_chmod_closure:
         const System.Posix.Internals.c_chmod_info;
 },
 System.Posix.Internals.c_chmod_entry() //  [R2, R3]
         { info_tbl: [(c9ulO,
                       label: System.Posix.Internals.c_chmod_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ulO: // global
           R3 = R3;
           R2 = R2;
           call c_chmod1_r9per_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.146477308 UTC

[section ""data" . c_close1_r9pes_closure" {
     c_close1_r9pes_closure:
         const c_close1_r9pes_info;
 },
 c_close1_r9pes_entry() //  [R2]
         { info_tbl: [(c9um2,
                       label: c_close1_r9pes_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9um2: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9umb; else goto c9umc;
       c9umb: // global
           R2 = R2;
           R1 = c_close1_r9pes_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9umc: // global
           I64[Sp - 8] = block_c9ulZ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9umg; else goto c9um0;
       u9umg: // global
           call _c9ulZ(R1) args: 0, res: 0, upd: 0;
       c9um0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ulZ() //  [R1]
         { info_tbl: [(c9ulZ,
                       label: block_c9ulZ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ulZ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9umf; else goto c9ume;
       c9umf: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9ume: // global
           (_s9tMp::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [‘signed’] close(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tMp::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.152662948 UTC

[section ""data" . System.Posix.Internals.c_close_closure" {
     System.Posix.Internals.c_close_closure:
         const System.Posix.Internals.c_close_info;
 },
 System.Posix.Internals.c_close_entry() //  [R2]
         { info_tbl: [(c9umy,
                       label: System.Posix.Internals.c_close_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9umy: // global
           R2 = R2;
           call c_close1_r9pes_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.156280875 UTC

[section ""data" . c_creat1_r9pet_closure" {
     c_creat1_r9pet_closure:
         const c_creat1_r9pet_info;
 },
 c_creat1_r9pet_entry() //  [R2, R3]
         { info_tbl: [(c9umM,
                       label: c_creat1_r9pet_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9umM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9un1; else goto c9un2;
       c9un1: // global
           R3 = R3;
           R2 = R2;
           R1 = c_creat1_r9pet_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9un2: // global
           I64[Sp - 16] = block_c9umJ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9un8; else goto c9umK;
       u9un8: // global
           call _c9umJ(R1) args: 0, res: 0, upd: 0;
       c9umK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9umJ() //  [R1]
         { info_tbl: [(c9umJ,
                       label: block_c9umJ_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9umJ: // global
           I64[Sp] = block_c9umP_info;
           _s9tMw::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tMw::I64;
           if (R1 & 7 != 0) goto u9un7; else goto c9umQ;
       u9un7: // global
           call _c9umP(R1) args: 0, res: 0, upd: 0;
       c9umQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9umP() //  [R1]
         { info_tbl: [(c9umP,
                       label: block_c9umP_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9umP: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9un6; else goto c9un5;
       c9un6: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9un5: // global
           (_s9tMC::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [‘signed’] creat(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tMC::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.16451203 UTC

[section ""data" . System.Posix.Internals.c_creat_closure" {
     System.Posix.Internals.c_creat_closure:
         const System.Posix.Internals.c_creat_info;
 },
 System.Posix.Internals.c_creat_entry() //  [R2, R3]
         { info_tbl: [(c9unv,
                       label: System.Posix.Internals.c_creat_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9unv: // global
           R3 = R3;
           R2 = R2;
           call c_creat1_r9pet_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.167981938 UTC

[section ""data" . c_dup1_r9peu_closure" {
     c_dup1_r9peu_closure:
         const c_dup1_r9peu_info;
 },
 c_dup1_r9peu_entry() //  [R2]
         { info_tbl: [(c9unJ,
                       label: c_dup1_r9peu_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9unJ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9unS; else goto c9unT;
       c9unS: // global
           R2 = R2;
           R1 = c_dup1_r9peu_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9unT: // global
           I64[Sp - 8] = block_c9unG_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9unX; else goto c9unH;
       u9unX: // global
           call _c9unG(R1) args: 0, res: 0, upd: 0;
       c9unH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9unG() //  [R1]
         { info_tbl: [(c9unG,
                       label: block_c9unG_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9unG: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9unW; else goto c9unV;
       c9unW: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9unV: // global
           (_s9tMM::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [‘signed’] dup(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tMM::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.174224852 UTC

[section ""data" . System.Posix.Internals.c_dup_closure" {
     System.Posix.Internals.c_dup_closure:
         const System.Posix.Internals.c_dup_info;
 },
 System.Posix.Internals.c_dup_entry() //  [R2]
         { info_tbl: [(c9uof,
                       label: System.Posix.Internals.c_dup_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uof: // global
           R2 = R2;
           call c_dup1_r9peu_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.177836232 UTC

[section ""data" . c_dup3_r9pev_closure" {
     c_dup3_r9pev_closure:
         const c_dup3_r9pev_info;
 },
 c_dup3_r9pev_entry() //  [R2, R3]
         { info_tbl: [(c9uot,
                       label: c_dup3_r9pev_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uot: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9uoI; else goto c9uoJ;
       c9uoI: // global
           R3 = R3;
           R2 = R2;
           R1 = c_dup3_r9pev_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9uoJ: // global
           I64[Sp - 16] = block_c9uoq_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9uoP; else goto c9uor;
       u9uoP: // global
           call _c9uoq(R1) args: 0, res: 0, upd: 0;
       c9uor: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uoq() //  [R1]
         { info_tbl: [(c9uoq,
                       label: block_c9uoq_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uoq: // global
           I64[Sp] = block_c9uow_info;
           _s9tMT::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tMT::I64;
           if (R1 & 7 != 0) goto u9uoO; else goto c9uox;
       u9uoO: // global
           call _c9uow(R1) args: 0, res: 0, upd: 0;
       c9uox: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uow() //  [R1]
         { info_tbl: [(c9uow,
                       label: block_c9uow_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uow: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uoN; else goto c9uoM;
       c9uoN: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uoM: // global
           (_s9tMZ::I64) = call "ccall" arg hints:  [‘signed’,
                                                     ‘signed’]  result hints:  [‘signed’] dup2(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tMZ::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.18618882 UTC

[section ""data" . System.Posix.Internals.c_dup2_closure" {
     System.Posix.Internals.c_dup2_closure:
         const System.Posix.Internals.c_dup2_info;
 },
 System.Posix.Internals.c_dup2_entry() //  [R2, R3]
         { info_tbl: [(c9upc,
                       label: System.Posix.Internals.c_dup2_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9upc: // global
           R3 = R3;
           R2 = R2;
           call c_dup3_r9pev_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.189640708 UTC

[section ""data" . c_isatty1_r9pew_closure" {
     c_isatty1_r9pew_closure:
         const c_isatty1_r9pew_info;
 },
 c_isatty1_r9pew_entry() //  [R2]
         { info_tbl: [(c9upq,
                       label: c_isatty1_r9pew_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9upq: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9upz; else goto c9upA;
       c9upz: // global
           R2 = R2;
           R1 = c_isatty1_r9pew_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9upA: // global
           I64[Sp - 8] = block_c9upn_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9upE; else goto c9upo;
       u9upE: // global
           call _c9upn(R1) args: 0, res: 0, upd: 0;
       c9upo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9upn() //  [R1]
         { info_tbl: [(c9upn,
                       label: block_c9upn_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9upn: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9upD; else goto c9upC;
       c9upD: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9upC: // global
           (_s9tN9::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [‘signed’] isatty(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tN9::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.196287874 UTC

[section ""data" . System.Posix.Internals.c_isatty_closure" {
     System.Posix.Internals.c_isatty_closure:
         const System.Posix.Internals.c_isatty_info;
 },
 System.Posix.Internals.c_isatty_entry() //  [R2]
         { info_tbl: [(c9upW,
                       label: System.Posix.Internals.c_isatty_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9upW: // global
           R2 = R2;
           call c_isatty1_r9pew_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.199851342 UTC

[section ""data" . c_read1_r9pex_closure" {
     c_read1_r9pex_closure:
         const c_read1_r9pex_info;
 },
 c_read1_r9pex_entry() //  [R2, R3, R4]
         { info_tbl: [(c9uqa,
                       label: c_read1_r9pex_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uqa: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9uqs; else goto c9uqt;
       c9uqs: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_read1_r9pex_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9uqt: // global
           I64[Sp - 24] = block_c9uq7_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9uqA; else goto c9uq8;
       u9uqA: // global
           call _c9uq7(R1) args: 0, res: 0, upd: 0;
       c9uq8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uq7() //  [R1]
         { info_tbl: [(c9uq7,
                       label: block_c9uq7_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uq7: // global
           I64[Sp] = block_c9uqd_info;
           _s9tNh::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tNh::I64;
           if (R1 & 7 != 0) goto u9uqz; else goto c9uqe;
       u9uqz: // global
           call _c9uqd(R1) args: 0, res: 0, upd: 0;
       c9uqe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uqd() //  [R1]
         { info_tbl: [(c9uqd,
                       label: block_c9uqd_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uqd: // global
           I64[Sp] = block_c9uqi_info;
           _s9tNj::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9tNj::I64;
           if (R1 & 7 != 0) goto u9uqB; else goto c9uqj;
       u9uqB: // global
           call _c9uqi(R1) args: 0, res: 0, upd: 0;
       c9uqj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uqi() //  [R1]
         { info_tbl: [(c9uqi,
                       label: block_c9uqi_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uqi: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uqy; else goto c9uqx;
       c9uqy: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uqx: // global
           (_s9tNp::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC22ZCbaseZCSystemziPosixziInternalsZCread(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9tNp::I64;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.209731059 UTC

[section ""data" . System.Posix.Internals.c_read_closure" {
     System.Posix.Internals.c_read_closure:
         const System.Posix.Internals.c_read_info;
 },
 System.Posix.Internals.c_read_entry() //  [R2, R3, R4]
         { info_tbl: [(c9ur2,
                       label: System.Posix.Internals.c_read_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ur2: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_read1_r9pex_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.213762317 UTC

[section ""data" . c_safe_read1_r9pey_closure" {
     c_safe_read1_r9pey_closure:
         const c_safe_read1_r9pey_info;
 },
 c_safe_read1_r9pey_entry() //  [R2, R3, R4]
         { info_tbl: [(c9urg,
                       label: c_safe_read1_r9pey_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9urg: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9urA; else goto c9urB;
       c9urA: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_safe_read1_r9pey_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9urB: // global
           I64[Sp - 24] = block_c9urd_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9urT; else goto c9ure;
       u9urT: // global
           call _c9urd(R1) args: 0, res: 0, upd: 0;
       c9ure: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9urd() //  [R1]
         { info_tbl: [(c9urd,
                       label: block_c9urd_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9urd: // global
           I64[Sp] = block_c9urj_info;
           _s9tNw::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tNw::I64;
           if (R1 & 7 != 0) goto u9urS; else goto c9urk;
       u9urS: // global
           call _c9urj(R1) args: 0, res: 0, upd: 0;
       c9urk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9urj() //  [R1]
         { info_tbl: [(c9urj,
                       label: block_c9urj_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9urj: // global
           I64[Sp] = block_c9uro_info;
           _s9tNy::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9tNy::I64;
           if (R1 & 7 != 0) goto u9urU; else goto c9urp;
       u9urU: // global
           call _c9uro(R1) args: 0, res: 0, upd: 0;
       c9urp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uro() //  [R1]
         { info_tbl: [(c9uro,
                       label: block_c9uro_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uro: // global
           _c9urv::I64 = I64[Sp + 16];
           I64[Sp + 16] = block_c9urx_info;
           _c9uru::I64 = I64[Sp + 8];
           Sp = Sp + 16;
           _c9urw::I64 = I64[R1 + 7];
           _u9urK::P64 = CurrentTSO;
           I64[I64[_u9urK::P64 + 24] + 16] = Sp;
           _u9urL::I64 = CurrentNursery;
           P64[_u9urL::I64 + 8] = Hp + 8;
           I64[_u9urK::P64 + 104] = I64[_u9urK::P64 + 104] - ((Hp + 8) - I64[_u9urL::I64]);
           (_u9urI::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [PtrHint] suspendThread(BaseReg, 0);
           (_s9tNE::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC21ZCbaseZCSystemziPosixziInternalsZCread(_c9uru::I64, _c9urv::I64, _c9urw::I64);
           (_u9urJ::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] resumeThread(_u9urI::I64);
           BaseReg = _u9urJ::I64;
           _u9urM::P64 = CurrentTSO;
           _u9urN::P64 = I64[_u9urM::P64 + 24];
           Sp = I64[_u9urN::P64 + 16];
           SpLim = _u9urN::P64 + 192;
           HpAlloc = 0;
           _u9urO::I64 = CurrentNursery;
           _u9urP::I64 = I64[_u9urO::I64 + 8];
           Hp = _u9urP::I64 - 8;
           _u9urQ::I64 = I64[_u9urO::I64];
           HpLim = _u9urQ::I64 + ((%MO_SS_Conv_W32_W64(I32[_u9urO::I64 + 48]) << 12) - 1);
           I64[_u9urM::P64 + 104] = I64[_u9urM::P64 + 104] + (_u9urP::I64 - _u9urQ::I64);
           R1 = _s9tNE::I64;
           call (I64[I64[Sp]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9urx() //  [R1]
         { info_tbl: [(c9urx,
                       label: block_c9urx_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9urx: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9urH; else goto c9urG;
       c9urH: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9urG: // global
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.226526452 UTC

[section ""data" . System.Posix.Internals.c_safe_read_closure" {
     System.Posix.Internals.c_safe_read_closure:
         const System.Posix.Internals.c_safe_read_info;
 },
 System.Posix.Internals.c_safe_read_entry() //  [R2, R3, R4]
         { info_tbl: [(c9usG,
                       label: System.Posix.Internals.c_safe_read_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9usG: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_safe_read1_r9pey_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.230697807 UTC

[section ""data" . c_umask1_r9pez_closure" {
     c_umask1_r9pez_closure:
         const c_umask1_r9pez_info;
 },
 c_umask1_r9pez_entry() //  [R2]
         { info_tbl: [(c9usU,
                       label: c_umask1_r9pez_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9usU: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9ut3; else goto c9ut4;
       c9ut3: // global
           R2 = R2;
           R1 = c_umask1_r9pez_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9ut4: // global
           I64[Sp - 8] = block_c9usR_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9ut8; else goto c9usS;
       u9ut8: // global
           call _c9usR(R1) args: 0, res: 0, upd: 0;
       c9usS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9usR() //  [R1]
         { info_tbl: [(c9usR,
                       label: block_c9usR_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9usR: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9ut7; else goto c9ut6;
       c9ut7: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9ut6: // global
           (_s9tNN::I64) = call "ccall" arg hints:  []  result hints:  [] umask(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Word.W32#_con_info;
           I64[Hp] = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9tNN::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.236645595 UTC

[section ""data" . System.Posix.Internals.c_umask_closure" {
     System.Posix.Internals.c_umask_closure:
         const System.Posix.Internals.c_umask_info;
 },
 System.Posix.Internals.c_umask_entry() //  [R2]
         { info_tbl: [(c9utq,
                       label: System.Posix.Internals.c_umask_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9utq: // global
           R2 = R2;
           call c_umask1_r9pez_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.240539834 UTC

[section ""data" . c_write1_r9peA_closure" {
     c_write1_r9peA_closure:
         const c_write1_r9peA_info;
 },
 c_write1_r9peA_entry() //  [R2, R3, R4]
         { info_tbl: [(c9utE,
                       label: c_write1_r9peA_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9utE: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9utW; else goto c9utX;
       c9utW: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_write1_r9peA_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9utX: // global
           I64[Sp - 24] = block_c9utB_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9uu4; else goto c9utC;
       u9uu4: // global
           call _c9utB(R1) args: 0, res: 0, upd: 0;
       c9utC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9utB() //  [R1]
         { info_tbl: [(c9utB,
                       label: block_c9utB_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9utB: // global
           I64[Sp] = block_c9utH_info;
           _s9tNV::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tNV::I64;
           if (R1 & 7 != 0) goto u9uu3; else goto c9utI;
       u9uu3: // global
           call _c9utH(R1) args: 0, res: 0, upd: 0;
       c9utI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9utH() //  [R1]
         { info_tbl: [(c9utH,
                       label: block_c9utH_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9utH: // global
           I64[Sp] = block_c9utM_info;
           _s9tNX::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9tNX::I64;
           if (R1 & 7 != 0) goto u9uu5; else goto c9utN;
       u9uu5: // global
           call _c9utM(R1) args: 0, res: 0, upd: 0;
       c9utN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9utM() //  [R1]
         { info_tbl: [(c9utM,
                       label: block_c9utM_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9utM: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uu2; else goto c9uu1;
       c9uu2: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uu1: // global
           (_s9tO3::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9tO3::I64;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.250373054 UTC

[section ""data" . System.Posix.Internals.c_write_closure" {
     System.Posix.Internals.c_write_closure:
         const System.Posix.Internals.c_write_info;
 },
 System.Posix.Internals.c_write_entry() //  [R2, R3, R4]
         { info_tbl: [(c9uuw,
                       label: System.Posix.Internals.c_write_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uuw: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_write1_r9peA_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.254142597 UTC

[section ""data" . c_safe_write1_r9peB_closure" {
     c_safe_write1_r9peB_closure:
         const c_safe_write1_r9peB_info;
 },
 c_safe_write1_r9peB_entry() //  [R2, R3, R4]
         { info_tbl: [(c9uuK,
                       label: c_safe_write1_r9peB_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uuK: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9uv4; else goto c9uv5;
       c9uv4: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_safe_write1_r9peB_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9uv5: // global
           I64[Sp - 24] = block_c9uuH_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9uvn; else goto c9uuI;
       u9uvn: // global
           call _c9uuH(R1) args: 0, res: 0, upd: 0;
       c9uuI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uuH() //  [R1]
         { info_tbl: [(c9uuH,
                       label: block_c9uuH_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uuH: // global
           I64[Sp] = block_c9uuN_info;
           _s9tOa::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tOa::I64;
           if (R1 & 7 != 0) goto u9uvm; else goto c9uuO;
       u9uvm: // global
           call _c9uuN(R1) args: 0, res: 0, upd: 0;
       c9uuO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uuN() //  [R1]
         { info_tbl: [(c9uuN,
                       label: block_c9uuN_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uuN: // global
           I64[Sp] = block_c9uuS_info;
           _s9tOc::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9tOc::I64;
           if (R1 & 7 != 0) goto u9uvo; else goto c9uuT;
       u9uvo: // global
           call _c9uuS(R1) args: 0, res: 0, upd: 0;
       c9uuT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uuS() //  [R1]
         { info_tbl: [(c9uuS,
                       label: block_c9uuS_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uuS: // global
           _c9uuZ::I64 = I64[Sp + 16];
           I64[Sp + 16] = block_c9uv1_info;
           _c9uuY::I64 = I64[Sp + 8];
           Sp = Sp + 16;
           _c9uv0::I64 = I64[R1 + 7];
           _u9uve::P64 = CurrentTSO;
           I64[I64[_u9uve::P64 + 24] + 16] = Sp;
           _u9uvf::I64 = CurrentNursery;
           P64[_u9uvf::I64 + 8] = Hp + 8;
           I64[_u9uve::P64 + 104] = I64[_u9uve::P64 + 104] - ((Hp + 8) - I64[_u9uvf::I64]);
           (_u9uvc::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [PtrHint] suspendThread(BaseReg, 0);
           (_s9tOi::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC19ZCbaseZCSystemziPosixziInternalsZCwrite(_c9uuY::I64, _c9uuZ::I64, _c9uv0::I64);
           (_u9uvd::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] resumeThread(_u9uvc::I64);
           BaseReg = _u9uvd::I64;
           _u9uvg::P64 = CurrentTSO;
           _u9uvh::P64 = I64[_u9uvg::P64 + 24];
           Sp = I64[_u9uvh::P64 + 16];
           SpLim = _u9uvh::P64 + 192;
           HpAlloc = 0;
           _u9uvi::I64 = CurrentNursery;
           _u9uvj::I64 = I64[_u9uvi::I64 + 8];
           Hp = _u9uvj::I64 - 8;
           _u9uvk::I64 = I64[_u9uvi::I64];
           HpLim = _u9uvk::I64 + ((%MO_SS_Conv_W32_W64(I32[_u9uvi::I64 + 48]) << 12) - 1);
           I64[_u9uvg::P64 + 104] = I64[_u9uvg::P64 + 104] + (_u9uvj::I64 - _u9uvk::I64);
           R1 = _s9tOi::I64;
           call (I64[I64[Sp]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uv1() //  [R1]
         { info_tbl: [(c9uv1,
                       label: block_c9uv1_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uv1: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uvb; else goto c9uva;
       c9uvb: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9uva: // global
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.267110158 UTC

[section ""data" . System.Posix.Internals.c_safe_write_closure" {
     System.Posix.Internals.c_safe_write_closure:
         const System.Posix.Internals.c_safe_write_info;
 },
 System.Posix.Internals.c_safe_write_entry() //  [R2, R3, R4]
         { info_tbl: [(c9uwa,
                       label: System.Posix.Internals.c_safe_write_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uwa: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_safe_write1_r9peB_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.271075466 UTC

[section ""data" . c_pipe1_r9peC_closure" {
     c_pipe1_r9peC_closure:
         const c_pipe1_r9peC_info;
 },
 c_pipe1_r9peC_entry() //  [R2]
         { info_tbl: [(c9uwo,
                       label: c_pipe1_r9peC_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uwo: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9uwx; else goto c9uwy;
       c9uwx: // global
           R2 = R2;
           R1 = c_pipe1_r9peC_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9uwy: // global
           I64[Sp - 8] = block_c9uwl_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9uwC; else goto c9uwm;
       u9uwC: // global
           call _c9uwl(R1) args: 0, res: 0, upd: 0;
       c9uwm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uwl() //  [R1]
         { info_tbl: [(c9uwl,
                       label: block_c9uwl_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uwl: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uwB; else goto c9uwA;
       c9uwB: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uwA: // global
           (_s9tOr::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] pipe(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tOr::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.276797078 UTC

[section ""data" . System.Posix.Internals.c_pipe_closure" {
     System.Posix.Internals.c_pipe_closure:
         const System.Posix.Internals.c_pipe_info;
 },
 System.Posix.Internals.c_pipe_entry() //  [R2]
         { info_tbl: [(c9uwU,
                       label: System.Posix.Internals.c_pipe_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uwU: // global
           R2 = R2;
           call c_pipe1_r9peC_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.28081157 UTC

[section ""data" . c_unlink1_r9peD_closure" {
     c_unlink1_r9peD_closure:
         const c_unlink1_r9peD_info;
 },
 c_unlink1_r9peD_entry() //  [R2]
         { info_tbl: [(c9ux8,
                       label: c_unlink1_r9peD_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ux8: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9uxh; else goto c9uxi;
       c9uxh: // global
           R2 = R2;
           R1 = c_unlink1_r9peD_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9uxi: // global
           I64[Sp - 8] = block_c9ux5_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9uxm; else goto c9ux6;
       u9uxm: // global
           call _c9ux5(R1) args: 0, res: 0, upd: 0;
       c9ux6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ux5() //  [R1]
         { info_tbl: [(c9ux5,
                       label: block_c9ux5_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ux5: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uxl; else goto c9uxk;
       c9uxl: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uxk: // global
           (_s9tOB::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] unlink(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tOB::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.286976073 UTC

[section ""data" . System.Posix.Internals.c_unlink_closure" {
     System.Posix.Internals.c_unlink_closure:
         const System.Posix.Internals.c_unlink_info;
 },
 System.Posix.Internals.c_unlink_entry() //  [R2]
         { info_tbl: [(c9uxE,
                       label: System.Posix.Internals.c_unlink_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uxE: // global
           R2 = R2;
           call c_unlink1_r9peD_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.290727099 UTC

[section ""data" . c_utime1_r9peE_closure" {
     c_utime1_r9peE_closure:
         const c_utime1_r9peE_info;
 },
 c_utime1_r9peE_entry() //  [R2, R3]
         { info_tbl: [(c9uxS,
                       label: c_utime1_r9peE_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uxS: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9uy7; else goto c9uy8;
       c9uy7: // global
           R3 = R3;
           R2 = R2;
           R1 = c_utime1_r9peE_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9uy8: // global
           I64[Sp - 16] = block_c9uxP_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9uye; else goto c9uxQ;
       u9uye: // global
           call _c9uxP(R1) args: 0, res: 0, upd: 0;
       c9uxQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uxP() //  [R1]
         { info_tbl: [(c9uxP,
                       label: block_c9uxP_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uxP: // global
           I64[Sp] = block_c9uxV_info;
           _s9tOI::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tOI::I64;
           if (R1 & 7 != 0) goto u9uyd; else goto c9uxW;
       u9uyd: // global
           call _c9uxV(R1) args: 0, res: 0, upd: 0;
       c9uxW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uxV() //  [R1]
         { info_tbl: [(c9uxV,
                       label: block_c9uxV_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uxV: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uyc; else goto c9uyb;
       c9uyc: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uyb: // global
           (_s9tOO::I64) = call "capi" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC18ZCbaseZCSystemziPosixziInternalsZCutime(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tOO::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.29896211 UTC

[section ""data" . System.Posix.Internals.c_utime_closure" {
     System.Posix.Internals.c_utime_closure:
         const System.Posix.Internals.c_utime_info;
 },
 System.Posix.Internals.c_utime_entry() //  [R2, R3]
         { info_tbl: [(c9uyB,
                       label: System.Posix.Internals.c_utime_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uyB: // global
           R3 = R3;
           R2 = R2;
           call c_utime1_r9peE_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.302680447 UTC

[section ""data" . c_getpid1_r9peF_closure" {
     c_getpid1_r9peF_closure:
         const c_getpid1_r9peF_info;
 },
 c_getpid1_r9peF_entry() //  []
         { info_tbl: [(c9uyP,
                       label: c_getpid1_r9peF_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uyP: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uyV; else goto c9uyU;
       c9uyV: // global
           HpAlloc = 16;
           R1 = c_getpid1_r9peF_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9uyU: // global
           (_s9tOV::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] getpid();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tOV::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.306622859 UTC

[section ""data" . System.Posix.Internals.c_getpid_closure" {
     System.Posix.Internals.c_getpid_closure:
         const System.Posix.Internals.c_getpid_info;
 },
 System.Posix.Internals.c_getpid_entry() //  []
         { info_tbl: [(c9uz7,
                       label: System.Posix.Internals.c_getpid_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uz7: // global
           call c_getpid1_r9peF_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.311772179 UTC

[section ""data" . c_stat1_r9peG_closure" {
     c_stat1_r9peG_closure:
         const c_stat1_r9peG_info;
 },
 c_stat1_r9peG_entry() //  [R2, R3]
         { info_tbl: [(c9uzl,
                       label: c_stat1_r9peG_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uzl: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9uzA; else goto c9uzB;
       c9uzA: // global
           R3 = R3;
           R2 = R2;
           R1 = c_stat1_r9peG_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9uzB: // global
           I64[Sp - 16] = block_c9uzi_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9uzH; else goto c9uzj;
       u9uzH: // global
           call _c9uzi(R1) args: 0, res: 0, upd: 0;
       c9uzj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uzi() //  [R1]
         { info_tbl: [(c9uzi,
                       label: block_c9uzi_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uzi: // global
           I64[Sp] = block_c9uzo_info;
           _s9tP2::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tP2::I64;
           if (R1 & 7 != 0) goto u9uzG; else goto c9uzp;
       u9uzG: // global
           call _c9uzo(R1) args: 0, res: 0, upd: 0;
       c9uzp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uzo() //  [R1]
         { info_tbl: [(c9uzo,
                       label: block_c9uzo_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uzo: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uzF; else goto c9uzE;
       c9uzF: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uzE: // global
           (_s9tP8::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_stat(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tP8::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.321066462 UTC

[section ""data" . System.Posix.Internals.c_stat_closure" {
     System.Posix.Internals.c_stat_closure:
         const System.Posix.Internals.c_stat_info;
 },
 System.Posix.Internals.c_stat_entry() //  [R2, R3]
         { info_tbl: [(c9uA4,
                       label: System.Posix.Internals.c_stat_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uA4: // global
           R3 = R3;
           R2 = R2;
           call c_stat1_r9peG_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.325085759 UTC

[section ""data" . c_ftruncate1_r9peH_closure" {
     c_ftruncate1_r9peH_closure:
         const c_ftruncate1_r9peH_info;
 },
 c_ftruncate1_r9peH_entry() //  [R2, R3]
         { info_tbl: [(c9uAi,
                       label: c_ftruncate1_r9peH_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uAi: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9uAx; else goto c9uAy;
       c9uAx: // global
           R3 = R3;
           R2 = R2;
           R1 = c_ftruncate1_r9peH_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9uAy: // global
           I64[Sp - 16] = block_c9uAf_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9uAE; else goto c9uAg;
       u9uAE: // global
           call _c9uAf(R1) args: 0, res: 0, upd: 0;
       c9uAg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uAf() //  [R1]
         { info_tbl: [(c9uAf,
                       label: block_c9uAf_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uAf: // global
           I64[Sp] = block_c9uAl_info;
           _s9tPf::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tPf::I64;
           if (R1 & 7 != 0) goto u9uAD; else goto c9uAm;
       u9uAD: // global
           call _c9uAl(R1) args: 0, res: 0, upd: 0;
       c9uAm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uAl() //  [R1]
         { info_tbl: [(c9uAl,
                       label: block_c9uAl_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uAl: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uAC; else goto c9uAB;
       c9uAC: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uAB: // global
           (_s9tPl::I64) = call "ccall" arg hints:  [‘signed’,
                                                     ‘signed’]  result hints:  [‘signed’] __hscore_ftruncate(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tPl::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.333157688 UTC

[section ""data" . System.Posix.Internals.c_ftruncate_closure" {
     System.Posix.Internals.c_ftruncate_closure:
         const System.Posix.Internals.c_ftruncate_info;
 },
 System.Posix.Internals.c_ftruncate_entry() //  [R2, R3]
         { info_tbl: [(c9uB1,
                       label: System.Posix.Internals.c_ftruncate_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uB1: // global
           R3 = R3;
           R2 = R2;
           call c_ftruncate1_r9peH_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.336812041 UTC

[section ""data" . c_fcntl_read1_r9peI_closure" {
     c_fcntl_read1_r9peI_closure:
         const c_fcntl_read1_r9peI_info;
 },
 c_fcntl_read1_r9peI_entry() //  [R2, R3]
         { info_tbl: [(c9uBf,
                       label: c_fcntl_read1_r9peI_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uBf: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9uBu; else goto c9uBv;
       c9uBu: // global
           R3 = R3;
           R2 = R2;
           R1 = c_fcntl_read1_r9peI_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9uBv: // global
           I64[Sp - 16] = block_c9uBc_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9uBB; else goto c9uBd;
       u9uBB: // global
           call _c9uBc(R1) args: 0, res: 0, upd: 0;
       c9uBd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uBc() //  [R1]
         { info_tbl: [(c9uBc,
                       label: block_c9uBc_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uBc: // global
           I64[Sp] = block_c9uBi_info;
           _s9tPs::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tPs::I64;
           if (R1 & 7 != 0) goto u9uBA; else goto c9uBj;
       u9uBA: // global
           call _c9uBi(R1) args: 0, res: 0, upd: 0;
       c9uBj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uBi() //  [R1]
         { info_tbl: [(c9uBi,
                       label: block_c9uBi_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uBi: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uBz; else goto c9uBy;
       c9uBz: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uBy: // global
           (_s9tPy::I64) = call "capi" arg hints:  [‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC17ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tPy::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.344779274 UTC

[section ""data" . System.Posix.Internals.c_fcntl_read_closure" {
     System.Posix.Internals.c_fcntl_read_closure:
         const System.Posix.Internals.c_fcntl_read_info;
 },
 System.Posix.Internals.c_fcntl_read_entry() //  [R2, R3]
         { info_tbl: [(c9uBY,
                       label: System.Posix.Internals.c_fcntl_read_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uBY: // global
           R3 = R3;
           R2 = R2;
           call c_fcntl_read1_r9peI_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.349195658 UTC

[section ""data" . c_fcntl_write1_r9peJ_closure" {
     c_fcntl_write1_r9peJ_closure:
         const c_fcntl_write1_r9peJ_info;
 },
 c_fcntl_write1_r9peJ_entry() //  [R2, R3, R4]
         { info_tbl: [(c9uCc,
                       label: c_fcntl_write1_r9peJ_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uCc: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9uCx; else goto c9uCy;
       c9uCx: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_fcntl_write1_r9peJ_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9uCy: // global
           I64[Sp - 24] = block_c9uC9_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9uCF; else goto c9uCa;
       u9uCF: // global
           call _c9uC9(R1) args: 0, res: 0, upd: 0;
       c9uCa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uC9() //  [R1]
         { info_tbl: [(c9uC9,
                       label: block_c9uC9_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uC9: // global
           I64[Sp] = block_c9uCf_info;
           _s9tPG::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tPG::I64;
           if (R1 & 7 != 0) goto u9uCE; else goto c9uCg;
       u9uCE: // global
           call _c9uCf(R1) args: 0, res: 0, upd: 0;
       c9uCg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uCf() //  [R1]
         { info_tbl: [(c9uCf,
                       label: block_c9uCf_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uCf: // global
           I64[Sp] = block_c9uCk_info;
           _s9tPI::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9tPI::I64;
           if (R1 & 7 != 0) goto u9uCG; else goto c9uCl;
       u9uCG: // global
           call _c9uCk(R1) args: 0, res: 0, upd: 0;
       c9uCl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uCk() //  [R1]
         { info_tbl: [(c9uCk,
                       label: block_c9uCk_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uCk: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uCD; else goto c9uCC;
       c9uCD: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uCC: // global
           (_s9tPO::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tPO::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.359436071 UTC

[section ""data" . System.Posix.Internals.c_fcntl_write_closure" {
     System.Posix.Internals.c_fcntl_write_closure:
         const System.Posix.Internals.c_fcntl_write_info;
 },
 System.Posix.Internals.c_fcntl_write_entry() //  [R2, R3, R4]
         { info_tbl: [(c9uD8,
                       label: System.Posix.Internals.c_fcntl_write_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uD8: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_fcntl_write1_r9peJ_entry(R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.363216692 UTC

[section ""data" . c_fcntl_lock1_r9peK_closure" {
     c_fcntl_lock1_r9peK_closure:
         const c_fcntl_lock1_r9peK_info;
 },
 c_fcntl_lock1_r9peK_entry() //  [R2, R3, R4]
         { info_tbl: [(c9uDm,
                       label: c_fcntl_lock1_r9peK_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uDm: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9uDH; else goto c9uDI;
       c9uDH: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_fcntl_lock1_r9peK_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9uDI: // global
           I64[Sp - 24] = block_c9uDj_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9uDP; else goto c9uDk;
       u9uDP: // global
           call _c9uDj(R1) args: 0, res: 0, upd: 0;
       c9uDk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uDj() //  [R1]
         { info_tbl: [(c9uDj,
                       label: block_c9uDj_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uDj: // global
           I64[Sp] = block_c9uDp_info;
           _s9tPW::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tPW::I64;
           if (R1 & 7 != 0) goto u9uDO; else goto c9uDq;
       u9uDO: // global
           call _c9uDp(R1) args: 0, res: 0, upd: 0;
       c9uDq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uDp() //  [R1]
         { info_tbl: [(c9uDp,
                       label: block_c9uDp_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uDp: // global
           I64[Sp] = block_c9uDu_info;
           _s9tPY::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9tPY::I64;
           if (R1 & 7 != 0) goto u9uDQ; else goto c9uDv;
       u9uDQ: // global
           call _c9uDu(R1) args: 0, res: 0, upd: 0;
       c9uDv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uDu() //  [R1]
         { info_tbl: [(c9uDu,
                       label: block_c9uDu_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uDu: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uDN; else goto c9uDM;
       c9uDN: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uDM: // global
           (_s9tQ4::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC15ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tQ4::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.372800777 UTC

[section ""data" . System.Posix.Internals.c_fcntl_lock_closure" {
     System.Posix.Internals.c_fcntl_lock_closure:
         const System.Posix.Internals.c_fcntl_lock_info;
 },
 System.Posix.Internals.c_fcntl_lock_entry() //  [R2, R3, R4]
         { info_tbl: [(c9uEi,
                       label: System.Posix.Internals.c_fcntl_lock_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uEi: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_fcntl_lock1_r9peK_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.376570863 UTC

[section ""data" . c_fork1_r9peL_closure" {
     c_fork1_r9peL_closure:
         const c_fork1_r9peL_info;
 },
 c_fork1_r9peL_entry() //  []
         { info_tbl: [(c9uEw,
                       label: c_fork1_r9peL_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uEw: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uEC; else goto c9uEB;
       c9uEC: // global
           HpAlloc = 16;
           R1 = c_fork1_r9peL_closure;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9uEB: // global
           (_s9tQb::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] fork();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tQb::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.380755702 UTC

[section ""data" . System.Posix.Internals.c_fork_closure" {
     System.Posix.Internals.c_fork_closure:
         const System.Posix.Internals.c_fork_info;
 },
 System.Posix.Internals.c_fork_entry() //  []
         { info_tbl: [(c9uEO,
                       label: System.Posix.Internals.c_fork_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uEO: // global
           call c_fork1_r9peL_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.384464913 UTC

[section ""data" . c_link1_r9peM_closure" {
     c_link1_r9peM_closure:
         const c_link1_r9peM_info;
 },
 c_link1_r9peM_entry() //  [R2, R3]
         { info_tbl: [(c9uF2,
                       label: c_link1_r9peM_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uF2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9uFh; else goto c9uFi;
       c9uFh: // global
           R3 = R3;
           R2 = R2;
           R1 = c_link1_r9peM_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9uFi: // global
           I64[Sp - 16] = block_c9uEZ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9uFo; else goto c9uF0;
       u9uFo: // global
           call _c9uEZ(R1) args: 0, res: 0, upd: 0;
       c9uF0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uEZ() //  [R1]
         { info_tbl: [(c9uEZ,
                       label: block_c9uEZ_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uEZ: // global
           I64[Sp] = block_c9uF5_info;
           _s9tQi::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tQi::I64;
           if (R1 & 7 != 0) goto u9uFn; else goto c9uF6;
       u9uFn: // global
           call _c9uF5(R1) args: 0, res: 0, upd: 0;
       c9uF6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uF5() //  [R1]
         { info_tbl: [(c9uF5,
                       label: block_c9uF5_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uF5: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uFm; else goto c9uFl;
       c9uFm: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uFl: // global
           (_s9tQo::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [‘signed’] link(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tQo::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.392770107 UTC

[section ""data" . System.Posix.Internals.c_link_closure" {
     System.Posix.Internals.c_link_closure:
         const System.Posix.Internals.c_link_info;
 },
 System.Posix.Internals.c_link_entry() //  [R2, R3]
         { info_tbl: [(c9uFL,
                       label: System.Posix.Internals.c_link_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uFL: // global
           R3 = R3;
           R2 = R2;
           call c_link1_r9peM_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.396438751 UTC

[section ""data" . c_mkfifo1_r9peN_closure" {
     c_mkfifo1_r9peN_closure:
         const c_mkfifo1_r9peN_info;
 },
 c_mkfifo1_r9peN_entry() //  [R2, R3]
         { info_tbl: [(c9uFZ,
                       label: c_mkfifo1_r9peN_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uFZ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9uGe; else goto c9uGf;
       c9uGe: // global
           R3 = R3;
           R2 = R2;
           R1 = c_mkfifo1_r9peN_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9uGf: // global
           I64[Sp - 16] = block_c9uFW_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9uGl; else goto c9uFX;
       u9uGl: // global
           call _c9uFW(R1) args: 0, res: 0, upd: 0;
       c9uFX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uFW() //  [R1]
         { info_tbl: [(c9uFW,
                       label: block_c9uFW_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uFW: // global
           I64[Sp] = block_c9uG2_info;
           _s9tQv::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tQv::I64;
           if (R1 & 7 != 0) goto u9uGk; else goto c9uG3;
       u9uGk: // global
           call _c9uG2(R1) args: 0, res: 0, upd: 0;
       c9uG3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uG2() //  [R1]
         { info_tbl: [(c9uG2,
                       label: block_c9uG2_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uG2: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uGj; else goto c9uGi;
       c9uGj: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uGi: // global
           (_s9tQB::I64) = call "capi" arg hints:  [PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC14ZCbaseZCSystemziPosixziInternalsZCmkfifo(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tQB::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.404636461 UTC

[section ""data" . System.Posix.Internals.c_mkfifo_closure" {
     System.Posix.Internals.c_mkfifo_closure:
         const System.Posix.Internals.c_mkfifo_info;
 },
 System.Posix.Internals.c_mkfifo_entry() //  [R2, R3]
         { info_tbl: [(c9uGI,
                       label: System.Posix.Internals.c_mkfifo_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uGI: // global
           R3 = R3;
           R2 = R2;
           call c_mkfifo1_r9peN_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.408124863 UTC

[section ""data" . c_sigemptyset1_r9peO_closure" {
     c_sigemptyset1_r9peO_closure:
         const c_sigemptyset1_r9peO_info;
 },
 c_sigemptyset1_r9peO_entry() //  [R2]
         { info_tbl: [(c9uGW,
                       label: c_sigemptyset1_r9peO_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uGW: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9uH5; else goto c9uH6;
       c9uH5: // global
           R2 = R2;
           R1 = c_sigemptyset1_r9peO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9uH6: // global
           I64[Sp - 8] = block_c9uGT_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9uHa; else goto c9uGU;
       u9uHa: // global
           call _c9uGT(R1) args: 0, res: 0, upd: 0;
       c9uGU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uGT() //  [R1]
         { info_tbl: [(c9uGT,
                       label: block_c9uGT_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uGT: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uH9; else goto c9uH8;
       c9uH9: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uH8: // global
           (_s9tQL::I64) = call "capi" arg hints:  [PtrHint]  result hints:  [‘signed’] ghczuwrapperZC13ZCbaseZCSystemziPosixziInternalsZCsigemptyset(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tQL::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.414504458 UTC

[section ""data" . System.Posix.Internals.c_sigemptyset_closure" {
     System.Posix.Internals.c_sigemptyset_closure:
         const System.Posix.Internals.c_sigemptyset_info;
 },
 System.Posix.Internals.c_sigemptyset_entry() //  [R2]
         { info_tbl: [(c9uHs,
                       label: System.Posix.Internals.c_sigemptyset_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uHs: // global
           R2 = R2;
           call c_sigemptyset1_r9peO_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.41813951 UTC

[section ""data" . c_sigaddset1_r9peP_closure" {
     c_sigaddset1_r9peP_closure:
         const c_sigaddset1_r9peP_info;
 },
 c_sigaddset1_r9peP_entry() //  [R2, R3]
         { info_tbl: [(c9uHG,
                       label: c_sigaddset1_r9peP_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uHG: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9uHV; else goto c9uHW;
       c9uHV: // global
           R3 = R3;
           R2 = R2;
           R1 = c_sigaddset1_r9peP_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9uHW: // global
           I64[Sp - 16] = block_c9uHD_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9uI2; else goto c9uHE;
       u9uI2: // global
           call _c9uHD(R1) args: 0, res: 0, upd: 0;
       c9uHE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uHD() //  [R1]
         { info_tbl: [(c9uHD,
                       label: block_c9uHD_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uHD: // global
           I64[Sp] = block_c9uHJ_info;
           _s9tQS::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tQS::I64;
           if (R1 & 7 != 0) goto u9uI1; else goto c9uHK;
       u9uI1: // global
           call _c9uHJ(R1) args: 0, res: 0, upd: 0;
       c9uHK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uHJ() //  [R1]
         { info_tbl: [(c9uHJ,
                       label: block_c9uHJ_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uHJ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uI0; else goto c9uHZ;
       c9uI0: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uHZ: // global
           (_s9tQY::I64) = call "capi" arg hints:  [PtrHint,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC12ZCbaseZCSystemziPosixziInternalsZCsigaddset(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tQY::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.426033087 UTC

[section ""data" . System.Posix.Internals.c_sigaddset_closure" {
     System.Posix.Internals.c_sigaddset_closure:
         const System.Posix.Internals.c_sigaddset_info;
 },
 System.Posix.Internals.c_sigaddset_entry() //  [R2, R3]
         { info_tbl: [(c9uIp,
                       label: System.Posix.Internals.c_sigaddset_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uIp: // global
           R3 = R3;
           R2 = R2;
           call c_sigaddset1_r9peP_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.42995706 UTC

[section ""data" . c_sigprocmask1_r9peQ_closure" {
     c_sigprocmask1_r9peQ_closure:
         const c_sigprocmask1_r9peQ_info;
 },
 c_sigprocmask1_r9peQ_entry() //  [R2, R3, R4]
         { info_tbl: [(c9uID,
                       label: c_sigprocmask1_r9peQ_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uID: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9uIY; else goto c9uIZ;
       c9uIY: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_sigprocmask1_r9peQ_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9uIZ: // global
           I64[Sp - 24] = block_c9uIA_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9uJ6; else goto c9uIB;
       u9uJ6: // global
           call _c9uIA(R1) args: 0, res: 0, upd: 0;
       c9uIB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uIA() //  [R1]
         { info_tbl: [(c9uIA,
                       label: block_c9uIA_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uIA: // global
           I64[Sp] = block_c9uIG_info;
           _s9tR6::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tR6::I64;
           if (R1 & 7 != 0) goto u9uJ5; else goto c9uIH;
       u9uJ5: // global
           call _c9uIG(R1) args: 0, res: 0, upd: 0;
       c9uIH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uIG() //  [R1]
         { info_tbl: [(c9uIG,
                       label: block_c9uIG_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uIG: // global
           I64[Sp] = block_c9uIL_info;
           _s9tR8::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9tR8::I64;
           if (R1 & 7 != 0) goto u9uJ7; else goto c9uIM;
       u9uJ7: // global
           call _c9uIL(R1) args: 0, res: 0, upd: 0;
       c9uIM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uIL() //  [R1]
         { info_tbl: [(c9uIL,
                       label: block_c9uIL_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uIL: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uJ4; else goto c9uJ3;
       c9uJ4: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uJ3: // global
           (_s9tRe::I64) = call "capi" arg hints:  [‘signed’, PtrHint,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC11ZCbaseZCSystemziPosixziInternalsZCsigprocmask(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tRe::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.439594979 UTC

[section ""data" . System.Posix.Internals.c_sigprocmask_closure" {
     System.Posix.Internals.c_sigprocmask_closure:
         const System.Posix.Internals.c_sigprocmask_info;
 },
 System.Posix.Internals.c_sigprocmask_entry() //  [R2, R3, R4]
         { info_tbl: [(c9uJz,
                       label: System.Posix.Internals.c_sigprocmask_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uJz: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_sigprocmask1_r9peQ_entry(R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.44414025 UTC

[section ""data" . c_tcgetattr1_r9peR_closure" {
     c_tcgetattr1_r9peR_closure:
         const c_tcgetattr1_r9peR_info;
 },
 c_tcgetattr1_r9peR_entry() //  [R2, R3]
         { info_tbl: [(c9uJN,
                       label: c_tcgetattr1_r9peR_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uJN: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9uK2; else goto c9uK3;
       c9uK2: // global
           R3 = R3;
           R2 = R2;
           R1 = c_tcgetattr1_r9peR_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9uK3: // global
           I64[Sp - 16] = block_c9uJK_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9uK9; else goto c9uJL;
       u9uK9: // global
           call _c9uJK(R1) args: 0, res: 0, upd: 0;
       c9uJL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uJK() //  [R1]
         { info_tbl: [(c9uJK,
                       label: block_c9uJK_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uJK: // global
           I64[Sp] = block_c9uJQ_info;
           _s9tRl::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tRl::I64;
           if (R1 & 7 != 0) goto u9uK8; else goto c9uJR;
       u9uK8: // global
           call _c9uJQ(R1) args: 0, res: 0, upd: 0;
       c9uJR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uJQ() //  [R1]
         { info_tbl: [(c9uJQ,
                       label: block_c9uJQ_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uJQ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uK7; else goto c9uK6;
       c9uK7: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uK6: // global
           (_s9tRr::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC10ZCbaseZCSystemziPosixziInternalsZCtcgetattr(I64[Sp + 8], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tRr::I64));
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.451647493 UTC

[section ""data" . System.Posix.Internals.c_tcgetattr_closure" {
     System.Posix.Internals.c_tcgetattr_closure:
         const System.Posix.Internals.c_tcgetattr_info;
 },
 System.Posix.Internals.c_tcgetattr_entry() //  [R2, R3]
         { info_tbl: [(c9uKw,
                       label: System.Posix.Internals.c_tcgetattr_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uKw: // global
           R3 = R3;
           R2 = R2;
           call c_tcgetattr1_r9peR_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.455956731 UTC

[section ""data" . c_tcsetattr1_r9peS_closure" {
     c_tcsetattr1_r9peS_closure:
         const c_tcsetattr1_r9peS_info;
 },
 c_tcsetattr1_r9peS_entry() //  [R2, R3, R4]
         { info_tbl: [(c9uKK,
                       label: c_tcsetattr1_r9peS_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uKK: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9uL5; else goto c9uL6;
       c9uL5: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_tcsetattr1_r9peS_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9uL6: // global
           I64[Sp - 24] = block_c9uKH_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9uLd; else goto c9uKI;
       u9uLd: // global
           call _c9uKH(R1) args: 0, res: 0, upd: 0;
       c9uKI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uKH() //  [R1]
         { info_tbl: [(c9uKH,
                       label: block_c9uKH_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uKH: // global
           I64[Sp] = block_c9uKN_info;
           _s9tRz::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tRz::I64;
           if (R1 & 7 != 0) goto u9uLc; else goto c9uKO;
       u9uLc: // global
           call _c9uKN(R1) args: 0, res: 0, upd: 0;
       c9uKO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uKN() //  [R1]
         { info_tbl: [(c9uKN,
                       label: block_c9uKN_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uKN: // global
           I64[Sp] = block_c9uKS_info;
           _s9tRB::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9tRB::I64;
           if (R1 & 7 != 0) goto u9uLe; else goto c9uKT;
       u9uLe: // global
           call _c9uKS(R1) args: 0, res: 0, upd: 0;
       c9uKT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uKS() //  [R1]
         { info_tbl: [(c9uKS,
                       label: block_c9uKS_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uKS: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uLb; else goto c9uLa;
       c9uLb: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uLa: // global
           (_s9tRH::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC9ZCbaseZCSystemziPosixziInternalsZCtcsetattr(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tRH::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.465883309 UTC

[section ""data" . System.Posix.Internals.c_tcsetattr_closure" {
     System.Posix.Internals.c_tcsetattr_closure:
         const System.Posix.Internals.c_tcsetattr_info;
 },
 System.Posix.Internals.c_tcsetattr_entry() //  [R2, R3, R4]
         { info_tbl: [(c9uLG,
                       label: System.Posix.Internals.c_tcsetattr_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uLG: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_tcsetattr1_r9peS_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.469411613 UTC

[section ""data" . c_waitpid1_r9peT_closure" {
     c_waitpid1_r9peT_closure:
         const c_waitpid1_r9peT_info;
 },
 c_waitpid1_r9peT_entry() //  [R2, R3, R4]
         { info_tbl: [(c9uLU,
                       label: c_waitpid1_r9peT_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uLU: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9uMf; else goto c9uMg;
       c9uMf: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = c_waitpid1_r9peT_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9uMg: // global
           I64[Sp - 24] = block_c9uLR_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9uMn; else goto c9uLS;
       u9uMn: // global
           call _c9uLR(R1) args: 0, res: 0, upd: 0;
       c9uLS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uLR() //  [R1]
         { info_tbl: [(c9uLR,
                       label: block_c9uLR_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uLR: // global
           I64[Sp] = block_c9uLX_info;
           _s9tRP::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tRP::I64;
           if (R1 & 7 != 0) goto u9uMm; else goto c9uLY;
       u9uMm: // global
           call _c9uLX(R1) args: 0, res: 0, upd: 0;
       c9uLY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uLX() //  [R1]
         { info_tbl: [(c9uLX,
                       label: block_c9uLX_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uLX: // global
           I64[Sp] = block_c9uM2_info;
           _s9tRR::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9tRR::I64;
           if (R1 & 7 != 0) goto u9uMo; else goto c9uM3;
       u9uMo: // global
           call _c9uM2(R1) args: 0, res: 0, upd: 0;
       c9uM3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uM2() //  [R1]
         { info_tbl: [(c9uM2,
                       label: block_c9uM2_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uM2: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uMl; else goto c9uMk;
       c9uMl: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uMk: // global
           (_s9tRX::I64) = call "ccall" arg hints:  [‘signed’, PtrHint,
                                                     ‘signed’]  result hints:  [‘signed’] waitpid(I64[Sp + 8], I64[Sp + 16], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tRX::I64));
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.479149425 UTC

[section ""data" . System.Posix.Internals.c_waitpid_closure" {
     System.Posix.Internals.c_waitpid_closure:
         const System.Posix.Internals.c_waitpid_info;
 },
 System.Posix.Internals.c_waitpid_entry() //  [R2, R3, R4]
         { info_tbl: [(c9uMQ,
                       label: System.Posix.Internals.c_waitpid_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uMQ: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call c_waitpid1_r9peT_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.482572819 UTC

[section ""data" . o_RDONLY1_r9peU_closure" {
     o_RDONLY1_r9peU_closure:
         const o_RDONLY1_r9peU_info;
         const 0;
         const 0;
         const 0;
 },
 o_RDONLY1_r9peU_entry() //  [R1]
         { info_tbl: [(c9uN6,
                       label: o_RDONLY1_r9peU_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uN6: // global
           _r9peU::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9uN9; else goto c9uNa;
       c9uNa: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uNc; else goto c9uNb;
       c9uNc: // global
           HpAlloc = 16;
           goto c9uN9;
       c9uN9: // global
           R1 = _r9peU::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9uNb: // global
           (_c9uN0::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peU::P64);
           if (_c9uN0::I64 == 0) goto c9uN2; else goto c9uN1;
       c9uN2: // global
           call (I64[I64[_r9peU::P64]])() args: 8, res: 0, upd: 8;
       c9uN1: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9uN0::I64;
           (_s9tS3::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_rdonly();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tS3::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.487243886 UTC

[section ""data" . System.Posix.Internals.o_RDONLY_closure" {
     System.Posix.Internals.o_RDONLY_closure:
         const stg_IND_STATIC_info;
         const o_RDONLY1_r9peU_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.489091508 UTC

[section ""data" . o_WRONLY1_r9peV_closure" {
     o_WRONLY1_r9peV_closure:
         const o_WRONLY1_r9peV_info;
         const 0;
         const 0;
         const 0;
 },
 o_WRONLY1_r9peV_entry() //  [R1]
         { info_tbl: [(c9uNy,
                       label: o_WRONLY1_r9peV_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uNy: // global
           _r9peV::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9uNB; else goto c9uNC;
       c9uNC: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uNE; else goto c9uND;
       c9uNE: // global
           HpAlloc = 16;
           goto c9uNB;
       c9uNB: // global
           R1 = _r9peV::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9uND: // global
           (_c9uNs::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peV::P64);
           if (_c9uNs::I64 == 0) goto c9uNu; else goto c9uNt;
       c9uNu: // global
           call (I64[I64[_r9peV::P64]])() args: 8, res: 0, upd: 8;
       c9uNt: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9uNs::I64;
           (_s9tS8::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_wronly();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tS8::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.493546446 UTC

[section ""data" . System.Posix.Internals.o_WRONLY_closure" {
     System.Posix.Internals.o_WRONLY_closure:
         const stg_IND_STATIC_info;
         const o_WRONLY1_r9peV_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.495516354 UTC

[section ""data" . o_RDWR1_r9peW_closure" {
     o_RDWR1_r9peW_closure:
         const o_RDWR1_r9peW_info;
         const 0;
         const 0;
         const 0;
 },
 o_RDWR1_r9peW_entry() //  [R1]
         { info_tbl: [(c9uO0,
                       label: o_RDWR1_r9peW_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uO0: // global
           _r9peW::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9uO3; else goto c9uO4;
       c9uO4: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uO6; else goto c9uO5;
       c9uO6: // global
           HpAlloc = 16;
           goto c9uO3;
       c9uO3: // global
           R1 = _r9peW::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9uO5: // global
           (_c9uNU::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peW::P64);
           if (_c9uNU::I64 == 0) goto c9uNW; else goto c9uNV;
       c9uNW: // global
           call (I64[I64[_r9peW::P64]])() args: 8, res: 0, upd: 8;
       c9uNV: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9uNU::I64;
           (_s9tSd::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_rdwr();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tSd::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.499914215 UTC

[section ""data" . System.Posix.Internals.o_RDWR_closure" {
     System.Posix.Internals.o_RDWR_closure:
         const stg_IND_STATIC_info;
         const o_RDWR1_r9peW_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.501973653 UTC

[section ""data" . o_APPEND1_r9peX_closure" {
     o_APPEND1_r9peX_closure:
         const o_APPEND1_r9peX_info;
         const 0;
         const 0;
         const 0;
 },
 o_APPEND1_r9peX_entry() //  [R1]
         { info_tbl: [(c9uOs,
                       label: o_APPEND1_r9peX_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uOs: // global
           _r9peX::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9uOv; else goto c9uOw;
       c9uOw: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uOy; else goto c9uOx;
       c9uOy: // global
           HpAlloc = 16;
           goto c9uOv;
       c9uOv: // global
           R1 = _r9peX::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9uOx: // global
           (_c9uOm::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peX::P64);
           if (_c9uOm::I64 == 0) goto c9uOo; else goto c9uOn;
       c9uOo: // global
           call (I64[I64[_r9peX::P64]])() args: 8, res: 0, upd: 8;
       c9uOn: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9uOm::I64;
           (_s9tSi::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_append();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tSi::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.506042069 UTC

[section ""data" . System.Posix.Internals.o_APPEND_closure" {
     System.Posix.Internals.o_APPEND_closure:
         const stg_IND_STATIC_info;
         const o_APPEND1_r9peX_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.508266983 UTC

[section ""data" . o_CREAT1_r9peY_closure" {
     o_CREAT1_r9peY_closure:
         const o_CREAT1_r9peY_info;
         const 0;
         const 0;
         const 0;
 },
 o_CREAT1_r9peY_entry() //  [R1]
         { info_tbl: [(c9uOU,
                       label: o_CREAT1_r9peY_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uOU: // global
           _r9peY::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9uOX; else goto c9uOY;
       c9uOY: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uP0; else goto c9uOZ;
       c9uP0: // global
           HpAlloc = 16;
           goto c9uOX;
       c9uOX: // global
           R1 = _r9peY::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9uOZ: // global
           (_c9uOO::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peY::P64);
           if (_c9uOO::I64 == 0) goto c9uOQ; else goto c9uOP;
       c9uOQ: // global
           call (I64[I64[_r9peY::P64]])() args: 8, res: 0, upd: 8;
       c9uOP: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9uOO::I64;
           (_s9tSn::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_creat();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tSn::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.51228872 UTC

[section ""data" . System.Posix.Internals.o_CREAT_closure" {
     System.Posix.Internals.o_CREAT_closure:
         const stg_IND_STATIC_info;
         const o_CREAT1_r9peY_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.514142807 UTC

[section ""data" . o_EXCL1_r9peZ_closure" {
     o_EXCL1_r9peZ_closure:
         const o_EXCL1_r9peZ_info;
         const 0;
         const 0;
         const 0;
 },
 o_EXCL1_r9peZ_entry() //  [R1]
         { info_tbl: [(c9uPm,
                       label: o_EXCL1_r9peZ_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uPm: // global
           _r9peZ::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9uPp; else goto c9uPq;
       c9uPq: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uPs; else goto c9uPr;
       c9uPs: // global
           HpAlloc = 16;
           goto c9uPp;
       c9uPp: // global
           R1 = _r9peZ::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9uPr: // global
           (_c9uPg::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9peZ::P64);
           if (_c9uPg::I64 == 0) goto c9uPi; else goto c9uPh;
       c9uPi: // global
           call (I64[I64[_r9peZ::P64]])() args: 8, res: 0, upd: 8;
       c9uPh: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9uPg::I64;
           (_s9tSs::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_excl();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tSs::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.518874043 UTC

[section ""data" . System.Posix.Internals.o_EXCL_closure" {
     System.Posix.Internals.o_EXCL_closure:
         const stg_IND_STATIC_info;
         const o_EXCL1_r9peZ_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.520782711 UTC

[section ""data" . o_TRUNC1_r9pf0_closure" {
     o_TRUNC1_r9pf0_closure:
         const o_TRUNC1_r9pf0_info;
         const 0;
         const 0;
         const 0;
 },
 o_TRUNC1_r9pf0_entry() //  [R1]
         { info_tbl: [(c9uPO,
                       label: o_TRUNC1_r9pf0_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uPO: // global
           _r9pf0::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9uPR; else goto c9uPS;
       c9uPS: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uPU; else goto c9uPT;
       c9uPU: // global
           HpAlloc = 16;
           goto c9uPR;
       c9uPR: // global
           R1 = _r9pf0::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9uPT: // global
           (_c9uPI::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pf0::P64);
           if (_c9uPI::I64 == 0) goto c9uPK; else goto c9uPJ;
       c9uPK: // global
           call (I64[I64[_r9pf0::P64]])() args: 8, res: 0, upd: 8;
       c9uPJ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9uPI::I64;
           (_s9tSx::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_trunc();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tSx::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.525043373 UTC

[section ""data" . System.Posix.Internals.o_TRUNC_closure" {
     System.Posix.Internals.o_TRUNC_closure:
         const stg_IND_STATIC_info;
         const o_TRUNC1_r9pf0_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.527008595 UTC

[section ""data" . o_NOCTTY1_r9pf1_closure" {
     o_NOCTTY1_r9pf1_closure:
         const o_NOCTTY1_r9pf1_info;
         const 0;
         const 0;
         const 0;
 },
 o_NOCTTY1_r9pf1_entry() //  [R1]
         { info_tbl: [(c9uQg,
                       label: o_NOCTTY1_r9pf1_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uQg: // global
           _r9pf1::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9uQj; else goto c9uQk;
       c9uQk: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uQm; else goto c9uQl;
       c9uQm: // global
           HpAlloc = 16;
           goto c9uQj;
       c9uQj: // global
           R1 = _r9pf1::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9uQl: // global
           (_c9uQa::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pf1::P64);
           if (_c9uQa::I64 == 0) goto c9uQc; else goto c9uQb;
       c9uQc: // global
           call (I64[I64[_r9pf1::P64]])() args: 8, res: 0, upd: 8;
       c9uQb: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9uQa::I64;
           (_s9tSC::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_noctty();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tSC::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.531388616 UTC

[section ""data" . System.Posix.Internals.o_NOCTTY_closure" {
     System.Posix.Internals.o_NOCTTY_closure:
         const stg_IND_STATIC_info;
         const o_NOCTTY1_r9pf1_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.533281279 UTC

[section ""data" . o_NONBLOCK1_r9pf2_closure" {
     o_NONBLOCK1_r9pf2_closure:
         const o_NONBLOCK1_r9pf2_info;
         const 0;
         const 0;
         const 0;
 },
 o_NONBLOCK1_r9pf2_entry() //  [R1]
         { info_tbl: [(c9uQI,
                       label: o_NONBLOCK1_r9pf2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uQI: // global
           _r9pf2::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9uQL; else goto c9uQM;
       c9uQM: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uQO; else goto c9uQN;
       c9uQO: // global
           HpAlloc = 16;
           goto c9uQL;
       c9uQL: // global
           R1 = _r9pf2::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9uQN: // global
           (_c9uQC::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pf2::P64);
           if (_c9uQC::I64 == 0) goto c9uQE; else goto c9uQD;
       c9uQE: // global
           call (I64[I64[_r9pf2::P64]])() args: 8, res: 0, upd: 8;
       c9uQD: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9uQC::I64;
           (_s9tSH::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_nonblock();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tSH::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.53747441 UTC

[section ""data" . System.Posix.Internals.o_NONBLOCK_closure" {
     System.Posix.Internals.o_NONBLOCK_closure:
         const stg_IND_STATIC_info;
         const o_NONBLOCK1_r9pf2_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.539717428 UTC

[section ""data" . o_BINARY1_r9pf3_closure" {
     o_BINARY1_r9pf3_closure:
         const o_BINARY1_r9pf3_info;
         const 0;
         const 0;
         const 0;
 },
 o_BINARY1_r9pf3_entry() //  [R1]
         { info_tbl: [(c9uRa,
                       label: o_BINARY1_r9pf3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uRa: // global
           _r9pf3::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9uRd; else goto c9uRe;
       c9uRe: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uRg; else goto c9uRf;
       c9uRg: // global
           HpAlloc = 16;
           goto c9uRd;
       c9uRd: // global
           R1 = _r9pf3::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9uRf: // global
           (_c9uR4::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pf3::P64);
           if (_c9uR4::I64 == 0) goto c9uR6; else goto c9uR5;
       c9uR6: // global
           call (I64[I64[_r9pf3::P64]])() args: 8, res: 0, upd: 8;
       c9uR5: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9uR4::I64;
           (_s9tSM::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_binary();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tSM::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.544230101 UTC

[section ""data" . System.Posix.Internals.o_BINARY_closure" {
     System.Posix.Internals.o_BINARY_closure:
         const stg_IND_STATIC_info;
         const o_BINARY1_r9pf3_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.546299294 UTC

[section ""data" . c_s_isreg1_r9pf4_closure" {
     c_s_isreg1_r9pf4_closure:
         const c_s_isreg1_r9pf4_info;
 },
 c_s_isreg1_r9pf4_entry() //  [R2]
         { info_tbl: [(c9uRA,
                       label: c_s_isreg1_r9pf4_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uRA: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9uRJ; else goto c9uRK;
       c9uRJ: // global
           R2 = R2;
           R1 = c_s_isreg1_r9pf4_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9uRK: // global
           I64[Sp - 8] = block_c9uRx_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9uRO; else goto c9uRy;
       u9uRO: // global
           call _c9uRx(R1) args: 0, res: 0, upd: 0;
       c9uRy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uRx() //  [R1]
         { info_tbl: [(c9uRx,
                       label: block_c9uRx_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uRx: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uRN; else goto c9uRM;
       c9uRN: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uRM: // global
           (_s9tSU::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tSU::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.552296685 UTC

[section ""data" . System.Posix.Internals.c_s_isreg_closure" {
     System.Posix.Internals.c_s_isreg_closure:
         const System.Posix.Internals.c_s_isreg_info;
 },
 System.Posix.Internals.c_s_isreg_entry() //  [R2]
         { info_tbl: [(c9uS6,
                       label: System.Posix.Internals.c_s_isreg_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uS6: // global
           R2 = R2;
           call c_s_isreg1_r9pf4_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.555760414 UTC

[section ""data" . c_s_ischr1_r9pf5_closure" {
     c_s_ischr1_r9pf5_closure:
         const c_s_ischr1_r9pf5_info;
 },
 c_s_ischr1_r9pf5_entry() //  [R2]
         { info_tbl: [(c9uSk,
                       label: c_s_ischr1_r9pf5_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uSk: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9uSt; else goto c9uSu;
       c9uSt: // global
           R2 = R2;
           R1 = c_s_ischr1_r9pf5_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9uSu: // global
           I64[Sp - 8] = block_c9uSh_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9uSy; else goto c9uSi;
       u9uSy: // global
           call _c9uSh(R1) args: 0, res: 0, upd: 0;
       c9uSi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uSh() //  [R1]
         { info_tbl: [(c9uSh,
                       label: block_c9uSh_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uSh: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uSx; else goto c9uSw;
       c9uSx: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uSw: // global
           (_s9tT2::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC7ZCbaseZCSystemziPosixziInternalsZCSzuISCHR(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tT2::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.562257118 UTC

[section ""data" . System.Posix.Internals.c_s_ischr_closure" {
     System.Posix.Internals.c_s_ischr_closure:
         const System.Posix.Internals.c_s_ischr_info;
 },
 System.Posix.Internals.c_s_ischr_entry() //  [R2]
         { info_tbl: [(c9uSQ,
                       label: System.Posix.Internals.c_s_ischr_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uSQ: // global
           R2 = R2;
           call c_s_ischr1_r9pf5_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.565830222 UTC

[section ""data" . c_s_isblk1_r9pf6_closure" {
     c_s_isblk1_r9pf6_closure:
         const c_s_isblk1_r9pf6_info;
 },
 c_s_isblk1_r9pf6_entry() //  [R2]
         { info_tbl: [(c9uT4,
                       label: c_s_isblk1_r9pf6_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uT4: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9uTd; else goto c9uTe;
       c9uTd: // global
           R2 = R2;
           R1 = c_s_isblk1_r9pf6_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9uTe: // global
           I64[Sp - 8] = block_c9uT1_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9uTi; else goto c9uT2;
       u9uTi: // global
           call _c9uT1(R1) args: 0, res: 0, upd: 0;
       c9uT2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uT1() //  [R1]
         { info_tbl: [(c9uT1,
                       label: block_c9uT1_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uT1: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uTh; else goto c9uTg;
       c9uTh: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uTg: // global
           (_s9tTa::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC6ZCbaseZCSystemziPosixziInternalsZCSzuISBLK(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tTa::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.572363616 UTC

[section ""data" . System.Posix.Internals.c_s_isblk_closure" {
     System.Posix.Internals.c_s_isblk_closure:
         const System.Posix.Internals.c_s_isblk_info;
 },
 System.Posix.Internals.c_s_isblk_entry() //  [R2]
         { info_tbl: [(c9uTA,
                       label: System.Posix.Internals.c_s_isblk_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uTA: // global
           R2 = R2;
           call c_s_isblk1_r9pf6_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.575801756 UTC

[section ""data" . c_s_isdir1_r9pf7_closure" {
     c_s_isdir1_r9pf7_closure:
         const c_s_isdir1_r9pf7_info;
 },
 c_s_isdir1_r9pf7_entry() //  [R2]
         { info_tbl: [(c9uTO,
                       label: c_s_isdir1_r9pf7_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uTO: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9uTX; else goto c9uTY;
       c9uTX: // global
           R2 = R2;
           R1 = c_s_isdir1_r9pf7_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9uTY: // global
           I64[Sp - 8] = block_c9uTL_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9uU2; else goto c9uTM;
       u9uU2: // global
           call _c9uTL(R1) args: 0, res: 0, upd: 0;
       c9uTM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uTL() //  [R1]
         { info_tbl: [(c9uTL,
                       label: block_c9uTL_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uTL: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uU1; else goto c9uU0;
       c9uU1: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uU0: // global
           (_s9tTi::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC5ZCbaseZCSystemziPosixziInternalsZCSzuISDIR(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tTi::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.582170259 UTC

[section ""data" . System.Posix.Internals.c_s_isdir_closure" {
     System.Posix.Internals.c_s_isdir_closure:
         const System.Posix.Internals.c_s_isdir_info;
 },
 System.Posix.Internals.c_s_isdir_entry() //  [R2]
         { info_tbl: [(c9uUk,
                       label: System.Posix.Internals.c_s_isdir_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uUk: // global
           R2 = R2;
           call c_s_isdir1_r9pf7_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.585681865 UTC

[section ""data" . c_s_isfifo1_r9pf8_closure" {
     c_s_isfifo1_r9pf8_closure:
         const c_s_isfifo1_r9pf8_info;
 },
 c_s_isfifo1_r9pf8_entry() //  [R2]
         { info_tbl: [(c9uUy,
                       label: c_s_isfifo1_r9pf8_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uUy: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9uUH; else goto c9uUI;
       c9uUH: // global
           R2 = R2;
           R1 = c_s_isfifo1_r9pf8_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9uUI: // global
           I64[Sp - 8] = block_c9uUv_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9uUM; else goto c9uUw;
       u9uUM: // global
           call _c9uUv(R1) args: 0, res: 0, upd: 0;
       c9uUw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uUv() //  [R1]
         { info_tbl: [(c9uUv,
                       label: block_c9uUv_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uUv: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uUL; else goto c9uUK;
       c9uUL: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uUK: // global
           (_s9tTq::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC4ZCbaseZCSystemziPosixziInternalsZCSzuISFIFO(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tTq::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.5914648 UTC

[section ""data" . System.Posix.Internals.c_s_isfifo_closure" {
     System.Posix.Internals.c_s_isfifo_closure:
         const System.Posix.Internals.c_s_isfifo_info;
 },
 System.Posix.Internals.c_s_isfifo_entry() //  [R2]
         { info_tbl: [(c9uV4,
                       label: System.Posix.Internals.c_s_isfifo_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uV4: // global
           R2 = R2;
           call c_s_isfifo1_r9pf8_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.595106599 UTC

[section ""data" . System.Posix.Internals.sizeof_stat_closure" {
     System.Posix.Internals.sizeof_stat_closure:
         const System.Posix.Internals.sizeof_stat_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.sizeof_stat_entry() //  [R1]
         { info_tbl: [(c9uVj,
                       label: System.Posix.Internals.sizeof_stat_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uVj: // global
           _r9lgf::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9uVk; else goto c9uVl;
       c9uVl: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uVn; else goto c9uVm;
       c9uVn: // global
           HpAlloc = 16;
           goto c9uVk;
       c9uVk: // global
           R1 = _r9lgf::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9uVm: // global
           (_c9uVe::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9lgf::P64);
           if (_c9uVe::I64 == 0) goto c9uVg; else goto c9uVf;
       c9uVg: // global
           call (I64[I64[_r9lgf::P64]])() args: 8, res: 0, upd: 8;
       c9uVf: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9uVe::I64;
           (_s9tTv::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_stat();
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9tTv::I64;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.599838023 UTC

[section ""data" . st_mtime1_r9pf9_closure" {
     st_mtime1_r9pf9_closure:
         const st_mtime1_r9pf9_info;
 },
 st_mtime1_r9pf9_entry() //  [R2]
         { info_tbl: [(c9uVF,
                       label: st_mtime1_r9pf9_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uVF: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9uVL; else goto c9uVM;
       c9uVL: // global
           R2 = R2;
           R1 = st_mtime1_r9pf9_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9uVM: // global
           I64[Sp - 8] = block_c9uVC_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9uVQ; else goto c9uVD;
       u9uVQ: // global
           call _c9uVC(R1) args: 0, res: 0, upd: 0;
       c9uVD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uVC() //  [R1]
         { info_tbl: [(c9uVC,
                       label: block_c9uVC_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uVC: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uVP; else goto c9uVO;
       c9uVP: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uVO: // global
           (_s9tTD::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] __hscore_st_mtime(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9tTD::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.606136477 UTC

[section ""data" . System.Posix.Internals.st_mtime_closure" {
     System.Posix.Internals.st_mtime_closure:
         const System.Posix.Internals.st_mtime_info;
 },
 System.Posix.Internals.st_mtime_entry() //  [R2]
         { info_tbl: [(c9uW7,
                       label: System.Posix.Internals.st_mtime_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uW7: // global
           R2 = R2;
           call st_mtime1_r9pf9_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.609674495 UTC

[section ""data" . st_size1_r9pfa_closure" {
     st_size1_r9pfa_closure:
         const st_size1_r9pfa_info;
 },
 st_size1_r9pfa_entry() //  [R2]
         { info_tbl: [(c9uWl,
                       label: st_size1_r9pfa_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uWl: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9uWr; else goto c9uWs;
       c9uWr: // global
           R2 = R2;
           R1 = st_size1_r9pfa_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9uWs: // global
           I64[Sp - 8] = block_c9uWi_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9uWw; else goto c9uWj;
       u9uWw: // global
           call _c9uWi(R1) args: 0, res: 0, upd: 0;
       c9uWj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uWi() //  [R1]
         { info_tbl: [(c9uWi,
                       label: block_c9uWi_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uWi: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uWv; else goto c9uWu;
       c9uWv: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uWu: // global
           (_s9tTM::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] __hscore_st_size(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9tTM::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.615709789 UTC

[section ""data" . System.Posix.Internals.st_size_closure" {
     System.Posix.Internals.st_size_closure:
         const System.Posix.Internals.st_size_info;
 },
 System.Posix.Internals.st_size_entry() //  [R2]
         { info_tbl: [(c9uWN,
                       label: System.Posix.Internals.st_size_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uWN: // global
           R2 = R2;
           call st_size1_r9pfa_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.619316243 UTC

[section ""data" . st_mode1_r9pfb_closure" {
     st_mode1_r9pfb_closure:
         const st_mode1_r9pfb_info;
 },
 st_mode1_r9pfb_entry() //  [R2]
         { info_tbl: [(c9uX1,
                       label: st_mode1_r9pfb_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uX1: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9uXa; else goto c9uXb;
       c9uXa: // global
           R2 = R2;
           R1 = st_mode1_r9pfb_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9uXb: // global
           I64[Sp - 8] = block_c9uWY_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9uXf; else goto c9uWZ;
       u9uXf: // global
           call _c9uWY(R1) args: 0, res: 0, upd: 0;
       c9uWZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uWY() //  [R1]
         { info_tbl: [(c9uWY,
                       label: block_c9uWY_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uWY: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uXe; else goto c9uXd;
       c9uXe: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uXd: // global
           (_s9tTV::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_mode(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Word.W32#_con_info;
           I64[Hp] = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9tTV::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.625492232 UTC

[section ""data" . System.Posix.Internals.st_mode_closure" {
     System.Posix.Internals.st_mode_closure:
         const System.Posix.Internals.st_mode_info;
 },
 System.Posix.Internals.st_mode_entry() //  [R2]
         { info_tbl: [(c9uXx,
                       label: System.Posix.Internals.st_mode_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uXx: // global
           R2 = R2;
           call st_mode1_r9pfb_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.628829303 UTC

[section ""data" . st_dev1_r9pfc_closure" {
     st_dev1_r9pfc_closure:
         const st_dev1_r9pfc_info;
 },
 st_dev1_r9pfc_entry() //  [R2]
         { info_tbl: [(c9uXL,
                       label: st_dev1_r9pfc_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uXL: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9uXR; else goto c9uXS;
       c9uXR: // global
           R2 = R2;
           R1 = st_dev1_r9pfc_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9uXS: // global
           I64[Sp - 8] = block_c9uXI_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9uXW; else goto c9uXJ;
       u9uXW: // global
           call _c9uXI(R1) args: 0, res: 0, upd: 0;
       c9uXJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uXI() //  [R1]
         { info_tbl: [(c9uXI,
                       label: block_c9uXI_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uXI: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uXV; else goto c9uXU;
       c9uXV: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uXU: // global
           (_s9tU5::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Word.W64#_con_info;
           I64[Hp] = _s9tU5::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.635308633 UTC

[section ""data" . System.Posix.Internals.st_dev_closure" {
     System.Posix.Internals.st_dev_closure:
         const System.Posix.Internals.st_dev_info;
 },
 System.Posix.Internals.st_dev_entry() //  [R2]
         { info_tbl: [(c9uYd,
                       label: System.Posix.Internals.st_dev_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uYd: // global
           R2 = R2;
           call st_dev1_r9pfc_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.638675157 UTC

[section ""data" . st_ino1_r9pfd_closure" {
     st_ino1_r9pfd_closure:
         const st_ino1_r9pfd_info;
 },
 st_ino1_r9pfd_entry() //  [R2]
         { info_tbl: [(c9uYr,
                       label: st_ino1_r9pfd_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uYr: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9uYx; else goto c9uYy;
       c9uYx: // global
           R2 = R2;
           R1 = st_ino1_r9pfd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9uYy: // global
           I64[Sp - 8] = block_c9uYo_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9uYC; else goto c9uYp;
       u9uYC: // global
           call _c9uYo(R1) args: 0, res: 0, upd: 0;
       c9uYp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9uYo() //  [R1]
         { info_tbl: [(c9uYo,
                       label: block_c9uYo_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uYo: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uYB; else goto c9uYA;
       c9uYB: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9uYA: // global
           (_s9tUe::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Word.W64#_con_info;
           I64[Hp] = _s9tUe::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.644474923 UTC

[section ""data" . System.Posix.Internals.st_ino_closure" {
     System.Posix.Internals.st_ino_closure:
         const System.Posix.Internals.st_ino_info;
 },
 System.Posix.Internals.st_ino_entry() //  [R2]
         { info_tbl: [(c9uYT,
                       label: System.Posix.Internals.st_ino_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uYT: // global
           R2 = R2;
           call st_ino1_r9pfd_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.648481108 UTC

[section ""data" . const_echo1_r9pfe_closure" {
     const_echo1_r9pfe_closure:
         const const_echo1_r9pfe_info;
         const 0;
         const 0;
         const 0;
 },
 const_echo1_r9pfe_entry() //  [R1]
         { info_tbl: [(c9uZ9,
                       label: const_echo1_r9pfe_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uZ9: // global
           _r9pfe::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9uZc; else goto c9uZd;
       c9uZd: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uZf; else goto c9uZe;
       c9uZf: // global
           HpAlloc = 16;
           goto c9uZc;
       c9uZc: // global
           R1 = _r9pfe::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9uZe: // global
           (_c9uZ3::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfe::P64);
           if (_c9uZ3::I64 == 0) goto c9uZ5; else goto c9uZ4;
       c9uZ5: // global
           call (I64[I64[_r9pfe::P64]])() args: 8, res: 0, upd: 8;
       c9uZ4: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9uZ3::I64;
           (_s9tUj::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_echo();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tUj::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.652688066 UTC

[section ""data" . System.Posix.Internals.const_echo_closure" {
     System.Posix.Internals.const_echo_closure:
         const stg_IND_STATIC_info;
         const const_echo1_r9pfe_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.654731195 UTC

[section ""data" . const_tcsanow1_r9pff_closure" {
     const_tcsanow1_r9pff_closure:
         const const_tcsanow1_r9pff_info;
         const 0;
         const 0;
         const 0;
 },
 const_tcsanow1_r9pff_entry() //  [R1]
         { info_tbl: [(c9uZB,
                       label: const_tcsanow1_r9pff_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9uZB: // global
           _r9pff::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9uZE; else goto c9uZF;
       c9uZF: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9uZH; else goto c9uZG;
       c9uZH: // global
           HpAlloc = 16;
           goto c9uZE;
       c9uZE: // global
           R1 = _r9pff::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9uZG: // global
           (_c9uZv::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pff::P64);
           if (_c9uZv::I64 == 0) goto c9uZx; else goto c9uZw;
       c9uZx: // global
           call (I64[I64[_r9pff::P64]])() args: 8, res: 0, upd: 8;
       c9uZw: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9uZv::I64;
           (_s9tUo::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_tcsanow();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tUo::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.659572916 UTC

[section ""data" . System.Posix.Internals.const_tcsanow_closure" {
     System.Posix.Internals.const_tcsanow_closure:
         const stg_IND_STATIC_info;
         const const_tcsanow1_r9pff_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.66151012 UTC

[section ""data" . const_icanon1_r9pfg_closure" {
     const_icanon1_r9pfg_closure:
         const const_icanon1_r9pfg_info;
         const 0;
         const 0;
         const 0;
 },
 const_icanon1_r9pfg_entry() //  [R1]
         { info_tbl: [(c9v03,
                       label: const_icanon1_r9pfg_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v03: // global
           _r9pfg::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9v06; else goto c9v07;
       c9v07: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9v09; else goto c9v08;
       c9v09: // global
           HpAlloc = 16;
           goto c9v06;
       c9v06: // global
           R1 = _r9pfg::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9v08: // global
           (_c9uZX::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfg::P64);
           if (_c9uZX::I64 == 0) goto c9uZZ; else goto c9uZY;
       c9uZZ: // global
           call (I64[I64[_r9pfg::P64]])() args: 8, res: 0, upd: 8;
       c9uZY: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9uZX::I64;
           (_s9tUt::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_icanon();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tUt::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.666082818 UTC

[section ""data" . System.Posix.Internals.const_icanon_closure" {
     System.Posix.Internals.const_icanon_closure:
         const stg_IND_STATIC_info;
         const const_icanon1_r9pfg_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.668017705 UTC

[section ""data" . const_vmin1_r9pfh_closure" {
     const_vmin1_r9pfh_closure:
         const const_vmin1_r9pfh_info;
         const 0;
         const 0;
         const 0;
 },
 const_vmin1_r9pfh_entry() //  [R1]
         { info_tbl: [(c9v0v,
                       label: const_vmin1_r9pfh_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v0v: // global
           _r9pfh::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9v0y; else goto c9v0z;
       c9v0z: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9v0B; else goto c9v0A;
       c9v0B: // global
           HpAlloc = 16;
           goto c9v0y;
       c9v0y: // global
           R1 = _r9pfh::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9v0A: // global
           (_c9v0p::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfh::P64);
           if (_c9v0p::I64 == 0) goto c9v0r; else goto c9v0q;
       c9v0r: // global
           call (I64[I64[_r9pfh::P64]])() args: 8, res: 0, upd: 8;
       c9v0q: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9v0p::I64;
           (_s9tUy::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_vmin();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tUy::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.672175432 UTC

[section ""data" . System.Posix.Internals.const_vmin_closure" {
     System.Posix.Internals.const_vmin_closure:
         const stg_IND_STATIC_info;
         const const_vmin1_r9pfh_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.674348086 UTC

[section ""data" . const_vtime1_r9pfi_closure" {
     const_vtime1_r9pfi_closure:
         const const_vtime1_r9pfi_info;
         const 0;
         const 0;
         const 0;
 },
 const_vtime1_r9pfi_entry() //  [R1]
         { info_tbl: [(c9v0X,
                       label: const_vtime1_r9pfi_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v0X: // global
           _r9pfi::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9v10; else goto c9v11;
       c9v11: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9v13; else goto c9v12;
       c9v13: // global
           HpAlloc = 16;
           goto c9v10;
       c9v10: // global
           R1 = _r9pfi::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9v12: // global
           (_c9v0R::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfi::P64);
           if (_c9v0R::I64 == 0) goto c9v0T; else goto c9v0S;
       c9v0T: // global
           call (I64[I64[_r9pfi::P64]])() args: 8, res: 0, upd: 8;
       c9v0S: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9v0R::I64;
           (_s9tUD::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_vtime();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tUD::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.678855372 UTC

[section ""data" . System.Posix.Internals.const_vtime_closure" {
     System.Posix.Internals.const_vtime_closure:
         const stg_IND_STATIC_info;
         const const_vtime1_r9pfi_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.680727848 UTC

[section ""data" . const_sigttou1_r9pfj_closure" {
     const_sigttou1_r9pfj_closure:
         const const_sigttou1_r9pfj_info;
         const 0;
         const 0;
         const 0;
 },
 const_sigttou1_r9pfj_entry() //  [R1]
         { info_tbl: [(c9v1p,
                       label: const_sigttou1_r9pfj_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v1p: // global
           _r9pfj::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9v1s; else goto c9v1t;
       c9v1t: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9v1v; else goto c9v1u;
       c9v1v: // global
           HpAlloc = 16;
           goto c9v1s;
       c9v1s: // global
           R1 = _r9pfj::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9v1u: // global
           (_c9v1j::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfj::P64);
           if (_c9v1j::I64 == 0) goto c9v1l; else goto c9v1k;
       c9v1l: // global
           call (I64[I64[_r9pfj::P64]])() args: 8, res: 0, upd: 8;
       c9v1k: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9v1j::I64;
           (_s9tUI::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sigttou();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tUI::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.685178403 UTC

[section ""data" . System.Posix.Internals.const_sigttou_closure" {
     System.Posix.Internals.const_sigttou_closure:
         const stg_IND_STATIC_info;
         const const_sigttou1_r9pfj_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.687536557 UTC

[section ""data" . const_sig_block1_r9pfk_closure" {
     const_sig_block1_r9pfk_closure:
         const const_sig_block1_r9pfk_info;
         const 0;
         const 0;
         const 0;
 },
 const_sig_block1_r9pfk_entry() //  [R1]
         { info_tbl: [(c9v1R,
                       label: const_sig_block1_r9pfk_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v1R: // global
           _r9pfk::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9v1U; else goto c9v1V;
       c9v1V: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9v1X; else goto c9v1W;
       c9v1X: // global
           HpAlloc = 16;
           goto c9v1U;
       c9v1U: // global
           R1 = _r9pfk::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9v1W: // global
           (_c9v1L::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfk::P64);
           if (_c9v1L::I64 == 0) goto c9v1N; else goto c9v1M;
       c9v1N: // global
           call (I64[I64[_r9pfk::P64]])() args: 8, res: 0, upd: 8;
       c9v1M: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9v1L::I64;
           (_s9tUN::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sig_block();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tUN::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.69172233 UTC

[section ""data" . System.Posix.Internals.const_sig_block_closure" {
     System.Posix.Internals.const_sig_block_closure:
         const stg_IND_STATIC_info;
         const const_sig_block1_r9pfk_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.694050479 UTC

[section ""data" . const_sig_setmask1_r9pfl_closure" {
     const_sig_setmask1_r9pfl_closure:
         const const_sig_setmask1_r9pfl_info;
         const 0;
         const 0;
         const 0;
 },
 const_sig_setmask1_r9pfl_entry() //  [R1]
         { info_tbl: [(c9v2j,
                       label: const_sig_setmask1_r9pfl_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v2j: // global
           _r9pfl::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9v2m; else goto c9v2n;
       c9v2n: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9v2p; else goto c9v2o;
       c9v2p: // global
           HpAlloc = 16;
           goto c9v2m;
       c9v2m: // global
           R1 = _r9pfl::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9v2o: // global
           (_c9v2d::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfl::P64);
           if (_c9v2d::I64 == 0) goto c9v2f; else goto c9v2e;
       c9v2f: // global
           call (I64[I64[_r9pfl::P64]])() args: 8, res: 0, upd: 8;
       c9v2e: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9v2d::I64;
           (_s9tUS::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sig_setmask();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tUS::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.698621555 UTC

[section ""data" . System.Posix.Internals.const_sig_setmask_closure" {
     System.Posix.Internals.const_sig_setmask_closure:
         const stg_IND_STATIC_info;
         const const_sig_setmask1_r9pfl_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.700485674 UTC

[section ""data" . const_f_getfl1_r9pfm_closure" {
     const_f_getfl1_r9pfm_closure:
         const const_f_getfl1_r9pfm_info;
         const 0;
         const 0;
         const 0;
 },
 const_f_getfl1_r9pfm_entry() //  [R1]
         { info_tbl: [(c9v2L,
                       label: const_f_getfl1_r9pfm_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v2L: // global
           _r9pfm::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9v2O; else goto c9v2P;
       c9v2P: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9v2R; else goto c9v2Q;
       c9v2R: // global
           HpAlloc = 16;
           goto c9v2O;
       c9v2O: // global
           R1 = _r9pfm::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9v2Q: // global
           (_c9v2F::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfm::P64);
           if (_c9v2F::I64 == 0) goto c9v2H; else goto c9v2G;
       c9v2H: // global
           call (I64[I64[_r9pfm::P64]])() args: 8, res: 0, upd: 8;
       c9v2G: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9v2F::I64;
           (_s9tUX::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_getfl();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tUX::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.704707229 UTC

[section ""data" . System.Posix.Internals.const_f_getfl_closure" {
     System.Posix.Internals.const_f_getfl_closure:
         const stg_IND_STATIC_info;
         const const_f_getfl1_r9pfm_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.707212053 UTC

[section ""data" . const_f_setfl1_r9pfn_closure" {
     const_f_setfl1_r9pfn_closure:
         const const_f_setfl1_r9pfn_info;
         const 0;
         const 0;
         const 0;
 },
 const_f_setfl1_r9pfn_entry() //  [R1]
         { info_tbl: [(c9v3d,
                       label: const_f_setfl1_r9pfn_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v3d: // global
           _r9pfn::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9v3g; else goto c9v3h;
       c9v3h: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9v3j; else goto c9v3i;
       c9v3j: // global
           HpAlloc = 16;
           goto c9v3g;
       c9v3g: // global
           R1 = _r9pfn::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9v3i: // global
           (_c9v37::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfn::P64);
           if (_c9v37::I64 == 0) goto c9v39; else goto c9v38;
       c9v39: // global
           call (I64[I64[_r9pfn::P64]])() args: 8, res: 0, upd: 8;
       c9v38: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9v37::I64;
           (_s9tV2::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfl();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tV2::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.711307334 UTC

[section ""data" . System.Posix.Internals.const_f_setfl_closure" {
     System.Posix.Internals.const_f_setfl_closure:
         const stg_IND_STATIC_info;
         const const_f_setfl1_r9pfn_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.713269437 UTC

[section ""data" . const_f_setfd1_r9pfo_closure" {
     const_f_setfd1_r9pfo_closure:
         const const_f_setfd1_r9pfo_info;
         const 0;
         const 0;
         const 0;
 },
 const_f_setfd1_r9pfo_entry() //  [R1]
         { info_tbl: [(c9v3F,
                       label: const_f_setfd1_r9pfo_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v3F: // global
           _r9pfo::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9v3I; else goto c9v3J;
       c9v3J: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9v3L; else goto c9v3K;
       c9v3L: // global
           HpAlloc = 16;
           goto c9v3I;
       c9v3I: // global
           R1 = _r9pfo::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9v3K: // global
           (_c9v3z::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfo::P64);
           if (_c9v3z::I64 == 0) goto c9v3B; else goto c9v3A;
       c9v3B: // global
           call (I64[I64[_r9pfo::P64]])() args: 8, res: 0, upd: 8;
       c9v3A: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9v3z::I64;
           (_s9tV7::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfd();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tV7::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.718132061 UTC

[section ""data" . System.Posix.Internals.const_f_setfd_closure" {
     System.Posix.Internals.const_f_setfd_closure:
         const stg_IND_STATIC_info;
         const const_f_setfd1_r9pfo_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.720118494 UTC

[section ""data" . const_fd_cloexec1_r9pfp_closure" {
     const_fd_cloexec1_r9pfp_closure:
         const const_fd_cloexec1_r9pfp_info;
         const 0;
         const 0;
         const 0;
 },
 const_fd_cloexec1_r9pfp_entry() //  [R1]
         { info_tbl: [(c9v46,
                       label: const_fd_cloexec1_r9pfp_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v46: // global
           _r9pfp::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9v47; else goto c9v48;
       c9v48: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9v4a; else goto c9v49;
       c9v4a: // global
           HpAlloc = 16;
           goto c9v47;
       c9v47: // global
           R1 = _r9pfp::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9v49: // global
           (_c9v41::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfp::P64);
           if (_c9v41::I64 == 0) goto c9v43; else goto c9v42;
       c9v43: // global
           call (I64[I64[_r9pfp::P64]])() args: 8, res: 0, upd: 8;
       c9v42: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9v41::I64;
           (_s9tVc::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_fd_cloexec();
           I64[Hp - 8] = GHC.Int.I64#_con_info;
           I64[Hp] = _s9tVc::I64;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.724373119 UTC

[section ""data" . System.Posix.Internals.const_fd_cloexec_closure" {
     System.Posix.Internals.const_fd_cloexec_closure:
         const stg_IND_STATIC_info;
         const const_fd_cloexec1_r9pfp_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.726453887 UTC

[section ""data" . System.Posix.Internals.sizeof_termios_closure" {
     System.Posix.Internals.sizeof_termios_closure:
         const System.Posix.Internals.sizeof_termios_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.sizeof_termios_entry() //  [R1]
         { info_tbl: [(c9v4u,
                       label: System.Posix.Internals.sizeof_termios_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v4u: // global
           _r9lfX::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9v4v; else goto c9v4w;
       c9v4w: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9v4y; else goto c9v4x;
       c9v4y: // global
           HpAlloc = 16;
           goto c9v4v;
       c9v4v: // global
           R1 = _r9lfX::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9v4x: // global
           (_c9v4p::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9lfX::P64);
           if (_c9v4p::I64 == 0) goto c9v4r; else goto c9v4q;
       c9v4r: // global
           call (I64[I64[_r9lfX::P64]])() args: 8, res: 0, upd: 8;
       c9v4q: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9v4p::I64;
           (_s9tVg::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_termios();
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9tVg::I64;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.731646044 UTC

[section ""data" . System.Posix.Internals.sizeof_sigset_t_closure" {
     System.Posix.Internals.sizeof_sigset_t_closure:
         const System.Posix.Internals.sizeof_sigset_t_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.sizeof_sigset_t_entry() //  [R1]
         { info_tbl: [(c9v4R,
                       label: System.Posix.Internals.sizeof_sigset_t_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v4R: // global
           _r9lfW::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9v4S; else goto c9v4T;
       c9v4T: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9v4V; else goto c9v4U;
       c9v4V: // global
           HpAlloc = 16;
           goto c9v4S;
       c9v4S: // global
           R1 = _r9lfW::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9v4U: // global
           (_c9v4M::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9lfW::P64);
           if (_c9v4M::I64 == 0) goto c9v4O; else goto c9v4N;
       c9v4O: // global
           call (I64[I64[_r9lfW::P64]])() args: 8, res: 0, upd: 8;
       c9v4N: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9v4M::I64;
           (_s9tVk::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_sigset_t();
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9tVk::I64;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.736355075 UTC

[section ""data" . c_lflag1_r9pfq_closure" {
     c_lflag1_r9pfq_closure:
         const c_lflag1_r9pfq_info;
 },
 c_lflag1_r9pfq_entry() //  [R2]
         { info_tbl: [(c9v5d,
                       label: c_lflag1_r9pfq_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v5d: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9v5m; else goto c9v5n;
       c9v5m: // global
           R2 = R2;
           R1 = c_lflag1_r9pfq_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9v5n: // global
           I64[Sp - 8] = block_c9v5a_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9v5r; else goto c9v5b;
       u9v5r: // global
           call _c9v5a(R1) args: 0, res: 0, upd: 0;
       c9v5b: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9v5a() //  [R1]
         { info_tbl: [(c9v5a,
                       label: block_c9v5a_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v5a: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9v5q; else goto c9v5p;
       c9v5q: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9v5p: // global
           (_s9tVs::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_lflag(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Word.W32#_con_info;
           I64[Hp] = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9tVs::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.742587797 UTC

[section ""data" . System.Posix.Internals.c_lflag_closure" {
     System.Posix.Internals.c_lflag_closure:
         const System.Posix.Internals.c_lflag_info;
 },
 System.Posix.Internals.c_lflag_entry() //  [R2]
         { info_tbl: [(c9v5J,
                       label: System.Posix.Internals.c_lflag_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v5J: // global
           R2 = R2;
           call c_lflag1_r9pfq_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.746132025 UTC

[section ""data" . poke_c_lflag1_r9pfr_closure" {
     poke_c_lflag1_r9pfr_closure:
         const poke_c_lflag1_r9pfr_info;
 },
 poke_c_lflag1_r9pfr_entry() //  [R2, R3]
         { info_tbl: [(c9v5X,
                       label: poke_c_lflag1_r9pfr_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v5X: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9v61; else goto c9v62;
       c9v61: // global
           R3 = R3;
           R2 = R2;
           R1 = poke_c_lflag1_r9pfr_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9v62: // global
           I64[Sp - 16] = block_c9v5U_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9v6d; else goto c9v5V;
       u9v6d: // global
           call _c9v5U(R1) args: 0, res: 0, upd: 0;
       c9v5V: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9v5U() //  [R1]
         { info_tbl: [(c9v5U,
                       label: block_c9v5U_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v5U: // global
           I64[Sp] = block_c9v60_info;
           _s9tVz::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9tVz::I64;
           if (R1 & 7 != 0) goto u9v6c; else goto c9v64;
       u9v6c: // global
           call _c9v60(R1) args: 0, res: 0, upd: 0;
       c9v64: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9v60() //  [R1]
         { info_tbl: [(c9v60,
                       label: block_c9v60_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v60: // global
           call "ccall" arg hints:  [PtrHint,]  result hints:  [] __hscore_poke_lflag(I64[Sp + 8], I64[R1 + 7]);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.755162449 UTC

[section ""data" . System.Posix.Internals.poke_c_lflag_closure" {
     System.Posix.Internals.poke_c_lflag_closure:
         const System.Posix.Internals.poke_c_lflag_info;
 },
 System.Posix.Internals.poke_c_lflag_entry() //  [R2, R3]
         { info_tbl: [(c9v6z,
                       label: System.Posix.Internals.poke_c_lflag_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v6z: // global
           R3 = R3;
           R2 = R2;
           call poke_c_lflag1_r9pfr_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.759051962 UTC

[section ""data" . ptr_c_cc1_r9pfs_closure" {
     ptr_c_cc1_r9pfs_closure:
         const ptr_c_cc1_r9pfs_info;
 },
 ptr_c_cc1_r9pfs_entry() //  [R2]
         { info_tbl: [(c9v6N,
                       label: ptr_c_cc1_r9pfs_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v6N: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9v6T; else goto c9v6U;
       c9v6T: // global
           R2 = R2;
           R1 = ptr_c_cc1_r9pfs_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9v6U: // global
           I64[Sp - 8] = block_c9v6K_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9v6Y; else goto c9v6L;
       u9v6Y: // global
           call _c9v6K(R1) args: 0, res: 0, upd: 0;
       c9v6L: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9v6K() //  [R1]
         { info_tbl: [(c9v6K,
                       label: block_c9v6K_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v6K: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9v6X; else goto c9v6W;
       c9v6X: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9v6W: // global
           (_s9tVM::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] __hscore_ptr_c_cc(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = _s9tVM::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.7655648 UTC

[section ""data" . System.Posix.Internals.ptr_c_cc_closure" {
     System.Posix.Internals.ptr_c_cc_closure:
         const System.Posix.Internals.ptr_c_cc_info;
 },
 System.Posix.Internals.ptr_c_cc_entry() //  [R2]
         { info_tbl: [(c9v7f,
                       label: System.Posix.Internals.ptr_c_cc_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v7f: // global
           R2 = R2;
           call ptr_c_cc1_r9pfs_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.769028017 UTC

[section ""data" . c_s_issock1_r9pft_closure" {
     c_s_issock1_r9pft_closure:
         const c_s_issock1_r9pft_info;
 },
 c_s_issock1_r9pft_entry() //  [R2]
         { info_tbl: [(c9v7t,
                       label: c_s_issock1_r9pft_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v7t: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9v7C; else goto c9v7D;
       c9v7C: // global
           R2 = R2;
           R1 = c_s_issock1_r9pft_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9v7D: // global
           I64[Sp - 8] = block_c9v7q_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9v7H; else goto c9v7r;
       u9v7H: // global
           call _c9v7q(R1) args: 0, res: 0, upd: 0;
       c9v7r: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9v7q() //  [R1]
         { info_tbl: [(c9v7q,
                       label: block_c9v7q_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v7q: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9v7G; else goto c9v7F;
       c9v7G: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9v7F: // global
           (_s9tVU::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC3ZCbaseZCSystemziPosixziInternalsZCSzuISSOCK(I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tVU::I64));
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.775057762 UTC

[section ""data" . System.Posix.Internals.c_s_issock_closure" {
     System.Posix.Internals.c_s_issock_closure:
         const System.Posix.Internals.c_s_issock_info;
 },
 System.Posix.Internals.c_s_issock_entry() //  [R2]
         { info_tbl: [(c9v7Z,
                       label: System.Posix.Internals.c_s_issock_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v7Z: // global
           R2 = R2;
           call c_s_issock1_r9pft_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.778339688 UTC

[section ""data" . System.Posix.Internals.dEFAULT_BUFFER_SIZE_closure" {
     System.Posix.Internals.dEFAULT_BUFFER_SIZE_closure:
         const System.Posix.Internals.dEFAULT_BUFFER_SIZE_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.dEFAULT_BUFFER_SIZE_entry() //  [R1]
         { info_tbl: [(c9v8e,
                       label: System.Posix.Internals.dEFAULT_BUFFER_SIZE_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v8e: // global
           _r9lfR::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9v8f; else goto c9v8g;
       c9v8g: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9v8i; else goto c9v8h;
       c9v8i: // global
           HpAlloc = 16;
           goto c9v8f;
       c9v8f: // global
           R1 = _r9lfR::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9v8h: // global
           (_c9v89::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9lfR::P64);
           if (_c9v89::I64 == 0) goto c9v8b; else goto c9v8a;
       c9v8b: // global
           call (I64[I64[_r9lfR::P64]])() args: 8, res: 0, upd: 8;
       c9v8a: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9v89::I64;
           (_s9tVZ::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_bufsiz();
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9tVZ::I64;
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.783395581 UTC

[section ""data" . sEEK_CUR1_r9pfu_closure" {
     sEEK_CUR1_r9pfu_closure:
         const sEEK_CUR1_r9pfu_info;
         const 0;
         const 0;
         const 0;
 },
 sEEK_CUR1_r9pfu_entry() //  [R1]
         { info_tbl: [(c9v8C,
                       label: sEEK_CUR1_r9pfu_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v8C: // global
           _r9pfu::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9v8F; else goto c9v8G;
       c9v8G: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9v8I; else goto c9v8H;
       c9v8I: // global
           HpAlloc = 16;
           goto c9v8F;
       c9v8F: // global
           R1 = _r9pfu::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9v8H: // global
           (_c9v8w::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfu::P64);
           if (_c9v8w::I64 == 0) goto c9v8y; else goto c9v8x;
       c9v8y: // global
           call (I64[I64[_r9pfu::P64]])() args: 8, res: 0, upd: 8;
       c9v8x: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9v8w::I64;
           (_s9tW3::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC2ZCbaseZCSystemziPosixziInternalsZCSEEKzuCUR();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tW3::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.787641572 UTC

[section ""data" . System.Posix.Internals.sEEK_CUR_closure" {
     System.Posix.Internals.sEEK_CUR_closure:
         const stg_IND_STATIC_info;
         const sEEK_CUR1_r9pfu_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.789670261 UTC

[section ""data" . sEEK_SET1_r9pfv_closure" {
     sEEK_SET1_r9pfv_closure:
         const sEEK_SET1_r9pfv_info;
         const 0;
         const 0;
         const 0;
 },
 sEEK_SET1_r9pfv_entry() //  [R1]
         { info_tbl: [(c9v94,
                       label: sEEK_SET1_r9pfv_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v94: // global
           _r9pfv::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9v97; else goto c9v98;
       c9v98: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9v9a; else goto c9v99;
       c9v9a: // global
           HpAlloc = 16;
           goto c9v97;
       c9v97: // global
           R1 = _r9pfv::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9v99: // global
           (_c9v8Y::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfv::P64);
           if (_c9v8Y::I64 == 0) goto c9v90; else goto c9v8Z;
       c9v90: // global
           call (I64[I64[_r9pfv::P64]])() args: 8, res: 0, upd: 8;
       c9v8Z: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9v8Y::I64;
           (_s9tW8::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC1ZCbaseZCSystemziPosixziInternalsZCSEEKzuSET();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tW8::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.794710676 UTC

[section ""data" . System.Posix.Internals.sEEK_SET_closure" {
     System.Posix.Internals.sEEK_SET_closure:
         const stg_IND_STATIC_info;
         const sEEK_SET1_r9pfv_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.796674879 UTC

[section ""data" . sEEK_END1_r9pfw_closure" {
     sEEK_END1_r9pfw_closure:
         const sEEK_END1_r9pfw_info;
         const 0;
         const 0;
         const 0;
 },
 sEEK_END1_r9pfw_entry() //  [R1]
         { info_tbl: [(c9v9w,
                       label: sEEK_END1_r9pfw_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v9w: // global
           _r9pfw::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9v9z; else goto c9v9A;
       c9v9A: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9v9C; else goto c9v9B;
       c9v9C: // global
           HpAlloc = 16;
           goto c9v9z;
       c9v9z: // global
           R1 = _r9pfw::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9v9B: // global
           (_c9v9q::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pfw::P64);
           if (_c9v9q::I64 == 0) goto c9v9s; else goto c9v9r;
       c9v9s: // global
           call (I64[I64[_r9pfw::P64]])() args: 8, res: 0, upd: 8;
       c9v9r: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9v9q::I64;
           (_s9tWd::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC0ZCbaseZCSystemziPosixziInternalsZCSEEKzuEND();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9tWd::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.800965362 UTC

[section ""data" . System.Posix.Internals.sEEK_END_closure" {
     System.Posix.Internals.sEEK_END_closure:
         const stg_IND_STATIC_info;
         const sEEK_END1_r9pfw_closure;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.803308752 UTC

[section ""data" . System.Posix.Internals.withFilePath1_closure" {
     System.Posix.Internals.withFilePath1_closure:
         const System.Posix.Internals.withFilePath1_info;
         const 0;
 },
 System.Posix.Internals.withFilePath1_entry() //  [R2, R3]
         { info_tbl: [(c9v9V,
                       label: System.Posix.Internals.withFilePath1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v9V: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9v9W; else goto c9v9X;
       c9v9W: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Posix.Internals.withFilePath1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9v9X: // global
           I64[Sp - 24] = block_c9v9T_info;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9v9T() //  [R1]
         { info_tbl: [(c9v9T,
                       label: block_c9v9T_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9v9T: // global
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 24;
           call GHC.Foreign.charIsRepresentable3_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.808818286 UTC

[section ""data" . System.Posix.Internals.withFilePath_closure" {
     System.Posix.Internals.withFilePath_closure:
         const System.Posix.Internals.withFilePath_info;
         const 0;
 },
 System.Posix.Internals.withFilePath_entry() //  [R2, R3]
         { info_tbl: [(c9vad,
                       label: System.Posix.Internals.withFilePath_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vad: // global
           R3 = R3;
           R2 = R2;
           call System.Posix.Internals.withFilePath1_entry(R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.817620115 UTC

[section ""data" . System.Posix.Internals.peekFilePathLen1_closure" {
     System.Posix.Internals.peekFilePathLen1_closure:
         const System.Posix.Internals.peekFilePathLen1_info;
         const 0;
 },
 sat_s9tXC_entry() //  [R1]
         { info_tbl: [(c9vcB,
                       label: sat_s9tXC_info
                       rep:HeapRep 2 ptrs 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vcB: // global
           _s9tXC::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9vcC; else goto c9vcD;
       c9vcD: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9vcF; else goto c9vcE;
       c9vcF: // global
           HpAlloc = 40;
           goto c9vcC;
       c9vcC: // global
           R1 = _s9tXC::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9vcE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9tXC::P64;
           _s9tXr::P64 = P64[_s9tXC::P64 + 16];
           _s9tXz::P64 = P64[_s9tXC::P64 + 24];
           _s9tXv::I64 = I64[_s9tXC::P64 + 32];
           I64[Hp - 32] = GHC.Types.C#_con_info;
           I64[Hp - 24] = _s9tXv::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = _s9tXr::P64;
           R3 = _s9tXz::P64;
           R2 = Hp - 14;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9tXT_entry() //  [R1]
         { info_tbl: [(c9vcO,
                       label: sat_s9tXT_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vcO: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9vcP; else goto c9vcQ;
       c9vcP: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9vcQ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = P64[R1 + 16];
           R2 = GHC.Types.[]_closure+1;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 $wgo_s9tWT_entry() //  [R1, R2]
         { info_tbl: [(c9vcR,
                       label: $wgo_s9tWT_info
                       rep:HeapRep 2 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vcR: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c9vcS; else goto c9vcT;
       c9vcS: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vcT: // global
           I64[Sp - 32] = block_c9vbg_info;
           _s9tWT::P64 = R1;
           _s9tWS::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp - 24] = _s9tWS::P64;
           P64[Sp - 16] = _s9tWT::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9vet; else goto c9vbh;
       u9vet: // global
           call _c9vbg(R1) args: 0, res: 0, upd: 0;
       c9vbh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vbg() //  [R1]
         { info_tbl: [(c9vbg,
                       label: block_c9vbg_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vbg: // global
           _s9tWS::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9vbl_info;
           R3 = _s9tWS::P64;
           R2 = P64[Sp + 24];
           _s9tWY::P64 = P64[R1 + 15];
           R1 = P64[R1 + 7];
           P64[Sp + 24] = _s9tWY::P64;
           Sp = Sp + 8;
           call stg_ap_ppv_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vbl() //  [R1]
         { info_tbl: [(c9vbl,
                       label: block_c9vbl_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vbl: // global
           I64[Sp] = block_c9vbn_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u9vel; else goto c9vbo;
       u9vel: // global
           call _c9vbn(R1) args: 0, res: 0, upd: 0;
       c9vbo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vbn() //  [R1]
         { info_tbl: [(c9vbn,
                       label: block_c9vbn_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vbn: // global
           I64[Sp - 16] = block_c9vbs_info;
           _s9tX6::P64 = P64[R1 + 7];
           _s9tX8::P64 = P64[R1 + 23];
           R1 = P64[R1 + 15];
           P64[Sp - 8] = _s9tX8::P64;
           P64[Sp] = _s9tX6::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9vem; else goto c9vbt;
       u9vem: // global
           call _c9vbs(R1) args: 0, res: 0, upd: 0;
       c9vbt: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vbs() //  [R1]
         { info_tbl: [(c9vbs,
                       label: block_c9vbs_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vbs: // global
           if (I64[R1 + 39] == I64[R1 + 47]) goto c9vdO; else goto c9vdh;
       c9vdO: // global
           I64[Sp + 32] = block_c9vc0_info;
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           if (R1 & 7 != 0) goto u9veo; else goto c9vc1;
       u9veo: // global
           call _c9vc0(R1) args: 0, res: 0, upd: 0;
       c9vc1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9vdh: // global
           I64[Sp] = block_c9vcY_info;
           _s9tX9::P64 = R1;
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _s9tX9::P64;
           if (R1 & 7 != 0) goto u9ven; else goto c9vdi;
       u9ven: // global
           call _c9vcY(R1) args: 0, res: 0, upd: 0;
       c9vdi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vc0() //  [R1]
         { info_tbl: [(c9vc0,
                       label: block_c9vc0_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vc0: // global
           _s9tYh::P64 = P64[R1 + 7];
           _s9tYm::I64 = I64[R1 + 47] - I64[R1 + 39];
           if (%MO_S_Gt_W64(_s9tYm::I64, 0)) goto c9ve6; else goto c9ve7;
       c9ve6: // global
           P64[Sp - 24] = _s9tYh::P64;
           I64[Sp - 16] = _s9tYm::I64 - 1;
           P64[Sp - 8] = GHC.Types.[]_closure+1;
           I64[Sp] = I64[R1 + 23];
           Sp = Sp - 32;
           call _c9vci() args: 0, res: 0, upd: 0;
       c9ve7: // global
           call MO_Touch(_s9tYh::P64);
           R1 = GHC.Types.[]_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9vci() //  []
         { info_tbl: [(c9vci,
                       label: block_c9vci_info
                       rep:StackRep [False, True, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vci: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9ve1; else goto c9ve0;
       c9ve1: // global
           HpAlloc = 40;
           I64[Sp] = block_c9vci_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c9ve0: // global
           _s9tYz::P64 = P64[Sp + 24];
           _s9tYB::I64 = I64[Sp + 16];
           if (_s9tYB::I64 != 0) goto c9ve3; else goto c9ve4;
       c9ve3: // global
           I64[Hp - 32] = GHC.Types.C#_con_info;
           I64[Hp - 24] = %MO_UU_Conv_W32_W64(I32[I64[Sp + 32] + (_s9tYB::I64 << 2)]);
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = _s9tYz::P64;
           I64[Sp + 16] = _s9tYB::I64 - 1;
           P64[Sp + 24] = Hp - 14;
           call _c9vci() args: 0, res: 0, upd: 0;
       c9ve4: // global
           Hp = Hp - 40;
           P64[Sp + 24] = _s9tYz::P64;
           Sp = Sp + 8;
           call _c9vdR() args: 0, res: 0, upd: 0;
     }
 },
 _c9vdR() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vdR: // global
           Hp = Hp + 40;
           _s9tYp::P64 = P64[Sp + 16];
           if (Hp > HpLim) (likely: False) goto c9vdY; else goto c9vdX;
       c9vdY: // global
           HpAlloc = 40;
           I64[Sp - 8] = block_c9vdQ_info;
           R1 = _s9tYp::P64;
           Sp = Sp - 8;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9vdX: // global
           _s9tYt::I64 = %MO_UU_Conv_W32_W64(I32[I64[Sp + 24]]);
           call MO_Touch(P64[Sp]);
           I64[Hp - 32] = GHC.Types.C#_con_info;
           I64[Hp - 24] = _s9tYt::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = _s9tYp::P64;
           R1 = Hp - 14;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9vdQ() //  [R1]
         { info_tbl: [(c9vdQ,
                       label: block_c9vdQ_info
                       rep:StackRep [False, True, True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vdQ: // global
           P64[Sp + 24] = R1;
           Sp = Sp + 8;
           call _c9vdR() args: 0, res: 0, upd: 0;
     }
 },
 _c9vcY() //  [R1]
         { info_tbl: [(c9vcY,
                       label: block_c9vcY_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vcY: // global
           _s9tX8::P64 = P64[Sp + 8];
           if (R1 & 7 == 2) goto c9vdI; else goto c9vdw;
       c9vdI: // global
           I64[Sp + 8] = block_c9vdG_info;
           R1 = _s9tX8::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9veu; else goto c9vdJ;
       u9veu: // global
           call _c9vdG(R1) args: 0, res: 0, upd: 0;
       c9vdJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9vdw: // global
           _s9tX9::P64 = P64[Sp + 16];
           I64[Sp + 16] = block_c9vdm_info;
           R3 = _s9tX8::P64;
           R2 = _s9tX9::P64;
           R1 = P64[Sp + 32];
           Sp = Sp + 16;
           call stg_ap_ppv_fast(R3, R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vdG() //  [R1]
         { info_tbl: [(c9vdG,
                       label: block_c9vdG_info
                       rep:StackRep [False, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vdG: // global
           P64[Sp + 24] = P64[Sp + 8];
           I64[Sp + 8] = I64[R1 + 23];
           P64[Sp - 16] = P64[R1 + 7];
           I64[Sp - 8] = I64[R1 + 39];
           I64[Sp] = I64[R1 + 47];
           Sp = Sp - 16;
           call _s9tXh() args: 0, res: 0, upd: 0;
     }
 },
 _c9vdm() //  [R1]
         { info_tbl: [(c9vdm,
                       label: block_c9vdm_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vdm: // global
           I64[Sp] = block_c9vdo_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u9vev; else goto c9vdp;
       u9vev: // global
           call _c9vdo(R1) args: 0, res: 0, upd: 0;
       c9vdp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vdo() //  [R1]
         { info_tbl: [(c9vdo,
                       label: block_c9vdo_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vdo: // global
           I64[Sp] = block_c9vdt_info;
           _s9tXZ::P64 = P64[R1 + 7];
           R1 = P64[R1 + 15];
           P64[Sp + 16] = _s9tXZ::P64;
           if (R1 & 7 != 0) goto u9vew; else goto c9vdz;
       u9vew: // global
           call _c9vdt(R1) args: 0, res: 0, upd: 0;
       c9vdz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vdt() //  [R1]
         { info_tbl: [(c9vdt,
                       label: block_c9vdt_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vdt: // global
           P64[Sp - 24] = P64[R1 + 7];
           I64[Sp - 16] = I64[R1 + 39];
           I64[Sp - 8] = I64[R1 + 47];
           I64[Sp] = I64[R1 + 23];
           P64[Sp + 16] = P64[Sp + 16];
           Sp = Sp - 24;
           call _s9tXh() args: 0, res: 0, upd: 0;
     }
 },
 _s9tXh() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       s9tXh: // global
           _s9tXo::I64 = I64[Sp + 16] - I64[Sp + 8];
           if (%MO_S_Gt_W64(_s9tXo::I64, 0)) goto c9vdb; else goto c9vdc;
       c9vdb: // global
           P64[Sp + 8] = GHC.Types.[]_closure+1;
           I64[Sp + 16] = _s9tXo::I64 - 1;
           Sp = Sp - 8;
           call _c9vbS() args: 0, res: 0, upd: 0;
       c9vdc: // global
           _s9tWT::P64 = P64[Sp + 32];
           _s9tXj::P64 = P64[Sp + 40];
           call MO_Touch(P64[Sp]);
           I64[Sp + 40] = block_c9vcI_info;
           R2 = _s9tXj::P64;
           R1 = _s9tWT::P64;
           Sp = Sp + 40;
           call $wgo_s9tWT_entry(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vbS() //  []
         { info_tbl: [(c9vbS,
                       label: block_c9vbS_info
                       rep:StackRep [False, False, True, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vbS: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9vd6; else goto c9vd5;
       c9vd6: // global
           HpAlloc = 40;
           I64[Sp] = block_c9vbS_info;
           call stg_gc_noregs() args: 8, res: 8, upd: 8;
       c9vd5: // global
           _s9tXk::I64 = I64[Sp + 32];
           _s9tXF::P64 = P64[Sp + 16];
           _s9tXH::I64 = I64[Sp + 24];
           if (_s9tXH::I64 != 0) goto c9vd8; else goto c9vd9;
       c9vd8: // global
           _s9tXK::I64 = %MO_UU_Conv_W32_W64(I32[_s9tXk::I64 + (_s9tXH::I64 << 2)]);
           I64[Hp - 32] = GHC.Types.C#_con_info;
           I64[Hp - 24] = _s9tXK::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 31;
           P64[Hp] = _s9tXF::P64;
           I64[Sp + 24] = _s9tXH::I64 - 1;
           P64[Sp + 16] = Hp - 14;
           call _c9vbS() args: 0, res: 0, upd: 0;
       c9vd9: // global
           Hp = Hp - 40;
           _s9tWT::P64 = P64[Sp + 40];
           _s9tXj::P64 = P64[Sp + 48];
           _s9tXv::I64 = %MO_UU_Conv_W32_W64(I32[_s9tXk::I64]);
           call MO_Touch(P64[Sp + 8]);
           I64[Sp + 32] = block_c9vct_info;
           R2 = _s9tXj::P64;
           R1 = _s9tWT::P64;
           I64[Sp + 40] = _s9tXv::I64;
           P64[Sp + 48] = _s9tXF::P64;
           Sp = Sp + 32;
           call $wgo_s9tWT_entry(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vct() //  [R1]
         { info_tbl: [(c9vct,
                       label: block_c9vct_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vct: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9vd3; else goto c9vd2;
       c9vd3: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9vd2: // global
           I64[Hp - 32] = sat_s9tXC_info;
           P64[Hp - 16] = P64[Sp + 16];
           P64[Hp - 8] = R1;
           I64[Hp] = I64[Sp + 8];
           R1 = Hp - 32;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9vcI() //  [R1]
         { info_tbl: [(c9vcI,
                       label: block_c9vcI_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vcI: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9vdf; else goto c9vde;
       c9vdf: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9vde: // global
           I64[Hp - 16] = sat_s9tXT_info;
           P64[Hp] = R1;
           R1 = Hp - 16;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9tYO_entry() //  [R1, R2]
         { info_tbl: [(c9veB,
                       label: sat_s9tYO_info
                       rep:HeapRep 2 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9veB: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c9veC; else goto c9veD;
       c9veC: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9veD: // global
           I64[Sp - 24] = block_c9vaF_info;
           _s9tWw::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp - 16] = _s9tWw::P64;
           P64[Sp - 8] = R2;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9veX; else goto c9vaG;
       u9veX: // global
           call _c9vaF(R1) args: 0, res: 0, upd: 0;
       c9vaG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vaF() //  [R1]
         { info_tbl: [(c9vaF,
                       label: block_c9vaF_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vaF: // global
           I64[Sp - 8] = block_c9vaK_info;
           _s9tWA::I64 = I64[R1 + 7];
           R1 = GHC.ForeignPtr.NoFinalizers_closure+1;
           I64[Sp] = _s9tWA::I64;
           Sp = Sp - 8;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vaK() //  [R1]
         { info_tbl: [(c9vaK,
                       label: block_c9vaK_info
                       rep:StackRep [True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vaK: // global
           I64[Sp] = block_c9vaM_info;
           _s9tWD::P64 = R1;
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _s9tWD::P64;
           if (R1 & 7 != 0) goto u9veW; else goto c9vaN;
       u9veW: // global
           call _c9vaM(R1) args: 0, res: 0, upd: 0;
       c9vaN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vaM() //  [R1]
         { info_tbl: [(c9vaM,
                       label: block_c9vaM_info
                       rep:StackRep [True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vaM: // global
           _s9tWF::I64 = I64[R1 + 7];
           if (%MO_S_Gt_W64(_s9tWF::I64, 1)) goto c9veU; else goto c9veV;
       c9veU: // global
           _s9tWH::I64 = _s9tWF::I64;
           goto s9tWG;
       c9veV: // global
           _s9tWH::I64 = 1;
           goto s9tWG;
       s9tWG: // global
           _s9tWI::I64 = _s9tWH::I64 << 2;
           if (%MO_S_Ge_W64(_s9tWI::I64, 0)) goto c9veL; else goto c9veQ;
       c9veL: // global
           I64[Sp - 24] = block_c9vb2_info;
           R1 = GHC.ForeignPtr.NoFinalizers_closure+1;
           I64[Sp - 16] = _s9tWH::I64;
           I64[Sp - 8] = _s9tWI::I64;
           I64[Sp] = _s9tWF::I64;
           Sp = Sp - 24;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
       c9veQ: // global
           R1 = GHC.ForeignPtr.mallocForeignPtrBytes2_closure;
           Sp = Sp + 32;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9vb2() //  [R1]
         { info_tbl: [(c9vb2,
                       label: block_c9vb2_info
                       rep:StackRep [True, True, True, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vb2: // global
           I64[Sp] = block_c9vb4_info;
           _s9tWM::P64 = R1;
           R1 = I64[Sp + 16];
           P64[Sp + 16] = _s9tWM::P64;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vb4() //  [R1]
         { info_tbl: [(c9vb4,
                       label: block_c9vb4_info
                       rep:StackRep [True, False, True, True, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vb4: // global
           Hp = Hp + 176;
           if (Hp > HpLim) (likely: False) goto c9veP; else goto c9veO;
       c9veP: // global
           HpAlloc = 176;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9veO: // global
           I64[Hp - 168] = GHC.ForeignPtr.MallocPtr_con_info;
           P64[Hp - 160] = R1;
           P64[Hp - 152] = P64[Sp + 16];
           I64[Hp - 144] = GHC.IO.Buffer.Buffer_con_info;
           P64[Hp - 136] = Hp - 166;
           P64[Hp - 128] = GHC.IO.Buffer.WriteBuffer_closure+2;
           P64[Hp - 120] = R1 + 16;
           I64[Hp - 112] = I64[Sp + 8];
           I64[Hp - 104] = 0;
           I64[Hp - 96] = 0;
           I64[Hp - 88] = $wgo_s9tWT_info;
           P64[Hp - 80] = P64[Sp + 48];
           P64[Hp - 72] = Hp - 143;
           I64[Hp - 64] = GHC.ForeignPtr.PlainForeignPtr_con_info;
           P64[Hp - 56] = P64[Sp + 40];
           I64[Hp - 48] = GHC.IO.Buffer.Buffer_con_info;
           P64[Hp - 40] = Hp - 63;
           P64[Hp - 32] = GHC.IO.Buffer.ReadBuffer_closure+1;
           I64[Hp - 24] = I64[Sp + 32];
           _s9tWF::I64 = I64[Sp + 24];
           I64[Hp - 16] = _s9tWF::I64;
           I64[Hp - 8] = 0;
           I64[Hp] = _s9tWF::I64;
           R2 = Hp - 47;
           R1 = Hp - 86;
           Sp = Sp + 56;
           call $wgo_s9tWT_entry(R2, R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.peekFilePathLen1_entry() //  [R2]
         { info_tbl: [(c9veY,
                       label: System.Posix.Internals.peekFilePathLen1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9veY: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9veZ; else goto c9vf0;
       c9veZ: // global
           R2 = R2;
           R1 = System.Posix.Internals.peekFilePathLen1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vf0: // global
           I64[Sp - 16] = block_c9vao_info;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vao() //  [R1]
         { info_tbl: [(c9vao,
                       label: block_c9vao_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vao: // global
           I64[Sp] = block_c9vaq_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u9vf6; else goto c9var;
       u9vf6: // global
           call _c9vaq(R1) args: 0, res: 0, upd: 0;
       c9var: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vaq() //  [R1]
         { info_tbl: [(c9vaq,
                       label: block_c9vaq_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vaq: // global
           I64[Sp] = block_c9vav_info;
           _s9tWs::P64 = P64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s9tWs::P64;
           if (R1 & 7 != 0) goto u9vf7; else goto c9vaw;
       u9vf7: // global
           call _c9vav(R1) args: 0, res: 0, upd: 0;
       c9vaw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vav() //  [R1]
         { info_tbl: [(c9vav,
                       label: block_c9vav_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vav: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9vf5; else goto c9vf4;
       c9vf5: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9vf4: // global
           _s9tWv::P64 = P64[R1 + 7];
           _s9tWw::P64 = P64[R1 + 15];
           I64[Hp - 16] = sat_s9tYO_info;
           P64[Hp - 8] = _s9tWv::P64;
           P64[Hp] = _s9tWw::P64;
           R4 = Hp - 14;
           R3 = GHC.IO.Encoding.Types.close_closure+1;
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.IO.bracket1_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.877680146 UTC

[section ""data" . System.Posix.Internals.peekFilePathLen_closure" {
     System.Posix.Internals.peekFilePathLen_closure:
         const System.Posix.Internals.peekFilePathLen_info;
         const 0;
 },
 System.Posix.Internals.peekFilePathLen_entry() //  [R2]
         { info_tbl: [(c9viv,
                       label: System.Posix.Internals.peekFilePathLen_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9viv: // global
           R2 = R2;
           call System.Posix.Internals.peekFilePathLen1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.881215229 UTC

[section ""data" . System.Posix.Internals.peekFilePath1_closure" {
     System.Posix.Internals.peekFilePath1_closure:
         const System.Posix.Internals.peekFilePath1_info;
         const 0;
 },
 System.Posix.Internals.peekFilePath1_entry() //  [R2]
         { info_tbl: [(c9viI,
                       label: System.Posix.Internals.peekFilePath1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9viI: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9viJ; else goto c9viK;
       c9viJ: // global
           R2 = R2;
           R1 = System.Posix.Internals.peekFilePath1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9viK: // global
           I64[Sp - 16] = block_c9viG_info;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9viG() //  [R1]
         { info_tbl: [(c9viG,
                       label: block_c9viG_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9viG: // global
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call GHC.Foreign.peekCString1_entry(R3,
                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.88683202 UTC

[section ""data" . System.Posix.Internals.peekFilePath_closure" {
     System.Posix.Internals.peekFilePath_closure:
         const System.Posix.Internals.peekFilePath_info;
         const 0;
 },
 System.Posix.Internals.peekFilePath_entry() //  [R2]
         { info_tbl: [(c9viZ,
                       label: System.Posix.Internals.peekFilePath_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9viZ: // global
           R2 = R2;
           call System.Posix.Internals.peekFilePath1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.890523276 UTC

[section ""data" . System.Posix.Internals.newFilePath1_closure" {
     System.Posix.Internals.newFilePath1_closure:
         const System.Posix.Internals.newFilePath1_info;
         const 0;
 },
 System.Posix.Internals.newFilePath1_entry() //  [R2]
         { info_tbl: [(c9vjc,
                       label: System.Posix.Internals.newFilePath1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vjc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9vjd; else goto c9vje;
       c9vjd: // global
           R2 = R2;
           R1 = System.Posix.Internals.newFilePath1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vje: // global
           I64[Sp - 16] = block_c9vja_info;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vja() //  [R1]
         { info_tbl: [(c9vja,
                       label: block_c9vja_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vja: // global
           R3 = P64[Sp + 8];
           R2 = R1;
           Sp = Sp + 16;
           call GHC.Foreign.newCString1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.89574171 UTC

[section ""data" . System.Posix.Internals.newFilePath_closure" {
     System.Posix.Internals.newFilePath_closure:
         const System.Posix.Internals.newFilePath_info;
         const 0;
 },
 System.Posix.Internals.newFilePath_entry() //  [R2]
         { info_tbl: [(c9vjt,
                       label: System.Posix.Internals.newFilePath_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vjt: // global
           R2 = R2;
           call System.Posix.Internals.newFilePath1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.899484606 UTC

[section ""cstring" . System.Posix.Internals.puts3_bytes" {
     System.Posix.Internals.puts3_bytes:
         I8[] [10]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.901217079 UTC

[section ""data" . System.Posix.Internals.puts2_closure" {
     System.Posix.Internals.puts2_closure:
         const System.Posix.Internals.puts2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.puts2_entry() //  [R1]
         { info_tbl: [(c9vjH,
                       label: System.Posix.Internals.puts2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vjH: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9vjI; else goto c9vjJ;
       c9vjI: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9vjJ: // global
           (_c9vjE::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9vjE::I64 == 0) goto c9vjG; else goto c9vjF;
       c9vjG: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9vjF: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9vjE::I64;
           R2 = System.Posix.Internals.puts3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.90589608 UTC

[section ""data" . System.Posix.Internals.puts1_closure" {
     System.Posix.Internals.puts1_closure:
         const System.Posix.Internals.puts1_info;
         const 0;
 },
 System.Posix.Internals.puts1_entry() //  [R2]
         { info_tbl: [(c9vjY,
                       label: System.Posix.Internals.puts1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vjY: // global
           if ((Sp + -48) < SpLim) (likely: False) goto c9vk2; else goto c9vk3;
       c9vk2: // global
           R2 = R2;
           R1 = System.Posix.Internals.puts1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vk3: // global
           I64[Sp - 8] = block_c9vjW_info;
           R3 = System.Posix.Internals.puts2_closure;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9vjW() //  [R1]
         { info_tbl: [(c9vjW,
                       label: block_c9vjW_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vjW: // global
           I64[Sp - 8] = block_c9vk1_info;
           R3 = 0;
           R2 = R1;
           P64[Sp] = R1;
           Sp = Sp - 8;
           call GHC.List.$wlenAcc_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9vk1() //  [R1]
         { info_tbl: [(c9vk1,
                       label: block_c9vk1_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vk1: // global
           I64[Sp - 8] = block_c9vk8_info;
           R2 = 1;
           _s9tZ2::I64 = R1;
           R1 = R1;
           I64[Sp] = _s9tZ2::I64;
           Sp = Sp - 8;
           call stg_newAlignedPinnedByteArray#(R2,
                                               R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vk8() //  [R1]
         { info_tbl: [(c9vk8,
                       label: block_c9vk8_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vk8: // global
           P64[Sp - 16] = P64[Sp + 16];
           I64[Sp - 8] = 0;
           P64[Sp] = R1 + 16;
           P64[Sp + 16] = R1;
           Sp = Sp - 16;
           call _c9vkn() args: 0, res: 0, upd: 0;
     }
 },
 _c9vkn() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vkn: // global
           _s9tZj::P64 = P64[Sp];
           I64[Sp] = block_c9vkq_info;
           R1 = _s9tZj::P64;
           if (R1 & 7 != 0) goto u9vl2; else goto c9vks;
       u9vl2: // global
           call _c9vkq(R1) args: 0, res: 0, upd: 0;
       c9vks: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vkq() //  [R1]
         { info_tbl: [(c9vkq,
                       label: block_c9vkq_info
                       rep:StackRep [True, True, True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vkq: // global
           if (R1 & 7 == 1) goto c9vky; else goto c9vkD;
       c9vky: // global
           _s9tZ8::P64 = P64[Sp + 32];
           (_s9tZg::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite(1, I64[Sp + 16], I64[Sp + 24]);
           call MO_Touch(_s9tZ8::P64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9vkD: // global
           I64[Sp - 8] = block_c9vkB_info;
           _s9tZo::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9tZo::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9vl3; else goto c9vkE;
       u9vl3: // global
           call _c9vkB(R1) args: 0, res: 0, upd: 0;
       c9vkE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vkB() //  [R1]
         { info_tbl: [(c9vkB,
                       label: block_c9vkB_info
                       rep:StackRep [False, True, True, True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vkB: // global
           _s9tZk::I64 = I64[Sp + 16];
           _s9tZo::P64 = P64[Sp + 8];
           I8[I64[Sp + 24] + _s9tZk::I64] = %MO_SS_Conv_W64_W8(I64[R1 + 7]);
           P64[Sp + 8] = _s9tZo::P64;
           I64[Sp + 16] = _s9tZk::I64 + 1;
           Sp = Sp + 8;
           call _c9vkn() args: 0, res: 0, upd: 0;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.920236817 UTC

[section ""data" . System.Posix.Internals.puts_closure" {
     System.Posix.Internals.puts_closure:
         const System.Posix.Internals.puts_info;
         const 0;
 },
 System.Posix.Internals.puts_entry() //  [R2]
         { info_tbl: [(c9vlL,
                       label: System.Posix.Internals.puts_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vlL: // global
           R2 = R2;
           call System.Posix.Internals.puts1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.923752336 UTC

[section ""data" . System.Posix.Internals.s_issock_closure" {
     System.Posix.Internals.s_issock_closure:
         const System.Posix.Internals.s_issock_info;
 },
 System.Posix.Internals.s_issock_entry() //  [R2]
         { info_tbl: [(c9vlZ,
                       label: System.Posix.Internals.s_issock_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vlZ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9vm0; else goto c9vm1;
       c9vm0: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_issock_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vm1: // global
           I64[Sp - 8] = block_c9vlW_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9vmm; else goto c9vlX;
       u9vmm: // global
           call _c9vlW(R1) args: 0, res: 0, upd: 0;
       c9vlX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vlW() //  [R1]
         { info_tbl: [(c9vlW,
                       label: block_c9vlW_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vlW: // global
           (_s9tZB::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC3ZCbaseZCSystemziPosixziInternalsZCSzuISSOCK(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9tZB::I64) == 0 :: W32) goto c9vmi; else goto c9vmc;
       c9vmi: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9vmc: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.929768957 UTC

[section ""data" . System.Posix.Internals.fdFileSize5_closure" {
     System.Posix.Internals.fdFileSize5_closure:
         const GHC.Int.I32#_con_info;
         const (-1);
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.93210231 UTC

[section ""data" . System.Posix.Internals.fdFileSize_pred_closure" {
     System.Posix.Internals.fdFileSize_pred_closure:
         const System.Posix.Internals.fdFileSize_pred_info;
 },
 System.Posix.Internals.fdFileSize_pred_entry() //  [R2]
         { info_tbl: [(c9vmJ,
                       label: System.Posix.Internals.fdFileSize_pred_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vmJ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9vmK; else goto c9vmL;
       c9vmK: // global
           R2 = R2;
           R1 = System.Posix.Internals.fdFileSize_pred_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vmL: // global
           I64[Sp - 8] = block_c9vmG_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9vmT; else goto c9vmH;
       u9vmT: // global
           call _c9vmG(R1) args: 0, res: 0, upd: 0;
       c9vmH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vmG() //  [R1]
         { info_tbl: [(c9vmG,
                       label: block_c9vmG_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vmG: // global
           if (I64[R1 + 7] == (-1)) goto c9vmS; else goto c9vmR;
       c9vmS: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9vmR: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.93790179 UTC

[section ""cstring" . lvl_r9pfx_bytes" {
     lvl_r9pfx_bytes:
         I8[] [115,105,103,112,114,111,99,109,97,115,107]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.939837847 UTC

[section ""data" . lvl1_r9pfy_closure" {
     lvl1_r9pfy_closure:
         const lvl1_r9pfy_info;
         const 0;
         const 0;
         const 0;
 },
 lvl1_r9pfy_entry() //  [R1]
         { info_tbl: [(c9vnf,
                       label: lvl1_r9pfy_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vnf: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9vng; else goto c9vnh;
       c9vng: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9vnh: // global
           (_c9vnc::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9vnc::I64 == 0) goto c9vne; else goto c9vnd;
       c9vne: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9vnd: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9vnc::I64;
           R2 = lvl_r9pfx_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.944116449 UTC

[section ""data" . lvl2_r9pfz_closure" {
     lvl2_r9pfz_closure:
         const lvl2_r9pfz_info;
         const 0;
 },
 lvl2_r9pfz_entry() //  [R2]
         { info_tbl: [(c9vnw,
                       label: lvl2_r9pfz_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vnw: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl1_r9pfy_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.947576375 UTC

[section ""cstring" . lvl3_r9pfA_bytes" {
     lvl3_r9pfA_bytes:
         I8[] [116,99,83,101,116,65,116,116,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.949522989 UTC

[section ""data" . lvl4_r9pfB_closure" {
     lvl4_r9pfB_closure:
         const lvl4_r9pfB_info;
         const 0;
         const 0;
         const 0;
 },
 lvl4_r9pfB_entry() //  [R1]
         { info_tbl: [(c9vnK,
                       label: lvl4_r9pfB_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vnK: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9vnL; else goto c9vnM;
       c9vnL: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9vnM: // global
           (_c9vnH::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9vnH::I64 == 0) goto c9vnJ; else goto c9vnI;
       c9vnJ: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9vnI: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9vnH::I64;
           R2 = lvl3_r9pfA_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.953846035 UTC

[section ""cstring" . lvl5_r9pfC_bytes" {
     lvl5_r9pfC_bytes:
         I8[] [115,105,103,97,100,100,115,101,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.955589714 UTC

[section ""data" . lvl6_r9pfD_closure" {
     lvl6_r9pfD_closure:
         const lvl6_r9pfD_info;
         const 0;
         const 0;
         const 0;
 },
 lvl6_r9pfD_entry() //  [R1]
         { info_tbl: [(c9vo2,
                       label: lvl6_r9pfD_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vo2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9vo3; else goto c9vo4;
       c9vo3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9vo4: // global
           (_c9vnZ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9vnZ::I64 == 0) goto c9vo1; else goto c9vo0;
       c9vo1: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9vo0: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9vnZ::I64;
           R2 = lvl5_r9pfC_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.959636565 UTC

[section ""data" . lvl7_r9pfE_closure" {
     lvl7_r9pfE_closure:
         const lvl7_r9pfE_info;
         const 0;
 },
 lvl7_r9pfE_entry() //  [R2]
         { info_tbl: [(c9voj,
                       label: lvl7_r9pfE_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9voj: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl6_r9pfD_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.963165053 UTC

[section ""cstring" . lvl8_r9pfF_bytes" {
     lvl8_r9pfF_bytes:
         I8[] [115,105,103,101,109,112,116,121,115,101,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.964983619 UTC

[section ""data" . lvl9_r9pfG_closure" {
     lvl9_r9pfG_closure:
         const lvl9_r9pfG_info;
         const 0;
         const 0;
         const 0;
 },
 lvl9_r9pfG_entry() //  [R1]
         { info_tbl: [(c9vox,
                       label: lvl9_r9pfG_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vox: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9voy; else goto c9voz;
       c9voy: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9voz: // global
           (_c9vou::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9vou::I64 == 0) goto c9vow; else goto c9vov;
       c9vow: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9vov: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9vou::I64;
           R2 = lvl8_r9pfF_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.969513053 UTC

[section ""data" . lvl10_r9pfH_closure" {
     lvl10_r9pfH_closure:
         const lvl10_r9pfH_info;
         const 0;
 },
 lvl10_r9pfH_entry() //  [R2]
         { info_tbl: [(c9voO,
                       label: lvl10_r9pfH_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9voO: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl9_r9pfG_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:37.975379906 UTC

[section ""data" . System.Posix.Internals.getEcho3_closure" {
     System.Posix.Internals.getEcho3_closure:
         const System.Posix.Internals.getEcho3_info;
         const 0;
 },
 sat_s9u0d_entry() //  [R1]
         { info_tbl: [(c9vpk,
                       label: sat_s9u0d_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vpk: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9vpq; else goto c9vpp;
       c9vpq: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9vpp: // global
           (_s9u0a::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC10ZCbaseZCSystemziPosixziInternalsZCtcgetattr(I64[R1 + 7], I64[R1 + 15]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u0a::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9u1g_entry() //  [R1]
         { info_tbl: [(c9vqt,
                       label: sat_s9u1g_info
                       rep:HeapRep 3 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vqt: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9vqG; else goto c9vqF;
       c9vqG: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9vqF: // global
           (_s9u1d::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC9ZCbaseZCSystemziPosixziInternalsZCtcsetattr(I64[R1 + 7], %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[R1 + 23])), I64[R1 + 15]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u1d::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.getEcho3_entry() //  [R2, R3]
         { info_tbl: [(c9vqH,
                       label: System.Posix.Internals.getEcho3_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vqH: // global
           if ((Sp + -72) < SpLim) (likely: False) goto c9vqI; else goto c9vqJ;
       c9vqI: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Posix.Internals.getEcho3_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9vqJ: // global
           _s9tZR::P64 = R3;
           (_s9tZW::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_termios();
           I64[Sp - 32] = block_c9vp0_info;
           R1 = _s9tZW::I64;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = _s9tZR::P64;
           I64[Sp - 8] = _s9tZW::I64;
           Sp = Sp - 32;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vp0() //  [R1]
         { info_tbl: [(c9vp0,
                       label: block_c9vp0_info
                       rep:StackRep [False, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vp0: // global
           I64[Sp] = block_c9vp2_info;
           _s9u02::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s9u02::P64;
           if (R1 & 7 != 0) goto u9vsy; else goto c9vp3;
       u9vsy: // global
           call _c9vp2(R1) args: 0, res: 0, upd: 0;
       c9vp3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vp2() //  [R1]
         { info_tbl: [(c9vp2,
                       label: block_c9vp2_info
                       rep:StackRep [False, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vp2: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9vqN; else goto c9vqM;
       c9vqN: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9vqM: // global
           _s9u04::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9u0d_info;
           I64[Hp - 8] = _s9u04::I64;
           _s9u05::I64 = P64[Sp + 8] + 16;
           I64[Hp] = _s9u05::I64;
           I64[Sp - 16] = block_c9vpr_info;
           R4 = Hp - 15;
           R3 = lvl4_r9pfB_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           I64[Sp - 8] = _s9u05::I64;
           I64[Sp] = _s9u04::I64;
           Sp = Sp - 16;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9vpr() //  []
         { info_tbl: [(c9vpr,
                       label: block_c9vpr_info
                       rep:StackRep [True, True, False, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vpr: // global
           _s9u04::I64 = I64[Sp + 16];
           if (%MO_S_Gt_W64(_s9u04::I64, 2)) goto s9u0h; else goto c9vsd;
       c9vsd: // global
           _s9tZW::I64 = I64[Sp + 40];
           _s9u05::I64 = I64[Sp + 8];
           (_s9u1V::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [PtrHint] __hscore_get_saved_termios(_s9u04::I64);
           if (_s9u1V::I64 != 0) goto s9u0h; else goto c9vsc;
       c9vsc: // global
           (_s9u21::I64) = call "ccall" arg hints:  []  result hints:  [PtrHint] malloc(_s9tZW::I64);
           if (_s9u21::I64 == 0) goto c9vsb; else goto c9vsa;
       c9vsb: // global
           R1 = Foreign.Marshal.Alloc.malloc1_closure;
           Sp = Sp + 48;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
       c9vsa: // global
           (_s9u27::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint,]  result hints:  [PtrHint] memcpy(_s9u21::I64, _s9u05::I64, _s9tZW::I64);
           call "ccall" arg hints:  [‘signed’,
                                     PtrHint]  result hints:  [] __hscore_set_saved_termios(_s9u04::I64, _s9u21::I64);
           goto s9u0h;
       s9u0h: // global
           (_s9u0m::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_sigset_t();
           I64[Sp] = block_c9vpz_info;
           R1 = _s9u0m::I64;
           I64[Sp + 40] = _s9u0m::I64;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vpz() //  [R1]
         { info_tbl: [(c9vpz,
                       label: block_c9vpz_info
                       rep:StackRep [True, True, False, False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vpz: // global
           I64[Sp] = block_c9vpB_info;
           _s9u0s::P64 = R1;
           R1 = I64[Sp + 40];
           P64[Sp + 40] = _s9u0s::P64;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vpB() //  [R1]
         { info_tbl: [(c9vpB,
                       label: block_c9vpB_info
                       rep:StackRep [True, True, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vpB: // global
           _s9u0z::I64 = P64[Sp + 40] + 16;
           (_s9u0D::I64) = call "capi" arg hints:  [PtrHint]  result hints:  [‘signed’] ghczuwrapperZC13ZCbaseZCSystemziPosixziInternalsZCsigemptyset(_s9u0z::I64);
           if (%MO_SS_Conv_W64_W32(_s9u0D::I64) == (-1) :: W32) goto c9vrK; else goto c9vqT;
       c9vrK: // global
           (_s9u1P::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _s9u1P::I64;
           Sp = Sp + 48;
           call lvl10_r9pfH_entry(R2) args: 8, res: 0, upd: 8;
       c9vqT: // global
           (_s9u0I::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sigttou();
           (_s9u0N::I64) = call "capi" arg hints:  [PtrHint,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC12ZCbaseZCSystemziPosixziInternalsZCsigaddset(_s9u0z::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u0I::I64)));
           if (%MO_SS_Conv_W64_W32(_s9u0N::I64) == (-1) :: W32) goto c9vrE; else goto c9vqW;
       c9vrE: // global
           (_s9u1K::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _s9u1K::I64;
           Sp = Sp + 48;
           call lvl7_r9pfE_entry(R2) args: 8, res: 0, upd: 8;
       c9vqW: // global
           (_s9u0S::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sig_block();
           _s9u0T::I64 = R1 + 16;
           (_s9u0Y::I64) = call "capi" arg hints:  [‘signed’, PtrHint,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC11ZCbaseZCSystemziPosixziInternalsZCsigprocmask(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u0S::I64)), _s9u0z::I64, _s9u0T::I64);
           _s9u0Z::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u0Y::I64));
           if (_s9u0Z::I64 == (-1)) goto c9vry; else goto u9vsw;
       c9vry: // global
           (_s9u1F::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _s9u1F::I64;
           Sp = Sp + 48;
           call lvl2_r9pfz_entry(R2) args: 8, res: 0, upd: 8;
       u9vsw: // global
           I64[Sp - 16] = _s9u0T::I64;
           I64[Sp - 8] = _s9u0Z::I64;
           P64[Sp] = R1;
           Sp = Sp - 16;
           call _c9vqg() args: 0, res: 0, upd: 0;
     }
 },
 _c9vqg() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vqg: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9vr3; else goto c9vr2;
       c9vr3: // global
           HpAlloc = 16;
           I64[Sp - 8] = block_c9vqf_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9vr2: // global
           I64[Hp - 8] = GHC.Ptr.Ptr_con_info;
           I64[Hp] = I64[Sp + 24];
           I64[Sp - 8] = block_c9vqj_info;
           R2 = Hp - 7;
           R1 = P64[Sp + 48];
           Sp = Sp - 8;
           call stg_ap_pv_fast(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vqf() //  [R1]
         { info_tbl: [(c9vqf,
                       label: block_c9vqf_info
                       rep:StackRep [True, True, False, True, True, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vqf: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _c9vqg() args: 0, res: 0, upd: 0;
     }
 },
 _c9vqj() //  [R1]
         { info_tbl: [(c9vqj,
                       label: block_c9vqj_info
                       rep:StackRep [True, True, False, True, True, False, True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vqj: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9vr6; else goto c9vr5;
       c9vr6: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9vr5: // global
           _s9u04::I64 = I64[Sp + 40];
           _s9u05::I64 = I64[Sp + 32];
           (_s9u17::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_tcsanow();
           I64[Hp - 24] = sat_s9u1g_info;
           I64[Hp - 16] = _s9u04::I64;
           I64[Hp - 8] = _s9u05::I64;
           I64[Hp] = _s9u17::I64;
           I64[Sp] = block_c9vqY_info;
           R4 = Hp - 23;
           R3 = lvl4_r9pfB_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           P64[Sp + 56] = R1;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9vqY() //  []
         { info_tbl: [(c9vqY,
                       label: block_c9vqY_info
                       rep:StackRep [True, True, False, True, True, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vqY: // global
           _s9u02::P64 = P64[Sp + 48];
           _s9u0s::P64 = P64[Sp + 64];
           _s9u0y::P64 = P64[Sp + 24];
           _s9u0T::I64 = I64[Sp + 8];
           _s9u13::P64 = P64[Sp + 56];
           (_s9u1n::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sig_setmask();
           (_s9u1s::I64) = call "capi" arg hints:  [‘signed’, PtrHint,
                                                    PtrHint]  result hints:  [‘signed’] ghczuwrapperZC11ZCbaseZCSystemziPosixziInternalsZCsigprocmask(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u1n::I64)), _s9u0T::I64, 0);
           if (%MO_SS_Conv_W64_W32(_s9u1s::I64) == (-1) :: W32) goto c9vrs; else goto c9vrm;
       c9vrs: // global
           (_s9u1A::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _s9u1A::I64;
           Sp = Sp + 72;
           call lvl2_r9pfz_entry(R2) args: 8, res: 0, upd: 8;
       c9vrm: // global
           call MO_Touch(_s9u0y::P64);
           call MO_Touch(_s9u0s::P64);
           call MO_Touch(_s9u02::P64);
           R1 = _s9u13::P64;
           Sp = Sp + 72;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.003787711 UTC

[section ""data" . System.Posix.Internals.tcSetAttr_closure" {
     System.Posix.Internals.tcSetAttr_closure:
         const System.Posix.Internals.tcSetAttr_info;
         const 0;
 },
 System.Posix.Internals.tcSetAttr_entry() //  [R2, R3]
         { info_tbl: [(c9vtK,
                       label: System.Posix.Internals.tcSetAttr_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vtK: // global
           R3 = R3;
           R2 = R2;
           call System.Posix.Internals.getEcho3_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.007859582 UTC

[section ""data" . System.Posix.Internals.setCooked1_closure" {
     System.Posix.Internals.setCooked1_closure:
         const System.Posix.Internals.setCooked1_info;
         const 0;
 },
 sat_s9u35_entry() //  [R1, R2]
         { info_tbl: [(c9vu3,
                       label: sat_s9u35_info
                       rep:HeapRep 1 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vu3: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9vu4; else goto c9vu5;
       c9vu4: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vu5: // global
           I64[Sp - 16] = block_c9vu0_info;
           _s9u2d::P64 = P64[R1 + 6];
           R1 = R2;
           P64[Sp - 8] = _s9u2d::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9vvu; else goto c9vu1;
       u9vvu: // global
           call _c9vu0(R1) args: 0, res: 0, upd: 0;
       c9vu1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vu0() //  [R1]
         { info_tbl: [(c9vu0,
                       label: block_c9vu0_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vu0: // global
           _s9u2d::P64 = P64[Sp + 8];
           _s9u2i::I64 = I64[R1 + 7];
           (_s9u2m::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_lflag(_s9u2i::I64);
           I64[Sp - 16] = block_c9vuc_info;
           R1 = _s9u2d::P64;
           I64[Sp - 8] = _s9u2m::I64;
           I64[Sp] = _s9u2i::I64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9vvt; else goto c9vux;
       u9vvt: // global
           call _c9vuc(R1) args: 0, res: 0, upd: 0;
       c9vux: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vuc() //  [R1]
         { info_tbl: [(c9vuc,
                       label: block_c9vuc_info
                       rep:StackRep [True, True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vuc: // global
           _s9u2d::P64 = P64[Sp + 24];
           _s9u2i::I64 = I64[Sp + 16];
           _s9u2m::I64 = I64[Sp + 8];
           if (R1 & 7 == 1) goto c9vuD; else goto c9vuH;
       c9vuD: // global
           (_s9u2P::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_icanon();
           _s9u2o::I64 = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9u2m::I64)) & %MO_UU_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u2P::I64)) ^ 4294967295;
           goto s9u2n;
       c9vuH: // global
           (_s9u2Z::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_icanon();
           _s9u2o::I64 = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9u2m::I64)) | %MO_UU_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u2Z::I64));
           goto s9u2n;
       s9u2n: // global
           call "ccall" arg hints:  [PtrHint,]  result hints:  [] __hscore_poke_lflag(_s9u2i::I64, _s9u2o::I64);
           I64[Sp + 8] = block_c9vuk_info;
           R1 = _s9u2d::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9vvv; else goto c9vum;
       u9vvv: // global
           call _c9vuk(R1) args: 0, res: 0, upd: 0;
       c9vum: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vuk() //  [R1]
         { info_tbl: [(c9vuk,
                       label: block_c9vuk_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vuk: // global
           if (R1 & 7 == 1) goto c9vus; else goto c9vuw;
       c9vus: // global
           (_s9u2w::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] __hscore_ptr_c_cc(I64[Sp + 8]);
           (_s9u2A::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_vmin();
           I8[_s9u2w::I64 + %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u2A::I64))] = 1 :: W8;
           (_s9u2H::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_vtime();
           I8[_s9u2w::I64 + %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u2H::I64))] = 0 :: W8;
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9vuw: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.setCooked1_entry() //  [R2, R3]
         { info_tbl: [(c9vvw,
                       label: System.Posix.Internals.setCooked1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vvw: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9vvA; else goto c9vvz;
       c9vvA: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = System.Posix.Internals.setCooked1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9vvz: // global
           I64[Hp - 8] = sat_s9u35_info;
           P64[Hp] = R3;
           R3 = Hp - 6;
           R2 = R2;
           call System.Posix.Internals.getEcho3_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.021184836 UTC

[section ""data" . System.Posix.Internals.setCooked_closure" {
     System.Posix.Internals.setCooked_closure:
         const System.Posix.Internals.setCooked_info;
         const 0;
 },
 System.Posix.Internals.setCooked_entry() //  [R2, R3]
         { info_tbl: [(c9vwk,
                       label: System.Posix.Internals.setCooked_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vwk: // global
           R3 = R3;
           R2 = R2;
           call System.Posix.Internals.setCooked1_entry(R3,
                                                        R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.025675513 UTC

[section ""data" . System.Posix.Internals.getEcho2_closure" {
     System.Posix.Internals.getEcho2_closure:
         const System.Posix.Internals.getEcho2_info;
 },
 sat_s9u3n_entry() //  [R1]
         { info_tbl: [(c9vwJ,
                       label: sat_s9u3n_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vwJ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9vwK; else goto c9vxa;
       c9vwK: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9vxa: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9u3d::I64 = I64[R1 + 16];
           (_s9u3h::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_echo();
           if (%MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9u3d::I64)) & %MO_UU_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u3h::I64)) == 0) goto c9vx6; else goto c9vx0;
       c9vx6: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9vx0: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 System.Posix.Internals.getEcho2_entry() //  [R2]
         { info_tbl: [(c9vxb,
                       label: System.Posix.Internals.getEcho2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vxb: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9vxc; else goto c9vxd;
       c9vxc: // global
           R2 = R2;
           R1 = System.Posix.Internals.getEcho2_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vxd: // global
           I64[Sp - 8] = block_c9vwv_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9vxh; else goto c9vww;
       u9vxh: // global
           call _c9vwv(R1) args: 0, res: 0, upd: 0;
       c9vww: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vwv() //  [R1]
         { info_tbl: [(c9vwv,
                       label: block_c9vwv_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vwv: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9vxg; else goto c9vxf;
       c9vxg: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9vxf: // global
           (_s9u3d::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_lflag(I64[R1 + 7]);
           I64[Hp - 16] = sat_s9u3n_info;
           I64[Hp] = _s9u3d::I64;
           R1 = Hp - 16;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.034029865 UTC

[section ""data" . System.Posix.Internals.getEcho1_closure" {
     System.Posix.Internals.getEcho1_closure:
         const System.Posix.Internals.getEcho1_info;
         const 0;
 },
 System.Posix.Internals.getEcho1_entry() //  [R2]
         { info_tbl: [(c9vxK,
                       label: System.Posix.Internals.getEcho1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vxK: // global
           R3 = System.Posix.Internals.getEcho2_closure+2;
           R2 = R2;
           call System.Posix.Internals.getEcho3_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.037754634 UTC

[section ""data" . System.Posix.Internals.getEcho_closure" {
     System.Posix.Internals.getEcho_closure:
         const System.Posix.Internals.getEcho_info;
         const 0;
 },
 System.Posix.Internals.getEcho_entry() //  [R2]
         { info_tbl: [(c9vxV,
                       label: System.Posix.Internals.getEcho_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vxV: // global
           R2 = R2;
           call System.Posix.Internals.getEcho1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.041756948 UTC

[section ""data" . System.Posix.Internals.setEcho1_closure" {
     System.Posix.Internals.setEcho1_closure:
         const System.Posix.Internals.setEcho1_info;
         const 0;
 },
 sat_s9u41_entry() //  [R1, R2]
         { info_tbl: [(c9vye,
                       label: sat_s9u41_info
                       rep:HeapRep 1 ptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vye: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9vyf; else goto c9vyg;
       c9vyf: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vyg: // global
           I64[Sp - 16] = block_c9vyb_info;
           _s9u3r::P64 = P64[R1 + 6];
           R1 = R2;
           P64[Sp - 8] = _s9u3r::P64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9vzf; else goto c9vyc;
       u9vzf: // global
           call _c9vyb(R1) args: 0, res: 0, upd: 0;
       c9vyc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vyb() //  [R1]
         { info_tbl: [(c9vyb,
                       label: block_c9vyb_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vyb: // global
           _s9u3r::P64 = P64[Sp + 8];
           _s9u3w::I64 = I64[R1 + 7];
           (_s9u3A::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_lflag(_s9u3w::I64);
           I64[Sp - 8] = block_c9vyl_info;
           R1 = _s9u3r::P64;
           I64[Sp] = _s9u3A::I64;
           I64[Sp + 8] = _s9u3w::I64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9vze; else goto c9vyn;
       u9vze: // global
           call _c9vyl(R1) args: 0, res: 0, upd: 0;
       c9vyn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vyl() //  [R1]
         { info_tbl: [(c9vyl,
                       label: block_c9vyl_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vyl: // global
           _s9u3w::I64 = I64[Sp + 16];
           _s9u3A::I64 = I64[Sp + 8];
           if (R1 & 7 == 1) goto c9vyt; else goto c9vyx;
       c9vyt: // global
           (_s9u3F::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_echo();
           call "ccall" arg hints:  [PtrHint,]  result hints:  [] __hscore_poke_lflag(_s9u3w::I64, %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9u3A::I64)) & %MO_UU_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u3F::I64)) ^ 4294967295);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9vyx: // global
           (_s9u3S::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_echo();
           call "ccall" arg hints:  [PtrHint,]  result hints:  [] __hscore_poke_lflag(_s9u3w::I64, %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9u3A::I64)) | %MO_UU_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u3S::I64)));
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.setEcho1_entry() //  [R2, R3]
         { info_tbl: [(c9vzg,
                       label: System.Posix.Internals.setEcho1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vzg: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9vzk; else goto c9vzj;
       c9vzk: // global
           HpAlloc = 16;
           R3 = R3;
           R2 = R2;
           R1 = System.Posix.Internals.setEcho1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9vzj: // global
           I64[Hp - 8] = sat_s9u41_info;
           P64[Hp] = R3;
           R3 = Hp - 6;
           R2 = R2;
           call System.Posix.Internals.getEcho3_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.052903165 UTC

[section ""data" . System.Posix.Internals.setEcho_closure" {
     System.Posix.Internals.setEcho_closure:
         const System.Posix.Internals.setEcho_info;
         const 0;
 },
 System.Posix.Internals.setEcho_entry() //  [R2, R3]
         { info_tbl: [(c9vzW,
                       label: System.Posix.Internals.setEcho_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vzW: // global
           R3 = R3;
           R2 = R2;
           call System.Posix.Internals.setEcho1_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.056636518 UTC

[section ""data" . System.Posix.Internals.s_isfifo_closure" {
     System.Posix.Internals.s_isfifo_closure:
         const System.Posix.Internals.s_isfifo_info;
 },
 System.Posix.Internals.s_isfifo_entry() //  [R2]
         { info_tbl: [(c9vAa,
                       label: System.Posix.Internals.s_isfifo_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vAa: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9vAb; else goto c9vAc;
       c9vAb: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_isfifo_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vAc: // global
           I64[Sp - 8] = block_c9vA7_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9vAx; else goto c9vA8;
       u9vAx: // global
           call _c9vA7(R1) args: 0, res: 0, upd: 0;
       c9vA8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vA7() //  [R1]
         { info_tbl: [(c9vA7,
                       label: block_c9vA7_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vA7: // global
           (_s9u48::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC4ZCbaseZCSystemziPosixziInternalsZCSzuISFIFO(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9u48::I64) == 0 :: W32) goto c9vAt; else goto c9vAn;
       c9vAt: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9vAn: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.063003806 UTC

[section ""data" . System.Posix.Internals.s_isdir_closure" {
     System.Posix.Internals.s_isdir_closure:
         const System.Posix.Internals.s_isdir_info;
 },
 System.Posix.Internals.s_isdir_entry() //  [R2]
         { info_tbl: [(c9vAT,
                       label: System.Posix.Internals.s_isdir_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vAT: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9vAU; else goto c9vAV;
       c9vAU: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_isdir_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vAV: // global
           I64[Sp - 8] = block_c9vAQ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9vBg; else goto c9vAR;
       u9vBg: // global
           call _c9vAQ(R1) args: 0, res: 0, upd: 0;
       c9vAR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vAQ() //  [R1]
         { info_tbl: [(c9vAQ,
                       label: block_c9vAQ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vAQ: // global
           (_s9u4g::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC5ZCbaseZCSystemziPosixziInternalsZCSzuISDIR(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9u4g::I64) == 0 :: W32) goto c9vBc; else goto c9vB6;
       c9vBc: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9vB6: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.069275932 UTC

[section ""data" . System.Posix.Internals.s_isblk_closure" {
     System.Posix.Internals.s_isblk_closure:
         const System.Posix.Internals.s_isblk_info;
 },
 System.Posix.Internals.s_isblk_entry() //  [R2]
         { info_tbl: [(c9vBC,
                       label: System.Posix.Internals.s_isblk_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vBC: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9vBD; else goto c9vBE;
       c9vBD: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_isblk_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vBE: // global
           I64[Sp - 8] = block_c9vBz_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9vBZ; else goto c9vBA;
       u9vBZ: // global
           call _c9vBz(R1) args: 0, res: 0, upd: 0;
       c9vBA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vBz() //  [R1]
         { info_tbl: [(c9vBz,
                       label: block_c9vBz_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vBz: // global
           (_s9u4o::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC6ZCbaseZCSystemziPosixziInternalsZCSzuISBLK(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9u4o::I64) == 0 :: W32) goto c9vBV; else goto c9vBP;
       c9vBV: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9vBP: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.075171422 UTC

[section ""data" . System.Posix.Internals.s_ischr_closure" {
     System.Posix.Internals.s_ischr_closure:
         const System.Posix.Internals.s_ischr_info;
 },
 System.Posix.Internals.s_ischr_entry() //  [R2]
         { info_tbl: [(c9vCl,
                       label: System.Posix.Internals.s_ischr_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vCl: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9vCm; else goto c9vCn;
       c9vCm: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_ischr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vCn: // global
           I64[Sp - 8] = block_c9vCi_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9vCI; else goto c9vCj;
       u9vCI: // global
           call _c9vCi(R1) args: 0, res: 0, upd: 0;
       c9vCj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vCi() //  [R1]
         { info_tbl: [(c9vCi,
                       label: block_c9vCi_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vCi: // global
           (_s9u4w::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC7ZCbaseZCSystemziPosixziInternalsZCSzuISCHR(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9u4w::I64) == 0 :: W32) goto c9vCE; else goto c9vCy;
       c9vCE: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9vCy: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.081755417 UTC

[section ""data" . System.Posix.Internals.s_isreg_closure" {
     System.Posix.Internals.s_isreg_closure:
         const System.Posix.Internals.s_isreg_info;
 },
 System.Posix.Internals.s_isreg_entry() //  [R2]
         { info_tbl: [(c9vD4,
                       label: System.Posix.Internals.s_isreg_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vD4: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9vD5; else goto c9vD6;
       c9vD5: // global
           R2 = R2;
           R1 = System.Posix.Internals.s_isreg_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vD6: // global
           I64[Sp - 8] = block_c9vD1_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9vDr; else goto c9vD2;
       u9vDr: // global
           call _c9vD1(R1) args: 0, res: 0, upd: 0;
       c9vD2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vD1() //  [R1]
         { info_tbl: [(c9vD1,
                       label: block_c9vD1_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vD1: // global
           (_s9u4E::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG(I64[R1 + 7]);
           if (%MO_SS_Conv_W64_W32(_s9u4E::I64) == 0 :: W32) goto c9vDn; else goto c9vDh;
       c9vDn: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9vDh: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.087580568 UTC

[section ""data" . System.Posix.Internals.fdStat2_closure" {
     System.Posix.Internals.fdStat2_closure:
         const System.Posix.Internals.fdStat2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.fdStat2_entry() //  [R1]
         { info_tbl: [(c9vDM,
                       label: System.Posix.Internals.fdStat2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vDM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9vDN; else goto c9vDO;
       c9vDN: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9vDO: // global
           (_c9vDJ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9vDJ::I64 == 0) goto c9vDL; else goto c9vDK;
       c9vDL: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9vDK: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9vDJ::I64;
           R2 = System.Posix.Internals.ioe_unknownfiletype_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.092398625 UTC

[section ""data" . System.Posix.Internals.$wstatGetType_closure" {
     System.Posix.Internals.$wstatGetType_closure:
         const System.Posix.Internals.$wstatGetType_info;
         const 0;
 },
 System.Posix.Internals.$wstatGetType_entry() //  [R2]
         { info_tbl: [(c9vE5,
                       label: System.Posix.Internals.$wstatGetType_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vE5: // global
           (_s9u4L::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_mode(R2);
           _s9u4M::I64 = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9u4L::I64));
           (_s9u4Q::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC5ZCbaseZCSystemziPosixziInternalsZCSzuISDIR(_s9u4M::I64);
           if (%MO_SS_Conv_W64_W32(_s9u4Q::I64) == 0 :: W32) goto c9vEm; else goto c9vEg;
       c9vEm: // global
           (_s9u4V::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC4ZCbaseZCSystemziPosixziInternalsZCSzuISFIFO(_s9u4M::I64);
           if (%MO_SS_Conv_W64_W32(_s9u4V::I64) != 0 :: W32) goto c9vF5; else goto c9vED;
       c9vED: // global
           (_s9u50::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC3ZCbaseZCSystemziPosixziInternalsZCSzuISSOCK(_s9u4M::I64);
           if (%MO_SS_Conv_W64_W32(_s9u50::I64) != 0 :: W32) goto c9vF5; else goto c9vEU;
       c9vEU: // global
           (_s9u55::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC7ZCbaseZCSystemziPosixziInternalsZCSzuISCHR(_s9u4M::I64);
           if (%MO_SS_Conv_W64_W32(_s9u55::I64) != 0 :: W32) goto c9vF5; else goto c9vFb;
       c9vF5: // global
           R1 = GHC.IO.Device.Stream_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9vFb: // global
           (_s9u5a::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG(_s9u4M::I64);
           if (%MO_SS_Conv_W64_W32(_s9u5a::I64) == 0 :: W32) goto c9vFs; else goto c9vFm;
       c9vFs: // global
           (_s9u5f::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC6ZCbaseZCSystemziPosixziInternalsZCSzuISBLK(_s9u4M::I64);
           if (%MO_SS_Conv_W64_W32(_s9u5f::I64) == 0 :: W32) goto c9vFJ; else goto c9vFD;
       c9vFJ: // global
           R1 = System.Posix.Internals.fdStat2_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
       c9vFD: // global
           R1 = GHC.IO.Device.RawDevice_closure+4;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9vFm: // global
           R1 = GHC.IO.Device.RegularFile_closure+3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9vEg: // global
           R1 = GHC.IO.Device.Directory_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.098190582 UTC

[section ""data" . System.Posix.Internals.statGetType1_closure" {
     System.Posix.Internals.statGetType1_closure:
         const System.Posix.Internals.statGetType1_info;
         const 0;
 },
 System.Posix.Internals.statGetType1_entry() //  [R2]
         { info_tbl: [(c9vG6,
                       label: System.Posix.Internals.statGetType1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vG6: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9vG7; else goto c9vG8;
       c9vG7: // global
           R2 = R2;
           R1 = System.Posix.Internals.statGetType1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vG8: // global
           I64[Sp - 8] = block_c9vG3_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9vGc; else goto c9vG4;
       u9vGc: // global
           call _c9vG3(R1) args: 0, res: 0, upd: 0;
       c9vG4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vG3() //  [R1]
         { info_tbl: [(c9vG3,
                       label: block_c9vG3_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vG3: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call System.Posix.Internals.$wstatGetType_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.103803683 UTC

[section ""data" . System.Posix.Internals.statGetType_closure" {
     System.Posix.Internals.statGetType_closure:
         const System.Posix.Internals.statGetType_info;
         const 0;
 },
 System.Posix.Internals.statGetType_entry() //  [R2]
         { info_tbl: [(c9vGr,
                       label: System.Posix.Internals.statGetType_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vGr: // global
           R2 = R2;
           call System.Posix.Internals.statGetType1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.106958766 UTC

[section ""cstring" . lvl11_r9pfI_bytes" {
     lvl11_r9pfI_bytes:
         I8[] [115,101,116,67,108,111,115,101,79,110,69,120,101,99]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.108802125 UTC

[section ""data" . lvl12_r9pfJ_closure" {
     lvl12_r9pfJ_closure:
         const lvl12_r9pfJ_info;
         const 0;
         const 0;
         const 0;
 },
 lvl12_r9pfJ_entry() //  [R1]
         { info_tbl: [(c9vGF,
                       label: lvl12_r9pfJ_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vGF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9vGG; else goto c9vGH;
       c9vGG: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9vGH: // global
           (_c9vGC::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9vGC::I64 == 0) goto c9vGE; else goto c9vGD;
       c9vGE: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9vGD: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9vGC::I64;
           R2 = lvl11_r9pfI_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.11301414 UTC

[section ""data" . System.Posix.Internals.setCloseOnExec2_closure" {
     System.Posix.Internals.setCloseOnExec2_closure:
         const System.Posix.Internals.setCloseOnExec2_info;
         const 0;
 },
 System.Posix.Internals.setCloseOnExec2_entry() //  [R2]
         { info_tbl: [(c9vGW,
                       label: System.Posix.Internals.setCloseOnExec2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vGW: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl12_r9pfJ_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.117001774 UTC

[section ""data" . System.Posix.Internals.$wsetCloseOnExec_closure" {
     System.Posix.Internals.$wsetCloseOnExec_closure:
         const System.Posix.Internals.$wsetCloseOnExec_info;
         const 0;
 },
 System.Posix.Internals.$wsetCloseOnExec_entry() //  [R2]
         { info_tbl: [(c9vHb,
                       label: System.Posix.Internals.$wsetCloseOnExec_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vHb: // global
           (_s9u5t::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfd();
           (_s9u5x::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_fd_cloexec();
           (_s9u5C::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(R2, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u5t::I64)), _s9u5x::I64);
           if (%MO_SS_Conv_W64_W32(_s9u5C::I64) == (-1) :: W32) goto c9vHu; else goto c9vHo;
       c9vHu: // global
           (_s9u5H::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _s9u5H::I64;
           call System.Posix.Internals.setCloseOnExec2_entry(R2) args: 8, res: 0, upd: 8;
       c9vHo: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.121617459 UTC

[section ""data" . System.Posix.Internals.setCloseOnExec1_closure" {
     System.Posix.Internals.setCloseOnExec1_closure:
         const System.Posix.Internals.setCloseOnExec1_info;
         const 0;
 },
 System.Posix.Internals.setCloseOnExec1_entry() //  [R2]
         { info_tbl: [(c9vHO,
                       label: System.Posix.Internals.setCloseOnExec1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vHO: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9vHP; else goto c9vHQ;
       c9vHP: // global
           R2 = R2;
           R1 = System.Posix.Internals.setCloseOnExec1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vHQ: // global
           I64[Sp - 8] = block_c9vHL_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9vHU; else goto c9vHM;
       u9vHU: // global
           call _c9vHL(R1) args: 0, res: 0, upd: 0;
       c9vHM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vHL() //  [R1]
         { info_tbl: [(c9vHL,
                       label: block_c9vHL_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vHL: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call System.Posix.Internals.$wsetCloseOnExec_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.12684022 UTC

[section ""data" . System.Posix.Internals.setCloseOnExec_closure" {
     System.Posix.Internals.setCloseOnExec_closure:
         const System.Posix.Internals.setCloseOnExec_info;
         const 0;
 },
 System.Posix.Internals.setCloseOnExec_entry() //  [R2]
         { info_tbl: [(c9vI9,
                       label: System.Posix.Internals.setCloseOnExec_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vI9: // global
           R2 = R2;
           call System.Posix.Internals.setCloseOnExec1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.130773323 UTC

[section ""data" . System.Posix.Internals.setNonBlockingFD2_closure" {
     System.Posix.Internals.setNonBlockingFD2_closure:
         const System.Posix.Internals.setNonBlockingFD2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.setNonBlockingFD2_entry() //  [R1]
         { info_tbl: [(c9vIp,
                       label: System.Posix.Internals.setNonBlockingFD2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vIp: // global
           _r9pee::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9vIB; else goto c9vIC;
       c9vIC: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9vIE; else goto c9vID;
       c9vIE: // global
           HpAlloc = 16;
           goto c9vIB;
       c9vIB: // global
           R1 = _r9pee::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9vID: // global
           (_c9vIj::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, _r9pee::P64);
           if (_c9vIj::I64 == 0) goto c9vIl; else goto c9vIk;
       c9vIl: // global
           call (I64[I64[_r9pee::P64]])() args: 8, res: 0, upd: 8;
       c9vIk: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9vIj::I64;
           (_s9u5Q::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_nonblock();
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = ~%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u5Q::I64));
           R1 = Hp - 7;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.135364867 UTC

[section ""cstring" . System.Posix.Internals.setNonBlockingFD4_bytes" {
     System.Posix.Internals.setNonBlockingFD4_bytes:
         I8[] [115,101,116,78,111,110,66,108,111,99,107,105,110,103,70,68]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.13713217 UTC

[section ""data" . System.Posix.Internals.setNonBlockingFD3_closure" {
     System.Posix.Internals.setNonBlockingFD3_closure:
         const System.Posix.Internals.setNonBlockingFD3_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.setNonBlockingFD3_entry() //  [R1]
         { info_tbl: [(c9vIX,
                       label: System.Posix.Internals.setNonBlockingFD3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vIX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9vIY; else goto c9vIZ;
       c9vIY: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9vIZ: // global
           (_c9vIU::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9vIU::I64 == 0) goto c9vIW; else goto c9vIV;
       c9vIW: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9vIV: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9vIU::I64;
           R2 = System.Posix.Internals.setNonBlockingFD4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.143084527 UTC

[section ""data" . System.Posix.Internals.$wsetNonBlockingFD_closure" {
     System.Posix.Internals.$wsetNonBlockingFD_closure:
         const System.Posix.Internals.$wsetNonBlockingFD_info;
         const 0;
 },
 sat_s9u6a_entry() //  [R1]
         { info_tbl: [(c9vJk,
                       label: sat_s9u6a_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vJk: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9vJw; else goto c9vJv;
       c9vJw: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9vJv: // global
           (_s9u67::I64) = call "capi" arg hints:  [‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC17ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[R1 + 7], %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[R1 + 15])));
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u67::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.$wsetNonBlockingFD_entry() //  [R2, R3]
         { info_tbl: [(c9vJC,
                       label: System.Posix.Internals.$wsetNonBlockingFD_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vJC: // global
           _s9u5W::P64 = R3;
           _s9u5V::I64 = R2;
           if ((Sp + -24) < SpLim) (likely: False) goto c9vJD; else goto c9vJE;
       c9vJE: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9vJG; else goto c9vJF;
       c9vJG: // global
           HpAlloc = 24;
           goto c9vJD;
       c9vJD: // global
           R3 = _s9u5W::P64;
           R2 = _s9u5V::I64;
           R1 = System.Posix.Internals.$wsetNonBlockingFD_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9vJF: // global
           (_s9u61::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_getfl();
           I64[Hp - 16] = sat_s9u6a_info;
           I64[Hp - 8] = _s9u5V::I64;
           I64[Hp] = _s9u61::I64;
           I64[Sp - 24] = block_c9vJx_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.setNonBlockingFD3_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           I64[Sp - 16] = _s9u5V::I64;
           P64[Sp - 8] = _s9u5W::P64;
           Sp = Sp - 24;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9vJx() //  [R1]
         { info_tbl: [(c9vJx,
                       label: block_c9vJx_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vJx: // global
           I64[Sp] = block_c9vJz_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u9vL2; else goto c9vJA;
       u9vL2: // global
           call _c9vJz(R1) args: 0, res: 0, upd: 0;
       c9vJA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vJz() //  [R1]
         { info_tbl: [(c9vJz,
                       label: block_c9vJz_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vJz: // global
           I64[Sp] = block_c9vJK_info;
           _s9u6f::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _s9u6f::I64;
           if (R1 & 7 != 0) goto u9vL3; else goto c9vJM;
       u9vL3: // global
           call _c9vJK(R1) args: 0, res: 0, upd: 0;
       c9vJM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vJK() //  [R1]
         { info_tbl: [(c9vJK,
                       label: block_c9vJK_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vJK: // global
           if (R1 & 7 == 1) goto c9vJT; else goto c9vKE;
       c9vJT: // global
           I64[Sp] = block_c9vJQ_info;
           R1 = System.Posix.Internals.setNonBlockingFD2_closure;
           if (R1 & 7 != 0) goto u9vL4; else goto c9vJU;
       u9vL4: // global
           call _c9vJQ(R1) args: 0, res: 0, upd: 0;
       c9vJU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9vKE: // global
           _s9u5V::I64 = I64[Sp + 8];
           _s9u6f::I64 = I64[Sp + 16];
           (_s9u6A::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_nonblock();
           _s9u6B::I64 = _s9u6f::I64 | %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u6A::I64));
           if (_s9u6f::I64 == _s9u6B::I64) goto u9vL0; else goto c9vKD;
       u9vL0: // global
           Sp = Sp + 24;
           call _c9vKC() args: 0, res: 0, upd: 0;
       c9vKD: // global
           (_s9u6K::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfl();
           (_s9u6P::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(_s9u5V::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u6K::I64)), _s9u6B::I64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9vJQ() //  [R1]
         { info_tbl: [(c9vJQ,
                       label: block_c9vJQ_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vJQ: // global
           _s9u6f::I64 = I64[Sp + 16];
           _s9u6j::I64 = _s9u6f::I64 & I64[R1 + 7];
           if (_s9u6f::I64 == _s9u6j::I64) goto u9vL1; else goto c9vKf;
       u9vL1: // global
           Sp = Sp + 24;
           call _c9vKC() args: 0, res: 0, upd: 0;
       c9vKf: // global
           _s9u5V::I64 = I64[Sp + 8];
           (_s9u6r::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfl();
           (_s9u6w::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(_s9u5V::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u6r::I64)), _s9u6j::I64);
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9vKC() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vKC: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.159048401 UTC

[section ""data" . System.Posix.Internals.setNonBlockingFD1_closure" {
     System.Posix.Internals.setNonBlockingFD1_closure:
         const System.Posix.Internals.setNonBlockingFD1_info;
         const 0;
 },
 System.Posix.Internals.setNonBlockingFD1_entry() //  [R2, R3]
         { info_tbl: [(c9vM2,
                       label: System.Posix.Internals.setNonBlockingFD1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vM2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9vM3; else goto c9vM4;
       c9vM3: // global
           R3 = R3;
           R2 = R2;
           R1 = System.Posix.Internals.setNonBlockingFD1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9vM4: // global
           I64[Sp - 16] = block_c9vLZ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9vM8; else goto c9vM0;
       u9vM8: // global
           call _c9vLZ(R1) args: 0, res: 0, upd: 0;
       c9vM0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vLZ() //  [R1]
         { info_tbl: [(c9vLZ,
                       label: block_c9vLZ_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vLZ: // global
           R3 = P64[Sp + 8];
           R2 = I64[R1 + 7];
           Sp = Sp + 16;
           call System.Posix.Internals.$wsetNonBlockingFD_entry(R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.164693525 UTC

[section ""data" . System.Posix.Internals.setNonBlockingFD_closure" {
     System.Posix.Internals.setNonBlockingFD_closure:
         const System.Posix.Internals.setNonBlockingFD_info;
         const 0;
 },
 System.Posix.Internals.setNonBlockingFD_entry() //  [R2, R3]
         { info_tbl: [(c9vMn,
                       label: System.Posix.Internals.setNonBlockingFD_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vMn: // global
           R3 = R3;
           R2 = R2;
           call System.Posix.Internals.setNonBlockingFD1_entry(R3,
                                                               R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.167850458 UTC

[section ""cstring" . System.Posix.Internals.fdGetMode3_bytes" {
     System.Posix.Internals.fdGetMode3_bytes:
         I8[] [102,100,71,101,116,77,111,100,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.16972429 UTC

[section ""data" . System.Posix.Internals.fdGetMode2_closure" {
     System.Posix.Internals.fdGetMode2_closure:
         const System.Posix.Internals.fdGetMode2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.fdGetMode2_entry() //  [R1]
         { info_tbl: [(c9vMB,
                       label: System.Posix.Internals.fdGetMode2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vMB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9vMC; else goto c9vMD;
       c9vMC: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9vMD: // global
           (_c9vMy::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9vMy::I64 == 0) goto c9vMA; else goto c9vMz;
       c9vMA: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9vMz: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9vMy::I64;
           R2 = System.Posix.Internals.fdGetMode3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.175213082 UTC

[section ""data" . System.Posix.Internals.$wfdGetMode_closure" {
     System.Posix.Internals.$wfdGetMode_closure:
         const System.Posix.Internals.$wfdGetMode_info;
         const 0;
 },
 sat_s9u79_entry() //  [R1]
         { info_tbl: [(c9vMY,
                       label: sat_s9u79_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vMY: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9vNa; else goto c9vN9;
       c9vNa: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9vN9: // global
           (_s9u76::I64) = call "capi" arg hints:  [‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC17ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[R1 + 7], %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[R1 + 15])));
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u76::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9u7G_entry() //  [R1]
         { info_tbl: [(c9vNk,
                       label: sat_s9u7G_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vNk: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9vNl; else goto c9vNm;
       c9vNl: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9vNm: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9vNh_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9vOM; else goto c9vNi;
       u9vOM: // global
           call _c9vNh(R1) args: 0, res: 0, upd: 0;
       c9vNi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9vNh() //  [R1]
         { info_tbl: [(c9vNh,
                       label: block_c9vNh_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vNh: // global
           _s9u7e::I64 = I64[R1 + 7];
           (_s9u7i::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_wronly();
           if (_s9u7e::I64 & %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u7i::I64)) == 0) goto c9vOg; else goto c9vNI;
       c9vOg: // global
           (_s9u7A::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_rdwr();
           if (_s9u7e::I64 & %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u7A::I64)) == 0) goto c9vOI; else goto c9vOC;
       c9vOI: // global
           R1 = GHC.IO.IOMode.ReadMode_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9vOC: // global
           R1 = GHC.IO.IOMode.ReadWriteMode_closure+4;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9vNI: // global
           (_s9u7r::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_append();
           if (_s9u7e::I64 & %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u7r::I64)) == 0) goto c9vOa; else goto c9vO4;
       c9vOa: // global
           R1 = GHC.IO.IOMode.WriteMode_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9vO4: // global
           R1 = GHC.IO.IOMode.AppendMode_closure+3;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 System.Posix.Internals.$wfdGetMode_entry() //  [R2]
         { info_tbl: [(c9vON,
                       label: System.Posix.Internals.$wfdGetMode_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vON: // global
           _s9u6V::I64 = R2;
           if ((Sp + -8) < SpLim) (likely: False) goto c9vOO; else goto c9vOP;
       c9vOP: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9vOR; else goto c9vOQ;
       c9vOR: // global
           HpAlloc = 24;
           goto c9vOO;
       c9vOO: // global
           R2 = _s9u6V::I64;
           R1 = System.Posix.Internals.$wfdGetMode_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vOQ: // global
           (_s9u70::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_getfl();
           I64[Hp - 16] = sat_s9u79_info;
           I64[Hp - 8] = _s9u6V::I64;
           I64[Hp] = _s9u70::I64;
           I64[Sp - 8] = block_c9vNb_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.fdGetMode2_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9vNb() //  [R1]
         { info_tbl: [(c9vNb,
                       label: block_c9vNb_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vNb: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9vOU; else goto c9vOT;
       c9vOU: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9vOT: // global
           I64[Hp - 16] = sat_s9u7G_info;
           P64[Hp] = R1;
           R1 = Hp - 16;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.188539961 UTC

[section ""data" . System.Posix.Internals.fdGetMode1_closure" {
     System.Posix.Internals.fdGetMode1_closure:
         const System.Posix.Internals.fdGetMode1_info;
         const 0;
 },
 System.Posix.Internals.fdGetMode1_entry() //  [R2]
         { info_tbl: [(c9vPM,
                       label: System.Posix.Internals.fdGetMode1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vPM: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9vPN; else goto c9vPO;
       c9vPN: // global
           R2 = R2;
           R1 = System.Posix.Internals.fdGetMode1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vPO: // global
           I64[Sp - 8] = block_c9vPJ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9vPS; else goto c9vPK;
       u9vPS: // global
           call _c9vPJ(R1) args: 0, res: 0, upd: 0;
       c9vPK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vPJ() //  [R1]
         { info_tbl: [(c9vPJ,
                       label: block_c9vPJ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vPJ: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call System.Posix.Internals.$wfdGetMode_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.195331362 UTC

[section ""data" . System.Posix.Internals.fdGetMode_closure" {
     System.Posix.Internals.fdGetMode_closure:
         const System.Posix.Internals.fdGetMode_info;
         const 0;
 },
 System.Posix.Internals.fdGetMode_entry() //  [R2]
         { info_tbl: [(c9vQ7,
                       label: System.Posix.Internals.fdGetMode_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vQ7: // global
           R2 = R2;
           call System.Posix.Internals.fdGetMode1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.20155681 UTC

[section ""data" . System.Posix.Internals.fdStat1_closure" {
     System.Posix.Internals.fdStat1_closure:
         const System.Posix.Internals.fdStat1_info;
         const 0;
 },
 sat_s9u87_entry() //  [R1]
         { info_tbl: [(c9vQD,
                       label: sat_s9u87_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vQD: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9vQJ; else goto c9vQI;
       c9vQJ: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9vQI: // global
           (_s9u84::I64) = call "ccall" arg hints:  [‘signed’,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_fstat(I64[R1 + 7], I64[R1 + 15]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u84::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 System.Posix.Internals.fdStat1_entry() //  [R2]
         { info_tbl: [(c9vQK,
                       label: System.Posix.Internals.fdStat1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vQK: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9vQL; else goto c9vQM;
       c9vQL: // global
           R2 = R2;
           R1 = System.Posix.Internals.fdStat1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vQM: // global
           (_s9u7Q::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_stat();
           I64[Sp - 16] = block_c9vQj_info;
           R1 = _s9u7Q::I64;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vQj() //  [R1]
         { info_tbl: [(c9vQj,
                       label: block_c9vQj_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vQj: // global
           I64[Sp] = block_c9vQl_info;
           _s9u7W::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s9u7W::P64;
           if (R1 & 7 != 0) goto u9vTN; else goto c9vQm;
       u9vTN: // global
           call _c9vQl(R1) args: 0, res: 0, upd: 0;
       c9vQm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vQl() //  [R1]
         { info_tbl: [(c9vQl,
                       label: block_c9vQl_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vQl: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9vQQ; else goto c9vQP;
       c9vQQ: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9vQP: // global
           _s9u7Y::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9u87_info;
           I64[Hp - 8] = _s9u7Y::I64;
           _s9u7Z::I64 = P64[Sp + 8] + 16;
           I64[Hp] = _s9u7Z::I64;
           I64[Sp - 8] = block_c9vQR_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.ioe_unknownfiletype3_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           I64[Sp] = _s9u7Z::I64;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9vQR() //  []
         { info_tbl: [(c9vQR,
                       label: block_c9vQR_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vQR: // global
           (_s9u8e::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_mode(I64[Sp + 8]);
           _s9u8f::I64 = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9u8e::I64));
           (_s9u8j::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC5ZCbaseZCSystemziPosixziInternalsZCSzuISDIR(_s9u8f::I64);
           _s9u8k::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u8j::I64));
           if (_s9u8k::I64 != 0) goto u9vTB; else goto c9vRm;
       u9vTB: // global
           I64[Sp] = _s9u8k::I64;
           call _c9vR5() args: 0, res: 0, upd: 0;
       c9vRm: // global
           (_s9u8A::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC4ZCbaseZCSystemziPosixziInternalsZCSzuISFIFO(_s9u8f::I64);
           _s9u8B::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u8A::I64));
           if (_s9u8B::I64 != 0) goto u9vTD; else goto c9vRN;
       u9vTD: // global
           I64[Sp] = _s9u8B::I64;
           call _c9vRw() args: 0, res: 0, upd: 0;
       c9vRN: // global
           (_s9u8R::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC3ZCbaseZCSystemziPosixziInternalsZCSzuISSOCK(_s9u8f::I64);
           _s9u8S::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u8R::I64));
           if (_s9u8S::I64 != 0) goto u9vTF; else goto c9vSe;
       u9vTF: // global
           I64[Sp] = _s9u8S::I64;
           call _c9vRX() args: 0, res: 0, upd: 0;
       c9vSe: // global
           (_s9u98::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC7ZCbaseZCSystemziPosixziInternalsZCSzuISCHR(_s9u8f::I64);
           _s9u99::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u98::I64));
           if (_s9u99::I64 != 0) goto u9vTH; else goto c9vSF;
       u9vTH: // global
           I64[Sp] = _s9u99::I64;
           call _c9vSo() args: 0, res: 0, upd: 0;
       c9vSF: // global
           (_s9u9p::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG(_s9u8f::I64);
           _s9u9q::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u9p::I64));
           if (_s9u9q::I64 != 0) goto u9vTJ; else goto c9vT6;
       u9vTJ: // global
           I64[Sp] = _s9u9q::I64;
           call _c9vSP() args: 0, res: 0, upd: 0;
       c9vT6: // global
           (_s9u9G::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC6ZCbaseZCSystemziPosixziInternalsZCSzuISBLK(_s9u8f::I64);
           _s9u9H::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9u9G::I64));
           if (_s9u9H::I64 != 0) goto u9vTL; else goto c9vTx;
       u9vTL: // global
           I64[Sp] = _s9u9H::I64;
           call _c9vTg() args: 0, res: 0, upd: 0;
       c9vTx: // global
           R1 = System.Posix.Internals.fdStat2_closure;
           Sp = Sp + 24;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9vR5() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vR5: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9vRj; else goto c9vRi;
       c9vRj: // global
           HpAlloc = 64;
           _s9u8k::I64 = I64[Sp];
           I64[Sp] = block_c9vR4_info;
           R1 = _s9u8k::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9vRi: // global
           _s9u7W::P64 = P64[Sp + 16];
           _s9u7Z::I64 = I64[Sp + 8];
           (_s9u8o::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9u7Z::I64);
           (_s9u8s::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9u7Z::I64);
           call MO_Touch(_s9u7W::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9u8s::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9u8o::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.Directory_closure+1;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9vR4() //  [R1]
         { info_tbl: [(c9vR4,
                       label: block_c9vR4_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vR4: // global
           I64[Sp] = R1;
           call _c9vR5() args: 0, res: 0, upd: 0;
     }
 },
 _c9vRw() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vRw: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9vRK; else goto c9vRJ;
       c9vRK: // global
           HpAlloc = 64;
           _s9u8B::I64 = I64[Sp];
           I64[Sp] = block_c9vRv_info;
           R1 = _s9u8B::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9vRJ: // global
           _s9u7W::P64 = P64[Sp + 16];
           _s9u7Z::I64 = I64[Sp + 8];
           (_s9u8F::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9u7Z::I64);
           (_s9u8J::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9u7Z::I64);
           call MO_Touch(_s9u7W::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9u8J::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9u8F::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.Stream_closure+2;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9vRv() //  [R1]
         { info_tbl: [(c9vRv,
                       label: block_c9vRv_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vRv: // global
           I64[Sp] = R1;
           call _c9vRw() args: 0, res: 0, upd: 0;
     }
 },
 _c9vRX() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vRX: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9vSb; else goto c9vSa;
       c9vSb: // global
           HpAlloc = 64;
           _s9u8S::I64 = I64[Sp];
           I64[Sp] = block_c9vRW_info;
           R1 = _s9u8S::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9vSa: // global
           _s9u7W::P64 = P64[Sp + 16];
           _s9u7Z::I64 = I64[Sp + 8];
           (_s9u8W::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9u7Z::I64);
           (_s9u90::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9u7Z::I64);
           call MO_Touch(_s9u7W::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9u90::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9u8W::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.Stream_closure+2;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9vRW() //  [R1]
         { info_tbl: [(c9vRW,
                       label: block_c9vRW_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vRW: // global
           I64[Sp] = R1;
           call _c9vRX() args: 0, res: 0, upd: 0;
     }
 },
 _c9vSo() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vSo: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9vSC; else goto c9vSB;
       c9vSC: // global
           HpAlloc = 64;
           _s9u99::I64 = I64[Sp];
           I64[Sp] = block_c9vSn_info;
           R1 = _s9u99::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9vSB: // global
           _s9u7W::P64 = P64[Sp + 16];
           _s9u7Z::I64 = I64[Sp + 8];
           (_s9u9d::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9u7Z::I64);
           (_s9u9h::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9u7Z::I64);
           call MO_Touch(_s9u7W::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9u9h::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9u9d::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.Stream_closure+2;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9vSn() //  [R1]
         { info_tbl: [(c9vSn,
                       label: block_c9vSn_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vSn: // global
           I64[Sp] = R1;
           call _c9vSo() args: 0, res: 0, upd: 0;
     }
 },
 _c9vSP() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vSP: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9vT3; else goto c9vT2;
       c9vT3: // global
           HpAlloc = 64;
           _s9u9q::I64 = I64[Sp];
           I64[Sp] = block_c9vSO_info;
           R1 = _s9u9q::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9vT2: // global
           _s9u7W::P64 = P64[Sp + 16];
           _s9u7Z::I64 = I64[Sp + 8];
           (_s9u9u::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9u7Z::I64);
           (_s9u9y::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9u7Z::I64);
           call MO_Touch(_s9u7W::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9u9y::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9u9u::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.RegularFile_closure+3;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9vSO() //  [R1]
         { info_tbl: [(c9vSO,
                       label: block_c9vSO_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vSO: // global
           I64[Sp] = R1;
           call _c9vSP() args: 0, res: 0, upd: 0;
     }
 },
 _c9vTg() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vTg: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c9vTu; else goto c9vTt;
       c9vTu: // global
           HpAlloc = 64;
           _s9u9H::I64 = I64[Sp];
           I64[Sp] = block_c9vTf_info;
           R1 = _s9u9H::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9vTt: // global
           _s9u7W::P64 = P64[Sp + 16];
           _s9u7Z::I64 = I64[Sp + 8];
           (_s9u9L::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_dev(_s9u7Z::I64);
           (_s9u9P::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_ino(_s9u7Z::I64);
           call MO_Touch(_s9u7W::P64);
           I64[Hp - 56] = GHC.Word.W64#_con_info;
           I64[Hp - 48] = _s9u9P::I64;
           I64[Hp - 40] = GHC.Word.W64#_con_info;
           I64[Hp - 32] = _s9u9L::I64;
           I64[Hp - 24] = (,,)_con_info;
           P64[Hp - 16] = GHC.IO.Device.RawDevice_closure+4;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 55;
           R1 = Hp - 23;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9vTf() //  [R1]
         { info_tbl: [(c9vTf,
                       label: block_c9vTf_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vTf: // global
           I64[Sp] = R1;
           call _c9vTg() args: 0, res: 0, upd: 0;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.235165601 UTC

[section ""data" . System.Posix.Internals.fdStat_closure" {
     System.Posix.Internals.fdStat_closure:
         const System.Posix.Internals.fdStat_info;
         const 0;
 },
 System.Posix.Internals.fdStat_entry() //  [R2]
         { info_tbl: [(c9vVQ,
                       label: System.Posix.Internals.fdStat_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vVQ: // global
           R2 = R2;
           call System.Posix.Internals.fdStat1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.238965754 UTC

[section ""data" . System.Posix.Internals.fdType1_closure" {
     System.Posix.Internals.fdType1_closure:
         const System.Posix.Internals.fdType1_info;
         const 0;
 },
 System.Posix.Internals.fdType1_entry() //  [R2]
         { info_tbl: [(c9vW6,
                       label: System.Posix.Internals.fdType1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vW6: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9vW7; else goto c9vW8;
       c9vW7: // global
           R2 = R2;
           R1 = System.Posix.Internals.fdType1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vW8: // global
           I64[Sp - 8] = block_c9vW1_info;
           R2 = R2;
           Sp = Sp - 8;
           call System.Posix.Internals.fdStat1_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9vW1() //  [R1]
         { info_tbl: [(c9vW1,
                       label: block_c9vW1_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vW1: // global
           I64[Sp] = block_c9vW3_info;
           R1 = R1;
           if (R1 & 7 != 0) goto u9vWd; else goto c9vW4;
       u9vWd: // global
           call _c9vW3(R1) args: 0, res: 0, upd: 0;
       c9vW4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vW3() //  [R1]
         { info_tbl: [(c9vW3,
                       label: block_c9vW3_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vW3: // global
           R1 = P64[R1 + 7];
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.245947164 UTC

[section ""data" . System.Posix.Internals.fdType_closure" {
     System.Posix.Internals.fdType_closure:
         const System.Posix.Internals.fdType_info;
         const 0;
 },
 System.Posix.Internals.fdType_entry() //  [R2]
         { info_tbl: [(c9vWx,
                       label: System.Posix.Internals.fdType_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vWx: // global
           R2 = R2;
           call System.Posix.Internals.fdType1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.249445606 UTC

[section ""cstring" . System.Posix.Internals.fileType3_bytes" {
     System.Posix.Internals.fileType3_bytes:
         I8[] [102,105,108,101,84,121,112,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.251229354 UTC

[section ""data" . System.Posix.Internals.fileType2_closure" {
     System.Posix.Internals.fileType2_closure:
         const System.Posix.Internals.fileType2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.fileType2_entry() //  [R1]
         { info_tbl: [(c9vWL,
                       label: System.Posix.Internals.fileType2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vWL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9vWM; else goto c9vWN;
       c9vWM: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9vWN: // global
           (_c9vWI::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9vWI::I64 == 0) goto c9vWK; else goto c9vWJ;
       c9vWK: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9vWJ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9vWI::I64;
           R2 = System.Posix.Internals.fileType3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.256085024 UTC

[section ""data" . System.Posix.Internals.fileType1_closure" {
     System.Posix.Internals.fileType1_closure:
         const System.Posix.Internals.fileType1_info;
         const 0;
 },
 sat_s9uav_entry() //  [R1]
         { info_tbl: [(c9vXs,
                       label: sat_s9uav_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vXs: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9vXy; else goto c9vXx;
       c9vXy: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9vXx: // global
           (_s9uas::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_stat(I64[R1 + 15], I64[R1 + 7]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9uas::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9uaz_entry() //  [R1, R2]
         { info_tbl: [(c9vXz,
                       label: sat_s9uaz_info
                       rep:HeapRep 1 nonptrs { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vXz: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9vXB; else goto c9vXC;
       c9vXB: // global
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vXC: // global
           I64[Sp - 16] = block_c9vXd_info;
           _s9uaj::I64 = I64[R1 + 6];
           R1 = R2;
           I64[Sp - 8] = _s9uaj::I64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9vXI; else goto c9vXe;
       u9vXI: // global
           call _c9vXd(R1) args: 0, res: 0, upd: 0;
       c9vXe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vXd() //  [R1]
         { info_tbl: [(c9vXd,
                       label: block_c9vXd_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vXd: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9vXF; else goto c9vXE;
       c9vXF: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9vXE: // global
           _s9uan::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9uav_info;
           I64[Hp - 8] = I64[Sp + 8];
           I64[Hp] = _s9uan::I64;
           I64[Sp] = block_c9vXA_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.fileType2_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9vXA() //  []
         { info_tbl: [(c9vXA,
                       label: block_c9vXA_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vXA: // global
           R2 = I64[Sp + 8];
           Sp = Sp + 16;
           call System.Posix.Internals.$wstatGetType_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . u9vXU_srtd" {
     u9vXU_srtd:
         const S9v9Z_srt;
         const 45;
         const 26388413317121;
 },
 System.Posix.Internals.fileType1_entry() //  [R2]
         { info_tbl: [(c9vXJ,
                       label: System.Posix.Internals.fileType1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vXJ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9vXK; else goto c9vXL;
       c9vXK: // global
           R2 = R2;
           R1 = System.Posix.Internals.fileType1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9vXL: // global
           (_s9ua9::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_stat();
           I64[Sp - 16] = block_c9vX1_info;
           R1 = _s9ua9::I64;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . u9vXV_srtd" {
     u9vXV_srtd:
         const S9v9Z_srt;
         const 44;
         const 8796227272705;
 },
 _c9vX1() //  [R1]
         { info_tbl: [(c9vX1,
                       label: block_c9vX1_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vX1: // global
           I64[Sp - 8] = block_c9vX3_info;
           _s9uaf::P64 = R1;
           R1 = GHC.IO.Encoding.getFileSystemEncoding_closure;
           P64[Sp] = _s9uaf::P64;
           Sp = Sp - 8;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vX3() //  [R1]
         { info_tbl: [(c9vX3,
                       label: block_c9vX3_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vX3: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9vXP; else goto c9vXO;
       c9vXP: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9vXO: // global
           I64[Hp - 8] = sat_s9uaz_info;
           P64[Hp] = P64[Sp + 8] + 16;
           I64[Sp] = block_c9vXQ_info;
           R4 = Hp - 6;
           R3 = P64[Sp + 16];
           R2 = R1;
           call GHC.Foreign.charIsRepresentable3_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9vXQ() //  [R1]
         { info_tbl: [(c9vXQ,
                       label: block_c9vXQ_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vXQ: // global
           call MO_Touch(P64[Sp + 8]);
           R1 = R1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.274807298 UTC

[section ""data" . System.Posix.Internals.fileType_closure" {
     System.Posix.Internals.fileType_closure:
         const System.Posix.Internals.fileType_info;
         const 0;
 },
 System.Posix.Internals.fileType_entry() //  [R2]
         { info_tbl: [(c9vYI,
                       label: System.Posix.Internals.fileType_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vYI: // global
           R2 = R2;
           call System.Posix.Internals.fileType1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.278072586 UTC

[section ""cstring" . System.Posix.Internals.fdFileSize4_bytes" {
     System.Posix.Internals.fdFileSize4_bytes:
         I8[] [102,105,108,101,83,105,122,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.279952236 UTC

[section ""data" . System.Posix.Internals.fdFileSize3_closure" {
     System.Posix.Internals.fdFileSize3_closure:
         const System.Posix.Internals.fdFileSize3_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.fdFileSize3_entry() //  [R1]
         { info_tbl: [(c9vYW,
                       label: System.Posix.Internals.fdFileSize3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vYW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9vYX; else goto c9vYY;
       c9vYX: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9vYY: // global
           (_c9vYT::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9vYT::I64 == 0) goto c9vYV; else goto c9vYU;
       c9vYV: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9vYU: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9vYT::I64;
           R2 = System.Posix.Internals.fdFileSize4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.284265182 UTC

[section ""data" . sat_s9uaE_closure" {
     sat_s9uaE_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.28595802 UTC

[section ""data" . sat_s9uaF_closure" {
     sat_s9uaF_closure:
         const :_con_info;
         const sat_s9uaE_closure+1;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.287863294 UTC

[section ""data" . System.Posix.Internals.fdFileSize2_closure" {
     System.Posix.Internals.fdFileSize2_closure:
         const System.Posix.Internals.fdFileSize2_info;
         const 0;
         const 0;
         const 0;
 },
 System.Posix.Internals.fdFileSize2_entry() //  [R1]
         { info_tbl: [(c9vZf,
                       label: System.Posix.Internals.fdFileSize2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vZf: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9vZg; else goto c9vZh;
       c9vZg: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9vZh: // global
           (_c9vZc::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9vZc::I64 == 0) goto c9vZe; else goto c9vZd;
       c9vZe: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9vZd: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9vZc::I64;
           R3 = sat_s9uaF_closure+2;
           R2 = GHC.Types.False_closure+1;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.293254025 UTC

[section ""data" . System.Posix.Internals.fdFileSize1_closure" {
     System.Posix.Internals.fdFileSize1_closure:
         const System.Posix.Internals.fdFileSize1_info;
         const 0;
 },
 sat_s9ub2_entry() //  [R1]
         { info_tbl: [(c9vZQ,
                       label: sat_s9ub2_info
                       rep:HeapRep 2 nonptrs { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vZQ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9vZW; else goto c9vZV;
       c9vZW: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       c9vZV: // global
           (_s9uaZ::I64) = call "ccall" arg hints:  [‘signed’,
                                                     PtrHint]  result hints:  [‘signed’] __hscore_fstat(I64[R1 + 7], I64[R1 + 15]);
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9uaZ::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9ubl_entry() //  [R1]
         { info_tbl: [(c9w0j,
                       label: sat_s9ubl_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9w0j: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9w0k; else goto c9w0l;
       c9w0k: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9w0l: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = I64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 System.Posix.Internals.fdFileSize1_entry() //  [R2]
         { info_tbl: [(c9w0m,
                       label: System.Posix.Internals.fdFileSize1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9w0m: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9w0n; else goto c9w0o;
       c9w0n: // global
           R2 = R2;
           R1 = System.Posix.Internals.fdFileSize1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9w0o: // global
           (_s9uaL::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_sizeof_stat();
           I64[Sp - 16] = block_c9vZw_info;
           R1 = _s9uaL::I64;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vZw() //  [R1]
         { info_tbl: [(c9vZw,
                       label: block_c9vZw_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vZw: // global
           I64[Sp] = block_c9vZy_info;
           _s9uaR::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s9uaR::P64;
           if (R1 & 7 != 0) goto u9w0I; else goto c9vZz;
       u9w0I: // global
           call _c9vZy(R1) args: 0, res: 0, upd: 0;
       c9vZz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9vZy() //  [R1]
         { info_tbl: [(c9vZy,
                       label: block_c9vZy_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vZy: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9w0s; else goto c9w0r;
       c9w0s: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9w0r: // global
           _s9uaT::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9ub2_info;
           I64[Hp - 8] = _s9uaT::I64;
           _s9uaU::I64 = P64[Sp + 8] + 16;
           I64[Hp] = _s9uaU::I64;
           I64[Sp - 8] = block_c9vZX_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.fdFileSize3_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           I64[Sp] = _s9uaU::I64;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9vZX() //  []
         { info_tbl: [(c9vZX,
                       label: block_c9vZX_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9vZX: // global
           _s9uaR::P64 = P64[Sp + 16];
           (_s9ub9::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [] __hscore_st_mode(I64[Sp + 8]);
           (_s9ube::I64) = call "capi" arg hints:  []  result hints:  [‘signed’] ghczuwrapperZC8ZCbaseZCSystemziPosixziInternalsZCSzuISREG(%MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(_s9ub9::I64)));
           _s9ubf::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9ube::I64));
           if (_s9ubf::I64 != 0) goto u9w0G; else goto c9w0B;
       u9w0G: // global
           I64[Sp] = _s9ubf::I64;
           call _c9w0a() args: 0, res: 0, upd: 0;
       c9w0B: // global
           call MO_Touch(_s9uaR::P64);
           R1 = System.Posix.Internals.fdFileSize2_closure;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9w0a() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9w0a: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9w0y; else goto c9w0x;
       c9w0y: // global
           HpAlloc = 24;
           _s9ubf::I64 = I64[Sp];
           I64[Sp] = block_c9w09_info;
           R1 = _s9ubf::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9w0x: // global
           _s9uaR::P64 = P64[Sp + 16];
           (_s9ubj::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] __hscore_st_size(I64[Sp + 8]);
           call MO_Touch(_s9uaR::P64);
           I64[Hp - 16] = sat_s9ubl_info;
           I64[Hp] = _s9ubj::I64;
           R1 = Hp - 16;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9w09() //  [R1]
         { info_tbl: [(c9w09,
                       label: block_c9w09_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9w09: // global
           I64[Sp] = R1;
           call _c9w0a() args: 0, res: 0, upd: 0;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.310304659 UTC

[section ""data" . System.Posix.Internals.fdFileSize_closure" {
     System.Posix.Internals.fdFileSize_closure:
         const System.Posix.Internals.fdFileSize_info;
         const 0;
 },
 System.Posix.Internals.fdFileSize_entry() //  [R2]
         { info_tbl: [(c9w1t,
                       label: System.Posix.Internals.fdFileSize_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9w1t: // global
           R2 = R2;
           call System.Posix.Internals.fdFileSize1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:38.313843789 UTC

[section ""relreadonly" . S9v9Z_srt" {
     S9v9Z_srt:
         const GHC.IO.Encoding.getFileSystemEncoding_closure;
         const System.Posix.Internals.withFilePath1_closure;
         const GHC.ForeignPtr.mallocForeignPtrBytes2_closure;
         const System.Posix.Internals.peekFilePathLen1_closure;
         const GHC.Foreign.peekCString1_closure;
         const System.Posix.Internals.peekFilePath1_closure;
         const GHC.Foreign.newCString1_closure;
         const System.Posix.Internals.newFilePath1_closure;
         const System.Posix.Internals.puts1_closure;
         const System.Posix.Internals.puts2_closure;
         const Foreign.C.Error.$wlvl_closure;
         const lvl1_r9pfy_closure;
         const lvl6_r9pfD_closure;
         const lvl9_r9pfG_closure;
         const Foreign.Marshal.Alloc.malloc1_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
         const System.Posix.Internals.getEcho3_closure;
         const lvl2_r9pfz_closure;
         const lvl4_r9pfB_closure;
         const lvl7_r9pfE_closure;
         const lvl10_r9pfH_closure;
         const System.Posix.Internals.setCooked1_closure;
         const System.Posix.Internals.getEcho1_closure;
         const System.Posix.Internals.setEcho1_closure;
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const System.Posix.Internals.ioe_unknownfiletype_closure;
         const System.Posix.Internals.fdStat2_closure;
         const System.Posix.Internals.$wstatGetType_closure;
         const System.Posix.Internals.statGetType1_closure;
         const lvl12_r9pfJ_closure;
         const System.Posix.Internals.setCloseOnExec2_closure;
         const System.Posix.Internals.setCloseOnExec1_closure;
         const System.Posix.Internals.$wsetCloseOnExec_closure;
         const System.Posix.Internals.$wsetNonBlockingFD_closure;
         const System.Posix.Internals.setNonBlockingFD2_closure;
         const System.Posix.Internals.setNonBlockingFD3_closure;
         const System.Posix.Internals.setNonBlockingFD1_closure;
         const System.Posix.Internals.$wfdGetMode_closure;
         const System.Posix.Internals.fdGetMode2_closure;
         const System.Posix.Internals.fdGetMode1_closure;
         const System.Posix.Internals.fdStat1_closure;
         const System.Posix.Internals.ioe_unknownfiletype3_closure;
         const System.Posix.Internals.fdType1_closure;
         const System.Posix.Internals.fileType2_closure;
         const System.Posix.Internals.fileType1_closure;
         const sat_s9uaF_closure;
         const System.Posix.Internals.fdFileSize1_closure;
         const System.Posix.Internals.fdFileSize2_closure;
         const System.Posix.Internals.fdFileSize3_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
 }]

