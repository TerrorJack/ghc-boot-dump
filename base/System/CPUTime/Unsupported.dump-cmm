
==================== Output Cmm ====================
2018-03-16 16:07:25.622033125 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:25.622577569 UTC

[section ""cstring" . lvl_rcwZX_bytes" {
     lvl_rcwZX_bytes:
         I8[] [103,101,116,67,80,85,84,105,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.623460153 UTC

[section ""data" . lvl1_rcwZY_closure" {
     lvl1_rcwZY_closure:
         const lvl1_rcwZY_info;
         const 0;
         const 0;
         const 0;
 },
 lvl1_rcwZY_entry() //  [R1]
         { info_tbl: [(ccx0k,
                       label: lvl1_rcwZY_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx0k: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccx0l; else goto ccx0m;
       ccx0l: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccx0m: // global
           (_ccx0h::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccx0h::I64 == 0) goto ccx0j; else goto ccx0i;
       ccx0j: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccx0i: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccx0h::I64;
           R2 = lvl_rcwZX_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.624411175 UTC

[section ""cstring" . lvl2_rcwZZ_bytes" {
     lvl2_rcwZZ_bytes:
         I8[] [99,97,110,39,116,32,103,101,116,32,67,80,85,32,116,105,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.625118506 UTC

[section ""data" . lvl3_rcx00_closure" {
     lvl3_rcx00_closure:
         const lvl3_rcx00_info;
         const 0;
         const 0;
         const 0;
 },
 lvl3_rcx00_entry() //  [R1]
         { info_tbl: [(ccx0t,
                       label: lvl3_rcx00_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx0t: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccx0u; else goto ccx0v;
       ccx0u: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccx0v: // global
           (_ccx0q::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccx0q::I64 == 0) goto ccx0s; else goto ccx0r;
       ccx0s: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccx0r: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccx0q::I64;
           R2 = lvl2_rcwZZ_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.626016509 UTC

[section ""data" . lvl4_rcx01_closure" {
     lvl4_rcx01_closure:
         const GHC.IO.Exception.IOError_con_info;
         const GHC.Base.Nothing_closure+1;
         const GHC.IO.Exception.UnsupportedOperation_closure+1;
         const lvl1_rcwZY_closure;
         const lvl3_rcx00_closure;
         const GHC.Base.Nothing_closure+1;
         const GHC.Base.Nothing_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.626768332 UTC

[section ""data" . lvl5_rcx02_closure" {
     lvl5_rcx02_closure:
         const lvl5_rcx02_info;
         const 0;
         const 0;
         const 0;
 },
 lvl5_rcx02_entry() //  [R1]
         { info_tbl: [(ccx0C,
                       label: lvl5_rcx02_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx0C: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccx0D; else goto ccx0E;
       ccx0D: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccx0E: // global
           (_ccx0z::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccx0z::I64 == 0) goto ccx0B; else goto ccx0A;
       ccx0B: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccx0A: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccx0z::I64;
           R2 = lvl4_rcx01_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.627799992 UTC

[section ""data" . System.CPUTime.Unsupported.getCPUTime1_closure" {
     System.CPUTime.Unsupported.getCPUTime1_closure:
         const System.CPUTime.Unsupported.getCPUTime1_info;
         const 0;
 },
 System.CPUTime.Unsupported.getCPUTime1_entry() //  []
         { info_tbl: [(ccx0K,
                       label: System.CPUTime.Unsupported.getCPUTime1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx0K: // global
           R1 = lvl5_rcx02_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.628626799 UTC

[section ""data" . getCPUTime2_rcx03_closure" {
     getCPUTime2_rcx03_closure:
         const getCPUTime2_rcx03_info;
         const 0;
 },
 getCPUTime2_rcx03_entry() //  []
         { info_tbl: [(ccx0R,
                       label: getCPUTime2_rcx03_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx0R: // global
           R1 = lvl5_rcx02_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.62948606 UTC

[section ""data" . System.CPUTime.Unsupported.getCPUTime_closure" {
     System.CPUTime.Unsupported.getCPUTime_closure:
         const System.CPUTime.Unsupported.getCPUTime_info;
         const 0;
 },
 System.CPUTime.Unsupported.getCPUTime_entry() //  []
         { info_tbl: [(ccx0Y,
                       label: System.CPUTime.Unsupported.getCPUTime_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx0Y: // global
           call getCPUTime2_rcx03_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.630186998 UTC

[section ""cstring" . lvl6_rcx04_bytes" {
     lvl6_rcx04_bytes:
         I8[] [99,112,117,84,105,109,101,80,114,101,99,105,115,105,111,110]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.630931336 UTC

[section ""data" . lvl7_rcx05_closure" {
     lvl7_rcx05_closure:
         const lvl7_rcx05_info;
         const 0;
         const 0;
         const 0;
 },
 lvl7_rcx05_entry() //  [R1]
         { info_tbl: [(ccx17,
                       label: lvl7_rcx05_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx17: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccx18; else goto ccx19;
       ccx18: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccx19: // global
           (_ccx14::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccx14::I64 == 0) goto ccx16; else goto ccx15;
       ccx16: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccx15: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccx14::I64;
           R2 = lvl6_rcx04_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.631836365 UTC

[section ""data" . lvl8_rcx06_closure" {
     lvl8_rcx06_closure:
         const GHC.IO.Exception.IOError_con_info;
         const GHC.Base.Nothing_closure+1;
         const GHC.IO.Exception.UnsupportedOperation_closure+1;
         const lvl7_rcx05_closure;
         const lvl3_rcx00_closure;
         const GHC.Base.Nothing_closure+1;
         const GHC.Base.Nothing_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.632610817 UTC

[section ""data" . lvl9_rcx07_closure" {
     lvl9_rcx07_closure:
         const lvl9_rcx07_info;
         const 0;
         const 0;
         const 0;
 },
 lvl9_rcx07_entry() //  [R1]
         { info_tbl: [(ccx1g,
                       label: lvl9_rcx07_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx1g: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccx1h; else goto ccx1i;
       ccx1h: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccx1i: // global
           (_ccx1d::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccx1d::I64 == 0) goto ccx1f; else goto ccx1e;
       ccx1f: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccx1e: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccx1d::I64;
           R2 = lvl8_rcx06_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.633709437 UTC

[section ""data" . System.CPUTime.Unsupported.getCpuTimePrecision1_closure" {
     System.CPUTime.Unsupported.getCpuTimePrecision1_closure:
         const System.CPUTime.Unsupported.getCpuTimePrecision1_info;
         const 0;
 },
 System.CPUTime.Unsupported.getCpuTimePrecision1_entry() //  []
         { info_tbl: [(ccx1n,
                       label: System.CPUTime.Unsupported.getCpuTimePrecision1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx1n: // global
           R1 = lvl9_rcx07_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.634565734 UTC

[section ""data" . getCpuTimePrecision2_rcx08_closure" {
     getCpuTimePrecision2_rcx08_closure:
         const getCpuTimePrecision2_rcx08_info;
         const 0;
 },
 getCpuTimePrecision2_rcx08_entry() //  []
         { info_tbl: [(ccx1u,
                       label: getCpuTimePrecision2_rcx08_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx1u: // global
           R1 = lvl9_rcx07_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.635423036 UTC

[section ""data" . System.CPUTime.Unsupported.getCpuTimePrecision_closure" {
     System.CPUTime.Unsupported.getCpuTimePrecision_closure:
         const System.CPUTime.Unsupported.getCpuTimePrecision_info;
         const 0;
 },
 System.CPUTime.Unsupported.getCpuTimePrecision_entry() //  []
         { info_tbl: [(ccx1B,
                       label: System.CPUTime.Unsupported.getCpuTimePrecision_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx1B: // global
           call getCpuTimePrecision2_rcx08_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.636141596 UTC

[section ""cstring" . System.CPUTime.Unsupported.$trModule4_bytes" {
     System.CPUTime.Unsupported.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.636747341 UTC

[section ""data" . System.CPUTime.Unsupported.$trModule3_closure" {
     System.CPUTime.Unsupported.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.Unsupported.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.637372939 UTC

[section ""cstring" . System.CPUTime.Unsupported.$trModule2_bytes" {
     System.CPUTime.Unsupported.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,67,80,85,84,105,109,101,46,85,110,115,117,112,112,111,114,116,101,100]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.637967765 UTC

[section ""data" . System.CPUTime.Unsupported.$trModule1_closure" {
     System.CPUTime.Unsupported.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.Unsupported.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.638549042 UTC

[section ""data" . System.CPUTime.Unsupported.$trModule_closure" {
     System.CPUTime.Unsupported.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.CPUTime.Unsupported.$trModule3_closure+1;
         const System.CPUTime.Unsupported.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.639150164 UTC

[section ""relreadonly" . Scx0F_srt" {
     Scx0F_srt:
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const lvl4_rcx01_closure;
         const lvl5_rcx02_closure;
         const getCPUTime2_rcx03_closure;
         const lvl8_rcx06_closure;
         const lvl9_rcx07_closure;
         const getCpuTimePrecision2_rcx08_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.639796834 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:25.640377229 UTC

[section ""cstring" . lvl_rcwZX_bytes" {
     lvl_rcwZX_bytes:
         I8[] [103,101,116,67,80,85,84,105,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.641148065 UTC

[section ""data" . lvl1_rcwZY_closure" {
     lvl1_rcwZY_closure:
         const lvl1_rcwZY_info;
         const 0;
         const 0;
         const 0;
 },
 lvl1_rcwZY_entry() //  [R1]
         { info_tbl: [(ccx1K,
                       label: lvl1_rcwZY_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx1K: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccx1L; else goto ccx1M;
       ccx1L: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccx1M: // global
           (_ccx1H::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccx1H::I64 == 0) goto ccx1J; else goto ccx1I;
       ccx1J: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccx1I: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccx1H::I64;
           R2 = lvl_rcwZX_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.642084361 UTC

[section ""cstring" . lvl2_rcwZZ_bytes" {
     lvl2_rcwZZ_bytes:
         I8[] [99,97,110,39,116,32,103,101,116,32,67,80,85,32,116,105,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.642842888 UTC

[section ""data" . lvl3_rcx00_closure" {
     lvl3_rcx00_closure:
         const lvl3_rcx00_info;
         const 0;
         const 0;
         const 0;
 },
 lvl3_rcx00_entry() //  [R1]
         { info_tbl: [(ccx1T,
                       label: lvl3_rcx00_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx1T: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccx1U; else goto ccx1V;
       ccx1U: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccx1V: // global
           (_ccx1Q::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccx1Q::I64 == 0) goto ccx1S; else goto ccx1R;
       ccx1S: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccx1R: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccx1Q::I64;
           R2 = lvl2_rcwZZ_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.643741961 UTC

[section ""data" . lvl4_rcx01_closure" {
     lvl4_rcx01_closure:
         const GHC.IO.Exception.IOError_con_info;
         const GHC.Base.Nothing_closure+1;
         const GHC.IO.Exception.UnsupportedOperation_closure+1;
         const lvl1_rcwZY_closure;
         const lvl3_rcx00_closure;
         const GHC.Base.Nothing_closure+1;
         const GHC.Base.Nothing_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.644584258 UTC

[section ""data" . lvl5_rcx02_closure" {
     lvl5_rcx02_closure:
         const lvl5_rcx02_info;
         const 0;
         const 0;
         const 0;
 },
 lvl5_rcx02_entry() //  [R1]
         { info_tbl: [(ccx22,
                       label: lvl5_rcx02_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx22: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccx23; else goto ccx24;
       ccx23: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccx24: // global
           (_ccx1Z::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccx1Z::I64 == 0) goto ccx21; else goto ccx20;
       ccx21: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccx20: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccx1Z::I64;
           R2 = lvl4_rcx01_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.64563603 UTC

[section ""data" . System.CPUTime.Unsupported.getCPUTime1_closure" {
     System.CPUTime.Unsupported.getCPUTime1_closure:
         const System.CPUTime.Unsupported.getCPUTime1_info;
         const 0;
 },
 System.CPUTime.Unsupported.getCPUTime1_entry() //  []
         { info_tbl: [(ccx29,
                       label: System.CPUTime.Unsupported.getCPUTime1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx29: // global
           R1 = lvl5_rcx02_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.64646418 UTC

[section ""data" . getCPUTime2_rcx03_closure" {
     getCPUTime2_rcx03_closure:
         const getCPUTime2_rcx03_info;
         const 0;
 },
 getCPUTime2_rcx03_entry() //  []
         { info_tbl: [(ccx2g,
                       label: getCPUTime2_rcx03_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx2g: // global
           R1 = lvl5_rcx02_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.647312424 UTC

[section ""data" . System.CPUTime.Unsupported.getCPUTime_closure" {
     System.CPUTime.Unsupported.getCPUTime_closure:
         const System.CPUTime.Unsupported.getCPUTime_info;
         const 0;
 },
 System.CPUTime.Unsupported.getCPUTime_entry() //  []
         { info_tbl: [(ccx2n,
                       label: System.CPUTime.Unsupported.getCPUTime_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx2n: // global
           call getCPUTime2_rcx03_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.648054381 UTC

[section ""cstring" . lvl6_rcx04_bytes" {
     lvl6_rcx04_bytes:
         I8[] [99,112,117,84,105,109,101,80,114,101,99,105,115,105,111,110]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.648820306 UTC

[section ""data" . lvl7_rcx05_closure" {
     lvl7_rcx05_closure:
         const lvl7_rcx05_info;
         const 0;
         const 0;
         const 0;
 },
 lvl7_rcx05_entry() //  [R1]
         { info_tbl: [(ccx2w,
                       label: lvl7_rcx05_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx2w: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccx2x; else goto ccx2y;
       ccx2x: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccx2y: // global
           (_ccx2t::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccx2t::I64 == 0) goto ccx2v; else goto ccx2u;
       ccx2v: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccx2u: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccx2t::I64;
           R2 = lvl6_rcx04_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.650212827 UTC

[section ""data" . lvl8_rcx06_closure" {
     lvl8_rcx06_closure:
         const GHC.IO.Exception.IOError_con_info;
         const GHC.Base.Nothing_closure+1;
         const GHC.IO.Exception.UnsupportedOperation_closure+1;
         const lvl7_rcx05_closure;
         const lvl3_rcx00_closure;
         const GHC.Base.Nothing_closure+1;
         const GHC.Base.Nothing_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.651019758 UTC

[section ""data" . lvl9_rcx07_closure" {
     lvl9_rcx07_closure:
         const lvl9_rcx07_info;
         const 0;
         const 0;
         const 0;
 },
 lvl9_rcx07_entry() //  [R1]
         { info_tbl: [(ccx2F,
                       label: lvl9_rcx07_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx2F: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccx2G; else goto ccx2H;
       ccx2G: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccx2H: // global
           (_ccx2C::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccx2C::I64 == 0) goto ccx2E; else goto ccx2D;
       ccx2E: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccx2D: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccx2C::I64;
           R2 = lvl8_rcx06_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.652104986 UTC

[section ""data" . System.CPUTime.Unsupported.getCpuTimePrecision1_closure" {
     System.CPUTime.Unsupported.getCpuTimePrecision1_closure:
         const System.CPUTime.Unsupported.getCpuTimePrecision1_info;
         const 0;
 },
 System.CPUTime.Unsupported.getCpuTimePrecision1_entry() //  []
         { info_tbl: [(ccx2M,
                       label: System.CPUTime.Unsupported.getCpuTimePrecision1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx2M: // global
           R1 = lvl9_rcx07_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.65655516 UTC

[section ""data" . getCpuTimePrecision2_rcx08_closure" {
     getCpuTimePrecision2_rcx08_closure:
         const getCpuTimePrecision2_rcx08_info;
         const 0;
 },
 getCpuTimePrecision2_rcx08_entry() //  []
         { info_tbl: [(ccx2T,
                       label: getCpuTimePrecision2_rcx08_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx2T: // global
           R1 = lvl9_rcx07_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.657600444 UTC

[section ""data" . System.CPUTime.Unsupported.getCpuTimePrecision_closure" {
     System.CPUTime.Unsupported.getCpuTimePrecision_closure:
         const System.CPUTime.Unsupported.getCpuTimePrecision_info;
         const 0;
 },
 System.CPUTime.Unsupported.getCpuTimePrecision_entry() //  []
         { info_tbl: [(ccx30,
                       label: System.CPUTime.Unsupported.getCpuTimePrecision_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx30: // global
           call getCpuTimePrecision2_rcx08_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.658481098 UTC

[section ""cstring" . System.CPUTime.Unsupported.$trModule4_bytes" {
     System.CPUTime.Unsupported.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.65921916 UTC

[section ""data" . System.CPUTime.Unsupported.$trModule3_closure" {
     System.CPUTime.Unsupported.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.Unsupported.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.659974054 UTC

[section ""cstring" . System.CPUTime.Unsupported.$trModule2_bytes" {
     System.CPUTime.Unsupported.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,67,80,85,84,105,109,101,46,85,110,115,117,112,112,111,114,116,101,100]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.660648594 UTC

[section ""data" . System.CPUTime.Unsupported.$trModule1_closure" {
     System.CPUTime.Unsupported.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.Unsupported.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.661364217 UTC

[section ""data" . System.CPUTime.Unsupported.$trModule_closure" {
     System.CPUTime.Unsupported.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.CPUTime.Unsupported.$trModule3_closure+1;
         const System.CPUTime.Unsupported.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.662057591 UTC

[section ""relreadonly" . Scx0F_srt" {
     Scx0F_srt:
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const lvl4_rcx01_closure;
         const lvl5_rcx02_closure;
         const getCPUTime2_rcx03_closure;
         const lvl8_rcx06_closure;
         const lvl9_rcx07_closure;
         const getCpuTimePrecision2_rcx08_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.663087208 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:25.664509894 UTC

[section ""cstring" . lvl_rcwZX_bytes" {
     lvl_rcwZX_bytes:
         I8[] [103,101,116,67,80,85,84,105,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.667338115 UTC

[section ""data" . lvl1_rcwZY_closure" {
     lvl1_rcwZY_closure:
         const lvl1_rcwZY_info;
         const 0;
         const 0;
         const 0;
 },
 lvl1_rcwZY_entry() //  [R1]
         { info_tbl: [(ccx3a,
                       label: lvl1_rcwZY_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx3a: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccx3b; else goto ccx3c;
       ccx3b: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccx3c: // global
           (_ccx37::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccx37::I64 == 0) goto ccx39; else goto ccx38;
       ccx39: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccx38: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccx37::I64;
           R2 = lvl_rcwZX_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.672250005 UTC

[section ""cstring" . lvl2_rcwZZ_bytes" {
     lvl2_rcwZZ_bytes:
         I8[] [99,97,110,39,116,32,103,101,116,32,67,80,85,32,116,105,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.674682932 UTC

[section ""data" . lvl3_rcx00_closure" {
     lvl3_rcx00_closure:
         const lvl3_rcx00_info;
         const 0;
         const 0;
         const 0;
 },
 lvl3_rcx00_entry() //  [R1]
         { info_tbl: [(ccx3r,
                       label: lvl3_rcx00_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx3r: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccx3s; else goto ccx3t;
       ccx3s: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccx3t: // global
           (_ccx3o::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccx3o::I64 == 0) goto ccx3q; else goto ccx3p;
       ccx3q: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccx3p: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccx3o::I64;
           R2 = lvl2_rcwZZ_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.680145444 UTC

[section ""data" . lvl4_rcx01_closure" {
     lvl4_rcx01_closure:
         const GHC.IO.Exception.IOError_con_info;
         const GHC.Base.Nothing_closure+1;
         const GHC.IO.Exception.UnsupportedOperation_closure+1;
         const lvl1_rcwZY_closure;
         const lvl3_rcx00_closure;
         const GHC.Base.Nothing_closure+1;
         const GHC.Base.Nothing_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.682939677 UTC

[section ""data" . lvl5_rcx02_closure" {
     lvl5_rcx02_closure:
         const lvl5_rcx02_info;
         const 0;
         const 0;
         const 0;
 },
 lvl5_rcx02_entry() //  [R1]
         { info_tbl: [(ccx3I,
                       label: lvl5_rcx02_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx3I: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccx3J; else goto ccx3K;
       ccx3J: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccx3K: // global
           (_ccx3F::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccx3F::I64 == 0) goto ccx3H; else goto ccx3G;
       ccx3H: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccx3G: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccx3F::I64;
           R2 = lvl4_rcx01_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.688250911 UTC

[section ""data" . System.CPUTime.Unsupported.getCPUTime1_closure" {
     System.CPUTime.Unsupported.getCPUTime1_closure:
         const System.CPUTime.Unsupported.getCPUTime1_info;
         const 0;
 },
 System.CPUTime.Unsupported.getCPUTime1_entry() //  []
         { info_tbl: [(ccx3W,
                       label: System.CPUTime.Unsupported.getCPUTime1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx3W: // global
           R1 = lvl5_rcx02_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.692785585 UTC

[section ""data" . getCPUTime2_rcx03_closure" {
     getCPUTime2_rcx03_closure:
         const getCPUTime2_rcx03_info;
         const 0;
 },
 getCPUTime2_rcx03_entry() //  []
         { info_tbl: [(ccx47,
                       label: getCPUTime2_rcx03_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx47: // global
           R1 = lvl5_rcx02_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.697889699 UTC

[section ""data" . System.CPUTime.Unsupported.getCPUTime_closure" {
     System.CPUTime.Unsupported.getCPUTime_closure:
         const System.CPUTime.Unsupported.getCPUTime_info;
         const 0;
 },
 System.CPUTime.Unsupported.getCPUTime_entry() //  []
         { info_tbl: [(ccx4i,
                       label: System.CPUTime.Unsupported.getCPUTime_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx4i: // global
           call getCPUTime2_rcx03_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.701033875 UTC

[section ""cstring" . lvl6_rcx04_bytes" {
     lvl6_rcx04_bytes:
         I8[] [99,112,117,84,105,109,101,80,114,101,99,105,115,105,111,110]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.703234626 UTC

[section ""data" . lvl7_rcx05_closure" {
     lvl7_rcx05_closure:
         const lvl7_rcx05_info;
         const 0;
         const 0;
         const 0;
 },
 lvl7_rcx05_entry() //  [R1]
         { info_tbl: [(ccx4w,
                       label: lvl7_rcx05_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx4w: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccx4x; else goto ccx4y;
       ccx4x: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccx4y: // global
           (_ccx4t::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccx4t::I64 == 0) goto ccx4v; else goto ccx4u;
       ccx4v: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccx4u: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccx4t::I64;
           R2 = lvl6_rcx04_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.707190492 UTC

[section ""data" . lvl8_rcx06_closure" {
     lvl8_rcx06_closure:
         const GHC.IO.Exception.IOError_con_info;
         const GHC.Base.Nothing_closure+1;
         const GHC.IO.Exception.UnsupportedOperation_closure+1;
         const lvl7_rcx05_closure;
         const lvl3_rcx00_closure;
         const GHC.Base.Nothing_closure+1;
         const GHC.Base.Nothing_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.709230538 UTC

[section ""data" . lvl9_rcx07_closure" {
     lvl9_rcx07_closure:
         const lvl9_rcx07_info;
         const 0;
         const 0;
         const 0;
 },
 lvl9_rcx07_entry() //  [R1]
         { info_tbl: [(ccx4N,
                       label: lvl9_rcx07_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx4N: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccx4O; else goto ccx4P;
       ccx4O: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccx4P: // global
           (_ccx4K::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccx4K::I64 == 0) goto ccx4M; else goto ccx4L;
       ccx4M: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccx4L: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccx4K::I64;
           R2 = lvl8_rcx06_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.713215287 UTC

[section ""data" . System.CPUTime.Unsupported.getCpuTimePrecision1_closure" {
     System.CPUTime.Unsupported.getCpuTimePrecision1_closure:
         const System.CPUTime.Unsupported.getCpuTimePrecision1_info;
         const 0;
 },
 System.CPUTime.Unsupported.getCpuTimePrecision1_entry() //  []
         { info_tbl: [(ccx51,
                       label: System.CPUTime.Unsupported.getCpuTimePrecision1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx51: // global
           R1 = lvl9_rcx07_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.716668238 UTC

[section ""data" . getCpuTimePrecision2_rcx08_closure" {
     getCpuTimePrecision2_rcx08_closure:
         const getCpuTimePrecision2_rcx08_info;
         const 0;
 },
 getCpuTimePrecision2_rcx08_entry() //  []
         { info_tbl: [(ccx5c,
                       label: getCpuTimePrecision2_rcx08_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx5c: // global
           R1 = lvl9_rcx07_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.720157975 UTC

[section ""data" . System.CPUTime.Unsupported.getCpuTimePrecision_closure" {
     System.CPUTime.Unsupported.getCpuTimePrecision_closure:
         const System.CPUTime.Unsupported.getCpuTimePrecision_info;
         const 0;
 },
 System.CPUTime.Unsupported.getCpuTimePrecision_entry() //  []
         { info_tbl: [(ccx5n,
                       label: System.CPUTime.Unsupported.getCpuTimePrecision_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx5n: // global
           call getCpuTimePrecision2_rcx08_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.723990489 UTC

[section ""cstring" . System.CPUTime.Unsupported.$trModule4_bytes" {
     System.CPUTime.Unsupported.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.725849418 UTC

[section ""data" . System.CPUTime.Unsupported.$trModule3_closure" {
     System.CPUTime.Unsupported.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.Unsupported.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.728240805 UTC

[section ""cstring" . System.CPUTime.Unsupported.$trModule2_bytes" {
     System.CPUTime.Unsupported.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,67,80,85,84,105,109,101,46,85,110,115,117,112,112,111,114,116,101,100]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.729996581 UTC

[section ""data" . System.CPUTime.Unsupported.$trModule1_closure" {
     System.CPUTime.Unsupported.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.Unsupported.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.731796048 UTC

[section ""data" . System.CPUTime.Unsupported.$trModule_closure" {
     System.CPUTime.Unsupported.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.CPUTime.Unsupported.$trModule3_closure+1;
         const System.CPUTime.Unsupported.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.733593471 UTC

[section ""relreadonly" . Scx0F_srt" {
     Scx0F_srt:
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const lvl4_rcx01_closure;
         const lvl5_rcx02_closure;
         const getCPUTime2_rcx03_closure;
         const lvl8_rcx06_closure;
         const lvl9_rcx07_closure;
         const getCpuTimePrecision2_rcx08_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.78995369 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:25.791045759 UTC

[section ""cstring" . lvl_rcwZX_bytes" {
     lvl_rcwZX_bytes:
         I8[] [103,101,116,67,80,85,84,105,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.793108056 UTC

[section ""data" . lvl1_rcwZY_closure" {
     lvl1_rcwZY_closure:
         const lvl1_rcwZY_info;
         const 0;
         const 0;
         const 0;
 },
 lvl1_rcwZY_entry() //  [R1]
         { info_tbl: [(ccx5L,
                       label: lvl1_rcwZY_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx5L: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccx5M; else goto ccx5N;
       ccx5M: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccx5N: // global
           (_ccx5I::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccx5I::I64 == 0) goto ccx5K; else goto ccx5J;
       ccx5K: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccx5J: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccx5I::I64;
           R2 = lvl_rcwZX_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.797406837 UTC

[section ""cstring" . lvl2_rcwZZ_bytes" {
     lvl2_rcwZZ_bytes:
         I8[] [99,97,110,39,116,32,103,101,116,32,67,80,85,32,116,105,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.799426904 UTC

[section ""data" . lvl3_rcx00_closure" {
     lvl3_rcx00_closure:
         const lvl3_rcx00_info;
         const 0;
         const 0;
         const 0;
 },
 lvl3_rcx00_entry() //  [R1]
         { info_tbl: [(ccx63,
                       label: lvl3_rcx00_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx63: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccx64; else goto ccx65;
       ccx64: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccx65: // global
           (_ccx60::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccx60::I64 == 0) goto ccx62; else goto ccx61;
       ccx62: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccx61: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccx60::I64;
           R2 = lvl2_rcwZZ_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.804030207 UTC

[section ""data" . lvl4_rcx01_closure" {
     lvl4_rcx01_closure:
         const GHC.IO.Exception.IOError_con_info;
         const GHC.Base.Nothing_closure+1;
         const GHC.IO.Exception.UnsupportedOperation_closure+1;
         const lvl1_rcwZY_closure;
         const lvl3_rcx00_closure;
         const GHC.Base.Nothing_closure+1;
         const GHC.Base.Nothing_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.806152311 UTC

[section ""data" . lvl5_rcx02_closure" {
     lvl5_rcx02_closure:
         const lvl5_rcx02_info;
         const 0;
         const 0;
         const 0;
 },
 lvl5_rcx02_entry() //  [R1]
         { info_tbl: [(ccx6l,
                       label: lvl5_rcx02_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx6l: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccx6m; else goto ccx6n;
       ccx6m: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccx6n: // global
           (_ccx6i::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccx6i::I64 == 0) goto ccx6k; else goto ccx6j;
       ccx6k: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccx6j: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccx6i::I64;
           R2 = lvl4_rcx01_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.810140162 UTC

[section ""data" . System.CPUTime.Unsupported.getCPUTime1_closure" {
     System.CPUTime.Unsupported.getCPUTime1_closure:
         const System.CPUTime.Unsupported.getCPUTime1_info;
         const 0;
 },
 System.CPUTime.Unsupported.getCPUTime1_entry() //  []
         { info_tbl: [(ccx6B,
                       label: System.CPUTime.Unsupported.getCPUTime1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx6B: // global
           R1 = lvl5_rcx02_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.813512836 UTC

[section ""data" . getCPUTime2_rcx03_closure" {
     getCPUTime2_rcx03_closure:
         const getCPUTime2_rcx03_info;
         const 0;
 },
 getCPUTime2_rcx03_entry() //  []
         { info_tbl: [(ccx6M,
                       label: getCPUTime2_rcx03_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx6M: // global
           R1 = lvl5_rcx02_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.816842627 UTC

[section ""data" . System.CPUTime.Unsupported.getCPUTime_closure" {
     System.CPUTime.Unsupported.getCPUTime_closure:
         const System.CPUTime.Unsupported.getCPUTime_info;
         const 0;
 },
 System.CPUTime.Unsupported.getCPUTime_entry() //  []
         { info_tbl: [(ccx6X,
                       label: System.CPUTime.Unsupported.getCPUTime_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx6X: // global
           call getCPUTime2_rcx03_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.82018894 UTC

[section ""cstring" . lvl6_rcx04_bytes" {
     lvl6_rcx04_bytes:
         I8[] [99,112,117,84,105,109,101,80,114,101,99,105,115,105,111,110]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.822694336 UTC

[section ""data" . lvl7_rcx05_closure" {
     lvl7_rcx05_closure:
         const lvl7_rcx05_info;
         const 0;
         const 0;
         const 0;
 },
 lvl7_rcx05_entry() //  [R1]
         { info_tbl: [(ccx7b,
                       label: lvl7_rcx05_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx7b: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccx7c; else goto ccx7d;
       ccx7c: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccx7d: // global
           (_ccx78::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccx78::I64 == 0) goto ccx7a; else goto ccx79;
       ccx7a: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccx79: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccx78::I64;
           R2 = lvl6_rcx04_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.826658673 UTC

[section ""data" . lvl8_rcx06_closure" {
     lvl8_rcx06_closure:
         const GHC.IO.Exception.IOError_con_info;
         const GHC.Base.Nothing_closure+1;
         const GHC.IO.Exception.UnsupportedOperation_closure+1;
         const lvl7_rcx05_closure;
         const lvl3_rcx00_closure;
         const GHC.Base.Nothing_closure+1;
         const GHC.Base.Nothing_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.828694767 UTC

[section ""data" . lvl9_rcx07_closure" {
     lvl9_rcx07_closure:
         const lvl9_rcx07_info;
         const 0;
         const 0;
         const 0;
 },
 lvl9_rcx07_entry() //  [R1]
         { info_tbl: [(ccx7t,
                       label: lvl9_rcx07_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx7t: // global
           if ((Sp + -16) < SpLim) (likely: False) goto ccx7u; else goto ccx7v;
       ccx7u: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       ccx7v: // global
           (_ccx7q::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_ccx7q::I64 == 0) goto ccx7s; else goto ccx7r;
       ccx7s: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       ccx7r: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _ccx7q::I64;
           R2 = lvl8_rcx06_closure+1;
           Sp = Sp - 16;
           call GHC.IO.Exception.$fExceptionIOException_$ctoException_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.832851466 UTC

[section ""data" . System.CPUTime.Unsupported.getCpuTimePrecision1_closure" {
     System.CPUTime.Unsupported.getCpuTimePrecision1_closure:
         const System.CPUTime.Unsupported.getCpuTimePrecision1_info;
         const 0;
 },
 System.CPUTime.Unsupported.getCpuTimePrecision1_entry() //  []
         { info_tbl: [(ccx7I,
                       label: System.CPUTime.Unsupported.getCpuTimePrecision1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx7I: // global
           R1 = lvl9_rcx07_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.836943921 UTC

[section ""data" . getCpuTimePrecision2_rcx08_closure" {
     getCpuTimePrecision2_rcx08_closure:
         const getCpuTimePrecision2_rcx08_info;
         const 0;
 },
 getCpuTimePrecision2_rcx08_entry() //  []
         { info_tbl: [(ccx7T,
                       label: getCpuTimePrecision2_rcx08_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx7T: // global
           R1 = lvl9_rcx07_closure;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.840711342 UTC

[section ""data" . System.CPUTime.Unsupported.getCpuTimePrecision_closure" {
     System.CPUTime.Unsupported.getCpuTimePrecision_closure:
         const System.CPUTime.Unsupported.getCpuTimePrecision_info;
         const 0;
 },
 System.CPUTime.Unsupported.getCpuTimePrecision_entry() //  []
         { info_tbl: [(ccx84,
                       label: System.CPUTime.Unsupported.getCpuTimePrecision_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccx84: // global
           call getCpuTimePrecision2_rcx08_entry() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.843811575 UTC

[section ""cstring" . System.CPUTime.Unsupported.$trModule4_bytes" {
     System.CPUTime.Unsupported.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.845543608 UTC

[section ""data" . System.CPUTime.Unsupported.$trModule3_closure" {
     System.CPUTime.Unsupported.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.Unsupported.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.847192571 UTC

[section ""cstring" . System.CPUTime.Unsupported.$trModule2_bytes" {
     System.CPUTime.Unsupported.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,67,80,85,84,105,109,101,46,85,110,115,117,112,112,111,114,116,101,100]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.848910343 UTC

[section ""data" . System.CPUTime.Unsupported.$trModule1_closure" {
     System.CPUTime.Unsupported.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.Unsupported.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.850773893 UTC

[section ""data" . System.CPUTime.Unsupported.$trModule_closure" {
     System.CPUTime.Unsupported.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.CPUTime.Unsupported.$trModule3_closure+1;
         const System.CPUTime.Unsupported.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.852619696 UTC

[section ""relreadonly" . Scx6o_srt" {
     Scx6o_srt:
         const GHC.IO.Exception.$fExceptionIOException_$ctoException_closure;
         const lvl4_rcx01_closure;
         const lvl5_rcx02_closure;
         const getCPUTime2_rcx03_closure;
         const lvl8_rcx06_closure;
         const lvl9_rcx07_closure;
         const getCpuTimePrecision2_rcx08_closure;
 }]

