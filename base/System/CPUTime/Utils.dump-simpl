
==================== Tidy Core ====================
2018-03-16 16:07:25.482570463 UTC

Result size of Tidy Core
  = {terms: 35, types: 20, coercions: 3, joins: 0/0}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.CPUTime.Utils.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
System.CPUTime.Utils.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.CPUTime.Utils.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.CPUTime.Utils.$trModule3
  = GHC.Types.TrNameS System.CPUTime.Utils.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.CPUTime.Utils.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 60 0}]
System.CPUTime.Utils.$trModule2 = "System.CPUTime.Utils"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.CPUTime.Utils.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.CPUTime.Utils.$trModule1
  = GHC.Types.TrNameS System.CPUTime.Utils.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
System.CPUTime.Utils.$trModule :: GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
System.CPUTime.Utils.$trModule
  = GHC.Types.Module
      System.CPUTime.Utils.$trModule3 System.CPUTime.Utils.$trModule1

-- RHS size: {terms: 6, types: 3, coercions: 1, joins: 0/0}
csuSecondsToInteger :: CSUSeconds -> Integer
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dcwTg [Occ=Once] :: CSUSeconds) ->
                 case ds_dcwTg
                      `cast` (Foreign.C.Types.N:CSUSeconds[0]
                              :: (CSUSeconds :: *) ~R# (GHC.Int.Int64 :: *))
                 of
                 { GHC.Int.I64# x#_i7O0F [Occ=Once] ->
                 integer-simple-0.1.1.1:GHC.Integer.Type.smallInteger x#_i7O0F
                 }}]
csuSecondsToInteger
  = \ (ds_dcwTg :: CSUSeconds) ->
      case ds_dcwTg
           `cast` (Foreign.C.Types.N:CSUSeconds[0]
                   :: (CSUSeconds :: *) ~R# (GHC.Int.Int64 :: *))
      of
      { GHC.Int.I64# x#_i7O0F ->
      integer-simple-0.1.1.1:GHC.Integer.Type.smallInteger x#_i7O0F
      }

-- RHS size: {terms: 6, types: 3, coercions: 1, joins: 0/0}
cTimeToInteger :: CTime -> Integer
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dcwTk [Occ=Once] :: CTime) ->
                 case ds_dcwTk
                      `cast` (Foreign.C.Types.N:CTime[0]
                              :: (CTime :: *) ~R# (GHC.Int.Int64 :: *))
                 of
                 { GHC.Int.I64# x#_i7O0F [Occ=Once] ->
                 integer-simple-0.1.1.1:GHC.Integer.Type.smallInteger x#_i7O0F
                 }}]
cTimeToInteger
  = \ (ds_dcwTk :: CTime) ->
      case ds_dcwTk
           `cast` (Foreign.C.Types.N:CTime[0]
                   :: (CTime :: *) ~R# (GHC.Int.Int64 :: *))
      of
      { GHC.Int.I64# x#_i7O0F ->
      integer-simple-0.1.1.1:GHC.Integer.Type.smallInteger x#_i7O0F
      }

-- RHS size: {terms: 6, types: 3, coercions: 1, joins: 0/0}
cClockToInteger :: CClock -> Integer
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dcwTo [Occ=Once] :: CClock) ->
                 case ds_dcwTo
                      `cast` (Foreign.C.Types.N:CClock[0]
                              :: (CClock :: *) ~R# (GHC.Int.Int64 :: *))
                 of
                 { GHC.Int.I64# x#_i7O0F [Occ=Once] ->
                 integer-simple-0.1.1.1:GHC.Integer.Type.smallInteger x#_i7O0F
                 }}]
cClockToInteger
  = \ (ds_dcwTo :: CClock) ->
      case ds_dcwTo
           `cast` (Foreign.C.Types.N:CClock[0]
                   :: (CClock :: *) ~R# (GHC.Int.Int64 :: *))
      of
      { GHC.Int.I64# x#_i7O0F ->
      integer-simple-0.1.1.1:GHC.Integer.Type.smallInteger x#_i7O0F
      }


