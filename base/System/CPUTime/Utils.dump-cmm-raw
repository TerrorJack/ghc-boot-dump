
==================== Raw Cmm ====================
2018-03-16 16:07:25.506294537 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:07:25.507518542 UTC

[section ""cstring" . System.CPUTime.Utils.$trModule4_bytes" {
     System.CPUTime.Utils.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:25.509574448 UTC

[section ""data" . System.CPUTime.Utils.$trModule3_closure" {
     System.CPUTime.Utils.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.Utils.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:25.511335358 UTC

[section ""cstring" . System.CPUTime.Utils.$trModule2_bytes" {
     System.CPUTime.Utils.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,67,80,85,84,105,109,101,46,85,116,105,108,115]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:25.513158893 UTC

[section ""data" . System.CPUTime.Utils.$trModule1_closure" {
     System.CPUTime.Utils.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.Utils.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:25.515039045 UTC

[section ""data" . System.CPUTime.Utils.$trModule_closure" {
     System.CPUTime.Utils.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.CPUTime.Utils.$trModule3_closure+1;
         const System.CPUTime.Utils.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:25.517740876 UTC

[section ""data" . System.CPUTime.Utils.csuSecondsToInteger_closure" {
     System.CPUTime.Utils.csuSecondsToInteger_closure:
         const System.CPUTime.Utils.csuSecondsToInteger_info;
 },
 System.CPUTime.Utils.csuSecondsToInteger_entry() //  [R2]
         { []
         }
     {offset
       ccwWa: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccwWb; else goto ccwWc;
       ccwWb: // global
           R2 = R2;
           R1 = System.CPUTime.Utils.csuSecondsToInteger_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccwWc: // global
           I64[Sp - 8] = block_ccwW7_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucwWg; else goto ccwW8;
       ucwWg: // global
           call _ccwW7(R1) args: 0, res: 0, upd: 0;
       ccwW8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.CPUTime.Utils.csuSecondsToInteger_info" {
     System.CPUTime.Utils.csuSecondsToInteger_info:
         const System.CPUTime.Utils.csuSecondsToInteger_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _ccwW7() //  [R1]
         { []
         }
     {offset
       ccwW7: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccwW7_info" {
     block_ccwW7_info:
         const _ccwW7;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:25.524157197 UTC

[section ""data" . System.CPUTime.Utils.cTimeToInteger_closure" {
     System.CPUTime.Utils.cTimeToInteger_closure:
         const System.CPUTime.Utils.cTimeToInteger_info;
 },
 System.CPUTime.Utils.cTimeToInteger_entry() //  [R2]
         { []
         }
     {offset
       ccwWx: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccwWy; else goto ccwWz;
       ccwWy: // global
           R2 = R2;
           R1 = System.CPUTime.Utils.cTimeToInteger_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccwWz: // global
           I64[Sp - 8] = block_ccwWu_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucwWD; else goto ccwWv;
       ucwWD: // global
           call _ccwWu(R1) args: 0, res: 0, upd: 0;
       ccwWv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.CPUTime.Utils.cTimeToInteger_info" {
     System.CPUTime.Utils.cTimeToInteger_info:
         const System.CPUTime.Utils.cTimeToInteger_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _ccwWu() //  [R1]
         { []
         }
     {offset
       ccwWu: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccwWu_info" {
     block_ccwWu_info:
         const _ccwWu;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:25.530013989 UTC

[section ""data" . System.CPUTime.Utils.cClockToInteger_closure" {
     System.CPUTime.Utils.cClockToInteger_closure:
         const System.CPUTime.Utils.cClockToInteger_info;
 },
 System.CPUTime.Utils.cClockToInteger_entry() //  [R2]
         { []
         }
     {offset
       ccwWU: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccwWV; else goto ccwWW;
       ccwWV: // global
           R2 = R2;
           R1 = System.CPUTime.Utils.cClockToInteger_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccwWW: // global
           I64[Sp - 8] = block_ccwWR_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucwX0; else goto ccwWS;
       ucwX0: // global
           call _ccwWR(R1) args: 0, res: 0, upd: 0;
       ccwWS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.CPUTime.Utils.cClockToInteger_info" {
     System.CPUTime.Utils.cClockToInteger_info:
         const System.CPUTime.Utils.cClockToInteger_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _ccwWR() //  [R1]
         { []
         }
     {offset
       ccwWR: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccwWR_info" {
     block_ccwWR_info:
         const _ccwWR;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:25.53493471 UTC

[section ""relreadonly" . ScwVh_srt" { ScwVh_srt:
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:25.56754964 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:07:25.568693057 UTC

[section ""cstring" . System.CPUTime.Utils.$trModule4_bytes" {
     System.CPUTime.Utils.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:25.570522783 UTC

[section ""data" . System.CPUTime.Utils.$trModule3_closure" {
     System.CPUTime.Utils.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.Utils.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:25.572270247 UTC

[section ""cstring" . System.CPUTime.Utils.$trModule2_bytes" {
     System.CPUTime.Utils.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,67,80,85,84,105,109,101,46,85,116,105,108,115]
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:25.574028507 UTC

[section ""data" . System.CPUTime.Utils.$trModule1_closure" {
     System.CPUTime.Utils.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.Utils.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:25.575806828 UTC

[section ""data" . System.CPUTime.Utils.$trModule_closure" {
     System.CPUTime.Utils.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.CPUTime.Utils.$trModule3_closure+1;
         const System.CPUTime.Utils.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:25.578515651 UTC

[section ""data" . System.CPUTime.Utils.csuSecondsToInteger_closure" {
     System.CPUTime.Utils.csuSecondsToInteger_closure:
         const System.CPUTime.Utils.csuSecondsToInteger_info;
 },
 System.CPUTime.Utils.csuSecondsToInteger_entry() //  [R2]
         { []
         }
     {offset
       ccwXw: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccwXx; else goto ccwXy;
       ccwXx: // global
           R2 = R2;
           R1 = System.CPUTime.Utils.csuSecondsToInteger_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccwXy: // global
           I64[Sp - 8] = block_ccwXt_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucwXC; else goto ccwXu;
       ucwXC: // global
           call _ccwXt(R1) args: 0, res: 0, upd: 0;
       ccwXu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.CPUTime.Utils.csuSecondsToInteger_info" {
     System.CPUTime.Utils.csuSecondsToInteger_info:
         const System.CPUTime.Utils.csuSecondsToInteger_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _ccwXt() //  [R1]
         { []
         }
     {offset
       ccwXt: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccwXt_info" {
     block_ccwXt_info:
         const _ccwXt;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:25.584254674 UTC

[section ""data" . System.CPUTime.Utils.cTimeToInteger_closure" {
     System.CPUTime.Utils.cTimeToInteger_closure:
         const System.CPUTime.Utils.cTimeToInteger_info;
 },
 System.CPUTime.Utils.cTimeToInteger_entry() //  [R2]
         { []
         }
     {offset
       ccwXU: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccwXV; else goto ccwXW;
       ccwXV: // global
           R2 = R2;
           R1 = System.CPUTime.Utils.cTimeToInteger_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccwXW: // global
           I64[Sp - 8] = block_ccwXR_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucwY0; else goto ccwXS;
       ucwY0: // global
           call _ccwXR(R1) args: 0, res: 0, upd: 0;
       ccwXS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.CPUTime.Utils.cTimeToInteger_info" {
     System.CPUTime.Utils.cTimeToInteger_info:
         const System.CPUTime.Utils.cTimeToInteger_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _ccwXR() //  [R1]
         { []
         }
     {offset
       ccwXR: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccwXR_info" {
     block_ccwXR_info:
         const _ccwXR;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:25.590005117 UTC

[section ""data" . System.CPUTime.Utils.cClockToInteger_closure" {
     System.CPUTime.Utils.cClockToInteger_closure:
         const System.CPUTime.Utils.cClockToInteger_info;
 },
 System.CPUTime.Utils.cClockToInteger_entry() //  [R2]
         { []
         }
     {offset
       ccwYi: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccwYj; else goto ccwYk;
       ccwYj: // global
           R2 = R2;
           R1 = System.CPUTime.Utils.cClockToInteger_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccwYk: // global
           I64[Sp - 8] = block_ccwYf_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucwYo; else goto ccwYg;
       ucwYo: // global
           call _ccwYf(R1) args: 0, res: 0, upd: 0;
       ccwYg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . System.CPUTime.Utils.cClockToInteger_info" {
     System.CPUTime.Utils.cClockToInteger_info:
         const System.CPUTime.Utils.cClockToInteger_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _ccwYf() //  [R1]
         { []
         }
     {offset
       ccwYf: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_ccwYf_info" {
     block_ccwYf_info:
         const _ccwYf;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:07:25.595588849 UTC

[section ""relreadonly" . ScwYz_srt" { ScwYz_srt:
 }]

