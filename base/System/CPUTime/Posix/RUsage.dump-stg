
==================== Pre unarise: ====================
2018-03-16 16:07:31.625695695 UTC

System.CPUTime.Posix.RUsage.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

System.CPUTime.Posix.RUsage.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.CPUTime.Posix.RUsage.$trModule4];

System.CPUTime.Posix.RUsage.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "System.CPUTime.Posix.RUsage"#;

System.CPUTime.Posix.RUsage.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.CPUTime.Posix.RUsage.$trModule2];

System.CPUTime.Posix.RUsage.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [System.CPUTime.Posix.RUsage.$trModule3
                                     System.CPUTime.Posix.RUsage.$trModule1];

sat_scCRx :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [465#];

sat_scCRy :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scCRx GHC.Types.[]];

sat_scCRw :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1420103680#];

sat_scCRz :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scCRw sat_scCRy];

System.CPUTime.Posix.RUsage.getCpuTimePrecision3
  :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_scCRz;

System.CPUTime.Posix.RUsage.getCpuTimePrecision2
  :: GHC.Integer.Type.Integer
[GblId] =
    [] \u []
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
          (#,#) _ [Occ=Dead] ds1_scCRD [Occ=Once] ->
              case
                  GHC.Integer.Type.smallInteger ds1_scCRD
              of
              ww1_scCRE [Dmd=<S,U>]
              { __DEFAULT ->
                    case GHC.Integer.Type.absInteger ww1_scCRE of sat_scCRH {
                      __DEFAULT ->
                          case GHC.Integer.Type.signumInteger ww1_scCRE of sat_scCRF {
                            __DEFAULT ->
                                case
                                    GHC.Integer.Type.timesInteger
                                        System.CPUTime.Posix.RUsage.getCpuTimePrecision3 sat_scCRF
                                of
                                sat_scCRG
                                { __DEFAULT ->
                                      case GHC.Real.$w$sreduce sat_scCRG sat_scCRH of {
                                        (#,#) ww2_scCRJ [Occ=Once] ww3_scCRK [Occ=Once] ->
                                            GHC.Real.$w$s$cround
                                                GHC.Real.$fIntegralInteger ww2_scCRJ ww3_scCRK;
                                      };
                                };
                          };
                    };
              };
        };

System.CPUTime.Posix.RUsage.getCpuTimePrecision1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [s_scCRL]
        (#,#) [s_scCRL System.CPUTime.Posix.RUsage.getCpuTimePrecision2];

System.CPUTime.Posix.RUsage.getCpuTimePrecision
  :: GHC.Types.IO GHC.Integer.Type.Integer
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_B1]
        System.CPUTime.Posix.RUsage.getCpuTimePrecision1 eta_B1;

lvl_rcCRt :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "getrusage"#;

lvl1_rcCRu :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_rcCRt;

System.CPUTime.Posix.RUsage.getCPUTime2
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [ds2_scCRM ds3_scCRN]
        case narrow32Int# [ds3_scCRN] of sat_scCRO {
          __DEFAULT -> Foreign.C.Error.$wlvl lvl1_rcCRu sat_scCRO ds2_scCRM;
        };

sat_scCRP :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1000000#];

sat_scCRQ :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scCRP GHC.Types.[]];

System.CPUTime.Posix.RUsage.getCPUTime3 :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_scCRQ;

System.CPUTime.Posix.RUsage.getCPUTime1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_scCRR]
        case newPinnedByteArray# [272# eta_scCRR] of {
          (#,#) ipv_scCRT [Occ=Once] ipv1_scCRU [Occ=Once] ->
              case unsafeFreezeByteArray# [ipv1_scCRU ipv_scCRT] of {
                (#,#) ipv2_scCRW [Occ=Once] ipv3_scCRX ->
                    case
                        byteArrayContents# [ipv3_scCRX]
                    of
                    p_rusage_scCRY [Dmd=<S,U>]
                    { __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [0# p_rusage_scCRY ipv2_scCRW] of {
                            (#,#) ds_scCS1 [Occ=Once*] ds4_scCS2 [Occ=Once] ->
                                case narrow32Int# [ds4_scCS2] of {
                                  __DEFAULT ->
                                      case readInt64OffAddr# [p_rusage_scCRY 0# ds_scCS1] of {
                                        (#,#) ipv4_scCS5 [Occ=Once] ipv5_scCS6 [Occ=Once] ->
                                            case plusAddr# [p_rusage_scCRY 8#] of sat_scCS7 {
                                              __DEFAULT ->
                                                  case
                                                      readInt64OffAddr# [sat_scCS7 0# ipv4_scCS5]
                                                  of
                                                  { (#,#) ipv6_scCS9 [Occ=Once]
                                                          ipv7_scCSa [Occ=Once] ->
                                                        case
                                                            plusAddr# [p_rusage_scCRY 16#]
                                                        of
                                                        ru_stime_scCSb [Dmd=<S,U>]
                                                        { __DEFAULT ->
                                                              case
                                                                  readInt64OffAddr# [ru_stime_scCSb
                                                                                     0#
                                                                                     ipv6_scCS9]
                                                              of
                                                              { (#,#) ipv8_scCSd [Occ=Once]
                                                                      ipv9_scCSe [Occ=Once] ->
                                                                    case
                                                                        plusAddr# [ru_stime_scCSb
                                                                                   8#]
                                                                    of
                                                                    sat_scCSf
                                                                    { __DEFAULT ->
                                                                          case
                                                                              readInt64OffAddr# [sat_scCSf
                                                                                                 0#
                                                                                                 ipv8_scCSd]
                                                                          of
                                                                          { (#,#) ipv10_scCSh [Occ=Once]
                                                                                  ipv11_scCSi [Occ=Once] ->
                                                                                case
                                                                                    touch# [ipv3_scCRX
                                                                                            ipv10_scCSh]
                                                                                of
                                                                                s4_scCSj
                                                                                { __DEFAULT ->
                                                                                      let {
                                                                                        sat_scCSt [Occ=Once]
                                                                                          :: GHC.Integer.Type.Integer
                                                                                        [LclId] =
                                                                                            [ipv5_scCS6
                                                                                             ipv7_scCSa
                                                                                             ipv9_scCSe
                                                                                             ipv11_scCSi] \u []
                                                                                                case
                                                                                                    GHC.Integer.Type.smallInteger
                                                                                                        ipv11_scCSi
                                                                                                of
                                                                                                sat_scCSr
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          GHC.Integer.Type.smallInteger
                                                                                                              ipv9_scCSe
                                                                                                      of
                                                                                                      sat_scCSo
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                GHC.Integer.Type.timesInteger
                                                                                                                    sat_scCSo
                                                                                                                    System.CPUTime.Posix.RUsage.getCPUTime3
                                                                                                            of
                                                                                                            sat_scCSp
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      GHC.Integer.Type.smallInteger
                                                                                                                          ipv7_scCSa
                                                                                                                  of
                                                                                                                  sat_scCSm
                                                                                                                  { __DEFAULT ->
                                                                                                                        case
                                                                                                                            GHC.Integer.Type.smallInteger
                                                                                                                                ipv5_scCS6
                                                                                                                        of
                                                                                                                        sat_scCSk
                                                                                                                        { __DEFAULT ->
                                                                                                                              case
                                                                                                                                  GHC.Integer.Type.timesInteger
                                                                                                                                      sat_scCSk
                                                                                                                                      System.CPUTime.Posix.RUsage.getCPUTime3
                                                                                                                              of
                                                                                                                              sat_scCSl
                                                                                                                              { __DEFAULT ->
                                                                                                                                    case
                                                                                                                                        GHC.Integer.Type.plusInteger
                                                                                                                                            sat_scCSl
                                                                                                                                            sat_scCSm
                                                                                                                                    of
                                                                                                                                    sat_scCSn
                                                                                                                                    { __DEFAULT ->
                                                                                                                                          case
                                                                                                                                              GHC.Integer.Type.plusInteger
                                                                                                                                                  sat_scCSn
                                                                                                                                                  sat_scCSp
                                                                                                                                          of
                                                                                                                                          sat_scCSq
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                case
                                                                                                                                                    GHC.Integer.Type.plusInteger
                                                                                                                                                        sat_scCSq
                                                                                                                                                        sat_scCSr
                                                                                                                                                of
                                                                                                                                                sat_scCSs
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      GHC.Integer.Type.timesInteger
                                                                                                                                                          sat_scCSs
                                                                                                                                                          System.CPUTime.Posix.RUsage.getCPUTime3;
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                      } in 
                                                                                        (#,#) [s4_scCSj
                                                                                               sat_scCSt];
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                  -1# ->
                                      case __pkg_ccall base-4.11.0.0 [ds_scCS1] of {
                                        (#,#) ds5_scCSw [Occ=Once] ds3_scCSx [Occ=Once] ->
                                            System.CPUTime.Posix.RUsage.getCPUTime2
                                                ds5_scCSw ds3_scCSx;
                                      };
                                };
                          };
                    };
              };
        };

System.CPUTime.Posix.RUsage.getCPUTime
  :: GHC.Types.IO GHC.Integer.Type.Integer
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_B1] System.CPUTime.Posix.RUsage.getCPUTime1 eta_B1;


==================== STG syntax: ====================
2018-03-16 16:07:31.630032769 UTC

System.CPUTime.Posix.RUsage.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

System.CPUTime.Posix.RUsage.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.CPUTime.Posix.RUsage.$trModule4];

System.CPUTime.Posix.RUsage.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "System.CPUTime.Posix.RUsage"#;

System.CPUTime.Posix.RUsage.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.CPUTime.Posix.RUsage.$trModule2];

System.CPUTime.Posix.RUsage.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [System.CPUTime.Posix.RUsage.$trModule3
                                     System.CPUTime.Posix.RUsage.$trModule1];

sat_scCRx :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [465#];

sat_scCRy :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scCRx GHC.Types.[]];

sat_scCRw :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1420103680#];

sat_scCRz :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scCRw sat_scCRy];

System.CPUTime.Posix.RUsage.getCpuTimePrecision3
  :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_scCRz;

System.CPUTime.Posix.RUsage.getCpuTimePrecision2
  :: GHC.Integer.Type.Integer
[GblId] =
    [] \u []
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
          Unit# ds1_scCRD [Occ=Once] ->
              case
                  GHC.Integer.Type.smallInteger ds1_scCRD
              of
              ww1_scCRE [Dmd=<S,U>]
              { __DEFAULT ->
                    case GHC.Integer.Type.absInteger ww1_scCRE of sat_scCRH {
                      __DEFAULT ->
                          case GHC.Integer.Type.signumInteger ww1_scCRE of sat_scCRF {
                            __DEFAULT ->
                                case
                                    GHC.Integer.Type.timesInteger
                                        System.CPUTime.Posix.RUsage.getCpuTimePrecision3 sat_scCRF
                                of
                                sat_scCRG
                                { __DEFAULT ->
                                      case GHC.Real.$w$sreduce sat_scCRG sat_scCRH of {
                                        (#,#) ww2_scCRJ [Occ=Once] ww3_scCRK [Occ=Once] ->
                                            GHC.Real.$w$s$cround
                                                GHC.Real.$fIntegralInteger ww2_scCRJ ww3_scCRK;
                                      };
                                };
                          };
                    };
              };
        };

System.CPUTime.Posix.RUsage.getCpuTimePrecision1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        Unit# [System.CPUTime.Posix.RUsage.getCpuTimePrecision2];

System.CPUTime.Posix.RUsage.getCpuTimePrecision
  :: GHC.Types.IO GHC.Integer.Type.Integer
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        System.CPUTime.Posix.RUsage.getCpuTimePrecision1 GHC.Prim.void#;

lvl_rcCRt :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "getrusage"#;

lvl1_rcCRu :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_rcCRt;

System.CPUTime.Posix.RUsage.getCPUTime2
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [void_0E ds3_scCRN]
        case narrow32Int# [ds3_scCRN] of sat_scCRO {
          __DEFAULT ->
              Foreign.C.Error.$wlvl lvl1_rcCRu sat_scCRO GHC.Prim.void#;
        };

sat_scCRP :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1000000#];

sat_scCRQ :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scCRP GHC.Types.[]];

System.CPUTime.Posix.RUsage.getCPUTime3 :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_scCRQ;

System.CPUTime.Posix.RUsage.getCPUTime1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        case newPinnedByteArray# [272# GHC.Prim.void#] of {
          Unit# ipv1_scCRU [Occ=Once] ->
              case unsafeFreezeByteArray# [ipv1_scCRU GHC.Prim.void#] of {
                Unit# ipv3_scCRX ->
                    case
                        byteArrayContents# [ipv3_scCRX]
                    of
                    p_rusage_scCRY [Dmd=<S,U>]
                    { __DEFAULT ->
                          case
                              __pkg_ccall base-4.11.0.0 [0# p_rusage_scCRY GHC.Prim.void#]
                          of
                          { Unit# ds4_scCS2 [Occ=Once] ->
                                case narrow32Int# [ds4_scCS2] of {
                                  __DEFAULT ->
                                      case readInt64OffAddr# [p_rusage_scCRY 0# GHC.Prim.void#] of {
                                        Unit# ipv5_scCS6 [Occ=Once] ->
                                            case plusAddr# [p_rusage_scCRY 8#] of sat_scCS7 {
                                              __DEFAULT ->
                                                  case
                                                      readInt64OffAddr# [sat_scCS7
                                                                         0#
                                                                         GHC.Prim.void#]
                                                  of
                                                  { Unit# ipv7_scCSa [Occ=Once] ->
                                                        case
                                                            plusAddr# [p_rusage_scCRY 16#]
                                                        of
                                                        ru_stime_scCSb [Dmd=<S,U>]
                                                        { __DEFAULT ->
                                                              case
                                                                  readInt64OffAddr# [ru_stime_scCSb
                                                                                     0#
                                                                                     GHC.Prim.void#]
                                                              of
                                                              { Unit# ipv9_scCSe [Occ=Once] ->
                                                                    case
                                                                        plusAddr# [ru_stime_scCSb
                                                                                   8#]
                                                                    of
                                                                    sat_scCSf
                                                                    { __DEFAULT ->
                                                                          case
                                                                              readInt64OffAddr# [sat_scCSf
                                                                                                 0#
                                                                                                 GHC.Prim.void#]
                                                                          of
                                                                          { Unit# ipv11_scCSi [Occ=Once] ->
                                                                                case
                                                                                    touch# [ipv3_scCRX
                                                                                            GHC.Prim.void#]
                                                                                of
                                                                                s4_scCSj
                                                                                { (##) ->
                                                                                      let {
                                                                                        sat_scCSt [Occ=Once]
                                                                                          :: GHC.Integer.Type.Integer
                                                                                        [LclId] =
                                                                                            [ipv5_scCS6
                                                                                             ipv7_scCSa
                                                                                             ipv9_scCSe
                                                                                             ipv11_scCSi] \u []
                                                                                                case
                                                                                                    GHC.Integer.Type.smallInteger
                                                                                                        ipv11_scCSi
                                                                                                of
                                                                                                sat_scCSr
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          GHC.Integer.Type.smallInteger
                                                                                                              ipv9_scCSe
                                                                                                      of
                                                                                                      sat_scCSo
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                GHC.Integer.Type.timesInteger
                                                                                                                    sat_scCSo
                                                                                                                    System.CPUTime.Posix.RUsage.getCPUTime3
                                                                                                            of
                                                                                                            sat_scCSp
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      GHC.Integer.Type.smallInteger
                                                                                                                          ipv7_scCSa
                                                                                                                  of
                                                                                                                  sat_scCSm
                                                                                                                  { __DEFAULT ->
                                                                                                                        case
                                                                                                                            GHC.Integer.Type.smallInteger
                                                                                                                                ipv5_scCS6
                                                                                                                        of
                                                                                                                        sat_scCSk
                                                                                                                        { __DEFAULT ->
                                                                                                                              case
                                                                                                                                  GHC.Integer.Type.timesInteger
                                                                                                                                      sat_scCSk
                                                                                                                                      System.CPUTime.Posix.RUsage.getCPUTime3
                                                                                                                              of
                                                                                                                              sat_scCSl
                                                                                                                              { __DEFAULT ->
                                                                                                                                    case
                                                                                                                                        GHC.Integer.Type.plusInteger
                                                                                                                                            sat_scCSl
                                                                                                                                            sat_scCSm
                                                                                                                                    of
                                                                                                                                    sat_scCSn
                                                                                                                                    { __DEFAULT ->
                                                                                                                                          case
                                                                                                                                              GHC.Integer.Type.plusInteger
                                                                                                                                                  sat_scCSn
                                                                                                                                                  sat_scCSp
                                                                                                                                          of
                                                                                                                                          sat_scCSq
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                case
                                                                                                                                                    GHC.Integer.Type.plusInteger
                                                                                                                                                        sat_scCSq
                                                                                                                                                        sat_scCSr
                                                                                                                                                of
                                                                                                                                                sat_scCSs
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      GHC.Integer.Type.timesInteger
                                                                                                                                                          sat_scCSs
                                                                                                                                                          System.CPUTime.Posix.RUsage.getCPUTime3;
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                      } in 
                                                                                        Unit# [sat_scCSt];
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                  -1# ->
                                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                                        Unit# ds3_scCSx [Occ=Once] ->
                                            System.CPUTime.Posix.RUsage.getCPUTime2
                                                GHC.Prim.void# ds3_scCSx;
                                      };
                                };
                          };
                    };
              };
        };

System.CPUTime.Posix.RUsage.getCPUTime
  :: GHC.Types.IO GHC.Integer.Type.Integer
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        System.CPUTime.Posix.RUsage.getCPUTime1 GHC.Prim.void#;


==================== Pre unarise: ====================
2018-03-16 16:07:31.973304593 UTC

System.CPUTime.Posix.RUsage.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

System.CPUTime.Posix.RUsage.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.CPUTime.Posix.RUsage.$trModule4];

System.CPUTime.Posix.RUsage.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "System.CPUTime.Posix.RUsage"#;

System.CPUTime.Posix.RUsage.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.CPUTime.Posix.RUsage.$trModule2];

System.CPUTime.Posix.RUsage.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [System.CPUTime.Posix.RUsage.$trModule3
                                     System.CPUTime.Posix.RUsage.$trModule1];

sat_scD3K :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [465#];

sat_scD3L :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scD3K GHC.Types.[]];

sat_scD3J :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1420103680#];

sat_scD3M :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scD3J sat_scD3L];

System.CPUTime.Posix.RUsage.getCpuTimePrecision3
  :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_scD3M;

System.CPUTime.Posix.RUsage.getCpuTimePrecision2
  :: GHC.Integer.Type.Integer
[GblId] =
    [] \u []
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
          (#,#) _ [Occ=Dead] ds1_scD3Q [Occ=Once] ->
              case
                  GHC.Integer.Type.smallInteger ds1_scD3Q
              of
              ww1_scD3R [Dmd=<S,U>]
              { __DEFAULT ->
                    case GHC.Integer.Type.absInteger ww1_scD3R of sat_scD3U {
                      __DEFAULT ->
                          case GHC.Integer.Type.signumInteger ww1_scD3R of sat_scD3S {
                            __DEFAULT ->
                                case
                                    GHC.Integer.Type.timesInteger
                                        System.CPUTime.Posix.RUsage.getCpuTimePrecision3 sat_scD3S
                                of
                                sat_scD3T
                                { __DEFAULT ->
                                      case GHC.Real.$w$sreduce sat_scD3T sat_scD3U of {
                                        (#,#) ww2_scD3W [Occ=Once] ww3_scD3X [Occ=Once] ->
                                            GHC.Real.$w$s$cround
                                                GHC.Real.$fIntegralInteger ww2_scD3W ww3_scD3X;
                                      };
                                };
                          };
                    };
              };
        };

System.CPUTime.Posix.RUsage.getCpuTimePrecision1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [s_scD3Y]
        (#,#) [s_scD3Y System.CPUTime.Posix.RUsage.getCpuTimePrecision2];

System.CPUTime.Posix.RUsage.getCpuTimePrecision
  :: GHC.Types.IO GHC.Integer.Type.Integer
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_B1]
        System.CPUTime.Posix.RUsage.getCpuTimePrecision1 eta_B1;

lvl_rcCRt :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "getrusage"#;

lvl1_rcCRu :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_rcCRt;

System.CPUTime.Posix.RUsage.getCPUTime2
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [ds2_scD3Z ds3_scD40]
        case narrow32Int# [ds3_scD40] of sat_scD41 {
          __DEFAULT -> Foreign.C.Error.$wlvl lvl1_rcCRu sat_scD41 ds2_scD3Z;
        };

sat_scD42 :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1000000#];

sat_scD43 :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scD42 GHC.Types.[]];

System.CPUTime.Posix.RUsage.getCPUTime3 :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_scD43;

System.CPUTime.Posix.RUsage.getCPUTime1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_scD44]
        case newPinnedByteArray# [272# eta_scD44] of {
          (#,#) ipv_scD46 [Occ=Once] ipv1_scD47 [Occ=Once] ->
              case unsafeFreezeByteArray# [ipv1_scD47 ipv_scD46] of {
                (#,#) ipv2_scD49 [Occ=Once] ipv3_scD4a ->
                    case
                        byteArrayContents# [ipv3_scD4a]
                    of
                    p_rusage_scD4b [Dmd=<S,U>]
                    { __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [0# p_rusage_scD4b ipv2_scD49] of {
                            (#,#) ds_scD4e [Occ=Once*] ds4_scD4f [Occ=Once] ->
                                case narrow32Int# [ds4_scD4f] of {
                                  __DEFAULT ->
                                      case readInt64OffAddr# [p_rusage_scD4b 0# ds_scD4e] of {
                                        (#,#) ipv4_scD4i [Occ=Once] ipv5_scD4j [Occ=Once] ->
                                            case plusAddr# [p_rusage_scD4b 8#] of sat_scD4k {
                                              __DEFAULT ->
                                                  case
                                                      readInt64OffAddr# [sat_scD4k 0# ipv4_scD4i]
                                                  of
                                                  { (#,#) ipv6_scD4m [Occ=Once]
                                                          ipv7_scD4n [Occ=Once] ->
                                                        case
                                                            plusAddr# [p_rusage_scD4b 16#]
                                                        of
                                                        ru_stime_scD4o [Dmd=<S,U>]
                                                        { __DEFAULT ->
                                                              case
                                                                  readInt64OffAddr# [ru_stime_scD4o
                                                                                     0#
                                                                                     ipv6_scD4m]
                                                              of
                                                              { (#,#) ipv8_scD4q [Occ=Once]
                                                                      ipv9_scD4r [Occ=Once] ->
                                                                    case
                                                                        plusAddr# [ru_stime_scD4o
                                                                                   8#]
                                                                    of
                                                                    sat_scD4s
                                                                    { __DEFAULT ->
                                                                          case
                                                                              readInt64OffAddr# [sat_scD4s
                                                                                                 0#
                                                                                                 ipv8_scD4q]
                                                                          of
                                                                          { (#,#) ipv10_scD4u [Occ=Once]
                                                                                  ipv11_scD4v [Occ=Once] ->
                                                                                case
                                                                                    touch# [ipv3_scD4a
                                                                                            ipv10_scD4u]
                                                                                of
                                                                                s4_scD4w
                                                                                { __DEFAULT ->
                                                                                      let {
                                                                                        sat_scD4G [Occ=Once]
                                                                                          :: GHC.Integer.Type.Integer
                                                                                        [LclId] =
                                                                                            [ipv5_scD4j
                                                                                             ipv7_scD4n
                                                                                             ipv9_scD4r
                                                                                             ipv11_scD4v] \u []
                                                                                                case
                                                                                                    GHC.Integer.Type.smallInteger
                                                                                                        ipv11_scD4v
                                                                                                of
                                                                                                sat_scD4E
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          GHC.Integer.Type.smallInteger
                                                                                                              ipv9_scD4r
                                                                                                      of
                                                                                                      sat_scD4B
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                GHC.Integer.Type.timesInteger
                                                                                                                    sat_scD4B
                                                                                                                    System.CPUTime.Posix.RUsage.getCPUTime3
                                                                                                            of
                                                                                                            sat_scD4C
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      GHC.Integer.Type.smallInteger
                                                                                                                          ipv7_scD4n
                                                                                                                  of
                                                                                                                  sat_scD4z
                                                                                                                  { __DEFAULT ->
                                                                                                                        case
                                                                                                                            GHC.Integer.Type.smallInteger
                                                                                                                                ipv5_scD4j
                                                                                                                        of
                                                                                                                        sat_scD4x
                                                                                                                        { __DEFAULT ->
                                                                                                                              case
                                                                                                                                  GHC.Integer.Type.timesInteger
                                                                                                                                      sat_scD4x
                                                                                                                                      System.CPUTime.Posix.RUsage.getCPUTime3
                                                                                                                              of
                                                                                                                              sat_scD4y
                                                                                                                              { __DEFAULT ->
                                                                                                                                    case
                                                                                                                                        GHC.Integer.Type.plusInteger
                                                                                                                                            sat_scD4y
                                                                                                                                            sat_scD4z
                                                                                                                                    of
                                                                                                                                    sat_scD4A
                                                                                                                                    { __DEFAULT ->
                                                                                                                                          case
                                                                                                                                              GHC.Integer.Type.plusInteger
                                                                                                                                                  sat_scD4A
                                                                                                                                                  sat_scD4C
                                                                                                                                          of
                                                                                                                                          sat_scD4D
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                case
                                                                                                                                                    GHC.Integer.Type.plusInteger
                                                                                                                                                        sat_scD4D
                                                                                                                                                        sat_scD4E
                                                                                                                                                of
                                                                                                                                                sat_scD4F
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      GHC.Integer.Type.timesInteger
                                                                                                                                                          sat_scD4F
                                                                                                                                                          System.CPUTime.Posix.RUsage.getCPUTime3;
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                      } in 
                                                                                        (#,#) [s4_scD4w
                                                                                               sat_scD4G];
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                  -1# ->
                                      case __pkg_ccall base-4.11.0.0 [ds_scD4e] of {
                                        (#,#) ds5_scD4J [Occ=Once] ds3_scD4K [Occ=Once] ->
                                            System.CPUTime.Posix.RUsage.getCPUTime2
                                                ds5_scD4J ds3_scD4K;
                                      };
                                };
                          };
                    };
              };
        };

System.CPUTime.Posix.RUsage.getCPUTime
  :: GHC.Types.IO GHC.Integer.Type.Integer
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_B1] System.CPUTime.Posix.RUsage.getCPUTime1 eta_B1;


==================== STG syntax: ====================
2018-03-16 16:07:31.97830175 UTC

System.CPUTime.Posix.RUsage.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

System.CPUTime.Posix.RUsage.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.CPUTime.Posix.RUsage.$trModule4];

System.CPUTime.Posix.RUsage.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "System.CPUTime.Posix.RUsage"#;

System.CPUTime.Posix.RUsage.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.CPUTime.Posix.RUsage.$trModule2];

System.CPUTime.Posix.RUsage.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [System.CPUTime.Posix.RUsage.$trModule3
                                     System.CPUTime.Posix.RUsage.$trModule1];

sat_scD3K :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [465#];

sat_scD3L :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scD3K GHC.Types.[]];

sat_scD3J :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1420103680#];

sat_scD3M :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scD3J sat_scD3L];

System.CPUTime.Posix.RUsage.getCpuTimePrecision3
  :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_scD3M;

System.CPUTime.Posix.RUsage.getCpuTimePrecision2
  :: GHC.Integer.Type.Integer
[GblId] =
    [] \u []
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
          Unit# ds1_scD3Q [Occ=Once] ->
              case
                  GHC.Integer.Type.smallInteger ds1_scD3Q
              of
              ww1_scD3R [Dmd=<S,U>]
              { __DEFAULT ->
                    case GHC.Integer.Type.absInteger ww1_scD3R of sat_scD3U {
                      __DEFAULT ->
                          case GHC.Integer.Type.signumInteger ww1_scD3R of sat_scD3S {
                            __DEFAULT ->
                                case
                                    GHC.Integer.Type.timesInteger
                                        System.CPUTime.Posix.RUsage.getCpuTimePrecision3 sat_scD3S
                                of
                                sat_scD3T
                                { __DEFAULT ->
                                      case GHC.Real.$w$sreduce sat_scD3T sat_scD3U of {
                                        (#,#) ww2_scD3W [Occ=Once] ww3_scD3X [Occ=Once] ->
                                            GHC.Real.$w$s$cround
                                                GHC.Real.$fIntegralInteger ww2_scD3W ww3_scD3X;
                                      };
                                };
                          };
                    };
              };
        };

System.CPUTime.Posix.RUsage.getCpuTimePrecision1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        Unit# [System.CPUTime.Posix.RUsage.getCpuTimePrecision2];

System.CPUTime.Posix.RUsage.getCpuTimePrecision
  :: GHC.Types.IO GHC.Integer.Type.Integer
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        System.CPUTime.Posix.RUsage.getCpuTimePrecision1 GHC.Prim.void#;

lvl_rcCRt :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "getrusage"#;

lvl1_rcCRu :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_rcCRt;

System.CPUTime.Posix.RUsage.getCPUTime2
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [void_0E ds3_scD40]
        case narrow32Int# [ds3_scD40] of sat_scD41 {
          __DEFAULT ->
              Foreign.C.Error.$wlvl lvl1_rcCRu sat_scD41 GHC.Prim.void#;
        };

sat_scD42 :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1000000#];

sat_scD43 :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scD42 GHC.Types.[]];

System.CPUTime.Posix.RUsage.getCPUTime3 :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_scD43;

System.CPUTime.Posix.RUsage.getCPUTime1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        case newPinnedByteArray# [272# GHC.Prim.void#] of {
          Unit# ipv1_scD47 [Occ=Once] ->
              case unsafeFreezeByteArray# [ipv1_scD47 GHC.Prim.void#] of {
                Unit# ipv3_scD4a ->
                    case
                        byteArrayContents# [ipv3_scD4a]
                    of
                    p_rusage_scD4b [Dmd=<S,U>]
                    { __DEFAULT ->
                          case
                              __pkg_ccall base-4.11.0.0 [0# p_rusage_scD4b GHC.Prim.void#]
                          of
                          { Unit# ds4_scD4f [Occ=Once] ->
                                case narrow32Int# [ds4_scD4f] of {
                                  __DEFAULT ->
                                      case readInt64OffAddr# [p_rusage_scD4b 0# GHC.Prim.void#] of {
                                        Unit# ipv5_scD4j [Occ=Once] ->
                                            case plusAddr# [p_rusage_scD4b 8#] of sat_scD4k {
                                              __DEFAULT ->
                                                  case
                                                      readInt64OffAddr# [sat_scD4k
                                                                         0#
                                                                         GHC.Prim.void#]
                                                  of
                                                  { Unit# ipv7_scD4n [Occ=Once] ->
                                                        case
                                                            plusAddr# [p_rusage_scD4b 16#]
                                                        of
                                                        ru_stime_scD4o [Dmd=<S,U>]
                                                        { __DEFAULT ->
                                                              case
                                                                  readInt64OffAddr# [ru_stime_scD4o
                                                                                     0#
                                                                                     GHC.Prim.void#]
                                                              of
                                                              { Unit# ipv9_scD4r [Occ=Once] ->
                                                                    case
                                                                        plusAddr# [ru_stime_scD4o
                                                                                   8#]
                                                                    of
                                                                    sat_scD4s
                                                                    { __DEFAULT ->
                                                                          case
                                                                              readInt64OffAddr# [sat_scD4s
                                                                                                 0#
                                                                                                 GHC.Prim.void#]
                                                                          of
                                                                          { Unit# ipv11_scD4v [Occ=Once] ->
                                                                                case
                                                                                    touch# [ipv3_scD4a
                                                                                            GHC.Prim.void#]
                                                                                of
                                                                                s4_scD4w
                                                                                { (##) ->
                                                                                      let {
                                                                                        sat_scD4G [Occ=Once]
                                                                                          :: GHC.Integer.Type.Integer
                                                                                        [LclId] =
                                                                                            [ipv5_scD4j
                                                                                             ipv7_scD4n
                                                                                             ipv9_scD4r
                                                                                             ipv11_scD4v] \u []
                                                                                                case
                                                                                                    GHC.Integer.Type.smallInteger
                                                                                                        ipv11_scD4v
                                                                                                of
                                                                                                sat_scD4E
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          GHC.Integer.Type.smallInteger
                                                                                                              ipv9_scD4r
                                                                                                      of
                                                                                                      sat_scD4B
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                GHC.Integer.Type.timesInteger
                                                                                                                    sat_scD4B
                                                                                                                    System.CPUTime.Posix.RUsage.getCPUTime3
                                                                                                            of
                                                                                                            sat_scD4C
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      GHC.Integer.Type.smallInteger
                                                                                                                          ipv7_scD4n
                                                                                                                  of
                                                                                                                  sat_scD4z
                                                                                                                  { __DEFAULT ->
                                                                                                                        case
                                                                                                                            GHC.Integer.Type.smallInteger
                                                                                                                                ipv5_scD4j
                                                                                                                        of
                                                                                                                        sat_scD4x
                                                                                                                        { __DEFAULT ->
                                                                                                                              case
                                                                                                                                  GHC.Integer.Type.timesInteger
                                                                                                                                      sat_scD4x
                                                                                                                                      System.CPUTime.Posix.RUsage.getCPUTime3
                                                                                                                              of
                                                                                                                              sat_scD4y
                                                                                                                              { __DEFAULT ->
                                                                                                                                    case
                                                                                                                                        GHC.Integer.Type.plusInteger
                                                                                                                                            sat_scD4y
                                                                                                                                            sat_scD4z
                                                                                                                                    of
                                                                                                                                    sat_scD4A
                                                                                                                                    { __DEFAULT ->
                                                                                                                                          case
                                                                                                                                              GHC.Integer.Type.plusInteger
                                                                                                                                                  sat_scD4A
                                                                                                                                                  sat_scD4C
                                                                                                                                          of
                                                                                                                                          sat_scD4D
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                case
                                                                                                                                                    GHC.Integer.Type.plusInteger
                                                                                                                                                        sat_scD4D
                                                                                                                                                        sat_scD4E
                                                                                                                                                of
                                                                                                                                                sat_scD4F
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      GHC.Integer.Type.timesInteger
                                                                                                                                                          sat_scD4F
                                                                                                                                                          System.CPUTime.Posix.RUsage.getCPUTime3;
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                      } in 
                                                                                        Unit# [sat_scD4G];
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                  -1# ->
                                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                                        Unit# ds3_scD4K [Occ=Once] ->
                                            System.CPUTime.Posix.RUsage.getCPUTime2
                                                GHC.Prim.void# ds3_scD4K;
                                      };
                                };
                          };
                    };
              };
        };

System.CPUTime.Posix.RUsage.getCPUTime
  :: GHC.Types.IO GHC.Integer.Type.Integer
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        System.CPUTime.Posix.RUsage.getCPUTime1 GHC.Prim.void#;

