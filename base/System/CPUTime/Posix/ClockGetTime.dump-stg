
==================== Pre unarise: ====================
2018-03-16 16:07:25.90642605 UTC

sat_scxhJ :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [465#];

sat_scxhK :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scxhJ GHC.Types.[]];

sat_scxhI :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1420103680#];

sat_scxhL :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scxhI sat_scxhK];

System.CPUTime.Posix.ClockGetTime.getCPUTime4
  :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_scxhL;

sat_scxhM :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1000#];

sat_scxhN :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scxhM GHC.Types.[]];

System.CPUTime.Posix.ClockGetTime.getCPUTime3
  :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_scxhN;

System.CPUTime.Posix.ClockGetTime.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

System.CPUTime.Posix.ClockGetTime.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.CPUTime.Posix.ClockGetTime.$trModule4];

System.CPUTime.Posix.ClockGetTime.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "System.CPUTime.Posix.ClockGetTime"#;

System.CPUTime.Posix.ClockGetTime.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.CPUTime.Posix.ClockGetTime.$trModule2];

System.CPUTime.Posix.ClockGetTime.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [System.CPUTime.Posix.ClockGetTime.$trModule3
                                     System.CPUTime.Posix.ClockGetTime.$trModule1];

System.CPUTime.Posix.ClockGetTime.$tcTimespec2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Timespec"#;

System.CPUTime.Posix.ClockGetTime.$tcTimespec1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.CPUTime.Posix.ClockGetTime.$tcTimespec2];

System.CPUTime.Posix.ClockGetTime.$tcTimespec :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13346594173291483587##
                                    3590994262607885225##
                                    System.CPUTime.Posix.ClockGetTime.$trModule
                                    System.CPUTime.Posix.ClockGetTime.$tcTimespec1
                                    0#
                                    GHC.Types.krep$*];

lvl_rcxhD :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "clock_getres"#;

lvl1_rcxhE :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_rcxhD;

System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision2
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [ds2_scxhO ds3_scxhP]
        case narrow32Int# [ds3_scxhP] of sat_scxhQ {
          __DEFAULT -> Foreign.C.Error.$wlvl lvl1_rcxhE sat_scxhQ ds2_scxhO;
        };

System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [s_scxhR]
        case newPinnedByteArray# [16# s_scxhR] of {
          (#,#) ipv_scxhT [Occ=Once] ipv1_scxhU [Occ=Once] ->
              case unsafeFreezeByteArray# [ipv1_scxhU ipv_scxhT] of {
                (#,#) ipv2_scxhW [Occ=Once] ipv3_scxhX ->
                    case byteArrayContents# [ipv3_scxhX] of p_ts_scxhY [Dmd=<S,U>] {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [2# p_ts_scxhY ipv2_scxhW] of {
                            (#,#) ds_scxi1 [Occ=Once*] ds4_scxi2 [Occ=Once] ->
                                case narrow32Int# [ds4_scxi2] of {
                                  __DEFAULT ->
                                      case readInt64OffAddr# [p_ts_scxhY 0# ds_scxi1] of {
                                        (#,#) ipv4_scxi5 [Occ=Once] ipv5_scxi6 [Occ=Once] ->
                                            case plusAddr# [p_ts_scxhY 8#] of sat_scxi7 {
                                              __DEFAULT ->
                                                  case
                                                      readInt64OffAddr# [sat_scxi7 0# ipv4_scxi5]
                                                  of
                                                  { (#,#) ipv6_scxi9 [Occ=Once]
                                                          ipv7_scxia [Occ=Once] ->
                                                        case
                                                            touch# [ipv3_scxhX ipv6_scxi9]
                                                        of
                                                        s4_scxib
                                                        { __DEFAULT ->
                                                              let {
                                                                sat_scxig [Occ=Once]
                                                                  :: GHC.Integer.Type.Integer
                                                                [LclId] =
                                                                    [ipv5_scxi6 ipv7_scxia] \u []
                                                                        case
                                                                            GHC.Integer.Type.smallInteger
                                                                                ipv7_scxia
                                                                        of
                                                                        sat_scxie
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  GHC.Integer.Type.timesInteger
                                                                                      sat_scxie
                                                                                      System.CPUTime.Posix.ClockGetTime.getCPUTime3
                                                                              of
                                                                              sat_scxif
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        GHC.Integer.Type.smallInteger
                                                                                            ipv5_scxi6
                                                                                    of
                                                                                    sat_scxic
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              GHC.Integer.Type.timesInteger
                                                                                                  sat_scxic
                                                                                                  System.CPUTime.Posix.ClockGetTime.getCPUTime4
                                                                                          of
                                                                                          sat_scxid
                                                                                          { __DEFAULT ->
                                                                                                GHC.Integer.Type.plusInteger
                                                                                                    sat_scxid
                                                                                                    sat_scxif;
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                              } in  (#,#) [s4_scxib sat_scxig];
                                                        };
                                                  };
                                            };
                                      };
                                  -1# ->
                                      case __pkg_ccall base-4.11.0.0 [ds_scxi1] of {
                                        (#,#) ds5_scxij [Occ=Once] ds3_scxik [Occ=Once] ->
                                            System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision2
                                                ds5_scxij ds3_scxik;
                                      };
                                };
                          };
                    };
              };
        };

System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision
  :: GHC.Types.IO GHC.Integer.Type.Integer
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_B1]
        System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision1 eta_B1;

lvl2_rcxhF :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "clock_gettime"#;

lvl3_rcxhG :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl2_rcxhF;

System.CPUTime.Posix.ClockGetTime.getCPUTime2
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [ds2_scxim ds3_scxin]
        case narrow32Int# [ds3_scxin] of sat_scxio {
          __DEFAULT -> Foreign.C.Error.$wlvl lvl3_rcxhG sat_scxio ds2_scxim;
        };

System.CPUTime.Posix.ClockGetTime.getCPUTime1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [s_scxip]
        case newPinnedByteArray# [16# s_scxip] of {
          (#,#) ipv_scxir [Occ=Once] ipv1_scxis [Occ=Once] ->
              case unsafeFreezeByteArray# [ipv1_scxis ipv_scxir] of {
                (#,#) ipv2_scxiu [Occ=Once] ipv3_scxiv ->
                    case byteArrayContents# [ipv3_scxiv] of p_ts_scxiw [Dmd=<S,U>] {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [2# p_ts_scxiw ipv2_scxiu] of {
                            (#,#) ds_scxiz [Occ=Once*] ds4_scxiA [Occ=Once] ->
                                case narrow32Int# [ds4_scxiA] of {
                                  __DEFAULT ->
                                      case readInt64OffAddr# [p_ts_scxiw 0# ds_scxiz] of {
                                        (#,#) ipv4_scxiD [Occ=Once] ipv5_scxiE [Occ=Once] ->
                                            case plusAddr# [p_ts_scxiw 8#] of sat_scxiF {
                                              __DEFAULT ->
                                                  case
                                                      readInt64OffAddr# [sat_scxiF 0# ipv4_scxiD]
                                                  of
                                                  { (#,#) ipv6_scxiH [Occ=Once]
                                                          ipv7_scxiI [Occ=Once] ->
                                                        case
                                                            touch# [ipv3_scxiv ipv6_scxiH]
                                                        of
                                                        s4_scxiJ
                                                        { __DEFAULT ->
                                                              let {
                                                                sat_scxiO [Occ=Once]
                                                                  :: GHC.Integer.Type.Integer
                                                                [LclId] =
                                                                    [ipv5_scxiE ipv7_scxiI] \u []
                                                                        case
                                                                            GHC.Integer.Type.smallInteger
                                                                                ipv7_scxiI
                                                                        of
                                                                        sat_scxiM
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  GHC.Integer.Type.timesInteger
                                                                                      sat_scxiM
                                                                                      System.CPUTime.Posix.ClockGetTime.getCPUTime3
                                                                              of
                                                                              sat_scxiN
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        GHC.Integer.Type.smallInteger
                                                                                            ipv5_scxiE
                                                                                    of
                                                                                    sat_scxiK
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              GHC.Integer.Type.timesInteger
                                                                                                  sat_scxiK
                                                                                                  System.CPUTime.Posix.ClockGetTime.getCPUTime4
                                                                                          of
                                                                                          sat_scxiL
                                                                                          { __DEFAULT ->
                                                                                                GHC.Integer.Type.plusInteger
                                                                                                    sat_scxiL
                                                                                                    sat_scxiN;
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                              } in  (#,#) [s4_scxiJ sat_scxiO];
                                                        };
                                                  };
                                            };
                                      };
                                  -1# ->
                                      case __pkg_ccall base-4.11.0.0 [ds_scxiz] of {
                                        (#,#) ds5_scxiR [Occ=Once] ds3_scxiS [Occ=Once] ->
                                            System.CPUTime.Posix.ClockGetTime.getCPUTime2
                                                ds5_scxiR ds3_scxiS;
                                      };
                                };
                          };
                    };
              };
        };

System.CPUTime.Posix.ClockGetTime.getCPUTime
  :: GHC.Types.IO GHC.Integer.Type.Integer
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_B1]
        System.CPUTime.Posix.ClockGetTime.getCPUTime1 eta_B1;


==================== STG syntax: ====================
2018-03-16 16:07:25.910452365 UTC

sat_scxhJ :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [465#];

sat_scxhK :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scxhJ GHC.Types.[]];

sat_scxhI :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1420103680#];

sat_scxhL :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scxhI sat_scxhK];

System.CPUTime.Posix.ClockGetTime.getCPUTime4
  :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_scxhL;

sat_scxhM :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1000#];

sat_scxhN :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scxhM GHC.Types.[]];

System.CPUTime.Posix.ClockGetTime.getCPUTime3
  :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_scxhN;

System.CPUTime.Posix.ClockGetTime.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

System.CPUTime.Posix.ClockGetTime.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.CPUTime.Posix.ClockGetTime.$trModule4];

System.CPUTime.Posix.ClockGetTime.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "System.CPUTime.Posix.ClockGetTime"#;

System.CPUTime.Posix.ClockGetTime.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.CPUTime.Posix.ClockGetTime.$trModule2];

System.CPUTime.Posix.ClockGetTime.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [System.CPUTime.Posix.ClockGetTime.$trModule3
                                     System.CPUTime.Posix.ClockGetTime.$trModule1];

System.CPUTime.Posix.ClockGetTime.$tcTimespec2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Timespec"#;

System.CPUTime.Posix.ClockGetTime.$tcTimespec1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.CPUTime.Posix.ClockGetTime.$tcTimespec2];

System.CPUTime.Posix.ClockGetTime.$tcTimespec :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13346594173291483587##
                                    3590994262607885225##
                                    System.CPUTime.Posix.ClockGetTime.$trModule
                                    System.CPUTime.Posix.ClockGetTime.$tcTimespec1
                                    0#
                                    GHC.Types.krep$*];

lvl_rcxhD :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "clock_getres"#;

lvl1_rcxhE :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_rcxhD;

System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision2
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [void_0E ds3_scxhP]
        case narrow32Int# [ds3_scxhP] of sat_scxhQ {
          __DEFAULT ->
              Foreign.C.Error.$wlvl lvl1_rcxhE sat_scxhQ GHC.Prim.void#;
        };

System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        case newPinnedByteArray# [16# GHC.Prim.void#] of {
          Unit# ipv1_scxhU [Occ=Once] ->
              case unsafeFreezeByteArray# [ipv1_scxhU GHC.Prim.void#] of {
                Unit# ipv3_scxhX ->
                    case byteArrayContents# [ipv3_scxhX] of p_ts_scxhY [Dmd=<S,U>] {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [2# p_ts_scxhY GHC.Prim.void#] of {
                            Unit# ds4_scxi2 [Occ=Once] ->
                                case narrow32Int# [ds4_scxi2] of {
                                  __DEFAULT ->
                                      case readInt64OffAddr# [p_ts_scxhY 0# GHC.Prim.void#] of {
                                        Unit# ipv5_scxi6 [Occ=Once] ->
                                            case plusAddr# [p_ts_scxhY 8#] of sat_scxi7 {
                                              __DEFAULT ->
                                                  case
                                                      readInt64OffAddr# [sat_scxi7
                                                                         0#
                                                                         GHC.Prim.void#]
                                                  of
                                                  { Unit# ipv7_scxia [Occ=Once] ->
                                                        case
                                                            touch# [ipv3_scxhX GHC.Prim.void#]
                                                        of
                                                        s4_scxib
                                                        { (##) ->
                                                              let {
                                                                sat_scxig [Occ=Once]
                                                                  :: GHC.Integer.Type.Integer
                                                                [LclId] =
                                                                    [ipv5_scxi6 ipv7_scxia] \u []
                                                                        case
                                                                            GHC.Integer.Type.smallInteger
                                                                                ipv7_scxia
                                                                        of
                                                                        sat_scxie
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  GHC.Integer.Type.timesInteger
                                                                                      sat_scxie
                                                                                      System.CPUTime.Posix.ClockGetTime.getCPUTime3
                                                                              of
                                                                              sat_scxif
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        GHC.Integer.Type.smallInteger
                                                                                            ipv5_scxi6
                                                                                    of
                                                                                    sat_scxic
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              GHC.Integer.Type.timesInteger
                                                                                                  sat_scxic
                                                                                                  System.CPUTime.Posix.ClockGetTime.getCPUTime4
                                                                                          of
                                                                                          sat_scxid
                                                                                          { __DEFAULT ->
                                                                                                GHC.Integer.Type.plusInteger
                                                                                                    sat_scxid
                                                                                                    sat_scxif;
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                              } in  Unit# [sat_scxig];
                                                        };
                                                  };
                                            };
                                      };
                                  -1# ->
                                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                                        Unit# ds3_scxik [Occ=Once] ->
                                            System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision2
                                                GHC.Prim.void# ds3_scxik;
                                      };
                                };
                          };
                    };
              };
        };

System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision
  :: GHC.Types.IO GHC.Integer.Type.Integer
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision1
            GHC.Prim.void#;

lvl2_rcxhF :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "clock_gettime"#;

lvl3_rcxhG :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl2_rcxhF;

System.CPUTime.Posix.ClockGetTime.getCPUTime2
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [void_0E ds3_scxin]
        case narrow32Int# [ds3_scxin] of sat_scxio {
          __DEFAULT ->
              Foreign.C.Error.$wlvl lvl3_rcxhG sat_scxio GHC.Prim.void#;
        };

System.CPUTime.Posix.ClockGetTime.getCPUTime1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        case newPinnedByteArray# [16# GHC.Prim.void#] of {
          Unit# ipv1_scxis [Occ=Once] ->
              case unsafeFreezeByteArray# [ipv1_scxis GHC.Prim.void#] of {
                Unit# ipv3_scxiv ->
                    case byteArrayContents# [ipv3_scxiv] of p_ts_scxiw [Dmd=<S,U>] {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [2# p_ts_scxiw GHC.Prim.void#] of {
                            Unit# ds4_scxiA [Occ=Once] ->
                                case narrow32Int# [ds4_scxiA] of {
                                  __DEFAULT ->
                                      case readInt64OffAddr# [p_ts_scxiw 0# GHC.Prim.void#] of {
                                        Unit# ipv5_scxiE [Occ=Once] ->
                                            case plusAddr# [p_ts_scxiw 8#] of sat_scxiF {
                                              __DEFAULT ->
                                                  case
                                                      readInt64OffAddr# [sat_scxiF
                                                                         0#
                                                                         GHC.Prim.void#]
                                                  of
                                                  { Unit# ipv7_scxiI [Occ=Once] ->
                                                        case
                                                            touch# [ipv3_scxiv GHC.Prim.void#]
                                                        of
                                                        s4_scxiJ
                                                        { (##) ->
                                                              let {
                                                                sat_scxiO [Occ=Once]
                                                                  :: GHC.Integer.Type.Integer
                                                                [LclId] =
                                                                    [ipv5_scxiE ipv7_scxiI] \u []
                                                                        case
                                                                            GHC.Integer.Type.smallInteger
                                                                                ipv7_scxiI
                                                                        of
                                                                        sat_scxiM
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  GHC.Integer.Type.timesInteger
                                                                                      sat_scxiM
                                                                                      System.CPUTime.Posix.ClockGetTime.getCPUTime3
                                                                              of
                                                                              sat_scxiN
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        GHC.Integer.Type.smallInteger
                                                                                            ipv5_scxiE
                                                                                    of
                                                                                    sat_scxiK
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              GHC.Integer.Type.timesInteger
                                                                                                  sat_scxiK
                                                                                                  System.CPUTime.Posix.ClockGetTime.getCPUTime4
                                                                                          of
                                                                                          sat_scxiL
                                                                                          { __DEFAULT ->
                                                                                                GHC.Integer.Type.plusInteger
                                                                                                    sat_scxiL
                                                                                                    sat_scxiN;
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                              } in  Unit# [sat_scxiO];
                                                        };
                                                  };
                                            };
                                      };
                                  -1# ->
                                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                                        Unit# ds3_scxiS [Occ=Once] ->
                                            System.CPUTime.Posix.ClockGetTime.getCPUTime2
                                                GHC.Prim.void# ds3_scxiS;
                                      };
                                };
                          };
                    };
              };
        };

System.CPUTime.Posix.ClockGetTime.getCPUTime
  :: GHC.Types.IO GHC.Integer.Type.Integer
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        System.CPUTime.Posix.ClockGetTime.getCPUTime1 GHC.Prim.void#;


==================== Pre unarise: ====================
2018-03-16 16:07:26.262578182 UTC

sat_scxuT :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [465#];

sat_scxuU :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scxuT GHC.Types.[]];

sat_scxuS :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1420103680#];

sat_scxuV :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scxuS sat_scxuU];

System.CPUTime.Posix.ClockGetTime.getCPUTime4
  :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_scxuV;

sat_scxuW :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1000#];

sat_scxuX :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scxuW GHC.Types.[]];

System.CPUTime.Posix.ClockGetTime.getCPUTime3
  :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_scxuX;

System.CPUTime.Posix.ClockGetTime.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

System.CPUTime.Posix.ClockGetTime.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.CPUTime.Posix.ClockGetTime.$trModule4];

System.CPUTime.Posix.ClockGetTime.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "System.CPUTime.Posix.ClockGetTime"#;

System.CPUTime.Posix.ClockGetTime.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.CPUTime.Posix.ClockGetTime.$trModule2];

System.CPUTime.Posix.ClockGetTime.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [System.CPUTime.Posix.ClockGetTime.$trModule3
                                     System.CPUTime.Posix.ClockGetTime.$trModule1];

System.CPUTime.Posix.ClockGetTime.$tcTimespec2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Timespec"#;

System.CPUTime.Posix.ClockGetTime.$tcTimespec1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.CPUTime.Posix.ClockGetTime.$tcTimespec2];

System.CPUTime.Posix.ClockGetTime.$tcTimespec :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13346594173291483587##
                                    3590994262607885225##
                                    System.CPUTime.Posix.ClockGetTime.$trModule
                                    System.CPUTime.Posix.ClockGetTime.$tcTimespec1
                                    0#
                                    GHC.Types.krep$*];

lvl_rcxhD :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "clock_getres"#;

lvl1_rcxhE :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_rcxhD;

System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision2
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [ds2_scxuY ds3_scxuZ]
        case narrow32Int# [ds3_scxuZ] of sat_scxv0 {
          __DEFAULT -> Foreign.C.Error.$wlvl lvl1_rcxhE sat_scxv0 ds2_scxuY;
        };

System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [s_scxv1]
        case newPinnedByteArray# [16# s_scxv1] of {
          (#,#) ipv_scxv3 [Occ=Once] ipv1_scxv4 [Occ=Once] ->
              case unsafeFreezeByteArray# [ipv1_scxv4 ipv_scxv3] of {
                (#,#) ipv2_scxv6 [Occ=Once] ipv3_scxv7 ->
                    case byteArrayContents# [ipv3_scxv7] of p_ts_scxv8 [Dmd=<S,U>] {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [2# p_ts_scxv8 ipv2_scxv6] of {
                            (#,#) ds_scxvb [Occ=Once*] ds4_scxvc [Occ=Once] ->
                                case narrow32Int# [ds4_scxvc] of {
                                  __DEFAULT ->
                                      case readInt64OffAddr# [p_ts_scxv8 0# ds_scxvb] of {
                                        (#,#) ipv4_scxvf [Occ=Once] ipv5_scxvg [Occ=Once] ->
                                            case plusAddr# [p_ts_scxv8 8#] of sat_scxvh {
                                              __DEFAULT ->
                                                  case
                                                      readInt64OffAddr# [sat_scxvh 0# ipv4_scxvf]
                                                  of
                                                  { (#,#) ipv6_scxvj [Occ=Once]
                                                          ipv7_scxvk [Occ=Once] ->
                                                        case
                                                            touch# [ipv3_scxv7 ipv6_scxvj]
                                                        of
                                                        s4_scxvl
                                                        { __DEFAULT ->
                                                              let {
                                                                sat_scxvq [Occ=Once]
                                                                  :: GHC.Integer.Type.Integer
                                                                [LclId] =
                                                                    [ipv5_scxvg ipv7_scxvk] \u []
                                                                        case
                                                                            GHC.Integer.Type.smallInteger
                                                                                ipv7_scxvk
                                                                        of
                                                                        sat_scxvo
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  GHC.Integer.Type.timesInteger
                                                                                      sat_scxvo
                                                                                      System.CPUTime.Posix.ClockGetTime.getCPUTime3
                                                                              of
                                                                              sat_scxvp
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        GHC.Integer.Type.smallInteger
                                                                                            ipv5_scxvg
                                                                                    of
                                                                                    sat_scxvm
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              GHC.Integer.Type.timesInteger
                                                                                                  sat_scxvm
                                                                                                  System.CPUTime.Posix.ClockGetTime.getCPUTime4
                                                                                          of
                                                                                          sat_scxvn
                                                                                          { __DEFAULT ->
                                                                                                GHC.Integer.Type.plusInteger
                                                                                                    sat_scxvn
                                                                                                    sat_scxvp;
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                              } in  (#,#) [s4_scxvl sat_scxvq];
                                                        };
                                                  };
                                            };
                                      };
                                  -1# ->
                                      case __pkg_ccall base-4.11.0.0 [ds_scxvb] of {
                                        (#,#) ds5_scxvt [Occ=Once] ds3_scxvu [Occ=Once] ->
                                            System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision2
                                                ds5_scxvt ds3_scxvu;
                                      };
                                };
                          };
                    };
              };
        };

System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision
  :: GHC.Types.IO GHC.Integer.Type.Integer
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_B1]
        System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision1 eta_B1;

lvl2_rcxhF :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "clock_gettime"#;

lvl3_rcxhG :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl2_rcxhF;

System.CPUTime.Posix.ClockGetTime.getCPUTime2
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [ds2_scxvw ds3_scxvx]
        case narrow32Int# [ds3_scxvx] of sat_scxvy {
          __DEFAULT -> Foreign.C.Error.$wlvl lvl3_rcxhG sat_scxvy ds2_scxvw;
        };

System.CPUTime.Posix.ClockGetTime.getCPUTime1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [s_scxvz]
        case newPinnedByteArray# [16# s_scxvz] of {
          (#,#) ipv_scxvB [Occ=Once] ipv1_scxvC [Occ=Once] ->
              case unsafeFreezeByteArray# [ipv1_scxvC ipv_scxvB] of {
                (#,#) ipv2_scxvE [Occ=Once] ipv3_scxvF ->
                    case byteArrayContents# [ipv3_scxvF] of p_ts_scxvG [Dmd=<S,U>] {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [2# p_ts_scxvG ipv2_scxvE] of {
                            (#,#) ds_scxvJ [Occ=Once*] ds4_scxvK [Occ=Once] ->
                                case narrow32Int# [ds4_scxvK] of {
                                  __DEFAULT ->
                                      case readInt64OffAddr# [p_ts_scxvG 0# ds_scxvJ] of {
                                        (#,#) ipv4_scxvN [Occ=Once] ipv5_scxvO [Occ=Once] ->
                                            case plusAddr# [p_ts_scxvG 8#] of sat_scxvP {
                                              __DEFAULT ->
                                                  case
                                                      readInt64OffAddr# [sat_scxvP 0# ipv4_scxvN]
                                                  of
                                                  { (#,#) ipv6_scxvR [Occ=Once]
                                                          ipv7_scxvS [Occ=Once] ->
                                                        case
                                                            touch# [ipv3_scxvF ipv6_scxvR]
                                                        of
                                                        s4_scxvT
                                                        { __DEFAULT ->
                                                              let {
                                                                sat_scxvY [Occ=Once]
                                                                  :: GHC.Integer.Type.Integer
                                                                [LclId] =
                                                                    [ipv5_scxvO ipv7_scxvS] \u []
                                                                        case
                                                                            GHC.Integer.Type.smallInteger
                                                                                ipv7_scxvS
                                                                        of
                                                                        sat_scxvW
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  GHC.Integer.Type.timesInteger
                                                                                      sat_scxvW
                                                                                      System.CPUTime.Posix.ClockGetTime.getCPUTime3
                                                                              of
                                                                              sat_scxvX
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        GHC.Integer.Type.smallInteger
                                                                                            ipv5_scxvO
                                                                                    of
                                                                                    sat_scxvU
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              GHC.Integer.Type.timesInteger
                                                                                                  sat_scxvU
                                                                                                  System.CPUTime.Posix.ClockGetTime.getCPUTime4
                                                                                          of
                                                                                          sat_scxvV
                                                                                          { __DEFAULT ->
                                                                                                GHC.Integer.Type.plusInteger
                                                                                                    sat_scxvV
                                                                                                    sat_scxvX;
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                              } in  (#,#) [s4_scxvT sat_scxvY];
                                                        };
                                                  };
                                            };
                                      };
                                  -1# ->
                                      case __pkg_ccall base-4.11.0.0 [ds_scxvJ] of {
                                        (#,#) ds5_scxw1 [Occ=Once] ds3_scxw2 [Occ=Once] ->
                                            System.CPUTime.Posix.ClockGetTime.getCPUTime2
                                                ds5_scxw1 ds3_scxw2;
                                      };
                                };
                          };
                    };
              };
        };

System.CPUTime.Posix.ClockGetTime.getCPUTime
  :: GHC.Types.IO GHC.Integer.Type.Integer
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_B1]
        System.CPUTime.Posix.ClockGetTime.getCPUTime1 eta_B1;


==================== STG syntax: ====================
2018-03-16 16:07:26.267477851 UTC

sat_scxuT :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [465#];

sat_scxuU :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scxuT GHC.Types.[]];

sat_scxuS :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1420103680#];

sat_scxuV :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scxuS sat_scxuU];

System.CPUTime.Posix.ClockGetTime.getCPUTime4
  :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_scxuV;

sat_scxuW :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1000#];

sat_scxuX :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_scxuW GHC.Types.[]];

System.CPUTime.Posix.ClockGetTime.getCPUTime3
  :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_scxuX;

System.CPUTime.Posix.ClockGetTime.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

System.CPUTime.Posix.ClockGetTime.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.CPUTime.Posix.ClockGetTime.$trModule4];

System.CPUTime.Posix.ClockGetTime.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "System.CPUTime.Posix.ClockGetTime"#;

System.CPUTime.Posix.ClockGetTime.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.CPUTime.Posix.ClockGetTime.$trModule2];

System.CPUTime.Posix.ClockGetTime.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [System.CPUTime.Posix.ClockGetTime.$trModule3
                                     System.CPUTime.Posix.ClockGetTime.$trModule1];

System.CPUTime.Posix.ClockGetTime.$tcTimespec2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Timespec"#;

System.CPUTime.Posix.ClockGetTime.$tcTimespec1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [System.CPUTime.Posix.ClockGetTime.$tcTimespec2];

System.CPUTime.Posix.ClockGetTime.$tcTimespec :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13346594173291483587##
                                    3590994262607885225##
                                    System.CPUTime.Posix.ClockGetTime.$trModule
                                    System.CPUTime.Posix.ClockGetTime.$tcTimespec1
                                    0#
                                    GHC.Types.krep$*];

lvl_rcxhD :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "clock_getres"#;

lvl1_rcxhE :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_rcxhD;

System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision2
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [void_0E ds3_scxuZ]
        case narrow32Int# [ds3_scxuZ] of sat_scxv0 {
          __DEFAULT ->
              Foreign.C.Error.$wlvl lvl1_rcxhE sat_scxv0 GHC.Prim.void#;
        };

System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        case newPinnedByteArray# [16# GHC.Prim.void#] of {
          Unit# ipv1_scxv4 [Occ=Once] ->
              case unsafeFreezeByteArray# [ipv1_scxv4 GHC.Prim.void#] of {
                Unit# ipv3_scxv7 ->
                    case byteArrayContents# [ipv3_scxv7] of p_ts_scxv8 [Dmd=<S,U>] {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [2# p_ts_scxv8 GHC.Prim.void#] of {
                            Unit# ds4_scxvc [Occ=Once] ->
                                case narrow32Int# [ds4_scxvc] of {
                                  __DEFAULT ->
                                      case readInt64OffAddr# [p_ts_scxv8 0# GHC.Prim.void#] of {
                                        Unit# ipv5_scxvg [Occ=Once] ->
                                            case plusAddr# [p_ts_scxv8 8#] of sat_scxvh {
                                              __DEFAULT ->
                                                  case
                                                      readInt64OffAddr# [sat_scxvh
                                                                         0#
                                                                         GHC.Prim.void#]
                                                  of
                                                  { Unit# ipv7_scxvk [Occ=Once] ->
                                                        case
                                                            touch# [ipv3_scxv7 GHC.Prim.void#]
                                                        of
                                                        s4_scxvl
                                                        { (##) ->
                                                              let {
                                                                sat_scxvq [Occ=Once]
                                                                  :: GHC.Integer.Type.Integer
                                                                [LclId] =
                                                                    [ipv5_scxvg ipv7_scxvk] \u []
                                                                        case
                                                                            GHC.Integer.Type.smallInteger
                                                                                ipv7_scxvk
                                                                        of
                                                                        sat_scxvo
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  GHC.Integer.Type.timesInteger
                                                                                      sat_scxvo
                                                                                      System.CPUTime.Posix.ClockGetTime.getCPUTime3
                                                                              of
                                                                              sat_scxvp
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        GHC.Integer.Type.smallInteger
                                                                                            ipv5_scxvg
                                                                                    of
                                                                                    sat_scxvm
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              GHC.Integer.Type.timesInteger
                                                                                                  sat_scxvm
                                                                                                  System.CPUTime.Posix.ClockGetTime.getCPUTime4
                                                                                          of
                                                                                          sat_scxvn
                                                                                          { __DEFAULT ->
                                                                                                GHC.Integer.Type.plusInteger
                                                                                                    sat_scxvn
                                                                                                    sat_scxvp;
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                              } in  Unit# [sat_scxvq];
                                                        };
                                                  };
                                            };
                                      };
                                  -1# ->
                                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                                        Unit# ds3_scxvu [Occ=Once] ->
                                            System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision2
                                                GHC.Prim.void# ds3_scxvu;
                                      };
                                };
                          };
                    };
              };
        };

System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision
  :: GHC.Types.IO GHC.Integer.Type.Integer
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        System.CPUTime.Posix.ClockGetTime.getCpuTimePrecision1
            GHC.Prim.void#;

lvl2_rcxhF :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "clock_gettime"#;

lvl3_rcxhG :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl2_rcxhF;

System.CPUTime.Posix.ClockGetTime.getCPUTime2
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [void_0E ds3_scxvx]
        case narrow32Int# [ds3_scxvx] of sat_scxvy {
          __DEFAULT ->
              Foreign.C.Error.$wlvl lvl3_rcxhG sat_scxvy GHC.Prim.void#;
        };

System.CPUTime.Posix.ClockGetTime.getCPUTime1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Integer.Type.Integer #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        case newPinnedByteArray# [16# GHC.Prim.void#] of {
          Unit# ipv1_scxvC [Occ=Once] ->
              case unsafeFreezeByteArray# [ipv1_scxvC GHC.Prim.void#] of {
                Unit# ipv3_scxvF ->
                    case byteArrayContents# [ipv3_scxvF] of p_ts_scxvG [Dmd=<S,U>] {
                      __DEFAULT ->
                          case __pkg_ccall base-4.11.0.0 [2# p_ts_scxvG GHC.Prim.void#] of {
                            Unit# ds4_scxvK [Occ=Once] ->
                                case narrow32Int# [ds4_scxvK] of {
                                  __DEFAULT ->
                                      case readInt64OffAddr# [p_ts_scxvG 0# GHC.Prim.void#] of {
                                        Unit# ipv5_scxvO [Occ=Once] ->
                                            case plusAddr# [p_ts_scxvG 8#] of sat_scxvP {
                                              __DEFAULT ->
                                                  case
                                                      readInt64OffAddr# [sat_scxvP
                                                                         0#
                                                                         GHC.Prim.void#]
                                                  of
                                                  { Unit# ipv7_scxvS [Occ=Once] ->
                                                        case
                                                            touch# [ipv3_scxvF GHC.Prim.void#]
                                                        of
                                                        s4_scxvT
                                                        { (##) ->
                                                              let {
                                                                sat_scxvY [Occ=Once]
                                                                  :: GHC.Integer.Type.Integer
                                                                [LclId] =
                                                                    [ipv5_scxvO ipv7_scxvS] \u []
                                                                        case
                                                                            GHC.Integer.Type.smallInteger
                                                                                ipv7_scxvS
                                                                        of
                                                                        sat_scxvW
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  GHC.Integer.Type.timesInteger
                                                                                      sat_scxvW
                                                                                      System.CPUTime.Posix.ClockGetTime.getCPUTime3
                                                                              of
                                                                              sat_scxvX
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        GHC.Integer.Type.smallInteger
                                                                                            ipv5_scxvO
                                                                                    of
                                                                                    sat_scxvU
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              GHC.Integer.Type.timesInteger
                                                                                                  sat_scxvU
                                                                                                  System.CPUTime.Posix.ClockGetTime.getCPUTime4
                                                                                          of
                                                                                          sat_scxvV
                                                                                          { __DEFAULT ->
                                                                                                GHC.Integer.Type.plusInteger
                                                                                                    sat_scxvV
                                                                                                    sat_scxvX;
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                              } in  Unit# [sat_scxvY];
                                                        };
                                                  };
                                            };
                                      };
                                  -1# ->
                                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                                        Unit# ds3_scxw2 [Occ=Once] ->
                                            System.CPUTime.Posix.ClockGetTime.getCPUTime2
                                                GHC.Prim.void# ds3_scxw2;
                                      };
                                };
                          };
                    };
              };
        };

System.CPUTime.Posix.ClockGetTime.getCPUTime
  :: GHC.Types.IO GHC.Integer.Type.Integer
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        System.CPUTime.Posix.ClockGetTime.getCPUTime1 GHC.Prim.void#;

