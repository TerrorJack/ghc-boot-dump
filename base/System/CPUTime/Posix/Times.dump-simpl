
==================== Tidy Core ====================
2018-03-16 16:07:31.27975034 UTC

Result size of Tidy Core
  = {terms: 101, types: 138, coercions: 6, joins: 0/1}

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.CPUTime.Posix.Times.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
System.CPUTime.Posix.Times.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.CPUTime.Posix.Times.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.CPUTime.Posix.Times.$trModule3
  = GHC.Types.TrNameS System.CPUTime.Posix.Times.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.CPUTime.Posix.Times.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 80 0}]
System.CPUTime.Posix.Times.$trModule2
  = "System.CPUTime.Posix.Times"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.CPUTime.Posix.Times.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.CPUTime.Posix.Times.$trModule1
  = GHC.Types.TrNameS System.CPUTime.Posix.Times.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
System.CPUTime.Posix.Times.$trModule :: GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
System.CPUTime.Posix.Times.$trModule
  = GHC.Types.Module
      System.CPUTime.Posix.Times.$trModule3
      System.CPUTime.Posix.Times.$trModule1

-- RHS size: {terms: 6, types: 11, coercions: 0, joins: 0/0}
clockTicks :: Integer
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 30 0}]
clockTicks
  = case {__pkg_ccall base-4.11.0.0 State# RealWorld
                           -> (# State# RealWorld, Int# #)}_dcCqX
           GHC.Prim.realWorld#
    of
    { (# ds_dcCqW, ds1_dcCqV #) ->
    integer-simple-0.1.1.1:GHC.Integer.Type.smallInteger ds1_dcCqV
    }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.CPUTime.Posix.Times.getCPUTime2 :: Integer
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 100 0}]
System.CPUTime.Posix.Times.getCPUTime2 = 1000000000000

-- RHS size: {terms: 9, types: 8, coercions: 0, joins: 0/0}
System.CPUTime.Posix.Times.getCpuTimePrecision2 :: Integer
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 80 0}]
System.CPUTime.Posix.Times.getCpuTimePrecision2
  = case GHC.Real.$w$s$cfromRational
           System.CPUTime.Posix.Times.getCPUTime2 clockTicks
    of
    { (# ww1_icCs5, ww2_icCs6 #) ->
    GHC.Real.$w$s$cround
      @ Integer GHC.Real.$fIntegralInteger ww1_icCs5 ww2_icCs6
    }

-- RHS size: {terms: 4, types: 9, coercions: 0, joins: 0/0}
System.CPUTime.Posix.Times.getCpuTimePrecision1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Integer #)
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)}]
System.CPUTime.Posix.Times.getCpuTimePrecision1
  = \ (s_i7IAV :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      (# s_i7IAV, System.CPUTime.Posix.Times.getCpuTimePrecision2 #)

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
getCpuTimePrecision :: IO Integer
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= System.CPUTime.Posix.Times.getCpuTimePrecision1
               `cast` (Sym (GHC.Types.N:IO[0] <Integer>_R)
                       :: (GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, Integer #) :: *)
                          ~R# (IO Integer :: *))}]
getCpuTimePrecision
  = System.CPUTime.Posix.Times.getCpuTimePrecision1
    `cast` (Sym (GHC.Types.N:IO[0] <Integer>_R)
            :: (GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, Integer #) :: *)
               ~R# (IO Integer :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.CPUTime.Posix.Times.getCPUTime3 :: Integer
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 100 0}]
System.CPUTime.Posix.Times.getCPUTime3 = 0

-- RHS size: {terms: 56, types: 77, coercions: 0, joins: 0/1}
System.CPUTime.Posix.Times.getCPUTime1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Integer #)
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 218 30}]
System.CPUTime.Posix.Times.getCPUTime1
  = \ (eta_icxbM :: GHC.Prim.State# GHC.Prim.RealWorld) ->
      case GHC.Prim.newPinnedByteArray#
             @ GHC.Prim.RealWorld 32# eta_icxbM
      of
      { (# ipv_icxbT, ipv1_icxbU #) ->
      case GHC.Prim.unsafeFreezeByteArray#
             @ GHC.Prim.RealWorld ipv1_icxbU ipv_icxbT
      of
      { (# ipv2_icxbY, ipv3_icxbZ #) ->
      let {
        p_tms_scCsO [Dmd=<S,U>] :: GHC.Prim.Addr#
        [LclId]
        p_tms_scCsO = GHC.Prim.byteArrayContents# ipv3_icxbZ } in
      case {__pkg_ccall base-4.11.0.0 Addr#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_dcCr5
             p_tms_scCsO ipv2_icxbY
      of
      { (# ds_dcCr3, ds4_dcCr2 #) ->
      case GHC.Prim.readInt64OffAddr#
             @ GHC.Prim.RealWorld p_tms_scCsO 0# ds_dcCr3
      of
      { (# ipv4_i9hDv, ipv5_i9hDw #) ->
      case GHC.Prim.readInt64OffAddr#
             @ GHC.Prim.RealWorld
             (GHC.Prim.plusAddr# p_tms_scCsO 8#)
             0#
             ipv4_i9hDv
      of
      { (# ipv6_X9hEt, ipv7_X9hEv #) ->
      case GHC.Prim.touch#
             @ 'GHC.Types.UnliftedRep
             @ GHC.Prim.ByteArray#
             ipv3_icxbZ
             ipv6_X9hEt
      of s4_icxc6
      { __DEFAULT ->
      (# s4_icxc6,
         case integer-simple-0.1.1.1:GHC.Integer.Type.eqInteger#
                clockTicks System.CPUTime.Posix.Times.getCPUTime3
         of {
           __DEFAULT ->
             integer-simple-0.1.1.1:GHC.Integer.Type.divInteger
               (integer-simple-0.1.1.1:GHC.Integer.Type.timesInteger
                  (integer-simple-0.1.1.1:GHC.Integer.Type.plusInteger
                     (integer-simple-0.1.1.1:GHC.Integer.Type.smallInteger ipv5_i9hDw)
                     (integer-simple-0.1.1.1:GHC.Integer.Type.smallInteger ipv7_X9hEv))
                  System.CPUTime.Posix.Times.getCPUTime2)
               clockTicks;
           1# -> GHC.Real.divZeroError @ Integer
         } #)
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
getCPUTime :: IO Integer
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= System.CPUTime.Posix.Times.getCPUTime1
               `cast` (Sym (GHC.Types.N:IO[0] <Integer>_R)
                       :: (GHC.Prim.State# GHC.Prim.RealWorld
                           -> (# GHC.Prim.State# GHC.Prim.RealWorld, Integer #) :: *)
                          ~R# (IO Integer :: *))}]
getCPUTime
  = System.CPUTime.Posix.Times.getCPUTime1
    `cast` (Sym (GHC.Types.N:IO[0] <Integer>_R)
            :: (GHC.Prim.State# GHC.Prim.RealWorld
                -> (# GHC.Prim.State# GHC.Prim.RealWorld, Integer #) :: *)
               ~R# (IO Integer :: *))


