
==================== Output Cmm ====================
2018-03-16 16:07:25.490250483 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:25.490756867 UTC

[section ""cstring" . System.CPUTime.Utils.$trModule4_bytes" {
     System.CPUTime.Utils.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.491340032 UTC

[section ""data" . System.CPUTime.Utils.$trModule3_closure" {
     System.CPUTime.Utils.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.Utils.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.491829147 UTC

[section ""cstring" . System.CPUTime.Utils.$trModule2_bytes" {
     System.CPUTime.Utils.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,67,80,85,84,105,109,101,46,85,116,105,108,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.492392046 UTC

[section ""data" . System.CPUTime.Utils.$trModule1_closure" {
     System.CPUTime.Utils.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.Utils.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.492951568 UTC

[section ""data" . System.CPUTime.Utils.$trModule_closure" {
     System.CPUTime.Utils.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.CPUTime.Utils.$trModule3_closure+1;
         const System.CPUTime.Utils.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.493874794 UTC

[section ""data" . System.CPUTime.Utils.csuSecondsToInteger_closure" {
     System.CPUTime.Utils.csuSecondsToInteger_closure:
         const System.CPUTime.Utils.csuSecondsToInteger_info;
 },
 System.CPUTime.Utils.csuSecondsToInteger_entry() //  [R2]
         { info_tbl: [(ccwUI,
                       label: System.CPUTime.Utils.csuSecondsToInteger_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwUI: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccwUJ; else goto ccwUK;
       ccwUJ: // global
           R2 = R2;
           R1 = System.CPUTime.Utils.csuSecondsToInteger_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccwUK: // global
           I64[Sp - 8] = block_ccwUF_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucwUO; else goto ccwUG;
       ucwUO: // global
           call _ccwUF(R1) args: 0, res: 0, upd: 0;
       ccwUG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccwUF() //  [R1]
         { info_tbl: [(ccwUF,
                       label: block_ccwUF_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwUF: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.495103422 UTC

[section ""data" . System.CPUTime.Utils.cTimeToInteger_closure" {
     System.CPUTime.Utils.cTimeToInteger_closure:
         const System.CPUTime.Utils.cTimeToInteger_info;
 },
 System.CPUTime.Utils.cTimeToInteger_entry() //  [R2]
         { info_tbl: [(ccwUW,
                       label: System.CPUTime.Utils.cTimeToInteger_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwUW: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccwUX; else goto ccwUY;
       ccwUX: // global
           R2 = R2;
           R1 = System.CPUTime.Utils.cTimeToInteger_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccwUY: // global
           I64[Sp - 8] = block_ccwUT_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucwV2; else goto ccwUU;
       ucwV2: // global
           call _ccwUT(R1) args: 0, res: 0, upd: 0;
       ccwUU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccwUT() //  [R1]
         { info_tbl: [(ccwUT,
                       label: block_ccwUT_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwUT: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.496241631 UTC

[section ""data" . System.CPUTime.Utils.cClockToInteger_closure" {
     System.CPUTime.Utils.cClockToInteger_closure:
         const System.CPUTime.Utils.cClockToInteger_info;
 },
 System.CPUTime.Utils.cClockToInteger_entry() //  [R2]
         { info_tbl: [(ccwVa,
                       label: System.CPUTime.Utils.cClockToInteger_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwVa: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccwVb; else goto ccwVc;
       ccwVb: // global
           R2 = R2;
           R1 = System.CPUTime.Utils.cClockToInteger_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccwVc: // global
           I64[Sp - 8] = block_ccwV7_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucwVg; else goto ccwV8;
       ucwVg: // global
           call _ccwV7(R1) args: 0, res: 0, upd: 0;
       ccwV8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccwV7() //  [R1]
         { info_tbl: [(ccwV7,
                       label: block_ccwV7_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwV7: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.497202686 UTC

[section ""relreadonly" . ScwVh_srt" { ScwVh_srt:
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.497804657 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:25.498359812 UTC

[section ""cstring" . System.CPUTime.Utils.$trModule4_bytes" {
     System.CPUTime.Utils.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.49892247 UTC

[section ""data" . System.CPUTime.Utils.$trModule3_closure" {
     System.CPUTime.Utils.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.Utils.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.499466857 UTC

[section ""cstring" . System.CPUTime.Utils.$trModule2_bytes" {
     System.CPUTime.Utils.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,67,80,85,84,105,109,101,46,85,116,105,108,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.500040128 UTC

[section ""data" . System.CPUTime.Utils.$trModule1_closure" {
     System.CPUTime.Utils.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.Utils.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.500573053 UTC

[section ""data" . System.CPUTime.Utils.$trModule_closure" {
     System.CPUTime.Utils.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.CPUTime.Utils.$trModule3_closure+1;
         const System.CPUTime.Utils.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.501416802 UTC

[section ""data" . System.CPUTime.Utils.csuSecondsToInteger_closure" {
     System.CPUTime.Utils.csuSecondsToInteger_closure:
         const System.CPUTime.Utils.csuSecondsToInteger_info;
 },
 System.CPUTime.Utils.csuSecondsToInteger_entry() //  [R2]
         { info_tbl: [(ccwVp,
                       label: System.CPUTime.Utils.csuSecondsToInteger_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwVp: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccwVq; else goto ccwVr;
       ccwVq: // global
           R2 = R2;
           R1 = System.CPUTime.Utils.csuSecondsToInteger_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccwVr: // global
           I64[Sp - 8] = block_ccwVm_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucwVv; else goto ccwVn;
       ucwVv: // global
           call _ccwVm(R1) args: 0, res: 0, upd: 0;
       ccwVn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccwVm() //  [R1]
         { info_tbl: [(ccwVm,
                       label: block_ccwVm_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwVm: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.502608555 UTC

[section ""data" . System.CPUTime.Utils.cTimeToInteger_closure" {
     System.CPUTime.Utils.cTimeToInteger_closure:
         const System.CPUTime.Utils.cTimeToInteger_info;
 },
 System.CPUTime.Utils.cTimeToInteger_entry() //  [R2]
         { info_tbl: [(ccwVD,
                       label: System.CPUTime.Utils.cTimeToInteger_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwVD: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccwVE; else goto ccwVF;
       ccwVE: // global
           R2 = R2;
           R1 = System.CPUTime.Utils.cTimeToInteger_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccwVF: // global
           I64[Sp - 8] = block_ccwVA_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucwVJ; else goto ccwVB;
       ucwVJ: // global
           call _ccwVA(R1) args: 0, res: 0, upd: 0;
       ccwVB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccwVA() //  [R1]
         { info_tbl: [(ccwVA,
                       label: block_ccwVA_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwVA: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.503784279 UTC

[section ""data" . System.CPUTime.Utils.cClockToInteger_closure" {
     System.CPUTime.Utils.cClockToInteger_closure:
         const System.CPUTime.Utils.cClockToInteger_info;
 },
 System.CPUTime.Utils.cClockToInteger_entry() //  [R2]
         { info_tbl: [(ccwVR,
                       label: System.CPUTime.Utils.cClockToInteger_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwVR: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccwVS; else goto ccwVT;
       ccwVS: // global
           R2 = R2;
           R1 = System.CPUTime.Utils.cClockToInteger_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccwVT: // global
           I64[Sp - 8] = block_ccwVO_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucwVX; else goto ccwVP;
       ucwVX: // global
           call _ccwVO(R1) args: 0, res: 0, upd: 0;
       ccwVP: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccwVO() //  [R1]
         { info_tbl: [(ccwVO,
                       label: block_ccwVO_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwVO: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.504799611 UTC

[section ""relreadonly" . ScwVh_srt" { ScwVh_srt:
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.505683741 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:25.506908242 UTC

[section ""cstring" . System.CPUTime.Utils.$trModule4_bytes" {
     System.CPUTime.Utils.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.50879075 UTC

[section ""data" . System.CPUTime.Utils.$trModule3_closure" {
     System.CPUTime.Utils.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.Utils.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.510739062 UTC

[section ""cstring" . System.CPUTime.Utils.$trModule2_bytes" {
     System.CPUTime.Utils.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,67,80,85,84,105,109,101,46,85,116,105,108,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.512542203 UTC

[section ""data" . System.CPUTime.Utils.$trModule1_closure" {
     System.CPUTime.Utils.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.Utils.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.514419402 UTC

[section ""data" . System.CPUTime.Utils.$trModule_closure" {
     System.CPUTime.Utils.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.CPUTime.Utils.$trModule3_closure+1;
         const System.CPUTime.Utils.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.516617887 UTC

[section ""data" . System.CPUTime.Utils.csuSecondsToInteger_closure" {
     System.CPUTime.Utils.csuSecondsToInteger_closure:
         const System.CPUTime.Utils.csuSecondsToInteger_info;
 },
 System.CPUTime.Utils.csuSecondsToInteger_entry() //  [R2]
         { info_tbl: [(ccwWa,
                       label: System.CPUTime.Utils.csuSecondsToInteger_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwWa: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccwWb; else goto ccwWc;
       ccwWb: // global
           R2 = R2;
           R1 = System.CPUTime.Utils.csuSecondsToInteger_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccwWc: // global
           I64[Sp - 8] = block_ccwW7_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucwWg; else goto ccwW8;
       ucwWg: // global
           call _ccwW7(R1) args: 0, res: 0, upd: 0;
       ccwW8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccwW7() //  [R1]
         { info_tbl: [(ccwW7,
                       label: block_ccwW7_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwW7: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.523180519 UTC

[section ""data" . System.CPUTime.Utils.cTimeToInteger_closure" {
     System.CPUTime.Utils.cTimeToInteger_closure:
         const System.CPUTime.Utils.cTimeToInteger_info;
 },
 System.CPUTime.Utils.cTimeToInteger_entry() //  [R2]
         { info_tbl: [(ccwWx,
                       label: System.CPUTime.Utils.cTimeToInteger_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwWx: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccwWy; else goto ccwWz;
       ccwWy: // global
           R2 = R2;
           R1 = System.CPUTime.Utils.cTimeToInteger_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccwWz: // global
           I64[Sp - 8] = block_ccwWu_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucwWD; else goto ccwWv;
       ucwWD: // global
           call _ccwWu(R1) args: 0, res: 0, upd: 0;
       ccwWv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccwWu() //  [R1]
         { info_tbl: [(ccwWu,
                       label: block_ccwWu_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwWu: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.529007789 UTC

[section ""data" . System.CPUTime.Utils.cClockToInteger_closure" {
     System.CPUTime.Utils.cClockToInteger_closure:
         const System.CPUTime.Utils.cClockToInteger_info;
 },
 System.CPUTime.Utils.cClockToInteger_entry() //  [R2]
         { info_tbl: [(ccwWU,
                       label: System.CPUTime.Utils.cClockToInteger_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwWU: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccwWV; else goto ccwWW;
       ccwWV: // global
           R2 = R2;
           R1 = System.CPUTime.Utils.cClockToInteger_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccwWW: // global
           I64[Sp - 8] = block_ccwWR_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucwX0; else goto ccwWS;
       ucwX0: // global
           call _ccwWR(R1) args: 0, res: 0, upd: 0;
       ccwWS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccwWR() //  [R1]
         { info_tbl: [(ccwWR,
                       label: block_ccwWR_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwWR: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.534346581 UTC

[section ""relreadonly" . ScwVh_srt" { ScwVh_srt:
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.567012604 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:07:25.568088137 UTC

[section ""cstring" . System.CPUTime.Utils.$trModule4_bytes" {
     System.CPUTime.Utils.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.5699514 UTC

[section ""data" . System.CPUTime.Utils.$trModule3_closure" {
     System.CPUTime.Utils.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.Utils.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.571678836 UTC

[section ""cstring" . System.CPUTime.Utils.$trModule2_bytes" {
     System.CPUTime.Utils.$trModule2_bytes:
         I8[] [83,121,115,116,101,109,46,67,80,85,84,105,109,101,46,85,116,105,108,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.573459924 UTC

[section ""data" . System.CPUTime.Utils.$trModule1_closure" {
     System.CPUTime.Utils.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const System.CPUTime.Utils.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.575220918 UTC

[section ""data" . System.CPUTime.Utils.$trModule_closure" {
     System.CPUTime.Utils.$trModule_closure:
         const GHC.Types.Module_con_info;
         const System.CPUTime.Utils.$trModule3_closure+1;
         const System.CPUTime.Utils.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.577431165 UTC

[section ""data" . System.CPUTime.Utils.csuSecondsToInteger_closure" {
     System.CPUTime.Utils.csuSecondsToInteger_closure:
         const System.CPUTime.Utils.csuSecondsToInteger_info;
 },
 System.CPUTime.Utils.csuSecondsToInteger_entry() //  [R2]
         { info_tbl: [(ccwXw,
                       label: System.CPUTime.Utils.csuSecondsToInteger_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwXw: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccwXx; else goto ccwXy;
       ccwXx: // global
           R2 = R2;
           R1 = System.CPUTime.Utils.csuSecondsToInteger_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccwXy: // global
           I64[Sp - 8] = block_ccwXt_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucwXC; else goto ccwXu;
       ucwXC: // global
           call _ccwXt(R1) args: 0, res: 0, upd: 0;
       ccwXu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccwXt() //  [R1]
         { info_tbl: [(ccwXt,
                       label: block_ccwXt_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwXt: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.583244327 UTC

[section ""data" . System.CPUTime.Utils.cTimeToInteger_closure" {
     System.CPUTime.Utils.cTimeToInteger_closure:
         const System.CPUTime.Utils.cTimeToInteger_info;
 },
 System.CPUTime.Utils.cTimeToInteger_entry() //  [R2]
         { info_tbl: [(ccwXU,
                       label: System.CPUTime.Utils.cTimeToInteger_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwXU: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccwXV; else goto ccwXW;
       ccwXV: // global
           R2 = R2;
           R1 = System.CPUTime.Utils.cTimeToInteger_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccwXW: // global
           I64[Sp - 8] = block_ccwXR_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucwY0; else goto ccwXS;
       ucwY0: // global
           call _ccwXR(R1) args: 0, res: 0, upd: 0;
       ccwXS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccwXR() //  [R1]
         { info_tbl: [(ccwXR,
                       label: block_ccwXR_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwXR: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.588913739 UTC

[section ""data" . System.CPUTime.Utils.cClockToInteger_closure" {
     System.CPUTime.Utils.cClockToInteger_closure:
         const System.CPUTime.Utils.cClockToInteger_info;
 },
 System.CPUTime.Utils.cClockToInteger_entry() //  [R2]
         { info_tbl: [(ccwYi,
                       label: System.CPUTime.Utils.cClockToInteger_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwYi: // global
           if ((Sp + -8) < SpLim) (likely: False) goto ccwYj; else goto ccwYk;
       ccwYj: // global
           R2 = R2;
           R1 = System.CPUTime.Utils.cClockToInteger_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       ccwYk: // global
           I64[Sp - 8] = block_ccwYf_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto ucwYo; else goto ccwYg;
       ucwYo: // global
           call _ccwYf(R1) args: 0, res: 0, upd: 0;
       ccwYg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _ccwYf() //  [R1]
         { info_tbl: [(ccwYf,
                       label: block_ccwYf_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       ccwYf: // global
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:07:25.595005223 UTC

[section ""relreadonly" . ScwYz_srt" { ScwYz_srt:
 }]

