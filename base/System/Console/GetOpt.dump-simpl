
==================== Tidy Core ====================
2018-03-16 16:07:20.126328154 UTC

Result size of Tidy Core
  = {terms: 2,170, types: 4,972, coercions: 0, joins: 4/51}

-- RHS size: {terms: 15, types: 18, coercions: 0, joins: 0/0}
System.Console.GetOpt.$fFunctorArgOrder_$cfmap
  :: forall a b. (a -> b) -> ArgOrder a -> ArgOrder b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,C(U)><S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_acr1k)
                 (@ b_acr1l)
                 (ds_dcraN [Occ=Once] :: a_acr1k -> b_acr1l)
                 (ds1_dcraO [Occ=Once!] :: ArgOrder a_acr1k) ->
                 case ds1_dcraO of {
                   RequireOrder -> System.Console.GetOpt.RequireOrder @ b_acr1l;
                   Permute -> System.Console.GetOpt.Permute @ b_acr1l;
                   ReturnInOrder g_acqJb [Occ=Once] ->
                     System.Console.GetOpt.ReturnInOrder
                       @ b_acr1l (. @ a_acr1k @ b_acr1l @ String ds_dcraN g_acqJb)
                 }}]
System.Console.GetOpt.$fFunctorArgOrder_$cfmap
  = \ (@ a_acr1k)
      (@ b_acr1l)
      (ds_dcraN :: a_acr1k -> b_acr1l)
      (ds1_dcraO :: ArgOrder a_acr1k) ->
      case ds1_dcraO of {
        RequireOrder -> System.Console.GetOpt.RequireOrder @ b_acr1l;
        Permute -> System.Console.GetOpt.Permute @ b_acr1l;
        ReturnInOrder g_acqJb ->
          System.Console.GetOpt.ReturnInOrder
            @ b_acr1l (. @ a_acr1k @ b_acr1l @ String ds_dcraN g_acqJb)
      }

-- RHS size: {terms: 14, types: 15, coercions: 0, joins: 0/0}
System.Console.GetOpt.$fFunctorArgOrder_$c<$
  :: forall a b. a -> ArgOrder b -> ArgOrder a
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_acr1w)
                 (@ b_acr1x)
                 (x_i9DkS [Occ=OnceL] :: a_acr1w)
                 (eta_B1 [Occ=Once!] :: ArgOrder b_acr1x) ->
                 case eta_B1 of {
                   RequireOrder -> System.Console.GetOpt.RequireOrder @ a_acr1w;
                   Permute -> System.Console.GetOpt.Permute @ a_acr1w;
                   ReturnInOrder _ [Occ=Dead] ->
                     System.Console.GetOpt.ReturnInOrder
                       @ a_acr1w (\ _ [Occ=Dead] -> x_i9DkS)
                 }}]
System.Console.GetOpt.$fFunctorArgOrder_$c<$
  = \ (@ a_acr1w)
      (@ b_acr1x)
      (x_i9DkS :: a_acr1w)
      (eta_B1 :: ArgOrder b_acr1x) ->
      case eta_B1 of {
        RequireOrder -> System.Console.GetOpt.RequireOrder @ a_acr1w;
        Permute -> System.Console.GetOpt.Permute @ a_acr1w;
        ReturnInOrder g_acqJb ->
          System.Console.GetOpt.ReturnInOrder
            @ a_acr1w (\ _ [Occ=Dead] -> x_i9DkS)
      }

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
System.Console.GetOpt.$fFunctorArgOrder [InlPrag=NOUSERINLINE CONLIKE]
  :: Functor ArgOrder
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       GHC.Base.C:Functor TYPE: ArgOrder
                          System.Console.GetOpt.$fFunctorArgOrder_$cfmap
                          System.Console.GetOpt.$fFunctorArgOrder_$c<$]
System.Console.GetOpt.$fFunctorArgOrder
  = GHC.Base.C:Functor
      @ ArgOrder
      System.Console.GetOpt.$fFunctorArgOrder_$cfmap
      System.Console.GetOpt.$fFunctorArgOrder_$c<$

-- RHS size: {terms: 22, types: 28, coercions: 0, joins: 0/0}
System.Console.GetOpt.$fFunctorArgDescr_$cfmap
  :: forall a b. (a -> b) -> ArgDescr a -> ArgDescr b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,C(U)><S,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [60 110] 140 80}]
System.Console.GetOpt.$fFunctorArgDescr_$cfmap
  = \ (@ a_acr0T)
      (@ b_acr0U)
      (f_acqIX :: a_acr0T -> b_acr0U)
      (ds_dcraD :: ArgDescr a_acr0T) ->
      case ds_dcraD of {
        NoArg a1_acqIY ->
          System.Console.GetOpt.NoArg @ b_acr0U (f_acqIX a1_acqIY);
        ReqArg g_acqJ0 s_acqJ1 ->
          System.Console.GetOpt.ReqArg
            @ b_acr0U (. @ a_acr0T @ b_acr0U @ String f_acqIX g_acqJ0) s_acqJ1;
        OptArg g_acqJ3 s_acqJ4 ->
          System.Console.GetOpt.OptArg
            @ b_acr0U
            (. @ a_acr0T @ b_acr0U @ (Maybe String) f_acqIX g_acqJ3)
            s_acqJ4
      }

-- RHS size: {terms: 19, types: 23, coercions: 0, joins: 0/0}
System.Console.GetOpt.$fFunctorArgDescr_$c<$
  :: forall a b. a -> ArgDescr b -> ArgDescr a
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_acr18)
                 (@ b_acr19)
                 (x_i9DkS [Occ=OnceL*] :: a_acr18)
                 (eta_B1 [Occ=Once!] :: ArgDescr b_acr19) ->
                 case eta_B1 of {
                   NoArg _ [Occ=Dead] ->
                     System.Console.GetOpt.NoArg @ a_acr18 x_i9DkS;
                   ReqArg _ [Occ=Dead] s_acqJ1 [Occ=Once] ->
                     System.Console.GetOpt.ReqArg
                       @ a_acr18 (\ _ [Occ=Dead] -> x_i9DkS) s_acqJ1;
                   OptArg _ [Occ=Dead] s_acqJ4 [Occ=Once] ->
                     System.Console.GetOpt.OptArg
                       @ a_acr18 (\ _ [Occ=Dead] -> x_i9DkS) s_acqJ4
                 }}]
System.Console.GetOpt.$fFunctorArgDescr_$c<$
  = \ (@ a_acr18)
      (@ b_acr19)
      (x_i9DkS :: a_acr18)
      (eta_B1 :: ArgDescr b_acr19) ->
      case eta_B1 of {
        NoArg a1_acqIY -> System.Console.GetOpt.NoArg @ a_acr18 x_i9DkS;
        ReqArg g_acqJ0 s_acqJ1 ->
          System.Console.GetOpt.ReqArg
            @ a_acr18 (\ _ [Occ=Dead] -> x_i9DkS) s_acqJ1;
        OptArg g_acqJ3 s_acqJ4 ->
          System.Console.GetOpt.OptArg
            @ a_acr18 (\ _ [Occ=Dead] -> x_i9DkS) s_acqJ4
      }

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
System.Console.GetOpt.$fFunctorArgDescr [InlPrag=NOUSERINLINE CONLIKE]
  :: Functor ArgDescr
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       GHC.Base.C:Functor TYPE: ArgDescr
                          System.Console.GetOpt.$fFunctorArgDescr_$cfmap
                          System.Console.GetOpt.$fFunctorArgDescr_$c<$]
System.Console.GetOpt.$fFunctorArgDescr
  = GHC.Base.C:Functor
      @ ArgDescr
      System.Console.GetOpt.$fFunctorArgDescr_$cfmap
      System.Console.GetOpt.$fFunctorArgDescr_$c<$

-- RHS size: {terms: 14, types: 20, coercions: 0, joins: 0/0}
System.Console.GetOpt.$fFunctorOptDescr_$cfmap
  :: forall a b. (a -> b) -> OptDescr a -> OptDescr b
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,C(U)><S,1*U(U,U,1*U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_acr0v)
                 (@ b_acr0w)
                 (f_acqJ5 [Occ=Once] :: a_acr0v -> b_acr0w)
                 (ds_dcraw [Occ=Once!] :: OptDescr a_acr0v) ->
                 case ds_dcraw of
                 { Option a1_acqJ6 [Occ=Once] b1_acqJ7 [Occ=Once]
                          argDescr_acqJ8 [Occ=Once] c_acqJ9 [Occ=Once] ->
                 System.Console.GetOpt.Option
                   @ b_acr0w
                   a1_acqJ6
                   b1_acqJ7
                   (System.Console.GetOpt.$fFunctorArgDescr_$cfmap
                      @ a_acr0v @ b_acr0w f_acqJ5 argDescr_acqJ8)
                   c_acqJ9
                 }}]
System.Console.GetOpt.$fFunctorOptDescr_$cfmap
  = \ (@ a_acr0v)
      (@ b_acr0w)
      (f_acqJ5 :: a_acr0v -> b_acr0w)
      (ds_dcraw :: OptDescr a_acr0v) ->
      case ds_dcraw of
      { Option a1_acqJ6 b1_acqJ7 argDescr_acqJ8 c_acqJ9 ->
      System.Console.GetOpt.Option
        @ b_acr0w
        a1_acqJ6
        b1_acqJ7
        (System.Console.GetOpt.$fFunctorArgDescr_$cfmap
           @ a_acr0v @ b_acr0w f_acqJ5 argDescr_acqJ8)
        c_acqJ9
      }

-- RHS size: {terms: 26, types: 33, coercions: 0, joins: 0/0}
System.Console.GetOpt.$fFunctorOptDescr_$c<$ [InlPrag=NOUSERINLINE[0]]
  :: forall a b. a -> OptDescr b -> OptDescr a
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U(U,U,1*U,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_scrOx)
                 (@ b_scrOy)
                 (w_scrOz [Occ=OnceL*] :: a_scrOx)
                 (w1_scrOA [Occ=Once!] :: OptDescr b_scrOy) ->
                 case w1_scrOA of
                 { Option ww1_scrOD [Occ=Once] ww2_scrOE [Occ=Once]
                          ww3_scrOF [Occ=Once!] ww4_scrOG [Occ=Once] ->
                 System.Console.GetOpt.Option
                   @ a_scrOx
                   ww1_scrOD
                   ww2_scrOE
                   (case ww3_scrOF of {
                      NoArg _ [Occ=Dead] ->
                        System.Console.GetOpt.NoArg @ a_scrOx w_scrOz;
                      ReqArg _ [Occ=Dead] s_acqJ1 [Occ=Once] ->
                        System.Console.GetOpt.ReqArg
                          @ a_scrOx (\ _ [Occ=Dead] -> w_scrOz) s_acqJ1;
                      OptArg _ [Occ=Dead] s_acqJ4 [Occ=Once] ->
                        System.Console.GetOpt.OptArg
                          @ a_scrOx (\ _ [Occ=Dead] -> w_scrOz) s_acqJ4
                    })
                   ww4_scrOG
                 }}]
System.Console.GetOpt.$fFunctorOptDescr_$c<$
  = \ (@ a_scrOx)
      (@ b_scrOy)
      (w_scrOz :: a_scrOx)
      (w1_scrOA :: OptDescr b_scrOy) ->
      case w1_scrOA of
      { Option ww1_scrOD ww2_scrOE ww3_scrOF ww4_scrOG ->
      System.Console.GetOpt.Option
        @ a_scrOx
        ww1_scrOD
        ww2_scrOE
        (case ww3_scrOF of {
           NoArg a1_acqIY -> System.Console.GetOpt.NoArg @ a_scrOx w_scrOz;
           ReqArg g_acqJ0 s_acqJ1 ->
             System.Console.GetOpt.ReqArg
               @ a_scrOx (\ _ [Occ=Dead] -> w_scrOz) s_acqJ1;
           OptArg g_acqJ3 s_acqJ4 ->
             System.Console.GetOpt.OptArg
               @ a_scrOx (\ _ [Occ=Dead] -> w_scrOz) s_acqJ4
         })
        ww4_scrOG
      }

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
System.Console.GetOpt.$fFunctorOptDescr [InlPrag=NOUSERINLINE CONLIKE]
  :: Functor OptDescr
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       GHC.Base.C:Functor TYPE: OptDescr
                          System.Console.GetOpt.$fFunctorOptDescr_$cfmap
                          System.Console.GetOpt.$fFunctorOptDescr_$c<$]
System.Console.GetOpt.$fFunctorOptDescr
  = GHC.Base.C:Functor
      @ OptDescr
      System.Console.GetOpt.$fFunctorOptDescr_$cfmap
      System.Console.GetOpt.$fFunctorOptDescr_$c<$

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl_rcsmT :: Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl_rcsmT = GHC.Types.C# ' '#

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
lvl1_rcsmU :: [Char]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
lvl1_rcsmU = GHC.Types.: @ Char lvl_rcsmT (GHC.Types.[] @ Char)

Rec {
-- RHS size: {terms: 12, types: 3, coercions: 0, joins: 0/0}
$wxs_rcsmV :: GHC.Prim.Int# -> [Char]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>m2, Unf=OtherCon []]
$wxs_rcsmV
  = \ (ww_scrOP :: GHC.Prim.Int#) ->
      case ww_scrOP of ds1_iax4j {
        __DEFAULT ->
          GHC.Types.:
            @ Char lvl_rcsmT ($wxs_rcsmV (GHC.Prim.-# ds1_iax4j 1#));
        1# -> lvl1_rcsmU
      }
end Rec }

Rec {
-- RHS size: {terms: 22, types: 12, coercions: 0, joins: 0/0}
System.Console.GetOpt.$wgo [InlPrag=NOUSERINLINE[0],
                            Occ=LoopBreaker]
  :: [Char] -> GHC.Prim.Int# -> [Char]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>m2,
 Unf=OtherCon []]
System.Console.GetOpt.$wgo
  = \ (w_scrOS :: [Char]) (ww_scrOW :: GHC.Prim.Int#) ->
      case w_scrOS of {
        [] -> $wxs_rcsmV ww_scrOW;
        : y_X7Jf9 ys_X7Jfb ->
          case ww_scrOW of ds1_iax4j {
            __DEFAULT ->
              GHC.Types.:
                @ Char
                y_X7Jf9
                (System.Console.GetOpt.$wgo ys_X7Jfb (GHC.Prim.-# ds1_iax4j 1#));
            1# -> GHC.Types.: @ Char y_X7Jf9 (GHC.Types.[] @ Char)
          }
      }
end Rec }

-- RHS size: {terms: 50, types: 45, coercions: 0, joins: 0/3}
System.Console.GetOpt.usageInfo_sameLen :: [[Char]] -> [[Char]]
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0] 292 0}]
System.Console.GetOpt.usageInfo_sameLen
  = \ (xs_acqJA :: [[Char]]) ->
      let {
        n_scrke [Dmd=<L,U(U)>] :: Int
        [LclId]
        n_scrke
          = case map @ [Char] @ Int (GHC.List.length @ Char) xs_acqJA of {
              [] -> GHC.List.maximum2;
              : ipv_icrbk ipv1_icrbl ->
                case ipv_icrbk of { GHC.Types.I# ww1_icrbp ->
                case GHC.List.$wgo ipv1_icrbl ww1_icrbp of ww2_icrbr { __DEFAULT ->
                GHC.Types.I# ww2_icrbr
                }
                }
            } } in
      let {
        lvl25_scrkj :: Bool
        [LclId]
        lvl25_scrkj
          = case n_scrke of { GHC.Types.I# y_alNd ->
            GHC.Prim.tagToEnum# @ Bool (GHC.Prim.<# 0# y_alNd)
            } } in
      letrec {
        go_i7Jcj [Occ=LoopBreaker] :: [[Char]] -> [[Char]]
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        go_i7Jcj
          = \ (ds_i7Jck :: [[Char]]) ->
              case ds_i7Jck of {
                [] -> GHC.Types.[] @ [Char];
                : y_i7Jcp ys_i7Jcq ->
                  GHC.Types.:
                    @ [Char]
                    (case lvl25_scrkj of {
                       False -> GHC.Types.[] @ Char;
                       True ->
                         case n_scrke of { GHC.Types.I# ww1_scrOW ->
                         System.Console.GetOpt.$wgo y_i7Jcp ww1_scrOW
                         }
                     })
                    (go_i7Jcj ys_i7Jcq)
              }; } in
      go_i7Jcj xs_acqJA

Rec {
-- RHS size: {terms: 21, types: 24, coercions: 0, joins: 0/0}
sepBy_rcsmW :: Char -> [[Char]] -> [Char]
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,U><S,1*U>, Unf=OtherCon []]
sepBy_rcsmW
  = \ (ds_dcr3f :: Char) (ds1_dcr3g :: [[Char]]) ->
      case ds1_dcr3g of {
        [] -> GHC.Types.[] @ Char;
        : x_acqJL ds2_dcr3s ->
          case ds2_dcr3s of wild1_Xp {
            [] -> x_acqJL;
            : ipv_scrb8 ipv1_scrb9 ->
              ++
                @ Char
                x_acqJL
                (GHC.Types.:
                   @ Char
                   ds_dcr3f
                   (GHC.Types.: @ Char lvl_rcsmT (sepBy_rcsmW ds_dcr3f wild1_Xp)))
          }
      }
end Rec }

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl2_rcsmX :: Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl2_rcsmX = GHC.Types.C# ','#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl3_rcsmY :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl3_rcsmY = "-"#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl4_rcsmZ :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl4_rcsmZ = "["#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl5_rcsn0 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl5_rcsn0 = "]"#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl6_rcsn1 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl6_rcsn1 = "--"#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl7_rcsn2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl7_rcsn2 = "[="#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl8_rcsn3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl8_rcsn3 = "  "#

Rec {
-- RHS size: {terms: 34, types: 43, coercions: 0, joins: 0/0}
System.Console.GetOpt.usageInfo_go2 [Occ=LoopBreaker]
  :: [[Char]] -> [[Char]] -> [[Char]] -> [[Char]]
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,1*U><L,1*U><L,1*U>,
 Unf=OtherCon []]
System.Console.GetOpt.usageInfo_go2
  = \ (ds_iaIjO :: [[Char]])
      (ds1_iaIjP :: [[Char]])
      (ds2_iaIjQ :: [[Char]]) ->
      case ds_iaIjO of {
        [] -> GHC.Types.[] @ [Char];
        : a1_iaIjU as_iaIjV ->
          case ds1_iaIjP of {
            [] -> GHC.Types.[] @ [Char];
            : b1_iaIk0 bs_iaIk1 ->
              case ds2_iaIjQ of {
                [] -> GHC.Types.[] @ [Char];
                : c1_iaIk6 cs_iaIk7 ->
                  GHC.Types.:
                    @ [Char]
                    (GHC.CString.unpackAppendCString#
                       lvl8_rcsn3
                       (++
                          @ Char
                          a1_iaIjU
                          (GHC.CString.unpackAppendCString#
                             lvl8_rcsn3
                             (++
                                @ Char
                                b1_iaIk0
                                (GHC.CString.unpackAppendCString# lvl8_rcsn3 c1_iaIk6)))))
                    (System.Console.GetOpt.usageInfo_go2 as_iaIjV bs_iaIk1 cs_iaIk7)
              }
          }
      }
end Rec }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl9_rcsn4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl9_rcsn4 = " "#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl10_rcsn5 :: [Char]
[GblId]
lvl10_rcsn5 = GHC.CString.unpackCString# lvl5_rcsn0

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl11_rcsn6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl11_rcsn6 = "="#

Rec {
-- RHS size: {terms: 159, types: 293, coercions: 0, joins: 0/6}
System.Console.GetOpt.usageInfo1 [InlPrag=NOUSERINLINE[0],
                                  Occ=LoopBreaker]
  :: forall a. [OptDescr a] -> (# [String], [String], [String] #)
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
System.Console.GetOpt.usageInfo1
  = \ (@ a_acqTw) (w_scrP7 :: [OptDescr a_acqTw]) ->
      case w_scrP7 of {
        [] ->
          (# GHC.Types.[] @ String, GHC.Types.[] @ String,
             GHC.Types.[] @ String #);
        : y_i7Jcp ys_i7Jcq ->
          case y_i7Jcp of
          { Option sos_acqJE los_acqJF ad_acqJG descr_acqJH ->
          let {
            b2_ic3t9 [Dmd=<L,U(U,U,U)>] :: ([String], [String], [String])
            [LclId]
            b2_ic3t9
              = case System.Console.GetOpt.usageInfo1 @ a_acqTw ys_i7Jcq of
                { (# ww1_scrPS, ww2_scrPT, ww3_scrPU #) ->
                (ww1_scrPS, ww2_scrPT, ww3_scrPU)
                } } in
          let {
            sosFmt_scrkb :: [Char]
            [LclId]
            sosFmt_scrkb
              = sepBy_rcsmW
                  lvl2_rcsmX
                  (map
                     @ Char
                     @ [Char]
                     (\ (so_acqJS :: Char) ->
                        case ad_acqJG of {
                          NoArg ds_dcr2M ->
                            GHC.CString.unpackAppendCString#
                              lvl3_rcsmY (GHC.Types.: @ Char so_acqJS (GHC.Types.[] @ Char));
                          ReqArg ds_dcr2N ad1_acqJT ->
                            GHC.CString.unpackAppendCString#
                              lvl3_rcsmY
                              (GHC.Types.:
                                 @ Char
                                 so_acqJS
                                 (GHC.CString.unpackAppendCString# lvl9_rcsn4 ad1_acqJT));
                          OptArg ds_dcr2O ad1_acqJV ->
                            GHC.CString.unpackAppendCString#
                              lvl3_rcsmY
                              (GHC.Types.:
                                 @ Char
                                 so_acqJS
                                 (GHC.CString.unpackAppendCString#
                                    lvl4_rcsmZ (++ @ Char ad1_acqJV lvl10_rcsn5)))
                        })
                     sos_acqJE) } in
          let {
            losFmt_scrka :: [Char]
            [LclId]
            losFmt_scrka
              = sepBy_rcsmW
                  lvl2_rcsmX
                  (map
                     @ [Char]
                     @ [Char]
                     (\ (lo_acqJX :: String) ->
                        case ad_acqJG of {
                          NoArg ds_dcr2k ->
                            GHC.CString.unpackAppendCString# lvl6_rcsn1 lo_acqJX;
                          ReqArg ds_dcr2l ad1_acqJY ->
                            GHC.CString.unpackAppendCString#
                              lvl6_rcsn1
                              (++
                                 @ Char
                                 lo_acqJX
                                 (GHC.CString.unpackAppendCString# lvl11_rcsn6 ad1_acqJY));
                          OptArg ds_dcr2m ad1_acqK0 ->
                            GHC.CString.unpackAppendCString#
                              lvl6_rcsn1
                              (++
                                 @ Char
                                 lo_acqJX
                                 (GHC.CString.unpackAppendCString#
                                    lvl7_rcsn2 (++ @ Char ad1_acqK0 lvl10_rcsn5)))
                        })
                     los_acqJF) } in
          case lines descr_acqJH of {
            [] ->
              (# GHC.Types.:
                   @ String
                   sosFmt_scrkb
                   (case b2_ic3t9 of { (as_icr3K, bs_icr3L, cs_icr3M) -> as_icr3K }),
                 GHC.Types.:
                   @ String
                   losFmt_scrka
                   (case b2_ic3t9 of { (as_icr3Q, bs_icr3R, cs_icr3S) -> bs_icr3R }),
                 GHC.Types.:
                   @ String
                   (GHC.Types.[] @ Char)
                   (case b2_ic3t9 of { (as_icr3W, bs_icr3X, cs_icr3Y) ->
                    cs_icr3Y
                    }) #);
            : d_acqJP ds_acqJQ ->
              let {
                ds1_icr3B [Dmd=<L,U(1*U,1*U,1*U)>]
                  :: ([String], [String], [String])
                [LclId]
                ds1_icr3B
                  = letrec {
                      go_X7Jfl [Occ=LoopBreaker]
                        :: [String] -> ([String], [String], [String])
                      [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                      go_X7Jfl
                        = \ (ds2_X7Jfn :: [String]) ->
                            case ds2_X7Jfn of {
                              [] -> b2_ic3t9;
                              : y1_X7Jfv ys1_X7Jfx ->
                                let {
                                  ds3_dcr2Z [Dmd=<L,U(1*U,1*U,1*U)>]
                                    :: ([String], [String], [String])
                                  [LclId]
                                  ds3_dcr2Z = go_X7Jfl ys1_X7Jfx } in
                                (GHC.Types.:
                                   @ String
                                   (GHC.Types.[] @ Char)
                                   (case ds3_dcr2Z of { (as_icr3K, bs_icr3L, cs_icr3M) ->
                                    as_icr3K
                                    }),
                                 GHC.Types.:
                                   @ String
                                   (GHC.Types.[] @ Char)
                                   (case ds3_dcr2Z of { (as_icr3Q, bs_icr3R, cs_icr3S) ->
                                    bs_icr3R
                                    }),
                                 GHC.Types.:
                                   @ String
                                   y1_X7Jfv
                                   (case ds3_dcr2Z of { (as_icr3W, bs_icr3X, cs_icr3Y) ->
                                    cs_icr3Y
                                    }))
                            }; } in
                    go_X7Jfl ds_acqJQ } in
              (# GHC.Types.:
                   @ String
                   sosFmt_scrkb
                   (case ds1_icr3B of { (as_icr3K, bs_icr3L, cs_icr3M) -> as_icr3K }),
                 GHC.Types.:
                   @ String
                   losFmt_scrka
                   (case ds1_icr3B of { (as_icr3Q, bs_icr3R, cs_icr3S) -> bs_icr3R }),
                 GHC.Types.:
                   @ String
                   d_acqJP
                   (case ds1_icr3B of { (as_icr3W, bs_icr3X, cs_icr3Y) ->
                    cs_icr3Y
                    }) #)
          }
          }
      }
end Rec }

-- RHS size: {terms: 16, types: 24, coercions: 0, joins: 0/0}
usageInfo :: forall a. String -> [OptDescr a] -> String
[GblId,
 Arity=2,
 Str=<L,U><L,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0] 140 0}]
usageInfo
  = \ (@ a_acqTw)
      (header_acqJo :: String)
      (optDescr_acqJp :: [OptDescr a_acqTw]) ->
      unlines
        (GHC.Types.:
           @ String
           header_acqJo
           (case System.Console.GetOpt.usageInfo1 @ a_acqTw optDescr_acqJp of
            { (# ww1_scrPS, ww2_scrPT, ww3_scrPU #) ->
            System.Console.GetOpt.usageInfo_go2
              (System.Console.GetOpt.usageInfo_sameLen ww1_scrPS)
              (System.Console.GetOpt.usageInfo_sameLen ww2_scrPT)
              ww3_scrPU
            }))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl12_rcsn7 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl12_rcsn7 = "option `"#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl13_rcsn8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl13_rcsn8 = "' is ambiguous; could be one of:"#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl14_rcsn9 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl14_rcsn9 = "' requires an argument "#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl15_rcsna :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl15_rcsna = "\n"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl16_rcsnb :: [Char]
[GblId]
lvl16_rcsnb = GHC.CString.unpackCString# lvl15_rcsna

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.getOpt2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
System.Console.GetOpt.getOpt2 = "unrecognized option `"#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.getOpt1 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
System.Console.GetOpt.getOpt1 = "'\n"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl17_rcsnc :: [Char]
[GblId]
lvl17_rcsnc
  = GHC.CString.unpackCString# System.Console.GetOpt.getOpt1

-- RHS size: {terms: 6, types: 2, coercions: 0, joins: 0/0}
errUnrec :: String -> String
[GblId,
 Arity=1,
 Str=<L,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (optStr_acqLK [Occ=Once] :: String) ->
                 GHC.CString.unpackAppendCString#
                   System.Console.GetOpt.getOpt2
                   (GHC.Base.build
                      @ Char
                      (\ (@ b_i7Jcc)
                         (c_i7Jcd [OS=OneShot] :: Char -> b_i7Jcc -> b_i7Jcc)
                         (n_i7Jce [Occ=Once, OS=OneShot] :: b_i7Jcc) ->
                         GHC.Base.foldr
                           @ Char
                           @ b_i7Jcc
                           c_i7Jcd
                           (GHC.CString.unpackFoldrCString#
                              @ b_i7Jcc System.Console.GetOpt.getOpt1 c_i7Jcd n_i7Jce)
                           optStr_acqLK))}]
errUnrec
  = \ (optStr_acqLK :: String) ->
      GHC.CString.unpackAppendCString#
        System.Console.GetOpt.getOpt2 (++ @ Char optStr_acqLK lvl17_rcsnc)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl18_rcsnd :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl18_rcsnd = "' doesn't allow an argument\n"#

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
lvl19_rcsne :: [Char] -> [Char] -> Bool
[GblId, Arity=2, Caf=NoCafRefs, Unf=OtherCon []]
lvl19_rcsne = isPrefixOf @ Char GHC.Classes.$fEqChar

-- RHS size: {terms: 10, types: 4, coercions: 0, joins: 0/0}
lvl20_rcsnf :: Char -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(1*U)>,
 Unf=OtherCon []]
lvl20_rcsnf
  = \ (ds_dcr6o :: Char) ->
      case ds_dcr6o of { GHC.Types.C# x_a5ih ->
      case x_a5ih of {
        __DEFAULT -> GHC.Types.False;
        '='# -> GHC.Types.True
      }
      }

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl21_rcsng :: Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl21_rcsng = GHC.Types.C# '-'#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl22_rcsnh :: [Char]
[GblId]
lvl22_rcsnh = GHC.CString.unpackCString# lvl18_rcsnd

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl23_rcsni :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl23_rcsni = "option `--"#

Rec {
-- RHS size: {terms: 14, types: 27, coercions: 0, joins: 0/0}
poly_go_rcsnj :: forall a. [OptDescr a] -> [ArgDescr a]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []]
poly_go_rcsnj
  = \ (@ a_scrPx) (ds_i7Jck :: [OptDescr a_scrPx]) ->
      case ds_i7Jck of {
        [] -> GHC.Types.[] @ (ArgDescr a_scrPx);
        : y_i7Jcp ys_i7Jcq ->
          case y_i7Jcp of { Option ds1_dcr5N ds2_dcr5O ad_acqKQ ds3_dcr5P ->
          GHC.Types.:
            @ (ArgDescr a_scrPx) ad_acqKQ (poly_go_rcsnj @ a_scrPx ys_i7Jcq)
          }
      }
end Rec }

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl24_rcsnk :: [Char]
[GblId]
lvl24_rcsnk = GHC.CString.unpackCString# lvl13_rcsn8

Rec {
-- RHS size: {terms: 14, types: 27, coercions: 0, joins: 0/0}
poly_go1_rcsnl :: forall a. [OptDescr a] -> [ArgDescr a]
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []]
poly_go1_rcsnl
  = \ (@ a_scrPx) (ds_i7Jck :: [OptDescr a_scrPx]) ->
      case ds_i7Jck of {
        [] -> GHC.Types.[] @ (ArgDescr a_scrPx);
        : y_i7Jcp ys_i7Jcq ->
          case y_i7Jcp of { Option ds1_dcr7Z ds2_dcr80 ad_acqLj ds3_dcr81 ->
          GHC.Types.:
            @ (ArgDescr a_scrPx) ad_acqLj (poly_go1_rcsnl @ a_scrPx ys_i7Jcq)
          }
      }
end Rec }

Rec {
-- RHS size: {terms: 1,238,
              types: 3,858,
              coercions: 0,
              joins: 4/41}
System.Console.GetOpt.$wgetOpt' [InlPrag=NOUSERINLINE[0],
                                 Occ=LoopBreaker]
  :: forall a.
     ArgOrder a
     -> [OptDescr a]
     -> [String]
     -> (# [a], [String], [String], [String] #)
[GblId, Arity=3, Str=<L,1*U><L,U><S,1*U>, Unf=OtherCon []]
System.Console.GetOpt.$wgetOpt'
  = \ (@ a_scrPx)
      (w_scrPy :: ArgOrder a_scrPx)
      (w1_scrPz :: [OptDescr a_scrPx])
      (w2_scrPA :: [String]) ->
      case w2_scrPA of wild_X1i {
        [] ->
          (# GHC.Types.[] @ a_scrPx, GHC.Types.[] @ String,
             GHC.Types.[] @ String, GHC.Types.[] @ String #);
        : arg_acqKb args_acqKc ->
          case arg_acqKb of wild1_X1u {
            [] ->
              case w_scrPy of wild2_XF {
                RequireOrder ->
                  (# GHC.Types.[] @ a_scrPx,
                     GHC.Types.: @ String (GHC.Types.[] @ Char) args_acqKc,
                     GHC.Types.[] @ String, GHC.Types.[] @ String #);
                Permute ->
                  let {
                    ds_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                      :: ([a_scrPx], [String], [String], [String])
                    [LclId]
                    ds_scrjC
                      = case System.Console.GetOpt.$wgetOpt'
                               @ a_scrPx
                               (System.Console.GetOpt.Permute @ a_scrPx)
                               w1_scrPz
                               args_acqKc
                        of
                        { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1 #) ->
                        (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
                        } } in
                  (# case ds_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                     os_acqZh
                     },
                     GHC.Types.:
                       @ String
                       (GHC.Types.[] @ Char)
                       (case ds_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                        xs_acqZj
                        }),
                     case ds_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                     us_acqZl
                     },
                     case ds_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                     es_acqZn
                     } #);
                ReturnInOrder f_acqKp ->
                  let {
                    ds_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                      :: ([a_scrPx], [String], [String], [String])
                    [LclId]
                    ds_scrjC
                      = case System.Console.GetOpt.$wgetOpt'
                               @ a_scrPx wild2_XF w1_scrPz args_acqKc
                        of
                        { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1 #) ->
                        (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
                        } } in
                  (# GHC.Types.:
                       @ a_scrPx
                       (f_acqKp (GHC.Types.[] @ Char))
                       (case ds_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                        os_acqZh
                        }),
                     case ds_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                     xs_acqZj
                     },
                     case ds_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                     us_acqZl
                     },
                     case ds_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                     es_acqZn
                     } #)
              };
            : ds_dcr8M ds1_dcr8N ->
              case ds_dcr8M of { GHC.Types.C# ds2_dcr8O ->
              case ds2_dcr8O of {
                __DEFAULT ->
                  case w_scrPy of wild3_XF {
                    RequireOrder ->
                      (# GHC.Types.[] @ a_scrPx, wild_X1i, GHC.Types.[] @ String,
                         GHC.Types.[] @ String #);
                    Permute ->
                      let {
                        ds4_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                          :: ([a_scrPx], [String], [String], [String])
                        [LclId]
                        ds4_scrjC
                          = case System.Console.GetOpt.$wgetOpt'
                                   @ a_scrPx
                                   (System.Console.GetOpt.Permute @ a_scrPx)
                                   w1_scrPz
                                   args_acqKc
                            of
                            { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1 #) ->
                            (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
                            } } in
                      (# case ds4_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                         os_acqZh
                         },
                         GHC.Types.:
                           @ String
                           wild1_X1u
                           (case ds4_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                            xs_acqZj
                            }),
                         case ds4_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                         us_acqZl
                         },
                         case ds4_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                         es_acqZn
                         } #);
                    ReturnInOrder f_acqKp ->
                      let {
                        ds4_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                          :: ([a_scrPx], [String], [String], [String])
                        [LclId]
                        ds4_scrjC
                          = case System.Console.GetOpt.$wgetOpt'
                                   @ a_scrPx wild3_XF w1_scrPz args_acqKc
                            of
                            { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1 #) ->
                            (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
                            } } in
                      (# GHC.Types.:
                           @ a_scrPx
                           (f_acqKp wild1_X1u)
                           (case ds4_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                            os_acqZh
                            }),
                         case ds4_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                         xs_acqZj
                         },
                         case ds4_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                         us_acqZl
                         },
                         case ds4_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                         es_acqZn
                         } #)
                  };
                '-'# ->
                  case ds1_dcr8N of {
                    [] ->
                      case w_scrPy of wild4_XF {
                        RequireOrder ->
                          (# GHC.Types.[] @ a_scrPx, wild_X1i, GHC.Types.[] @ String,
                             GHC.Types.[] @ String #);
                        Permute ->
                          let {
                            ds4_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                              :: ([a_scrPx], [String], [String], [String])
                            [LclId]
                            ds4_scrjC
                              = case System.Console.GetOpt.$wgetOpt'
                                       @ a_scrPx
                                       (System.Console.GetOpt.Permute @ a_scrPx)
                                       w1_scrPz
                                       args_acqKc
                                of
                                { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1 #) ->
                                (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
                                } } in
                          (# case ds4_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                             os_acqZh
                             },
                             GHC.Types.:
                               @ String
                               wild1_X1u
                               (case ds4_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                xs_acqZj
                                }),
                             case ds4_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                             us_acqZl
                             },
                             case ds4_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                             es_acqZn
                             } #);
                        ReturnInOrder f_acqKp ->
                          let {
                            ds4_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                              :: ([a_scrPx], [String], [String], [String])
                            [LclId]
                            ds4_scrjC
                              = case System.Console.GetOpt.$wgetOpt'
                                       @ a_scrPx wild4_XF w1_scrPz args_acqKc
                                of
                                { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1 #) ->
                                (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
                                } } in
                          (# GHC.Types.:
                               @ a_scrPx
                               (f_acqKp wild1_X1u)
                               (case ds4_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                os_acqZh
                                }),
                             case ds4_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                             xs_acqZj
                             },
                             case ds4_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                             us_acqZl
                             },
                             case ds4_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                             es_acqZn
                             } #)
                      };
                    : ds4_dcr8P ds5_dcr8Q ->
                      case ds4_dcr8P of wild4_Xy { GHC.Types.C# ds6_dcr8R ->
                      case ds6_dcr8R of ds7_Xcr9r {
                        __DEFAULT ->
                          letrec {
                            go_i7Jcj [Occ=LoopBreaker]
                              :: [OptDescr a_scrPx] -> [OptDescr a_scrPx]
                            [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                            go_i7Jcj
                              = \ (ds8_i7Jck :: [OptDescr a_scrPx]) ->
                                  case ds8_i7Jck of {
                                    [] -> GHC.Types.[] @ (OptDescr a_scrPx);
                                    : y_i7Jcp ys_i7Jcq ->
                                      case y_i7Jcp of wild6_X27
                                      { Option ss_acqLh ds9_dcr8m ds10_dcr8n ds11_dcr8o ->
                                      let {
                                        z_X7Jg7 :: [OptDescr a_scrPx]
                                        [LclId]
                                        z_X7Jg7 = go_i7Jcj ys_i7Jcq } in
                                      letrec {
                                        go1_X7Jga [Occ=LoopBreaker] :: [Char] -> [OptDescr a_scrPx]
                                        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                                        go1_X7Jga
                                          = \ (ds12_X7Jk3 :: [Char]) ->
                                              case ds12_X7Jk3 of {
                                                [] -> z_X7Jg7;
                                                : y1_X7Jgk ys1_X7Jgm ->
                                                  case y1_X7Jgk of { GHC.Types.C# y2_a5il ->
                                                  case GHC.Prim.eqChar# ds7_Xcr9r y2_a5il of {
                                                    __DEFAULT -> go1_X7Jga ys1_X7Jgm;
                                                    1# ->
                                                      GHC.Types.:
                                                        @ (OptDescr a_scrPx)
                                                        wild6_X27
                                                        (go1_X7Jga ys1_X7Jgm)
                                                  }
                                                  }
                                              }; } in
                                      go1_X7Jga ss_acqLh
                                      }
                                  }; } in
                          let {
                            options_scrjG [Dmd=<S,U>] :: [OptDescr a_scrPx]
                            [LclId]
                            options_scrjG = go_i7Jcj w1_scrPz } in
                          case poly_go1_rcsnl @ a_scrPx options_scrjG of {
                            [] ->
                              case ds5_dcr8Q of wild6_X2A {
                                [] ->
                                  let {
                                    ds8_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                      :: ([a_scrPx], [String], [String], [String])
                                    [LclId]
                                    ds8_scrjC
                                      = case System.Console.GetOpt.$wgetOpt'
                                               @ a_scrPx w_scrPy w1_scrPz args_acqKc
                                        of
                                        { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1 #) ->
                                        (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
                                        } } in
                                  (# case ds8_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                     os_acqZh
                                     },
                                     case ds8_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                     xs_acqZj
                                     },
                                     GHC.Types.:
                                       @ String
                                       (GHC.Types.:
                                          @ Char
                                          lvl21_rcsng
                                          (GHC.Types.: @ Char wild4_Xy (GHC.Types.[] @ Char)))
                                       (case ds8_scrjC of
                                        { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                        us_acqZl
                                        }),
                                     case ds8_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                     es_acqZn
                                     } #);
                                : ipv_scrc0 ipv1_scrc1 ->
                                  let {
                                    ds8_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                      :: ([a_scrPx], [String], [String], [String])
                                    [LclId]
                                    ds8_scrjC
                                      = case System.Console.GetOpt.$wgetOpt'
                                               @ a_scrPx
                                               w_scrPy
                                               w1_scrPz
                                               (GHC.Types.:
                                                  @ [Char]
                                                  (GHC.Types.: @ Char lvl21_rcsng wild6_X2A)
                                                  args_acqKc)
                                        of
                                        { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1 #) ->
                                        (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
                                        } } in
                                  (# case ds8_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                     os_acqZh
                                     },
                                     case ds8_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                     xs_acqZj
                                     },
                                     GHC.Types.:
                                       @ String
                                       (GHC.Types.:
                                          @ Char
                                          lvl21_rcsng
                                          (GHC.Types.: @ Char wild4_Xy (GHC.Types.[] @ Char)))
                                       (case ds8_scrjC of
                                        { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                        us_acqZl
                                        }),
                                     case ds8_scrjC of { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                     es_acqZn
                                     } #)
                              };
                            : ds8_dcr7u ds9_dcr7v ->
                              case ds9_dcr7v of {
                                [] ->
                                  case ds8_dcr7u of {
                                    NoArg a1_acqLl ->
                                      case ds5_dcr8Q of wild8_Xx {
                                        [] ->
                                          let {
                                            ds10_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                              :: ([a_scrPx], [String], [String], [String])
                                            [LclId]
                                            ds10_scrjC
                                              = case System.Console.GetOpt.$wgetOpt'
                                                       @ a_scrPx w_scrPy w1_scrPz args_acqKc
                                                of
                                                { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                     ww4_scrQ1 #) ->
                                                (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
                                                } } in
                                          (# GHC.Types.:
                                               @ a_scrPx
                                               a1_acqLl
                                               (case ds10_scrjC of
                                                { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                                os_acqZh
                                                }),
                                             case ds10_scrjC of
                                             { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                             xs_acqZj
                                             },
                                             case ds10_scrjC of
                                             { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                             us_acqZl
                                             },
                                             case ds10_scrjC of
                                             { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                             es_acqZn
                                             } #);
                                        : ipv_scrc7 ipv1_scrc8 ->
                                          let {
                                            ds10_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                              :: ([a_scrPx], [String], [String], [String])
                                            [LclId]
                                            ds10_scrjC
                                              = case System.Console.GetOpt.$wgetOpt'
                                                       @ a_scrPx
                                                       w_scrPy
                                                       w1_scrPz
                                                       (GHC.Types.:
                                                          @ [Char]
                                                          (GHC.Types.: @ Char lvl21_rcsng wild8_Xx)
                                                          args_acqKc)
                                                of
                                                { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                     ww4_scrQ1 #) ->
                                                (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
                                                } } in
                                          (# GHC.Types.:
                                               @ a_scrPx
                                               a1_acqLl
                                               (case ds10_scrjC of
                                                { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                                os_acqZh
                                                }),
                                             case ds10_scrjC of
                                             { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                             xs_acqZj
                                             },
                                             case ds10_scrjC of
                                             { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                             us_acqZl
                                             },
                                             case ds10_scrjC of
                                             { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                             es_acqZn
                                             } #)
                                      };
                                    ReqArg ds10_dcr7y d_acqLq ->
                                      case ds5_dcr8Q of wild8_X2S {
                                        [] ->
                                          case args_acqKc of {
                                            [] ->
                                              let {
                                                ds11_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                  :: ([a_scrPx], [String], [String], [String])
                                                [LclId]
                                                ds11_scrjC
                                                  = case System.Console.GetOpt.$wgetOpt'
                                                           @ a_scrPx
                                                           w_scrPy
                                                           w1_scrPz
                                                           (GHC.Types.[] @ [Char])
                                                    of
                                                    { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                         ww4_scrQ1 #) ->
                                                    (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
                                                    } } in
                                              (# case ds11_scrjC of
                                                 { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                                 os_acqZh
                                                 },
                                                 case ds11_scrjC of
                                                 { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                                 xs_acqZj
                                                 },
                                                 case ds11_scrjC of
                                                 { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                                 us_acqZl
                                                 },
                                                 GHC.Types.:
                                                   @ String
                                                   (GHC.CString.unpackAppendCString#
                                                      lvl12_rcsn7
                                                      (++
                                                         @ Char
                                                         (GHC.Types.:
                                                            @ Char
                                                            lvl21_rcsng
                                                            (GHC.Types.:
                                                               @ Char
                                                               wild4_Xy
                                                               (GHC.Types.[] @ Char)))
                                                         (GHC.CString.unpackAppendCString#
                                                            lvl14_rcsn9
                                                            (++ @ Char d_acqLq lvl16_rcsnb))))
                                                   (case ds11_scrjC of
                                                    { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                                    es_acqZn
                                                    }) #);
                                            : r_acqLs rest_acqLt ->
                                              let {
                                                ds11_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                  :: ([a_scrPx], [String], [String], [String])
                                                [LclId]
                                                ds11_scrjC
                                                  = case System.Console.GetOpt.$wgetOpt'
                                                           @ a_scrPx w_scrPy w1_scrPz rest_acqLt
                                                    of
                                                    { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                         ww4_scrQ1 #) ->
                                                    (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
                                                    } } in
                                              (# GHC.Types.:
                                                   @ a_scrPx
                                                   (ds10_dcr7y r_acqLs)
                                                   (case ds11_scrjC of
                                                    { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                                    os_acqZh
                                                    }),
                                                 case ds11_scrjC of
                                                 { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                                 xs_acqZj
                                                 },
                                                 case ds11_scrjC of
                                                 { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                                 us_acqZl
                                                 },
                                                 case ds11_scrjC of
                                                 { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                                 es_acqZn
                                                 } #)
                                          };
                                        : ipv_scrcb ipv1_scrcd ->
                                          let {
                                            ds11_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                              :: ([a_scrPx], [String], [String], [String])
                                            [LclId]
                                            ds11_scrjC
                                              = case System.Console.GetOpt.$wgetOpt'
                                                       @ a_scrPx w_scrPy w1_scrPz args_acqKc
                                                of
                                                { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                     ww4_scrQ1 #) ->
                                                (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
                                                } } in
                                          (# GHC.Types.:
                                               @ a_scrPx
                                               (ds10_dcr7y wild8_X2S)
                                               (case ds11_scrjC of
                                                { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                                os_acqZh
                                                }),
                                             case ds11_scrjC of
                                             { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                             xs_acqZj
                                             },
                                             case ds11_scrjC of
                                             { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                             us_acqZl
                                             },
                                             case ds11_scrjC of
                                             { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                             es_acqZn
                                             } #)
                                      };
                                    OptArg f_acqLx ds10_dcr7z ->
                                      case ds5_dcr8Q of wild8_X2S {
                                        [] ->
                                          let {
                                            ds11_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                              :: ([a_scrPx], [String], [String], [String])
                                            [LclId]
                                            ds11_scrjC
                                              = case System.Console.GetOpt.$wgetOpt'
                                                       @ a_scrPx w_scrPy w1_scrPz args_acqKc
                                                of
                                                { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                     ww4_scrQ1 #) ->
                                                (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
                                                } } in
                                          (# GHC.Types.:
                                               @ a_scrPx
                                               (f_acqLx (GHC.Base.Nothing @ String))
                                               (case ds11_scrjC of
                                                { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                                os_acqZh
                                                }),
                                             case ds11_scrjC of
                                             { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                             xs_acqZj
                                             },
                                             case ds11_scrjC of
                                             { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                             us_acqZl
                                             },
                                             case ds11_scrjC of
                                             { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                             es_acqZn
                                             } #);
                                        : ipv_scrcg ipv1_scrch ->
                                          let {
                                            ds11_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                              :: ([a_scrPx], [String], [String], [String])
                                            [LclId]
                                            ds11_scrjC
                                              = case System.Console.GetOpt.$wgetOpt'
                                                       @ a_scrPx w_scrPy w1_scrPz args_acqKc
                                                of
                                                { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                     ww4_scrQ1 #) ->
                                                (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
                                                } } in
                                          (# GHC.Types.:
                                               @ a_scrPx
                                               (f_acqLx (GHC.Base.Just @ [Char] wild8_X2S))
                                               (case ds11_scrjC of
                                                { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                                os_acqZh
                                                }),
                                             case ds11_scrjC of
                                             { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                             xs_acqZj
                                             },
                                             case ds11_scrjC of
                                             { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                             us_acqZl
                                             },
                                             case ds11_scrjC of
                                             { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                             es_acqZn
                                             } #)
                                      }
                                  };
                                : ds10_dcr7w ds11_dcr7x ->
                                  let {
                                    ds12_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                      :: ([a_scrPx], [String], [String], [String])
                                    [LclId]
                                    ds12_scrjC
                                      = case System.Console.GetOpt.$wgetOpt'
                                               @ a_scrPx w_scrPy w1_scrPz args_acqKc
                                        of
                                        { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1 #) ->
                                        (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
                                        } } in
                                  (# case ds12_scrjC of
                                     { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                     os_acqZh
                                     },
                                     case ds12_scrjC of
                                     { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                     xs_acqZj
                                     },
                                     case ds12_scrjC of
                                     { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                     us_acqZl
                                     },
                                     GHC.Types.:
                                       @ String
                                       (usageInfo
                                          @ a_scrPx
                                          (GHC.CString.unpackAppendCString#
                                             lvl12_rcsn7
                                             (++
                                                @ Char
                                                (GHC.Types.:
                                                   @ Char
                                                   lvl21_rcsng
                                                   (GHC.Types.:
                                                      @ Char wild4_Xy (GHC.Types.[] @ Char)))
                                                lvl24_rcsnk))
                                          options_scrjG)
                                       (case ds12_scrjC of
                                        { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                        es_acqZn
                                        }) #)
                              }
                          };
                        '-'# ->
                          case ds5_dcr8Q of wild5_XB {
                            [] ->
                              case w_scrPy of {
                                __DEFAULT ->
                                  (# GHC.Types.[] @ a_scrPx, args_acqKc, GHC.Types.[] @ String,
                                     GHC.Types.[] @ String #);
                                ReturnInOrder f_acqKq ->
                                  (# map @ [Char] @ a_scrPx f_acqKq args_acqKc,
                                     GHC.Types.[] @ String, GHC.Types.[] @ String,
                                     GHC.Types.[] @ String #)
                              };
                            : ipv_scrck ipv1_scrcl ->
                              let {
                                ds8_scrjU [Dmd=<L,U(1*U,1*U)>] :: ([Char], [Char])
                                [LclId]
                                ds8_scrjU
                                  = case GHC.List.$wbreak @ Char lvl20_rcsnf wild5_XB of
                                    { (# ww1_iby3b, ww2_iby3c #) ->
                                    (ww1_iby3b, ww2_iby3c)
                                    } } in
                              let {
                                opt_scrjT :: [Char]
                                [LclId]
                                opt_scrjT
                                  = case ds8_scrjU of { (opt1_acqVI, arg1_acqVK) ->
                                    opt1_acqVI
                                    } } in
                              let {
                                getWith_scrjS [Dmd=<C(S),C(U)>]
                                  :: ([Char] -> String -> Bool) -> [OptDescr a_scrPx]
                                [LclId, Arity=1, Str=<L,1*C1(C(U))>, Unf=OtherCon []]
                                getWith_scrjS
                                  = \ (p_acqKN :: [Char] -> String -> Bool) ->
                                      let {
                                        p1_scrle [Dmd=<L,C(U)>] :: String -> Bool
                                        [LclId]
                                        p1_scrle = p_acqKN opt_scrjT } in
                                      letrec {
                                        go_i7Jcj [Occ=LoopBreaker]
                                          :: [OptDescr a_scrPx] -> [OptDescr a_scrPx]
                                        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                                        go_i7Jcj
                                          = \ (ds9_i7Jck :: [OptDescr a_scrPx]) ->
                                              case ds9_i7Jck of {
                                                [] -> GHC.Types.[] @ (OptDescr a_scrPx);
                                                : y_i7Jcp ys_i7Jcq ->
                                                  case y_i7Jcp of wild7_X2k
                                                  { Option ds10_dcr6k xs_acqKP ds11_dcr6l
                                                           ds12_dcr6m ->
                                                  join {
                                                    exit_X2I :: [OptDescr a_scrPx]
                                                    [LclId[JoinId(0)]]
                                                    exit_X2I = go_i7Jcj ys_i7Jcq } in
                                                  join {
                                                    exit1_X2M :: [OptDescr a_scrPx]
                                                    [LclId[JoinId(0)]]
                                                    exit1_X2M
                                                      = GHC.Types.:
                                                          @ (OptDescr a_scrPx)
                                                          wild7_X2k
                                                          (go_i7Jcj ys_i7Jcq) } in
                                                  joinrec {
                                                    go1_X7Jgr [Occ=LoopBreaker]
                                                      :: [String] -> [OptDescr a_scrPx]
                                                    [LclId[JoinId(1)],
                                                     Arity=1,
                                                     Str=<S,1*U>,
                                                     Unf=OtherCon []]
                                                    go1_X7Jgr (ds13_X7Jgt :: [String])
                                                      = case ds13_X7Jgt of {
                                                          [] -> jump exit_X2I;
                                                          : y1_X7JgB ys1_X7JgD ->
                                                            case p1_scrle y1_X7JgB of {
                                                              False -> jump go1_X7Jgr ys1_X7JgD;
                                                              True -> jump exit1_X2M
                                                            }
                                                        }; } in
                                                  jump go1_X7Jgr xs_acqKP
                                                  }
                                              }; } in
                                      go_i7Jcj w1_scrPz } in
                              join {
                                $j_scrVv [Dmd=<C(S),1*C1(U(U,U,U,U))>]
                                  :: [OptDescr a_scrPx]
                                     -> (# [a_scrPx], [String], [String], [String] #)
                                [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []]
                                $j_scrVv (options_scrjQ [OS=OneShot] :: [OptDescr a_scrPx])
                                  = case poly_go_rcsnj @ a_scrPx options_scrjQ of {
                                      [] ->
                                        let {
                                          ds9_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                            :: ([a_scrPx], [String], [String], [String])
                                          [LclId]
                                          ds9_scrjC
                                            = case System.Console.GetOpt.$wgetOpt'
                                                     @ a_scrPx w_scrPy w1_scrPz args_acqKc
                                              of
                                              { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1 #) ->
                                              (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
                                              } } in
                                        (# case ds9_scrjC of
                                           { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                           os_acqZh
                                           },
                                           case ds9_scrjC of
                                           { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                           xs_acqZj
                                           },
                                           GHC.Types.:
                                             @ String
                                             (GHC.CString.unpackAppendCString# lvl6_rcsn1 wild5_XB)
                                             (case ds9_scrjC of
                                              { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                              us_acqZl
                                              }),
                                           case ds9_scrjC of
                                           { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                           es_acqZn
                                           } #);
                                      : ds9_dcr5g ds10_dcr5h ->
                                        case ds10_dcr5h of {
                                          [] ->
                                            case ds9_dcr5g of {
                                              NoArg a1_acqKS ->
                                                case ds8_scrjU of { (opt1_acqVI, arg1_acqVK) ->
                                                case arg1_acqVK of {
                                                  [] ->
                                                    let {
                                                      ds11_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                        :: ([a_scrPx], [String], [String], [String])
                                                      [LclId]
                                                      ds11_scrjC
                                                        = case System.Console.GetOpt.$wgetOpt'
                                                                 @ a_scrPx
                                                                 w_scrPy
                                                                 w1_scrPz
                                                                 args_acqKc
                                                          of
                                                          { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                               ww4_scrQ1 #) ->
                                                          (ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                           ww4_scrQ1)
                                                          } } in
                                                    (# GHC.Types.:
                                                         @ a_scrPx
                                                         a1_acqKS
                                                         (case ds11_scrjC of
                                                          { (os_acqZh, xs_acqZj, us_acqZl,
                                                             es_acqZn) ->
                                                          os_acqZh
                                                          }),
                                                       case ds11_scrjC of
                                                       { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                                       xs_acqZj
                                                       },
                                                       case ds11_scrjC of
                                                       { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                                       us_acqZl
                                                       },
                                                       case ds11_scrjC of
                                                       { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                                       es_acqZn
                                                       } #);
                                                  : ds11_dcr5k ds12_dcr5l ->
                                                    case ds11_dcr5k of { GHC.Types.C# ds13_dcr5m ->
                                                    case ds13_dcr5m of {
                                                      __DEFAULT ->
                                                        let {
                                                          ds15_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                            :: ([a_scrPx], [String], [String],
                                                                [String])
                                                          [LclId]
                                                          ds15_scrjC
                                                            = case System.Console.GetOpt.$wgetOpt'
                                                                     @ a_scrPx
                                                                     w_scrPy
                                                                     w1_scrPz
                                                                     args_acqKc
                                                              of
                                                              { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                                   ww4_scrQ1 #) ->
                                                              (ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                               ww4_scrQ1)
                                                              } } in
                                                        (# case ds15_scrjC of
                                                           { (os_acqZh, xs_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           os_acqZh
                                                           },
                                                           case ds15_scrjC of
                                                           { (os_acqZh, xs_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           xs_acqZj
                                                           },
                                                           GHC.Types.:
                                                             @ String
                                                             (GHC.CString.unpackAppendCString#
                                                                lvl6_rcsn1 wild5_XB)
                                                             (case ds15_scrjC of
                                                              { (os_acqZh, xs_acqZj, us_acqZl,
                                                                 es_acqZn) ->
                                                              us_acqZl
                                                              }),
                                                           case ds15_scrjC of
                                                           { (os_acqZh, xs_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           es_acqZn
                                                           } #);
                                                      '='# ->
                                                        let {
                                                          ds15_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                            :: ([a_scrPx], [String], [String],
                                                                [String])
                                                          [LclId]
                                                          ds15_scrjC
                                                            = case System.Console.GetOpt.$wgetOpt'
                                                                     @ a_scrPx
                                                                     w_scrPy
                                                                     w1_scrPz
                                                                     args_acqKc
                                                              of
                                                              { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                                   ww4_scrQ1 #) ->
                                                              (ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                               ww4_scrQ1)
                                                              } } in
                                                        (# case ds15_scrjC of
                                                           { (os_acqZh, xs_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           os_acqZh
                                                           },
                                                           case ds15_scrjC of
                                                           { (os_acqZh, xs_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           xs_acqZj
                                                           },
                                                           case ds15_scrjC of
                                                           { (os_acqZh, xs_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           us_acqZl
                                                           },
                                                           GHC.Types.:
                                                             @ String
                                                             (GHC.CString.unpackAppendCString#
                                                                lvl23_rcsni
                                                                (++ @ Char opt_scrjT lvl22_rcsnh))
                                                             (case ds15_scrjC of
                                                              { (os_acqZh, xs_acqZj, us_acqZl,
                                                                 es_acqZn) ->
                                                              es_acqZn
                                                              }) #)
                                                    }
                                                    }
                                                }
                                                };
                                              ReqArg ds11_dcr5n d_acqKV ->
                                                case ds8_scrjU of { (opt1_acqVI, arg1_acqVK) ->
                                                case arg1_acqVK of {
                                                  [] ->
                                                    case args_acqKc of {
                                                      [] ->
                                                        let {
                                                          ds12_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                            :: ([a_scrPx], [String], [String],
                                                                [String])
                                                          [LclId]
                                                          ds12_scrjC
                                                            = case System.Console.GetOpt.$wgetOpt'
                                                                     @ a_scrPx
                                                                     w_scrPy
                                                                     w1_scrPz
                                                                     (GHC.Types.[] @ String)
                                                              of
                                                              { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                                   ww4_scrQ1 #) ->
                                                              (ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                               ww4_scrQ1)
                                                              } } in
                                                        (# case ds12_scrjC of
                                                           { (os_acqZh, xs_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           os_acqZh
                                                           },
                                                           case ds12_scrjC of
                                                           { (os_acqZh, xs_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           xs_acqZj
                                                           },
                                                           case ds12_scrjC of
                                                           { (os_acqZh, xs_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           us_acqZl
                                                           },
                                                           GHC.Types.:
                                                             @ String
                                                             (GHC.CString.unpackAppendCString#
                                                                lvl12_rcsn7
                                                                (++
                                                                   @ Char
                                                                   (GHC.CString.unpackAppendCString#
                                                                      lvl6_rcsn1 opt_scrjT)
                                                                   (GHC.CString.unpackAppendCString#
                                                                      lvl14_rcsn9
                                                                      (++
                                                                         @ Char
                                                                         d_acqKV
                                                                         lvl16_rcsnb))))
                                                             (case ds12_scrjC of
                                                              { (os_acqZh, xs_acqZj, us_acqZl,
                                                                 es_acqZn) ->
                                                              es_acqZn
                                                              }) #);
                                                      : r_acqKX rest_acqKY ->
                                                        let {
                                                          ds12_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                            :: ([a_scrPx], [String], [String],
                                                                [String])
                                                          [LclId]
                                                          ds12_scrjC
                                                            = case System.Console.GetOpt.$wgetOpt'
                                                                     @ a_scrPx
                                                                     w_scrPy
                                                                     w1_scrPz
                                                                     rest_acqKY
                                                              of
                                                              { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                                   ww4_scrQ1 #) ->
                                                              (ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                               ww4_scrQ1)
                                                              } } in
                                                        (# GHC.Types.:
                                                             @ a_scrPx
                                                             (ds11_dcr5n r_acqKX)
                                                             (case ds12_scrjC of
                                                              { (os_acqZh, xs_acqZj, us_acqZl,
                                                                 es_acqZn) ->
                                                              os_acqZh
                                                              }),
                                                           case ds12_scrjC of
                                                           { (os_acqZh, xs_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           xs_acqZj
                                                           },
                                                           case ds12_scrjC of
                                                           { (os_acqZh, xs_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           us_acqZl
                                                           },
                                                           case ds12_scrjC of
                                                           { (os_acqZh, xs_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           es_acqZn
                                                           } #)
                                                    };
                                                  : ds12_dcr5o xs_acqL0 ->
                                                    case ds12_dcr5o of { GHC.Types.C# ds13_dcr5p ->
                                                    case ds13_dcr5p of {
                                                      __DEFAULT ->
                                                        let {
                                                          ds15_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                            :: ([a_scrPx], [String], [String],
                                                                [String])
                                                          [LclId]
                                                          ds15_scrjC
                                                            = case System.Console.GetOpt.$wgetOpt'
                                                                     @ a_scrPx
                                                                     w_scrPy
                                                                     w1_scrPz
                                                                     args_acqKc
                                                              of
                                                              { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                                   ww4_scrQ1 #) ->
                                                              (ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                               ww4_scrQ1)
                                                              } } in
                                                        (# case ds15_scrjC of
                                                           { (os_acqZh, xs1_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           os_acqZh
                                                           },
                                                           case ds15_scrjC of
                                                           { (os_acqZh, xs1_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           xs1_acqZj
                                                           },
                                                           GHC.Types.:
                                                             @ String
                                                             (GHC.CString.unpackAppendCString#
                                                                lvl6_rcsn1 wild5_XB)
                                                             (case ds15_scrjC of
                                                              { (os_acqZh, xs1_acqZj, us_acqZl,
                                                                 es_acqZn) ->
                                                              us_acqZl
                                                              }),
                                                           case ds15_scrjC of
                                                           { (os_acqZh, xs1_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           es_acqZn
                                                           } #);
                                                      '='# ->
                                                        let {
                                                          ds15_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                            :: ([a_scrPx], [String], [String],
                                                                [String])
                                                          [LclId]
                                                          ds15_scrjC
                                                            = case System.Console.GetOpt.$wgetOpt'
                                                                     @ a_scrPx
                                                                     w_scrPy
                                                                     w1_scrPz
                                                                     args_acqKc
                                                              of
                                                              { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                                   ww4_scrQ1 #) ->
                                                              (ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                               ww4_scrQ1)
                                                              } } in
                                                        (# GHC.Types.:
                                                             @ a_scrPx
                                                             (ds11_dcr5n xs_acqL0)
                                                             (case ds15_scrjC of
                                                              { (os_acqZh, xs1_acqZj, us_acqZl,
                                                                 es_acqZn) ->
                                                              os_acqZh
                                                              }),
                                                           case ds15_scrjC of
                                                           { (os_acqZh, xs1_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           xs1_acqZj
                                                           },
                                                           case ds15_scrjC of
                                                           { (os_acqZh, xs1_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           us_acqZl
                                                           },
                                                           case ds15_scrjC of
                                                           { (os_acqZh, xs1_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           es_acqZn
                                                           } #)
                                                    }
                                                    }
                                                }
                                                };
                                              OptArg f_acqL2 ds11_dcr5q ->
                                                case ds8_scrjU of { (opt1_acqVI, arg1_acqVK) ->
                                                case arg1_acqVK of {
                                                  [] ->
                                                    let {
                                                      ds12_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                        :: ([a_scrPx], [String], [String], [String])
                                                      [LclId]
                                                      ds12_scrjC
                                                        = case System.Console.GetOpt.$wgetOpt'
                                                                 @ a_scrPx
                                                                 w_scrPy
                                                                 w1_scrPz
                                                                 args_acqKc
                                                          of
                                                          { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                               ww4_scrQ1 #) ->
                                                          (ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                           ww4_scrQ1)
                                                          } } in
                                                    (# GHC.Types.:
                                                         @ a_scrPx
                                                         (f_acqL2 (GHC.Base.Nothing @ String))
                                                         (case ds12_scrjC of
                                                          { (os_acqZh, xs_acqZj, us_acqZl,
                                                             es_acqZn) ->
                                                          os_acqZh
                                                          }),
                                                       case ds12_scrjC of
                                                       { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                                       xs_acqZj
                                                       },
                                                       case ds12_scrjC of
                                                       { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                                       us_acqZl
                                                       },
                                                       case ds12_scrjC of
                                                       { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                                       es_acqZn
                                                       } #);
                                                  : ds12_dcr5r xs_acqL5 ->
                                                    case ds12_dcr5r of { GHC.Types.C# ds13_dcr5s ->
                                                    case ds13_dcr5s of {
                                                      __DEFAULT ->
                                                        let {
                                                          ds15_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                            :: ([a_scrPx], [String], [String],
                                                                [String])
                                                          [LclId]
                                                          ds15_scrjC
                                                            = case System.Console.GetOpt.$wgetOpt'
                                                                     @ a_scrPx
                                                                     w_scrPy
                                                                     w1_scrPz
                                                                     args_acqKc
                                                              of
                                                              { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                                   ww4_scrQ1 #) ->
                                                              (ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                               ww4_scrQ1)
                                                              } } in
                                                        (# case ds15_scrjC of
                                                           { (os_acqZh, xs1_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           os_acqZh
                                                           },
                                                           case ds15_scrjC of
                                                           { (os_acqZh, xs1_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           xs1_acqZj
                                                           },
                                                           GHC.Types.:
                                                             @ String
                                                             (GHC.CString.unpackAppendCString#
                                                                lvl6_rcsn1 wild5_XB)
                                                             (case ds15_scrjC of
                                                              { (os_acqZh, xs1_acqZj, us_acqZl,
                                                                 es_acqZn) ->
                                                              us_acqZl
                                                              }),
                                                           case ds15_scrjC of
                                                           { (os_acqZh, xs1_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           es_acqZn
                                                           } #);
                                                      '='# ->
                                                        let {
                                                          ds15_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                            :: ([a_scrPx], [String], [String],
                                                                [String])
                                                          [LclId]
                                                          ds15_scrjC
                                                            = case System.Console.GetOpt.$wgetOpt'
                                                                     @ a_scrPx
                                                                     w_scrPy
                                                                     w1_scrPz
                                                                     args_acqKc
                                                              of
                                                              { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                                   ww4_scrQ1 #) ->
                                                              (ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                               ww4_scrQ1)
                                                              } } in
                                                        (# GHC.Types.:
                                                             @ a_scrPx
                                                             (f_acqL2
                                                                (GHC.Base.Just @ [Char] xs_acqL5))
                                                             (case ds15_scrjC of
                                                              { (os_acqZh, xs1_acqZj, us_acqZl,
                                                                 es_acqZn) ->
                                                              os_acqZh
                                                              }),
                                                           case ds15_scrjC of
                                                           { (os_acqZh, xs1_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           xs1_acqZj
                                                           },
                                                           case ds15_scrjC of
                                                           { (os_acqZh, xs1_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           us_acqZl
                                                           },
                                                           case ds15_scrjC of
                                                           { (os_acqZh, xs1_acqZj, us_acqZl,
                                                              es_acqZn) ->
                                                           es_acqZn
                                                           } #)
                                                    }
                                                    }
                                                }
                                                }
                                            };
                                          : ds11_dcr5i ds12_dcr5j ->
                                            let {
                                              ds13_scrjC [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
                                                :: ([a_scrPx], [String], [String], [String])
                                              [LclId]
                                              ds13_scrjC
                                                = case System.Console.GetOpt.$wgetOpt'
                                                         @ a_scrPx w_scrPy w1_scrPz args_acqKc
                                                  of
                                                  { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0,
                                                       ww4_scrQ1 #) ->
                                                  (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
                                                  } } in
                                            (# case ds13_scrjC of
                                               { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                               os_acqZh
                                               },
                                               case ds13_scrjC of
                                               { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                               xs_acqZj
                                               },
                                               case ds13_scrjC of
                                               { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                               us_acqZl
                                               },
                                               GHC.Types.:
                                                 @ String
                                                 (usageInfo
                                                    @ a_scrPx
                                                    (GHC.CString.unpackAppendCString#
                                                       lvl12_rcsn7
                                                       (++
                                                          @ Char
                                                          (GHC.CString.unpackAppendCString#
                                                             lvl6_rcsn1 opt_scrjT)
                                                          lvl24_rcsnk))
                                                    options_scrjQ)
                                                 (case ds13_scrjC of
                                                  { (os_acqZh, xs_acqZj, us_acqZl, es_acqZn) ->
                                                  es_acqZn
                                                  }) #)
                                        }
                                    } } in
                              case getWith_scrjS GHC.Base.eqString of wild6_i8hrH {
                                [] -> jump $j_scrVv (getWith_scrjS lvl19_rcsne);
                                : ds9_i8hNn ds10_i8hNo -> jump $j_scrVv wild6_i8hrH
                              }
                          }
                      }
                      }
                  }
              }
              }
          }
      }
end Rec }

-- RHS size: {terms: 15, types: 39, coercions: 0, joins: 0/0}
getOpt' [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     ArgOrder a
     -> [OptDescr a] -> [String] -> ([a], [String], [String], [String])
[GblId,
 Arity=3,
 Str=<L,1*U><L,U><S,1*U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_scrPx)
                 (w_scrPy [Occ=Once] :: ArgOrder a_scrPx)
                 (w1_scrPz [Occ=Once] :: [OptDescr a_scrPx])
                 (w2_scrPA [Occ=Once] :: [String]) ->
                 case System.Console.GetOpt.$wgetOpt'
                        @ a_scrPx w_scrPy w1_scrPz w2_scrPA
                 of
                 { (# ww1_scrPY [Occ=Once], ww2_scrPZ [Occ=Once],
                      ww3_scrQ0 [Occ=Once], ww4_scrQ1 [Occ=Once] #) ->
                 (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
                 }}]
getOpt'
  = \ (@ a_scrPx)
      (w_scrPy :: ArgOrder a_scrPx)
      (w1_scrPz :: [OptDescr a_scrPx])
      (w2_scrPA :: [String]) ->
      case System.Console.GetOpt.$wgetOpt'
             @ a_scrPx w_scrPy w1_scrPz w2_scrPA
      of
      { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1 #) ->
      (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
      }

-- RHS size: {terms: 33, types: 111, coercions: 0, joins: 0/1}
getOpt [InlPrag=NOUSERINLINE[0]]
  :: forall a.
     ArgOrder a -> [OptDescr a] -> [String] -> ([a], [String], [String])
[GblId,
 Arity=3,
 Str=<L,1*U><L,U><L,1*U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (@ a_scrPF)
                 (w_scrPG [Occ=Once] :: ArgOrder a_scrPF)
                 (w1_scrPH [Occ=Once] :: [OptDescr a_scrPF])
                 (w2_scrPI [Occ=Once] :: [String]) ->
                 let {
                   ds_scrjy [Dmd=<L,U(U,U,U,U)>]
                     :: ([a_scrPF], [String], [String], [String])
                   [LclId]
                   ds_scrjy
                     = case System.Console.GetOpt.$wgetOpt'
                              @ a_scrPF w_scrPG w1_scrPH w2_scrPI
                       of
                       { (# ww1_scrPY [Occ=Once], ww2_scrPZ [Occ=Once],
                            ww3_scrQ0 [Occ=Once], ww4_scrQ1 [Occ=Once] #) ->
                       (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
                       } } in
                 (case ds_scrjy of
                  { (os_acr09 [Occ=Once], _ [Occ=Dead], _ [Occ=Dead],
                     _ [Occ=Dead]) ->
                  os_acr09
                  },
                  case ds_scrjy of
                  { (_ [Occ=Dead], xs_acr0b [Occ=Once], _ [Occ=Dead],
                     _ [Occ=Dead]) ->
                  xs_acr0b
                  },
                  case ds_scrjy of
                  { (_ [Occ=Dead], _ [Occ=Dead], us_acr0d [Occ=Once],
                     es_acr0f [Occ=Once]) ->
                  ++ @ [Char] es_acr0f (map @ [Char] @ [Char] errUnrec us_acr0d)
                  })}]
getOpt
  = \ (@ a_scrPF)
      (w_scrPG :: ArgOrder a_scrPF)
      (w1_scrPH :: [OptDescr a_scrPF])
      (w2_scrPI :: [String]) ->
      let {
        ds_scrjy [Dmd=<L,U(1*U,1*U,1*U,1*U)>]
          :: ([a_scrPF], [String], [String], [String])
        [LclId]
        ds_scrjy
          = case System.Console.GetOpt.$wgetOpt'
                   @ a_scrPF w_scrPG w1_scrPH w2_scrPI
            of
            { (# ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1 #) ->
            (ww1_scrPY, ww2_scrPZ, ww3_scrQ0, ww4_scrQ1)
            } } in
      (case ds_scrjy of { (os_acr09, xs_acr0b, us_acr0d, es_acr0f) ->
       os_acr09
       },
       case ds_scrjy of { (os_acr09, xs_acr0b, us_acr0d, es_acr0f) ->
       xs_acr0b
       },
       case ds_scrjy of { (os_acr09, xs_acr0b, us_acr0d, es_acr0f) ->
       ++ @ [Char] es_acr0f (map @ [Char] @ [Char] errUnrec us_acr0d)
       })

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$trModule4 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
System.Console.GetOpt.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Console.GetOpt.$trModule3
  = GHC.Types.TrNameS System.Console.GetOpt.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$trModule2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 70 0}]
System.Console.GetOpt.$trModule2 = "System.Console.GetOpt"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Console.GetOpt.$trModule1
  = GHC.Types.TrNameS System.Console.GetOpt.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$trModule :: GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
System.Console.GetOpt.$trModule
  = GHC.Types.Module
      System.Console.GetOpt.$trModule3 System.Console.GetOpt.$trModule1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_rcsnm :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep_rcsnm
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcChar (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep1_rcsnn :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep1_rcsnn
  = GHC.Types.:
      @ GHC.Types.KindRep $krep_rcsnm (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep2_rcsno :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep2_rcsno
  = GHC.Types.KindRepTyConApp GHC.Types.$tc[] $krep1_rcsnn

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep3_rcsnp :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep3_rcsnp
  = GHC.Types.:
      @ GHC.Types.KindRep $krep2_rcsno (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep4_rcsnq :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep4_rcsnq
  = GHC.Types.KindRepTyConApp GHC.Base.$tcMaybe $krep3_rcsnp

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep5_rcsnr :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep5_rcsnr
  = GHC.Types.KindRepTyConApp GHC.Types.$tc[] $krep3_rcsnp

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
$krep6_rcsns :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep6_rcsns = GHC.Types.KindRepVar 0#

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep7_rcsnt :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep7_rcsnt = GHC.Types.KindRepFun $krep2_rcsno $krep6_rcsns

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep8_rcsnu :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep8_rcsnu = GHC.Types.KindRepFun $krep4_rcsnq $krep6_rcsns

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tcArgOrder2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
System.Console.GetOpt.$tcArgOrder2 = "ArgOrder"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tcArgOrder1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Console.GetOpt.$tcArgOrder1
  = GHC.Types.TrNameS System.Console.GetOpt.$tcArgOrder2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tcArgOrder :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
System.Console.GetOpt.$tcArgOrder
  = GHC.Types.TyCon
      2821249393238363172##
      5857765806309969278##
      System.Console.GetOpt.$trModule
      System.Console.GetOpt.$tcArgOrder1
      0#
      GHC.Types.krep$*Arr*

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep9_rcsnv :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep9_rcsnv
  = GHC.Types.:
      @ GHC.Types.KindRep $krep6_rcsns (GHC.Types.[] @ GHC.Types.KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'Permute1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
System.Console.GetOpt.$tc'Permute1
  = GHC.Types.KindRepTyConApp
      System.Console.GetOpt.$tcArgOrder $krep9_rcsnv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'RequireOrder2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
System.Console.GetOpt.$tc'RequireOrder2 = "'RequireOrder"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'RequireOrder1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Console.GetOpt.$tc'RequireOrder1
  = GHC.Types.TrNameS System.Console.GetOpt.$tc'RequireOrder2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'RequireOrder :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
System.Console.GetOpt.$tc'RequireOrder
  = GHC.Types.TyCon
      16641478699741903091##
      17241976392395699271##
      System.Console.GetOpt.$trModule
      System.Console.GetOpt.$tc'RequireOrder1
      1#
      System.Console.GetOpt.$tc'Permute1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'Permute3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
System.Console.GetOpt.$tc'Permute3 = "'Permute"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'Permute2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Console.GetOpt.$tc'Permute2
  = GHC.Types.TrNameS System.Console.GetOpt.$tc'Permute3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'Permute :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
System.Console.GetOpt.$tc'Permute
  = GHC.Types.TyCon
      16188869008381252759##
      7304126484053682933##
      System.Console.GetOpt.$trModule
      System.Console.GetOpt.$tc'Permute2
      1#
      System.Console.GetOpt.$tc'Permute1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'ReturnInOrder1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
System.Console.GetOpt.$tc'ReturnInOrder1
  = GHC.Types.KindRepFun
      $krep7_rcsnt System.Console.GetOpt.$tc'Permute1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'ReturnInOrder3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
System.Console.GetOpt.$tc'ReturnInOrder3 = "'ReturnInOrder"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'ReturnInOrder2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Console.GetOpt.$tc'ReturnInOrder2
  = GHC.Types.TrNameS System.Console.GetOpt.$tc'ReturnInOrder3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'ReturnInOrder :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
System.Console.GetOpt.$tc'ReturnInOrder
  = GHC.Types.TyCon
      11429107017830306662##
      977062333259332084##
      System.Console.GetOpt.$trModule
      System.Console.GetOpt.$tc'ReturnInOrder2
      1#
      System.Console.GetOpt.$tc'ReturnInOrder1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tcArgDescr2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
System.Console.GetOpt.$tcArgDescr2 = "ArgDescr"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tcArgDescr1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Console.GetOpt.$tcArgDescr1
  = GHC.Types.TrNameS System.Console.GetOpt.$tcArgDescr2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tcArgDescr :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
System.Console.GetOpt.$tcArgDescr
  = GHC.Types.TyCon
      5371299798435897528##
      4777542234116424858##
      System.Console.GetOpt.$trModule
      System.Console.GetOpt.$tcArgDescr1
      0#
      GHC.Types.krep$*Arr*

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep10_rcsnw :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep10_rcsnw
  = GHC.Types.KindRepTyConApp
      System.Console.GetOpt.$tcArgDescr $krep9_rcsnv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'NoArg1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
System.Console.GetOpt.$tc'NoArg1
  = GHC.Types.KindRepFun $krep6_rcsns $krep10_rcsnw

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'NoArg3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
System.Console.GetOpt.$tc'NoArg3 = "'NoArg"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'NoArg2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Console.GetOpt.$tc'NoArg2
  = GHC.Types.TrNameS System.Console.GetOpt.$tc'NoArg3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'NoArg :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
System.Console.GetOpt.$tc'NoArg
  = GHC.Types.TyCon
      4447437708857855473##
      9938854276741266046##
      System.Console.GetOpt.$trModule
      System.Console.GetOpt.$tc'NoArg2
      1#
      System.Console.GetOpt.$tc'NoArg1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep11_rcsnx :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep11_rcsnx = GHC.Types.KindRepFun $krep2_rcsno $krep10_rcsnw

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'OptArg1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
System.Console.GetOpt.$tc'OptArg1
  = GHC.Types.KindRepFun $krep8_rcsnu $krep11_rcsnx

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'OptArg3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
System.Console.GetOpt.$tc'OptArg3 = "'OptArg"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'OptArg2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Console.GetOpt.$tc'OptArg2
  = GHC.Types.TrNameS System.Console.GetOpt.$tc'OptArg3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'OptArg :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
System.Console.GetOpt.$tc'OptArg
  = GHC.Types.TyCon
      2223072509852051452##
      11632957215606156764##
      System.Console.GetOpt.$trModule
      System.Console.GetOpt.$tc'OptArg2
      1#
      System.Console.GetOpt.$tc'OptArg1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'ReqArg1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
System.Console.GetOpt.$tc'ReqArg1
  = GHC.Types.KindRepFun $krep7_rcsnt $krep11_rcsnx

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'ReqArg3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
System.Console.GetOpt.$tc'ReqArg3 = "'ReqArg"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'ReqArg2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Console.GetOpt.$tc'ReqArg2
  = GHC.Types.TrNameS System.Console.GetOpt.$tc'ReqArg3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'ReqArg :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
System.Console.GetOpt.$tc'ReqArg
  = GHC.Types.TyCon
      16427330633826478147##
      15179110347223027838##
      System.Console.GetOpt.$trModule
      System.Console.GetOpt.$tc'ReqArg2
      1#
      System.Console.GetOpt.$tc'ReqArg1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tcOptDescr2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
System.Console.GetOpt.$tcOptDescr2 = "OptDescr"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tcOptDescr1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Console.GetOpt.$tcOptDescr1
  = GHC.Types.TrNameS System.Console.GetOpt.$tcOptDescr2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tcOptDescr :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
System.Console.GetOpt.$tcOptDescr
  = GHC.Types.TyCon
      5602371009437266142##
      11022077518484673144##
      System.Console.GetOpt.$trModule
      System.Console.GetOpt.$tcOptDescr1
      0#
      GHC.Types.krep$*Arr*

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep12_rcsny :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep12_rcsny
  = GHC.Types.KindRepTyConApp
      System.Console.GetOpt.$tcOptDescr $krep9_rcsnv

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep13_rcsnz :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep13_rcsnz = GHC.Types.KindRepFun $krep2_rcsno $krep12_rcsny

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep14_rcsnA :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep14_rcsnA = GHC.Types.KindRepFun $krep10_rcsnw $krep13_rcsnz

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep15_rcsnB :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep15_rcsnB = GHC.Types.KindRepFun $krep5_rcsnr $krep14_rcsnA

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'Option1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
System.Console.GetOpt.$tc'Option1
  = GHC.Types.KindRepFun $krep2_rcsno $krep15_rcsnB

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'Option3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
System.Console.GetOpt.$tc'Option3 = "'Option"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'Option2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Console.GetOpt.$tc'Option2
  = GHC.Types.TrNameS System.Console.GetOpt.$tc'Option3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'Option :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
System.Console.GetOpt.$tc'Option
  = GHC.Types.TyCon
      10066039264625497029##
      5674636120141944492##
      System.Console.GetOpt.$trModule
      System.Console.GetOpt.$tc'Option2
      1#
      System.Console.GetOpt.$tc'Option1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tcOptKind2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
System.Console.GetOpt.$tcOptKind2 = "OptKind"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tcOptKind1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Console.GetOpt.$tcOptKind1
  = GHC.Types.TrNameS System.Console.GetOpt.$tcOptKind2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tcOptKind :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
System.Console.GetOpt.$tcOptKind
  = GHC.Types.TyCon
      5196380470096609574##
      4174335291028142741##
      System.Console.GetOpt.$trModule
      System.Console.GetOpt.$tcOptKind1
      0#
      GHC.Types.krep$*Arr*

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'EndOfOpts1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
System.Console.GetOpt.$tc'EndOfOpts1
  = GHC.Types.KindRepTyConApp
      System.Console.GetOpt.$tcOptKind $krep9_rcsnv

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'EndOfOpts3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
System.Console.GetOpt.$tc'EndOfOpts3 = "'EndOfOpts"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'EndOfOpts2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Console.GetOpt.$tc'EndOfOpts2
  = GHC.Types.TrNameS System.Console.GetOpt.$tc'EndOfOpts3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'EndOfOpts :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
System.Console.GetOpt.$tc'EndOfOpts
  = GHC.Types.TyCon
      16241379069650497856##
      7399561775253491405##
      System.Console.GetOpt.$trModule
      System.Console.GetOpt.$tc'EndOfOpts2
      1#
      System.Console.GetOpt.$tc'EndOfOpts1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'Opt1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
System.Console.GetOpt.$tc'Opt1
  = GHC.Types.KindRepFun
      $krep6_rcsns System.Console.GetOpt.$tc'EndOfOpts1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'Opt3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
System.Console.GetOpt.$tc'Opt3 = "'Opt"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'Opt2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Console.GetOpt.$tc'Opt2
  = GHC.Types.TrNameS System.Console.GetOpt.$tc'Opt3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'Opt :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
System.Console.GetOpt.$tc'Opt
  = GHC.Types.TyCon
      2387467460439073880##
      875868993959501908##
      System.Console.GetOpt.$trModule
      System.Console.GetOpt.$tc'Opt2
      1#
      System.Console.GetOpt.$tc'Opt1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'NonOpt1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
System.Console.GetOpt.$tc'NonOpt1
  = GHC.Types.KindRepFun
      $krep2_rcsno System.Console.GetOpt.$tc'EndOfOpts1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'UnreqOpt2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
System.Console.GetOpt.$tc'UnreqOpt2 = "'UnreqOpt"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'UnreqOpt1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Console.GetOpt.$tc'UnreqOpt1
  = GHC.Types.TrNameS System.Console.GetOpt.$tc'UnreqOpt2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'UnreqOpt :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
System.Console.GetOpt.$tc'UnreqOpt
  = GHC.Types.TyCon
      6747281843324563502##
      13162655807375334605##
      System.Console.GetOpt.$trModule
      System.Console.GetOpt.$tc'UnreqOpt1
      1#
      System.Console.GetOpt.$tc'NonOpt1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'NonOpt3 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
System.Console.GetOpt.$tc'NonOpt3 = "'NonOpt"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'NonOpt2 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Console.GetOpt.$tc'NonOpt2
  = GHC.Types.TrNameS System.Console.GetOpt.$tc'NonOpt3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'NonOpt :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
System.Console.GetOpt.$tc'NonOpt
  = GHC.Types.TyCon
      17187900375792953920##
      18196243003688324985##
      System.Console.GetOpt.$trModule
      System.Console.GetOpt.$tc'NonOpt2
      1#
      System.Console.GetOpt.$tc'NonOpt1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'OptErr2 :: GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
System.Console.GetOpt.$tc'OptErr2 = "'OptErr"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'OptErr1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
System.Console.GetOpt.$tc'OptErr1
  = GHC.Types.TrNameS System.Console.GetOpt.$tc'OptErr2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
System.Console.GetOpt.$tc'OptErr :: GHC.Types.TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
System.Console.GetOpt.$tc'OptErr
  = GHC.Types.TyCon
      13165663139815598038##
      5639435123785572420##
      System.Console.GetOpt.$trModule
      System.Console.GetOpt.$tc'OptErr1
      1#
      System.Console.GetOpt.$tc'NonOpt1


